<Type Name="EventParameterType" FullName="System.Speech.Synthesis.TtsEngine.EventParameterType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8400458ce175b78e8dd9477c646c184c735c0185" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="70436203" /></Metadata><TypeSignature Language="C#" Value="public enum EventParameterType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed EventParameterType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.EventParameterType" />
  <TypeSignature Language="VB.NET" Value="Public Enum EventParameterType" />
  <TypeSignature Language="C++ CLI" Value="public enum class EventParameterType" />
  <TypeSignature Language="F#" Value="type EventParameterType = " />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>枚举传递到语音合成事件的数据指针的类型。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

`EventParameterType`构造对象时使用枚举 <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> 。 `EventParameterType`作为参数传递给 `parameterType` 构造函数的枚举成员，用于 <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> 指定 `param2` 构造函数的自变量 (必须为 <xref:System.IntPtr>) 的解释方式。  
  
的选择取决于所 `EventParameterType` 请求的事件类型，由的成员指定 <xref:System.Speech.Synthesis.TtsEngine.TtsEventId?displayProperty=nameWithType> 。  
  
有关如何使用的详细信息 `EventParameterType` ，请参阅文档 <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>  
  
> [!NOTE]
>  目前，使用命名空间的成员编写的托管合成语音引擎的实例 <xref:System.Speech.Synthesis> 不能在构造后更改资源。    
  
## Examples  
 下面的示例是继承自的自定义语音合成实现的一部分 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> ，并使用 <xref:System.Speech.Synthesis.TtsEngine.TextFragment> 、 <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> 、 <xref:System.Speech.Synthesis.TtsEngine.FragmentState> 和 <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> 。  
  
 的实现 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  
  
1.  接收实例的数组 <xref:System.Speech.Synthesis.TtsEngine.TextFragment> ，并创建 <xref:System.Speech.Synthesis.TtsEngine.TextFragment> 要 `Speak` 在基础合成引擎上传递给方法的新的实例数组。  
  
2.  如果在 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> <xref:System.Speech.Synthesis.TtsEngine.FragmentState> 每个实例的属性返回的的属性中找到枚举值 <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> ，则 <xref:System.Speech.Synthesis.TtsEngine.TextFragment> <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak> 实现  
  
    -   将 Americanism 转换为要口述的文本中的 Britishisms。  
  
    -   如果 <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> 提供给实现的接口上的属性支持 <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> 事件类型，则 <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> 使用实例创建事件来驱动合成器进度计量。  
  
         上的参数 <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> （包括 <xref:System.Speech.Synthesis.TtsEngine.EventParameterType> 返回的成员值） <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> 用于记录通过方法生成的事件 `LogSpeechEvent` 。  
  
3.  然后，将使用修改后的数组调用语音呈现引擎 <xref:System.Speech.Synthesis.TtsEngine.TextFragment> 。  
  
```csharp
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
  </Docs>
  <Members>
    <Member MemberName="Object">
      <MemberSignature Language="C#" Value="Object" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.EventParameterType Object = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Object" />
      <MemberSignature Language="VB.NET" Value="Object" />
      <MemberSignature Language="C++ CLI" Value="Object" />
      <MemberSignature Language="F#" Value="Object = 2" Usage="System.Speech.Synthesis.TtsEngine.EventParameterType.Object" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.EventParameterType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>当前不支持。</summary>
      </Docs>
    </Member>
    <Member MemberName="Pointer">
      <MemberSignature Language="C#" Value="Pointer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.EventParameterType Pointer = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Pointer" />
      <MemberSignature Language="VB.NET" Value="Pointer" />
      <MemberSignature Language="C++ CLI" Value="Pointer" />
      <MemberSignature Language="F#" Value="Pointer = 3" Usage="System.Speech.Synthesis.TtsEngine.EventParameterType.Pointer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.EventParameterType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>当前不支持。</summary>
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="String" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.EventParameterType String = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.EventParameterType.String" />
      <MemberSignature Language="VB.NET" Value="String" />
      <MemberSignature Language="C++ CLI" Value="String" />
      <MemberSignature Language="F#" Value="String = 4" Usage="System.Speech.Synthesis.TtsEngine.EventParameterType.String" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.EventParameterType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>指示传到 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 的 <paramref name="param2" /> 参数是使用引用 <see langword="System.IntPtr" /> 的对象的 <see langword="System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni" /> 创建的 <see langword="System.String" />；<paramref name="param1" /> 可以具有任何值。</summary>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="Token" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.EventParameterType Token = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Token" />
      <MemberSignature Language="VB.NET" Value="Token" />
      <MemberSignature Language="C++ CLI" Value="Token" />
      <MemberSignature Language="F#" Value="Token = 1" Usage="System.Speech.Synthesis.TtsEngine.EventParameterType.Token" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.EventParameterType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>指示 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 的 <paramref name="param2" /> 参数是使用 <see cref="Overload:System.Runtime.InteropServices.Marshal.PtrToStructure" /> 创建的 <see cref="T:System.IntPtr" />，它引用 Windows 桌面语音技术令牌，该令牌是一个表示资源的 Windows 桌面语音技术对象，如语音 (<see cref="T:System.Speech.Synthesis.VoiceInfo" />)。 <paramref name="param1" /> 可能具有任何价值。</summary>
      </Docs>
    </Member>
    <Member MemberName="Undefined">
      <MemberSignature Language="C#" Value="Undefined" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.EventParameterType Undefined = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Undefined" />
      <MemberSignature Language="VB.NET" Value="Undefined" />
      <MemberSignature Language="C++ CLI" Value="Undefined" />
      <MemberSignature Language="F#" Value="Undefined = 0" Usage="System.Speech.Synthesis.TtsEngine.EventParameterType.Undefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.EventParameterType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>指示传到 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 的参数 <paramref name="param2" /> 未定义。 通常，忽略 <paramref name="param1" /> 和 <paramref name="param2" />。 但是，如果 <see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId" /> 为 <see cref="F:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary" />，则可以生成进度条事件。 <paramref name="param1" /> 应为包含当前单词长度的整数，<paramref name="param2" /> 为引用包含当前单词偏移量的整数的 <see cref="T:System.IntPtr" />。</summary>
      </Docs>
    </Member>
  </Members>
</Type>
