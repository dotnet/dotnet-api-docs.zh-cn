<Type Name="ExportProvider" FullName="System.ComponentModel.Composition.Hosting.ExportProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e574539860cc0fe5e2e4a32b3ffa0564898f1353" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100290586" /></Metadata><TypeSignature Language="C#" Value="public abstract class ExportProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExportProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.ExportProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExportProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExportProvider abstract" />
  <TypeSignature Language="F#" Value="type ExportProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="89331-101">检索与指定的 <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> 对象相匹配的导出。</span><span class="sxs-lookup"><span data-stu-id="89331-101">Retrieves exports which match a specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> object.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExportProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExportProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="89331-102">初始化 <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="89331-102">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; ExportsChanged;" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; ExportsChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ExportsChanged As EventHandler(Of ExportsChangeEventArgs) " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::ComponentModel::Composition::Hosting::ExportsChangeEventArgs ^&gt; ^ ExportsChanged;" />
      <MemberSignature Language="F#" Value="member this.ExportsChanged : EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; " Usage="member this.ExportsChanged : System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; " />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt;? ExportsChanged;" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberSignature Language="VB.NET" Value="Public Event ExportsChanged As EventHandler(Of ExportsChangeEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="89331-103">当 <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> 中的导出更改时发生。</span><span class="sxs-lookup"><span data-stu-id="89331-103">Occurs when the exports in the <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> change.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportsChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; ExportsChanging;" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; ExportsChanging" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ExportsChanging As EventHandler(Of ExportsChangeEventArgs) " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::ComponentModel::Composition::Hosting::ExportsChangeEventArgs ^&gt; ^ ExportsChanging;" />
      <MemberSignature Language="F#" Value="member this.ExportsChanging : EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; " Usage="member this.ExportsChanging : System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; " />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt;? ExportsChanging;" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberSignature Language="VB.NET" Value="Public Event ExportsChanging As EventHandler(Of ExportsChangeEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="89331-104">当提供的导出正在更改时发生。</span><span class="sxs-lookup"><span data-stu-id="89331-104">Occurs when the provided exports are changing.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExport&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="89331-105">获取指定的导出。</span><span class="sxs-lookup"><span data-stu-id="89331-105">Gets a specified export.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExport&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Lazy&lt;T&gt; GetExport&lt;T&gt; ();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Lazy`1&lt;!!T&gt; GetExport&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of T) () As Lazy(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; Lazy&lt;T&gt; ^ GetExport();" />
      <MemberSignature Language="F#" Value="member this.GetExport : unit -&gt; Lazy&lt;'T&gt;" Usage="exportProvider.GetExport " />
      <MemberSignature Language="C#" Value="public Lazy&lt;T&gt;? GetExport&lt;T&gt; ();" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="89331-106">要返回的 <see cref="T:System.Lazy`1" /> 对象的类型参数。</span><span class="sxs-lookup"><span data-stu-id="89331-106">The type parameter of the <see cref="T:System.Lazy`1" /> object to return.</span></span> <span data-ttu-id="89331-107">协定名称也派生自此类型参数。</span><span class="sxs-lookup"><span data-stu-id="89331-107">The contract name is also derived from this type parameter.</span></span></typeparam>
        <summary><span data-ttu-id="89331-108">返回具有从指定的类型参数派生的协定名称的导出。</span><span class="sxs-lookup"><span data-stu-id="89331-108">Returns the export with the contract name derived from the specified type parameter.</span></span> <span data-ttu-id="89331-109">如果不是正好有一个匹配的导出，则将引发异常。</span><span class="sxs-lookup"><span data-stu-id="89331-109">If there is not exactly one matching export, an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="89331-110">具有从指定的类型参数派生的协定名称的导出。</span><span class="sxs-lookup"><span data-stu-id="89331-110">The export with the contract name derived from the specified type parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89331-111">协定名称是对调用方法的结果 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> `T` 。</span><span class="sxs-lookup"><span data-stu-id="89331-111">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="89331-112">通过使用 <xref:System.StringComparer.Ordinal%2A> 属性执行区分大小写的非语言比较，对协定名称进行比较。</span><span class="sxs-lookup"><span data-stu-id="89331-112">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><span data-ttu-id="89331-113">有零个 <see cref="T:System.Lazy`1" /> 对象具有从 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象中的 <paramref name="T" /> 派生的协定名称。</span><span class="sxs-lookup"><span data-stu-id="89331-113">There are zero <see cref="T:System.Lazy`1" /> objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span></span>  
  
<span data-ttu-id="89331-114">- 或 -</span><span class="sxs-lookup"><span data-stu-id="89331-114">-or-</span></span> 
<span data-ttu-id="89331-115">有多个 <see cref="T:System.Lazy`1" /> 对象具有从 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象中的 <paramref name="T" /> 派生的协定名称。</span><span class="sxs-lookup"><span data-stu-id="89331-115">There is more than one <see cref="T:System.Lazy`1" /> object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="89331-116"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="89331-116">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExport&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Lazy&lt;T&gt; GetExport&lt;T&gt; (string contractName);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Lazy`1&lt;!!T&gt; GetExport&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of T) (contractName As String) As Lazy(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; Lazy&lt;T&gt; ^ GetExport(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExport : string -&gt; Lazy&lt;'T&gt;" Usage="exportProvider.GetExport contractName" />
      <MemberSignature Language="C#" Value="public Lazy&lt;T&gt;? GetExport&lt;T&gt; (string? contractName);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="89331-117">要返回的 <see cref="T:System.Lazy`1" /> 对象的类型参数。</span><span class="sxs-lookup"><span data-stu-id="89331-117">The type parameter of the <see cref="T:System.Lazy`1" /> object to return.</span></span></typeparam>
        <param name="contractName"><span data-ttu-id="89331-118">要返回的 <see cref="T:System.Lazy`1" /> 对象的协定名称，或者为 <see langword="null" /> 或空字符串 ("") 以使用默认的协定名称。</span><span class="sxs-lookup"><span data-stu-id="89331-118">The contract name of the <see cref="T:System.Lazy`1" /> object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="89331-119">返回具有指定的协定名称的导出。</span><span class="sxs-lookup"><span data-stu-id="89331-119">Returns the export with the specified contract name.</span></span> <span data-ttu-id="89331-120">如果不是正好有一个匹配的导出，则将引发异常。</span><span class="sxs-lookup"><span data-stu-id="89331-120">If there is not exactly one matching export, an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="89331-121">具有指定的协定名称的导出。</span><span class="sxs-lookup"><span data-stu-id="89331-121">The export with the specified contract name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89331-122">默认协定名称是对调用方法的结果 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> `T` 。</span><span class="sxs-lookup"><span data-stu-id="89331-122">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="89331-123">通过使用 <xref:System.StringComparer.Ordinal%2A> 属性执行区分大小写的非语言比较，对协定名称进行比较。</span><span class="sxs-lookup"><span data-stu-id="89331-123">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><span data-ttu-id="89331-124">有零个 <see cref="T:System.Lazy`1" /> 对象具有从 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象中的 <paramref name="T" /> 派生的协定名称。</span><span class="sxs-lookup"><span data-stu-id="89331-124">There are zero <see cref="T:System.Lazy`1" /> objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span></span>  
  
<span data-ttu-id="89331-125">- 或 -</span><span class="sxs-lookup"><span data-stu-id="89331-125">-or-</span></span> 
<span data-ttu-id="89331-126">有多个 <see cref="T:System.Lazy`1" /> 对象具有从 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象中的 <paramref name="T" /> 派生的协定名称。</span><span class="sxs-lookup"><span data-stu-id="89331-126">There is more than one <see cref="T:System.Lazy`1" /> object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="89331-127"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="89331-127">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExport&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public Lazy&lt;T,TMetadataView&gt; GetExport&lt;T,TMetadataView&gt; ();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Lazy`2&lt;!!T, !!TMetadataView&gt; GetExport&lt;T, TMetadataView&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of T, TMetadataView) () As Lazy(Of T, TMetadataView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; Lazy&lt;T, TMetadataView&gt; ^ GetExport();" />
      <MemberSignature Language="F#" Value="member this.GetExport : unit -&gt; Lazy&lt;'T, 'MetadataView&gt;" Usage="exportProvider.GetExport " />
      <MemberSignature Language="C#" Value="public Lazy&lt;T,TMetadataView&gt;? GetExport&lt;T,TMetadataView&gt; ();" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;T,TMetadataView&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="89331-128">要返回的 <see cref="T:System.Lazy`2" /> 对象的类型参数。</span><span class="sxs-lookup"><span data-stu-id="89331-128">The type parameter of the <see cref="T:System.Lazy`2" /> object to return.</span></span> <span data-ttu-id="89331-129">协定名称也派生自此类型参数。</span><span class="sxs-lookup"><span data-stu-id="89331-129">The contract name is also derived from this type parameter.</span></span></typeparam>
        <typeparam name="TMetadataView"><span data-ttu-id="89331-130">要返回的 <see cref="T:System.Lazy`2" /> 对象的元数据视图的类型。</span><span class="sxs-lookup"><span data-stu-id="89331-130">The type of the metadata view of the <see cref="T:System.Lazy`2" /> object to return.</span></span></typeparam>
        <summary><span data-ttu-id="89331-131">返回具有从指定的类型参数派生的协定名称的导出。</span><span class="sxs-lookup"><span data-stu-id="89331-131">Returns the export with the contract name derived from the specified type parameter.</span></span> <span data-ttu-id="89331-132">如果不是正好有一个匹配的导出，则将引发异常。</span><span class="sxs-lookup"><span data-stu-id="89331-132">If there is not exactly one matching export, an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="89331-133">System.Lazy\`2</span><span class="sxs-lookup"><span data-stu-id="89331-133">System.Lazy\`2</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89331-134">协定名称是对调用方法的结果 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> `T` 。</span><span class="sxs-lookup"><span data-stu-id="89331-134">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="89331-135">通过使用 <xref:System.StringComparer.Ordinal%2A> 属性执行区分大小写的非语言比较，对协定名称进行比较。</span><span class="sxs-lookup"><span data-stu-id="89331-135">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><span data-ttu-id="89331-136">有零个 <see cref="T:System.Lazy`2" /> 对象具有从 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象中的 <paramref name="T" /> 派生的协定名称。</span><span class="sxs-lookup"><span data-stu-id="89331-136">There are zero <see cref="T:System.Lazy`2" /> objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span></span>  
  
<span data-ttu-id="89331-137">- 或 -</span><span class="sxs-lookup"><span data-stu-id="89331-137">-or-</span></span> 
<span data-ttu-id="89331-138">有多个 <see cref="T:System.Lazy`2" /> 对象具有从 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象中的 <paramref name="T" /> 派生的协定名称。</span><span class="sxs-lookup"><span data-stu-id="89331-138">There is more than one <see cref="T:System.Lazy`2" /> object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="89331-139"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="89331-139">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="89331-140"><paramref name="TMetadataView" /> 不是有效的元数据视图类型。</span><span class="sxs-lookup"><span data-stu-id="89331-140"><paramref name="TMetadataView" /> is not a valid metadata view type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExport&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public Lazy&lt;T,TMetadataView&gt; GetExport&lt;T,TMetadataView&gt; (string contractName);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Lazy`2&lt;!!T, !!TMetadataView&gt; GetExport&lt;T, TMetadataView&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of T, TMetadataView) (contractName As String) As Lazy(Of T, TMetadataView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; Lazy&lt;T, TMetadataView&gt; ^ GetExport(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExport : string -&gt; Lazy&lt;'T, 'MetadataView&gt;" Usage="exportProvider.GetExport contractName" />
      <MemberSignature Language="C#" Value="public Lazy&lt;T,TMetadataView&gt;? GetExport&lt;T,TMetadataView&gt; (string? contractName);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;T,TMetadataView&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="89331-141">要返回的 <see cref="T:System.Lazy`2" /> 对象的类型参数。</span><span class="sxs-lookup"><span data-stu-id="89331-141">The type parameter of the <see cref="T:System.Lazy`2" /> object to return.</span></span></typeparam>
        <typeparam name="TMetadataView"><span data-ttu-id="89331-142">要返回的 <see cref="T:System.Lazy`2" /> 对象的元数据视图的类型。</span><span class="sxs-lookup"><span data-stu-id="89331-142">The type of the metadata view of the <see cref="T:System.Lazy`2" /> object to return.</span></span></typeparam>
        <param name="contractName"><span data-ttu-id="89331-143">要返回的 <see cref="T:System.Lazy`2" /> 对象的协定名称，或者为 <see langword="null" /> 或空字符串 ("") 以使用默认的协定名称。</span><span class="sxs-lookup"><span data-stu-id="89331-143">The contract name of the <see cref="T:System.Lazy`2" /> object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="89331-144">返回具有指定的协定名称的导出。</span><span class="sxs-lookup"><span data-stu-id="89331-144">Returns the export with the specified contract name.</span></span> <span data-ttu-id="89331-145">如果不是正好有一个匹配的导出，则将引发异常。</span><span class="sxs-lookup"><span data-stu-id="89331-145">If there is not exactly one matching export, an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="89331-146">具有指定的协定名称的导出。</span><span class="sxs-lookup"><span data-stu-id="89331-146">The export with the specified contract name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89331-147">默认协定名称是对调用方法的结果 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> `T` 。</span><span class="sxs-lookup"><span data-stu-id="89331-147">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="89331-148">通过使用 <xref:System.StringComparer.Ordinal%2A> 属性执行区分大小写的非语言比较，对协定名称进行比较。</span><span class="sxs-lookup"><span data-stu-id="89331-148">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><span data-ttu-id="89331-149">有零个 <see cref="T:System.Lazy`2" /> 对象具有从 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象中的 <paramref name="T" /> 派生的协定名称。</span><span class="sxs-lookup"><span data-stu-id="89331-149">There are zero <see cref="T:System.Lazy`2" /> objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span></span>  
  
<span data-ttu-id="89331-150">- 或 -</span><span class="sxs-lookup"><span data-stu-id="89331-150">-or-</span></span> 
<span data-ttu-id="89331-151">有多个 <see cref="T:System.Lazy`2" /> 对象具有从 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象中的 <paramref name="T" /> 派生的协定名称。</span><span class="sxs-lookup"><span data-stu-id="89331-151">There is more than one <see cref="T:System.Lazy`2" /> object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="89331-152"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="89331-152">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="89331-153"><paramref name="TMetadataView" /> 不是有效的元数据视图类型。</span><span class="sxs-lookup"><span data-stu-id="89331-153"><paramref name="TMetadataView" /> is not a valid metadata view type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExportedValue&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="89331-154">获取一个导出的对象。</span><span class="sxs-lookup"><span data-stu-id="89331-154">Gets an exported object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetExportedValue&lt;T&gt; ();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetExportedValue&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValue(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetExportedValue();" />
      <MemberSignature Language="F#" Value="member this.GetExportedValue : unit -&gt; 'T" Usage="exportProvider.GetExportedValue " />
      <MemberSignature Language="C#" Value="public T? GetExportedValue&lt;T&gt; ();" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="89331-155">要返回的已导出对象的类型。</span><span class="sxs-lookup"><span data-stu-id="89331-155">The type of the exported object to return.</span></span> <span data-ttu-id="89331-156">协定名称也派生自此类型参数。</span><span class="sxs-lookup"><span data-stu-id="89331-156">The contract name is also derived from this type parameter.</span></span></typeparam>
        <summary><span data-ttu-id="89331-157">返回具有从指定的类型参数派生的协定名称的已导出对象。</span><span class="sxs-lookup"><span data-stu-id="89331-157">Returns the exported object with the contract name derived from the specified type parameter.</span></span> <span data-ttu-id="89331-158">如果不是正好有一个匹配的已导出对象，则将引发异常。</span><span class="sxs-lookup"><span data-stu-id="89331-158">If there is not exactly one matching exported object, an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="89331-159">具有从指定的类型参数派生的协定名称的已导出对象。</span><span class="sxs-lookup"><span data-stu-id="89331-159">The exported object with the contract name derived from the specified type parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89331-160">协定名称是对调用方法的结果 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> `T` 。</span><span class="sxs-lookup"><span data-stu-id="89331-160">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="89331-161">通过使用 <xref:System.StringComparer.Ordinal%2A> 属性执行区分大小写的非语言比较，对协定名称进行比较。</span><span class="sxs-lookup"><span data-stu-id="89331-161">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><span data-ttu-id="89331-162">有零个已导出对象具有从 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 中的 <paramref name="T" /> 派生的协定名称。</span><span class="sxs-lookup"><span data-stu-id="89331-162">There are zero exported objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span></span>  
  
<span data-ttu-id="89331-163">- 或 -</span><span class="sxs-lookup"><span data-stu-id="89331-163">-or-</span></span> 
<span data-ttu-id="89331-164">有多个已导出对象具有从 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 中的 <paramref name="T" /> 派生的协定名称。</span><span class="sxs-lookup"><span data-stu-id="89331-164">There is more than one exported object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="89331-165"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="89331-165">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException"><span data-ttu-id="89331-166">不能将基础导出对象强制转换为 <paramref name="T" />。</span><span class="sxs-lookup"><span data-stu-id="89331-166">The underlying exported object cannot be cast to <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException"><span data-ttu-id="89331-167">复合期间发生错误。</span><span class="sxs-lookup"><span data-stu-id="89331-167">An error occurred during composition.</span></span> <span data-ttu-id="89331-168"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> 将包含所发生错误的集合。</span><span class="sxs-lookup"><span data-stu-id="89331-168"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetExportedValue&lt;T&gt; (string contractName);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetExportedValue&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValue(Of T) (contractName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetExportedValue(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExportedValue : string -&gt; 'T" Usage="exportProvider.GetExportedValue contractName" />
      <MemberSignature Language="C#" Value="public T? GetExportedValue&lt;T&gt; (string? contractName);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="89331-169">要返回的已导出对象的类型。</span><span class="sxs-lookup"><span data-stu-id="89331-169">The type of the exported object to return.</span></span></typeparam>
        <param name="contractName"><span data-ttu-id="89331-170">要返回的已导出对象的协定名称，或者为 <see langword="null" /> 或空字符串 ("") 以使用默认的协定名称。</span><span class="sxs-lookup"><span data-stu-id="89331-170">The contract name of the exported object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="89331-171">返回具有指定的协定名称的已导出对象。</span><span class="sxs-lookup"><span data-stu-id="89331-171">Returns the exported object with the specified contract name.</span></span> <span data-ttu-id="89331-172">如果不是正好有一个匹配的已导出对象，则将引发异常。</span><span class="sxs-lookup"><span data-stu-id="89331-172">If there is not exactly one matching exported object, an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="89331-173">具有指定的协定名称的已导出对象。</span><span class="sxs-lookup"><span data-stu-id="89331-173">The exported object with the specified contract name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89331-174">默认协定名称是对调用方法的结果 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> `T` 。</span><span class="sxs-lookup"><span data-stu-id="89331-174">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="89331-175">通过使用 <xref:System.StringComparer.Ordinal%2A> 属性执行区分大小写的非语言比较，对协定名称进行比较。</span><span class="sxs-lookup"><span data-stu-id="89331-175">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><span data-ttu-id="89331-176">有零个已导出对象具有从 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 中的 <paramref name="T" /> 派生的协定名称。</span><span class="sxs-lookup"><span data-stu-id="89331-176">There are zero exported objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span></span>  
  
<span data-ttu-id="89331-177">- 或 -</span><span class="sxs-lookup"><span data-stu-id="89331-177">-or-</span></span> 
<span data-ttu-id="89331-178">有多个已导出对象具有从 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 中的 <paramref name="T" /> 派生的协定名称。</span><span class="sxs-lookup"><span data-stu-id="89331-178">There is more than one exported object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="89331-179"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="89331-179">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException"><span data-ttu-id="89331-180">不能将基础导出对象强制转换为 <paramref name="T" />。</span><span class="sxs-lookup"><span data-stu-id="89331-180">The underlying exported object cannot be cast to <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException"><span data-ttu-id="89331-181">复合期间发生错误。</span><span class="sxs-lookup"><span data-stu-id="89331-181">An error occurred during composition.</span></span> <span data-ttu-id="89331-182"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> 将包含所发生错误的集合。</span><span class="sxs-lookup"><span data-stu-id="89331-182"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExportedValueOrDefault&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="89331-183">获取指定的已导出对象，如果它不可用，则返回默认值。</span><span class="sxs-lookup"><span data-stu-id="89331-183">Gets a specified exported object or a default value if it is unavailable.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExportedValueOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetExportedValueOrDefault&lt;T&gt; ();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetExportedValueOrDefault&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValueOrDefault(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetExportedValueOrDefault();" />
      <MemberSignature Language="F#" Value="member this.GetExportedValueOrDefault : unit -&gt; 'T" Usage="exportProvider.GetExportedValueOrDefault " />
      <MemberSignature Language="C#" Value="public T? GetExportedValueOrDefault&lt;T&gt; ();" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="89331-184">要返回的已导出对象的类型。</span><span class="sxs-lookup"><span data-stu-id="89331-184">The type of the exported object to return.</span></span> <span data-ttu-id="89331-185">协定名称也派生自此类型参数。</span><span class="sxs-lookup"><span data-stu-id="89331-185">The contract name is also derived from this type parameter.</span></span></typeparam>
        <summary><span data-ttu-id="89331-186">获取具有从指定的类型参数派生的协定名称的已导出对象或指定类型的默认值，如果有多个匹配的已导出对象，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="89331-186">Gets the exported object with the contract name derived from the specified type parameter or the default value for the specified type, or throws an exception if there is more than one matching exported object.</span></span></summary>
        <returns><span data-ttu-id="89331-187">如果找到匹配项，则为具有从 <paramref name="T" /> 派生的协定名称的已导出对象；否则为 <paramref name="T" /> 的默认值。</span><span class="sxs-lookup"><span data-stu-id="89331-187">The exported object with the contract name derived from <paramref name="T" />, if found; otherwise, the default value for <paramref name="T" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89331-188">如果未找到导出的对象，则此方法将返回相应的默认值 `T` ; 例如，对于整数类型，为零; 对于布尔值类型，则返回， `false` `null` 对于引用类型返回。</span><span class="sxs-lookup"><span data-stu-id="89331-188">If the exported object is not found, this method returns the appropriate default value for `T`; for example, zero for integer types, `false` for Boolean types, and `null` for reference types.</span></span>  
  
 <span data-ttu-id="89331-189">协定名称是对调用方法的结果 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> `T` 。</span><span class="sxs-lookup"><span data-stu-id="89331-189">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="89331-190">通过使用 <xref:System.StringComparer.Ordinal%2A> 属性执行区分大小写的非语言比较，对协定名称进行比较。</span><span class="sxs-lookup"><span data-stu-id="89331-190">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><span data-ttu-id="89331-191">有多个已导出对象具有从 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 中的 <paramref name="T" /> 派生的协定名称。</span><span class="sxs-lookup"><span data-stu-id="89331-191">There is more than one exported object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="89331-192"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="89331-192">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException"><span data-ttu-id="89331-193">不能将基础导出对象强制转换为 <paramref name="T" />。</span><span class="sxs-lookup"><span data-stu-id="89331-193">The underlying exported object cannot be cast to <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException"><span data-ttu-id="89331-194">复合期间发生错误。</span><span class="sxs-lookup"><span data-stu-id="89331-194">An error occurred during composition.</span></span> <span data-ttu-id="89331-195"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> 将包含所发生错误的集合。</span><span class="sxs-lookup"><span data-stu-id="89331-195"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExportedValueOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetExportedValueOrDefault&lt;T&gt; (string contractName);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetExportedValueOrDefault&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValueOrDefault(Of T) (contractName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetExportedValueOrDefault(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExportedValueOrDefault : string -&gt; 'T" Usage="exportProvider.GetExportedValueOrDefault contractName" />
      <MemberSignature Language="C#" Value="public T? GetExportedValueOrDefault&lt;T&gt; (string? contractName);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="89331-196">要返回的已导出对象的类型。</span><span class="sxs-lookup"><span data-stu-id="89331-196">The type of the exported object to return.</span></span></typeparam>
        <param name="contractName"><span data-ttu-id="89331-197">要返回的已导出对象的协定名称，或者为 <see langword="null" /> 或空字符串 ("") 以使用默认的协定名称。</span><span class="sxs-lookup"><span data-stu-id="89331-197">The contract name of the exported object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="89331-198">获取具有指定的协定名称的已导出对象或指定类型的默认值，如果有多个匹配的已导出对象，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="89331-198">Gets the exported object with the specified contract name or the default value for the specified type, or throws an exception if there is more than one matching exported object.</span></span></summary>
        <returns><span data-ttu-id="89331-199">如果找到匹配项，则为具有指定的协定名称的已导出对象；否则为 <paramref name="T" /> 的默认值。</span><span class="sxs-lookup"><span data-stu-id="89331-199">The exported object with the specified contract name, if found; otherwise, the default value for <paramref name="T" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89331-200">如果未找到导出的对象，则此方法将返回相应的默认值 `T` ; 例如，对于整数类型，为零; 对于布尔值类型，则返回， `false` `null` 对于引用类型返回。</span><span class="sxs-lookup"><span data-stu-id="89331-200">If the exported object is not found, this method returns the appropriate default value for `T`; for example, zero for integer types, `false` for Boolean types, and `null` for reference types.</span></span>  
  
 <span data-ttu-id="89331-201">默认协定名称是对调用方法的结果 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> `T` 。</span><span class="sxs-lookup"><span data-stu-id="89331-201">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="89331-202">通过使用 <xref:System.StringComparer.Ordinal%2A> 属性执行区分大小写的非语言比较，对协定名称进行比较。</span><span class="sxs-lookup"><span data-stu-id="89331-202">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><span data-ttu-id="89331-203"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 中，有多个具有指定的协定名称的已导出对象。</span><span class="sxs-lookup"><span data-stu-id="89331-203">There is more than one exported object with the specified contract name in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="89331-204"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="89331-204">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException"><span data-ttu-id="89331-205">不能将基础导出对象强制转换为 <paramref name="T" />。</span><span class="sxs-lookup"><span data-stu-id="89331-205">The underlying exported object cannot be cast to <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException"><span data-ttu-id="89331-206">复合期间发生错误。</span><span class="sxs-lookup"><span data-stu-id="89331-206">An error occurred during composition.</span></span> <span data-ttu-id="89331-207"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> 将包含所发生错误的集合。</span><span class="sxs-lookup"><span data-stu-id="89331-207"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExportedValues&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="89331-208">获取一个或多个已导出对象。</span><span class="sxs-lookup"><span data-stu-id="89331-208">Gets one or more exported objects.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExportedValues&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;T&gt; GetExportedValues&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetExportedValues&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValues(Of T) () As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetExportedValues();" />
      <MemberSignature Language="F#" Value="member this.GetExportedValues : unit -&gt; seq&lt;'T&gt;" Usage="exportProvider.GetExportedValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="89331-209">要返回的已导出对象的类型。</span><span class="sxs-lookup"><span data-stu-id="89331-209">The type of the exported object to return.</span></span> <span data-ttu-id="89331-210">协定名称也派生自此类型参数。</span><span class="sxs-lookup"><span data-stu-id="89331-210">The contract name is also derived from this type parameter.</span></span></typeparam>
        <summary><span data-ttu-id="89331-211">获取具有从指定的类型参数派生的协定名称的所有已导出对象。</span><span class="sxs-lookup"><span data-stu-id="89331-211">Gets all the exported objects with the contract name derived from the specified type parameter.</span></span></summary>
        <returns><span data-ttu-id="89331-212">如果找到匹配项，则为具有从指定的类型参数派生的协定名称的已导出对象；否则为空的 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="89331-212">The exported objects with the contract name derived from the specified type parameter, if found; otherwise, an empty <see cref="T:System.Collections.ObjectModel.Collection`1" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89331-213">协定名称是对调用方法的结果 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> `T` 。</span><span class="sxs-lookup"><span data-stu-id="89331-213">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="89331-214">通过使用 <xref:System.StringComparer.Ordinal%2A> 属性执行区分大小写的非语言比较，对协定名称进行比较。</span><span class="sxs-lookup"><span data-stu-id="89331-214">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="89331-215"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="89331-215">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException"><span data-ttu-id="89331-216">一个或多个基础导出对象不能强制转换为 <paramref name="T" />。</span><span class="sxs-lookup"><span data-stu-id="89331-216">One or more of the underlying exported objects cannot be cast to <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException"><span data-ttu-id="89331-217">复合期间发生错误。</span><span class="sxs-lookup"><span data-stu-id="89331-217">An error occurred during composition.</span></span> <span data-ttu-id="89331-218"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> 将包含所发生错误的集合。</span><span class="sxs-lookup"><span data-stu-id="89331-218"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExportedValues&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;T&gt; GetExportedValues&lt;T&gt; (string contractName);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetExportedValues&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValues(Of T) (contractName As String) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetExportedValues(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExportedValues : string -&gt; seq&lt;'T&gt;" Usage="exportProvider.GetExportedValues contractName" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;T&gt; GetExportedValues&lt;T&gt; (string? contractName);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="89331-219">要返回的已导出对象的类型。</span><span class="sxs-lookup"><span data-stu-id="89331-219">The type of the exported object to return.</span></span></typeparam>
        <param name="contractName"><span data-ttu-id="89331-220">要返回的已导出对象的协定名称；或者为 <see langword="null" /> 或空字符串 ("") 以使用默认的协定名称。</span><span class="sxs-lookup"><span data-stu-id="89331-220">The contract name of the exported objects to return; or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="89331-221">获取具有指定的协定名称的所有已导出对象。</span><span class="sxs-lookup"><span data-stu-id="89331-221">Gets all the exported objects with the specified contract name.</span></span></summary>
        <returns><span data-ttu-id="89331-222">如果找到匹配项，则为具有指定的协定名称的已导出对象；否则为空的 <see cref="T:System.Collections.ObjectModel.Collection`1" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="89331-222">The exported objects with the specified contract name, if found; otherwise, an empty <see cref="T:System.Collections.ObjectModel.Collection`1" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89331-223">默认协定名称是对调用方法的结果 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> `T` 。</span><span class="sxs-lookup"><span data-stu-id="89331-223">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="89331-224">通过使用 <xref:System.StringComparer.Ordinal%2A> 属性执行区分大小写的非语言比较，对协定名称进行比较。</span><span class="sxs-lookup"><span data-stu-id="89331-224">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="89331-225"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="89331-225">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException"><span data-ttu-id="89331-226">一个或多个基础导出值不能强制转换为 <paramref name="T" />。</span><span class="sxs-lookup"><span data-stu-id="89331-226">One or more of the underlying exported values cannot be cast to <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException"><span data-ttu-id="89331-227">复合期间发生错误。</span><span class="sxs-lookup"><span data-stu-id="89331-227">An error occurred during composition.</span></span> <span data-ttu-id="89331-228"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> 将包含所发生错误的集合。</span><span class="sxs-lookup"><span data-stu-id="89331-228"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExports">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="89331-229">获取与指定的条件匹配的所有导出。</span><span class="sxs-lookup"><span data-stu-id="89331-229">Gets all the exports matching the specified conditions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; GetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports (definition As ImportDefinition) As IEnumerable(Of Export)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ GetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition);" />
      <MemberSignature Language="F#" Value="member this.GetExports : System.ComponentModel.Composition.Primitives.ImportDefinition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.Export&gt;" Usage="exportProvider.GetExports definition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="definition"><span data-ttu-id="89331-230">定义要获取的 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 对象的条件的对象。</span><span class="sxs-lookup"><span data-stu-id="89331-230">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to get.</span></span></param>
        <summary><span data-ttu-id="89331-231">获取与指定的导入定义条件匹配的所有导出。</span><span class="sxs-lookup"><span data-stu-id="89331-231">Gets all exports that match the conditions of the specified import definition.</span></span></summary>
        <returns><span data-ttu-id="89331-232">与 <paramref name="definition" /> 指定的条件匹配的所有 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="89331-232">A collection of all the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects matching the condition specified by <paramref name="definition" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><span data-ttu-id="89331-233"><see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> 为 <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" />，且没有任何 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 对象与指定的 <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> 的条件匹配。</span><span class="sxs-lookup"><span data-stu-id="89331-233"><see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there are zero <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects that match the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span></span>  
  
<span data-ttu-id="89331-234">- 或 -</span><span class="sxs-lookup"><span data-stu-id="89331-234">-or-</span></span> 
 <span data-ttu-id="89331-235"><see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> 为 <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> 或 <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" />，且有多个 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 对象与指定的 <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> 的条件匹配。</span><span class="sxs-lookup"><span data-stu-id="89331-235"><see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> or <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there is more than one <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> object that matches the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="89331-236"><paramref name="definition" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="89331-236"><paramref name="definition" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; GetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports (definition As ImportDefinition, atomicComposition As AtomicComposition) As IEnumerable(Of Export)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ GetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition);" />
      <MemberSignature Language="F#" Value="member this.GetExports : System.ComponentModel.Composition.Primitives.ImportDefinition * System.ComponentModel.Composition.Hosting.AtomicComposition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.Export&gt;" Usage="exportProvider.GetExports (definition, atomicComposition)" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition? atomicComposition);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="definition"><span data-ttu-id="89331-237">定义要获取的 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 对象的条件的对象。</span><span class="sxs-lookup"><span data-stu-id="89331-237">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to get.</span></span></param>
        <param name="atomicComposition"><span data-ttu-id="89331-238">组合的事务性容器。</span><span class="sxs-lookup"><span data-stu-id="89331-238">The transactional container for the composition.</span></span></param>
        <summary><span data-ttu-id="89331-239">获取与指定的导入定义和组合条件匹配的所有导出。</span><span class="sxs-lookup"><span data-stu-id="89331-239">Gets all exports that match the conditions of the specified import definition and composition.</span></span></summary>
        <returns><span data-ttu-id="89331-240">与 <paramref name="definition" /> 和 <paramref name="atomicComposition" /> 指定的条件匹配的所有 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="89331-240">A collection of all the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects matching the condition specified by <paramref name="definition" /> and <paramref name="atomicComposition" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><span data-ttu-id="89331-241"><see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> 为 <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" />，且没有任何 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 对象与指定的 <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> 的条件匹配。</span><span class="sxs-lookup"><span data-stu-id="89331-241"><see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there are zero <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects that match the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span></span>  
  
<span data-ttu-id="89331-242">- 或 -</span><span class="sxs-lookup"><span data-stu-id="89331-242">-or-</span></span> 
 <span data-ttu-id="89331-243"><see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> 为 <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> 或 <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" />，且有多个 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 对象与指定的 <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> 的条件匹配。</span><span class="sxs-lookup"><span data-stu-id="89331-243"><see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> or <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there is more than one <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> object that matches the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="89331-244"><paramref name="definition" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="89331-244"><paramref name="definition" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="89331-245">- 或 -</span><span class="sxs-lookup"><span data-stu-id="89331-245">-or-</span></span> 
 <span data-ttu-id="89331-246"><paramref name="atomicComposition" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="89331-246"><paramref name="atomicComposition" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;object,object&gt;&gt; GetExports (Type type, Type metadataViewType, string contractName);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`2&lt;object, object&gt;&gt; GetExports(class System.Type type, class System.Type metadataViewType, string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports (type As Type, metadataViewType As Type, contractName As String) As IEnumerable(Of Lazy(Of Object, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;System::Object ^, System::Object ^&gt; ^&gt; ^ GetExports(Type ^ type, Type ^ metadataViewType, System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExports : Type * Type * string -&gt; seq&lt;Lazy&lt;obj, obj&gt;&gt;" Usage="exportProvider.GetExports (type, metadataViewType, contractName)" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;object,object&gt;&gt; GetExports (Type type, Type? metadataViewType, string? contractName);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;System.Object,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="metadataViewType" Type="System.Type" />
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="89331-247">要返回的 <see cref="T:System.Lazy`2" /> 对象的类型参数。</span><span class="sxs-lookup"><span data-stu-id="89331-247">The type parameter of the <see cref="T:System.Lazy`2" /> objects to return.</span></span></param>
        <param name="metadataViewType"><span data-ttu-id="89331-248">要返回的 <see cref="T:System.Lazy`2" /> 对象的元数据视图的类型。</span><span class="sxs-lookup"><span data-stu-id="89331-248">The type of the metadata view of the <see cref="T:System.Lazy`2" /> objects to return.</span></span></param>
        <param name="contractName"><span data-ttu-id="89331-249">要返回的 <see cref="T:System.Lazy`2" /> 对象的协定名称，或者为 <see langword="null" /> 或空字符串 ("") 以使用默认的协定名称。</span><span class="sxs-lookup"><span data-stu-id="89331-249">The contract name of the <see cref="T:System.Lazy`2" /> object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="89331-250">获取具有指定的协定名称的所有导出。</span><span class="sxs-lookup"><span data-stu-id="89331-250">Gets all the exports with the specified contract name.</span></span></summary>
        <returns><span data-ttu-id="89331-251">匹配 <paramref name="contractName" /> 的协定的所有 <see cref="T:System.Lazy`2" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="89331-251">A collection of all the <see cref="T:System.Lazy`2" /> objects for the contract matching <paramref name="contractName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89331-252">默认协定名称是对调用方法的结果 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> `type` 。</span><span class="sxs-lookup"><span data-stu-id="89331-252">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `type`.</span></span>  
  
 <span data-ttu-id="89331-253">通过使用 <xref:System.StringComparer.Ordinal%2A> 属性执行区分大小写的非语言比较，对协定名称进行比较。</span><span class="sxs-lookup"><span data-stu-id="89331-253">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="89331-254"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="89331-254">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="89331-255"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="89331-255"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="89331-256"><paramref name="metadataViewType" /> 不是有效的元数据视图类型。</span><span class="sxs-lookup"><span data-stu-id="89331-256"><paramref name="metadataViewType" /> is not a valid metadata view type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;T&gt;&gt; GetExports&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`1&lt;!!T&gt;&gt; GetExports&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of T) () As IEnumerable(Of Lazy(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;T&gt; ^&gt; ^ GetExports();" />
      <MemberSignature Language="F#" Value="member this.GetExports : unit -&gt; seq&lt;Lazy&lt;'T&gt;&gt;" Usage="exportProvider.GetExports " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="89331-257">要返回的 <see cref="T:System.Lazy`1" /> 对象的类型参数。</span><span class="sxs-lookup"><span data-stu-id="89331-257">The type parameter of the <see cref="T:System.Lazy`1" /> objects to return.</span></span> <span data-ttu-id="89331-258">协定名称也派生自此类型参数。</span><span class="sxs-lookup"><span data-stu-id="89331-258">The contract name is also derived from this type parameter.</span></span></typeparam>
        <summary><span data-ttu-id="89331-259">获取具有从指定的类型参数派生的协定名称的所有导出。</span><span class="sxs-lookup"><span data-stu-id="89331-259">Gets all the exports with the contract name derived from the specified type parameter.</span></span></summary>
        <returns><span data-ttu-id="89331-260">如果找到匹配项，则为具有从 <paramref name="T" /> 派生的协定名称的 <see cref="T:System.Lazy`1" /> 对象；否则为空的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="89331-260">The <see cref="T:System.Lazy`1" /> objects with the contract name derived from <paramref name="T" />, if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89331-261">协定名称是对调用方法的结果 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> `T` 。</span><span class="sxs-lookup"><span data-stu-id="89331-261">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="89331-262">通过使用 <xref:System.StringComparer.Ordinal%2A> 属性执行区分大小写的非语言比较，对协定名称进行比较。</span><span class="sxs-lookup"><span data-stu-id="89331-262">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="89331-263"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="89331-263">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;T&gt;&gt; GetExports&lt;T&gt; (string contractName);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`1&lt;!!T&gt;&gt; GetExports&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of T) (contractName As String) As IEnumerable(Of Lazy(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;T&gt; ^&gt; ^ GetExports(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExports : string -&gt; seq&lt;Lazy&lt;'T&gt;&gt;" Usage="exportProvider.GetExports contractName" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;T&gt;&gt; GetExports&lt;T&gt; (string? contractName);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="89331-264">要返回的 <see cref="T:System.Lazy`1" /> 对象的类型参数。</span><span class="sxs-lookup"><span data-stu-id="89331-264">The type parameter of the <see cref="T:System.Lazy`1" /> objects to return.</span></span></typeparam>
        <param name="contractName"><span data-ttu-id="89331-265">要返回的 <see cref="T:System.Lazy`1" /> 对象的协定名称，或者为 <see langword="null" /> 或空字符串 ("") 以使用默认的协定名称。</span><span class="sxs-lookup"><span data-stu-id="89331-265">The contract name of the <see cref="T:System.Lazy`1" /> objects to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="89331-266">获取具有指定的协定名称的所有导出。</span><span class="sxs-lookup"><span data-stu-id="89331-266">Gets all the exports with the specified contract name.</span></span></summary>
        <returns><span data-ttu-id="89331-267">如果找到匹配项，则为具有指定的协定名称的 <see cref="T:System.Lazy`1" /> 对象；否则为空的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="89331-267">The <see cref="T:System.Lazy`1" /> objects with the specified contract name, if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89331-268">默认协定名称是对调用方法的结果 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> `T` 。</span><span class="sxs-lookup"><span data-stu-id="89331-268">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="89331-269">通过使用 <xref:System.StringComparer.Ordinal%2A> 属性执行区分大小写的非语言比较，对协定名称进行比较。</span><span class="sxs-lookup"><span data-stu-id="89331-269">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="89331-270"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="89331-270">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;T,TMetadataView&gt;&gt; GetExports&lt;T,TMetadataView&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`2&lt;!!T, !!TMetadataView&gt;&gt; GetExports&lt;T, TMetadataView&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of T, TMetadataView) () As IEnumerable(Of Lazy(Of T, TMetadataView))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;T, TMetadataView&gt; ^&gt; ^ GetExports();" />
      <MemberSignature Language="F#" Value="member this.GetExports : unit -&gt; seq&lt;Lazy&lt;'T, 'MetadataView&gt;&gt;" Usage="exportProvider.GetExports " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T,TMetadataView&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="89331-271">要返回的 <see cref="T:System.Lazy`2" /> 对象的类型参数。</span><span class="sxs-lookup"><span data-stu-id="89331-271">The type parameter of the <see cref="T:System.Lazy`2" /> objects to return.</span></span> <span data-ttu-id="89331-272">协定名称也派生自此类型参数。</span><span class="sxs-lookup"><span data-stu-id="89331-272">The contract name is also derived from this type parameter.</span></span></typeparam>
        <typeparam name="TMetadataView"><span data-ttu-id="89331-273">要返回的 <see cref="T:System.Lazy`2" /> 对象的元数据视图的类型。</span><span class="sxs-lookup"><span data-stu-id="89331-273">The type of the metadata view of the <see cref="T:System.Lazy`2" /> objects to return.</span></span></typeparam>
        <summary><span data-ttu-id="89331-274">获取具有从指定的类型参数派生的协定名称的所有导出。</span><span class="sxs-lookup"><span data-stu-id="89331-274">Gets all the exports with the contract name derived from the specified type parameter.</span></span></summary>
        <returns><span data-ttu-id="89331-275">如果找到匹配项，则为具有从 <paramref name="T" /> 派生的协定名称的 <see cref="T:System.Lazy`2" /> 对象；否则为空的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="89331-275">The <see cref="T:System.Lazy`2" /> objects with the contract name derived from <paramref name="T" />, if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89331-276">协定名称是对调用方法的结果 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> `T` 。</span><span class="sxs-lookup"><span data-stu-id="89331-276">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="89331-277">通过使用 <xref:System.StringComparer.Ordinal%2A> 属性执行区分大小写的非语言比较，对协定名称进行比较。</span><span class="sxs-lookup"><span data-stu-id="89331-277">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="89331-278"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="89331-278">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="89331-279"><paramref name="TMetadataView" /> 不是有效的元数据视图类型。</span><span class="sxs-lookup"><span data-stu-id="89331-279"><paramref name="TMetadataView" /> is not a valid metadata view type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;T,TMetadataView&gt;&gt; GetExports&lt;T,TMetadataView&gt; (string contractName);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`2&lt;!!T, !!TMetadataView&gt;&gt; GetExports&lt;T, TMetadataView&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of T, TMetadataView) (contractName As String) As IEnumerable(Of Lazy(Of T, TMetadataView))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;T, TMetadataView&gt; ^&gt; ^ GetExports(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExports : string -&gt; seq&lt;Lazy&lt;'T, 'MetadataView&gt;&gt;" Usage="exportProvider.GetExports contractName" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;T,TMetadataView&gt;&gt; GetExports&lt;T,TMetadataView&gt; (string? contractName);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T,TMetadataView&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="89331-280">要返回的 <see cref="T:System.Lazy`2" /> 对象的类型参数。</span><span class="sxs-lookup"><span data-stu-id="89331-280">The type parameter of the <see cref="T:System.Lazy`2" /> objects to return.</span></span> <span data-ttu-id="89331-281">协定名称也派生自此类型参数。</span><span class="sxs-lookup"><span data-stu-id="89331-281">The contract name is also derived from this type parameter.</span></span></typeparam>
        <typeparam name="TMetadataView"><span data-ttu-id="89331-282">要返回的 <see cref="T:System.Lazy`2" /> 对象的元数据视图的类型。</span><span class="sxs-lookup"><span data-stu-id="89331-282">The type of the metadata view of the <see cref="T:System.Lazy`2" /> objects to return.</span></span></typeparam>
        <param name="contractName"><span data-ttu-id="89331-283">要返回的 <see cref="T:System.Lazy`2" /> 对象的协定名称，或者为 <see langword="null" /> 或空字符串 ("") 以使用默认的协定名称。</span><span class="sxs-lookup"><span data-stu-id="89331-283">The contract name of the <see cref="T:System.Lazy`2" /> objects to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="89331-284">获取具有指定的协定名称的所有导出。</span><span class="sxs-lookup"><span data-stu-id="89331-284">Gets all the exports with the specified contract name.</span></span></summary>
        <returns><span data-ttu-id="89331-285">如果找到匹配项，则为具有指定的协定名称的 <see cref="T:System.Lazy`2" /> 对象；否则为空的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="89331-285">The <see cref="T:System.Lazy`2" /> objects with the specified contract name if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89331-286">默认协定名称是对调用方法的结果 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> `T` 。</span><span class="sxs-lookup"><span data-stu-id="89331-286">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="89331-287">通过使用 <xref:System.StringComparer.Ordinal%2A> 属性执行区分大小写的非语言比较，对协定名称进行比较。</span><span class="sxs-lookup"><span data-stu-id="89331-287">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="89331-288"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="89331-288">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="89331-289"><paramref name="TMetadataView" /> 不是有效的元数据视图类型。</span><span class="sxs-lookup"><span data-stu-id="89331-289"><paramref name="TMetadataView" /> is not a valid metadata view type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExportsCore">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; GetExportsCore (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; GetExportsCore(class System.ComponentModel.Composition.Primitives.ImportDefinition definition, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetExportsCore (definition As ImportDefinition, atomicComposition As AtomicComposition) As IEnumerable(Of Export)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ GetExportsCore(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition);" />
      <MemberSignature Language="F#" Value="abstract member GetExportsCore : System.ComponentModel.Composition.Primitives.ImportDefinition * System.ComponentModel.Composition.Hosting.AtomicComposition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.Export&gt;" Usage="exportProvider.GetExportsCore (definition, atomicComposition)" />
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;? GetExportsCore (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition? atomicComposition);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="definition"><span data-ttu-id="89331-290">定义要返回的 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 对象的条件的对象。</span><span class="sxs-lookup"><span data-stu-id="89331-290">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to return.</span></span></param>
        <param name="atomicComposition"><span data-ttu-id="89331-291">组合的事务性容器。</span><span class="sxs-lookup"><span data-stu-id="89331-291">The transactional container for the composition.</span></span></param>
        <summary><span data-ttu-id="89331-292">获取与指定的定义所定义的约束匹配的所有导出。</span><span class="sxs-lookup"><span data-stu-id="89331-292">Gets all the exports that match the constraint defined by the specified definition.</span></span></summary>
        <returns><span data-ttu-id="89331-293">一个包含与指定的条件匹配的所有导出的集合。</span><span class="sxs-lookup"><span data-stu-id="89331-293">A collection that contains all the exports that match the specified condition.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89331-294">此方法的重写不应将与基数相关的不匹配视为错误，因此在这些情况下不应引发异常。</span><span class="sxs-lookup"><span data-stu-id="89331-294">Overrides of this method should not treat cardinality-related mismatches as errors, and should not throw exceptions in those cases.</span></span> <span data-ttu-id="89331-295">例如，如果 <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality%2A> 为， <xref:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne> 并且存在 <xref:System.ComponentModel.Composition.Primitives.Export> 与指定的条件匹配的零个对象，则 <xref:System.ComponentModel.Composition.Primitives.ImportDefinition> <xref:System.Collections.Generic.IEnumerable%601> 应返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="89331-295">For example, if <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality%2A> is <xref:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne> and there are zero <xref:System.ComponentModel.Composition.Primitives.Export> objects that match the conditions of the specified <xref:System.ComponentModel.Composition.Primitives.ImportDefinition>, an empty <xref:System.Collections.Generic.IEnumerable%601> collection should be returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExportsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnExportsChanged (System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExportsChanged(class System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnExportsChanged (e As ExportsChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnExportsChanged(System::ComponentModel::Composition::Hosting::ExportsChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnExportsChanged : System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs -&gt; unit&#xA;override this.OnExportsChanged : System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs -&gt; unit" Usage="exportProvider.OnExportsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="89331-296">包含事件数据的 <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="89331-296">An <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="89331-297">引发 <see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="89331-297">Raises the <see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExportsChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnExportsChanging (System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExportsChanging(class System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnExportsChanging (e As ExportsChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnExportsChanging(System::ComponentModel::Composition::Hosting::ExportsChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnExportsChanging : System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs -&gt; unit&#xA;override this.OnExportsChanging : System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs -&gt; unit" Usage="exportProvider.OnExportsChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="89331-298">包含事件数据的 <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="89331-298">An <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="89331-299">引发 <see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="89331-299">Raises the <see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetExports">
      <MemberSignature Language="C#" Value="public bool TryGetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition, out System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; exports);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition, [out] class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt;&amp; exports) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetExports (definition As ImportDefinition, atomicComposition As AtomicComposition, ByRef exports As IEnumerable(Of Export)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition, [Runtime::InteropServices::Out] System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ % exports);" />
      <MemberSignature Language="F#" Value="member this.TryGetExports : System.ComponentModel.Composition.Primitives.ImportDefinition * System.ComponentModel.Composition.Hosting.AtomicComposition * seq -&gt; bool" Usage="exportProvider.TryGetExports (definition, atomicComposition, exports)" />
      <MemberSignature Language="C#" Value="public bool TryGetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition? atomicComposition, out System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;? exports);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
        <Parameter Name="exports" Type="System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="definition"><span data-ttu-id="89331-300">定义要获取的 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 对象的条件的对象。</span><span class="sxs-lookup"><span data-stu-id="89331-300">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to get.</span></span></param>
        <param name="atomicComposition"><span data-ttu-id="89331-301">组合的事务性容器。</span><span class="sxs-lookup"><span data-stu-id="89331-301">The transactional container for the composition.</span></span></param>
        <param name="exports"><span data-ttu-id="89331-302">如果找到匹配项，则此方法返回时将包含与 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 定义的条件匹配的 <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> 对象的集合；否则为空的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="89331-302">When this method returns, contains a collection of <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects that match the conditions defined by <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />, if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span></span> <span data-ttu-id="89331-303">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="89331-303">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="89331-304">获取与指定的导入条件匹配的所有导出。</span><span class="sxs-lookup"><span data-stu-id="89331-304">Gets all the exports that match the conditions of the specified import.</span></span></summary>
        <returns><span data-ttu-id="89331-305">如果 <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> 为 <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> 或 <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrMore" />，且存在零个匹配指定的 <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> 的条件的 <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> 对象，则为 <see langword="true" />；如果 <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> 为 <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> 或 <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" />，且刚好存在一个匹配指定的 <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> 的条件的 <see cref="T:System.ComponentModel.Composition.Primitives.Export" />，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="89331-305"><see langword="true" /> if <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> or <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrMore" /> and there are zero <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects that match the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />; <see langword="true" /> if <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> or <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there is exactly one <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> that matches the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="89331-306"><paramref name="definition" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="89331-306"><paramref name="definition" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
