<Type Name="ScopingExtensions" FullName="System.ComponentModel.Composition.Hosting.ScopingExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="279887ad1af79cbb15385fe6324b65dc7fcbfeb4" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="78714507" /></Metadata><TypeSignature Language="C#" Value="public static class ScopingExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ScopingExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.ScopingExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ScopingExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScopingExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type ScopingExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>定义范围的静态简便方法。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ContainsPartMetadata&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool ContainsPartMetadata&lt;T&gt; (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string key, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsPartMetadata&lt;T&gt;(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string key, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ContainsPartMetadata(Of T) (part As ComposablePartDefinition, key As String, value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool ContainsPartMetadata(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, System::String ^ key, T value);" />
      <MemberSignature Language="F#" Value="static member ContainsPartMetadata : System.ComponentModel.Composition.Primitives.ComposablePartDefinition * string * 'T -&gt; bool" Usage="System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadata (part, key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">元数据值的类型。</typeparam>
        <param name="part">要搜索的部件。</param>
        <param name="key">元数据密钥。</param>
        <param name="value">元数据的值。</param>
        <summary>获取指示指定部分是否包含元数据的值，该数据有指定的密钥和值。</summary>
        <returns>如果 <paramref name="part" /> 包含具有此指定键、值类型和值的元数据，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsPartMetadataWithKey">
      <MemberSignature Language="C#" Value="public static bool ContainsPartMetadataWithKey (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsPartMetadataWithKey(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadataWithKey(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ContainsPartMetadataWithKey (part As ComposablePartDefinition, key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool ContainsPartMetadataWithKey(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, System::String ^ key);" />
      <MemberSignature Language="F#" Value="static member ContainsPartMetadataWithKey : System.ComponentModel.Composition.Primitives.ComposablePartDefinition * string -&gt; bool" Usage="System.ComponentModel.Composition.Hosting.ScopingExtensions.ContainsPartMetadataWithKey (part, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="part">要搜索的部件。</param>
        <param name="key">元数据密钥。</param>
        <summary>获取指示指定部分是否包含元数据的值，该数据有指定的密钥。</summary>
        <returns>如果 <paramref name="part" /> 包含具有此指定键的元数据，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exports">
      <MemberSignature Language="C#" Value="public static bool Exports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exports(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Exports (part As ComposablePartDefinition, contractName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Exports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="static member Exports : System.ComponentModel.Composition.Primitives.ComposablePartDefinition * string -&gt; bool" Usage="System.ComponentModel.Composition.Hosting.ScopingExtensions.Exports (part, contractName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="part">要搜索的部件。</param>
        <param name="contractName">协定的名称。</param>
        <summary>获取指示指定部分是否导出指定协定的值。</summary>
        <returns>如果 <paramref name="part" /> 导出指定的协定，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Hosting.FilteredCatalog Filter (this System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, Func&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,bool&gt; filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Hosting.FilteredCatalog Filter(class System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, class System.Func`2&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition, bool&gt; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Func{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Filter (catalog As ComposablePartCatalog, filter As Func(Of ComposablePartDefinition, Boolean)) As FilteredCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Hosting::FilteredCatalog ^ Filter(System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ catalog, Func&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^, bool&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="static member Filter : System.ComponentModel.Composition.Primitives.ComposablePartCatalog * Func&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition, bool&gt; -&gt; System.ComponentModel.Composition.Hosting.FilteredCatalog" Usage="System.ComponentModel.Composition.Hosting.ScopingExtensions.Filter (catalog, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Hosting.FilteredCatalog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="System.ComponentModel.Composition.Primitives.ComposablePartCatalog" RefType="this" />
        <Parameter Name="filter" Type="System.Func&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="catalog">要筛选的目录。</param>
        <param name="filter">筛选器函数。</param>
        <summary>用指定的筛选功能筛选指定的目录。</summary>
        <returns>使用指定筛选器筛选的新类别。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Imports">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>确定指定的部分是否导入到所指定的协定。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Imports (part As ComposablePartDefinition, contractName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Imports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="static member Imports : System.ComponentModel.Composition.Primitives.ComposablePartDefinition * string -&gt; bool" Usage="System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports (part, contractName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="part">要搜索的部件。</param>
        <param name="contractName">协定的名称。</param>
        <summary>确定指定的部分是否导入到所指定的协定。</summary>
        <returns>如果 <paramref name="part" /> 导入指定的协定，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string contractName, System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string contractName, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.String,System.ComponentModel.Composition.Primitives.ImportCardinality)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Imports (part As ComposablePartDefinition, contractName As String, importCardinality As ImportCardinality) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Imports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, System::String ^ contractName, System::ComponentModel::Composition::Primitives::ImportCardinality importCardinality);" />
      <MemberSignature Language="F#" Value="static member Imports : System.ComponentModel.Composition.Primitives.ComposablePartDefinition * string * System.ComponentModel.Composition.Primitives.ImportCardinality -&gt; bool" Usage="System.ComponentModel.Composition.Hosting.ScopingExtensions.Imports (part, contractName, importCardinality)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="importCardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
      </Parameters>
      <Docs>
        <param name="part">要搜索的部件。</param>
        <param name="contractName">协定的名称。</param>
        <param name="importCardinality">联系人的协定。</param>
        <summary>使用指定的基数来确定指定部分是否输入到指定协定。</summary>
        <returns>如果 <paramref name="part" /> 导入具有指定的名称和基数的协定，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
