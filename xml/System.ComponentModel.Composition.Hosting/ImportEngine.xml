<Type Name="ImportEngine" FullName="System.ComponentModel.Composition.Hosting.ImportEngine">
  <Metadata><Meta Name="ms.openlocfilehash" Value="93b47395773725f1fcaea70475021c2977a4c479" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86737163" /></Metadata><TypeSignature Language="C#" Value="public class ImportEngine : IDisposable, System.ComponentModel.Composition.ICompositionService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportEngine extends System.Object implements class System.ComponentModel.Composition.ICompositionService, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.ImportEngine" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportEngine&#xA;Implements ICompositionService, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportEngine : IDisposable, System::ComponentModel::Composition::ICompositionService" />
  <TypeSignature Language="F#" Value="type ImportEngine = class&#xA;    interface ICompositionService&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Composition.ICompositionService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="71ca5-101">对容器执行组合。</span><span class="sxs-lookup"><span data-stu-id="71ca5-101">Performs composition for containers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71ca5-102">此类由在内部使用 <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> 。</span><span class="sxs-lookup"><span data-stu-id="71ca5-102">This class is used internally by <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</span></span> <span data-ttu-id="71ca5-103">除非要创作容器，否则通常不应使用此方法。</span><span class="sxs-lookup"><span data-stu-id="71ca5-103">You should generally not use it unless you are authoring a container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="71ca5-104">此类型实现 <xref:System.IDisposable> 接口。</span><span class="sxs-lookup"><span data-stu-id="71ca5-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="71ca5-105">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="71ca5-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="71ca5-106">若要直接释放类型，请在 `try`/`catch` 块中调用其 <xref:System.IDisposable.Dispose%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="71ca5-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="71ca5-107">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="71ca5-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="71ca5-108">有关详细信息，请参阅 <xref:System.IDisposable> 接口主题中的“使用实现 IDisposable 的对象”一节。</span><span class="sxs-lookup"><span data-stu-id="71ca5-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71ca5-109">初始化 <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="71ca5-109">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportEngine (System.ComponentModel.Composition.Hosting.ExportProvider sourceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Hosting.ExportProvider sourceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceProvider As ExportProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportEngine(System::ComponentModel::Composition::Hosting::ExportProvider ^ sourceProvider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.ImportEngine : System.ComponentModel.Composition.Hosting.ExportProvider -&gt; System.ComponentModel.Composition.Hosting.ImportEngine" Usage="new System.ComponentModel.Composition.Hosting.ImportEngine sourceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sourceProvider" Type="System.ComponentModel.Composition.Hosting.ExportProvider" />
      </Parameters>
      <Docs>
        <param name="sourceProvider"><span data-ttu-id="71ca5-110">提供对 <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> 对象的 <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> 访问的 <see cref="T:System.ComponentModel.Composition.Primitives.Export" />。</span><span class="sxs-lookup"><span data-stu-id="71ca5-110">The <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> that provides the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span></param>
        <summary><span data-ttu-id="71ca5-111">初始化 <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="71ca5-111">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportEngine (System.ComponentModel.Composition.Hosting.ExportProvider sourceProvider, bool isThreadSafe);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Hosting.ExportProvider sourceProvider, bool isThreadSafe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceProvider As ExportProvider, isThreadSafe As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportEngine(System::ComponentModel::Composition::Hosting::ExportProvider ^ sourceProvider, bool isThreadSafe);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.ImportEngine : System.ComponentModel.Composition.Hosting.ExportProvider * bool -&gt; System.ComponentModel.Composition.Hosting.ImportEngine" Usage="new System.ComponentModel.Composition.Hosting.ImportEngine (sourceProvider, isThreadSafe)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourceProvider" Type="System.ComponentModel.Composition.Hosting.ExportProvider" />
        <Parameter Name="isThreadSafe" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceProvider"><span data-ttu-id="71ca5-112">提供对 <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> 对象的 <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> 访问的 <see cref="T:System.ComponentModel.Composition.Primitives.Export" />。</span><span class="sxs-lookup"><span data-stu-id="71ca5-112">The <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> that provides the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span></param>
        <param name="isThreadSafe"><span data-ttu-id="71ca5-113">如果线程安全是必需的，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71ca5-113"><see langword="true" /> if thread safety is required; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="71ca5-114">初始化 <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> 类的新实例，可以选择是否使用线程安全模式。</span><span class="sxs-lookup"><span data-stu-id="71ca5-114">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> class, optionally in thread-safe mode.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportEngine (System.ComponentModel.Composition.Hosting.ExportProvider sourceProvider, System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Hosting.ExportProvider sourceProvider, valuetype System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider,System.ComponentModel.Composition.Hosting.CompositionOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceProvider As ExportProvider, compositionOptions As CompositionOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportEngine(System::ComponentModel::Composition::Hosting::ExportProvider ^ sourceProvider, System::ComponentModel::Composition::Hosting::CompositionOptions compositionOptions);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.ImportEngine : System.ComponentModel.Composition.Hosting.ExportProvider * System.ComponentModel.Composition.Hosting.CompositionOptions -&gt; System.ComponentModel.Composition.Hosting.ImportEngine" Usage="new System.ComponentModel.Composition.Hosting.ImportEngine (sourceProvider, compositionOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sourceProvider" Type="System.ComponentModel.Composition.Hosting.ExportProvider" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="compositionOptions" Type="System.ComponentModel.Composition.Hosting.CompositionOptions" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sourceProvider"><span data-ttu-id="71ca5-115">提供对 <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> 对象的 <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> 访问的 <see cref="T:System.ComponentModel.Composition.Primitives.Export" />。</span><span class="sxs-lookup"><span data-stu-id="71ca5-115">The <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> that provides the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> access to <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span></param>
        <param name="compositionOptions"><span data-ttu-id="71ca5-116">指定影响引擎行为的选项的对象。</span><span class="sxs-lookup"><span data-stu-id="71ca5-116">An object that specifies options that affect the behavior of the engine.</span></span></param>
        <summary><span data-ttu-id="71ca5-117">使用指定的选项初始化 <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="71ca5-117">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> class with the specified options.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71ca5-118">释放由 <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> 占用的资源。</span><span class="sxs-lookup"><span data-stu-id="71ca5-118">Releases the resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="importEngine.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71ca5-119">释放 <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> 类的当前实例所使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="71ca5-119">Releases all resources used by the current instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71ca5-120">在完成使用 `Dispose` 后，应调用 <xref:System.ComponentModel.Composition.Hosting.ImportEngine>。</span><span class="sxs-lookup"><span data-stu-id="71ca5-120">Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.Hosting.ImportEngine>.</span></span> <span data-ttu-id="71ca5-121">`Dispose` 方法使 <xref:System.ComponentModel.Composition.Hosting.ImportEngine> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="71ca5-121">The `Dispose` method leaves the <xref:System.ComponentModel.Composition.Hosting.ImportEngine> in an unusable state.</span></span> <span data-ttu-id="71ca5-122">调用后 `Dispose` ，必须释放对的所有引用， <xref:System.ComponentModel.Composition.Hosting.ImportEngine> 以便垃圾回收器能够回收占用的内存 <xref:System.ComponentModel.Composition.Hosting.ImportEngine> 。</span><span class="sxs-lookup"><span data-stu-id="71ca5-122">After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.Hosting.ImportEngine> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.Hosting.ImportEngine> was occupying.</span></span>  
  
 <span data-ttu-id="71ca5-123">有关详细信息，请参阅 [清理非托管资源](/dotnet/standard/garbage-collection/unmanaged) 和 [实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)。</span><span class="sxs-lookup"><span data-stu-id="71ca5-123">For more information, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71ca5-124">每次释放对 `Dispose` 的最后一个引用前，均应调用 <xref:System.ComponentModel.Composition.Hosting.ImportEngine>。</span><span class="sxs-lookup"><span data-stu-id="71ca5-124">Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.ImportEngine>.</span></span> <span data-ttu-id="71ca5-125">否则，在垃圾回收器调用 <xref:System.ComponentModel.Composition.Hosting.ImportEngine> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="71ca5-125">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.ImportEngine> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="importEngine.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="71ca5-126">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71ca5-126"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="71ca5-127">释放由 <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="71ca5-127">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewImports">
      <MemberSignature Language="C#" Value="public void PreviewImports (System.ComponentModel.Composition.Primitives.ComposablePart part, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PreviewImports(class System.ComponentModel.Composition.Primitives.ComposablePart part, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.PreviewImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreviewImports (part As ComposablePart, atomicComposition As AtomicComposition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreviewImports(System::ComponentModel::Composition::Primitives::ComposablePart ^ part, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition);" />
      <MemberSignature Language="F#" Value="member this.PreviewImports : System.ComponentModel.Composition.Primitives.ComposablePart * System.ComponentModel.Composition.Hosting.AtomicComposition -&gt; unit" Usage="importEngine.PreviewImports (part, atomicComposition)" />
      <MemberSignature Language="C#" Value="public void PreviewImports (System.ComponentModel.Composition.Primitives.ComposablePart part, System.ComponentModel.Composition.Hosting.AtomicComposition? atomicComposition);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePart" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="part"><span data-ttu-id="71ca5-128">要预览其导入的部件。</span><span class="sxs-lookup"><span data-stu-id="71ca5-128">The part to preview the imports of.</span></span></param>
        <param name="atomicComposition"><span data-ttu-id="71ca5-129">要使用的组合事务，或为 <see langword="null" /> 表示没有组合事务。</span><span class="sxs-lookup"><span data-stu-id="71ca5-129">The composition transaction to use, or <see langword="null" /> for no composition transaction.</span></span></param>
        <summary><span data-ttu-id="71ca5-130">预览指定部件的所有必需的导入，从而不用实际设置导入，就确定可以满足这些导入。</span><span class="sxs-lookup"><span data-stu-id="71ca5-130">Previews all the required imports for the specified part to make sure that they can be satisfied, without actually setting them.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Composition.CompositionException"><span data-ttu-id="71ca5-131">预览期间出现错误，<paramref name="atomicComposition" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="71ca5-131">An error occurred during previewing, and <paramref name="atomicComposition" /> is <see langword="null" />.</span></span> <span data-ttu-id="71ca5-132"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> 将包含所发生错误的集合。</span><span class="sxs-lookup"><span data-stu-id="71ca5-132"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span></span> <span data-ttu-id="71ca5-133">预先存在的组合处于未知状态，具体取决于所发生的错误。</span><span class="sxs-lookup"><span data-stu-id="71ca5-133">The pre-existing composition is in an unknown state, depending on the errors that occurred.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.ChangeRejectedException"><span data-ttu-id="71ca5-134">预览期间出现错误，<paramref name="atomicComposition" /> 不为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="71ca5-134">An error occurred during previewing, and <paramref name="atomicComposition" /> is not <see langword="null" />.</span></span> <span data-ttu-id="71ca5-135"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> 将包含所发生错误的集合。</span><span class="sxs-lookup"><span data-stu-id="71ca5-135"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span></span> <span data-ttu-id="71ca5-136">预先存在的组合保持有效状态。</span><span class="sxs-lookup"><span data-stu-id="71ca5-136">The pre-existing composition remains in valid state.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="71ca5-137">已释放了 <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" />。</span><span class="sxs-lookup"><span data-stu-id="71ca5-137">The <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseImports">
      <MemberSignature Language="C#" Value="public void ReleaseImports (System.ComponentModel.Composition.Primitives.ComposablePart part, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseImports(class System.ComponentModel.Composition.Primitives.ComposablePart part, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.ReleaseImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseImports (part As ComposablePart, atomicComposition As AtomicComposition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseImports(System::ComponentModel::Composition::Primitives::ComposablePart ^ part, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition);" />
      <MemberSignature Language="F#" Value="member this.ReleaseImports : System.ComponentModel.Composition.Primitives.ComposablePart * System.ComponentModel.Composition.Hosting.AtomicComposition -&gt; unit" Usage="importEngine.ReleaseImports (part, atomicComposition)" />
      <MemberSignature Language="C#" Value="public void ReleaseImports (System.ComponentModel.Composition.Primitives.ComposablePart part, System.ComponentModel.Composition.Hosting.AtomicComposition? atomicComposition);" FrameworkAlternate="dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePart" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="part"><span data-ttu-id="71ca5-138">要释放其导入的部件。</span><span class="sxs-lookup"><span data-stu-id="71ca5-138">The part to release the imports of.</span></span></param>
        <param name="atomicComposition"><span data-ttu-id="71ca5-139">要使用的组合事务，或为 <see langword="null" /> 表示没有组合事务。</span><span class="sxs-lookup"><span data-stu-id="71ca5-139">The composition transaction to use, or <see langword="null" /> for no composition transaction.</span></span></param>
        <summary><span data-ttu-id="71ca5-140">释放用于满足指定部件的导入的所有导出。</span><span class="sxs-lookup"><span data-stu-id="71ca5-140">Releases all the exports used to satisfy the imports of the specified part.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SatisfyImports">
      <MemberSignature Language="C#" Value="public void SatisfyImports (System.ComponentModel.Composition.Primitives.ComposablePart part);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SatisfyImports(class System.ComponentModel.Composition.Primitives.ComposablePart part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImports(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SatisfyImports (part As ComposablePart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SatisfyImports(System::ComponentModel::Composition::Primitives::ComposablePart ^ part);" />
      <MemberSignature Language="F#" Value="member this.SatisfyImports : System.ComponentModel.Composition.Primitives.ComposablePart -&gt; unit" Usage="importEngine.SatisfyImports part" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePart" />
      </Parameters>
      <Docs>
        <param name="part"><span data-ttu-id="71ca5-141">要满足其导入的部件。</span><span class="sxs-lookup"><span data-stu-id="71ca5-141">The part to satisfy the imports of.</span></span></param>
        <summary><span data-ttu-id="71ca5-142">满足指定部件的导入。</span><span class="sxs-lookup"><span data-stu-id="71ca5-142">Satisfies the imports of the specified part.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="71ca5-143"><paramref name="part" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="71ca5-143"><paramref name="part" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException"><span data-ttu-id="71ca5-144">复合期间发生错误。</span><span class="sxs-lookup"><span data-stu-id="71ca5-144">An error occurred during composition.</span></span> <span data-ttu-id="71ca5-145"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> 将包含所发生错误的集合。</span><span class="sxs-lookup"><span data-stu-id="71ca5-145"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="71ca5-146">已释放了 <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" />。</span><span class="sxs-lookup"><span data-stu-id="71ca5-146">The <see cref="T:System.ComponentModel.Composition.Hosting.ImportEngine" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SatisfyImportsOnce">
      <MemberSignature Language="C#" Value="public void SatisfyImportsOnce (System.ComponentModel.Composition.Primitives.ComposablePart part);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SatisfyImportsOnce(class System.ComponentModel.Composition.Primitives.ComposablePart part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SatisfyImportsOnce (part As ComposablePart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SatisfyImportsOnce(System::ComponentModel::Composition::Primitives::ComposablePart ^ part);" />
      <MemberSignature Language="F#" Value="abstract member SatisfyImportsOnce : System.ComponentModel.Composition.Primitives.ComposablePart -&gt; unit&#xA;override this.SatisfyImportsOnce : System.ComponentModel.Composition.Primitives.ComposablePart -&gt; unit" Usage="importEngine.SatisfyImportsOnce part" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Composition.ICompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePart" />
      </Parameters>
      <Docs>
        <param name="part"><span data-ttu-id="71ca5-147">要满足其导入的部件。</span><span class="sxs-lookup"><span data-stu-id="71ca5-147">The part to satisfy the imports of.</span></span></param>
        <summary><span data-ttu-id="71ca5-148">满足指定部件的导入，而无需注册这些导入以进行重新组合。</span><span class="sxs-lookup"><span data-stu-id="71ca5-148">Satisfies the imports of the specified part without registering them for recomposition.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="71ca5-149"><paramref name="part" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="71ca5-149"><paramref name="part" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException"><span data-ttu-id="71ca5-150">复合期间发生错误。</span><span class="sxs-lookup"><span data-stu-id="71ca5-150">An error occurred during composition.</span></span> <span data-ttu-id="71ca5-151"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> 将包含所发生错误的集合。</span><span class="sxs-lookup"><span data-stu-id="71ca5-151"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="71ca5-152">已释放了 <see cref="T:System.ComponentModel.Composition.ICompositionService" />。</span><span class="sxs-lookup"><span data-stu-id="71ca5-152">The <see cref="T:System.ComponentModel.Composition.ICompositionService" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
