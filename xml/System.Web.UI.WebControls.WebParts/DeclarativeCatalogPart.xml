<Type Name="DeclarativeCatalogPart" FullName="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e70eae192e626091abb2288786849c7f45841450" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102081630" /></Metadata><TypeSignature Language="C#" Value="public sealed class DeclarativeCatalogPart : System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DeclarativeCatalogPart extends System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DeclarativeCatalogPart&#xA;Inherits CatalogPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class DeclarativeCatalogPart sealed : System::Web::UI::WebControls::WebParts::CatalogPart" />
  <TypeSignature Language="F#" Value="type DeclarativeCatalogPart = class&#xA;    inherit CatalogPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>支持开发人员将 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 目录或其他服务器控件添加到声明性、页持久性格式的网页中。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 正如 Web 部件控件集中的面向工具的区域 (有关详细信息，请参阅 <xref:System.Web.UI.WebControls.WebParts.ToolZone> 类概述) ，提供面向工具的 <xref:System.Web.UI.WebControls.WebParts.Part> 控件，并且每个控件都必须位于特定类型的工具区域中。 Web 部件控件集中面向工具的部件控件具有两种区分特征：  
  
-   它们是帮助用户控件，使最终用户能够个性化 Web 部件页面上的控件。  
  
-   它们仅在某些显示模式中可见。  
  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 是必须位于某一类型的区域中的部件控件 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> ，如 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Web 部件控件集提供的区域。 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>仅当网页处于目录显示模式时，控件才变为可见。  
  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件为开发人员提供了一种以声明方式向网页上的目录添加一组服务器控件的方法。 Web 部件控件集中的目录只是 <xref:System.Web.UI.WebControls.WebParts.WebPart> 或其他服务器控件的列表，在页处于目录显示模式时可见。 用户可以从列表中选择控件，并将其添加到网页中，这会使用户能够在页面上更改控件集和功能。  
  
> [!NOTE]
>  用户可以将目录中同一控件的多个实例添加到网页中。  
  
 使用 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 控件创建服务器控件目录的一个优点是不需要任何编码。 页面开发人员可以完全按照声明性 (或页持久性) 格式使用控件，因此可以使用控件的名称。  
  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控件具有一个有用的属性，使开发人员可以设置一个可在整个站点中使用的控件目录。 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>开发人员可以将 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath%2A> 属性值设置为包含目录中的服务器控件列表的用户控件的路径，而不是在控件内声明各个服务器控件。 在运行时，将在用户控件中引用的服务器控件加载到目录中。 通过这种方式，多个页面或站点可以引用同一用户控件来创建目录。 更新用户控件的服务器控件列表时，它将基于用户控件更新所有目录。  
  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>类具有许多替代继承的属性的公共属性。 这些属性中的大多数实际上并不用于呈现控件;它们只会被重写，以便可以对其进行特殊代码属性的设置，以将其从 Microsoft Visual Studio 2005 之类的设计工具中隐藏。 不应使用这些隐藏属性，因为它们对呈现没有影响。 这一事实是，它们在 IntelliSense 中是隐藏的，Visual Studio 中的 "属性" 窗格可帮助开发人员避免错误地使用它们。 所有这些隐藏属性在各自的帮助主题中都有相应的记录。  
  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>类还具有若干方法。 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A>方法 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 为目录中的每个控件检索一个对象 <xref:System.Web.UI.WebControls.WebParts.WebPart> ，该对象使 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 控件可以显示有关每个服务器控件的信息，而无需创建该控件的实例。 另一种方法是 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart%2A> 方法。 此方法 <xref:System.Web.UI.WebControls.WebParts.WebPart> 根据传递给方法的说明获取特定控件的实例。  
  
> [!NOTE]
>  为了提高可访问性， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 控件在元素中呈现 `<fieldset>` 。 `<fieldset>`元素对用于在控件中进行编辑的相关控件集进行分组 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> ，并为视觉用户代理 (（例如普通 Web 浏览器) 和面向语音的用户代理 (如屏幕阅读软件) 等）中的控件提供选项卡式导航。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 在网页上以声明方式使用控件。 该示例包含四个部分：  
  
-   使您能够在 Web 部件页上更改显示模式的用户控件。  
  
-   包含 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 控件和控件的网页 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 。  
  
-   一个源代码文件，其中包含两个自定义 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件。  
  
-   说明如何在浏览器中加载页面时工作。  
  
 此代码示例的第一部分是用户控件，使您可以更改页面上的显示模式。 有关显示模式的详细信息以及此控件中源代码的说明，请参阅 [演练：在 Web 部件页上更改显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_DeclarativeCatalogPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Overview/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_DeclarativeCatalogPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Overview/VB/DisplayModeMenuVB.ascx#7)]  
  
 此代码示例的第二部分是网页。 页面顶部有两个 `Register` 指令，一个用于用户控件，一个用于包含两个自定义控件的已编译组件 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 请注意，此页具有对控件的声明性引用 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> ，该控件嵌套在声明性元素的适当层次结构中，如本主题的 "备注" 部分所述。 `<asp:declarativecatalogpart>`元素包含一个 `<webpartstemplate>` 元素，该元素又包含对标准 ASP.NET <xref:System.Web.UI.WebControls.Calendar> 控件和两个自定义控件的引用 <xref:System.Web.UI.WebControls.WebParts.WebPart> ; 这些控件是用户可以从目录中选择的控件。 该页还包含编辑功能，并且 <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> 在页面上声明了控件。 此控件可让用户在将自定义 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件添加到页面之后，以及在用户将页面切换到编辑模式之后编辑这些控件上的某些属性。  
  
 [!code-aspx-csharp[WebParts_DeclarativeCatalogPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Overview/CS/declarativeCatalogPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_DeclarativeCatalogPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Overview/VB/declarativeCatalogPartVB.aspx#1)]  
  
 此代码示例的第三部分是这两个控件的源代码 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 请注意，这些控件上的某些属性是用 `WebBrowsable` 特性标记的。 这使 <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> 控件可以动态生成用户界面 (UI) 以便用户在控件处于编辑模式时编辑这些属性。 属性也使用特性进行标记 `WebDisplayName` ，以指定显示在编辑 UI 中每个控件旁边的标签文本。  
  
 要使代码示例运行，必须编译此源代码。 可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。 有关演示两种编译方法的演练，请参阅 [演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_DeclarativeCatalogPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Overview/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_DeclarativeCatalogPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Overview/VB/userinfowebpart.vb#6)]  
  
 在浏览器中加载页面时，请在 "**显示模式**" 下拉列表控件中选择 "**目录模式**" 以切换到目录模式。 在目录模式下，可以看到可添加到页面的控件。 添加所有三个控件，然后使用 " **显示模式** " 下拉列表将该页返回到 "浏览" 模式。 这三个控件显示在该页上。 如果使用 " **显示模式** " 下拉列表并将页面切换到编辑模式，则可以单击谓词菜单 (" **用户信息" web 部件** 控件的标题栏中的向下箭头) ，然后单击 " **编辑** " 以编辑控件。 编辑 UI 可见后，可以看到 <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> 控件。 请注意，将为 `UserInfoWebPart` 类的每个用特性标记的属性呈现一个控件 `WebBrowsable` 。 如果在编辑 UI 中进行一些更改，并单击 " **应用** " 按钮，则可以使用 " **显示模式** " 下拉列表将页面返回到浏览模式，并查看编辑更改的完整效果。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DeclarativeCatalogPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DeclarativeCatalogPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化此类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.%23ctor%2A>构造函数是默认构造函数; 类中没有声明任何构造函数 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> ，因此在创建类的新实例时，不会执行任何特殊任务。 .NET Framework 在内部使用构造函数来创建类的实例。  
  
 但这种情况不太可能，你需要 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.%23ctor%2A> 在自己的代码中以编程方式使用构造函数。 控件的预期用途是使页面开发人员能够在设计时以声明方式将其添加到页面中。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public override string AccessKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.AccessKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AccessKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AccessKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessKey : string with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.AccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在呈现 <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件时，Web 部件控件集不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value>表示键盘键的字符串，用于控件的快速键盘导航。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.AccessKey%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.AccessKey%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.AccessKey" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value>用于控件背景色的 <see cref="T:System.Drawing.Color" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackColor%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackColor%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.BackColor" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public override string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BackImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在呈现 <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件时，Web 部件控件集不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value>包含图像 URL 的字符串，该图像用作控件背景。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackImageUrl%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BackImageUrl%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.WebControls.Panel.BackImageUrl%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.BackImageUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value><see cref="T:System.Drawing.Color" />，用作控件四周的边框颜色。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderColor%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderColor%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderColor" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::BorderStyle BorderStyle { System::Web::UI::WebControls::BorderStyle get(); void set(System::Web::UI::WebControls::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Web.UI.WebControls.BorderStyle with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value><see cref="T:System.Web.UI.WebControls.BorderStyle" />，确定控件的边框类型和标题显示。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderStyle%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderStyle%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderStyle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderWidth As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit BorderWidth { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.BorderWidth : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Unit" />，确定控件四周的边框宽度。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderWidth%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.BorderWidth%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderWidth" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C#" Value="public override string CssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.CssClass" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CssClass : string with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.CssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.CssClassProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.CssClassProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value>一个字符串，包含用于为控件分配样式属性的级联样式表 (CSS) 类的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.CssClass%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.CssClass%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.CssClass" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public override string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value>一个字符串，它包含用作控件默认按钮的 <see cref="T:System.Web.UI.WebControls.Button" /> 控件的 ID。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.DefaultButton%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.DefaultButton%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.WebControls.Panel.DefaultButton%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.DefaultButton" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.ContentDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ContentDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Direction As ContentDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ContentDirection Direction { System::Web::UI::WebControls::ContentDirection get(); void set(System::Web::UI::WebControls::ContentDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Web.UI.WebControls.ContentDirection with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ContentDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.ContentDirection" />，指示控件中内容的流动方向。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Direction%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Direction%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.WebControls.Panel.Direction%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.Direction" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public override bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value>一个布尔值，指示控件当前已启用还是已禁用。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Enabled%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Enabled%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value>一个布尔值，指示控件是否可以使用主题。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.EnableTheming%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.EnableTheming%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">已尝试设置属性。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.EnableTheming" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.FontInfo Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FontInfo Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Font As FontInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FontInfo ^ Font { System::Web::UI::WebControls::FontInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Web.UI.WebControls.FontInfo" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FontInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.FontInfo" />，指示控件内容使用的字体。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Font%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Font%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.WebControls.WebControl.Font%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value>确定控件前景色的 <see cref="T:System.Drawing.Color" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ForeColor%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ForeColor%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ForeColor" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableWebPartDescriptions">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAvailableWebPartDescriptions () As WebPartDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPartDescriptionCollection ^ GetAvailableWebPartDescriptions();" />
      <MemberSignature Language="F#" Value="override this.GetAvailableWebPartDescriptions : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" Usage="declarativeCatalogPart.GetAvailableWebPartDescriptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回目录中可用 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的说明的集合。</summary>
        <returns>一个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" />，它包含目录中每个控件的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A>方法为类中声明的抽象基方法提供实现 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A>方法返回目录中每个控件的说明信息。 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>对象是一个对象，它包含有关控件的基本信息 <xref:System.Web.UI.WebControls.WebParts.WebPart> ，包括控件的 ID、对控件的对象引用，以及从类继承的几个重要属性的值 <xref:System.Web.UI.WebControls.WebParts.Part> ，例如 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> 和 <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> 。  
  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A>方法可提高性能。 创建目录时，它需要一些有关它所包含的每个控件的信息，包括标题、描述、图标 (（如果存在）) 和 ID。 无需创建每个控件的实例即可获取此信息， <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 创建目录的区域 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A> 将为每个将在目录中的控件调用方法，并且调用仅返回控件的说明信息。  
  
   
  
## Examples  
 下面的代码示例说明如何使用 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A> 方法。 此示例包含四个部分：  
  
-   使您能够在 Web 部件页上更改显示模式的用户控件。  
  
-   一个源代码文件，其中包含两个自定义 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件。  
  
-   包含 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 控件和 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 引用多个服务器控件的控件的网页。 该页还包含调用方法的事件处理代码 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A> 。  
  
-   说明如何在浏览器中加载页面时工作。  
  
 此代码示例的第一部分是用户控件，该控件使用户能够更改网页上的显示模式。 有关显示模式的详细信息以及此控件中源代码的说明，请参阅 [演练：在 Web 部件页上更改显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_DeclarativeCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_DeclarativeCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 此代码示例的第二部分是两个自定义控件的源代码 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 要使代码示例运行，必须编译此源代码。 可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。 有关演示两种编译方法的演练，请参阅 [演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_DeclarativeCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_DeclarativeCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 该示例的第三部分是包含控件的网页 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 。 请注意， `Button1_Click` 方法调用 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A> 方法，获取 <xref:System.Web.UI.WebControls.WebParts.WebPart> 目录中的控件说明，并将详细信息写出到标签。  
  
 [!code-aspx-csharp[WebParts_DeclarativeCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/CS/declarativeCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_DeclarativeCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/VB/declarativeCatalogPart_GetVB.aspx#1)]  
  
 在浏览器中加载页面时，请在 "**显示模式**" 下拉列表控件中选择 "**目录模式**" 以切换到目录模式。 在目录模式下，可以看到可添加到页面的控件。 可以单击 " **显示 WebPart 说明** " 按钮，将目录中的控件详细信息写入标签。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="GetWebPart">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPart GetWebPart (System.Web.UI.WebControls.WebParts.WebPartDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPart GetWebPart(class System.Web.UI.WebControls.WebParts.WebPartDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWebPart (description As WebPartDescription) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPart ^ GetWebPart(System::Web::UI::WebControls::WebParts::WebPartDescription ^ description);" />
      <MemberSignature Language="F#" Value="override this.GetWebPart : System.Web.UI.WebControls.WebParts.WebPartDescription -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="declarativeCatalogPart.GetWebPart description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.Web.UI.WebControls.WebParts.WebPartDescription" />
      </Parameters>
      <Docs>
        <param name="description"><see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />，包含控件的详细信息。</param>
        <summary>根据传入方法的说明值，返回对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的引用。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件，它的说明与 <paramref name="description" /> 中的值匹配。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart%2A>方法返回对控件的引用， <xref:System.Web.UI.WebControls.WebParts.WebPart> 其说明详细信息与传入方法的对象的值匹配 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> 。 通常，此方法与方法一起使用 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A> ，后者用于检索目录中的所有控件的说明。 <xref:System.Web.UI.WebControls.WebParts.WebPart>然后，可以通过将单个对象传递到方法，按需检索或操作各个控件 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart%2A> 。  
  
   
  
## Examples  
 下面的代码示例说明如何使用 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart%2A> 方法。 此示例包含四个部分：  
  
-   使您能够在 Web 部件页上更改显示模式的用户控件。  
  
-   一个源代码文件，其中包含两个自定义 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件。  
  
-   包含 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 控件和 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 引用多个服务器控件的控件的网页。 该页还包含调用方法的事件处理代码 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart%2A> 。  
  
-   说明如何在浏览器中加载页面时工作。  
  
 此代码示例的第一部分是用户控件，该控件使用户能够更改网页上的显示模式。 有关显示模式的详细信息以及此控件中源代码的说明，请参阅 [演练：在 Web 部件页上更改显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_DeclarativeCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_DeclarativeCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 此代码示例的第二部分是两个自定义控件的源代码 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 要使代码示例运行，必须编译此源代码。 可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。 有关演示两种编译方法的演练，请参阅 [演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_DeclarativeCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_DeclarativeCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 该示例的第三部分是包含控件的网页 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 。 请注意，该 `Button2_Click` 方法获取 <xref:System.Web.UI.WebControls.WebParts.WebPart> 目录中的控件说明，调用 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetWebPart%2A> 方法来检索与集合中第三个控件的说明匹配的控件，然后将该控件添加到页中。  
  
 [!code-aspx-csharp[WebParts_DeclarativeCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/CS/declarativeCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_DeclarativeCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Get/VB/declarativeCatalogPart_GetVB.aspx#1)]  
  
 在浏览器中加载页面时，请在 "**显示模式**" 下拉列表控件中选择 "**目录模式**" 以切换到目录模式。 在目录模式下，可以看到可添加到页面的控件。 如果单击 " **添加 TextDisplayWebPart** " 按钮，则会将该控件添加到页面，而无需通过普通目录用户界面 (UI) 添加该控件。 使用 " **显示模式** " 下拉列表将页面恢复到正常浏览模式;你添加的控件在页上可见。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="Description" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="Description" /> 不是可用的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> 实例。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="GroupingText">
      <MemberSignature Language="C#" Value="public override string GroupingText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupingText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GroupingText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property GroupingText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ GroupingText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupingText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GroupingText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value>一个字符串，包含控件中分组子控件部分上部的文字。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GroupingText%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GroupingText%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.WebControls.Panel.GroupingText%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.GroupingText" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Height As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Height { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.Height : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value>指示控件高度的 <see cref="T:System.Web.UI.WebControls.Unit" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Height%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Height%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.WebControls.WebControl.Height%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Height" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalAlign : System.Web.UI.WebControls.HorizontalAlign with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.HorizontalAlign" />，指示呈现控件时使用的水平对齐类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.HorizontalAlign%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.HorizontalAlign%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.WebControls.Panel.HorizontalAlign%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.HorizontalAlign" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="declarativeCatalogPart.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.ScrollBars ScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ScrollBars ScrollBars" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ScrollBars As ScrollBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ScrollBars ScrollBars { System::Web::UI::WebControls::ScrollBars get(); void set(System::Web::UI::WebControls::ScrollBars value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollBars : System.Web.UI.WebControls.ScrollBars with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ScrollBars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ScrollBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value>控件中使用的 <see cref="T:System.Web.UI.WebControls.ScrollBars" />（如果需要）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ScrollBars%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ScrollBars%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.WebControls.Panel.ScrollBars%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.ScrollBars" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value>包含控件外观 ID 的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.SkinID%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.SkinID%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">已尝试设置属性。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SkinID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public override short TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TabIndex As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property short TabIndex { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.TabIndex : int16 with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value>short 类型的数字，用作此控件的 Tab 键顺序索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.TabIndex%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.TabIndex%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TabIndex" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在控件标题栏中显示的标题。</summary>
        <value>用作控件标题的字符串。 默认值是 Web 部件控件集提供的、计算出的控件名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Title%2A> <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 当控件在目录模式中可见时，属性值显示在控件的标题栏中。 在页面中声明控件时，可以使用属性设置属性的值 `Title` 。 如果未提供标题的值，则使用特定于区域性的默认值描述此控件允许用户编辑的属性类型。  
  
   
  
## Examples  
 下面的代码示例演示了属性的声明性用法 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Title%2A> 。 有关运行此示例所需的完整代码，请参阅类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 。  
  
 此示例演示如何 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Title%2A> 在声明性标记中设置控件的属性。 如果未设置属性，或指定了空字符串 ( "" ) ，则将提供默认标题。  
  
 [!code-aspx-csharp[WebParts_DeclarativeCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Overview/CS/declarativeCatalogPartCS.aspx#2)]
 [!code-aspx-vb[WebParts_DeclarativeCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Overview/VB/declarativeCatalogPartVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public override string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value>包含工具提示内容的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ToolTip%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.ToolTip%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ToolTip" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value>指示控件是否可见的布尔值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Visible%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Visible%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.Control.Visible%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Visible" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartsListUserControlPath">
      <MemberSignature Language="C#" Value="public string WebPartsListUserControlPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WebPartsListUserControlPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath" />
      <MemberSignature Language="VB.NET" Value="Public Property WebPartsListUserControlPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WebPartsListUserControlPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WebPartsListUserControlPath : string with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.UserControlFileEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.UserControlFileEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.UserControlFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.UserControlFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用户控件的路径，该控件包含用于该目录的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 或其他服务器控件的列表。</summary>
        <value>带有用户控件路径的字符串，该控件包含一组 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 或服务器控件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath%2A>属性允许开发人员指定包含一组 <xref:System.Web.UI.WebControls.WebParts.WebPart> 或可添加到区域的其他服务器控件的用户控件的路径 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 。 如果向该属性分配了用户控件的有效路径，则会在编译时自动将控件添加到目录中。  
  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath%2A>属性可以很有用，因为它提供了一种方法，用于在多个不同的页面或站点上打包和重用一组可用控件。 开发人员可以使用此属性指向引用整个控件集的用户控件，而不是在目录中为每个要提供目录的页面手动声明每个控件 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 此外， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath%2A> 属性可以与在网页 <xref:System.Web.UI.WebControls.WebParts.WebPart> 上的元素中显式声明的控件一起使用 `<asp:declarativecatalogpart>` 。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath%2A> 和编程方式使用属性。 此示例包含五个部分：  
  
-   使您能够在 Web 部件页上更改显示模式的用户控件。  
  
-   一个源代码文件，其中包含两个自定义 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件。  
  
-   其他用户控件，其中包含对自定义 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件的引用，并且由网页 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath%2A> 上的属性引用。  
  
-   包含 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 控件的网页，以及 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 引用包含自定义控件的用户控件的控件。  
  
-   说明如何在浏览器中加载页面时工作。  
  
 此代码示例的第一部分是用户控件，该控件使用户能够更改网页上的显示模式。 有关显示模式的详细信息以及此控件中源代码的说明，请参阅 [演练：在 Web 部件页上更改显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_DeclarativeCatalogPart_WebPartsList#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_WebPartsList/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_DeclarativeCatalogPart_WebPartsList#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_WebPartsList/VB/DisplayModeMenuVB.ascx#7)]  
  
 此代码示例的第二部分是两个自定义控件的源代码 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 要使代码示例运行，必须编译此源代码。 可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。 有关演示两种编译方法的演练，请参阅 [演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_DeclarativeCatalogPart_WebPartsList#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_WebPartsList/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_DeclarativeCatalogPart_WebPartsList#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_WebPartsList/VB/userinfowebpart.vb#6)]  
  
 此代码示例的第三部分是包含自定义控件的用户控件 <xref:System.Web.UI.WebControls.WebParts.WebPart> ，并由 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath%2A> 属性引用。  
  
 [!code-aspx-csharp[WebParts_DeclarativeCatalogPart_WebPartsList#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_WebPartsList/CS/WebUserControlCS.ascx#5)]
 [!code-aspx-vb[WebParts_DeclarativeCatalogPart_WebPartsList#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_WebPartsList/VB/WebUserControlVB.ascx#5)]  
  
 该示例的第四部分是包含控件的网页 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 。 请注意， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath%2A> 属性在页的标记中以声明方式设置; 当用户单击在页面处于目录显示模式时公开的按钮时，还可以通过编程方式设置该属性值。  
  
 [!code-aspx-csharp[WebParts_DeclarativeCatalogPart_WebPartsList#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_WebPartsList/CS/declarativeCatalogPart_UserControlListCS.aspx#1)]
 [!code-aspx-vb[WebParts_DeclarativeCatalogPart_WebPartsList#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_WebPartsList/VB/declarativeCatalogPart_UserControlListVB.aspx#1)]  
  
 在浏览器中加载页面时，请在 "**显示模式**" 下拉列表控件中选择 "**目录模式**" 以切换到目录模式。 在目录模式下，可以看到可添加到页面的控件。 单击 " **更新 WebPartsListUserControlPath" 属性** 按钮，无需在文本框中输入值。 请注意，如果将空字符串 ( "" ) 分配给属性，则更新目录，并且仅在页面中显式声明的控件保留在目录中。 如果在文本框中键入包含控件的用户控件的名称 <xref:System.Web.UI.WebControls.WebParts.WebPart> ，然后再次单击 " **更新 WebPartsListUserControlPath" 属性** 按钮， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsListUserControlPath%2A> 属性现在再次指向用户控件，其他控件将重新出现 <xref:System.Web.UI.WebControls.WebParts.WebPart> 在目录中。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartsTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate WebPartsTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate WebPartsTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property WebPartsTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ WebPartsTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WebPartsTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置对包含在目录中声明的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的模板的引用。</summary>
        <value>包含在目录中声明的控件的 <see cref="T:System.Web.UI.ITemplate" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsTemplate%2A>属性引用的模板包含在网页上作为目录的一部分声明的控件。 在区域内声明性元素的层次结构中 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> ， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsTemplate%2A> 属性由元素表示，该元素 `<webpartstemplate>` 是元素的子元素 `<asp:declarativecatalogpart>` ，并且包含目录中显式声明的所有服务器控件。  
  
   
  
## Examples  
 下面的代码示例演示了属性的声明性用法 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.WebPartsTemplate%2A> 。 有关运行此示例所需的完整代码，请参阅类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 。  
  
 此代码演示如何 `<webpartstemplate>` `<asp:declarativecatalogpart>` 在声明性标记中的元素内插入元素。  
  
 [!code-aspx-csharp[WebParts_DeclarativeCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Overview/CS/declarativeCatalogPartCS.aspx#2)]
 [!code-aspx-vb[WebParts_DeclarativeCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_DeclarativeCatalogPart_Overview/VB/declarativeCatalogPartVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Width As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Width { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.Width : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value>一个指示控件宽度的 <see cref="T:System.Web.UI.WebControls.Unit" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Width%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Width%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.WebControls.WebControl.Width%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Width" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public override bool Wrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Wrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Wrap" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Wrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Wrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Wrap : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Wrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件不使用此继承的属性。 此属性被重写只是为了防止它出现在 Microsoft Visual Studio 2005 设计器工具中。</summary>
        <value>一个布尔值，指示控件中较长的行是否可以换行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Wrap%2A>作为控件的成员的属性未在用于 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 呈现控件的 Web 部件控件集内的任何位置使用。 因此，不应使用此属性;设置它不会对呈现产生任何影响。  
  
 若要防止开发人员使用此属性，请将代码特性设置为在 Visual Studio 中隐藏它。 在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Visual Studio 中使用控件时， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.Wrap%2A> 属性在 "属性" 窗格或 IntelliSense 中不可见。  
  
 如果要使用此属性，则需要创建从类继承的自定义类 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 自定义类可以使用继承的 <xref:System.Web.UI.WebControls.Panel.Wrap%2A> 属性，也可以重写该属性并更改其行为。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.Wrap" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
  </Members>
</Type>
