<Type Name="CatalogZoneBase" FullName="System.Web.UI.WebControls.WebParts.CatalogZoneBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ac2d1c60b267248947eedf5f5f63a5cd75c531d" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89756739" /></Metadata><TypeSignature Language="C#" Value="public abstract class CatalogZoneBase : System.Web.UI.WebControls.WebParts.ToolZone, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CatalogZoneBase extends System.Web.UI.WebControls.WebParts.ToolZone implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CatalogZoneBase&#xA;Inherits ToolZone&#xA;Implements IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogZoneBase abstract : System::Web::UI::WebControls::WebParts::ToolZone, System::Web::UI::IPostBackDataHandler" />
  <TypeSignature Language="F#" Value="type CatalogZoneBase = class&#xA;    inherit ToolZone&#xA;    interface IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.ToolZone</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>用作充当目录的所有区域控件的基类。 目录包含 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的列表，用户可将这些控件添加到网页。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类是从类继承的基类 <xref:System.Web.UI.WebControls.WebParts.ToolZone> 。 它提供派生区域的基本行为集。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类提供 (UI) 的唯一用户界面，使用户能够将 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件和其他服务器控件添加到网页中。 从类派生的控件（ <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 如 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> ）是实际放置在网页上的控件。 它们充当其他控件（称为控件）的容器， <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 这些控件创建服务器控件的列表供用户添加到页面中。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>仅当页处于目录显示模式时，派生自类的区域才能出现。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>区域只能包含 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件，相反， <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件只能驻留在区域中 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。  
  
 将服务器控件添加到目录的机制是从基类派生的下列三个控件集 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。  
  
|控制|说明|  
|-------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>|维护对页面上已关闭的控件的引用。 您可以重新打开这些控件， (添加回用户) 的页面。|  
|<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>|包含对在网页的标记中的 Web 部件目录中声明的控件的引用。 用户可以将这些控件添加到网页。|  
|<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>|为用户提供 UI，以将定义文件上传到目录，以便可以将该控件添加到网页中。 定义文件是带有的 XML 文件。导入控件的设置的 WebPart 文件扩展名。 在导入定义文件之前，必须在服务器上显示该控件。|  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>类具有很多用于显示控件目录的属性 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A>属性引用将选定控件从目录添加到页面的谓词，而 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A> 属性引用关闭目录并将页的显示模式返回到浏览模式的谓词。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>属性引用 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 区域中所有控件的集合。 一些面向文本的属性（例如 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A> 、 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A> 和 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> ）重写基属性，以提供适合于目录的默认文本。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A>属性包含下拉列表控件旁边的文本，该控件允许用户选择要将控件添加到哪个区域。  
  
 类中包含多个其他属性 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>属性是当前所选控件的唯一字符串标识符 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons%2A>属性指示是否显示可通过设置控件上的属性与控件相关联的图标 <xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart> 。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>属性包含 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 区域中当前未选定的控件的链接的样式特性。 相反， <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> 属性包含指向 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 用户当前在区域中选定的控件的链接的样式特性。  
  
 除了属性外，类中还有一些方法，还包括 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 从其他基控件继承的标准事件处理和呈现方法，这些方法是专为处理控件目录而设计的。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome%2A>方法创建 chrome (外围用户界面元素，如边框、动词、图标和标题) 围绕区域中的每个 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件，还处理控件的呈现。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>方法是抽象方法; 派生类将重写它，以创建 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 区域中包含的所有控件的实例。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A>如果 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 区域中控件的集合出于某种编程原因发生更改，则派生类可以调用方法，而派生类则需要重新创建集合。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData%2A>每当页面回发到服务器时，该方法都将加载目录中控件旁边的复选框的以前存在状态 <xref:System.Web.UI.WebControls.WebParts.WebPart> ; 相反，该 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState%2A> 方法保存复选框的状态。 最后， <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks%2A> 方法为 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 包含在区域中的每个控件的链接提供所有呈现。  
  
   
  
## Examples  
 下面的代码示例演示了类的几个声明性和编程使用 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。 由于类是抽象类，因此代码示例使用 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Web 部件控件集附带的派生类，其中演示了它从类继承的属性和方法 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。  
  
 此代码示例包含四个部分：  
  
-   使您能够更改网页上的显示模式的用户控件。  
  
-   包含对控件的引用的网页 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> ，以及演示某些键类成员使用情况的一些代码 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPart>添加到自定义控件的自定义控件 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 。  
  
-   说明如何在浏览器中工作。  
  
 此代码示例的第一部分是用户控件，使您可以更改页面上的显示模式。 有关显示模式的详细信息以及此控件中源代码的说明，请参阅 [演练：在 Web 部件页上更改显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/displaymodemenucs.ascx#8)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/displaymodemenuvb.ascx#8)]  
  
 此代码示例的第二部分是包含对控件的声明性引用的网页 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 。 页面顶部附近有两个 `Register` 指令-一个用于用户控件，一个用于自定义 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件。 请注意，元素下面的元素 `<asp:WebPartZone>` `<asp: CatalogZone>` 包含对自定义控件的声明性引用 <xref:System.Web.UI.WebControls.WebParts.WebPart> 和 ASP.NET <xref:System.Web.UI.WebControls.Calendar> 控件。 区域还设置了各种标记和属性来确定其外观和行为。 `<script>`页中的标记之间是各种事件处理代码，其中的大多数代码演示了成员的各种编程使用 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#1)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#1)]  
  
 此代码示例的第三部分是名为的自定义 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件 `TextDisplayWebPart` 。 它在区域内声明，最终用户可以将其从目录添加到页面。 要使代码示例运行，必须编译此源代码。 可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。 有关这两种编译方法的演示，请参阅 [演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/textdisplaywebpart.cs#9)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/textdisplaywebpart.vb#9)]  
  
 请注意，若要使代码示例正常运行，必须在 Web.config 文件中添加一个设置，以便导出 Web 部件说明文件。 请确保在此代码示例的网页所在的同一目录中有一个 Web.config 文件。 在 `<system.web>` 部分中，请确保有一个 `<webParts>` 元素的 `enableExport` 属性设置为 `true` ，如以下标记所示。  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 当你在浏览器中加载页面时，可以从下拉列表框中选择 " **目录** " 以切换到目录显示模式。 当目录可见时，可以看到两个服务器控件，可以从目录添加到该页，还可以在 UI 中记下声明性和编程方式使用 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 类成员的效果。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>如果要开发用于承载控件的自定义区域 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> ，则必须确定是否要提供区域模板支持。 区域模板由实现接口的类型创建 <see cref="T:System.Web.UI.ITemplate" /> ，如果要使页面开发人员能够使用自定义区域 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 在网页的声明性标记中引用区域中的控件，则这是必需的。 如果需要区域模板支持，应从 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> 类继承。 相反，如果您的自定义区域及其 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控件将是独立的，并且它们将以编程方式创建，而页面开发人员无需任何选项即可在区域模板中以声明方式指定控件，则可以直接从 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 类继承。 如果从 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 类继承，则必须重写 <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" /> 方法，并将 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 或其他所需的服务器控件添加到 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> 对象中。</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CatalogZoneBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CatalogZoneBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化该类供继承的类实例使用。 此构造函数只能由继承的类调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 初始化派生类时调用构造函数，如 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Web 部件控件集提供的类。 基本 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.%23ctor%2A> 构造函数通过将相应的对象传递给控件，帮助准备页，以显示 Web 部件目录用户界面 (UI) <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 。 具体而言，构造函数传递一个 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> 对象。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="AddVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb AddVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb AddVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AddVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ AddVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AddVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 对象的引用，最终用户使用该对象可以将控件从目录添加到 Web 部件页。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />，最终用户可用来将控件从目录添加到网页。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 添加谓词由 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A> 派生自类的控件的属性引用 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。 "添加谓词" 向网页添加最终用户在目录中选定的控件。 通常，add 谓词在用户界面中显示 (UI) 作为 <xref:System.Web.UI.WebControls.Button> 控件，尽管它也可以是链接或图像。  
  
 添加谓词是一个区域级别的控件，这意味着虽然目录中可能有多个 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件，但 add 谓词适用于用户选择的所有控件，并将它们添加到所选区域。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A> 和编程方式访问属性。 有关运行此示例所需的完整代码，请参阅类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。  
  
 此代码示例的第一部分演示如何在网页中以 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> 声明方式访问属性。 此示例自定义谓词的文本。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 该示例的第二部分演示如何 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A> 通过使用切换按钮来启用或禁用属性以编程方式访问属性。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#3)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#3)]  
  
 当你在浏览器中加载页面时，可以从下拉列表中选择 " **目录** " 以切换到目录显示模式。 当目录可见时，可以在控件上检查添加谓词的自定义文本 <xref:System.Web.UI.WebControls.Button> ，您可以单击 "启用" 或 " **禁用谓词** " 按钮，以说明您可以通过编程方式访问应用谓词。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CatalogPartChrome">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPartChrome CatalogPartChrome { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPartChrome CatalogPartChrome" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CatalogPartChrome As CatalogPartChrome" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPartChrome ^ CatalogPartChrome { System::Web::UI::WebControls::WebParts::CatalogPartChrome ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CatalogPartChrome : System.Web.UI.WebControls.WebParts.CatalogPartChrome" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartChrome</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> 类的实例的引用，该类与 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 区域关联。</summary>
        <value>与区域关联的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome%2A>调用方法时，它将创建类的一个实例 <xref:System.Web.UI.WebControls.WebParts.CatalogPartChrome> ，并且此实例用于呈现外围用户界面 (UI) 元素 (也称为区域中所有控件的 chrome) <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。  
  
 单个控件的 chrome 元素 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 包含其边框和标题文本。 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>默认情况下，Web 部件控件集提供的控件不具有标头谓词。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CatalogParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPartCollection CatalogParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CatalogParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CatalogParts As CatalogPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ CatalogParts { System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CatalogParts : System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 区域中包含的所有 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 控件的集合。</summary>
        <value>包含区域中所有单个 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> 控件的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>属性提供对区域中所有控件的集合的引用 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 它同时引用 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 随 Web 部件控件集提供的控件以及 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 添加到该区域中的任何自定义控件。  
  
 当另一个方法访问该属性时，该集合最初会创建 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A> ，并且属性将调用 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> 方法。  
  
> [!NOTE]
>  请注意， <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 在方法的实现中添加到控件集合的任何都 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> 必须为其 ID 属性分配一个值，否则，在将集合分配给属性时会引发异常 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何以 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A> 编程方式访问属性。 有关运行此示例所需的完整代码，请参阅类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。  
  
 此代码示例演示如何访问 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A> 属性、循环访问集合，以及列出 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 区域中所有控件的 id。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#4)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#4)]  
  
 当你在浏览器中加载页面时，可以从下拉列表中选择 " **目录** " 以切换到目录显示模式。 当目录可见时，可以单击 " **列表 CatalogParts** " 按钮以演示如何 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A> 访问属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">要添加到集合的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 的 ID 属性尚未赋值。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="protected override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.Close" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="catalogZoneBase.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将网页从目录显示模式切换到正常浏览模式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.Close%2A>方法将忽略目录中当前选定的任何控件。 它只是调用 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 控件以将网页返回到浏览模式。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode" />
        <altmember cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CloseVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CloseVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ CloseVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 对象的引用，最终用户可使用该对象关闭目录用户界面 (UI) 并将页返回到正常浏览模式。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />，最终用户可用来关闭网页上的目录用户界面。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Close 谓词由 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A> 派生自类的控件的属性引用 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。  
  
 用户可以在区域页脚中单击 "关闭" 谓词。 当用户单击 "关闭" 谓词时， <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 用户选择的任何控件都将被忽略，目录 UI 会关闭，并且页面将返回到正常浏览模式。  
  
 Close 谓词是一个区域级别的控件，这意味着其操作将应用于整个区域的级别。 当用户单击 "关闭" 谓词时，已选中但未添加到页面中的任何控件都将被忽略，目录将关闭，并且页面将返回到浏览模式。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A> 和编程方式访问属性。 有关运行此示例所需的完整代码，请参阅类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。  
  
 此代码示例的第一部分演示如何在网页中以 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A> 声明方式访问属性。 此示例自定义 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb.Description%2A> 谓词的属性。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 该示例的第二部分演示如何 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A> 通过使用切换按钮来启用或禁用属性以编程方式访问属性。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#3)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#3)]  
  
 当你在浏览器中加载页面时，可以从下拉列表中选择 " **目录** " 以切换到目录显示模式。 当目录可见时，通过将鼠标指针放在 " **关闭** " 按钮上，可以在工具提示中看到其说明文本。 您还可以单击 " **启用" 或 "禁用谓词** " 按钮，以演示您可以通过编程方式访问关闭谓词。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogPartChrome">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.CatalogPartChrome CreateCatalogPartChrome ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartChrome CreateCatalogPartChrome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateCatalogPartChrome () As CatalogPartChrome" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::CatalogPartChrome ^ CreateCatalogPartChrome();" />
      <MemberSignature Language="F#" Value="abstract member CreateCatalogPartChrome : unit -&gt; System.Web.UI.WebControls.WebParts.CatalogPartChrome&#xA;override this.CreateCatalogPartChrome : unit -&gt; System.Web.UI.WebControls.WebParts.CatalogPartChrome" Usage="catalogZoneBase.CreateCatalogPartChrome " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartChrome</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> 对象的实例，该对象用于呈现区域中 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控件的外围用户界面 (UI) 元素。</summary>
        <returns>呈现区域外围用户界面元素的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome%2A> 方法将返回 <xref:System.Web.UI.WebControls.WebParts.CatalogPartChrome> 对象。 单个控件的 chrome 元素 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 包含其边框和标题文本。 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>默认情况下，Web 部件控件集提供的控件不具有标头谓词。 但是，可以设置 <xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A> 控件的属性 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> ，以便可以根据需要以编程方式最小化和还原控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogParts">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateCatalogParts () As CatalogPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ CreateCatalogParts();" />
      <MemberSignature Language="F#" Value="abstract member CreateCatalogParts : unit -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="catalogZoneBase.CreateCatalogParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>提供一个基方法声明，派生的区域可以重写该声明，以便处理创建 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控件的详细信息，这些控件包含在某个区域中。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />，包含与区域关联的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控件的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>方法不提供实现。 它应在派生类中实现，并且应用于在 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 承载网页进入目录模式时创建区域中包含的控件集合的实例。 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A?displayProperty=nameWithType>方法提供方法的实现的一个示例 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> 。  
  
> [!NOTE]
>  请注意， <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 在方法的实现中添加到控件集合的任何都 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> 必须为其 ID 属性分配一个值，否则，在将集合分配给属性时会引发异常 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A> 。  
  
 方法可以 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 从多个源创建控件：在控件内以持久性格式声明的控件 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> ，或在各种存储机制（如 XML 文件或数据库）中保留的控件。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>创建自定义 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控件的开发人员应继承自 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 或 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> 类，如果他们想要创建自定义 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> 对象来呈现其自定义控件，则重写此方法 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="catalogZoneBase.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建与 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 区域关联的子控件集。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="EmptyZoneText">
      <MemberSignature Language="C#" Value="public override string EmptyZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EmptyZoneText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyZoneText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyZoneText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当区域不包含任何控件时显示的消息。</summary>
        <value>一个字符串，其中包含在空区域中显示的消息。 默认的区域性特定字符串由 .NET Framework 提供。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A>如果 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 区域不包含任何控件，则当网页进入目录模式时，将显示属性的字符串值 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式使用 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A> 属性。 有关运行此示例所需的完整代码，请参阅类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。  
  
 请注意，该代码示例声明了两个 `<asp:catalogzone>` 元素，第二个元素不声明任何 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件，尽管它确实为属性赋值 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A> 。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 当你在浏览器中加载页面时，可以从下拉列表中选择 " **目录** " 以切换到目录显示模式。 当目录可见时，请注意，第一个区域（其中包含两个控件）的下面 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 将显示第二个区域，并显示该属性的内容， <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A> 因为它不包含任何控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置区域的页眉区的文本。</summary>
        <value>一个字符串，包含区域的页眉文本。 默认的区域性特定字符串由 .NET Framework 提供。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性的字符串值 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A> 显示在区域的标题区域中，该区域位于 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 区域的最上方。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>当页面进入目录模式时，将显示属性的文本， (UI) 的目录用户界面变得可见。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A> 和编程方式使用属性。 有关运行此示例所需的完整代码，请参阅类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。  
  
 请注意，该代码示例声明了两个 `<asp:catalogzone>` 元素。 第二个不声明任何 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件，而是声明属性的值 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A> 。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 在代码示例的第二部分中， <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A> 第一个区域中属性的值以编程方式分配给不同的值。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#5)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#5)]  
  
 当你在浏览器中加载页面时，可以从下拉列表中选择 " **目录** " 以切换到目录显示模式。 当目录可见时，请注意每个区域的 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A> 标题区中显示的每个属性的值。 您可以单击 " **设置区域文本属性** " 按钮，然后将 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A> 上层区域的属性设置为代码中分配给它的值。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderText" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="InstructionText">
      <MemberSignature Language="C#" Value="public override string InstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstructionText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置区域中为最终用户提供说明的文本。</summary>
        <value>一个字符串，其中包含为最终用户提供的说明。 Web 部件控件集提供的特定于区域性的默认字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性的字符串值 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> 显示在区域的标题区域的正下方 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>当页面进入目录模式时，将显示属性的文本， (UI) 的目录用户界面变得可见。  
  
 属性的目的 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> 是向用户提供有关在显示目录 UI 时要执行的操作的一般说明。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> 和编程方式使用属性。 有关运行此示例所需的完整代码，请参阅类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。  
  
 请注意，该代码示例声明 `<asp:catalogzone>` 了两个元素，第一个元素声明了属性的值 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> 。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 在代码示例的第二部分中， <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> 第一个区域中属性的值以编程方式分配给不同的值。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#5)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#5)]  
  
 当你在浏览器中加载页面时，可以从下拉列表中选择 " **目录** " 以切换到目录显示模式。 目录可见时，请注意 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> 每个区域的标题区中显示的属性值。 您可以单击 " **设置区域文本属性** " 按钮，然后将 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> 上层区域的属性设置为代码中分配给它的值。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ToolZone.InstructionText" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="InvalidateCatalogParts">
      <MemberSignature Language="C#" Value="protected void InvalidateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvalidateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvalidateCatalogParts ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvalidateCatalogParts();" />
      <MemberSignature Language="F#" Value="member this.InvalidateCatalogParts : unit -&gt; unit" Usage="catalogZoneBase.InvalidateCatalogParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>销毁与 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 区域关联的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 控件集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A>如果 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 与某个区域关联的控件列表 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 由于某种原因而发生更改，则派生类可以调用方法，并且派生类需要获取已更新的 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件列表。 派生类应该首先调用 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A> 以销毁当前集合，然后基类将 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> 根据需要调用以创建更新的集合。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="catalogZoneBase.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">以前保存的状态数据。</param>
        <summary>加载上一次控件属性页请求的状态，即使控件禁用视图状态，也应在回发间保存控件属性。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" /> 不是有效的控件状态。</exception>
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="catalogZoneBase.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">控件的主要标识符。</param>
        <param name="postCollection">发布到服务器的名称/值对的集合。</param>
        <summary>当页回发到服务器时，处理目录中 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的对应复选框的状态。</summary>
        <returns>与重写基方法相比，此方法始终返回 <see langword="false" />，因为该类不公开任何更改事件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法循环访问控件的集合 <xref:System.Web.UI.WebControls.CheckBox> ，以确定 <xref:System.Web.UI.WebControls.WebParts.WebPart> 用户选择了目录中的哪些或其他服务器控件。 选定的项将分配给内部数组，然后将处理该数组，以将相应的控件添加到网页中。  
  
 方法不设计为从代码中调用;它由 Web 部件控件集内部使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="catalogZoneBase.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">以前保存的状态数据。</param>
        <summary>为某个区域加载以前保存的状态信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要由 .NET Framework 基础结构使用，不应在代码中直接使用。 不过，您可以重写此方法以指定自定义服务器控件如何还原其视图状态。 有关详细信息，请参阅 [ASP.NET 状态管理概述](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100))。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadViewState%2A>方法首先调用基方法来加载以前存在的任何状态信息。 接下来，它添加包含添加谓词、close 谓词、对象和对象的状态信息的视图状态数据对象 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" /> 对象的大小与当前视图状态对象的大小不相等。</exception>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="catalogZoneBase.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>注册页对象以使页需要控件状态。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="catalogZoneBase.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.PreRender" /> 事件并注册页对象以使其需要回发。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="PartLinkStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style PartLinkStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style PartLinkStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PartLinkStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ PartLinkStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PartLinkStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象包含区域中当前未选 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控件的样式特性。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Style" />，包含当前未选控件的样式特性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 区域中，将显示每种类型的控件的链接 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> ： <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 、 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 和 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 。 当用户单击其中一个链接时，相应的 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件将变为选定的控件，并且该选定控件包含的子控件将变为可见。  
  
 <xref:System.Web.UI.WebControls.Style>属性引用的对象 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> 包含 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 当前未选定的控件的样式特性。 尽管属性引用的对象是只读的，但仍可以使用它来设置未选定控件的基础样式特征 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> 和编程方式使用属性。 有关运行此示例所需的完整代码，请参阅类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。  
  
 请注意，代码示例的第一部分声明了两个 `<asp:catalogzone>` 元素，第一个部分声明属性的值 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> 。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 在代码示例的第二部分中，未选定控件的文本颜色 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 设置为不同的值。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#7)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#7)]  
  
 当你在浏览器中加载页面时，可以从下拉列表中选择 " **目录** " 以切换到目录显示模式。 如果目录可见，请注意 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 区域中列出的未选定控件的样式特性 (默认情况下，所选 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件是 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 控件) 。 您可以单击 " **更改部件链接样式** " 按钮，以更改未选定控件的文本颜色。 您还可以单击未选定控件的链接，以查看在选择控件时样式属性如何变化。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected override void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="override this.RaisePostBackEvent : string -&gt; unit" Usage="catalogZoneBase.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">包含该事件参数的 <see cref="T:System.String" />。</param>
        <summary>执行与某一区域谓词关联的操作，或引发发布回服务器的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `eventArgument` 参数数据指示已单击添加谓词或关闭谓词，则 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent%2A> 方法会执行与谓词关联的操作，例如向 <xref:System.Web.UI.WebControls.WebParts.WebPart> 页面添加控件或关闭目录。 如果出于任何其他原因调用该方法，则将调用基方法来向服务器引发回发事件。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>如果要将自定义谓词添加到 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 区域，则需要重写方法， <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" /> 以便在用户单击自定义谓词时处理事件。</para></block>
        <altmember cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="catalogZoneBase.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收区域内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将区域呈现给指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Render%2A>方法会重写类中的基方法 <xref:System.Web.UI.WebControls.WebControl> ，以调用 <xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A> 方法，这将验证是否在运行时为区域控件呈现 HTML 窗体。 验证完成后，该方法将呈现区域的剩余内容。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="RenderBody">
      <MemberSignature Language="C#" Value="protected override void RenderBody (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBody(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderBody (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderBody(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBody : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="catalogZoneBase.RenderBody writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收区域的正文内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>重写基方法，以便呈现某个区域的正文区，该区域从 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 类派生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody%2A>方法呈现区域的正文区，该区域 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 是页眉和页脚区之间的主要内容区域，包含 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody%2A>方法会重写类中的基方法， <xref:System.Web.UI.WebControls.WebParts.WebZone> 以提供专门呈现，用于寻址仅适用于区域的布局和样式特性 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。 方法将呈现一个表，其中包含正文的全部内容，并根据各种条件（包括区域中的控件数）设置不同的属性值 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 如果有多个 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件，则会为每个控件创建一个链接，并且仅显示当前所选控件的内容。 在 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome%2A> 选定控件的属性 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 和当前未选定的控件的属性中设置特殊样式特性。  
  
 如果 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 区域中没有任何控件，则此 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody%2A> 方法将呈现属性的值 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.RenderBody(System.Web.UI.HtmlTextWriter)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="RenderCatalogPartLinks">
      <MemberSignature Language="C#" Value="protected virtual void RenderCatalogPartLinks (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderCatalogPartLinks(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderCatalogPartLinks (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderCatalogPartLinks(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderCatalogPartLinks : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderCatalogPartLinks : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="catalogZoneBase.RenderCatalogPartLinks writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" />，接收到区域的控件的链接的内容。</param>
        <summary>呈现到 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 区域中单个 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 控件的链接。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks%2A> <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 如果有多个控件，则方法将呈现指向区域中各个控件的链接 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。  
  
 当前所选控件的链接以 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 不同的方式呈现，因此它从未选定的控件中突出显示。 开发人员可分别使用和属性设置选定和未选定的控件链接的样式特性 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> 。  
  
 指向 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 区域中的控件的链接不是导航，它们用于显示控件 (UI) 的用户界面。 当用户单击控件的链接时，将隐藏任何其他显示的控件的 UI，并显示所选控件的 UI。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>如果创建从类继承的自定义类 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> ，可以选择重写 <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks(System.Web.UI.HtmlTextWriter)" /> 方法。 此方法使您能够以编程方式控制 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 区域中控件的链接的呈现方式。</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="RenderFooter">
      <MemberSignature Language="C#" Value="protected override void RenderFooter (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderFooter(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderFooter(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderFooter (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderFooter(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderFooter : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="catalogZoneBase.RenderFooter writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">呈现区域页脚区的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>呈现 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 区域的页脚区。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 区域的脚注是区域的 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 底部区域，其中包含区域级别的谓词，如 add 谓词和 close 谓词。 在基础标记中，页脚只是 HTML 表中的一个单元格。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderFooter%2A>方法首先为脚注创建样式属性，然后调用 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs%2A> 方法以呈现添加和关闭谓词。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.RenderFooter(System.Web.UI.HtmlTextWriter)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="RenderVerbs">
      <MemberSignature Language="C#" Value="protected override void RenderVerbs (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderVerbs(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderVerbs (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderVerbs(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderVerbs : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="catalogZoneBase.RenderVerbs writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">呈现区域谓词的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>呈现 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 区域页脚区中的谓词。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 方法将在 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs%2A> 区域的页脚区域中呈现 add 谓词和 close 谓词 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />对于 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 开发人员添加到自定义区域中的任何自定义对象，该方法不会处理此呈现 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 。 如果要向类添加自定义谓词 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> ，则必须从 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 类继承，并重写 <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" /> 方法，该方法可用于呈现区域的自定义谓词。 还必须重写 <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" /> 方法，以便在用户单击自定义谓词时处理事件。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="catalogZoneBase.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存在网页回发到服务器之后 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 控件状态发生的所有更改。</summary>
        <returns><see cref="T:System.Object" />，包含控件的状态数据。 如果状态没有任何更改，则该方法返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState%2A> 方法涉及控件操作 (（如索引或关键字) ）所必需的状态数据，与控件的视图状态数据不同。  
  
 方法首先调用基方法来保存控件的现有状态数据。 接下来， <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 通过检查属性是否有值来确定当前是否选中了区域中的控件 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A> 。 如果有选定的控件，则该方法将使用所选控件中的状态数据更新现有状态数据，然后返回所有状态数据。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>您可以选择重写 <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState" /> 派生类中的方法，以便可以更新区域中其他自定义对象的已保存控件状态。</para></block>
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="catalogZoneBase.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将页面发布回服务器之后，保存已发生的所有视图状态的更改。</summary>
        <returns>返回区域控件的当前视图状态。 如果没有与区域关联的视图状态，此方法将返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveViewState%2A>方法调用基方法以保存与区域关联的视图状态 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。 接下来，它为添加和关闭谓词以及与属性关联的对象保存任何视图状态 <xref:System.Web.UI.WebControls.Style> <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedCatalogPartID">
      <MemberSignature Language="C#" Value="public string SelectedCatalogPartID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedCatalogPartID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedCatalogPartID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedCatalogPartID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedCatalogPartID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个字符串，该字符串用作区域中当前所选 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控件的标识符。</summary>
        <value>字符串，用作当前所选控件的标识符。 默认为控件的 <see cref="P:System.Web.UI.Control.ID" /> 属性值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>属性允许您为当前选定的控件设置所选标识符 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 这不会更改控件的 <xref:System.Web.UI.Control.ID%2A> 属性值，因此可以将此属性用于自己的编程目的。 例如，如果你想要在当前选定的控件上始终执行某些编程操作 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> ，此属性可让你通过提前设置的已知值访问该控件。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A> 和编程方式使用属性。 有关运行此示例所需的完整代码，请参阅类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。  
  
 请注意，代码示例的第一部分声明了两个 `<asp:catalogzone>` 元素，第一个部分声明属性的值 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A> 。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 在代码示例的第二部分中，将 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A> 显示当前所选控件的属性的文本值。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#6)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#6)]  
  
 当你在浏览器中加载页面时，可以从下拉列表中选择 " **目录** " 以切换到目录显示模式。 当目录可见时，单击某个控件的链接 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 以将其选中。 然后单击 " **显示选定的 CATALOGPART ID** " 按钮以显示属性值。 请注意，属性的值是在区域中以声明方式设置的值。 如果选择 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 区域中的其他控件，则相同的值将成为 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A> 选定的每个控件的属性值。 如果未设置属性的值 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A> ，则默认值始终为 <xref:System.Web.UI.Control.ID%2A> 当前所选控件的属性的值。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedPartLinkStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style SelectedPartLinkStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style SelectedPartLinkStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedPartLinkStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ SelectedPartLinkStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedPartLinkStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象包含区域中当前所选 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控件的样式特性。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Style" />，包含当前所选控件的样式特性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 区域中，将显示每种类型的控件的链接 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> ： <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 、 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 和 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> 。 当用户单击其中一个链接时，相应的 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件将变为选定的控件，并且该选定控件包含的子控件将变为可见。  
  
 <xref:System.Web.UI.WebControls.Style>属性引用的对象 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> 包含 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 当前所选控件的链接的样式特性。 尽管属性引用的对象是只读的，但仍可以使用它来设置所选控件的基础样式特征 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> 和编程方式使用属性。 有关运行此示例所需的完整代码，请参阅类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。  
  
 请注意，代码示例的第一部分声明了两个 `<asp:catalogzone>` 元素，第一个部分声明属性的值 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> 。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 在代码示例的第二部分中，所选控件的文本颜色 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 设置为不同的值。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#7)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#7)]  
  
 当你在浏览器中加载页面时，可以从下拉列表中选择 " **目录** " 以切换到目录显示模式。 当目录可见时，单击列出的其中一个控件的链接 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> ，并注意所选控件的样式特性。 您可以单击 " **更改部件链接样式** " 按钮更改所选控件的文本颜色。 您还可以单击未选定控件的链接，以查看在选择控件时样式属性如何变化。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="SelectTargetZoneText">
      <MemberSignature Language="C#" Value="public virtual string SelectTargetZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectTargetZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectTargetZoneText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SelectTargetZoneText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectTargetZoneText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置目录用户界面 (UI) 中的控件旁边的文本，该控件允许用户选择将所选控件添加到哪个区域。</summary>
        <value>字符串，包含在区域选择控件旁边显示的文本。 默认的区域性特定字符串由 .NET Framework 提供。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当目录 UI 首次显示时，用户可以选择一个 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件（例如），其中 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 包含 <xref:System.Web.UI.WebControls.WebParts.WebPart> 或可添加到网页的其他服务器控件。 用户选择一个或多个控件，然后可以使用 <xref:System.Web.UI.WebControls.DropDownList> 目录的页脚区域中的控件，并在 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 要放置选定服务器控件的页上选择控件。 属性的文本值 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A> <xref:System.Web.UI.WebControls.DropDownList> 作为简单指令显示在控件旁边。  
  
 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A> 和编程方式使用属性。 有关运行此示例所需的完整代码，请参阅类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。  
  
 请注意，代码示例的第一部分声明了两个 `<asp:catalogzone>` 元素，第一个部分声明属性的值 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A> 。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 在代码示例的第二部分中，属性的值 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A> 以编程方式进行更改。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#5)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#5)]  
  
 当你在浏览器中加载页面时，可以从下拉列表中选择 " **目录** " 以切换到目录显示模式。 当目录可见时，请注意在目录的页脚中与控件一起显示的文本 <xref:System.Web.UI.WebControls.DropDownList> 。 您可以单击 " **设置区域文本属性** " 按钮，以更改属性的文本值。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="ShowCatalogIcons">
      <MemberSignature Language="C#" Value="public virtual bool ShowCatalogIcons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowCatalogIcons" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowCatalogIcons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowCatalogIcons { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCatalogIcons : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示目录中的服务器控件是否在目录中显示其关联图标。</summary>
        <value>如果应显示目录中的服务器控件的关联图标，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPart> 在运行时包装为控件的控件和其他服务器控件 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 具有 <xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A> 属性。 此属性的值是图像的 URL，该图像用作表示控件目录中控件的图标。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons%2A>属性指示是否 <xref:System.Web.UI.WebControls.WebParts.WebPart> 在目录中显示与和其他服务器控件关联的图标。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IPostBackDataHandler.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.System.Web.UI.IPostBackDataHandler.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="catalogZoneBase.System.Web.UI.IPostBackDataHandler.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">控件的主要标识符。</param>
        <param name="postCollection">发布到服务器的名称/值对的集合。</param>
        <summary>通过调用 <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> 类的 <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> 方法，可以实现 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 方法。</summary>
        <returns>如果应当引发事件以指示该数据已更改，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 实例被强制转换为 <xref:System.Web.UI.IPostBackDataHandler> 接口时使用。 方法只是对 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData%2A> 类调用方法 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> ，而该类又处理目录中对应于目录中的服务器控件的复选框的状态。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent : unit -&gt; unit&#xA;override this.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent : unit -&gt; unit" Usage="catalogZoneBase.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 实例被强制转换为 <xref:System.Web.UI.IPostBackDataHandler> 接口时使用。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="catalogZoneBase.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>曲目更改为区域控件的视图状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.TrackViewState%2A>方法首先调用类中的基方法 <xref:System.Web.UI.WebControls.WebParts.ToolZone> ，以跟踪与区域关联的视图状态 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。 接下来，该方法开始跟踪添加和关闭谓词的视图状态，以及 <xref:System.Web.UI.WebControls.Style> 与和属性关联的对象 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> 。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
  </Members>
</Type>
