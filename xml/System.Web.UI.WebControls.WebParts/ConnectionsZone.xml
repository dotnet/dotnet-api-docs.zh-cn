<Type Name="ConnectionsZone" FullName="System.Web.UI.WebControls.WebParts.ConnectionsZone">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d0df0d21716bb374cb8c828a38f19545546059a1" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89672988" /></Metadata><TypeSignature Language="C#" Value="public class ConnectionsZone : System.Web.UI.WebControls.WebParts.ToolZone" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConnectionsZone extends System.Web.UI.WebControls.WebParts.ToolZone" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" />
  <TypeSignature Language="VB.NET" Value="Public Class ConnectionsZone&#xA;Inherits ToolZone" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConnectionsZone : System::Web::UI::WebControls::WebParts::ToolZone" />
  <TypeSignature Language="F#" Value="type ConnectionsZone = class&#xA;    inherit ToolZone" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.ToolZone</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.SupportsEventValidation]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.SupportsEventValidation&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供用户界面 (UI)，使用户能够在 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 和驻留在 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 区域的其他服务器控件之间建立连接。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 Web 部件控件集，您可以启用两个服务器控件以形成连接和共享数据，其中一个控件充当提供程序，另一个用作数据的使用者。 这两个控件可以是 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件，也可以是任何其他类型的服务器控件，前提是它们设计用于处理连接并且它们驻留在某个 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 区域中。 若要了解有关 Web 部件连接的详细信息，请参阅 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 和 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 类概述，以及 [Web 部件连接概述](https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100))。  
  
 如果存在必要的控件和条件来形成 Web 部件连接，则仍需要实际连接这些控件。 有三种方法可以在服务器控件之间建立连接：在网页中声明连接、在代码中创建连接或向页面添加控件， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 以便用户可以按需连接控件。 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件将生成一个 UI，该 UI 使用户能够连接或断开页面上满足建立连接所需的条件的任何服务器控件。 这是一个可选的控件，它不是建立连接所必需的，但在希望用户控制哪些服务器控件已连接或已断开连接的情况下非常有用。  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件是继承自基类的 Web 部件工具区域控件之一 <xref:System.Web.UI.WebControls.WebParts.ToolZone> 。 作为工具区域， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件设计为仅在其网页处于特定显示模式时可见。 在这种情况下，如果页面 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 上的控件的 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> 属性值设置为 ") ，则显示模式称为连接模式 (页面处于此模式 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> 。 在用户将页面切换到连接模式后，他们必须单击其中一个服务器控件的谓词菜单上的 "连接" 谓词，然后连接 UI 才会变为可见。  
  
 作为 Web 部件区域控件，该 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件是一种 <xref:System.Web.UI.WebControls.WebParts.WebZone> 区域 (类型，该类继承自 <xref:System.Web.UI.WebControls.CompositeControl> 类) 旨在包含其他控件。 通常， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 区域具有与其他 Web 部件工具区域相同的大多数元素：页眉、正文或内容区域和页脚。 有关 Web 部件区域的定义以及区域的不同部分的完整讨论，请参阅 <xref:System.Web.UI.WebControls.WebParts.WebZone> 类概述。  
  
> [!IMPORTANT]
>  与大多数其他 Web 部件区域不同，请务必注意，区域不 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 包含与其关联的独特的服务器控件类型。 有关区域及其包含的关联控件的列表，请参阅类概述中的图表 <xref:System.Web.UI.WebControls.WebParts.WebZone> 。 但 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 区域不包含 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 控件。 相反，它的作用非常有限，它提供用户界面，使用户能够连接或断开页面上某个区域中存在的服务器控件 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 。 控件中包含的唯一控件 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 是作为其 UI 的一部分生成的标准 ASP.NET 服务器控件，用于形成连接。  
  
 在 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 呈现控件时，它将基于页上可以建立连接的服务器控件生成一个 UI。 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件确定页面上区域中的哪些服务器控件 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 为提供程序，这些提供程序是使用者，哪些连接点可用，以及服务器控件当前是否已连接或已断开连接，然后相应地生成 UI。  
  
 例如，假设有一个 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件可以作为提供程序，一个 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件可以作为使用者，在页上的中声明，它们 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 当前已断开连接。 当用户将页面切换到连接模式并单击其中一个控件上的连接谓词时，控件将 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 生成一个包含链接的 UI，单击该链接时，用户可以在其中选择用于创建连接的选项。  (如果控件之前已连接，初始视图将改为向用户显示一个按钮以断开控件) 的连接。 在用于创建新连接的连接用户界面中，会显示用户是一个提供者，哪些控件是一个使用者。 下拉列表控件将显示在每个服务器控件下，并列出控件的可用 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 对象。 从相应的下拉列表中，用户必须 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 为提供程序 (选择一个对象，以确定将与使用者共享哪些接口和数据) ， <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 每个使用者 (的一个对象确定使用者将使用的) ，并将连接到提供程序。  
  
> [!NOTE]
>  在 Web 部件控件集默认实现中，一个提供程序可连接到多个使用者，但使用者只能有一个提供程序。  
  
 若要使用 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件，可以在网页上的元素中声明它 `<form>` (但不能使用元素嵌套在另一个 Web 部件区域元素) ， `<asp:connectionszone>` 也可以通过编程方式将其添加到页面中。 如果在页中声明元素，这与其他 Web 部件区域不同，则不能在元素的标记之间声明任何其他类型的服务器控件 `<asp:connectionszone>` 。 您可以在其中声明与自身属性和样式详细信息相关的元素，但它是一个独立的元素，并且不是可以在其中声明其他服务器控件的模板控件。  
  
> [!NOTE]
>  为了提高可访问性， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件在元素中呈现 `<fieldset>` 。 `<fieldset>`元素对用于在控件中建立连接的相关控件集进行分组 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> ，并简化了可视用户代理的控件之间的选项卡式导航 (例如普通 Web 浏览器) 和面向语音的用户代理 (如屏幕阅读软件) 。  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控件具有用于呈现连接用户界面的许多属性。 一组属性包含几个谓词：仅与连接相对使用--在 UI 中执行操作： <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureVerb%2A> 、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectVerb%2A> 和 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.DisconnectVerb%2A> 。 大型属性集（特别是用于连接区域 UI）包含在不同位置显示的文本字符串 (或在某些情况下（例如，在 UI 中) 出现错误时）： <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle%2A> 、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText%2A> 、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText%2A> 、、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle%2A> 、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ExistingConnectionErrorMessage%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NewConnectionErrorMessage%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendText%2A> 、、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendToText%2A> 、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类还包含许多在其他 Web 部件区域中找到的常见属性： <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.CancelVerb%2A> 、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.CloseVerb%2A> 、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.Display%2A> 、、、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.EmptyZoneText%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText%2A> 和 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.PartChromeType%2A> 。 最后， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.WebPartToConnect%2A> 属性对于类是唯一的，引用启动连接的控件 (这是用户单击其谓词菜单中的连接谓词的控件，这也是 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 控件的属性) 中引用的控件 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> 。  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>类还具有许多方法，其中所有方法都是从基类继承和重写的，其中的大多数方法来自基本 Web 部件区域类。 有关详细信息，请参阅各个方法。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 在 Web 部件页上使用控件。 该示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。  
  
-   承载所有控件的网页，演示如何声明 `<asp:connectionszone>` 元素，并以声明方式和编程方式设置连接区域上的多个属性。  
  
-   说明如何在浏览器中工作。  
  
 此代码示例的第一部分是用户控件，该控件使用户能够在网页上切换显示模式。 有关显示模式的详细信息以及此控件中源代码的说明，请参阅 [演练：在 Web 部件页上更改显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 该示例的第二部分是包含接口和自定义控件的源文件。 请注意， `ZipCodeWebPart` 控件实现了 `IZipCode` 接口，添加了 `ConnectionProvider` 属性，以便控件可以充当连接的访问接口。 `WeatherWebPart`控件具有用特性标记的方法 `ConnectionConsumer` ，其中使用 `IZipCode` 接口，因此它可以充当连接中的使用者。  
  
 要使代码示例运行，必须编译此源代码。 可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。 此示例使用动态编译。 有关演示如何编译的演练，请参阅 [演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_ConnectionZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_ConnectionZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/ZipCodeComponent.vb#2)]  
  
 该示例代码的第三部分是网页。 顶部附近是用于 `Register` 连接中的用户控件和自定义控件的指令。 `<asp:connectionszone>`元素在页中声明为以声明方式使用控件的示例 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 在元素中，将以声明方式设置多个属性。 "连接" 区域上的其他属性是在页面的部分以编程方式设置的 `<script>` 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载网页。 使用 " **显示模式** " 下拉列表控件将页面切换到连接模式。 在 **邮政编码提供程序** 控件的谓词菜单上 (谓词菜单由控件标题栏中的向下箭头指示) 中，单击 "连接" 谓词。 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>此时将显示一个控件。 请注意，在 "连接" UI 中，将显示 " **结束连接** " 按钮;已在页面的标记中声明连接，因此控件已连接。 单击 " **结束连接**"，然后再次使用 " **显示模式** " 控件将页面返回到浏览模式。 接下来，再次将页面返回到连接模式，单击其中一个控件上的连接谓词，并注意，连接 UI 现在会显示一个超链接，使你能够在控件之间建立连接。 单击链接，并使用连接 UI 选择连接点并建立连接。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" />如果开发人员要更改其行为或为处理连接而提供的默认 UI，则可以扩展此类。</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebZone" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)">Web 部件连接概述</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConnectionsZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConnectionsZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 ASP.NET 页中声明元素时，将调用此无参数的构造函数 `<asp:connectionszone>` 。 不需要隐式调用此构造函数，除非你以编程方式将控件添加到页面。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.%23ctor%2A> 构造函数创建 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 要以编程方式添加到网页的控件的新实例。 该示例只包含用于演示构造函数的网页的代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件并且在其 `Page_Init` 方法中使用 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.%23ctor%2A> 构造函数创建控件的新实例 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 并将其添加到页中的网页。  
  
-   说明如何在浏览器中工作。  
  
 在网页上，在方法中 `Page_Init` ，将 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 使用构造函数)  (创建新控件，并将其添加到页面中。 当用户将页面设置为 "连接" 模式并单击其中一个控件上的 "连接" 谓词时 <xref:System.Web.UI.WebControls.WebParts.WebPart> ， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 将显示一个控件。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_ctor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_ctor/CS/connectionZoneCtorCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_ctor/VB/connectionZoneCtorVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码提供程序** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 连接 UI 随即出现，并且控件已连接，因为该连接是在页的标记中声明的。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CancelVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CancelVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb CancelVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.CancelVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CancelVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ CancelVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CancelVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.CancelVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 对象的引用，该对象使最终用户能够取消建立连接的过程。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />，使最终用户能够取消连接两个控件的过程。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 与控件一起使用的取消谓词 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 是一个区域级别谓词，该谓词在连接用户界面中显示 (UI) 作为用户为控件选择连接点的视图的一部分。 当用户单击 "取消" 谓词时，它会取消选择连接点的过程，并将 "连接区域" 视图返回到用户可以单击以建立新连接的超链接。  
  
 使用 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.CancelVerb%2A> 属性可获取对 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> UI 中相应对象的引用。 尽管属性本身是只读的，但在引用谓词后，可以根据需要更改其属性值。  
  
 可以通过 `<cancelverb>` 在元素的标记中声明元素，以声明方式设置取消谓词的属性值 `<asp:connectionszone>` 。 可以在窗体中以声明方式设置谓词的属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> (例如 `CancelVerb-Text`) 。 您还可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `CancelVerb.Text`) 。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.CancelVerb%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以声明方式和编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个 `<asp:connectionszone>` 元素，并在元素中声明一个 `<cancelverb>` 元素，并使用属性设置一些属性。 另外，在 `Page_PreRender` 方法中，代码在控件的取消谓词上设置一些属性 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码提供程序** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 单击 " **结束连接** " 按钮以断开已连接的控件，因为该页上有声明性连接。 单击 " **为提供者选择要连接的使用者** "，并注意设置各种属性的效果。 如果将鼠标指针放在 " **终止** " 按钮上，则会在工具提示中显示自定义说明文本。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="protected override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.Close" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="connectionsZone.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>关闭由 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件创建的连接用户界面 (UI)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.Close%2A>当用户在连接 UI 中单击区域级别的关闭谓词时，将调用方法。 此方法执行后，连接 UI 处于隐藏状态， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.WebPartToConnect%2A> 属性值为 `null` ，而页面仍处于 connect 显示模式。 此时，用户可以通过单击控件的谓词菜单上的 "连接" 谓词来选择控件，或将页面切换到其他显示模式。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.CloseVerb" />
      </Docs>
    </Member>
    <Member MemberName="CloseVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.CloseVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CloseVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ CloseVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.CloseVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 对象的引用，最终用户可使用该对象关闭由 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件创建的连接用户界面 (UI)。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />，使最终用户可以关闭连接用户界面。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 与控件一起使用的关闭谓词 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 是显示在连接 UI (页脚) 底部的区域级别谓词。 当用户单击关闭谓词时，它将取消连接过程并关闭连接用户界面，但会使页面处于连接显示模式。 此时，用户可以将页面返回到浏览模式，或单击其他服务器控件上的连接谓词来重新打开连接用户界面。  
  
 关闭谓词应与标头关闭谓词 (有关详细信息，请参阅 <xref:System.Web.UI.WebControls.WebParts.ToolZone.HeaderCloseVerb%2A> 属性) 。 这两个谓词都执行关闭连接 UI 的相同操作，但标头关闭谓词显示在 UI 的顶部，默认情况下由超链接表示，而关闭谓词显示在 UI 的底部，并默认由按钮表示。  
  
 使用 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.CloseVerb%2A> 属性可获取对 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> UI 中相应对象的引用。 尽管属性本身是只读的，但在引用谓词后，可以根据需要更改其属性值。  
  
 可以通过 `<closeverb>` 在元素的标记中声明元素，以声明的方式设置关闭谓词的属性值 `<asp:connectionszone>` 。 可以在窗体中以声明方式设置谓词的属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> (例如 `CloseVerb-Text`) 。 您还可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `CloseVerb.Text`) 。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.CloseVerb%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以声明方式和编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个 `<asp:connectionszone>` 元素，并在元素中声明一个 `<closeverb>` 元素，并使用属性设置属性。 另外，在 `Page_PreRender` 方法中，代码在控件的关闭谓词上设置属性 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码提供程序** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 单击 " **结束连接** " 按钮以断开已连接的控件，因为该页上有声明性连接。 单击 " **为提供者选择要连接的使用者** "，并注意设置各种属性的效果。 如果将鼠标指针放在连接用户界面底部的 " **关闭区域** " 按钮上，则会在工具提示中显示自定义说明文本。 请注意，连接区域顶部的标头关闭谓词由超链接表示，而关闭谓词上的属性分配对标头关闭谓词不起作用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb" />
      </Docs>
    </Member>
    <Member MemberName="ConfigureConnectionTitle">
      <MemberSignature Language="C#" Value="public virtual string ConfigureConnectionTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfigureConnectionTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConfigureConnectionTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConfigureConnectionTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConfigureConnectionTitle : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个文本，该文本显示为 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件创建的连接用户界面 (UI) 的子部分的标题。</summary>
        <value>一个字符串，包含“配置连接”部分的标题。 默认标题是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle%2A> 属性可将自定义值用于连接 UI 中此部分的标题。 用户使用现有连接显示连接 UI，并单击 "配置谓词" (默认情况下，这由连接 UI) 中的 " **配置** " 按钮表示，此时将显示 UI 的 "配置连接" 部分。  
  
 可以通过将字符串分配给网页中标记的属性，以声明方式设置属性值 `configureconnectiontitle` `<asp:connectionszone>` 。 也可以通过编程方式将字符串分配给属性。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个 `<asp:connectionszone>` 元素，在 `Page_PreRender` 方法中，代码为 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle%2A> 属性赋值。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码提供程序** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 由于连接已存在，因此你现在会看到 " **结束连接** " 按钮和一个 " **配置** " 按钮，它表示配置谓词。 如果连接是可配置的 (它不在此代码示例) 中，则将启用 " **配置** " 按钮;可以单击它打开 "配置连接" 部分，标题将是分配给属性的代码的值 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle%2A> 。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="ConfigureVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb ConfigureVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb ConfigureVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConfigureVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ ConfigureVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConfigureVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 对象的引用，该对象用于打开连接用户界面 (UI) 中的配置视图。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />，用于打开连接用户界面中的“配置连接”部分。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果连接已存在并且用户已打开连接用户界面，则配置谓词出现在连接 UI 的 "管理连接" 部分中。 用户界面向用户显示结束连接的 " **结束连接** " 按钮和 " **配置** " 按钮 (该按钮表示配置连接) 配置谓词。 如果用户单击 " **配置** " 按钮，将显示 UI 的 "配置连接" 部分，使用户能够配置连接。 此选项用于配置连接 (并因此仅在连接使用转换器时启用 " **配置** " 按钮) ，并且转换器包含一个配置向导控件 (<xref:System.Web.UI.WebControls.Wizard>) ，使用户能够对其进行配置。 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 类。  
  
 使用 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureVerb%2A> 属性可获取对 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> UI 中相应对象的引用。 尽管属性本身是只读的，但在引用谓词后，可以根据需要更改其属性值。  
  
 可以通过 `<configureverb>` 在元素的标记中声明元素，以声明方式设置配置谓词的属性值 `<asp:connectionszone>` 。 可以在窗体中以声明方式设置谓词的属性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> (例如 `ConfigureVerb-Text`) 。 您还可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `ConfigureVerb.Text`) 。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureVerb%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以声明方式和编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个 `<asp:connectionszone>` 元素，并在元素中声明一个 `<configureverb>` 元素，并使用属性设置属性。 此外，在 `Page_PreRender` 方法中，代码在控件的配置谓词上设置属性 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码提供程序** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 请注意，有一个 " **结束连接** " 按钮，用于断开已连接的控件和禁用的 " **配置** " 按钮。 如果你的代码示例使用了一个包含配置向导的转换器，则会启用 " **配置** " 按钮，用户可以单击该按钮来配置连接。 如果将鼠标指针放在连接用户界面中的 " **配置** " 按钮上，则会在工具提示中显示自定义说明文本。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle" />
      </Docs>
    </Member>
    <Member MemberName="ConnectToConsumerInstructionText">
      <MemberSignature Language="C#" Value="public virtual string ConnectToConsumerInstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectToConsumerInstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectToConsumerInstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectToConsumerInstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectToConsumerInstructionText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置说明文本，该文本会显示在用户在其中选择提供者将连接到的使用者连接点的那部分连接用户界面 (UI) 中。</summary>
        <value>一个字符串，包含关于创建到提供者的使用者连接的说明。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText%2A>属性在特定连接方案中生效。 当用户在提供程序控件上单击连接谓词时， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件将显示允许用户选择使用者的连接 UI 的一部分。 如果用户在使用者上单击了连接谓词，则连接 UI 会反向执行，并显示有关连接到提供程序的信息。  
  
 该属性中的文本 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText%2A> 将显示在下拉列表控件的上方，这些控件包含可以连接提供程序的可用使用者连接点。  
  
 可以通过使用页面中元素的开始标记中的属性以声明方式设置此属性，也可以通过 `ConnectToConsumerInstructionText` `<asp:connectionszone>` 编程方式设置属性。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个元素， `<asp:connectionszone>` 并在 `Page_PreRender` 方法中为该属性分配一个值 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText%2A> 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码提供程序** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 单击 " **结束连接** " 按钮以结束连接，然后单击 " **选择提供程序的使用者以连接到** 超链接"。 "使用者连接" UI 随即出现，并且分配给该属性的自定义文本 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText%2A> 显示在该区域的上方，该控件使您可以选择使用者上用于连接提供程序的连接点。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText" />
      </Docs>
    </Member>
    <Member MemberName="ConnectToConsumerText">
      <MemberSignature Language="C#" Value="public virtual string ConnectToConsumerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectToConsumerText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectToConsumerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectToConsumerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectToConsumerText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置超链接的文本，单击该超链接可以打开一个视图，用户可以在其中为连接选择使用者控件。</summary>
        <value>一个作为超链接文本显示的字符串，通过该超链接可以打开用户在其中选择使用者的视图。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText%2A>属性在特定连接方案中生效。 当用户在提供程序控件上单击连接谓词，并且不存在连接时， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件将显示一个超链接，其中包含文本 " **选择要连接的提供者的使用者**"。 当用户单击该超链接时，它将打开一个视图，在该视图中，用户可以选择可用的使用者来与提供程序进行连接。  
  
 可以通过使用页面中元素的开始标记中的属性以声明方式设置此属性，也可以通过 `ConnectToConsumerText` `<asp:connectionszone>` 编程方式设置属性。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个元素， `<asp:connectionszone>` 并在 `Page_PreRender` 方法中为该属性分配一个值 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText%2A> 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码提供程序** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 单击 " **结束连接** " 按钮以结束连接，然后请注意，超链接与分配给该属性的自定义文本一起出现 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText" />
      </Docs>
    </Member>
    <Member MemberName="ConnectToConsumerTitle">
      <MemberSignature Language="C#" Value="public virtual string ConnectToConsumerTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectToConsumerTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectToConsumerTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectToConsumerTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectToConsumerTitle : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置连接用户界面 (UI) 中用户可以在其中选择要连接的特定使用者的那个部分的标题文本。</summary>
        <value>一个字符串，用作用户在其中选择使用者的那个部分的标题。 默认标题是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle%2A>属性在特定连接方案中生效。 当用户在提供程序控件上单击连接谓词，并且不存在连接时，最终会到达一个视图，在该视图中，用户可以在其中选择使用者以与以前选择的访问接口进行连接。 此视图的标题由 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle%2A> 属性提供。  
  
 可以通过使用页面中元素的开始标记中的属性以声明方式设置此属性，也可以通过 `ConnectToConsumerTitle` `<asp:connectionszone>` 编程方式设置属性。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个元素， `<asp:connectionszone>` 并在 `Page_PreRender` 方法中为该属性分配一个值 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle%2A> 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码提供程序** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 单击 " **结束连接** " 按钮以结束连接，然后单击链接以选择使用者。 在用于选择使用者的视图中，请注意，部分的标题文本是代码分配给属性的文本 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText" />
      </Docs>
    </Member>
    <Member MemberName="ConnectToProviderInstructionText">
      <MemberSignature Language="C#" Value="public virtual string ConnectToProviderInstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectToProviderInstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectToProviderInstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectToProviderInstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectToProviderInstructionText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置说明文本，该文本会显示在用户在其中选择使用者将连接到的提供者连接点的那部分连接用户界面 (UI) 中。</summary>
        <value>一个字符串，包含关于创建到使用者的提供者连接的说明。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText%2A>属性在特定连接方案中生效。 当用户在使用者控件上单击连接谓词时， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件将显示允许用户选择提供程序的连接 UI 的一部分。 如果用户在访问接口上单击了连接谓词，则连接 UI 会反向执行，并显示有关连接到使用者的信息。  
  
 属性中的文本 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText%2A> 将显示在下拉列表控件的上方，这些控件包含可以连接到使用者的可用提供程序连接点。  
  
 可以通过使用页面中元素的开始标记中的属性以声明方式设置此属性，也可以通过 `ConnectToProviderInstructionText` `<asp:connectionszone>` 编程方式设置属性。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个元素， `<asp:connectionszone>` 并在 `Page_PreRender` 方法中为该属性分配一个值 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText%2A> 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码使用者** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 单击 " **结束连接** " 按钮以结束连接，然后单击 "为 **使用者选择要连接的提供者进行连接** "。 此时将显示提供程序连接 UI，并且分配给该属性的自定义文本 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText%2A> 显示在该区域的上方，该控件使您可以在访问接口上选择连接点，以便与使用者进行连接。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText" />
      </Docs>
    </Member>
    <Member MemberName="ConnectToProviderText">
      <MemberSignature Language="C#" Value="public virtual string ConnectToProviderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectToProviderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectToProviderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectToProviderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectToProviderText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置超链接的文本，单击该超链接可以打开一个视图，用户可以在其中为连接选择提供者控件。</summary>
        <value>一个作为超链接的文本显示的字符串，通过该超链接可以打开用户在其中选择提供者的视图。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText%2A>属性在特定连接方案中生效。 当用户在使用者控件上单击连接谓词，并且不存在连接时， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件将显示一个超链接，其中包含文本 " **选择要连接的使用者的访问接口**。 当用户单击该超链接时，它将打开一个视图，用户可以在其中选择可用的提供程序以与使用者连接。  
  
 可以通过使用页面中元素的开始标记中的属性以声明方式设置此属性，也可以通过 `ConnectToProviderText` `<asp:connectionszone>` 编程方式设置属性。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个元素， `<asp:connectionszone>` 并在 `Page_PreRender` 方法中为该属性分配一个值 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText%2A> 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码使用者** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 单击 " **结束连接** " 按钮以结束连接，然后请注意，超链接与分配给该属性的自定义文本一起出现 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText" />
      </Docs>
    </Member>
    <Member MemberName="ConnectToProviderTitle">
      <MemberSignature Language="C#" Value="public virtual string ConnectToProviderTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectToProviderTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectToProviderTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectToProviderTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectToProviderTitle : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置连接用户界面 (UI) 中用户可以在其中选择要连接的特定提供者的那个部分的标题文本。</summary>
        <value>一个字符串，用作用户在其中选择提供者的那个部分的标题。 默认标题是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle%2A>属性在特定连接方案中生效。 当用户在使用者控件上单击连接谓词，并且不存在连接时，最终会到达一个视图，在该视图中，用户可以选择要与以前选择的使用者连接的访问接口。 此视图的标题由 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle%2A> 属性提供。  
  
 可以通过使用页面中元素的开始标记中的属性以声明方式设置此属性，也可以通过 `ConnectToProviderTitle` `<asp:connectionszone>` 编程方式设置属性。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个元素， `<asp:connectionszone>` 并在 `Page_PreRender` 方法中为该属性分配一个值 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle%2A> 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码使用者** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 单击 " **结束连接** " 按钮以结束连接，然后单击链接以选择某个提供程序。 在用于选择提供程序的视图中，请注意，部分的标题文本是代码分配给属性的文本 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle" />
      </Docs>
    </Member>
    <Member MemberName="ConnectVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb ConnectVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb ConnectVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConnectVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ ConnectVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 对象的引用，该对象使两个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件可以建立连接。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />，使两个控件可以建立连接。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 与控件一起使用的连接谓词 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 是在连接用户界面中显示的一个区域级别谓词 (UI) 作为用户在两个控件之间完成连接的视图的一部分。 在用户可在其中选择连接点的 UI 部分，如果两个控件都可以连接，则在 UI 底部附近启用连接谓词。 用户选择连接点后，可以单击 "连接" 谓词来创建连接。  
  
> [!NOTE]
>  本主题中讨论的区域级别连接谓词实际上在控件之间建立连接，与控件的谓词菜单上显示的谓词不同 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 当用户将网页切换为连接显示模式时，如果控件可以形成连接，则 <xref:System.Web.UI.WebControls.WebParts.WebPart> 会在其谓词菜单上显示连接谓词。 此 <xref:System.Web.UI.WebControls.WebParts.WebPart> 连接谓词仅打开由控件创建的连接用户界面 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 相反， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectVerb%2A> 本主题中讨论的用于在区域级别操作的谓词实际上会创建一个连接。  
  
 使用 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectVerb%2A> 属性可获取对 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> UI 中相应对象的引用。 尽管属性本身是只读的，但在引用谓词后，可以根据需要更改其属性值。  
  
 可以通过在 `<connectverb>` 元素的开始标记和结束标记之间声明元素，以声明方式设置连接谓词的属性值 `<asp:connectionszone>` 。 还可以在元素的开始标记中以声明方式设置谓词的属性 `<asp:connectionszone>` ，方法是在窗体中添加特性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> (例如 `ConnectVerb-Text`) 。 您还可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `ConnectVerb.Text`) 。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectVerb%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以声明方式和编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个元素， `<asp:connectionszone>` 并在元素标记中声明一个 `<connectverb>` 元素，并使用属性设置一些属性。 另外，在 `Page_PreRender` 方法中，代码在连接谓词上设置控件的某些属性 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码提供程序** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 单击 " **结束连接** " 按钮以断开已连接的控件，因为该页上有声明性连接。 单击 " **为提供者选择要连接的使用者** "，并注意设置各种属性的效果。 如果将鼠标指针放在 " **连接控件** " 按钮上，则会在工具提示中显示自定义说明文本。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
      </Docs>
    </Member>
    <Member MemberName="ConsumersInstructionText">
      <MemberSignature Language="C#" Value="public virtual string ConsumersInstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConsumersInstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConsumersInstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConsumersInstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConsumersInstructionText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置说明文本，该说明文本在连接已存在时显示在连接用户界面 (UI) 的使用者部分中。</summary>
        <value>一个字符串，用作参与连接的使用者的说明文本。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText%2A>属性在特定连接方案中生效。 当用户在提供程序控件上单击连接谓词，并且连接已存在时，控件将 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 显示使用户能够断开连接的视图。 此视图还显示参与连接的任何使用者。 在使用者列表的正上方是使用者说明文本，默认情况下，这是使用者控件在连接中所执行操作的说明。  
  
 可以 `<asp:connectionszone>` 通过添加一个名为的属性 `ConsumersInstructionText` 并为其分配一个值，在元素的开始标记中以声明方式设置此属性的值。 还可以通过编程方式设置属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个元素， `<asp:connectionszone>` 并在 `Page_PreRender` 方法中为该属性分配一个值 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText%2A> 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码提供程序** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 在为现有连接打开的视图中，在 "使用者" 部分中查找分配给该属性的自定义文本 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText" />
      </Docs>
    </Member>
    <Member MemberName="ConsumersTitle">
      <MemberSignature Language="C#" Value="public virtual string ConsumersTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConsumersTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConsumersTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConsumersTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConsumersTitle : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置标题，该标题在连接已存在时显示在连接用户界面 (UI) 的使用者部分上方。</summary>
        <value>一个字符串，用作参与连接的使用者的标题文本。 默认标题是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle%2A>属性在特定连接方案中生效。 当用户在提供程序控件上单击连接谓词，并且连接已存在时，控件将 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 显示使用户能够断开连接的视图。 此视图还显示参与连接的任何使用者。 在使用者列表的正上方是使用者说明文本，上面是使用者部分的标题，其 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle%2A> 属性提供文本。  
  
 可以 `<asp:connectionszone>` 通过添加一个名为的属性 `ConsumersTitle` 并为其分配一个值，在元素的开始标记中以声明方式设置此属性的值。 还可以通过编程方式设置属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个元素， `<asp:connectionszone>` 并在 `Page_PreRender` 方法中为该属性分配一个值 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle%2A> 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码提供程序** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 在为现有连接打开的视图中，在 "使用者" 部分中查找分配给该属性的自定义文本 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="connectionsZone.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件中包含的所有子控件，以准备回发到服务器或进行呈现。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将重写基 <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> 方法。 它将准备连接所需的所有连接相关对象 (例如，从可用的使用者控件和提供者控件中检索连接点对象) ，并在连接 UI 中创建用户与之交互的各种用户界面 (UI) 控件以建立连接。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="DisconnectVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb DisconnectVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb DisconnectVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.DisconnectVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisconnectVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ DisconnectVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisconnectVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.DisconnectVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 对象的引用，该对象使用户可以使两个连接的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件断开连接。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />，使两个连接的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件断开连接。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 与控件一起使用的断开连接谓词 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 是一个区域级别谓词，该谓词在连接用户界面中显示 (UI) 作为用户管理两个控件之间的现有连接的视图的一部分。 用户单击 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件的谓词菜单上的 "连接" 谓词并显示连接 UI 后，如果两个控件之间已存在连接，则会在 UI 底部附近激活 "断开连接" 谓词。  
  
 使用 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.DisconnectVerb%2A> 属性可获取对 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> UI 中相应对象的引用。 尽管属性本身是只读的，但在引用谓词后，可以根据需要更改其属性值。  
  
 可以通过在 `<disconnectverb>` 元素的开始标记和结束标记之间声明元素，以声明方式设置断开连接谓词的属性值 `<asp:connectionszone>` 。 还可以在元素的开始标记中以声明方式设置谓词的属性 `<asp:connectionszone>` ，方法是在窗体中添加特性 `Property-Subproperty` ，其中 `Subproperty` 是对象的属性 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> (例如 `DisconnectVerb-Text`) 。 您还可以通过编程方式设置属性 `Property.Subproperty` ， (例如 `DisconnectVerb.Text`) 。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.DisconnectVerb%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以声明方式和编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个元素， `<asp:connectionszone>` 并在元素标记中声明一个 `<disconnectverb>` 元素，并使用属性设置某些属性。 另外，在 `Page_PreRender` 方法中，代码在控件的断开连接谓词上设置一些属性 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码提供程序** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 请注意在断开连接谓词上设置的属性值的影响。 如果将鼠标指针放在 " **结束连接** " 按钮上，则会在工具提示中显示自定义说明文本。 单击 " **结束连接** " 按钮以断开已连接的控件，因为该页上有声明性连接。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.CancelVerb" />
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="protected override bool Display { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Display" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.Display" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Display As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool Display { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Display : bool" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> 控件当前是否正在显示。</summary>
        <value>如果 <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> 当前正在显示，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值是 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ToolZone.Display" />
      </Docs>
    </Member>
    <Member MemberName="EmptyZoneText">
      <MemberSignature Language="C#" Value="public override string EmptyZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.EmptyZoneText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EmptyZoneText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyZoneText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyZoneText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.EmptyZoneText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个文本消息，该消息在网页上没有足够的控件建立连接时显示在一个空 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件中。</summary>
        <value>一个 <see cref="T:System.String" />，包含空区域的消息。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText" />
      </Docs>
    </Member>
    <Member MemberName="ExistingConnectionErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string ExistingConnectionErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExistingConnectionErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ExistingConnectionErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExistingConnectionErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ExistingConnectionErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExistingConnectionErrorMessage : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ExistingConnectionErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个文本消息，该消息在现有连接出现错误或警告时显示在连接用户界面 (UI) 中。</summary>
        <value><see cref="T:System.String" />，包含文本消息。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFromText">
      <MemberSignature Language="C#" Value="public virtual string GetFromText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GetFromText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GetFromText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ GetFromText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GetFromText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置文本，该文本在连接用户界面 (UI) 中位于指定的提供者（使用者从该提供者检索数据）之前的那部分中显示。</summary>
        <value>一个字符串，位于使用者将从其获取数据的指定提供者之前。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText%2A>属性在特定连接方案中生效。 当用户在使用者控件上单击连接谓词时， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件将显示一个视图，该视图使用户能够与提供程序建立连接。 在指示用户选择提供者连接点的 UI 部分，在下拉列表控件之前有一些文本，用户可以在其中选择使用者从中获取数据的连接点。 位于下拉控件之前的文本是属性中的文本 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText%2A> 。 默认情况下，此文本值 **来自**。  
  
 可以 `<asp:connectionszone>` 通过添加一个名为的属性 `GetFromText` 并为其分配一个值，在元素的开始标记中以声明方式设置此属性的值。 还可以通过编程方式设置属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个元素， `<asp:connectionszone>` 并在 `Page_PreRender` 方法中为该属性分配一个值 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText%2A> 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码使用者** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 在为现有连接打开的视图中，在 "提供程序" 部分中查找指定提供程序之前的文本。 这是分配给属性的文本 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendToText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public virtual string GetText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GetText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GetText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ GetText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GetText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置文本，该文本在连接用户界面 (UI) 中位于指定的使用者（该使用者将从提供者检索数据）之前的那部分中显示。</summary>
        <value>一个字符串，位于连接中的指定使用者之前。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText%2A>属性在特定连接方案中生效。 当用户在使用者控件上单击连接谓词时， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件将显示一个视图，该视图使用户能够与提供程序建立连接。 在指示用户选择提供者连接点的 UI 部分中，有一些文本位于将参与连接的命名使用者之前。 使用者前面的文本是属性中的文本 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText%2A> 。 默认情况下，文本值为 **Get**。  
  
 可以 `<asp:connectionszone>` 通过添加一个名为的属性 `GetText` 并为其分配一个值，在元素的开始标记中以声明方式设置此属性的值。 还可以通过编程方式设置属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个元素， `<asp:connectionszone>` 并在 `Page_PreRender` 方法中为该属性分配一个值 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText%2A> 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码使用者** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 在为现有连接打开的视图中，在 "提供程序" 部分中查找指定的使用者之前的文本。 这是分配给属性的文本 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendText" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置页眉文本，该文本出现在由 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件创建的连接用户界面 (UI) 的顶部。</summary>
        <value>一个字符串，包含连接用户界面的页眉文本。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText%2A>只要显示连接 UI，就会看到属性中包含的文本。 当用户单击控件的谓词菜单上的 "连接" 谓词时 <xref:System.Web.UI.WebControls.WebParts.WebPart> ，将显示连接 ui，并且标题文本在连接用户界面的最顶部作为标签。 默认文本为 " **连接区域**"。  
  
 此属性将重写 <xref:System.Web.UI.WebControls.WebParts.WebZone.HeaderText%2A> 类中的基属性 <xref:System.Web.UI.WebControls.WebParts.WebZone> ，以便可以将默认连接区域标题文本分配给属性。  
  
 可以 `<asp:connectionszone>` 通过添加一个名为的属性 `HeaderText` 并为其分配一个值，在元素的开始标记中以声明方式设置此属性的值。 还可以通过编程方式设置属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个元素， `<asp:connectionszone>` 并在 `Page_PreRender` 方法中为该属性分配一个值 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText%2A> 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码使用者** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 在为现有连接打开的视图中，请注意，连接区域顶部的标头文本是分配给 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText%2A> 代码示例中的属性的值。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="InstructionText">
      <MemberSignature Language="C#" Value="public override string InstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstructionText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于一般说明的文本，该说明描述在管理现有连接的那部分连接用户界面 (UI) 中所选择的控件。</summary>
        <value>一个字符串，包含连接用户界面的说明文本。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText%2A>当显示连接 UI 并且连接已存在时，属性中包含的文本将可见。 在紧靠在 " (属性" 中包含的标头文本 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText%2A>) （位于连接 UI 顶部），是说明标题，而在下面是说明文本。 说明文本通知用户可以在当前选定的控件上执行哪种类型的操作 <xref:System.Web.UI.WebControls.WebParts.WebPart> (选定控件是用户单击控件的谓词菜单上的 "连接" 谓词的控件) 。 默认情况下，说明文本将 **管理当前 Web 部件的连接**。  
  
 此属性将重写 <xref:System.Web.UI.WebControls.WebParts.ToolZone.InstructionText%2A> 类中的基属性 <xref:System.Web.UI.WebControls.WebParts.ToolZone> ，以便可以将默认连接区域说明文本分配给属性。  
  
 可以 `<asp:connectionszone>` 通过添加一个名为的属性 `InstructionText` 并为其分配一个值，在元素的开始标记中以声明方式设置此属性的值。 还可以通过编程方式设置属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个元素， `<asp:connectionszone>` 并在 `Page_PreRender` 方法中为该属性分配一个值 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText%2A> 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码使用者** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 在为现有连接打开的视图中，请注意，连接区域顶部附近的说明文本是分配给 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText%2A> 代码示例中的属性的值。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle" />
      </Docs>
    </Member>
    <Member MemberName="InstructionTitle">
      <MemberSignature Language="C#" Value="public virtual string InstructionTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InstructionTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InstructionTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstructionTitle : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于管理现有连接的连接用户界面 (UI) 中的一般说明的文本，该说明是关于可以对使用者或提供者控件执行的操作的说明。</summary>
        <value>一个字符串，包含连接用户界面的说明标题。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle%2A>当显示连接 UI 并且连接已存在时，属性中包含的文本将可见。 说明标题文本只是包含在 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText%2A> 属性) （位于连接 UI 顶部） (的标头文本下方。 说明标题是一个常规说明，通知用户可以对参与现有连接的使用者或提供者控件执行哪种类型的操作 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 默认情况下，指令标题从 " **管理连接**" 开始，以用户或提供者控件的名称结束，用户通过单击其谓词菜单上的 "连接" 谓词选择该控件。  
  
> [!NOTE]
>  为此属性分配自定义值时，请记住，如果用户将选择要在其上管理连接的提供者或使用者控件，则不能知道您的设计时，因此自定义指令标题必须足够通用才能引用使用者或提供者控件。 相反，属性的默认值以这样一种方式呈现：它动态追加用户选择的任何使用者或提供者控件的名称。 如果要为模拟此行为的属性提供自定义值，则必须从 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 类继承，并重写此属性或 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.RenderBody%2A> 方法。  
  
 可以 `<asp:connectionszone>` 通过添加一个名为的属性 `InstructionTitle` 并为其分配一个值，在元素的开始标记中以声明方式设置此属性的值。 还可以通过编程方式设置属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个元素， `<asp:connectionszone>` 并在 `Page_PreRender` 方法中为该属性分配一个值 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle%2A> 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码使用者** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 在为现有连接打开的视图中，请注意，连接区域顶部附近的标题文本下方的指令标题是分配给 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle%2A> 代码示例中的属性的值。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="connectionsZone.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">表示要还原的控件状态的 <see cref="T:System.Object" />。</param>
        <summary>可从 <see cref="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveControlState" /> 方法保存的上一个页请求还原控件状态信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用此方法时，它将确定控件状态是否以前已为控件保存，如果是，则将控件状态设置为保存的值。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" /> 的长度不等于由 <see cref="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveControlState" /> 方法创建的数组的长度。</exception>
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="connectionsZone.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">包含要还原的视图状态的 <see cref="T:System.Object" />。</param>
        <summary>从用 <see cref="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveViewState" /> 方法保存的上一个页面请求还原视图状态信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要由 .NET Framework 基础结构使用，不应在代码中直接使用。 不过，控件开发人员可以重写此方法，以指定自定义服务器控件如何还原其视图状态。 有关详细信息，请参阅 [ASP.NET 状态管理概述](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100))。  
  
 调用此方法时，它将确定是否之前为控件保存了视图状态，如果是，则将视图状态设置为保存值。 方法会重写 <xref:System.Web.UI.WebControls.WebParts.ToolZone.LoadViewState%2A> 从类继承的方法 <xref:System.Web.UI.WebControls.WebParts.ToolZone> ，以便它可以为控件中使用的多个区域级别谓词添加到基实现和还原状态 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" /> 的长度不等于由 <see cref="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveViewState" /> 方法创建的数组的长度。</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="NewConnectionErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string NewConnectionErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewConnectionErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.NewConnectionErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NewConnectionErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NewConnectionErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewConnectionErrorMessage : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.NewConnectionErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个文本消息，该消息在用户尝试创建的新连接出现错误或警告时显示在连接用户界面 (UI) 中。</summary>
        <value><see cref="T:System.String" />，包含文本消息。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoExistingConnectionInstructionText">
      <MemberSignature Language="C#" Value="public virtual string NoExistingConnectionInstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NoExistingConnectionInstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NoExistingConnectionInstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NoExistingConnectionInstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NoExistingConnectionInstructionText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置说明文本，该文本在 Web 部件控件没有现有连接时出现在连接用户界面 (UI) 的正文中。</summary>
        <value>一个字符串，包含针对不存在现有连接的情况的文本消息。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText%2A>当显示连接 UI 且不存在连接时，属性中包含的文本可见。 用户将页面切换到连接显示模式并在控件的谓词菜单上单击连接谓词后，将 <xref:System.Web.UI.WebControls.WebParts.WebPart> 显示主连接用户界面。 如果当前没有连接，则该属性中的文本 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText%2A> 将显示在连接 UI 的底部附近，紧靠在区域的页脚区域中的 "关闭" 谓词的上方。 该文本描述了不存在现有连接的情况，并为用户提供了在 UI 中创建连接的基本说明。  
  
 可以 `<asp:connectionszone>` 通过添加一个名为的属性 `NoExistingConnectionInstructionText` 并为其分配一个值，在元素的开始标记中以声明方式设置此属性的值。 还可以通过编程方式设置属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个元素， `<asp:connectionszone>` 并在 `Page_PreRender` 方法中为该属性分配一个值 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText%2A> 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码使用者** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 在为现有连接打开的视图中，单击 " **结束连接** " 按钮。 请注意，无现有连接的说明文本显示在连接 UI 底部附近，位于区域的页脚区域中的 "关闭" 谓词的正上方。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle" />
      </Docs>
    </Member>
    <Member MemberName="NoExistingConnectionTitle">
      <MemberSignature Language="C#" Value="public virtual string NoExistingConnectionTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NoExistingConnectionTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NoExistingConnectionTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NoExistingConnectionTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NoExistingConnectionTitle : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置标题文本，该文本在 Web 部件控件没有现有连接时出现在连接用户界面 (UI) 的正文中。</summary>
        <value>一个字符串，包含针对不存在现有连接的情况的标题文本。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle%2A>当显示连接 UI 且不存在连接时，属性中包含的文本可见。 用户将页面切换到连接显示模式并在控件的谓词菜单上单击连接谓词后，将 <xref:System.Web.UI.WebControls.WebParts.WebPart> 显示主连接用户界面。 如果没有当前连接，则该属性中的文本 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle%2A> 将显示在连接 UI 正文的顶部附近，就在链接下，用户可单击该链接来创建新连接。 标题汇总了不存在连接的事实，默认标题为 " **无活动连接**"。  
  
 可以 `<asp:connectionszone>` 通过添加一个名为的属性 `NoExistingConnectionTitle` 并为其分配一个值，在元素的开始标记中以声明方式设置此属性的值。 还可以通过编程方式设置属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个元素， `<asp:connectionszone>` 并在 `Page_PreRender` 方法中为该属性分配一个值 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle%2A> 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码使用者** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 在为现有连接打开的视图中，单击 " **结束连接** " 按钮。 请注意，没有现有连接的指令标题将出现在使用户能够创建新连接的链接下方。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText" />
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanged">
      <MemberSignature Language="C#" Value="protected override void OnDisplayModeChanged (object sender, System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDisplayModeChanged(object sender, class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDisplayModeChanged (sender As Object, e As WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDisplayModeChanged(System::Object ^ sender, System::Web::UI::WebControls::WebParts::WebPartDisplayModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDisplayModeChanged : obj * System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs -&gt; unit" Usage="connectionsZone.OnDisplayModeChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">事件的发送方。</param>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法引发 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged> 事件，并为其提供自定义处理程序。 网页进入或退出连接显示模式后，此方法将执行控件的唯一几个步骤 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此方法会取消任何挂起的连接活动，以确保通过将属性设置为，以确保不会显示连接用户界面 (UI) 的子控件 <xref:System.Web.UI.Control.ChildControlsCreated%2A> `false` ，并将连接用户界面设置为在用户继续创建连接的过程中可以显示有关现有连接的信息的模式。  
  
 若要向方法中提供的处理添加专用处理 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.OnDisplayModeChanged%2A> ，开发人员可从 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 类继承并重写此方法。 作为替代方法，开发人员还可以 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged> <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 通过将 `OnDisplayModeChanged` 特性添加到网页 `<asp:webpartmanager>` 中的元素并向其分配用于处理事件的自定义方法的值，为控件上的事件提供处理程序。 在此方法中，开发人员可以检查属性的当前值 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> ，如果是，则 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> 可以对控件执行所需的更改 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="connectionsZone.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法调用基 <xref:System.Web.UI.WebControls.WebParts.ToolZone.OnInit%2A?displayProperty=nameWithType> 方法，并添加自定义处理以准备要显示控件的网页 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.OnInit(System.EventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedWebPartChanged (object sender, System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedWebPartChanged(object sender, class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectedWebPartChanged (sender As Object, e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectedWebPartChanged(System::Object ^ sender, System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSelectedWebPartChanged : obj * System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="connectionsZone.OnSelectedWebPartChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">指示事件的发送方的 <see cref="T:System.Object" />。</param>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将重写 <xref:System.Web.UI.WebControls.WebParts.ToolZone> 实现以重置 (UI) 的连接用户界面，从而必须重新创建子控件。 这是必需的，因为当所选的控件发生更改时，连接 UI 中的几个选项会更改，具体取决于所选控件是使用者还是提供者、控件 (连接点在下拉列表控件中列出的连接点) 和其他详细信息。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PartChromeType">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.PartChromeType PartChromeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.PartChromeType PartChromeType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.PartChromeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property PartChromeType As PartChromeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::PartChromeType PartChromeType { System::Web::UI::WebControls::WebParts::PartChromeType get(); void set(System::Web::UI::WebControls::WebParts::PartChromeType value); };" />
      <MemberSignature Language="F#" Value="member this.PartChromeType : System.Web.UI.WebControls.WebParts.PartChromeType with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.PartChromeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.PartChromeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置构成 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件所包含的服务器控件的框架的边框类型。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" />，确定构成连接区域中所包含控件的框架的边框类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" />
      </Docs>
    </Member>
    <Member MemberName="ProvidersInstructionText">
      <MemberSignature Language="C#" Value="public virtual string ProvidersInstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProvidersInstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ProvidersInstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ProvidersInstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProvidersInstructionText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置说明文本，该说明文本在连接已存在时显示在连接用户界面 (UI) 的提供者部分中。</summary>
        <value>一个字符串，用作参与连接的提供者的说明文本。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText%2A>属性在特定连接方案中生效。 如果用户在使用者控件上单击连接谓词，并且连接已存在，则该 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件将显示允许用户断开连接的视图。 此视图还显示参与连接的任何提供程序。 在提供程序列表的正上方是提供程序说明文本，默认情况下，这是提供程序控件在连接中所执行的操作的详细说明。  
  
 可以 `<asp:connectionszone>` 通过添加一个名为的属性 `ProvidersInstructionText` 并为其分配一个值，在元素的开始标记中以声明方式设置此属性的值。 还可以通过编程方式设置属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个元素， `<asp:connectionszone>` 并在 `Page_PreRender` 方法中为该属性分配一个值 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText%2A> 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码使用者** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 在为现有连接打开的视图中，在 "提供程序" 部分中查找分配给该属性的自定义文本 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText" />
      </Docs>
    </Member>
    <Member MemberName="ProvidersTitle">
      <MemberSignature Language="C#" Value="public virtual string ProvidersTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProvidersTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ProvidersTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ProvidersTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProvidersTitle : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置标题，该标题在连接已存在时显示在连接用户界面 (UI) 的提供者部分上方。</summary>
        <value>一个字符串，用作参与连接的提供者的标题文本。 默认标题是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle%2A>属性在特定连接方案中生效。 如果用户在使用者控件上单击连接谓词，并且连接已存在，则该 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件将显示允许用户断开连接的视图。 此视图还显示参与连接的任何提供程序。 在提供程序列表的上方是提供程序说明文本，上面是提供程序部分的标题，其 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle%2A> 属性提供文本。  
  
 可以 `<asp:connectionszone>` 通过添加一个名为的属性 `ProvidersTitle` 并为其分配一个值，在元素的开始标记中以声明方式设置此属性的值。 还可以通过编程方式设置属性值。  
  
   
  
## Examples  
 下面的代码示例演示如何将属性用于 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。 此示例仅包含演示属性使用的网页代码;对于运行此示例所需的其他两个代码文件，请参见类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 此代码示例包含四个部分：  
  
-   使您能够在网页上切换显示模式的用户控件。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   一个源文件，其中包含邮政编码接口的代码，以及两个控件， <xref:System.Web.UI.WebControls.WebParts.WebPart> 用作连接的提供者和使用者。 从类概述获取此代码 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
-   承载所有控件、声明 `<asp:connectionszone>` 元素并演示如何以编程方式使用属性的网页。  
  
-   说明如何在浏览器中工作。  
  
 网页声明一个元素， `<asp:connectionszone>` 并在 `Page_PreRender` 方法中为该属性分配一个值 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle%2A> 。  
  
 [!code-aspx-csharp[WebParts_ConnectionZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 在浏览器中加载页面。 使用 " **显示模式** " 控件切换到 "连接" 模式。 单击 **邮政编码使用者** 控件上的谓词菜单箭头，然后单击 "连接" 谓词。 在为现有连接打开的视图中，在 "提供程序" 部分中查找分配给该属性的自定义文本 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected override void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="override this.RaisePostBackEvent : string -&gt; unit" Usage="connectionsZone.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">包含该事件参数数据的 <see cref="T:System.String" />。</param>
        <summary>当包含 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件的窗体回发到服务器时引发该控件的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.RaisePostBackEvent%2A>当包含控件的窗体回发到服务器时，方法将处理可能发生的多个结果 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 首先，如果属性的值 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.WebPartToConnect%2A> 为 `null` ，则没有要执行的其他与连接相关的操作，因此将取消任何挂起的连接，并且该方法将返回。 其次，如果 (UI) 的连接用户界面实际上可见并且用户正在创建连接的过程中，则该方法将处理可能的方案：用户单击了连接谓词、用户单击了断开连接谓词、正在关闭该转换器 UI、正在创建与提供程序的连接，或者正在创建到使用者的连接。 在每种情况下， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.RaisePostBackEvent%2A> 方法都会使用 `eventArgument` 传递的参数，并 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 相应地更新控件。 最后，如果上述所有情况都不适用，则方法将调用类中的基方法 <xref:System.Web.UI.WebControls.WebParts.ToolZone> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.RaisePostBackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="connectionsZone.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收 Web 部件控件内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件的内容呈现给指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.Render%2A>方法将 (UI) 的连接用户界面更新为自创建子控件后发生的任何更改，或在预呈现阶段中更新，然后调用基 <xref:System.Web.UI.WebControls.CompositeControl.Render%2A?displayProperty=nameWithType> 方法将区域的内容写入网页。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.CompositeControl.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderBody">
      <MemberSignature Language="C#" Value="protected override void RenderBody (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBody(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.RenderBody(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderBody (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderBody(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBody : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="connectionsZone.RenderBody writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收控件的正文内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>可将 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件的正文区的内容发送到将该内容写入网页的指定 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 部件控件的主体是其页眉和页脚区域之间的部分。 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.RenderBody%2A>方法会重写基方法完成的主体区域的呈现 <xref:System.Web.UI.WebControls.WebParts.WebZone.RenderBody%2A?displayProperty=nameWithType> 。  
  
 此方法将添加到应用于控件的基本呈现唯一样式特性 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> ，还会基于用户在用户界面中所做的选择，在连接用户界面中呈现子控件的相应内容 (UI) 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.RenderBody(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderVerbs">
      <MemberSignature Language="C#" Value="protected override void RenderVerbs (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderVerbs(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderVerbs (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderVerbs(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderVerbs : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="connectionsZone.RenderVerbs writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收要在连接区域中呈现的谓词内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>可为 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件呈现区域级别的谓词。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将呈现控件附带的多个区域级别的谓词 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。 作为此方法的一部分， <xref:System.Web.UI.WebControls.WebParts.ToolZone.RenderVerb%2A?displayProperty=nameWithType> 还会调用方法来呈现每个谓词的各个详细信息。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.RenderVerb(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.WebPartVerb)" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="connectionsZone.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>可保存自页面上次回发到服务器以来发生的任何 Web 部件控件状态更改。</summary>
        <returns>返回 Web 部件控件的当前状态。 如果没有与控件关联的状态，此方法将返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件在其任何模式中可见（除了显示现有连接详细信息的模式），并且该控件具有与之关联的连接详细信息的控件状态数据，则该 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveControlState%2A> 方法将保存数据，以使其能够在与服务器的往返行程之间保持。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="connectionsZone.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存自页面上次回发到服务器以来发生的 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件的视图状态更改。</summary>
        <returns>返回包含控件的当前视图状态的 <see cref="T:System.Object" />。 如果没有与控件关联的视图状态，此方法将返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 视图状态是 Web 部件控件属性的值的累计。 这些值自动放置在控件的属性中 <xref:System.Web.UI.Control.ViewState%2A> ，该属性是类的实例 <xref:System.Web.UI.StateBag> 。 然后，将此属性的值保存到控件生命周期的 "保存状态" 阶段之后的字符串对象。  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveViewState%2A>方法添加到基实现可以保存控件中各种谓词的视图状态 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="SendText">
      <MemberSignature Language="C#" Value="public virtual string SendText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SendText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SendText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SendText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SendText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.SendText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置文本，该文本在连接用户界面 (UI) 中位于指定的提供者（该提供者将向使用者发送数据）之前的那部分中显示。</summary>
        <value>一个字符串，位于连接中的指定提供者之前。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendText%2A>属性在特定连接方案中生效。 当用户在提供程序控件上单击连接谓词时， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件将显示一个视图，该视图使用户能够与使用者建立连接。 在指示用户选择使用者连接点的 UI 部分，在指定的访问接口之前有一些文本将参与连接。 此文本位于提供程序之前，它是属性中的文本 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendText%2A> 。 默认情况下，该文本值为 **Send**。  
  
 可以 `<asp:connectionszone>` 通过添加一个名为的属性 `SendText` 并为其分配一个值，在元素的开始标记中以声明方式设置此属性的值。 还可以通过编程方式设置属性值。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendToText" />
      </Docs>
    </Member>
    <Member MemberName="SendToText">
      <MemberSignature Language="C#" Value="public virtual string SendToText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SendToText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendToText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SendToText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SendToText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SendToText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.SendToText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置文本，该文本在连接用户界面 (UI) 中位于指定的使用者（提供者向该使用者发送数据）之前的那部分中显示。</summary>
        <value>一个字符串，位于提供者将向其发送数据的指定使用者之前。 默认文本是一个由 .NET Framework 提供的、特定于区域性的字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendToText%2A>属性在特定连接方案中生效。 当用户在提供程序控件上单击连接谓词时， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件将显示一个视图，该视图使用户能够与使用者建立连接。 在指示用户选择使用者连接点的 UI 部分，在下拉列表控件之前有一些文本，用户可以在此下拉列表控件中选择提供程序将数据发送到的连接点。 位于下拉控件之前的文本是属性中的文本 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendToText%2A> 。 默认情况下，文本值为 **。**  
  
 可以 `<asp:connectionszone>` 通过添加一个名为的属性 `SendToText` 并为其分配一个值，在元素的开始标记中以声明方式设置此属性的值。 还可以通过编程方式设置属性值。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="connectionsZone.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>可跟踪 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件的视图状态更改，以便更改可以存储在控件的 <see cref="T:System.Web.UI.StateBag" /> 对象中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法调用类中的基方法 <xref:System.Web.UI.WebControls.WebParts.ToolZone> ，同时对与控件关联的谓词触发视图状态跟踪 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="WebPartToConnect">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPart WebPartToConnect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart WebPartToConnect" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.WebPartToConnect" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property WebPartToConnect As WebPart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ WebPartToConnect { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebPartToConnect : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.ConnectionsZone.WebPartToConnect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前选择的要连接的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当用户将网页切换到连接显示模式，并在为连接启用的控件的谓词菜单上单击 "连接" 谓词时 <xref:System.Web.UI.WebControls.WebParts.WebPart> ，将打开 "连接用户界面" (UI) ，并且该控件现在由 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.WebPartToConnect%2A> 属性引用。  
  
> [!NOTE]
>  属性引用的控件 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.WebPartToConnect%2A> 从当前对象的属性获取其值 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
      </Docs>
    </Member>
  </Members>
</Type>
