<Type Name="WebPartConnection" FullName="System.Web.UI.WebControls.WebParts.WebPartConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c7f6c3f4395b55ea04359758e9b18926c72a9c3e" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86628132" /></Metadata><TypeSignature Language="C#" Value="public sealed class WebPartConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebPartConnection extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebPartConnection" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartConnection sealed" />
  <TypeSignature Language="F#" Value="type WebPartConnection = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ParseChildren(true, "Transformers")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ParseChildren(true, "Transformers")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4a5c9-101">提供一个对象，该对象可使两个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件形成连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-101">Provides an object that enables two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls to form a connection.</span></span> <span data-ttu-id="4a5c9-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a5c9-103">在 Web 部件控件集中，连接是两个 <xref:System.Web.UI.WebControls.WebParts.WebPart> (或其他服务器或用户) 控件之间的链接或关联，使其能够共享数据。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-103">In the Web Parts control set, a connection is a link or association between two <xref:System.Web.UI.WebControls.WebParts.WebPart> (or other server or user) controls that enables them to share data.</span></span> <span data-ttu-id="4a5c9-104">这种共享数据的功能允许使用连接的控件，以超出独立控件提供的功能。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-104">This ability to share data allows connected controls to be used in ways that exceed the functionality offered by the isolated controls.</span></span> <span data-ttu-id="4a5c9-105">例如，如果一个控件提供了邮政编码数据，另一个控件可以读取该数据，并根据邮政编码提供本地天气信息，则这两个控件的连接功能为用户提供了更多价值。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-105">For example, if one control provides postal code data, and another control can read that data and provide local weather information based on the postal code, then the connected capability of the two controls provides more value to users.</span></span> <span data-ttu-id="4a5c9-106">若要扩展此示例，还可以创建其他控件，该控件还可以基于邮政编码显示信息（例如具有指向本地新闻的链接的控件），并且所有可以使用邮政编码数据的控件可以与提供邮政编码的单个控件共享数据。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-106">To extend this example, other controls could be created that also display information based on a postal code, such as a control with links to local news, and all these controls that can work with postal code data could share data with the single control that provides a postal code.</span></span> <span data-ttu-id="4a5c9-107">Web 部件应用程序的最终用户可以直接从 Web 浏览器创建和管理所有此类兼容控件之间的连接，方法是使用控件提供的标准连接用户界面 (UI) <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> ，或者使用开发人员提供的自定义 UI。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-107">End users of Web Parts applications can create and manage connections between all such compatible controls directly from a Web browser, using the standard connections user interface (UI) provided by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control, or using a custom UI provided by a developer.</span></span>  
  
 <span data-ttu-id="4a5c9-108">此 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 类概述是有关创建连接的基本详细信息的一般说明。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-108">This <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class overview is a general statement of the basic details for creating a connection.</span></span> <span data-ttu-id="4a5c9-109">有关创建连接所涉及的特定组件和要求的详细信息，请参阅 [Web 部件连接概述](https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100))，或参阅以下讨论中提到的引用类和代码示例。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-109">For more on specific components and requirements involved in creating connections, see [Web Parts Connections Overview](https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)), or see the reference classes and code examples mentioned in the following discussion.</span></span> <span data-ttu-id="4a5c9-110">Web 部件连接有几个基本方面：</span><span class="sxs-lookup"><span data-stu-id="4a5c9-110">There are several fundamental aspects of a Web Parts connection:</span></span>  
  
-   <span data-ttu-id="4a5c9-111">两个 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-111">Two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="4a5c9-112">每个 Web 部件连接都包含两个控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-112">Every Web Parts connection consists of two controls.</span></span> <span data-ttu-id="4a5c9-113">控件可以同时参与多个连接，但每个单一连接只包含两个控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-113">It is possible for a control to participate in more than one connection simultaneously, but every single connection consists of exactly two controls.</span></span> <span data-ttu-id="4a5c9-114">控件可以直接派生自 <xref:System.Web.UI.WebControls.WebParts.WebPart> 基类，也可以是其他服务器控件，包括 ASP.NET 控件、自定义服务器控件和用户控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-114">The controls can derive directly from the <xref:System.Web.UI.WebControls.WebParts.WebPart> base class, or they can be other server controls, including ASP.NET controls, custom server controls, and user controls.</span></span> <span data-ttu-id="4a5c9-115">不是从类派生的控件 <xref:System.Web.UI.WebControls.WebParts.WebPart> （如果置于 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 区域中）将 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 在运行时自动使用对象进行包装，这使它们可以从 <xref:System.Web.UI.WebControls.WebParts.WebPart> 类继承并作为运行时 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件运行。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-115">Controls that do not derive from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class, if placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone, are automatically wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object at run time, which enables them to inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class and function as run-time <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span>  
  
-   <span data-ttu-id="4a5c9-116">位于区域中的控件 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-116">Controls residing in <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zones.</span></span> <span data-ttu-id="4a5c9-117"><xref:System.Web.UI.WebControls.WebParts.WebPart>控件和任何其他类型的服务器控件都必须驻留在某个 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 区域中，以便能够参与 Web 部件连接 (和大多数其他 Web 部件功能) 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-117">Both <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and any other type of server control must reside in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone to be able to participate in Web Parts connections (and most other Web Parts features).</span></span>  
  
-   <span data-ttu-id="4a5c9-118">使用者和提供者。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-118">Consumers and providers.</span></span> <span data-ttu-id="4a5c9-119">在每个 Web 部件连接中，有两个控件：数据提供程序和数据使用者。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-119">In every Web Parts connection there are two controls: a provider of data and a consumer of data.</span></span> <span data-ttu-id="4a5c9-120">提供程序通过指定的回调方法将数据 furnishes 到使用者，该方法以接口的形式返回数据。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-120">The provider furnishes data to the consumer through a specified callback method that returns data in the form of an interface.</span></span> <span data-ttu-id="4a5c9-121"> (有关如何创建和指定回调方法的示例，请参阅本主题的 "示例" 部分。 ) 此回调方法被称为提供程序连接点。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-121">(For an example of how to create and specify the callback method, see the Example section of this topic.) This callback method is known as a provider connection point.</span></span> <span data-ttu-id="4a5c9-122">此连接点的详细信息 (其 "友好" 名称、ID 和返回接口) 的类型包含在 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 与提供程序控件关联的对象中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-122">The details of this connection point (its "friendly" name, an ID, and the type of the returned interface) are contained in a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object associated with the provider control.</span></span> <span data-ttu-id="4a5c9-123">使用者通过可接受接口实例的指定方法接收数据。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-123">The consumer receives the data through a specified method that can accept an instance of the interface.</span></span> <span data-ttu-id="4a5c9-124">此方法称为使用者连接点，连接点 (名称、ID 和) 接口类型的详细信息都包含在 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 与使用者控件关联的对象中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-124">This method is known as a consumer connection point, and the details of the connection point (name, ID, and type of interface) are contained in a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object associated with the consumer control.</span></span>  
  
-   <span data-ttu-id="4a5c9-125">兼容的控件或有效的转换器。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-125">Compatible controls or a valid transformer.</span></span> <span data-ttu-id="4a5c9-126">要使连接正常运行，使用者和提供程序必须兼容 (意味着它们的指定连接点方法可以使用相同类型的接口) ，或者必须有一个对象可以将 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 提供程序提供的类型转换为使用者识别的类型。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-126">For a connection to work, the consumer and provider must either be compatible (meaning that their specified connection point methods can work with the same type of interface), or there must be a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object capable of translating the type offered by the provider into a type understood by the consumer.</span></span>  
  
-   <span data-ttu-id="4a5c9-127"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 对象。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-127">A <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span> <span data-ttu-id="4a5c9-128">若要连接到存在，必须有一个类的实例， <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 该类包含对提供者和使用者控件的引用以及其连接点的详细信息。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-128">For a connection to exist, there must be an instance of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class that contains references to the provider and consumer controls, along with the details of their connection points.</span></span> <span data-ttu-id="4a5c9-129">如果提供程序和使用者不兼容，而是使用 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 对象进行连接，则连接将引用转换器。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-129">If the provider and consumer are incompatible and instead use a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object to connect, the connection references the transformer.</span></span>  
  
-   <span data-ttu-id="4a5c9-130">建立连接的方式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-130">A means of establishing the connection.</span></span> <span data-ttu-id="4a5c9-131">在兼容的使用者和提供者控件已经正确地使用连接点方法设计并将其放置在某个区域中并且 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 对象可用时，最后一个必要的基本步骤是启动连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-131">After compatible consumer and provider controls have been properly designed with connection point methods and placed in a zone, and a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object is available, the last basic step necessary is to initiate the connection.</span></span> <span data-ttu-id="4a5c9-132">这种情况的一种方法是让用户通过 UI 创建连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-132">One way this can happen is for users to create the connection through the UI.</span></span> <span data-ttu-id="4a5c9-133">如果在 `<asp:connectionszone>` 页面上放置一个元素，并且连接的其他必需组件已就位，则在运行时，用户可以将页面切换为连接显示模式，单击提供者或使用者的谓词菜单上的连接谓词，然后将显示一个基于控件) 的连接 UI (<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-133">If you place an `<asp:connectionszone>` element on the page, and the other required components for a connection are in place, at run time a user can switch the page into connect display mode, click a connect verb on the verbs menu of either the provider or consumer, and a connection UI (based on the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control) will appear.</span></span> <span data-ttu-id="4a5c9-134">通过此 UI，用户可以启动连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-134">Through this UI, the user can initiate the connection.</span></span> <span data-ttu-id="4a5c9-135">发起连接的另一种方法是以编程方式执行此操作。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-135">Another way to initiate the connection is to do it programmatically.</span></span> <span data-ttu-id="4a5c9-136">无论是通过 UI 还是以编程方式，启动连接的基础方法都是相同的。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-136">In either case, whether through the UI or programmatically, the underlying method that initiates the connection is the same.</span></span> <span data-ttu-id="4a5c9-137">应用程序 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> (或方法调用方法 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> （如果对控件使用转换器) ，并 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 向其传递提供程序、使用者及其各自的连接点对象），并且方法将返回 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 对象。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-137">The application calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method (or the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method if using a transformer) on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, passing to it the provider, the consumer, and their respective connection point objects, and the method returns a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span>  
  
 <span data-ttu-id="4a5c9-138"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection>类定义一个对象，该对象封装两个控件之间的连接的基本详细信息 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-138">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class defines an object that encapsulates the essential details of a connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="4a5c9-139">类几乎完全由与特定连接的详细信息相关的属性组成。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-139">The class consists almost entirely of properties related to the details of a particular connection.</span></span> <span data-ttu-id="4a5c9-140">多个属性涉及连接中的使用者控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-140">Several properties concern the consumer control in a connection.</span></span> <span data-ttu-id="4a5c9-141"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A>属性引用使用者控件本身， <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> 属性引用使用者的 ID。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-141">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property references the consumer control itself, and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property references the consumer's ID.</span></span> <span data-ttu-id="4a5c9-142"><xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>对象（包含使用者的连接点的详细信息）由使用者的 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> 属性引用。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-142">The <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object, which contains the details of the consumer's connection point, is referenced by the consumer's <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property.</span></span> <span data-ttu-id="4a5c9-143"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A>属性引用对象的 ID <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-143">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property references the ID of the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span> <span data-ttu-id="4a5c9-144">所有这些使用者相关的连接属性必须分配有值才能创建连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-144">All these consumer-related connection properties must have a value assigned to them to create a connection.</span></span>  
  
 <span data-ttu-id="4a5c9-145"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection>类还具有几个与连接中的提供程序控件相关的属性，这些属性对应于使用者的属性。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-145">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class also has several properties that relate to the provider control in a connection, and these correspond to the properties for a consumer.</span></span> <span data-ttu-id="4a5c9-146"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A>属性引用提供程序控件本身，而 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> 属性引用其 ID。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-146">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property references the provider control itself, while the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property references its ID.</span></span> <span data-ttu-id="4a5c9-147"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A>属性引用 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 对象， <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> 属性引用提供程序的连接点的 ID。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-147">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property references the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object, and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property references the ID of the provider's connection point.</span></span>  
  
 <span data-ttu-id="4a5c9-148">几个属性涉及连接状态。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-148">Several properties concern the state of the connection.</span></span> <span data-ttu-id="4a5c9-149"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A>属性指示连接是否处于活动状态 (当前正在交换数据) 或非活动 (仍处于连接状态，但未主动共享数据) 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-149">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> property indicates whether the connection is active (currently exchanging data) or inactive (still connected but not actively sharing data).</span></span> <span data-ttu-id="4a5c9-150"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>属性指示连接是否为页面) 或特定于用户的连接的所有用户可用的共享 (; <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> 属性指示控件是否为静态 (在页标记中声明，从而以编程方式创建永久) 或动态 (，这意味着可将其) 删除。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-150">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property indicates whether the connection is a shared (available to all users of a page) or a user-specific connection, and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> property indicates whether the control is static (declared in the page markup and thus permanent) or dynamic (created programmatically, meaning that it can be deleted).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a5c9-151">下面的代码示例演示如何创建两个控件之间的简单连接 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-151">The following code example demonstrates how to create a simple connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="4a5c9-152">该示例演示了形成连接的三种方式：以声明方式将连接的标记放置在网页的标记中;通过以编程方式在代码中创建连接;通过 UI，通过将 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件置于页面上，使用户能够建立连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-152">The example demonstrates three ways of forming a connection: declaratively, by placing tags for the connection in the markup of the Web page; programmatically, by creating the connection in code; and through the UI, by placing a <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control on the page, which enables users to establish a connection.</span></span>  
  
 <span data-ttu-id="4a5c9-153">此代码示例包含四个部分：</span><span class="sxs-lookup"><span data-stu-id="4a5c9-153">The code example has four parts:</span></span>  
  
-   <span data-ttu-id="4a5c9-154">允许您在页上更改 Web 部件显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-154">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="4a5c9-155">接口的源代码和两个用作 <xref:System.Web.UI.WebControls.WebParts.WebPart> 连接的提供者和使用者的控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-155">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="4a5c9-156">承载所有控件并运行代码示例的网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-156">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="4a5c9-157">有关如何运行 "示例" 页的说明。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-157">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="4a5c9-158">此代码示例的第一部分是用户控件，该控件使用户能够更改网页上的显示模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-158">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="4a5c9-159">将以下源代码保存到 .ascx 文件，并为其提供分配给 `Src` 此用户控件的指令属性的文件名，该属性 `Register` 位于宿主网页的顶部附近。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-159">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="4a5c9-160">有关显示模式的详细信息以及此控件中源代码的说明，请参阅 [演练：在 Web 部件页上更改显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-160">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="4a5c9-161">此代码示例的第二部分是接口和控件的源代码。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-161">The second part of the code example is the source code for the interface and controls.</span></span> <span data-ttu-id="4a5c9-162">源文件包含一个名为的简单接口 `IZipCode` 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-162">The source file contains a simple interface named `IZipCode`.</span></span> <span data-ttu-id="4a5c9-163">还有一个 <xref:System.Web.UI.WebControls.WebParts.WebPart> 名为的类 `ZipCodeWebPart` ，该类实现接口并充当提供程序控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-163">There is also a <xref:System.Web.UI.WebControls.WebParts.WebPart> class named `ZipCodeWebPart` that implements the interface and acts as the provider control.</span></span> <span data-ttu-id="4a5c9-164">它 `ProvideIZipCode` 的方法是实现接口的唯一成员的回调方法。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-164">Its `ProvideIZipCode` method is the callback method that implements the interface's only member.</span></span> <span data-ttu-id="4a5c9-165">方法只返回接口的实例。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-165">The method simply returns an instance of the interface.</span></span> <span data-ttu-id="4a5c9-166">请注意，该方法 `ConnectionProvider` 在其元数据中用特性标记。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-166">Note that the method is marked with a `ConnectionProvider` attribute in its metadata.</span></span> <span data-ttu-id="4a5c9-167">这是将方法标识为提供程序连接点的回调方法的机制。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-167">This is the mechanism for identifying the method as the callback method for the provider's connection point.</span></span> <span data-ttu-id="4a5c9-168">其他 <xref:System.Web.UI.WebControls.WebParts.WebPart> 类命名为 `WeatherWebPart` ，它充当连接的使用者。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-168">The other <xref:System.Web.UI.WebControls.WebParts.WebPart> class is named `WeatherWebPart`, and it acts as the consumer for the connection.</span></span> <span data-ttu-id="4a5c9-169">此类具有一个名为 `GetZipCode` 的方法，该方法 `IZipCode` 从提供程序控件获取接口的实例。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-169">This class has a method named `GetZipCode` that gets an instance of the `IZipCode` interface from the provider control.</span></span> <span data-ttu-id="4a5c9-170">请注意，此方法 `ConnectionConsumer` 在其元数据中被标记为使用者的连接点方法和属性。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-170">Note that this method is marked as the consumer's connection point method with a `ConnectionConsumer` attribute in its metadata.</span></span>  
  
 <span data-ttu-id="4a5c9-171">要使代码示例运行，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-171">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="4a5c9-172">可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-172">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="4a5c9-173">或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-173">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="4a5c9-174">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-174">This code example uses dynamic compilation.</span></span> <span data-ttu-id="4a5c9-175">有关演示如何编译的演练，请参阅 [演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-175">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="4a5c9-176">此代码示例的第三部分是网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-176">The third part of the code example is the Web page.</span></span> <span data-ttu-id="4a5c9-177">顶部附近是 `Register` 用户控件和自定义控件的指令 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-177">Near the top are the `Register` directives for the user control and the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="4a5c9-178">由于本示例假定控件的动态编译，因此控件的源代码应位于 App_Code 子文件夹中; `Register` 页中的标记只引用任意标记前缀和控件的命名空间。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-178">Because the example assumes dynamic compilation of the controls, the source code for the controls should be in an App_Code subfolder; the `Register` tag in the page references only an arbitrary tag prefix and the namespace of the controls.</span></span> <span data-ttu-id="4a5c9-179"><xref:System.Web.UI.WebControls.WebParts.WebPart>提供程序和使用者)  (的自定义控件在网页的元素内的 `<asp:webpartzone>` 元素中声明 `<zonetemplate>` 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-179">The custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls (the provider and consumer) are declared within the Web page's `<asp:webpartzone>` element, inside a `<zonetemplate>` element.</span></span>  
  
 <span data-ttu-id="4a5c9-180">页面提供了三种方式来形成自定义控件之间的连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-180">The page provides three ways to form a connection between the custom controls.</span></span> <span data-ttu-id="4a5c9-181">第一种方法是声明性的。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-181">The first method is declarative.</span></span> <span data-ttu-id="4a5c9-182">在该页的标记中，将 `<StaticConnections>` 声明一个元素，并在该元素中声明一个元素 `<asp:WebPartConnections>` ，其中包含指定为特性的连接的各种使用者和提供程序详细信息。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-182">In the markup for the page, a `<StaticConnections>` element is declared, and within that is an `<asp:WebPartConnections>` element, with the various consumer and provider details of the connection specified as attributes.</span></span> <span data-ttu-id="4a5c9-183">这是一种创建连接的方法，它是在网页中直接声明的，特别是在 `<asp:WebPartManager>` 元素中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-183">This is one way to create a connection, by declaring it directly in the Web page, specifically within the `<asp:WebPartManager>` element.</span></span> <span data-ttu-id="4a5c9-184">由于这种静态连接，因此在第一次加载页面时，将立即创建两个自定义控件之间的连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-184">Because of this static connection, a connection between the two custom controls is created immediately the first time the page loads.</span></span>  
  
 <span data-ttu-id="4a5c9-185">用于在控件之间形成连接的另一种方法由 `<asp:connectionszone>` 页中的元素提供。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-185">A second method for forming a connection between the controls is provided by the `<asp:connectionszone>` element in the page.</span></span> <span data-ttu-id="4a5c9-186">如果用户在运行时将页面切换为连接显示模式，并在其中一个自定义控件上单击连接谓词，则 `<asp:connectionszone>` 元素会自动呈现用于创建连接的 UI。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-186">If a user switches a page into connect display mode at run time, and clicks a connect verb on one of the custom controls, the `<asp:connectionszone>` element automatically renders the UI for creating a connection.</span></span>  
  
 <span data-ttu-id="4a5c9-187">此页还演示了创建连接的第三种方法，即以编程方式执行该连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-187">The page also demonstrates a third way of creating a connection, which is to do it programmatically.</span></span> <span data-ttu-id="4a5c9-188">在 `Button1_Click` 方法中，代码 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 为提供程序控件创建一个对象，并通过调用方法检索其连接点详细信息 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-188">In the `Button1_Click` method, the code creates a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object for the provider control, and retrieves its connection point details by calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> method.</span></span> <span data-ttu-id="4a5c9-189">它为使用者控件执行类似的任务，并调用 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-189">It carries out a similar task for the consumer control, calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> method.</span></span> <span data-ttu-id="4a5c9-190">最后，它 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 通过对控件调用方法来创建新的对象 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-190">Finally, it creates the new <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object by calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="4a5c9-191">在浏览器中加载网页后，第一个连接已存在，因为它是在元素中声明的 `<StaticConnections>` 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-191">After you load the Web page in a browser, the first connection already exists because it is declared within the `<StaticConnections>` element.</span></span> <span data-ttu-id="4a5c9-192">在 **邮政编码提供程序** 控件中输入一些文本，该文本将显示在使用者控件中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-192">Enter some text in the **ZIP Code Provider** control, and it will be displayed in the consumer control.</span></span> <span data-ttu-id="4a5c9-193">接下来，将两个控件断开连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-193">Next, disconnect the two controls.</span></span> <span data-ttu-id="4a5c9-194">使用 " **显示模式** " 下拉列表控件更改页面以连接显示模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-194">Using the **Display Mode** drop-down list control, change the page to connect display mode.</span></span> <span data-ttu-id="4a5c9-195">单击谓词菜单 (由标题栏中的向下箭头表示) 对于每个 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件，请注意，每个控件都有一个 **连接** 选项。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-195">Click the verbs menu (represented by a downward arrow in the title bar) for each of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and notice that each has a **Connect** option.</span></span> <span data-ttu-id="4a5c9-196">这是一个连接谓词，仅当页面处于连接模式时，它才会出现在谓词菜单中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-196">This is a connect verb, which appears in the verbs menu only when the page is in connect mode.</span></span> <span data-ttu-id="4a5c9-197">单击其中一个控件上的连接谓词， <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 此时将显示控件提供的连接用户界面。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-197">Click the connect verb on one of the controls, and the connection UI provided by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control appears.</span></span> <span data-ttu-id="4a5c9-198">单击 " **断开连接** " 按钮以结束控件之间的静态连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-198">Click the **Disconnect** button to end the static connection between the controls.</span></span> <span data-ttu-id="4a5c9-199">使用 " **显示模式** " 控件将页面返回到浏览模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-199">Use the **Display Mode** control to return the page to browse mode.</span></span> <span data-ttu-id="4a5c9-200">再次尝试在提供程序中输入一些新文本，请注意，由于控件已断开连接，因此无法在使用者控件中更新文本。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-200">Try to enter some new text in the provider again, and note that because the controls are disconnected, the text fails to update in the consumer control.</span></span>  
  
 <span data-ttu-id="4a5c9-201">接下来，使用与上面相同的方法再次将页面切换到连接显示模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-201">Next, use the same method as above to switch the page into connect display mode again.</span></span> <span data-ttu-id="4a5c9-202">单击其中一个控件上的连接谓词。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-202">Click a connect verb on one of the controls.</span></span> <span data-ttu-id="4a5c9-203">单击 " **创建连接** " 链接，并使用控件提供的 UI 在 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件之间创建连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-203">Click the **Create a Connection** link, and use the UI provided by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control to create a connection between the controls.</span></span> <span data-ttu-id="4a5c9-204">这是创建连接的第二种方法。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-204">This is the second method for creating a connection.</span></span> <span data-ttu-id="4a5c9-205">请注意，一旦建立连接，就会在提供程序控件中输入的最后一个字符串 (因为控件已断开连接) 突然出现在使用者中，因为该连接已重新创建。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-205">Note that as soon as the connection is formed, the last string you entered in the provider control (that failed to appear because the controls were disconnected) suddenly appears in the consumer, because the connection has been recreated.</span></span> <span data-ttu-id="4a5c9-206">单击 " **断开连接** " 按钮以结束刚才创建的当前连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-206">Click the **Disconnect** button to end the current connection that you just created.</span></span> <span data-ttu-id="4a5c9-207">将页返回到浏览模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-207">Return the page to browse mode.</span></span> <span data-ttu-id="4a5c9-208">在提供程序中输入一些新文本，以演示文本未更新并且控件再次断开连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-208">Enter some new text in the provider to demonstrate that the text is not updated, and that the controls are again disconnected.</span></span>  
  
 <span data-ttu-id="4a5c9-209">返回页面以连接显示模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-209">Return the page to connect display mode.</span></span> <span data-ttu-id="4a5c9-210">请单击 " **连接" Web 部件控件** 按钮，而不是单击连接谓词，其中显示了形成连接的第三种方法。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-210">Instead of clicking a connect verb, click the **Connect WebPart Controls** button, which illustrates the third method of forming a connection.</span></span> <span data-ttu-id="4a5c9-211">此方法在一个简单的步骤中以编程方式连接控件，而无需使用 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-211">This approach connects the controls programmatically in one simple step without having to use the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control.</span></span> <span data-ttu-id="4a5c9-212">请注意，在创建连接时，在提供程序中输入的最后一个字符串会突然出现在使用者控件中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-212">Note that as the connection is created, the last string you entered in the provider suddenly appears in the consumer control.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />
    <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)"><span data-ttu-id="4a5c9-213">Web 部件连接概述</span><span class="sxs-lookup"><span data-stu-id="4a5c9-213">Web Parts Connections Overview</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="4a5c9-214">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="4a5c9-214">ASP.NET Web Parts Controls</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a5c9-215">初始化 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-215">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a5c9-216"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.%23ctor%2A>构造函数是公共的，以便在网页的标记中声明连接时，ASP.NET 分析器可以创建实例; 此构造函数不能在开发人员代码中使用。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-216">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.%23ctor%2A> constructor is public so that the ASP.NET parser can create an instance when a connection is declared in the markup of a Web page; this constructor is not intended to be used in developer code.</span></span>  
  
 <span data-ttu-id="4a5c9-217">如果要以 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 编程方式创建对象，则应使用 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A?displayProperty=nameWithType> 控件中提供的或方法 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-217">When you want to create a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object programmatically, you should use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A?displayProperty=nameWithType> or the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A?displayProperty=nameWithType> method provided in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span> <span data-ttu-id="4a5c9-218">这些方法处理创建连接的多个细节，并返回一个 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 对象。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-218">These methods handle the many details of creating a connection, and return a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span>  
  
 <span data-ttu-id="4a5c9-219"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.%23ctor%2A>类的构造函数 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 将和属性的值设置 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> 为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-219">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.%23ctor%2A> constructor for the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class sets the values of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> and <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> properties to `true`.</span></span> <span data-ttu-id="4a5c9-220">因此，新连接的默认状态将为静态 (这意味着它是在包含网页的标记中声明的) 并) 页面的所有用户都可以看到共享的 (。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-220">Thus the default state of a new connection is to be static (meaning that it is declared in the markup of the containing Web page) and shared (visible to all users of the page).</span></span> <span data-ttu-id="4a5c9-221">在典型方案中添加连接时，会出现这种情况，方法是使用元素在页面的标记中声明连接 `<asp:webpartconnection>` 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-221">This will be the case when you add a connection in the typical scenario, by declaring the connection in the markup of the page with an `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="4a5c9-222">但在其他情况下，连接的这些属性的值将不同。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-222">However, in other circumstances a connection will have different values for these properties.</span></span> <span data-ttu-id="4a5c9-223">例如，当你通过在代码中创建连接对象来以编程方式添加连接，并且用户在默认用户个性化设置范围内查看该页时，连接将创建为动态的每用户 (仅对特定用户) 连接可见。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-223">For example, when you add a connection programmatically by creating the connection object in code, and the user is viewing the page in the default user personalization scope, the connection is created as a dynamic, per-user(visible only to the specific user) connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a5c9-224"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>和 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> 属性是只读的，并且这些确定连接特性的属性是由控件在内部由控件设置的， <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 具体取决于如何在页标记中以声明方式创建连接 (，或以编程方式通过代码或用户界面) 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-224">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> and <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> properties are read-only, and these properties that determine the nature of a connection are set internally by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control depending on how a connection is created (declaratively in the page markup, or programmatically through your code or the user interface).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="4a5c9-225">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="4a5c9-225">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Consumer">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart Consumer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart Consumer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Consumer As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ Consumer { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Consumer : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a5c9-226">获取一个作为连接中的使用者控件的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-226">Gets a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> object that is acting as the consumer control in a connection.</span></span></summary>
        <value><span data-ttu-id="4a5c9-227">一个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />，表示作为连接中的使用者的 Web 部件控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-227">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> that represents the Web Parts control acting as the consumer in a connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a5c9-228">每个 Web 部件连接包含共享数据的两个控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-228">Every Web Parts connection consists of two controls that share data.</span></span> <span data-ttu-id="4a5c9-229">一个控件充当数据的提供程序，另一个控件作为使用者，接收和处理来自提供程序的数据。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-229">One control acts as the provider of data, and the other control acts as a consumer, receiving and processing the data from the provider.</span></span> <span data-ttu-id="4a5c9-230"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A>属性获取对 <xref:System.Web.UI.WebControls.WebParts.WebPart> 在连接关系中充当使用者的控件的引用。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-230">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property gets a reference to the <xref:System.Web.UI.WebControls.WebParts.WebPart> control acting as a consumer in a connection relationship.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a5c9-231">下面的代码示例演示如何以编程方式使用 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-231">The following code example demonstrates the programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property.</span></span>  
  
 <span data-ttu-id="4a5c9-232">此代码示例包含四个部分：</span><span class="sxs-lookup"><span data-stu-id="4a5c9-232">The code example has four parts:</span></span>  
  
-   <span data-ttu-id="4a5c9-233">允许您在页上更改 Web 部件显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-233">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="4a5c9-234">接口的源代码和两个用作 <xref:System.Web.UI.WebControls.WebParts.WebPart> 连接的提供者和使用者的控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-234">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="4a5c9-235">承载所有控件并运行代码示例的网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-235">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="4a5c9-236">有关如何运行 "示例" 页的说明。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-236">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="4a5c9-237">此代码示例的第一部分是用户控件，该控件使用户能够更改网页上的显示模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-237">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="4a5c9-238">将以下源代码保存到 .ascx 文件，并为其提供分配给 `Src` 此用户控件的指令属性的文件名，该属性 `Register` 位于宿主网页的顶部附近。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-238">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="4a5c9-239">有关显示模式的详细信息以及此控件中源代码的说明，请参阅 [演练：在 Web 部件页上更改显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-239">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Consumer#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_Consumer#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="4a5c9-240">此代码示例的第二部分是 <xref:System.Web.UI.WebControls.WebParts.WebPart> 作为使用者和连接的提供程序的两个控件的源代码，以及用于连接点的接口。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-240">The second part of the code example is the source code for the two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that serve as the consumer and the provider for the connection, and an interface used for the connection points.</span></span> <span data-ttu-id="4a5c9-241">要使代码示例运行，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-241">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="4a5c9-242">可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-242">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="4a5c9-243">或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-243">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="4a5c9-244">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-244">This code example uses dynamic compilation.</span></span> <span data-ttu-id="4a5c9-245">有关演示如何编译的演练，请参阅 [演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-245">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_Consumer#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_Consumer#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="4a5c9-246">此代码示例的第三部分是承载控件的网页的代码，并演示属性的用法 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-246">The third part of the code example is the code for the Web page that hosts the controls and demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property.</span></span> <span data-ttu-id="4a5c9-247">页面顶部附近是 `Register` 用户控件和自定义控件的指令。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-247">Near the top of the page are the `Register` directives for the user control and the custom controls.</span></span> <span data-ttu-id="4a5c9-248">由于本示例使用动态编译，因此 `Register` 源文件的指令不需要引用程序集名称; 它只包含控件的任意标记前缀和命名空间。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-248">Because this example uses dynamic compilation, the `Register` directive for the source file does not need to reference an assembly name; it includes only an arbitrary tag prefix and the namespace of the controls.</span></span> <span data-ttu-id="4a5c9-249">在 `Button2_Click` 方法中，代码通过控件访问连接对象 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> ，并获取对使用者控件的引用。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-249">In the `Button2_Click` method, the code accesses the connection object through the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, and gets a reference to the consumer control.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Consumer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_Consumer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="4a5c9-250">在浏览器中加载页面后，请使用 " **显示模式** " 下拉列表控件将页面切换到连接模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-250">After you load the page in a browser, use the **Display Mode** drop-down list control to switch the page to connect mode.</span></span> <span data-ttu-id="4a5c9-251">单击谓词菜单 (由标题栏中的向下箭头表示) 一个 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件上，然后单击 "连接" 谓词。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-251">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="4a5c9-252">使用 " **连接" WebPart 控件** 按钮或提供的连接用户界面 (UI) ，以创建两个控件之间的连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-252">Use the **Connect WebPart Controls** button, or the provided connection user interface (UI), to create a connection between the two controls.</span></span> <span data-ttu-id="4a5c9-253">单击 " **显示使用者信息** " 按钮，以运行演示属性的代码 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-253">Click the **Display Consumer Info** button to run the code that demonstrates the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a5c9-254"><see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID" /> 属性的长度为零。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-254">The length of the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID" /> property is zero.</span></span></exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="4a5c9-255">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="4a5c9-255">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConsumerConnectionPoint">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint ConsumerConnectionPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint ConsumerConnectionPoint" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsumerConnectionPoint As ConsumerConnectionPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ ConsumerConnectionPoint { System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConsumerConnectionPoint : System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a5c9-256">获取一个对象，该对象作为连接中充当使用者的控件的连接点。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-256">Gets the object that serves as a connection point for a control that is acting as a consumer in a connection.</span></span></summary>
        <value><span data-ttu-id="4a5c9-257">与连接中的使用者控件关联的 <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-257">A <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> associated with the consumer control in a connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a5c9-258">在两个控件之间创建连接所必需的步骤之一 <xref:System.Web.UI.WebControls.WebParts.WebPart> 是为每个控件创建连接点。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-258">One of the required steps for creating a connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls is to create connection points for each control.</span></span> <span data-ttu-id="4a5c9-259">使用者连接点是一个对象，其中包含有关如何连接到作为使用者的控件的信息。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-259">The consumer connection point is an object that contains the information about how to connect to the control acting as a consumer.</span></span> <span data-ttu-id="4a5c9-260">在使用者的源代码中，必须使用属性标识其中一种方法 `ConnectionConsumer` 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-260">In the consumer's source code, one of the methods must be identified with the `ConnectionConsumer` attribute.</span></span> <span data-ttu-id="4a5c9-261"><xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>与使用者控件关联的对象包含有关方法和属性的详细信息，包括方法的 ID、用于在用户界面中使用的显示名称 (UI) ，以及该方法可以检索的接口类型。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-261">The <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object that is associated with a consumer control contains details about the method and the attribute, including an ID for the method, a display name for use in the user interface (UI), and what type of interface the method can retrieve.</span></span> <span data-ttu-id="4a5c9-262">这组有关使用者的信息、其建立连接的方法以及它理解的接口类型，共同形成了一个使用者连接点。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-262">This set of information about the consumer, its method for forming connections, and the type of interface it understands, collectively forms a consumer connection point.</span></span>  
  
 <span data-ttu-id="4a5c9-263">默认情况下， <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 对象一次只能连接到一个 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 对象。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-263">By default, a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object can connect to only one <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object at a time.</span></span> <span data-ttu-id="4a5c9-264">使用者可能会将多个方法标识为可能的使用者连接点，但使用者只能作为使用者参与一个连接 (因此，一次只能有一个使用者连接点) 处于活动状态。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-264">A consumer could have multiple methods identified as possible consumer connection points, but a consumer can only participate in one connection as a consumer (hence, only one of its consumer connection points can be active) at a time.</span></span> <span data-ttu-id="4a5c9-265">与此相反， <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 可以连接到任意数量的 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 对象。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-265">In contrast, a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> can connect to any number of <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="4a5c9-266">可以通过重写属性上的属性来更改此默认行为 <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-266">This default behavior can be changed by overriding the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A> property on the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a5c9-267">下面的代码示例演示如何以编程方式使用 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-267">The following code example demonstrates the programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property.</span></span>  
  
 <span data-ttu-id="4a5c9-268">该示例包含四个部分：</span><span class="sxs-lookup"><span data-stu-id="4a5c9-268">The example has four parts:</span></span>  
  
-   <span data-ttu-id="4a5c9-269">允许您在页上更改 Web 部件显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-269">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="4a5c9-270">接口的源代码和两个用作 <xref:System.Web.UI.WebControls.WebParts.WebPart> 连接的提供者和使用者的控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-270">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="4a5c9-271">承载所有控件并运行代码示例的网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-271">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="4a5c9-272">有关如何运行 "示例" 页的说明。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-272">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="4a5c9-273">此代码示例的第一部分是用户控件，该控件使用户能够更改网页上的显示模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-273">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="4a5c9-274">将以下源代码保存到 .ascx 文件，并为其提供分配给 `Src` 此用户控件的指令属性的文件名，该属性 `Register` 位于宿主网页的顶部附近。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-274">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="4a5c9-275">有关显示模式的详细信息以及此控件中源代码的说明，请参阅 [演练：在 Web 部件页上更改显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-275">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerConnectionPoint#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerConnectionPoint#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="4a5c9-276">此代码示例的第二部分是 <xref:System.Web.UI.WebControls.WebParts.WebPart> 作为使用者和连接的提供程序的两个控件的源代码，以及用于连接点的接口。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-276">The second part of the code example is the source code for the two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that serve as the consumer and the provider for the connection, and an interface used for the connection points.</span></span> <span data-ttu-id="4a5c9-277">要使代码示例运行，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-277">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="4a5c9-278">可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-278">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="4a5c9-279">或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-279">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="4a5c9-280">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-280">This code example uses dynamic compilation.</span></span> <span data-ttu-id="4a5c9-281">有关演示如何编译的演练，请参阅 [演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-281">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ConsumerConnectionPoint#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ConsumerConnectionPoint#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="4a5c9-282">此代码示例的第三部分是承载控件的网页的代码，并演示属性的用法 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-282">The third part of the code example is the code for the Web page that hosts the controls and demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property.</span></span> <span data-ttu-id="4a5c9-283">在 `Button1_Click` 方法中，创建建立连接所需的所有对象（包括 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 对象）。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-283">In the `Button1_Click` method, all the objects required to form a connection are created, including a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span> <span data-ttu-id="4a5c9-284">这些对象都传递到 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> 方法以创建连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-284">These objects are all passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method to create the connection.</span></span> <span data-ttu-id="4a5c9-285">在 `Button2_Click` 方法中，代码访问 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> 属性，并显示连接点的一些详细信息。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-285">In the `Button2_Click` method, the code accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property and displays some details of the connection point.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerConnectionPoint#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerConnectionPoint#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="4a5c9-286">在浏览器中加载页面后，请使用 " **显示模式** " 下拉列表控件将页面切换到连接模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-286">After you load the page in a browser, use the **Display Mode** drop-down list control to switch the page to connect mode.</span></span> <span data-ttu-id="4a5c9-287">单击谓词菜单 (由标题栏中的向下箭头表示) 一个 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件上，然后单击 "连接" 谓词。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-287">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="4a5c9-288">使用 " **连接" WebPart 控件** 按钮或提供的连接 UI 在两个控件之间创建连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-288">Use the **Connect WebPart Controls** button, or the provided connection UI, to create a connection between the two controls.</span></span> <span data-ttu-id="4a5c9-289">单击 " **器详细信息** " 按钮以运行演示属性的代码 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-289">Click the **ConnectionPoint Details** button to run the code that demonstrates the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="4a5c9-290">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="4a5c9-290">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConsumerConnectionPointID">
      <MemberSignature Language="C#" Value="public string ConsumerConnectionPointID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConsumerConnectionPointID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID" />
      <MemberSignature Language="VB.NET" Value="Public Property ConsumerConnectionPointID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConsumerConnectionPointID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConsumerConnectionPointID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("default")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("default")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a5c9-291">获取或设置连接上的属性值，该值引用作为该连接的使用者连接点的对象的 ID。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-291">Gets or sets the property value on a connection that references the ID of the object serving as the consumer connection point for that connection.</span></span></summary>
        <value><span data-ttu-id="4a5c9-292">包含使用者连接点的 ID 的字符串。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-292">A string that contains the ID for the consumer connection point.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a5c9-293">对于在网页的标记中声明的静态连接，开发人员可以通过为元素的特性指定值来指定将用于连接的使用者连接点 `ConsumerConnectionPointID` `<asp:webpartconnection>` 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-293">For a static connection declared in the markup of a Web page, developers can specify which consumer connection point will be used for the connection by assigning a value to the `ConsumerConnectionPointID` attribute on the `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="4a5c9-294">如果未将值分配给属性，则 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> 使用属性值。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-294">If a value is not assigned to the attribute, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> property value is used.</span></span>  
  
 <span data-ttu-id="4a5c9-295">) 连接创建动态 (编程时，通常不应设置属性的值 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-295">When you create dynamic (programmatic) connections, normally you should not set the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property.</span></span> <span data-ttu-id="4a5c9-296">您可以只调用 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> 控件上的方法 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> ，将使用者和使用者连接点 (对象与) 的其他必需参数一起使用，并且该方法将确定要用于使用者连接点的正确 ID。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-296">You can simply call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, passing to it the consumer and consumer connection point objects (along with the other required parameters), and that method determines the correct ID to use for the consumer's connection point.</span></span> <span data-ttu-id="4a5c9-297">同样，在断开连接时，可以调用 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> 方法，而无需指定 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> 属性值。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-297">Similarly, when you disconnect, you can call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method without needing to specify the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a5c9-298">当你将 <xref:System.Web.UI.WebControls.WebParts.WebPart> 或其他服务器控件指定为使用者时，可以确定使用者的连接点的 ID。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-298">The ID of a consumer's connection point can be determined when you designate a <xref:System.Web.UI.WebControls.WebParts.WebPart> or other server control as a consumer.</span></span> <span data-ttu-id="4a5c9-299">必须标识使用者中的一个方法，该方法检索由提供程序控件或转换器提供的接口的实例。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-299">You must identify a method in the consumer that retrieves an instance of an interface furnished by either a provider control or a transformer.</span></span> <span data-ttu-id="4a5c9-300">若要标识该方法，请用 `ConnectionConsumer` code 特性标记它。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-300">To identify the method, mark it with the `ConnectionConsumer` code attribute.</span></span> <span data-ttu-id="4a5c9-301">添加此属性时，可以添加一个可选的字符串值参数，该参数作为使用者对象的 ID <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-301">When you add this attribute, you can add an optional string value parameter that serves as an ID for the consumer's <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span> <span data-ttu-id="4a5c9-302">如果为可选 ID 参数提供一个值，该值将成为连接的属性的值 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-302">If you supply a value for the optional ID parameter, that value becomes the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property for the connection.</span></span> <span data-ttu-id="4a5c9-303">如果未提供 ID 值，则 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> 使用属性值。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-303">If you do not supply an ID value, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> property value is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a5c9-304">下面的代码示例演示了属性的声明性和编程使用 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-304">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property.</span></span>  
  
 <span data-ttu-id="4a5c9-305">该示例包含四个部分：</span><span class="sxs-lookup"><span data-stu-id="4a5c9-305">The example has four parts:</span></span>  
  
-   <span data-ttu-id="4a5c9-306">允许您在页上更改 Web 部件显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-306">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="4a5c9-307">接口的源代码和两个用作 <xref:System.Web.UI.WebControls.WebParts.WebPart> 连接的提供者和使用者的控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-307">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="4a5c9-308">承载所有控件并运行代码示例的网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-308">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="4a5c9-309">有关如何运行 "示例" 页的说明。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-309">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="4a5c9-310">此代码示例的第一部分是用户控件，该控件使用户能够更改网页上的显示模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-310">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="4a5c9-311">将以下源代码保存到 .ascx 文件，并为其提供分配给 `Src` 此用户控件的指令属性的文件名，该属性 `Register` 位于宿主网页的顶部附近。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-311">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="4a5c9-312">有关显示模式的详细信息以及此控件中源代码的说明，请参阅 [演练：在 Web 部件页上更改显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-312">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerConnectionPointID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerConnectionPointID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="4a5c9-313">此代码示例的第二部分是接口的源代码和使用者控件和提供者控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-313">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="4a5c9-314">要使代码示例运行，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-314">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="4a5c9-315">可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-315">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="4a5c9-316">或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-316">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="4a5c9-317">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-317">This code example uses dynamic compilation.</span></span> <span data-ttu-id="4a5c9-318">有关演示如何编译的演练，请参阅 [演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-318">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ConsumerConnectionPointID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ConsumerConnectionPointID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="4a5c9-319">此代码示例的第三部分是网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-319">The third part of the code example is the Web page.</span></span> <span data-ttu-id="4a5c9-320">请注意，使用和元素在页标记中声明连接 `<StaticConnections>` `<asp:WebPartsConnection>` 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-320">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="4a5c9-321">连接声明包括必需的 `ConsumerConnectionPointID` 属性。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-321">The connection declaration includes the required `ConsumerConnectionPointID` attribute.</span></span> <span data-ttu-id="4a5c9-322">用于创建连接的另一种方法将在方法中显示， `Button1_Click` 其中，代码使用使用者控件中定义的连接点创建新连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-322">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point defined in the consumer control.</span></span> <span data-ttu-id="4a5c9-323">然后，在 `Button2_Click` 方法中，代码访问 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-323">Then, in the `Button2_Click` method, the code accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerConnectionPointID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerConnectionPointID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="4a5c9-324">在浏览器中加载页面后，连接已存在，因为在页面中声明了静态连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-324">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="4a5c9-325">在提供程序控件中输入一些文本，请注意，由于连接的原因，该文本将显示在使用者中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-325">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="4a5c9-326">接下来，断开控件的连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-326">Next, disconnect the controls.</span></span> <span data-ttu-id="4a5c9-327">使用 " **显示模式** " 下拉列表控件，将页面切换到连接模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-327">Using the **Display Mode** drop-down list control, switch the page to connect mode.</span></span> <span data-ttu-id="4a5c9-328">单击谓词菜单 (由标题栏中的向下箭头表示) 一个 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件上，然后单击 "连接" 谓词。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-328">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="4a5c9-329">单击 " **断开连接** " 按钮。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-329">Click the **Disconnect** button.</span></span> <span data-ttu-id="4a5c9-330">使用 " **连接" Web 部件控件** 按钮可以重新创建两个控件之间的连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-330">Use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="4a5c9-331">单击 " **器详细信息** " 按钮以运行访问 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> 属性值的代码。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-331">Click the **ConnectionPoint Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property value.</span></span> <span data-ttu-id="4a5c9-332">值写出在控件下方的标签中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-332">The value is written out in a label below the controls.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="4a5c9-333">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="4a5c9-333">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConsumerID">
      <MemberSignature Language="C#" Value="public string ConsumerID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConsumerID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID" />
      <MemberSignature Language="VB.NET" Value="Public Property ConsumerID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConsumerID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConsumerID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a5c9-334">获取或设置连接上的属性值，该值引用作为该连接的使用者的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的 ID。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-334">Gets or sets the property value on a connection that references the ID of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control acting as a consumer for that connection.</span></span></summary>
        <value><span data-ttu-id="4a5c9-335">一个字符串，包含作为连接中的使用者的控件的 ID。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-335">A string that contains the ID of the control acting as a consumer in a connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a5c9-336">在 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> 控件之间创建连接时，属性值是必需的 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-336">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property value is required when you create a connection between <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="4a5c9-337">如果未将值分配给属性，则当 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 控件尝试激活连接时将引发异常。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-337">If a value is not assigned to the property, an exception is thrown when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control attempts to activate the connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a5c9-338">下面的代码示例演示了属性的声明性和编程使用 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-338">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property.</span></span>  
  
 <span data-ttu-id="4a5c9-339">该示例包含四个部分：</span><span class="sxs-lookup"><span data-stu-id="4a5c9-339">The example has four parts:</span></span>  
  
-   <span data-ttu-id="4a5c9-340">允许您在页上更改 Web 部件显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-340">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="4a5c9-341">接口的源代码和两个用作 <xref:System.Web.UI.WebControls.WebParts.WebPart> 连接的提供者和使用者的控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-341">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="4a5c9-342">承载所有控件并运行代码示例的网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-342">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="4a5c9-343">有关如何运行 "示例" 页的说明。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-343">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="4a5c9-344">此代码示例的第一部分是用户控件，该控件使用户能够更改网页上的显示模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-344">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="4a5c9-345">将以下源代码保存到 .ascx 文件，并为其提供分配给 `Src` 此用户控件的指令属性的文件名，该属性 `Register` 位于宿主网页的顶部附近。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-345">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="4a5c9-346">有关显示模式的详细信息以及此控件中源代码的说明，请参阅 [演练：在 Web 部件页上更改显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-346">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="4a5c9-347">此代码示例的第二部分是接口的源代码和使用者控件和提供者控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-347">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="4a5c9-348">要使代码示例运行，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-348">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="4a5c9-349">可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-349">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="4a5c9-350">或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-350">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="4a5c9-351">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-351">This code example uses dynamic compilation.</span></span> <span data-ttu-id="4a5c9-352">有关演示如何编译的演练，请参阅 [演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-352">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ConsumerID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ConsumerID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="4a5c9-353">此代码示例的第三部分是网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-353">The third part of the code example is the Web page.</span></span> <span data-ttu-id="4a5c9-354">请注意，使用和元素在页标记中声明连接 `<StaticConnections>` `<asp:WebPartsConnection>` 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-354">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="4a5c9-355">连接声明包括必需的 `ConsumerID` 属性。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-355">The connection declaration includes the required `ConsumerID` attribute.</span></span> <span data-ttu-id="4a5c9-356">用于创建连接的另一种方法将在方法中显示， `Button1_Click` 其中，代码使用使用者控件中定义的连接点创建新连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-356">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point defined in the consumer control.</span></span> <span data-ttu-id="4a5c9-357">然后，在 `Button2_Click` 方法中，代码将访问属性的值 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> ，并将其显示在标签中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-357">Then, in the `Button2_Click` method, the code accesses the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property and displays it in a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="4a5c9-358">在浏览器中加载页面后，连接已存在，因为在页面中声明了静态连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-358">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="4a5c9-359">在提供程序控件中输入一些文本，请注意，由于连接的原因，该文本将显示在使用者中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-359">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="4a5c9-360">接下来，断开控件的连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-360">Next, disconnect the controls.</span></span> <span data-ttu-id="4a5c9-361">使用 " **显示模式** " 下拉列表控件，将页面切换到连接模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-361">Using the **Display Mode** drop-down list control, switch the page to connect mode.</span></span> <span data-ttu-id="4a5c9-362">单击谓词菜单 (由标题栏中的向下箭头表示) 一个 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件上，然后单击 "连接" 谓词。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-362">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="4a5c9-363">单击 " **断开连接** " 按钮。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-363">Click the **Disconnect** button.</span></span> <span data-ttu-id="4a5c9-364">使用 " **连接" Web 部件控件** 按钮可以重新创建两个控件之间的连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-364">Use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="4a5c9-365">单击 " **使用者详细信息** " 按钮以运行访问 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> 属性值的代码。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-365">Click the **Consumer Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="4a5c9-366">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="4a5c9-366">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ID" />
      <MemberSignature Language="VB.NET" Value="Public Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a5c9-367">获取或设置 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> 对象的 ID。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-367">Gets or sets the ID of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object.</span></span></summary>
        <value><span data-ttu-id="4a5c9-368">包含 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> 的 ID 的字符串。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-368">A string that contains the ID of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a5c9-369">每个 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 对象都有一个分配给其属性的唯一值 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-369">Every <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object has a unique value assigned to its <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> property.</span></span> <span data-ttu-id="4a5c9-370">这是为了确保有一种方法可以区分多个连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-370">This is to ensure that there is a way to distinguish between multiple connections.</span></span>  
  
 <span data-ttu-id="4a5c9-371">如果通过在网页中声明元素来创建静态连接， `<asp:webpartconnection>` 并且没有为 `ID` 连接的属性赋值，则当 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 控件尝试激活连接时将引发异常。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-371">If you create a static connection by declaring an `<asp:webpartconnection>` element in a Web page, and you do not assign a value to the `ID` attribute for the connection, an exception is thrown when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control attempts to activate the connection.</span></span>  
  
 <span data-ttu-id="4a5c9-372">当 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 控件创建新的动态连接时，它会调用 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID%2A> 方法来生成连接的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-372">When the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control creates a new dynamic connection, it calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID%2A> method to generate a unique ID for the connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a5c9-373">下面的代码示例演示了属性的声明性和编程使用 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-373">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> property.</span></span>  
  
 <span data-ttu-id="4a5c9-374">该示例包含四个部分：</span><span class="sxs-lookup"><span data-stu-id="4a5c9-374">The example has four parts:</span></span>  
  
-   <span data-ttu-id="4a5c9-375">允许您在页上更改 Web 部件显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-375">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="4a5c9-376">接口的源代码和两个用作 <xref:System.Web.UI.WebControls.WebParts.WebPart> 连接的提供者和使用者的控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-376">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="4a5c9-377">承载所有控件并运行代码示例的网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-377">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="4a5c9-378">有关如何运行 "示例" 页的说明。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-378">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="4a5c9-379">此代码示例的第一部分是用户控件，该控件使用户能够更改网页上的显示模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-379">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="4a5c9-380">将以下源代码保存到 .ascx 文件，并为其提供分配给 `Src` 此用户控件的指令属性的文件名，该属性 `Register` 位于宿主网页的顶部附近。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-380">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="4a5c9-381">有关显示模式的详细信息以及此控件中源代码的说明，请参阅 [演练：在 Web 部件页上更改显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-381">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="4a5c9-382">此代码示例的第二部分是接口的源代码和使用者控件和提供者控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-382">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="4a5c9-383">要使代码示例运行，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-383">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="4a5c9-384">可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-384">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="4a5c9-385">或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-385">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="4a5c9-386">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-386">This code example uses dynamic compilation.</span></span> <span data-ttu-id="4a5c9-387">有关演示如何编译的演练，请参阅 [演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-387">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="4a5c9-388">此代码示例的第三部分是网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-388">The third part of the code example is the Web page.</span></span> <span data-ttu-id="4a5c9-389">请注意，使用和元素在页标记中声明连接 `<StaticConnections>` `<asp:WebPartsConnection>` 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-389">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="4a5c9-390">连接声明包括必需的 `ID` 属性。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-390">The connection declaration includes the required `ID` attribute.</span></span> <span data-ttu-id="4a5c9-391">用于创建连接的另一种方法将在方法中显示， `Button1_Click` 其中，代码使用使用者控件中定义的连接点创建新连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-391">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point defined in the consumer control.</span></span> <span data-ttu-id="4a5c9-392">此处不需要 ID 属性，因为连接是动态的，并且 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 控件将 ID 分配到连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-392">Here, the ID property is not required, because the connection is dynamic, and the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control assigns an ID to the connection.</span></span> <span data-ttu-id="4a5c9-393">在 `Button2_Click` 方法中，代码将访问属性的值 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> ，并将其显示在标签中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-393">In the `Button2_Click` method, the code accesses the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> property and displays it in a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="4a5c9-394">在浏览器中加载页面后，连接已存在，因为在页面中声明了静态连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-394">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="4a5c9-395">在提供程序控件中输入一些文本，请注意，由于连接的原因，该文本将显示在使用者中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-395">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="4a5c9-396">接下来，断开控件的连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-396">Next, disconnect the controls.</span></span> <span data-ttu-id="4a5c9-397">使用 " **显示模式** " 下拉列表控件，将页面切换到连接模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-397">Using the **Display Mode** drop-down list control, switch the page to connect mode.</span></span> <span data-ttu-id="4a5c9-398">单击谓词菜单 (由标题栏中的向下箭头表示) 一个 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件上，然后单击 "连接" 谓词。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-398">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="4a5c9-399">单击 " **断开连接** " 按钮。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-399">Click the **Disconnect** button.</span></span> <span data-ttu-id="4a5c9-400">使用 " **连接" Web 部件控件** 按钮可以重新创建两个控件之间的连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-400">Use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="4a5c9-401">单击 " **连接详细信息** " 按钮以运行访问 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> 属性值的代码。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-401">Click the **Connection Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> property value.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="4a5c9-402">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="4a5c9-402">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsActive : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a5c9-403">获取一个值，该值指示 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> 对象当前是否已经建立并且能够在其提供者和使用者控件之间交换数据。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-403">Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object is currently established and able to exchange data between its provider and consumer controls.</span></span></summary>
        <value><span data-ttu-id="4a5c9-404">如果连接处于活动状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-404"><see langword="true" /> if the connection is active; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a5c9-405"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A>属性指示对象的状态 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-405">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> property indicates a state of a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span> <span data-ttu-id="4a5c9-406">当连接处于此状态时，连接中的提供者和使用者控件将进行通信，并能够通过公共接口或对象交换数据 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-406">When the connection is in this state, the provider and consumer controls in the connection are communicating and able to exchange data through a common interface or a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object.</span></span>  
  
 <span data-ttu-id="4a5c9-407">当用户查看在正常浏览模式下包含已建立连接的已呈现页面时，该连接通常为活动 (除非由于在页面加载) 时出现一些冲突或其他问题而无法激活。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-407">When a user views a rendered page that includes an established connection in normal browse mode, the connection is typically active (unless it failed to be activated due to some conflict or other issue when the page loaded).</span></span> <span data-ttu-id="4a5c9-408">在页面和控件生命周期的早期阶段，属性值为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-408">In the early stages of the page and control life cycle, the property value is `false`.</span></span> <span data-ttu-id="4a5c9-409">该连接将在 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> 引发控件上的事件后立即激活 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-409">The connection is activated just after the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> event on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control is raised.</span></span> <span data-ttu-id="4a5c9-410">具体而言，在使用者从提供程序或对象检索指定接口的实例后，将激活连接 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-410">Specifically, the connection is activated after the consumer has retrieved an instance of the specified interface from the provider or a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object.</span></span>  
  
 <span data-ttu-id="4a5c9-411">当某个页面上有多个连接时，知道连接是否处于活动状态是非常有用的。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-411">It is useful to know whether a connection is active in situations where there might be conflicts or synchronization issues due to multiple connections on a page.</span></span> <span data-ttu-id="4a5c9-412">例如，如果两个连接之间存在某种冲突，则 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 控件可以选择不激活某个连接来避免冲突。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-412">For example, if there is some kind of conflict between two connections, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control has the option of not activating one of the connections to avoid the conflict.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a5c9-413">下面的代码示例演示属性的用法 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-413">The following code example demonstrates use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> property.</span></span>  
  
 <span data-ttu-id="4a5c9-414">该示例包含三个部分：</span><span class="sxs-lookup"><span data-stu-id="4a5c9-414">The example has three parts:</span></span>  
  
-   <span data-ttu-id="4a5c9-415">接口的源代码和两个用作 <xref:System.Web.UI.WebControls.WebParts.WebPart> 连接的提供者和使用者的控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-415">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="4a5c9-416">承载所有控件并运行代码示例的网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-416">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="4a5c9-417">有关如何运行 "示例" 页的说明。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-417">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="4a5c9-418">此代码示例的第一部分是接口的源代码和使用者控件和提供者控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-418">The first part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="4a5c9-419">要使代码示例运行，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-419">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="4a5c9-420">可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-420">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="4a5c9-421">或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-421">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="4a5c9-422">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-422">This code example uses dynamic compilation.</span></span> <span data-ttu-id="4a5c9-423">有关演示如何编译的演练，请参阅 [演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-423">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_IsActive#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsActive/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_IsActive#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsActive/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="4a5c9-424">此代码示例的第二部分是网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-424">The second part of the code example is the Web page.</span></span> <span data-ttu-id="4a5c9-425">顶部附近是一个 `Register` 指令，该指令引用两个动态编译的控件的源代码 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-425">Near the top is a `Register` directive that refers to the source code for the two dynamically compiled <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="4a5c9-426">静态连接在 `<StaticConnections>` 页面上的元素中声明。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-426">The static connection is declared within the `<StaticConnections>` element on the page.</span></span> <span data-ttu-id="4a5c9-427">元素中 `<script>` 包含四个事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-427">Within the `<script>` element are four event handlers.</span></span> <span data-ttu-id="4a5c9-428">每个事件处理程序将检查 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> 静态连接上属性的值，并向控件写入一条消息， <xref:System.Web.UI.WebControls.Label> 指示连接在该页的该状态下是处于活动状态还是处于非活动状态以及控件生命周期。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-428">Each event handler checks the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> property on the static connection, and writes a message to the <xref:System.Web.UI.WebControls.Label> control indicating whether the connection is active or inactive at that state of the page and control life cycle.</span></span> <span data-ttu-id="4a5c9-429">这说明了连接在哪个点处于活动状态，并且它在页面呈现后保持活动状态。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-429">This demonstrates at what point the connection becomes active, and that it remains active after the page is rendered.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_IsActive#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsActive/CS/wpConnectIsActiveCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_IsActive#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsActive/VB/wpConnectIsActiveVB.aspx#1)]  
  
 <span data-ttu-id="4a5c9-430">在浏览器中加载页面。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-430">Load the page in a browser.</span></span> <span data-ttu-id="4a5c9-431">已创建静态连接，并且已将消息写入标签，这些标签显示连接在页面中的不同时间点是否处于活动状态以及控件生命周期。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-431">The static connection is already created, and messages have already been written to the labels showing whether the connection was active at various points in the page and control life cycle.</span></span> <span data-ttu-id="4a5c9-432">单击 " **连接详细信息** " 按钮，请注意，该连接在该时间点处于不活动状态，但每次事件发生后会重新激活连接，并且该连接 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> 仍处于活动状态， (，并将在 <xref:System.Web.UI.Control.PreRender> 页面出现后) 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-432">Click the **Connection Details** button, and note that the connection is not active at that point, but that the connection is reactivated each time after the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> event, and that it is still active (and will remain so) after the <xref:System.Web.UI.Control.PreRender> event of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsStatic" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="4a5c9-433">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="4a5c9-433">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsShared">
      <MemberSignature Language="C#" Value="public bool IsShared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShared" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsShared As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsShared { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsShared : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a5c9-434">获取一个值，该值指示 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> 对象是对所有用户可见还是仅对当前用户可见。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-434">Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object is visible to all users or only to the current user.</span></span></summary>
        <value><span data-ttu-id="4a5c9-435">如果连接是共享的，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-435"><see langword="true" /> if the connection is shared; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a5c9-436">与各个 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件一样， <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 对象可以是共享或每个用户的实例。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-436">As with individual <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object can be a shared or a per-user instance.</span></span> <span data-ttu-id="4a5c9-437">共享实例表示连接对网页的所有用户可见，而每个用户实例则意味着连接仅对特定用户可见。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-437">A shared instance means that the connection is visible to all users of a Web page, and a per-user instance means the connection is visible only to a specific user.</span></span>  
  
 <span data-ttu-id="4a5c9-438">通常，连接添加到页面的方式确定连接是否共享。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-438">In general, the way a connection is added to a page determines whether the connection is shared.</span></span> <span data-ttu-id="4a5c9-439">如果在网页的标记中声明了连接，则连接将共享，并且 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> 属性值为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-439">If the connection is declared in the markup of a Web page, then the connection is shared and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property value is `true`.</span></span> <span data-ttu-id="4a5c9-440">此外，如果添加连接时网页位于共享的个性化设置范围内，则还会共享连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-440">In addition, if the Web page is in shared personalization scope when a connection is added, the connection is also shared.</span></span> <span data-ttu-id="4a5c9-441">通常，当用户 `<asp:connectionszone>` (UI 中使用用户界面) 添加连接时，该页处于用户个性化设置范围内，因此不会共享连接，并且 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> 属性值为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-441">Typically, when a user uses the `<asp:connectionszone>` user interface (UI) to add a connection, the page is in user personalization scope, so the connection is not shared and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property value is `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a5c9-442">下面的代码示例演示如何以编程方式使用 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-442">The following code example demonstrates programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property.</span></span>  
  
 <span data-ttu-id="4a5c9-443">此代码示例包含五个部分：</span><span class="sxs-lookup"><span data-stu-id="4a5c9-443">The code example has five parts:</span></span>  
  
-   <span data-ttu-id="4a5c9-444">允许您在页上更改 Web 部件显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-444">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="4a5c9-445">接口的源代码和两个用作 <xref:System.Web.UI.WebControls.WebParts.WebPart> 连接的提供者和使用者的控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-445">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="4a5c9-446">承载所有控件并运行代码示例的网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-446">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="4a5c9-447">运行示例所需的 Web.config 文件中的条目。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-447">An entry in the Web.config file that is required to run the example.</span></span>  
  
-   <span data-ttu-id="4a5c9-448">有关如何运行 "示例" 页的说明。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-448">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="4a5c9-449">此代码示例的第一部分是用户控件，该控件使用户能够更改网页上的显示模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-449">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="4a5c9-450">将以下源代码保存到 .ascx 文件，并为其提供分配给 `Src` 此用户控件的指令属性的文件名，该属性 `Register` 位于宿主网页的顶部附近。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-450">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="4a5c9-451">有关显示模式的详细信息以及此控件中源代码的说明，请参阅 [演练：在 Web 部件页上更改显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-451">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_IsShared#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_IsShared#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="4a5c9-452">此代码示例的第二部分是接口的源代码和使用者控件和提供者控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-452">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="4a5c9-453">要使代码示例运行，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-453">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="4a5c9-454">可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-454">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="4a5c9-455">或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-455">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="4a5c9-456">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-456">This code example uses dynamic compilation.</span></span> <span data-ttu-id="4a5c9-457">有关演示如何编译的演练，请参阅 [演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-457">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_IsShared#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_IsShared#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="4a5c9-458">此代码示例的第三部分是网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-458">The third part of the code example is the Web page.</span></span> <span data-ttu-id="4a5c9-459">在 `Button2_Click` 方法中，它将检查 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> 现有连接的属性，并在页面上显示结果。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-459">In the `Button2_Click` method, it checks the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property of the existing connection and displays the result on the page.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_IsShared#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_IsShared#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="4a5c9-460">此代码示例的第四部分是 Web.config 文件中的一个条目，该用户帐户将运行此示例，以便能够在共享个性化设置范围中编辑页面。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-460">The fourth part of the code example is an entry in the Web.config file that is required for the user account that will be running the example to be able to edit the page in shared personalization scope.</span></span> <span data-ttu-id="4a5c9-461">若要启用此设置，你必须在与以下示例类似的部分中的 Web.config 文件中有一个条目 `<system.web>` 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-461">To enable this, you must have an entry in the Web.config file within the `<system.web>` section that looks like the following example.</span></span>  
  
```  
<webParts>  
  <personalization>  
    <authorization>  
      <allow users="UserAccount"  
             roles="admin"  
             verbs="enterSharedScope"/>  
    </authorization>            
  </personalization>  
</webParts>  
```  
  
 <span data-ttu-id="4a5c9-462">在浏览器中加载页面后，使用 " **显示模式** " 下拉列表控件切换页面以连接显示模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-462">After you load the page in a browser, use the **Display Mode** drop-down list control to switch the page to connect display mode.</span></span> <span data-ttu-id="4a5c9-463">单击 " **连接" Web 部件控件** 按钮以建立连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-463">Click the **Connect WebPart Controls** button to form a connection.</span></span> <span data-ttu-id="4a5c9-464">接下来，单击 " **连接详细信息** " 按钮以显示连接是否共享。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-464">Next, click the **Connection Details** button to display whether the connection is shared.</span></span> <span data-ttu-id="4a5c9-465">如果在 "默认用户" 个性化设置范围中创建了与页面的连接，则该 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> 属性的值应 `false` 为 "连接"。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-465">If you created the connection with the page in the default user personalization scope, the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property value should be `false` for the connection.</span></span>  
  
 <span data-ttu-id="4a5c9-466">在其中一个控件的谓词菜单上 <xref:System.Web.UI.WebControls.WebParts.WebPart> (标题栏) 中向下箭头指示），单击 "连接" 谓词。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-466">On the verbs menu of one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls (indicated by the downward arrow in the title bar), click the connect verb.</span></span> <span data-ttu-id="4a5c9-467">连接 UI 出现时，单击 " **断开** 连接" 按钮以结束连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-467">When the connection UI appears, click the **Disconnect** button to end the connection.</span></span> <span data-ttu-id="4a5c9-468">使用 " **显示模式** " 控件将页面返回到浏览模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-468">Use the **Display Mode** control to return the page to browse mode.</span></span>  
  
 <span data-ttu-id="4a5c9-469">在 " **显示模式** " 控件中，选择 " **共享** " 选项，将页面切换到共享的个性化设置范围。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-469">In the **Display Mode** control, select the **Shared** option to switch the page into shared personalization scope.</span></span> <span data-ttu-id="4a5c9-470">按照上述步骤创建连接，然后再次单击 " **连接详细信息** " 按钮以显示连接是否共享。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-470">Follow the same steps as those above to create a connection, and again click the **Connection Details** button to display whether the connection is shared.</span></span> <span data-ttu-id="4a5c9-471">在这种情况下，属性的值 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> 应为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-471">In this case, the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property should be `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="4a5c9-472">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="4a5c9-472">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsStatic">
      <MemberSignature Language="C#" Value="public bool IsStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStatic" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStatic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStatic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStatic : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a5c9-473">获取一个值，该值指示 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> 对象是在网页的标记中声明的，还是以编程方式创建的。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-473">Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object is declared in the markup of a Web page, or created programmatically.</span></span></summary>
        <value><span data-ttu-id="4a5c9-474">如果连接是静态的，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-474"><see langword="true" /> if the connection is static; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a5c9-475">Web 部件控件之间的连接可以是静态的，也可以是动态的。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-475">Connections between Web Parts controls can be either static or dynamic.</span></span> <span data-ttu-id="4a5c9-476">静态连接是使用元素在网页的标记中声明的 `<asp:WebPartConnection>` 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-476">A static connection is declared in the markup of a Web page, using an `<asp:WebPartConnection>` element.</span></span> <span data-ttu-id="4a5c9-477">动态连接是以编程方式创建的，或者当用户通过用户界面创建连接时 (UI) 由 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件定义。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-477">Dynamic connections are created programmatically or when a user creates a connection through the user interface (UI) defined by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control.</span></span>  
  
 <span data-ttu-id="4a5c9-478">静态连接是共享对象，这意味着它们可供网页的所有用户使用。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-478">Static connections are shared objects, meaning they are available to all users of the Web page.</span></span> <span data-ttu-id="4a5c9-479">而且，它们实质上是永久性的，因为像静态 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件一样，它们不能被永久删除。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-479">Also, they are essentially permanent because, like a static <xref:System.Web.UI.WebControls.WebParts.WebPart> control, they cannot be permanently deleted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a5c9-480">当无法永久删除静态连接对象时，它可能会永久断开连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-480">While a static connection object cannot be permanently deleted, it can be permanently disconnected.</span></span> <span data-ttu-id="4a5c9-481">在这种情况下，断开连接的对象将存在于服务器上，但最终用户永远不会意识到对象在页面中的存在。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-481">In this case, the disconnected object would exist on the server, but an end user would never be aware of the object's existence in a page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a5c9-482">下面的代码示例演示如何以编程方式使用 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-482">The following code example demonstrates the programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> property.</span></span>  
  
 <span data-ttu-id="4a5c9-483">此代码示例包含三个部分：</span><span class="sxs-lookup"><span data-stu-id="4a5c9-483">The code example has three parts:</span></span>  
  
-   <span data-ttu-id="4a5c9-484">接口的源代码和两个用作 <xref:System.Web.UI.WebControls.WebParts.WebPart> 连接的提供者和使用者的控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-484">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="4a5c9-485">承载控件并运行代码示例的网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-485">A Web page to host the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="4a5c9-486">有关如何运行 "示例" 页的说明。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-486">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="4a5c9-487">此代码示例的第一部分是接口的源代码和使用者控件和提供者控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-487">The first part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="4a5c9-488">要使代码示例运行，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-488">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="4a5c9-489">可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-489">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="4a5c9-490">或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-490">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="4a5c9-491">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-491">This code example uses dynamic compilation.</span></span> <span data-ttu-id="4a5c9-492">有关演示如何编译的演练，请参阅 [演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-492">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_IsStatic#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsStatic/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_IsStatic#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsStatic/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="4a5c9-493">此代码示例的第二部分是网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-493">The second part of the code example is the Web page.</span></span> <span data-ttu-id="4a5c9-494">顶部附近是一个 `Register` 指令，该指令引用两个动态编译的控件的源代码 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-494">Near the top is a `Register` directive that refers to the source code for the two dynamically compiled <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="4a5c9-495">静态连接在 `<StaticConnections>` 页面上的元素中声明。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-495">The static connection is declared within the `<StaticConnections>` element on the page.</span></span> <span data-ttu-id="4a5c9-496">`Button1_Click`方法访问 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> 属性以检查连接是否为静态。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-496">The `Button1_Click` method accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> property to check whether the connection is static.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_IsStatic#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsStatic/CS/wpConnectIsStaticCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_IsStatic#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsStatic/VB/wpConnectIsStaticVB.aspx#1)]  
  
 <span data-ttu-id="4a5c9-497">在浏览器中加载页面。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-497">Load the page in a browser.</span></span> <span data-ttu-id="4a5c9-498">已创建静态连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-498">The static connection is already created.</span></span> <span data-ttu-id="4a5c9-499">在提供程序控件中输入一些文本，并注意该文本显示在使用者控件中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-499">Enter some text in the provider control, and note that the text is displayed in the consumer control.</span></span> <span data-ttu-id="4a5c9-500">单击 " **连接详细信息** " 按钮以显示属性的值 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-500">Click the **Connection Details** button to display the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="4a5c9-501">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="4a5c9-501">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ Provider { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a5c9-502">获取作为 Web 部件连接中的提供者的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-502">Gets a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control that acts as the provider in a Web Parts connection.</span></span></summary>
        <value><span data-ttu-id="4a5c9-503">作为数据提供者的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-503">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> that acts as the provider of data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a5c9-504">每个 Web 部件连接都包含两个 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件--使用者和提供程序--并且 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> 属性返回对连接中提供程序控件的引用。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-504">Every Web Parts connection consists of two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls--a consumer and a provider--and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property returns a reference to the provider control in a connection.</span></span>  
  
 <span data-ttu-id="4a5c9-505">与 (使用者控件) 连接中的对应项一样，提供程序控件是建立连接所必需的。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-505">Like its counterpart in a connection (the consumer control), the provider control is required to establish a connection.</span></span> <span data-ttu-id="4a5c9-506">无论是以编程方式创建连接，还是以页持久性格式声明，都必须指定一个控件作为连接的访问接口。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-506">Whether you create the connection programmatically, or by declaring it in page persistence format, you must specify a control to act as the provider for a connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a5c9-507">下面的代码示例演示属性的用法 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-507">The following code example demonstrates use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property.</span></span>  
  
 <span data-ttu-id="4a5c9-508">此代码示例包含三个部分：</span><span class="sxs-lookup"><span data-stu-id="4a5c9-508">The code example has three parts:</span></span>  
  
-   <span data-ttu-id="4a5c9-509">接口的源代码和两个用作 <xref:System.Web.UI.WebControls.WebParts.WebPart> 连接的提供者和使用者的控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-509">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="4a5c9-510">承载控件并运行代码示例的网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-510">A Web page to host the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="4a5c9-511">有关如何运行 "示例" 页的说明。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-511">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="4a5c9-512">此代码示例的第一部分是接口的源代码和使用者控件和提供者控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-512">The first part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="4a5c9-513">要使代码示例运行，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-513">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="4a5c9-514">可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-514">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="4a5c9-515">或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-515">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="4a5c9-516">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-516">This code example uses dynamic compilation.</span></span> <span data-ttu-id="4a5c9-517">有关演示如何编译的演练，请参阅 [演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-517">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_Provider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Provider/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_Provider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Provider/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="4a5c9-518">此代码示例的第二部分是网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-518">The second part of the code example is the Web page.</span></span> <span data-ttu-id="4a5c9-519">顶部附近是一个 `Register` 指令，该指令引用两个动态编译的控件的源代码 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-519">Near the top is a `Register` directive that refers to the source code for the two dynamically compiled <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="4a5c9-520">静态连接在 `<StaticConnections>` 页面上的元素中声明。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-520">The static connection is declared within the `<StaticConnections>` element on the page.</span></span> <span data-ttu-id="4a5c9-521">请注意，在 `<asp:webpartconnection>` 元素中， `ProviderID` 属性具有分配给它的提供程序控件的 ID。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-521">Notice that in the `<asp:webpartconnection>` element, the `ProviderID` attribute has the ID of the provider control assigned to it.</span></span> <span data-ttu-id="4a5c9-522">这是为静态连接标识提供程序所必需的。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-522">This is required to identify the provider for the static connection.</span></span> <span data-ttu-id="4a5c9-523">`Button1_Click`方法访问 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> 属性，并将其一些详细信息写入标签。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-523">The `Button1_Click` method accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property and writes some of its details to a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Provider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Provider/CS/wpConnectProviderCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_Provider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Provider/VB/wpConnectProviderVB.aspx#1)]  
  
 <span data-ttu-id="4a5c9-524">在浏览器中加载页面。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-524">Load the page in a browser.</span></span> <span data-ttu-id="4a5c9-525">已创建静态连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-525">The static connection is already created.</span></span> <span data-ttu-id="4a5c9-526">在提供程序控件中输入一些文本，并注意该文本显示在使用者控件中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-526">Enter some text in the provider control, and note that the text is displayed in the consumer control.</span></span> <span data-ttu-id="4a5c9-527">单击 " **提供程序详细信息** " 按钮可显示通过属性访问的某些属性值 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-527">Click the **Provider Details** button to display some of the property values accessed through the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a5c9-528"><see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" /> 属性值的长度为零。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-528">The length of the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" /> property value is zero.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="4a5c9-529">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="4a5c9-529">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ProviderConnectionPoint">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.ProviderConnectionPoint ProviderConnectionPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint ProviderConnectionPoint" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderConnectionPoint As ProviderConnectionPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ ProviderConnectionPoint { System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderConnectionPoint : System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ProviderConnectionPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a5c9-530">获取一个对象，该对象作为充当连接提供者的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的连接点。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-530">Gets the object that serves as a connection point for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control acting as a provider for a connection.</span></span></summary>
        <value><span data-ttu-id="4a5c9-531">与连接中的提供者控件关联的 <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-531">A <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> associated with the provider control in a connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a5c9-532">在两个控件之间创建连接所必需的步骤之一 <xref:System.Web.UI.WebControls.WebParts.WebPart> 是为每个控件创建连接点。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-532">One of the required steps for creating a connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls is to create connection points for each control.</span></span> <span data-ttu-id="4a5c9-533">提供程序连接点是一个对象，其中包含有关如何连接到用作提供者的控件的信息。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-533">The provider connection point is an object that contains the information about how to connect to the control acting as a provider.</span></span> <span data-ttu-id="4a5c9-534">在提供程序的源代码中，其中一个方法必须用 `ConnectionProvider` 特性标识。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-534">In the provider's source code, one of the methods must be identified with the `ConnectionProvider` attribute.</span></span> <span data-ttu-id="4a5c9-535"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>与提供程序控件关联的包含有关方法和属性的详细信息，包括方法的 ID、在用户界面中使用的显示名称 (UI) ，以及方法可以返回给使用者控件的接口实例的类型。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-535">The <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> that is associated with a provider control contains details about the method and the attribute, including an ID for the method, a display name for use in the user interface (UI), and what type of interface instance the method can return to a consumer control.</span></span> <span data-ttu-id="4a5c9-536">这组有关提供程序的信息、其建立连接的方法以及它所提供的接口类型共同构成了一个提供程序连接点。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-536">This set of information about the provider, its method for forming connections, and the type of interface it provides, collectively forms a provider connection point.</span></span>  
  
 <span data-ttu-id="4a5c9-537">默认情况下，一 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 次只能连接到一个 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 对象。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-537">By default, a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> can connect to only one <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object at a time.</span></span> <span data-ttu-id="4a5c9-538">使用者可能会将多个方法标识为可能的使用者连接点，但使用者只能作为使用者参与一个连接 (因此，一次只能有一个使用者连接点) 处于活动状态。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-538">A consumer could have multiple methods identified as possible consumer connection points, but a consumer can only participate in one connection as a consumer (hence, only one of its consumer connection points can be active) at a time.</span></span> <span data-ttu-id="4a5c9-539">与此相反， <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 默认情况下可以连接到任意数量的 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 对象。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-539">In contrast, a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> can connect to any number of <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects by default.</span></span> <span data-ttu-id="4a5c9-540">例如，提供邮政编码的提供者控件可以连接到多个使用者控件，这些控件使用邮政编码创建各种类型的数据（如天气数据、新闻等）。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-540">For example, a provider control that provides a postal code could be connected to multiple consumer controls that use a postal code to create various kinds of data based on a postal code, such as weather data, news, and so on.</span></span> <span data-ttu-id="4a5c9-541">可以通过重写属性上的属性来更改此默认行为 <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-541">This default behavior can be changed by overriding the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A> property on the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a5c9-542">下面的代码示例演示如何以编程方式使用 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-542">The following code example demonstrates the programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property.</span></span>  
  
 <span data-ttu-id="4a5c9-543">该示例包含四个部分：</span><span class="sxs-lookup"><span data-stu-id="4a5c9-543">The example has four parts:</span></span>  
  
-   <span data-ttu-id="4a5c9-544">允许您在页上更改 Web 部件显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-544">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="4a5c9-545">接口的源代码和两个用作 <xref:System.Web.UI.WebControls.WebParts.WebPart> 连接的提供者和使用者的控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-545">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="4a5c9-546">承载所有控件并运行代码示例的网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-546">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="4a5c9-547">有关如何运行 "示例" 页的说明。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-547">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="4a5c9-548">此代码示例的第一部分是用户控件，该控件使用户能够更改网页上的显示模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-548">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="4a5c9-549">将以下源代码保存到 .ascx 文件，并为其提供分配给 `Src` 此用户控件的指令属性的文件名，该属性 `Register` 位于宿主网页的顶部附近。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-549">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="4a5c9-550">有关显示模式的详细信息以及此控件中源代码的说明，请参阅 [演练：在 Web 部件页上更改显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-550">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderConnectionPoint#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderConnectionPoint#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="4a5c9-551">此代码示例的第二部分是 <xref:System.Web.UI.WebControls.WebParts.WebPart> 作为使用者和连接的提供程序的两个控件的源代码，以及用于连接点的接口。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-551">The second part of the code example is the source code for the two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that serve as the consumer and the provider for the connection, and an interface used for the connection points.</span></span> <span data-ttu-id="4a5c9-552">要使代码示例运行，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-552">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="4a5c9-553">可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-553">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="4a5c9-554">或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-554">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="4a5c9-555">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-555">This code example uses dynamic compilation.</span></span> <span data-ttu-id="4a5c9-556">有关演示如何编译的演练，请参阅 [演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-556">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ProviderConnectionPoint#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ProviderConnectionPoint#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="4a5c9-557">此代码示例的第三部分是承载控件的网页的代码，并演示属性的用法 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-557">The third part of the code example is the code for the Web page that hosts the controls and demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property.</span></span> <span data-ttu-id="4a5c9-558">在 `Button1_Click` 方法中，创建建立连接所需的所有对象（包括 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 对象）。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-558">In the `Button1_Click` method, all the objects required to form a connection are created, including a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object.</span></span> <span data-ttu-id="4a5c9-559">请注意 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> 控件上对方法的调用 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-559">Note the call to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span> <span data-ttu-id="4a5c9-560">所有创建的对象都传递到 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> 方法以创建连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-560">The various created objects are all passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method to create the connection.</span></span> <span data-ttu-id="4a5c9-561">在 `Button2_Click` 方法中，代码访问 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> 属性，并显示连接点的一些详细信息。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-561">In the `Button2_Click` method, the code accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property and displays some details of the connection point.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderConnectionPoint#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderConnectionPoint#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="4a5c9-562">在浏览器中加载页面后，请使用 " **显示模式** " 下拉列表控件将页面切换到连接模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-562">After you load the page in a browser, use the **Display Mode** drop-down list control to switch the page to connect mode.</span></span> <span data-ttu-id="4a5c9-563">单击谓词菜单 (由标题栏中的向下箭头表示) 一个 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件上，然后单击 "连接" 谓词。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-563">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="4a5c9-564">使用 " **连接" WebPart 控件** 按钮或提供的连接 UI 在两个控件之间创建连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-564">Use the **Connect WebPart Controls** button, or the provided connection UI, to create a connection between the two controls.</span></span> <span data-ttu-id="4a5c9-565">单击 " **器详细信息** " 按钮以运行演示属性的代码 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-565">Click the **ConnectionPoint Details** button to run the code that demonstrates the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="4a5c9-566">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="4a5c9-566">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ProviderConnectionPointID">
      <MemberSignature Language="C#" Value="public string ProviderConnectionPointID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderConnectionPointID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderConnectionPointID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderConnectionPointID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderConnectionPointID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("default")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("default")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a5c9-567">获取或设置连接上的属性值，该值引用作为该连接的提供者连接点的对象的 ID。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-567">Gets or sets the property value on a connection that references the ID of the object serving as the provider connection point for that connection.</span></span></summary>
        <value><span data-ttu-id="4a5c9-568">包含提供者连接点对象的 ID 的字符串。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-568">A string that contains the ID for a provider connection point object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a5c9-569">对于在网页的标记中声明的静态连接，开发人员可以通过为元素的特性指定值来指定将用于连接的提供程序连接点 `ProviderConnectionPointID` `<asp:webpartconnection>` 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-569">For a static connection declared in the markup of a Web page, developers can specify which provider connection point will be used for the connection by assigning a value to the `ProviderConnectionPointID` attribute on the `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="4a5c9-570">如果未将值分配给属性，则 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> 使用属性值。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-570">If a value is not assigned to the attribute, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> property value is used.</span></span>  
  
 <span data-ttu-id="4a5c9-571">) 连接创建动态 (编程时，通常不应设置属性的值 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-571">When you create dynamic (programmatic) connections, normally you should not set the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property.</span></span> <span data-ttu-id="4a5c9-572">您可以只调用 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> 控件上的方法 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> ，将提供程序和提供程序连接点对象与) 的其他必需参数一起 (，并且该方法确定要用于提供程序的连接点的正确 ID。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-572">You can simply call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, passing to it the provider and provider connection point objects (along with the other required parameters), and that method determines the correct ID to use for the provider's connection point.</span></span> <span data-ttu-id="4a5c9-573">同样，在断开连接时，可以调用 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> 方法，而无需指定 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> 属性值。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-573">Similarly, when you disconnect, you can call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method without needing to specify the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a5c9-574">当您将 <xref:System.Web.UI.WebControls.WebParts.WebPart> 或其他服务器控件指定为提供程序时，可以确定提供程序的连接点的 ID。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-574">The ID of a provider's connection point can be determined when you designate a <xref:System.Web.UI.WebControls.WebParts.WebPart> or other server control as a provider.</span></span> <span data-ttu-id="4a5c9-575">必须标识提供程序中的回调方法，该方法为包含使用者的数据的接口的实例提供服务。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-575">You must identify a callback method in the provider that serves an instance of an interface containing data to a consumer.</span></span> <span data-ttu-id="4a5c9-576">若要标识该方法，请用 `ConnectionProvider` code 特性标记它。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-576">To identify the method, mark it with the `ConnectionProvider` code attribute.</span></span> <span data-ttu-id="4a5c9-577">添加此属性时，可以添加一个可选的字符串值参数，该参数作为提供者对象的 ID <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-577">When you add this attribute, you can add an optional string value parameter that serves as an ID for the provider's <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object.</span></span> <span data-ttu-id="4a5c9-578">如果为可选 ID 参数提供一个值，该值将成为连接的属性的值 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-578">If you supply a value for the optional ID parameter, that value becomes the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property for the connection.</span></span> <span data-ttu-id="4a5c9-579">如果未提供 ID 值，则在 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 创建对象时，控件将分配默认 id。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-579">If you do not supply an ID value, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control assigns a default ID when the object is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a5c9-580">下面的代码示例演示了属性的声明性和编程使用 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-580">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property.</span></span>  
  
 <span data-ttu-id="4a5c9-581">该示例包含四个部分：</span><span class="sxs-lookup"><span data-stu-id="4a5c9-581">The example has four parts:</span></span>  
  
-   <span data-ttu-id="4a5c9-582">允许您在页上更改 Web 部件显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-582">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="4a5c9-583">接口的源代码和两个用作 <xref:System.Web.UI.WebControls.WebParts.WebPart> 连接的提供者和使用者的控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-583">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="4a5c9-584">承载所有控件并运行代码示例的网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-584">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="4a5c9-585">有关如何运行 "示例" 页的说明。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-585">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="4a5c9-586">此代码示例的第一部分是用户控件，该控件使用户能够更改网页上的显示模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-586">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="4a5c9-587">将以下源代码保存到 .ascx 文件，并为其提供分配给 `Src` 此用户控件的指令属性的文件名，该属性 `Register` 位于宿主网页的顶部附近。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-587">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="4a5c9-588">有关显示模式的详细信息以及此控件中源代码的说明，请参阅 [演练：在 Web 部件页上更改显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-588">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderConnectionPointID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderConnectionPointID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="4a5c9-589">此代码示例的第二部分是接口的源代码和使用者控件和提供者控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-589">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="4a5c9-590">要使代码示例运行，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-590">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="4a5c9-591">可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-591">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="4a5c9-592">或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-592">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="4a5c9-593">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-593">This code example uses dynamic compilation.</span></span> <span data-ttu-id="4a5c9-594">有关演示如何编译的演练，请参阅 [演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-594">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ProviderConnectionPointID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ProviderConnectionPointID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="4a5c9-595">此代码示例的第三部分是网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-595">The third part of the code example is the Web page.</span></span> <span data-ttu-id="4a5c9-596">请注意，使用和元素在页标记中声明连接 `<StaticConnections>` `<asp:WebPartsConnection>` 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-596">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="4a5c9-597">连接声明包括必需的 `ProviderConnectionPointID` 属性。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-597">The connection declaration includes the required `ProviderConnectionPointID` attribute.</span></span> <span data-ttu-id="4a5c9-598">用于创建连接的另一种方法将在方法中显示， `Button1_Click` 其中，代码使用连接点 (，并在提供程序控件中定义) ID。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-598">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point (and the ID) defined in the provider control.</span></span> <span data-ttu-id="4a5c9-599">然后，在 `Button2_Click` 方法中，代码访问 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-599">Then, in the `Button2_Click` method, the code accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderConnectionPointID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderConnectionPointID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="4a5c9-600">在浏览器中加载页面后，连接已存在，因为在页面中声明了静态连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-600">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="4a5c9-601">在提供程序控件中输入一些文本，请注意，由于连接的原因，该文本将显示在使用者中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-601">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="4a5c9-602">接下来，断开控件的连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-602">Next, disconnect the controls.</span></span> <span data-ttu-id="4a5c9-603">使用 " **显示模式** " 下拉列表控件，将页面切换到连接模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-603">Using the **Display Mode** drop-down list control, switch the page to connect mode.</span></span> <span data-ttu-id="4a5c9-604">单击谓词菜单 (由标题栏中的向下箭头表示) 一个 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件上，然后单击 "连接" 谓词。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-604">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="4a5c9-605">单击 " **断开连接** " 按钮。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-605">Click the **Disconnect** button.</span></span> <span data-ttu-id="4a5c9-606">使用 " **连接" Web 部件控件** 按钮可以重新创建两个控件之间的连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-606">Use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="4a5c9-607">单击 " **器详细信息** " 按钮以运行访问 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> 属性值的代码。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-607">Click the **ConnectionPoint Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property value.</span></span> <span data-ttu-id="4a5c9-608">值写出在控件下方的标签中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-608">The value is written out in a label below the controls.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="4a5c9-609">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="4a5c9-609">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ProviderID">
      <MemberSignature Language="C#" Value="public string ProviderID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a5c9-610">获取或设置连接上的属性值，该值引用作为该连接的提供者的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的 ID。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-610">Gets or sets the property value on a connection that references the ID of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control acting as a provider for that connection.</span></span></summary>
        <value><span data-ttu-id="4a5c9-611">包含提供者控件的 ID 的字符串。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-611">A string that contains the ID of the provider control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a5c9-612"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A>创建两个控件之间的连接时，属性值是必需的 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-612">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property value is required when you create a connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="4a5c9-613">如果未将值分配给属性，则当 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 控件尝试激活连接时将引发异常。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-613">If a value is not assigned to the property, an exception is thrown when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control attempts to activate the connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a5c9-614">下面的代码示例演示了属性的声明性和编程使用 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-614">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property.</span></span>  
  
 <span data-ttu-id="4a5c9-615">该示例包含四个部分：</span><span class="sxs-lookup"><span data-stu-id="4a5c9-615">The example has four parts:</span></span>  
  
-   <span data-ttu-id="4a5c9-616">允许您在页上更改 Web 部件显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-616">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="4a5c9-617">接口的源代码和两个用作 <xref:System.Web.UI.WebControls.WebParts.WebPart> 连接的提供者和使用者的控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-617">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="4a5c9-618">承载所有控件并运行代码示例的网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-618">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="4a5c9-619">有关如何运行 "示例" 页的说明。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-619">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="4a5c9-620">此代码示例的第一部分是用户控件，该控件使用户能够更改网页上的显示模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-620">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="4a5c9-621">将以下源代码保存到 .ascx 文件，并为其提供分配给 `Src` 此用户控件的指令属性的文件名，该属性 `Register` 位于宿主网页的顶部附近。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-621">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="4a5c9-622">有关显示模式的详细信息以及此控件中源代码的说明，请参阅 [演练：在 Web 部件页上更改显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-622">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="4a5c9-623">此代码示例的第二部分是接口的源代码和使用者控件和提供者控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-623">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="4a5c9-624">要使代码示例运行，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-624">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="4a5c9-625">可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-625">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="4a5c9-626">或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-626">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="4a5c9-627">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-627">This code example uses dynamic compilation.</span></span> <span data-ttu-id="4a5c9-628">有关演示如何编译的演练，请参阅 [演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-628">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ProviderID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ProviderID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="4a5c9-629">此代码示例的第三部分是网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-629">The third part of the code example is the Web page.</span></span> <span data-ttu-id="4a5c9-630">请注意，使用和元素在页标记中声明连接 `<StaticConnections>` `<asp:WebPartsConnection>` 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-630">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="4a5c9-631">连接声明包括必需的 `ProviderID` 属性。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-631">The connection declaration includes the required `ProviderID` attribute.</span></span> <span data-ttu-id="4a5c9-632">用于创建连接的另一种方法将在方法中显示， `Button1_Click` 其中，代码使用使用者控件中定义的连接点创建新连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-632">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point defined in the consumer control.</span></span> <span data-ttu-id="4a5c9-633">然后，在 `Button2_Click` 方法中，代码将访问属性的值 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> ，并将其显示在标签中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-633">Then, in the `Button2_Click` method, the code accesses the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property and displays it in a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="4a5c9-634">在浏览器中加载页面后，连接已存在，因为在页面中声明了静态连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-634">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="4a5c9-635">在提供程序控件中输入一些文本，请注意，由于连接的原因，该文本将显示在使用者中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-635">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="4a5c9-636">接下来，断开控件的连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-636">Next, disconnect the controls.</span></span> <span data-ttu-id="4a5c9-637">为此，请使用 " **显示模式** " 下拉列表控件将页面切换到连接模式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-637">To do that, use the **Display Mode** drop-down list control to switch the page to connect mode.</span></span> <span data-ttu-id="4a5c9-638">单击谓词菜单 (由标题栏中的向下箭头表示) 一个 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件上，然后单击 "连接" 谓词。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-638">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="4a5c9-639">单击 " **断开连接** " 按钮，控件将断开连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-639">Click the **Disconnect** button, and the controls are disconnected.</span></span> <span data-ttu-id="4a5c9-640">接下来，使用 " **连接" WebPart 控件** 按钮重新创建两个控件之间的连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-640">Next, use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="4a5c9-641">单击 " **使用者详细信息** " 按钮以运行访问 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> 属性值的代码。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-641">Click the **Consumer Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="4a5c9-642">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="4a5c9-642">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="webPartConnection.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a5c9-643">重写继承的 <see cref="M:System.Object.ToString" /> 方法，并返回连接对象的类型的简称。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-643">Overrides the inherited <see cref="M:System.Object.ToString" /> method and returns a short type name for the connection object.</span></span></summary>
        <returns><span data-ttu-id="4a5c9-644">一个字符串，包含 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> 的类型简称（非限定名称）。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-644">A string that contains the short (unqualified) type name of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a5c9-645">此方法主要用于控件设计器的便利。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-645">This method is used mostly for convenience by control designers.</span></span> <span data-ttu-id="4a5c9-646">它通过使用较短的类型名称（而不是完全限定的类型名称）来改善连接对象在设计视图中的显示方式。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-646">It improves how connection objects appear in Design view by using the shorter type name, as opposed to a fully qualified type name.</span></span> <span data-ttu-id="4a5c9-647">但是，在你想要了解连接对象的类型名称的代码中的任何位置，都可以调用方法。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-647">However, the method can be called at any point in your code where you want to know the type name of a connection object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a5c9-648">下面的代码示例演示如何调用 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A> 方法以返回对象的短类型名称 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-648">The following code example demonstrates how to call the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A> method to return the short type name of a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span>  
  
 <span data-ttu-id="4a5c9-649">此代码示例包含三个部分：</span><span class="sxs-lookup"><span data-stu-id="4a5c9-649">The code example has three parts:</span></span>  
  
-   <span data-ttu-id="4a5c9-650">接口的源代码和两个用作 <xref:System.Web.UI.WebControls.WebParts.WebPart> 连接的提供者和使用者的控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-650">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="4a5c9-651">承载控件并运行代码示例的网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-651">A Web page to host the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="4a5c9-652">有关如何运行 "示例" 页的说明。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-652">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="4a5c9-653">此代码示例的第一部分是接口的源代码和使用者控件和提供者控件。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-653">The first part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="4a5c9-654">要使代码示例运行，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-654">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="4a5c9-655">可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-655">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="4a5c9-656">或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-656">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="4a5c9-657">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-657">This code example uses dynamic compilation.</span></span> <span data-ttu-id="4a5c9-658">有关演示如何编译的演练，请参阅 [演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-658">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ToString#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ToString/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ToString#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ToString/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="4a5c9-659">此代码示例的第二部分是网页。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-659">The second part of the code example is the Web page.</span></span> <span data-ttu-id="4a5c9-660">顶部附近是一个 `Register` 指令，该指令引用两个动态编译的控件的源代码 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-660">Near the top is a `Register` directive that refers to the source code for the two dynamically compiled <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="4a5c9-661">静态连接在 `<StaticConnections>` 页面上的元素中声明。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-661">The static connection is declared within the `<StaticConnections>` element on the page.</span></span> <span data-ttu-id="4a5c9-662">`Button1_Click`方法调用 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A> 方法来写入标签的连接的类型名称。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-662">The `Button1_Click` method calls the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A> method to write the type name of the connection to a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ToString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ToString/CS/wpConnectToStringCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ToString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ToString/VB/wpConnectToStringVB.aspx#1)]  
  
 <span data-ttu-id="4a5c9-663">在浏览器中加载页面。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-663">Load the page in a browser.</span></span> <span data-ttu-id="4a5c9-664">已创建静态连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-664">The static connection is already created.</span></span> <span data-ttu-id="4a5c9-665">在提供程序控件中输入一些文本，并注意该文本显示在使用者控件中。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-665">Enter some text in the provider control, and note that the text is displayed in the consumer control.</span></span> <span data-ttu-id="4a5c9-666">单击 " **连接详细信息** " 按钮以执行 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-666">Click the **Connection Details** button to execute the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Transformer">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartTransformer Transformer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartTransformer Transformer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transformer As WebPartTransformer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartTransformer ^ Transformer { System::Web::UI::WebControls::WebParts::WebPartTransformer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transformer : System.Web.UI.WebControls.WebParts.WebPartTransformer" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartTransformer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a5c9-667">获取一个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> 对象，用于在 Web 部件连接中两个不兼容的连接点之间转换数据。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-667">Gets a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> object that is used to transform data between two otherwise incompatible connection points in a Web Parts connection.</span></span></summary>
        <value><span data-ttu-id="4a5c9-668"><see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-668">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />.</span></span> <span data-ttu-id="4a5c9-669">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-669">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a5c9-670">在 Web 部件连接中，连接中的提供者和使用者控件可以通过两种方式连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-670">In a Web Parts connection, there are two ways in which the provider and consumer controls in the connection can connect.</span></span> <span data-ttu-id="4a5c9-671">它们可以通过其各自的 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 对象和两个控件都理解的接口类型来直接连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-671">They can connect directly, through their respective <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objects and an interface type that is understood by both controls.</span></span> <span data-ttu-id="4a5c9-672">或者，如果它们不兼容，则它们可以使用 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 对象（该对象可将接口实例从提供程序转换为使用者识别的类型）间接连接。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-672">Or, if they are incompatible, they can connect indirectly, using a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object that transforms an interface instance from a provider into a type understood by a consumer.</span></span>  
  
 <span data-ttu-id="4a5c9-673">当需要转换器作为连接的一部分时， <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer%2A> 属性提供对对象的引用 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-673">When a transformer is needed as part of a connection, the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer%2A> property provides a reference to the <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object.</span></span> <span data-ttu-id="4a5c9-674">可以通过为自定义转换器添加标记来在网页的标记中以声明方式添加连接的转换器， (或在元素内的 Web 部件控件集) 提供的某个转换器 `<asp:WebPartConnection>` 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-674">You can add a transformer for a connection declaratively in the markup of a Web page, by adding a tag for a custom transformer (or one of the transformers provided with the Web Parts control set) within the `<asp:WebPartConnection>` element.</span></span> <span data-ttu-id="4a5c9-675">还可以通过编程方式添加转换器，在代码中创建其实例，并在 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29> 控件上调用方法 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 来创建连接，并向其传递转换器对象和其他所需的参数。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-675">You can also add a transformer programmatically, creating an instance of it in your code, and calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control to create the connection, passing to it the transformer object along with the other required parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="4a5c9-676">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="4a5c9-676">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transformers">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartTransformerCollection Transformers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartTransformerCollection Transformers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transformers As WebPartTransformerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartTransformerCollection ^ Transformers { System::Web::UI::WebControls::WebParts::WebPartTransformerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transformers : System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartTransformerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a5c9-677">获取由 Web 部件控件集内部使用的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-677">Gets a collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects used internally by the Web Parts control set.</span></span></summary>
        <value><span data-ttu-id="4a5c9-678">一个包含 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" /> 对象的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-678">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" /> containing <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a5c9-679"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers%2A>属性绝不会供开发人员使用。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-679">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers%2A> property is never intended for use by developers.</span></span> <span data-ttu-id="4a5c9-680">若要访问与连接关联的转换器，开发人员应始终使用 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-680">To access the transformer associated with a connection, developers should always use the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer%2A> property.</span></span>  
  
 <span data-ttu-id="4a5c9-681"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers%2A>属性由 Web 部件控件集在内部使用，以使页面开发人员能够在网页标记中的元素内声明转换器元素 `<asp:webpartconnection>` 。</span><span class="sxs-lookup"><span data-stu-id="4a5c9-681">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers%2A> property is used internally by the Web Parts control set to enable page developers to declare transformer elements within the `<asp:webpartconnection>` element in the markup of a Web page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="4a5c9-682">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="4a5c9-682">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
