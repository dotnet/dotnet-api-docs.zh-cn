<Type Name="IWebPartTable" FullName="System.Web.UI.WebControls.WebParts.IWebPartTable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f9162460bfa31b38311f9eccb017b952a67a78d6" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69395170" /></Metadata><TypeSignature Language="C#" Value="public interface IWebPartTable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPartTable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPartTable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPartTable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPartTable" />
  <TypeSignature Language="F#" Value="type IWebPartTable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="86f45-101">使用整个数据表定义一个用于连接两个服务器控件的提供者接口。</span><span class="sxs-lookup"><span data-stu-id="86f45-101">Defines a provider interface for connecting two server controls using an entire table of data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f45-102">此接口设计为与 Web 部件连接一起使用。</span><span class="sxs-lookup"><span data-stu-id="86f45-102">This interface is designed to be used with Web Parts connections.</span></span> <span data-ttu-id="86f45-103">在 Web 部件连接中，位于区域中的两个服务器控件 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 建立连接并共享数据，其中一个控件充当使用者，另一个控件充当提供者。</span><span class="sxs-lookup"><span data-stu-id="86f45-103">In a Web Parts connection, two server controls that reside in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone establish a connection and share data, with one control acting as the consumer and the other control acting as a provider.</span></span> <span data-ttu-id="86f45-104">在 Web 部件连接中共享数据的机制是接口实例，提供程序通过回调方法向使用者提供服务。</span><span class="sxs-lookup"><span data-stu-id="86f45-104">The mechanism for sharing data in a Web Parts connection is an interface instance, which the provider serves to the consumer by means of a callback method.</span></span> <span data-ttu-id="86f45-105">若要建立连接，使用者和提供程序都必须使用相同的接口类型来共享数据。</span><span class="sxs-lookup"><span data-stu-id="86f45-105">To establish a connection, the consumer and provider must both work with the same interface type for sharing data.</span></span> <span data-ttu-id="86f45-106">如果使用者不能识别提供程序发送的接口类型，仍可以通过转换器（对象）连接控件，将 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 访问接口实例发送到使用者识别的类型。</span><span class="sxs-lookup"><span data-stu-id="86f45-106">If the consumer does not recognize the interface type sent by the provider, it is still possible to connect the controls by means of a transformer (a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object) that translates the interface instance sent by the provider into a type that the consumer recognizes.</span></span> <span data-ttu-id="86f45-107">有关连接的详细信息，请参阅 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 和[Web 部件连接概述](https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="86f45-107">For details on connections, see <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> and [Web Parts Connections Overview](https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)).</span></span>  
  
 <span data-ttu-id="86f45-108"><xref:System.Web.UI.WebControls.WebParts.IWebPartTable>接口是包含在 Web 部件控件集的提供程序接口，它是用于基于数据表创建连接的标准接口。</span><span class="sxs-lookup"><span data-stu-id="86f45-108">The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface is a provider interface included with the Web Parts control set as a standard interface for creating connections based on a data table.</span></span> <span data-ttu-id="86f45-109">你还可以创建自定义接口以用于 Web 部件连接，但在许多数据驱动的 Web 应用程序中，基于公共字段创建连接（有关详细信息，请参阅 <xref:System.Web.UI.WebControls.WebParts.IWebPartField> 接口）、行（有关详细信息、查看 <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> 接口）或数据源中的表很有用。</span><span class="sxs-lookup"><span data-stu-id="86f45-109">You can also create custom interfaces to use with Web Parts connections, but in many data-driven Web applications, it is useful to create connections based on a common field (for details, see the <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface), row (for details, see the <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interface), or table from the data source.</span></span> <span data-ttu-id="86f45-110">在典型连接中， <xref:System.Web.UI.WebControls.WebParts.WebPart> 作为提供者的控件将实现 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 接口，并向使用者提供一个特殊的回调方法的接口实例。</span><span class="sxs-lookup"><span data-stu-id="86f45-110">In a typical connection, a <xref:System.Web.UI.WebControls.WebParts.WebPart> control acting as a provider would implement the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface and provide an instance of the interface to consumers in a special callback method.</span></span> <span data-ttu-id="86f45-111">例如，提供程序可能会 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 为包含财务绩效数据的表实现接口。</span><span class="sxs-lookup"><span data-stu-id="86f45-111">For example, the provider might implement an <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface for a table that contains financial performance data.</span></span> <span data-ttu-id="86f45-112"><xref:System.Web.UI.WebControls.WebParts.WebPart>作为使用者的另一个控件将定义接收接口实例的特殊方法，然后可以提取数据并呈现图表以显示生成的信息。</span><span class="sxs-lookup"><span data-stu-id="86f45-112">Another <xref:System.Web.UI.WebControls.WebParts.WebPart> control acting as a consumer would define a special method to receive the interface instance, and could then extract the data and render a chart to display the resulting information.</span></span>  
  
 <span data-ttu-id="86f45-113"><xref:System.Web.UI.WebControls.WebParts.IWebPartTable>接口有两个公开的成员。</span><span class="sxs-lookup"><span data-stu-id="86f45-113">The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface has two exposed members.</span></span> <span data-ttu-id="86f45-114"><xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A>属性返回有关封装在对象中的数据表的架构信息 <xref:System.ComponentModel.PropertyDescriptorCollection> 。</span><span class="sxs-lookup"><span data-stu-id="86f45-114">The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property returns schema information about the data table encapsulated in a <xref:System.ComponentModel.PropertyDescriptorCollection> object.</span></span> <span data-ttu-id="86f45-115">此 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> 方法声明一个方法，当调用回调方法时，实现程序（如提供程序控件）使用该方法检索接口实例的表数据。</span><span class="sxs-lookup"><span data-stu-id="86f45-115">The <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> method declares a method that an implementer (such as a provider control) uses to retrieve the interface instance's table data when the callback method is invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86f45-116">下面的代码示例演示如何使用接口在两个控件之间创建静态连接 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 。</span><span class="sxs-lookup"><span data-stu-id="86f45-116">The following code example demonstrates how to create a static connection between two controls using the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface.</span></span> <span data-ttu-id="86f45-117">此代码示例包含三个部分：</span><span class="sxs-lookup"><span data-stu-id="86f45-117">The code example has three parts:</span></span>  
  
-   <span data-ttu-id="86f45-118"><xref:System.Web.UI.WebControls.WebParts.WebPart>可使用接口形成连接的两个自定义控件的源代码 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> ，其中一个控件充当提供程序，另一个控件充当使用者。</span><span class="sxs-lookup"><span data-stu-id="86f45-118">Source code for two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can form a connection using the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface, with one control acting as the provider and the other acting as the consumer.</span></span>  
  
-   <span data-ttu-id="86f45-119">承载控件并以持久性格式声明静态连接的网页。</span><span class="sxs-lookup"><span data-stu-id="86f45-119">A Web page that hosts the controls and declares the static connection in persistence format.</span></span>  
  
-   <span data-ttu-id="86f45-120">示例代码运行时所发生的情况的说明。</span><span class="sxs-lookup"><span data-stu-id="86f45-120">A description of what happens when the example code runs.</span></span>  
  
 <span data-ttu-id="86f45-121">此代码示例的第一部分是两个自定义控件的源代码。</span><span class="sxs-lookup"><span data-stu-id="86f45-121">The first part of the code example is the source code for the two custom controls.</span></span> <span data-ttu-id="86f45-122">首先是实现接口的提供程序的代码 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 。</span><span class="sxs-lookup"><span data-stu-id="86f45-122">First is the code for the provider, which implements the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface.</span></span> <span data-ttu-id="86f45-123">为简单起见，在本示例中，提供程序创建了包含一些数据的表，而不是连接到数据库。</span><span class="sxs-lookup"><span data-stu-id="86f45-123">For simplicity in the example, the provider creates a table with some data rather than connecting to a database.</span></span> <span data-ttu-id="86f45-124">`GetConnectionInterface`方法用作提供程序的连接点，后者是将接口实例返回给使用者的回调方法。</span><span class="sxs-lookup"><span data-stu-id="86f45-124">The `GetConnectionInterface` method serves as the provider's connection point, the callback method that returns the interface instance to the consumer.</span></span> <span data-ttu-id="86f45-125">对于使用者，它会在名为的方法中从提供程序中检索接口实例 `SetConnectionInterface` ，该实例使用 `ConnectionConsumer` 特性进行标记。</span><span class="sxs-lookup"><span data-stu-id="86f45-125">As for the consumer, it retrieves the interface instance from the provider in its method named `SetConnectionInterface`, which is marked with a `ConnectionConsumer` attribute.</span></span> <span data-ttu-id="86f45-126">检索接口的实例后，使用者在其 `OnPreRender` 方法中调用 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> 提供程序中方法的实现，以检索实际数据并将其写入页面。</span><span class="sxs-lookup"><span data-stu-id="86f45-126">After retrieving the instance of the interface, the consumer, in its `OnPreRender` method, calls the implementation of the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> method in the provider, to retrieve the actual data and write it to the page.</span></span>  
  
 <span data-ttu-id="86f45-127">要使代码示例运行，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="86f45-127">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="86f45-128">可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="86f45-128">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="86f45-129">或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。</span><span class="sxs-lookup"><span data-stu-id="86f45-129">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="86f45-130">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="86f45-130">This code example uses dynamic compilation.</span></span> <span data-ttu-id="86f45-131">有关演示如何编译的演练，请参阅[演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="86f45-131">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 <span data-ttu-id="86f45-132">此代码示例的第二部分是声明静态连接并承载控件的网页。</span><span class="sxs-lookup"><span data-stu-id="86f45-132">The second part of the code example is the Web page that declares the static connection and hosts the controls.</span></span> <span data-ttu-id="86f45-133">页面顶部附近是 `Register` 声明 App_Code 目录中包含的源代码的命名空间的指令。</span><span class="sxs-lookup"><span data-stu-id="86f45-133">Near the top of the page is a `Register` directive that declares the namespace of the source code contained in the App_Code directory.</span></span> <span data-ttu-id="86f45-134">使用元素声明连接 `<asp:webpartconnection>` 。</span><span class="sxs-lookup"><span data-stu-id="86f45-134">The connection is declared using an `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="86f45-135">自定义使用者和提供程序控件是在元素内的元素中声明的，在元素中 `<zonetemplate>` `<asp:webpartzone>` ，这是必需的，它们必须位于继承自类的区域内 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 。</span><span class="sxs-lookup"><span data-stu-id="86f45-135">The custom consumer and provider controls are declared in a `<zonetemplate>` element within an `<asp:webpartzone>` element, which is required for them to be able to connect (they must reside within a zone that inherits from the <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> class).</span></span>  
  
 [!code-aspx-csharp[WebParts_IWebPartRow_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPartRow_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/VB/defaultvb.aspx#1)]  
  
 <span data-ttu-id="86f45-136">在浏览器中加载页面。</span><span class="sxs-lookup"><span data-stu-id="86f45-136">Load the page in a browser.</span></span> <span data-ttu-id="86f45-137">使用者控件显示从指定的表提供的数据，提供程序通过接口的实例提供该数据 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 。</span><span class="sxs-lookup"><span data-stu-id="86f45-137">The consumer control displays the data provided from the specified table, which the provider makes available through an instance of the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartField" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartRow" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="86f45-138">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="86f45-138">ASP.NET Web Parts Controls</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)"><span data-ttu-id="86f45-139">Web 部件连接概述</span><span class="sxs-lookup"><span data-stu-id="86f45-139">Web Parts Connections Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="GetTableData">
      <MemberSignature Language="C#" Value="public void GetTableData (System.Web.UI.WebControls.WebParts.TableCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTableData(class System.Web.UI.WebControls.WebParts.TableCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(System.Web.UI.WebControls.WebParts.TableCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTableData (callback As TableCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTableData(System::Web::UI::WebControls::WebParts::TableCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member GetTableData : System.Web.UI.WebControls.WebParts.TableCallback -&gt; unit" Usage="iWebPartTable.GetTableData callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.UI.WebControls.WebParts.TableCallback" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="86f45-140">一个 <see cref="T:System.Web.UI.WebControls.WebParts.TableCallback" /> 委托，包含接收数据的方法的地址。</span><span class="sxs-lookup"><span data-stu-id="86f45-140">A <see cref="T:System.Web.UI.WebControls.WebParts.TableCallback" /> delegate that contains the address of a method that receives the data.</span></span></param>
        <summary><span data-ttu-id="86f45-141">返回表的数据，该表正由接口用作两个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件之间的连接基础。</span><span class="sxs-lookup"><span data-stu-id="86f45-141">Returns the data for the table that is being used by the interface as the basis of a connection between two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f45-142">使用此方法可检索接口传递的数据表值。</span><span class="sxs-lookup"><span data-stu-id="86f45-142">Use this method to retrieve the data table values passed by the interface.</span></span> <span data-ttu-id="86f45-143">提供程序实现此方法，当使用者准备处理或呈现数据时，使用者会在该点调用它。</span><span class="sxs-lookup"><span data-stu-id="86f45-143">The provider implements this method, and the consumer invokes it at the point when the consumer is ready to process or render data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86f45-144">下面的代码示例演示方法的实现和使用 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> 。</span><span class="sxs-lookup"><span data-stu-id="86f45-144">The following code example shows the implementation and use of the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> method.</span></span> <span data-ttu-id="86f45-145">完整的示例显示在接口的类概述中 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 。</span><span class="sxs-lookup"><span data-stu-id="86f45-145">The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface.</span></span> <span data-ttu-id="86f45-146">提供程序控件实现 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> 方法，并返回指定表中的数据。</span><span class="sxs-lookup"><span data-stu-id="86f45-146">The provider control implements the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> method, returning the data in the specified table.</span></span> <span data-ttu-id="86f45-147">使用者控件 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> 在其方法中调用方法 `OnPreRender` ，以便可以将数据的值写入页面。</span><span class="sxs-lookup"><span data-stu-id="86f45-147">The consumer control calls the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> method in its `OnPreRender` method, so that the value of the data can be written to the page.</span></span>  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection Schema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptorCollection ^ Schema { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schema : System.ComponentModel.PropertyDescriptorCollection" Usage="System.Web.UI.WebControls.WebParts.IWebPartTable.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86f45-148">获取用于在两个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件之间共享数据的数据表的架构信息。</span><span class="sxs-lookup"><span data-stu-id="86f45-148">Gets the schema information for a data table that is used to share data between two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</span></span></summary>
        <value><span data-ttu-id="86f45-149">描述数据的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="86f45-149">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> describing the data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86f45-150">此属性提供有关实例中的数据的属性信息 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 。</span><span class="sxs-lookup"><span data-stu-id="86f45-150">This property provides property information on the data in an <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> instance.</span></span> <span data-ttu-id="86f45-151">属性所引用的架构 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> 和表中的数据之间存在隐式协定。</span><span class="sxs-lookup"><span data-stu-id="86f45-151">There is an implicit contract between the schema referenced by the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property and the data in the table.</span></span> <span data-ttu-id="86f45-152">协定是，对于属性中的每个 <xref:System.ComponentModel.PropertyDescriptor> 对象 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> ，您可以对 <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> 表数据的元素调用以获取表的列或行中的值。</span><span class="sxs-lookup"><span data-stu-id="86f45-152">The contract is that for each <xref:System.ComponentModel.PropertyDescriptor> object in the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property, you can call <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> on an element of the table data to get the value in a column or a row of the table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86f45-153">下面的代码示例演示如何实现和使用 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="86f45-153">The following code example shows the implementation and use of the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property.</span></span> <span data-ttu-id="86f45-154">完整的示例显示在接口的类概述中 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 。</span><span class="sxs-lookup"><span data-stu-id="86f45-154">The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface.</span></span> <span data-ttu-id="86f45-155">提供程序控件实现 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="86f45-155">The provider control implements the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property.</span></span> <span data-ttu-id="86f45-156">然后，使用者控件在其 `RenderContents` 方法中查询 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> 属性，以检索有关表的信息，因为它将表数据写入页。</span><span class="sxs-lookup"><span data-stu-id="86f45-156">Then the consumer control, in its `RenderContents` method, queries the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> property to retrieve information about the table as it writes the table data to the page.</span></span>  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
      </Docs>
    </Member>
  </Members>
</Type>
