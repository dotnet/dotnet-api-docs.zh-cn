<Type Name="EditorZoneBase" FullName="System.Web.UI.WebControls.WebParts.EditorZoneBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="597e760a92000ae77444b96c3f30b4876bad63ec" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86628559" /></Metadata><TypeSignature Language="C#" Value="public abstract class EditorZoneBase : System.Web.UI.WebControls.WebParts.ToolZone" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EditorZoneBase extends System.Web.UI.WebControls.WebParts.ToolZone" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EditorZoneBase&#xA;Inherits ToolZone" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditorZoneBase abstract : System::Web::UI::WebControls::WebParts::ToolZone" />
  <TypeSignature Language="F#" Value="type EditorZoneBase = class&#xA;    inherit ToolZone" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.ToolZone</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>用作充当 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件的容器的所有区域控件的基类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类是从类继承的专用区域类，它 <xref:System.Web.UI.WebControls.WebParts.ToolZone> 为包含控件的派生区域提供一组基本行为 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 。 还有其他几 <xref:System.Web.UI.WebControls.WebParts.ToolZone> 类类型; 有关详细信息，请参阅类的概述主题 <xref:System.Web.UI.WebControls.WebParts.ToolZone> 。 与其他工具区域一样， <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 当页处于普通浏览模式时，区域不可见; 只有当页处于编辑显示模式时，才会显示区域。 与其他工具区域一样， <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 区域只能包含它们设计为包含 (在这种情况下，控件) 的特殊类型控件 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 。  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>区域为其所包含的编辑控件提供特殊的 UI。 其中许多 UI 元素都适用于 Web 部件控件集中的所有区域。 有关 Web 部件区域中常见 UI 元素的详细讨论，请参阅类的类概述主题 <xref:System.Web.UI.WebControls.WebParts.WebZone> 。  
  
 由于 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 类是抽象类，因此不能直接在网页上使用它。 相反，你必须使用从类继承的控件 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 并实现其行为。 你可以使用 Web 部件控件集、控件中提供的派生区域， <xref:System.Web.UI.WebControls.WebParts.EditorZone> 也可以派生你自己的自定义 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 控件。  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>类提供一个 (UI) 的公共用户界面，以包含使最终用户能够编辑控件的属性、布局、外观和其他特性的特殊控件 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 应用于 UI 的某些属性引用谓词，如 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> 、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A> 和 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> 属性。 谓词是用户在页上执行的常见操作，由按钮、链接、菜单项或其他元素在 UI 中表示。 例如，当用户在控件上编辑属性时，他们可以单击应用谓词来保存更改。  
  
 多个其他属性会影响在编辑 UI 中的各个点上显示的文本。 其中包括 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A> 、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText%2A> 、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText%2A> 和 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText%2A> 属性。  
  
 两个重要属性提供对相关控件的引用。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>属性是 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 区域中包含的控件的集合。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit%2A>属性是对中包含的控件的对象引用 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> ，其中可能是 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件或任何其他 ASP.NET 服务器控件、用户控件或当前正在编辑的自定义控件。  
  
 最后， <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome%2A> 属性引用 <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> 与区域关联的对象的一个实例，其中包含外围用户界面元素的样式特征 (称为 chrome) 例如区域中控件的标题和边框样式 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 。  
  
 类的许多方法 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 都专用于处理其他控件的编辑。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close%2A>方法将页从编辑显示模式更改回普通浏览视图。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A>方法用于创建 chrome (外围用户界面元素，如边框、动词、图标和在区域中的每个控件周围的标题) <xref:System.Web.UI.WebControls.WebParts.EditorPart> 。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A>方法是抽象方法; 派生类将重写它，以创建 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 区域中包含的所有控件的实例。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A>如果 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 区域中的控件集合因某种编程原因而发生变化，则派生类可以调用方法，这会标记 Web 部件控件集以重新创建和更新控件的集合 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> <xref:System.Web.UI.WebControls.WebParts.EditorPart> `null` 当显示模式从编辑模式更改回浏览模式时，方法用于设置控件的集合。 最后， <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A> 当 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件进入或离开编辑模式时，该方法用于处理事件。 例如，此方法是将控件的属性值 <xref:System.Web.UI.WebControls.WebParts.WebPart> 与关联控件中的可编辑值同步的一个方便的位置 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 。  
  
   
  
## Examples  
 下面的代码示例演示了类的几个声明性和编程使用 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 。 由于类是抽象类，因此代码示例使用 <xref:System.Web.UI.WebControls.WebParts.EditorZone> Web 部件控件集附带的派生类，其中演示了它从类继承的属性和方法 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 。  
  
 此代码示例包含四个部分：  
  
-   使您能够更改网页上的显示模式的用户控件。  
  
-   包含控件的网页 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 。  
  
-   一个自定义 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 类，它演示某些 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 类成员。  
  
-   说明如何在浏览器中工作。  
  
 该用户控件的源代码来自其他主题。 要使此代码示例正常运行，你需要从 [演练：更改 Web 部件页上的显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0) 主题中获取该用户控件的 .ascx 文件，并将该文件放在此代码示例中 .aspx 页面所在的同一文件夹中。  
  
 此代码示例的第二部分是包含对控件的声明性引用的网页 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 。 页面顶部附近是 `Register` 用户控件的指令。 用户控件标记在具有元素的页面中声明 `<uc1:DisplayModeMenu>` 。 请注意，元素下面的元素 `<asp:WebPartZone>` 是 `<asp:EditorZone>` 包含控件的元素 <xref:System.Web.UI.WebControls.WebParts.EditorPart> ，并设置了各种标记和属性来确定其外观和行为。 页面中的大部分代码演示了属性和方法的各种编程使用方式 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 。  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#1)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#1)]  
  
 此代码示例的第三部分是一个自定义 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 类，它演示如何处理多个 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 类成员。 自定义类派生自， <xref:System.Web.UI.WebControls.WebParts.EditorZone> 因此它可以与网页的声明性标记中的区域模板一起使用。 要使代码示例运行，必须编译此源代码。 可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。 此代码示例使用动态编译;因此，你会注意到 `Register` 网页顶部附近的指令未引用程序集文件。 有关演示两种编译方法的演练，请参阅 [演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#12](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#12)]
 [!code-vb[WebParts_EditorZoneBase_Common#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#12)]  
  
 当你在浏览器中加载页面时，可以从下拉列表中选择 " **编辑模式** " 以切换到编辑模式。 您可以单击谓词菜单 (两个控件的标题栏中的向下箭头) ，然后单击 " **编辑** " 以编辑控件。 编辑 UI 可见时，可以看到类成员的各种声明性和编程使用的效果 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>如果要开发用于承载控件的自定义区域 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> ，则必须确定是否要提供区域模板支持。 区域模板由实现接口的类型创建 <see cref="T:System.Web.UI.ITemplate" /> ，如果要使页面开发人员能够使用自定义区域 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 在网页的声明性标记中引用区域中的控件，则这是必需的。 如果需要区域模板支持，应从 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> 类继承。  
  
相反，如果您的自定义区域及其 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件将是独立的，并且它们将以编程方式创建，而页面开发人员无需任何选项即可在区域模板中以声明方式指定控件，则可以直接从 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 类继承。 如果执行此操作，则实现方法非常重要， <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" /> 这样您的自定义区域将起作用。</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebZone" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
    <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">演练：在 Web 部件页上更改显示模式</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EditorZoneBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EditorZoneBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化该类供继承的类实例使用。 此构造函数只能由继承的类调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当由继承的类调用时，此构造函数会将 <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> 对象传递给 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 控件，使页面能够显示编辑用户界面 (UI) 。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="ApplyVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb ApplyVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb ApplyVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ApplyVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ ApplyVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplyVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 对象的引用，该对象使最终用户能够在编辑模式下应用对控件所做的编辑更改。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 允许最终用户应用对控件所做的更改。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 应用谓词由 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> 派生自类的控件的属性引用 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 。 Apply 谓词保存最终用户在编辑用户界面中所做的编辑更改 (UI) 到当前正在编辑的服务器控件。 默认情况下，应用谓词作为控件出现在 UI 中 <xref:System.Web.UI.WebControls.Button> 。 按钮类型可以是图像、链接或实际按钮;您可以通过设置区域级别的继承属性，为区域中的所有谓词按钮 (而不是单个按钮) <xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A> 。  
  
 应用谓词是一个区域级别的控件，这意味着，虽然可能有多个 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 控件，每个控件都在编辑模式下编辑服务器控件的一个或多个属性，所以应用谓词将全局应用于从 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 区域中的所有控件到服务器控件的所有更改。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> 和编程方式访问属性。 有关运行此示例所需的完整代码，请参阅类概述主题的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 。  
  
 此代码示例的第一部分演示如何在网页中以 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> 声明方式访问属性。 此示例自定义谓词的文本。  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 该示例的第二部分演示如何 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> 通过使用切换按钮来启用或禁用属性以编程方式访问属性。  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#4)]
 [!code-vb[WebParts_EditorZoneBase_Common#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#4)]  
  
 当你在浏览器中加载页面时，可以在下拉列表控件中选择 " **编辑模式** " 以切换到编辑模式。 您可以单击谓词菜单 (某个控件的标题栏中的向下箭头) ，然后单击 " **编辑** " 以编辑选定的控件。 当 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 控件和编辑 UI 可见时，可以看到表示 "应用" 谓词的按钮，然后单击 " **切换 ApplyVerb 启用** " 按钮启用或禁用它。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CancelVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CancelVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb CancelVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CancelVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ CancelVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CancelVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 对象的引用，该对象使最终用户能够取消在编辑模式下对控件所做的编辑更改。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 允许最终用户取消对控件所做的编辑更改。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 取消谓词由 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A> 派生自类的控件的属性引用 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 。 取消谓词取消对最终用户在编辑用户界面 (UI) 中的服务器控件所做的编辑更改。 默认情况下，取消谓词作为控件出现在 UI 中 <xref:System.Web.UI.WebControls.Button> 。 按钮类型可以是图像、链接或实际按钮;您可以通过设置区域级别的继承属性，为区域中的所有谓词按钮 (而不是单个按钮) <xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A> 。  
  
 当用户取消编辑更改时，控件中的任何更改 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 都不会应用于正在编辑的服务器控件。 此外，页面仍处于编辑显示模式，但 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 控件将隐藏，并且不再选择所 <xref:System.Web.UI.WebControls.WebParts.WebPart> 编辑的控件。 这样一来，最终用户就可以选择另一个 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件进行编辑，而无需再次更改显示模式。  
  
 取消谓词是一个区域级别的控件，这意味着虽然可能有多个 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 控件，每个控件都在编辑模式下对服务器控件的一个或多个属性进行编辑，所以，cancel 谓词会广泛工作，以取消从区域中的所有控件进行的所有更改 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A> 和编程方式访问属性。 有关运行此示例所需的完整代码，请参阅类概述主题的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 。  
  
 此代码示例的第一部分演示如何在网页中以 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A> 声明方式访问属性。 此示例自定义谓词的文本。  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 该示例的第二部分演示如何 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A> 通过使用切换按钮来启用或禁用属性以编程方式访问属性。  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#5)]
 [!code-vb[WebParts_EditorZoneBase_Common#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#5)]  
  
 当你在浏览器中加载页面时，可以在下拉列表控件中选择 " **编辑模式** " 以切换到编辑模式。 您可以单击谓词菜单 (某个控件的标题栏中的向下箭头) ，然后单击 " **编辑** " 以编辑选定的控件。 当 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 控件和编辑 UI 可见时，可以看到表示取消谓词的按钮，并单击 " **切换 CancelVerb 启用** " 按钮启用或禁用该按钮。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="protected override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="editorZoneBase.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>用户在区域的页眉中单击关闭谓词便可以调用此方法，此方法一经调用，就会结束编辑 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的过程，并使 Web 部件页的显示模式返回到浏览模式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close%2A>方法为类中声明的基方法提供实现 <xref:System.Web.UI.WebControls.WebParts.ToolZone> 。 实现只调用 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> 方法，该方法执行结束编辑过程所需的步骤。  
  
 调用 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close%2A> 方法会将该页返回到浏览模式，并取消对任何控件所做的任何编辑更改 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="editorZoneBase.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建与 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 区域关联的子控件集。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateEditorPartChrome">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.EditorPartChrome CreateEditorPartChrome ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.EditorPartChrome CreateEditorPartChrome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateEditorPartChrome () As EditorPartChrome" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::EditorPartChrome ^ CreateEditorPartChrome();" />
      <MemberSignature Language="F#" Value="abstract member CreateEditorPartChrome : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartChrome&#xA;override this.CreateEditorPartChrome : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartChrome" Usage="editorZoneBase.CreateEditorPartChrome " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartChrome</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取对新的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> 对象的引用，该对象用于呈现 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 区域周围的外围用户界面 (UI) 元素。</summary>
        <returns>为区域呈现外围 UI 元素的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A>方法返回一个新的 <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> 对象。 Chrome 包含以下外围用户界面元素，这些元素环绕 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 区域中的每个单独控件：边框、标题栏、标题栏中显示的项（包括可选图标、标题文本和谓词菜单）以及控件的页脚区中显示的项。  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A>方法使用返回的 <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> 对象围绕每个控件创建镶边 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" />方法可在派生类中重写，以提供不同的实现。 例如，你可以创建一个自定义 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> 类，使你能够更好地控制编辑 UI 的呈现和外观。 如果在 <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" /> 派生区域中重写方法，则可以 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> 在重写的方法中创建自定义对象。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateEditorParts () As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Web::UI::WebControls::WebParts::EditorPartCollection ^ CreateEditorParts();" />
      <MemberSignature Language="F#" Value="abstract member CreateEditorParts : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="editorZoneBase.CreateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>提供一个基方法声明，派生的区域可以重写该声明，以便处理创建 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件的详细信息，这些控件包含在某个区域中。</summary>
        <returns>包含 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 控件集合的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />，这些控件与区域关联。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A>方法不提供实现。 它应在派生类中实现，并且应用于在 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 承载网页进入编辑模式时创建区域中包含的控件集合的实例。 <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A?displayProperty=nameWithType>方法提供方法的实现的一个示例 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="protected override bool Display { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Display" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.Display" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Display As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool Display { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Display : bool" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> 控件当前是否正在显示。</summary>
        <value>如果 <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> 当前正在显示，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ToolZone.Display" />
      </Docs>
    </Member>
    <Member MemberName="EditorPartChrome">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPartChrome EditorPartChrome { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.EditorPartChrome EditorPartChrome" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditorPartChrome As EditorPartChrome" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::EditorPartChrome ^ EditorPartChrome { System::Web::UI::WebControls::WebParts::EditorPartChrome ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditorPartChrome : System.Web.UI.WebControls.WebParts.EditorPartChrome" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartChrome</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> 类的实例的引用，该类与 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 区域关联。</summary>
        <value>对于某个区域中 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> 控件的 chrome 元素，包含其样式属性的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome%2A>属性提供对 <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> 与区域关联的对象的引用。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A>调用方法时，它将创建类的一个实例 <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> ，此实例用于呈现外围用户界面 (UI) 元素 (也称为区域中所有控件的 chrome) <xref:System.Web.UI.WebControls.WebParts.EditorPart> 。  
  
 单个控件的 chrome 元素 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 包括其边框和标题区域中的其他项，例如谓词、图标和标题文本，以及其页脚区域及其包含的元素。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="EditorParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPartCollection EditorParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.EditorPartCollection EditorParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditorParts As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::EditorPartCollection ^ EditorParts { System::Web::UI::WebControls::WebParts::EditorPartCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditorParts : System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 区域中包含的所有 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 控件的集合。</summary>
        <value>包含某个区域中所有单个 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> 控件的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>属性提供对区域中所有控件的集合的引用 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 。 它同时引用 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 随 Web 部件控件集提供的控件以及 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 添加到该区域中的任何自定义控件。 由于该集合是只读的，因此，如果开发人员要创建 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 用于常规编辑的自定义控件，并将其添加到集合中，则应重写 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> 方法。  
  
 如果设计自定义 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 控件以编辑特定 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件，则应 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 在控件中重写接口的成员-- <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> 方法和 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> 属性 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 重写这些成员的原因是使 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件能够 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 在编辑控件时创建自定义控件并将它们添加到 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> 集合中，并向编辑控件提供对 <xref:System.Web.UI.WebControls.WebParts.WebPart> 其正在编辑的控件的对象引用。 如果要添加自定义 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 控件以编辑不是从类继承的服务器控件 <xref:System.Web.UI.WebControls.WebParts.WebPart> ，则必须 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 在类中实现接口，就像为控件实现一样 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。  
  
> [!NOTE]
>  请注意， <xref:System.Web.UI.WebControls.WebParts.EditorPart> 在方法的实现中添加到控件集合的任何都 <xref:System.Web.UI.WebControls.WebParts.EditorPart> <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> 必须为其 ID 属性分配一个值，否则，在将集合分配给属性时会引发异常 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何以 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> 编程方式访问属性。 有关运行此示例所需的完整代码，请参阅类概述主题的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 。  
  
 此代码示例的第一部分演示 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> 属性包含对在网页 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 中以声明方式引用的所有控件的引用。  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 此代码示例的第二部分以编程方式访问 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> 属性，并列出控件中每个控件的 ID <xref:System.Web.UI.WebControls.Label> 。  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#6)]
 [!code-vb[WebParts_EditorZoneBase_Common#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#6)]  
  
 当你在浏览器中加载页面时，可以单击 " **显示 EditorParts 集合** " 按钮，以列出 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 属性中引用的所有控件的 id <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">要添加到集合的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 的 ID 属性尚未赋值。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateEditorParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="EmptyZoneText">
      <MemberSignature Language="C#" Value="public override string EmptyZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EmptyZoneText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyZoneText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyZoneText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当区域不包含任何控件时显示的消息。</summary>
        <value>一个字符串，其中包含在空区域中显示的消息。 默认的区域性特定字符串由 .NET Framework 提供。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText" />
      </Docs>
    </Member>
    <Member MemberName="ErrorText">
      <MemberSignature Language="C#" Value="public virtual string ErrorText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ErrorText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ErrorText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在编辑用户界面 (UI) 顶部显示的区域级错误消息的文本。</summary>
        <value>包含错误消息的本地化字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText%2A>属性包含错误消息的文本，如果在呈现从类派生的控件时出现错误，则可以在 UI 中显示该错误消息的文本 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 。 如果区域中包含的任何单个控件出现错误，则会在区域顶部显示错误消息 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 。 此外，单个 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 控件可以在接收错误的控件附近显示其自己的错误消息。  
  
 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和 [全球化和本地化](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置区域的页眉区的文本。</summary>
        <value>一个字符串，包含区域的页眉文本。 默认值为空字符串("")。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="InstructionText">
      <MemberSignature Language="C#" Value="public override string InstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstructionText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> 控件中为最终用户提供说明的文本。</summary>
        <value>一个字符串，其中包含为最终用户提供的说明。 适合特定工具区域的默认值由派生的 <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> 类提供。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ToolZone.InstructionText" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateEditorParts">
      <MemberSignature Language="C#" Value="protected void InvalidateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvalidateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvalidateEditorParts ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvalidateEditorParts();" />
      <MemberSignature Language="F#" Value="member this.InvalidateEditorParts : unit -&gt; unit" Usage="editorZoneBase.InvalidateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将与 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 区域关联的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 控件集合设置为 <see langword="null" />，从而调用 <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" /> 方法重新创建集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A>如果 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 与某个区域关联的控件列表 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 由于某种原因而发生更改，则派生类可以调用方法，并且派生类需要获取已更新的 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 控件列表。 派生类应调用 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A> ，它将当前集合设置为 `null` 。 下次访问该集合时 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> ，Web 部件控件集会自动调用 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> 方法以创建更新的集合。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="editorZoneBase.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">以前保存的状态。</param>
        <summary>为某个区域加载以前保存的状态信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要由 .NET Framework 基础结构使用，不应在代码中直接使用。 不过，控件开发人员可以重写此方法，以指定自定义服务器控件如何还原其视图状态。 有关详细信息，请参阅 [ASP.NET 状态管理概述](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100))。  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.LoadViewState%2A>方法将重写基方法，以检查是否正在加载页面，因为在区域中单击了 "确定" 谓词、"取消" 谓词或 "应用谓词"。 如果是这样，则该方法处理与各自的各个方案关联的状态。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" /> 对象的大小与当前视图状态对象的大小不相等。</exception>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="OKVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb OKVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb OKVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OKVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ OKVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OKVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.NotifyParentProperty(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.NotifyParentProperty(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 对象的引用，该对象将应用在编辑模式下对控件所做的编辑更改，并隐藏编辑用户界面 (UI)。</summary>
        <value>应用对控件所做的编辑更改，并隐藏编辑 UI 的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 OK 谓词由 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> 派生自类的控件的属性引用 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 。 它类似于应用谓词，在用户单击它时，它将应用用户对服务器控件所做的编辑更改。 此外，编辑控件处于隐藏状态，无法 <xref:System.Web.UI.WebControls.WebParts.WebPart> 再选择要编辑的控件 (允许用户编辑其他控件) ，而页面仍处于编辑模式。  
  
 默认情况下，OK 谓词作为控件出现在 UI 中 <xref:System.Web.UI.WebControls.Button> 。 按钮类型可以是图像、链接或实际按钮;您可以通过设置区域级别的继承属性，为区域中的所有谓词按钮 (而不是单个按钮) <xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A> 。  
  
 OK 谓词是一个区域级别的控件，这意味着虽然可能有多个 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 控件，每个控件都在编辑模式下对服务器控件的一个或多个属性进行编辑，但 OK 谓词的工作方式是将所有更改应用于 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 区域中的所有控件，并隐藏除区域本身之外的所有控件。  
  
   
  
## Examples  
 下面的代码示例演示如何以声明方式 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> 和编程方式访问属性。 有关运行此示例所需的完整代码，请参阅类概述主题的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 。  
  
 此代码示例的第一部分演示如何在网页中以 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> 声明方式访问属性。 此示例自定义谓词的文本。  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 该示例的第二部分演示如何 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> 通过使用切换按钮来启用或禁用它以编程方式访问。  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#7)]
 [!code-vb[WebParts_EditorZoneBase_Common#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#7)]  
  
 当你在浏览器中加载页面时，可以在下拉列表控件中选择 " **编辑模式** " 以切换到编辑模式。 您可以单击谓词菜单 (某个控件的标题栏中的向下箭头) ，然后单击 " **编辑** " 以编辑选定的控件。 当 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 控件和编辑 UI 可见时，可以看到表示 "确定" 谓词的按钮，并单击 " **切换 OKVerb 启用** " 按钮启用或禁用该按钮。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanged">
      <MemberSignature Language="C#" Value="protected override void OnDisplayModeChanged (object sender, System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDisplayModeChanged(object sender, class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDisplayModeChanged (sender As Object, e As WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDisplayModeChanged(System::Object ^ sender, System::Web::UI::WebControls::WebParts::WebPartDisplayModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDisplayModeChanged : obj * System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs -&gt; unit" Usage="editorZoneBase.OnDisplayModeChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">引发 <see cref="T:System.Object" /> 事件的 <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" />。</param>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" /> 事件并破坏区域中的所有 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 和子控件，以便为网页进入或退出编辑显示模式作准备。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A>方法为类中的基方法提供实现 <xref:System.Web.UI.WebControls.WebParts.ToolZone> 。  
  
 此方法的主要目的 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> 是准备网页以进入或退出编辑显示模式。 方法会销毁区域中包含的所有控件，然后调用基方法，这会引发 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged> 控件中的事件 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> 在派生类中重写方法。 有关运行此示例所需的完整代码，请参阅类概述主题的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 。  
  
 自定义编辑器区域派生自 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 类，因此它可以与网页的声明性标记中的区域模板一起使用。 自定义类将重写 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> 方法，将区域的背景色设置为指定的颜色，然后调用基方法，该基方法会销毁所有子级和 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 控件，以准备进入或退出编辑显示模式。  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#13](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#13)]
 [!code-vb[WebParts_EditorZoneBase_Common#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#13)]  
  
 当你在浏览器中加载页面时，可以在下拉列表控件中选择 " **编辑模式** " 以切换到编辑模式。 您可以单击谓词菜单 (某个控件的标题栏中的向下箭头) ，然后单击 " **编辑** " 以编辑选定的控件。 当 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 控件和编辑用户界面 (UI) 可见时，可以看到该区域具有代码中指定的背景色。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />可以在从 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 类或类继承的自定义编辑器区域控件中以编程方式重写或调用方法 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> 。</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="editorZoneBase.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.PreRender" /> 事件，并调用 <see cref="M:System.Web.UI.WebControls.WebParts.EditorPartChrome.PerformPreRender" /> 方法来处理 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件的 chrome 元素。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedWebPartChanged (object sender, System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedWebPartChanged(object sender, class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectedWebPartChanged (sender As Object, e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectedWebPartChanged(System::Object ^ sender, System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSelectedWebPartChanged : obj * System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="editorZoneBase.OnSelectedWebPartChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">引发 <see cref="T:System.Object" /> 事件的 <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />。</param>
        <param name="e">包含事件数据的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> 事件，并在区域中将 <see cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts" /> 集合设置为 <see langword="null" />，以便为 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件进入或退出编辑模式作准备。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A> 方法，您可以为单个 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件进入或退出编辑模式时发生的事件提供自定义处理。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A> 在派生类中重写方法。 有关运行此示例所需的完整代码，请参阅类概述主题的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 。  
  
 自定义编辑器区域派生自 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 类，因此它可以与网页的声明性标记中的区域模板一起使用。 自定义类将重写 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A> 方法，设置要编辑的特定控件的背景色，然后调用基方法。  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#14](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#14)]
 [!code-vb[WebParts_EditorZoneBase_Common#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#14)]  
  
 当你在浏览器中加载页面时，可以在下拉列表控件中选择 " **编辑模式** " 以切换到编辑模式。 您可以单击谓词菜单 (某个控件的标题栏中的向下箭头) ，然后单击 " **编辑** " 以编辑选定的控件。 当 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 和编辑用户界面 (UI) 可见时，可以看到所选控件具有代码中指定的背景色。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />可以在从 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 类或类继承的自定义编辑器区域控件中以编程方式重写或调用方法 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> 。</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected override void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="override this.RaisePostBackEvent : string -&gt; unit" Usage="editorZoneBase.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">包含该事件参数的 <see cref="T:System.String" />。</param>
        <summary>执行与某一区域谓词关联的操作，或引发发布回服务器的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RaisePostBackEvent%2A>如果在用户界面中单击了这些谓词中的一个谓词 (UI) ，则该方法执行与 OK 谓词、取消谓词或应用谓词相关联的各个操作。 否则，它会引发回发到服务器的事件。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="editorZoneBase.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收区域内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将区域呈现给指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Render%2A>方法会重写类中的基方法 <xref:System.Web.UI.WebControls.WebControl> ，以调用 <xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A> 方法，这将验证是否在运行时为区域控件呈现 HTML 窗体。 验证完成后，该方法将调用基方法以呈现区域的全部内容。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="RenderBody">
      <MemberSignature Language="C#" Value="protected override void RenderBody (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBody(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderBody (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderBody(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBody : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="editorZoneBase.RenderBody writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收区域的正文内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>重写基方法，以便呈现某个区域的正文区，该区域从 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 类派生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A>方法呈现区域的正文区 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> ，该区域是页眉和页脚区之间的主要内容区域，包含 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 控件。  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A>方法会重写类中的基方法， <xref:System.Web.UI.WebControls.WebParts.WebZone> 以提供专门呈现，用于寻址仅适用于区域的布局和样式特性 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 。 方法将呈现一个表，其中包含正文的全部内容，并根据各种条件（包括页面的当前显示模式）设置不同的属性值。 如果没有包含的控件，它将呈现属性的值 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A> 在派生类中重写方法。 有关运行此示例所需的完整代码，请参阅类概述主题的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 。  
  
 自定义编辑器区域派生自 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 类，因此它可以与网页的声明性标记中的区域模板一起使用。 自定义类将重写 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A> 方法，并添加一个 HTML `<hr />` 元素以在区域的标头和正文之间创建一行。 然后，它调用基方法以呈现区域的其余正文内容。  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#15](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#15)]
 [!code-vb[WebParts_EditorZoneBase_Common#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#15)]  
  
 当你在浏览器中加载页面时，可以在下拉列表控件中选择 " **编辑模式** " 以切换到编辑模式。 您可以单击谓词菜单 (某个控件的标题栏中的向下箭头) ，然后单击 " **编辑** " 以编辑选定的控件。 当 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 控件和编辑用户界面 (UI) 可见时，可以看到在编辑器区域的标头和正文之间创建的行。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="RenderVerbs">
      <MemberSignature Language="C#" Value="protected override void RenderVerbs (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderVerbs(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderVerbs (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderVerbs(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderVerbs : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="editorZoneBase.RenderVerbs writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收区域的正文内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>呈现在区域级应用的谓词。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs%2A>方法将呈现其操作适用于整个区域的谓词： OK 谓词、cancel 谓词和 apply 谓词。 这些谓词在 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> 、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A> 和属性中引用 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs%2A> 在派生类中重写方法。 有关运行此示例所需的完整代码，请参阅类概述主题的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 。  
  
 自定义编辑器区域派生自 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 类，因此它可以与网页的声明性标记中的区域模板一起使用。 自定义类将重写 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs%2A> 方法，并向 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb.Text%2A> 每个区域级别谓词的属性的现有值添加一些文本。 然后，它调用基方法以呈现所有谓词。  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#16](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#16)]
 [!code-vb[WebParts_EditorZoneBase_Common#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#16)]  
  
 当你在浏览器中加载页面时，可以在下拉列表控件中选择 " **编辑模式** " 以切换到编辑模式。 您可以单击谓词菜单 (某个控件的标题栏中的向下箭头) ，然后单击 " **编辑** " 以编辑选定的控件。 当 <xref:System.Web.UI.WebControls.WebParts.EditorZone> (UI) 的控件和编辑用户界面可见时，可以在区域底部的区域级别谓词的按钮上看到文本已更改。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="editorZoneBase.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将页面发布回服务器之后，保存已发生的所有视图状态的更改。</summary>
        <returns>返回区域控件的当前视图状态。 如果没有与区域关联的视图状态，此方法将返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.SaveViewState%2A>方法调用基方法以保存视图状态，并保存与 "应用"、"取消" 和 "确定" 谓词关联的任何视图状态。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="editorZoneBase.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>曲目更改为区域控件的视图状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.TrackViewState%2A>方法首先调用基方法来跟踪与区域关联的视图状态 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> ，然后开始跟踪应用、取消和正常谓词的视图状态。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartToEdit">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property WebPartToEdit As WebPart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ WebPartToEdit { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebPartToEdit : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对当前正在编辑的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的引用。</summary>
        <value>当前处于编辑模式中的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPart>一次只能编辑一个控件，当控件处于编辑模式时， <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit%2A> 属性提供对该控件的引用。 引用的控件与属性所引用的控件相同 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> 。 因此，当前正在编辑的控件始终处于选定状态。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>受保护的 <see cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit" /> 属性只能在派生类中访问，派生类可以对基类调用此属性， <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 以获取对正在编辑的当前控件的对象引用。</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
  </Members>
</Type>
