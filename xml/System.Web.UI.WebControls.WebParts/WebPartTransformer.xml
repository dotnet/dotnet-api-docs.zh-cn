<Type Name="WebPartTransformer" FullName="System.Web.UI.WebControls.WebParts.WebPartTransformer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0c8021da379ef1febc0b9a71636f9fa4e54bd780" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89726019" /></Metadata><TypeSignature Language="C#" Value="public abstract class WebPartTransformer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebPartTransformer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebPartTransformer" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartTransformer abstract" />
  <TypeSignature Language="F#" Value="type WebPartTransformer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为转换器类提供基本实现，以便在两个不兼容的连接点之间转换数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 转换器用于在两个不兼容的连接点之间转换两个 Web 部件控件之间的数据。 连接点在通过不同的接口提供或使用数据时不兼容。 例如，实现类型为的提供者连接点的提供程序 <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> 无法直接连接到应为类型的提供者连接点的使用者 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 。 相反，必须使用转换器来连接两个 Web 部件控件。  
  
 转换器接受提供程序连接点支持的类型的数据。 它执行必要的内部处理，将该数据转换为使用者连接点支持的类型。  
  
 转换器可以 (UI) 提供用户界面，该用户界面允许用户在连接模式下配置转换器。 配置控件通过 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer.CreateConfigurationControl%2A> 方法检索，并显示在 Web 部件连接区域中。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 是一个抽象类，必须进行扩展，以便在不同类型的连接点之间提供自定义的转换。  
  
   
  
## Examples  
 下面的代码示例演示如何创建派生自类的自定义转换器 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 。 转换器（名为 `RowToStringTransformer` ）允许 Web 部件提供商和 Web 部件使用者连接到不兼容的连接点。 提供程序提供类型的数据 <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> ，但使用者只接受类型的数据 <xref:System.String> 。 `RowToStringTransformer`类执行必要的转换。  
  
 此代码示例不包括提供程序或使用者的实现。 您必须创建一个实现接口的提供程序 <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> 和一个使用名为的自定义接口的使用者，这样 `IString` 示例才能正常运行。  
  
 [!code-csharp[WebParts_WebPartTransformer_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartTransformer_Overview/CS/TransformerSource.cs#5)]
 [!code-vb[WebParts_WebPartTransformer_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartTransformer_Overview/VB/TransformerSource.vb#5)]  
  
 此代码示例的第一部分包含提供程序和使用者的代码 Web 部件控件以及转换器的代码。  
  
 [!code-csharp[WebParts_WebPartTransformer_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartTransformer_Overview/CS/TransformerSource.cs#4)]
 [!code-vb[WebParts_WebPartTransformer_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartTransformer_Overview/VB/TransformerSource.vb#4)]  
  
 此代码示例的第二部分演示如何在对象的声明性语法中包含转换器 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 。  
  
 [!code-aspx-csharp[WebParts_WebPartTransformer_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartTransformer_Overview/CS/Transformer.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartTransformer_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartTransformer_Overview/VB/Transformer.aspx#1)]  
  
 必须在 Web.config 文件的部分中指定一个自定义转换器 `<transformers>` ，以便在网页中使用。 此代码示例的第三部分演示如何将自定义转换器添加到 Web.config 文件中。  
  
```vb  
<webParts enableExport="true">  
    <transformers>  
       <add name="RowToStringTransformer"  
          type="Samples.AspNet.VB.Controls.RowToStringTransformer" />  
    </transformers>  
</webParts>  
```  
  
```csharp  
<webParts enableExport="true">  
    <transformers>  
       <add name="RowToStringTransformer"  
          type="Samples.AspNet.CS.Controls.RowToStringTransformer" />  
    </transformers>  
</webParts>  
```  
  
 此代码示例包含一个用户控件，使您可以在 Web 部件页上更改显示模式。 该用户控件的源代码来自其他主题。 你可以从演练中为用户控件获取 .ascx 文件 [：在 Web 部件页上更改显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)，并且该文件必须位于 .aspx 页面所在的文件夹中。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>必须重写 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.Transform(System.Object)" /> 方法。</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebPartTransformer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebPartTransformer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConfigurationControl">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Control CreateConfigurationControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Control CreateConfigurationControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.CreateConfigurationControl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateConfigurationControl () As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::Control ^ CreateConfigurationControl();" />
      <MemberSignature Language="F#" Value="abstract member CreateConfigurationControl : unit -&gt; System.Web.UI.Control&#xA;override this.CreateConfigurationControl : unit -&gt; System.Web.UI.Control" Usage="webPartTransformer.CreateConfigurationControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 区域中显示配置转换器的 ASP.NET 控件。</summary>
        <returns>配置转换器的 ASP.NET 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当转换器要求用户对其进行配置时，可以显示配置控件。 配置控件提供 (UI) 的用户界面，该用户界面允许用户选择要转换的值。 它在连接区域中呈现。 配置控件必须实现 <xref:System.Web.UI.WebControls.WebParts.ITransformerConfigurationControl> 接口。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadConfigurationState">
      <MemberSignature Language="C#" Value="protected internal virtual void LoadConfigurationState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void LoadConfigurationState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.LoadConfigurationState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub LoadConfigurationState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void LoadConfigurationState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadConfigurationState : obj -&gt; unit&#xA;override this.LoadConfigurationState : obj -&gt; unit" Usage="webPartTransformer.LoadConfigurationState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">一个对象，包含通过使用 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.SaveConfigurationState" /> 保存的配置状态。</param>
        <summary>加载通过 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.SaveConfigurationState" /> 方法保存的配置状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法将保存的配置状态加载到用于配置转换器的 ASP.NET 控件中。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveConfigurationState">
      <MemberSignature Language="C#" Value="protected internal virtual object SaveConfigurationState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object SaveConfigurationState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.SaveConfigurationState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function SaveConfigurationState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ SaveConfigurationState();" />
      <MemberSignature Language="F#" Value="abstract member SaveConfigurationState : unit -&gt; obj&#xA;override this.SaveConfigurationState : unit -&gt; obj" Usage="webPartTransformer.SaveConfigurationState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将用户设置的配置状态保存在 ASP.NET 配置控件中。</summary>
        <returns>表示配置状态的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可将配置数据集保存在用于配置转换器的 ASP.NET 控件中。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public abstract object Transform (object providerData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Transform(object providerData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartTransformer.Transform(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Transform (providerData As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Transform(System::Object ^ providerData);" />
      <MemberSignature Language="F#" Value="abstract member Transform : obj -&gt; obj" Usage="webPartTransformer.Transform providerData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="providerData">要转换的提供者数据。</param>
        <summary>实现后，提供一个用于转换数据的对象。</summary>
        <returns>一个 <see cref="T:System.Object" />，表示要转换的数据。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 实现类时，必须重写此方法 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 。  
  
   
  
## Examples  
 下面的代码示例演示如何重写 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer.Transform%2A> 自定义类中的方法 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 。 它是类概述中的一个更大示例的一部分 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 。  
  
 [!code-csharp[WebParts_WebPartTransformer_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartTransformer_Overview/CS/TransformerSource.cs#3)]
 [!code-vb[WebParts_WebPartTransformer_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartTransformer_Overview/VB/TransformerSource.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
