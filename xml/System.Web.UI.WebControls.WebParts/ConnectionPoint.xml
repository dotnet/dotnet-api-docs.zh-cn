<Type Name="ConnectionPoint" FullName="System.Web.UI.WebControls.WebParts.ConnectionPoint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2b6c63ca61d8d2b7cbc5fd99ed5f981cdda9952a" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89908819" /></Metadata><TypeSignature Language="C#" Value="public abstract class ConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConnectionPoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConnectionPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConnectionPoint abstract" />
  <TypeSignature Language="F#" Value="type ConnectionPoint = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="70e09-101">用作定义连接点对象的基类，这些对象使 Web 部件连接中的使用者控件和提供者控件可以共享数据。</span><span class="sxs-lookup"><span data-stu-id="70e09-101">Serves as the base class for defining connection point objects that enable the consumer control and the provider control in a Web Parts connection to share data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e09-102">每个 Web 部件连接包含共享数据的两个服务器控件：一个控件是使用者，另一个控件是提供程序。</span><span class="sxs-lookup"><span data-stu-id="70e09-102">Every Web Parts connection consists of two server controls sharing data: one control is the consumer, the other is the provider.</span></span> <span data-ttu-id="70e09-103">如要讨论 Web 部件连接的基本组件以及连接对象本身，请参阅 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 类概述。</span><span class="sxs-lookup"><span data-stu-id="70e09-103">For a discussion of the essential components of a Web Parts connection, and the connection object itself, see the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class overview.</span></span> <span data-ttu-id="70e09-104">每个 Web 部件连接都需要连接点。</span><span class="sxs-lookup"><span data-stu-id="70e09-104">Every Web Parts connection requires connection points.</span></span> <span data-ttu-id="70e09-105">提供程序和使用者控件都必须至少有一个已定义 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 的对象 (它们都可以有多个连接点) ，其中包含有关控件如何连接到其他控件的详细信息以及它可以共享的数据类型的详细信息。</span><span class="sxs-lookup"><span data-stu-id="70e09-105">The provider and the consumer control must each have at least one defined <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> object (each of them can optionally have multiple connection points) that contains the details for how a control can connect to another control and the type of data it can share.</span></span> <span data-ttu-id="70e09-106">在实际连接中，提供程序具有其自己的连接点对象类型 (派生自基类 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>) 、 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 实例和使用者具有其自己的对象（ <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 实例）。</span><span class="sxs-lookup"><span data-stu-id="70e09-106">In an actual connection, the provider has its own type of connection point object (derived from the base <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class), a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> instance, and the consumer has its own object, a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> instance.</span></span>  
  
 <span data-ttu-id="70e09-107">若要创建提供程序连接点，开发人员必须向提供程序添加回调方法，该方法会将实现的接口实例返回给使用者。</span><span class="sxs-lookup"><span data-stu-id="70e09-107">To create a provider connection point, developers must add a callback method to the provider that will return an implemented interface instance to a consumer.</span></span> <span data-ttu-id="70e09-108">它们必须使用代码属性在源代码中标记回拨方法 `ConnectionProvider` (请参阅 <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> 类) 。</span><span class="sxs-lookup"><span data-stu-id="70e09-108">They must mark the callback method in the source code with a `ConnectionProvider` code attribute (see the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> class).</span></span> <span data-ttu-id="70e09-109">同样，若要创建使用者连接点，开发人员必须向接收接口实例的使用者添加方法，并且必须使用特性标记该方法 `ConnectionConsumer` (参见 <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> 类) 。</span><span class="sxs-lookup"><span data-stu-id="70e09-109">Similarly, to create a consumer connection point, developers must add a method to the consumer that receives an interface instance, and they must mark that method with a `ConnectionConsumer` attribute (see the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> class).</span></span>  
  
 <span data-ttu-id="70e09-110">当开发人员在网页上创建连接时，可以将其创建为静态或动态连接。</span><span class="sxs-lookup"><span data-stu-id="70e09-110">When developers create connections on a Web page, they can be created as static or dynamic connections.</span></span> <span data-ttu-id="70e09-111">静态连接在网页的标记中声明。</span><span class="sxs-lookup"><span data-stu-id="70e09-111">Static connections are declared in the markup of a Web page.</span></span> <span data-ttu-id="70e09-112">声明静态连接后，开发人员可以通过将值分配给 `ProviderConnectionPointID` `ConsumerConnectionPointID` 元素标记中的和属性，来指定使用者和提供者的连接点 `<asp:webpartconnection>` 。</span><span class="sxs-lookup"><span data-stu-id="70e09-112">When a static connection is declared, developers can designate which connection points are used for both the consumer and provider by assigning values to the `ProviderConnectionPointID` and `ConsumerConnectionPointID` attributes within the `<asp:webpartconnection>` element tag.</span></span> <span data-ttu-id="70e09-113">如果使用者和提供者控件中定义了多个连接点，则此方法特别有用，因为它允许静态连接识别要用于连接的连接点。</span><span class="sxs-lookup"><span data-stu-id="70e09-113">This approach is especially useful if there are multiple connection points defined within the consumer and provider controls, because it enables the static connection to identify which connection points to use for the connection.</span></span>  
  
 <span data-ttu-id="70e09-114">动态连接是通过开发人员的代码以编程方式创建的，也可以通过用户界面 (UI) 由控件提供 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 。</span><span class="sxs-lookup"><span data-stu-id="70e09-114">Dynamic connections are created programmatically, either by a developer's code or by users through the user interface (UI) provided by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control.</span></span> <span data-ttu-id="70e09-115">若要在代码中创建连接，开发人员必须 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 通过对控件调用方法来获取对象的实例 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 。</span><span class="sxs-lookup"><span data-stu-id="70e09-115">To create a connection in code, developers must get an instance of a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object by calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span> <span data-ttu-id="70e09-116">开发人员必须先引用使用者和提供者服务器控件及其各自的连接点对象，然后才能调用此方法。</span><span class="sxs-lookup"><span data-stu-id="70e09-116">Before they can call this method, developers must have references to the consumer and provider server controls and their respective connection point objects.</span></span> <span data-ttu-id="70e09-117">若要获取对提供者和使用者控件的连接点的引用，开发人员首先 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> 调用 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> 控件上的和方法 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 。</span><span class="sxs-lookup"><span data-stu-id="70e09-117">To get references to the connection points for a provider and a consumer control, developers first call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> methods on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span> <span data-ttu-id="70e09-118">这些方法将返回相应的连接点对象，然后可以将这些对象传递给方法以创建连接。</span><span class="sxs-lookup"><span data-stu-id="70e09-118">These methods return the appropriate connection point objects, which in turn can be passed to the method for creating a connection.</span></span>  
  
 <span data-ttu-id="70e09-119">当提供程序和使用者的连接点对象都适用于同一类型的接口时，它们是兼容的，并且可以形成直接连接来共享数据。</span><span class="sxs-lookup"><span data-stu-id="70e09-119">When the provider's and the consumer's connection point objects both work with the same type of interface, they are compatible and can form a direct connection to share data.</span></span> <span data-ttu-id="70e09-120">如果它们不适用于同一接口类型，则 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 必须使用对象将提供程序中的接口实例转换为使用者可以使用的类型。</span><span class="sxs-lookup"><span data-stu-id="70e09-120">If they do not work with the same interface type, a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object must be used to translate the interface instance from the provider into a type that the consumer can work with.</span></span>  
  
 <span data-ttu-id="70e09-121">抽象 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 类提供使用者控件和提供者控件共享的连接点的基本详细信息。</span><span class="sxs-lookup"><span data-stu-id="70e09-121">The abstract <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class provides the base details of connection points that are shared by both consumer and provider controls.</span></span> <span data-ttu-id="70e09-122">几个属性包含这些详细信息。</span><span class="sxs-lookup"><span data-stu-id="70e09-122">Several properties contain these details.</span></span> <span data-ttu-id="70e09-123"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>属性指示连接点是否可以一次参与多个连接。</span><span class="sxs-lookup"><span data-stu-id="70e09-123">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property indicates whether a connection point can participate in more than one connection at a time.</span></span> <span data-ttu-id="70e09-124">默认情况下，提供程序连接点可以加入多个连接，并且使用者连接点不能。</span><span class="sxs-lookup"><span data-stu-id="70e09-124">By default, provider connection points can participate in multiple connections, and consumer connection points cannot.</span></span> <span data-ttu-id="70e09-125"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>属性指示与连接点关联的服务器控件的类型。</span><span class="sxs-lookup"><span data-stu-id="70e09-125">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property indicates the type of the server control associated with a connection point.</span></span> <span data-ttu-id="70e09-126">请注意，不仅 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件可以形成连接; 任何服务器控件（无论是 ASP.NET 控件、自定义控件还是用户控件）都可以启用以加入到区域中的连接 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 。</span><span class="sxs-lookup"><span data-stu-id="70e09-126">Note that not only <xref:System.Web.UI.WebControls.WebParts.WebPart> controls can form connections; any server control, whether an ASP.NET control, a custom control, or a user control, can be enabled to participate in connections if placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone.</span></span> <span data-ttu-id="70e09-127"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>属性提供连接点的友好名称，该名称可在 UI 中显示，以帮助创建连接的用户。</span><span class="sxs-lookup"><span data-stu-id="70e09-127">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property provides a friendly name for the connection point that can be displayed in the UI to assist users who are creating connections.</span></span> <span data-ttu-id="70e09-128"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A>属性用作连接点对象本身的字符串标识符。</span><span class="sxs-lookup"><span data-stu-id="70e09-128">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> property serves as a string identifier for the connection point object itself.</span></span> <span data-ttu-id="70e09-129"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>属性指示连接点识别哪种类型的接口实例。</span><span class="sxs-lookup"><span data-stu-id="70e09-129">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property indicates what type of interface instance the connection point understands.</span></span> <span data-ttu-id="70e09-130">给定的连接点是提供还是使用该接口的实例取决于它是 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 或 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 对象。</span><span class="sxs-lookup"><span data-stu-id="70e09-130">Whether a given connection point provides or consumes an instance of that interface is determined by whether it is a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> or a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span>  
  
 <span data-ttu-id="70e09-131"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>类有一种方法。</span><span class="sxs-lookup"><span data-stu-id="70e09-131">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class has one method.</span></span> <span data-ttu-id="70e09-132"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>方法返回一个布尔值，指示连接点当前是否能够参与连接。</span><span class="sxs-lookup"><span data-stu-id="70e09-132">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> method returns a Boolean value indicating whether a connection point is currently able to participate in connections.</span></span>  
  
 <span data-ttu-id="70e09-133"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>该类还具有一个公共字段 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> 。</span><span class="sxs-lookup"><span data-stu-id="70e09-133">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class also has one public field, <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>.</span></span> <span data-ttu-id="70e09-134">此字段包含一个值，该值用于标识连接中的默认连接点。</span><span class="sxs-lookup"><span data-stu-id="70e09-134">This field contains a value used to identify the default connection point in a connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="70e09-135">用于指定连接点方法的属性只有一个必需参数， `displayName` 因此，可以创建默认连接点属性，而无需指定 ID。</span><span class="sxs-lookup"><span data-stu-id="70e09-135">The attributes for specifying connection point methods have only one required parameter, `displayName`, so it is possible to create the default connection point attribute without specifying an ID.</span></span> <span data-ttu-id="70e09-136">在这种情况下， <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> 字段提供了要使用的基础值。</span><span class="sxs-lookup"><span data-stu-id="70e09-136">In such cases, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> field supplies a base value to use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e09-137">下面的代码示例演示如何创建 Web 部件连接，其中包括所需的 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 对象。</span><span class="sxs-lookup"><span data-stu-id="70e09-137">The following code example demonstrates the creation of a Web Parts connection that includes the required <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objects.</span></span> <span data-ttu-id="70e09-138">因为 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 类是抽象基类，所以其子类的实例（- <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 和 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> ）是用于形成连接的实际对象。</span><span class="sxs-lookup"><span data-stu-id="70e09-138">Because the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class is an abstract base class, instances of its child classes--<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>--are the actual objects used to form a connection.</span></span>  
  
 <span data-ttu-id="70e09-139">该示例包含四个部分：</span><span class="sxs-lookup"><span data-stu-id="70e09-139">The example has four parts:</span></span>  
  
-   <span data-ttu-id="70e09-140">允许您在页上更改 Web 部件显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="70e09-140">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="70e09-141">接口的源代码和两个用作 <xref:System.Web.UI.WebControls.WebParts.WebPart> 连接的提供者和使用者的控件。</span><span class="sxs-lookup"><span data-stu-id="70e09-141">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="70e09-142">承载所有控件并运行代码示例的网页。</span><span class="sxs-lookup"><span data-stu-id="70e09-142">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="70e09-143">有关如何运行 "示例" 页的说明。</span><span class="sxs-lookup"><span data-stu-id="70e09-143">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="70e09-144">此代码示例的第一部分是用户控件，该控件使用户能够更改网页上的显示模式。</span><span class="sxs-lookup"><span data-stu-id="70e09-144">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="70e09-145">将以下源代码保存到 .ascx 文件，并为其提供分配给 `Src` 此用户控件的指令属性的文件名，该属性 `Register` 位于宿主网页的顶部附近。</span><span class="sxs-lookup"><span data-stu-id="70e09-145">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="70e09-146">有关显示模式的详细信息以及此控件中源代码的说明，请参阅 [演练：在 Web 部件页上更改显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="70e09-146">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="70e09-147">此代码示例的第二部分是接口和控件的源代码。</span><span class="sxs-lookup"><span data-stu-id="70e09-147">The second part of the code example is the source code for the interface and controls.</span></span> <span data-ttu-id="70e09-148">源文件包含一个名为的简单接口 `IZipCode` 。</span><span class="sxs-lookup"><span data-stu-id="70e09-148">The source file contains a simple interface named `IZipCode`.</span></span> <span data-ttu-id="70e09-149">还有一个 <xref:System.Web.UI.WebControls.WebParts.WebPart> 名为的类 `ZipCodeWebPart` ，该类实现接口并充当提供程序控件。</span><span class="sxs-lookup"><span data-stu-id="70e09-149">There is also a <xref:System.Web.UI.WebControls.WebParts.WebPart> class named `ZipCodeWebPart` that implements the interface and acts as the provider control.</span></span> <span data-ttu-id="70e09-150">它 `ProvideIZipCode` 的方法是实现接口的唯一成员的回调方法。</span><span class="sxs-lookup"><span data-stu-id="70e09-150">Its `ProvideIZipCode` method is the callback method that implements the interface's only member.</span></span> <span data-ttu-id="70e09-151">方法只返回接口的实例。</span><span class="sxs-lookup"><span data-stu-id="70e09-151">The method simply returns an instance of the interface.</span></span> <span data-ttu-id="70e09-152">请注意，该方法 `ConnectionProvider` 在其元数据中用特性标记。</span><span class="sxs-lookup"><span data-stu-id="70e09-152">Note that the method is marked with a `ConnectionProvider` attribute in its metadata.</span></span> <span data-ttu-id="70e09-153">这是将方法标识为提供程序连接点的回调方法的机制。</span><span class="sxs-lookup"><span data-stu-id="70e09-153">This is the mechanism for identifying the method as the callback method for the provider's connection point.</span></span> <span data-ttu-id="70e09-154">其他 <xref:System.Web.UI.WebControls.WebParts.WebPart> 类命名为 `WeatherWebPart` ，它充当连接的使用者。</span><span class="sxs-lookup"><span data-stu-id="70e09-154">The other <xref:System.Web.UI.WebControls.WebParts.WebPart> class is named `WeatherWebPart`, and it acts as the consumer for the connection.</span></span> <span data-ttu-id="70e09-155">此类具有一个名为 `GetZipCode` 的方法，该方法 `IZipCode` 从提供程序控件获取接口的实例。</span><span class="sxs-lookup"><span data-stu-id="70e09-155">This class has a method named `GetZipCode` that gets an instance of the `IZipCode` interface from the provider control.</span></span> <span data-ttu-id="70e09-156">请注意，此方法 `ConnectionConsumer` 在其元数据中被标记为使用者的连接点方法和属性。</span><span class="sxs-lookup"><span data-stu-id="70e09-156">Note that this method is marked as the consumer's connection point method with a `ConnectionConsumer` attribute in its metadata.</span></span> <span data-ttu-id="70e09-157">这是用于标识使用者控件中的连接点方法的机制。</span><span class="sxs-lookup"><span data-stu-id="70e09-157">This is the mechanism for identifying the connection point method in the consumer control.</span></span>  
  
 <span data-ttu-id="70e09-158">要使代码示例运行，必须编译此源代码。</span><span class="sxs-lookup"><span data-stu-id="70e09-158">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="70e09-159">可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。</span><span class="sxs-lookup"><span data-stu-id="70e09-159">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="70e09-160">或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。</span><span class="sxs-lookup"><span data-stu-id="70e09-160">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="70e09-161">此代码示例使用动态编译。</span><span class="sxs-lookup"><span data-stu-id="70e09-161">This code example uses dynamic compilation.</span></span> <span data-ttu-id="70e09-162">有关演示如何编译的演练，请参阅 [演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="70e09-162">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="70e09-163">此代码示例的第三部分是网页。</span><span class="sxs-lookup"><span data-stu-id="70e09-163">The third part of the code example is the Web page.</span></span> <span data-ttu-id="70e09-164">顶部附近是 `Register` 注册构成连接的自定义控件的指令，以及允许用户在页面上更改显示模式的用户控件。</span><span class="sxs-lookup"><span data-stu-id="70e09-164">Near the top are `Register` directives to register the custom controls that form the connection, and the user control that enables users to change display modes on the page.</span></span> <span data-ttu-id="70e09-165">连接本身是在页面上的元素中以声明方式创建的 `<staticconnections>` 。</span><span class="sxs-lookup"><span data-stu-id="70e09-165">The connection itself is created declaratively within the `<staticconnections>` element on the page.</span></span> <span data-ttu-id="70e09-166">还可以通过编程方式创建连接;用于执行的代码包含在 `Button1_Click` 方法中。</span><span class="sxs-lookup"><span data-stu-id="70e09-166">You can also create the connection programmatically; the code for doing that is contained in the `Button1_Click` method.</span></span> <span data-ttu-id="70e09-167">无论连接是以声明方式创建还是以编程方式创建，都必须始终为提供程序和使用者指定连接点。</span><span class="sxs-lookup"><span data-stu-id="70e09-167">Whether the connection is created declaratively or programmatically, connection points must always be specified for both the provider and the consumer.</span></span> <span data-ttu-id="70e09-168">`Button2_Click`方法访问 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 提供程序和使用者的对象，并将其一些属性值写入页中的标签。</span><span class="sxs-lookup"><span data-stu-id="70e09-168">The `Button2_Click` method accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objects for both the provider and the consumer, and writes some of their property values to a label in the page.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 <span data-ttu-id="70e09-169">在浏览器中加载页面后，单击 " **连接点详细信息** " 按钮。</span><span class="sxs-lookup"><span data-stu-id="70e09-169">After you load the page in a browser, click the **Connection Point Details** button.</span></span> <span data-ttu-id="70e09-170">此时将显示有关在声明性连接中建立的提供者和使用者连接点的信息。</span><span class="sxs-lookup"><span data-stu-id="70e09-170">Information about the provider and consumer connection points established in the declarative connection appears.</span></span> <span data-ttu-id="70e09-171">接下来，使用 " **显示模式** " 下拉控件将页面切换到连接模式。</span><span class="sxs-lookup"><span data-stu-id="70e09-171">Next, use the **Display Mode** drop-down control to switch the page into connect mode.</span></span> <span data-ttu-id="70e09-172">在其中一个控件的谓词菜单 <xref:System.Web.UI.WebControls.WebParts.WebPart> (用标题栏中的向下箭头表示) 中，单击 "连接" 谓词。</span><span class="sxs-lookup"><span data-stu-id="70e09-172">On the verbs menu of one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls (represented by a downward arrow in the title bar), click the connect verb.</span></span> <span data-ttu-id="70e09-173">连接 UI 随即出现，由 `<asp:connectionszone>` 页面中声明的控件自动创建。</span><span class="sxs-lookup"><span data-stu-id="70e09-173">The connection UI appears, created automatically by the `<asp:connectionszone>` control declared in the page.</span></span> <span data-ttu-id="70e09-174">单击 " **断开连接** " 按钮以终止现有连接。</span><span class="sxs-lookup"><span data-stu-id="70e09-174">Click the **Disconnect** button to terminate the existing connection.</span></span> <span data-ttu-id="70e09-175">使用 " **显示模式** " 控件将页面返回到浏览模式。</span><span class="sxs-lookup"><span data-stu-id="70e09-175">Use the **Display Mode** control to return the page to browse mode.</span></span> <span data-ttu-id="70e09-176">接下来，单击 " **动态连接** " 按钮以编程方式创建连接。</span><span class="sxs-lookup"><span data-stu-id="70e09-176">Next, click the **Dynamic Connection** button to create a connection programmatically.</span></span> <span data-ttu-id="70e09-177">再次单击 " **连接点详细信息** " 按钮，以指示关于两个连接点对象的详细信息。</span><span class="sxs-lookup"><span data-stu-id="70e09-177">Click the **Connection Point Details** button again, to indicate details about the two connection point objects.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)"><span data-ttu-id="70e09-178">Web 部件连接概述</span><span class="sxs-lookup"><span data-stu-id="70e09-178">Web Parts Connections Overview</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="70e09-179">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="70e09-179">ASP.NET Web Parts Controls</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AllowsMultipleConnections">
      <MemberSignature Language="C#" Value="public bool AllowsMultipleConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsMultipleConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowsMultipleConnections As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsMultipleConnections { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowsMultipleConnections : bool" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70e09-180">获取一个指示连接点是否支持多个并发连接的值。</span><span class="sxs-lookup"><span data-stu-id="70e09-180">Gets a value that indicates whether a connection point supports multiple simultaneous connections.</span></span></summary>
        <value><span data-ttu-id="70e09-181">如果连接点支持多个连接，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="70e09-181"><see langword="true" /> if the connection point supports multiple connections; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e09-182"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>类) ，对象的属性值设置为 `true` (<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> ，因为默认情况下 Web 部件控件启用了提供程序连接点以形成到多个使用者的连接。</span><span class="sxs-lookup"><span data-stu-id="70e09-182"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> objects have their <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property value set to `true` (by the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> class), because the Web Parts control set by default enables provider connection points to form connections to multiple consumers.</span></span>  
  
 <span data-ttu-id="70e09-183">与此相反， <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 对象的 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> 属性值设置为 `false` 由 <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> 类)  (，因为默认情况下 Web 部件控件设置允许使用者连接点一次只与一个提供程序建立连接。</span><span class="sxs-lookup"><span data-stu-id="70e09-183">In contrast, <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects have their <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property value set to `false` (by the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> class) because the Web Parts control set by default allows consumer connection points to establish a connection to only one provider at a time.</span></span>  
  
 <span data-ttu-id="70e09-184">您可以通过将不同的值分配给提供程序的属性 (来更改与多个连接有关的默认行为， <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType>) 或为 <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> 连接属性所用的两个类上的使用者的属性 () <xref:System.Attribute> 。</span><span class="sxs-lookup"><span data-stu-id="70e09-184">You can change the default behavior concerning multiple connections by assigning different values to the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> property (for providers) or the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> property (for consumers) on the two <xref:System.Attribute> classes used for connection attributes.</span></span> <span data-ttu-id="70e09-185">如果允许使用者连接点同时连接到多个提供程序，则代码必须处理任何产生的同步问题。</span><span class="sxs-lookup"><span data-stu-id="70e09-185">If you enable consumer connection points to connect to multiple providers at the same time, your code must deal with any resulting synchronization issues.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e09-186">下面的代码示例演示如何在 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> 和对象上使用属性 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 。</span><span class="sxs-lookup"><span data-stu-id="70e09-186">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="70e09-187">此代码示例仅显示包含用于访问属性的代码的网页;有关运行此示例所需的完整代码，请参阅类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 。</span><span class="sxs-lookup"><span data-stu-id="70e09-187">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="70e09-188">网页的方法中的代码可 `Button2_Click` 访问 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> 每个连接点对象的属性，并将每个值写入一个标签。</span><span class="sxs-lookup"><span data-stu-id="70e09-188">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="70e09-189">在浏览器中加载页面后，单击 " **连接点详细信息** " 按钮以执行该代码。</span><span class="sxs-lookup"><span data-stu-id="70e09-189">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="70e09-190">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="70e09-190">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public Type ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ControlType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70e09-191">获取连接点与之关联的服务器控件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="70e09-191">Gets the <see cref="T:System.Type" /> of the server control with which a connection point is associated.</span></span></summary>
        <value><span data-ttu-id="70e09-192">表示控件类型的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="70e09-192">A <see cref="T:System.Type" /> representing the control type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e09-193">属性的值 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> 通常是 <xref:System.Web.UI.WebControls.WebParts.WebPart> 类型。</span><span class="sxs-lookup"><span data-stu-id="70e09-193">The value of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property is often the <xref:System.Web.UI.WebControls.WebParts.WebPart> type.</span></span> <span data-ttu-id="70e09-194">但是，由于任何类型的用户控件或服务器控件在已正确启用并放置在某个区域中时都可以参与连接 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ，因此， <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> 属性也可以返回这些其他服务器控件类型之一。</span><span class="sxs-lookup"><span data-stu-id="70e09-194">However, because any type of user control or server control can participate in connections if it is properly enabled and placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property can return one of these other server control types as well.</span></span>  
  
 <span data-ttu-id="70e09-195">当不是控件的服务器控件 <xref:System.Web.UI.WebControls.WebParts.WebPart> 放置在某个区域中时 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ，它们会 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 在运行时使用对象进行包装，以便它们可以作为 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件并参与连接。</span><span class="sxs-lookup"><span data-stu-id="70e09-195">When server controls that are not <xref:System.Web.UI.WebControls.WebParts.WebPart> controls are placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone, they are wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object at run time so they can function as <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and participate in connections.</span></span> <span data-ttu-id="70e09-196">但在连接中涉及此类控件时， <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> 属性值不会返回 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 类型; 它返回 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 对象的子控件的类型，即服务器或用户控件的类型。</span><span class="sxs-lookup"><span data-stu-id="70e09-196">But when such controls are involved in connections, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property value does not return the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> type; it returns the type of the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object's child control, which is the type of the server or user control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e09-197">下面的代码示例演示如何在 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> 和对象上使用属性 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 。</span><span class="sxs-lookup"><span data-stu-id="70e09-197">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="70e09-198">此代码示例仅显示包含用于访问属性的代码的网页;有关运行此示例所需的完整代码，请参阅类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 。</span><span class="sxs-lookup"><span data-stu-id="70e09-198">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="70e09-199">网页的方法中的代码可 `Button2_Click` 访问 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> 每个连接点对象的属性，并将每个值写入一个标签。</span><span class="sxs-lookup"><span data-stu-id="70e09-199">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="70e09-200">在浏览器中加载页面后，单击 " **连接点详细信息** " 按钮以执行该代码。</span><span class="sxs-lookup"><span data-stu-id="70e09-200">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="70e09-201">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="70e09-201">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultID">
      <MemberSignature Language="C#" Value="public static readonly string DefaultID;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultID As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultID;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70e09-202">表示一个字符串，该字符串用于标识与服务器控件关联的连接点集合中的默认连接点。</span><span class="sxs-lookup"><span data-stu-id="70e09-202">Represents a string used to identify the default connection point within a collection of connection points associated with a server control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e09-203">创建连接点时，可以 <xref:System.Web.UI.WebControls.WebParts.WebPart> 使用或属性为使用者或提供者控件的源代码中的连接点指定 ID <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="70e09-203">When a connection point is created, it is possible to specify an ID for the connection point in the source code of a consumer or provider <xref:System.Web.UI.WebControls.WebParts.WebPart> control, using a <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> or a <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> attribute.</span></span> <span data-ttu-id="70e09-204">但是，将属性添加到源代码中的连接点时，该 `ID` 参数是可选的。</span><span class="sxs-lookup"><span data-stu-id="70e09-204">However, when an attribute is added to a connection point in the source code, the `ID` parameter is optional.</span></span> <span data-ttu-id="70e09-205">如果未在属性中指定 ID，则 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> 字段提供用于标识默认连接点的字符串。</span><span class="sxs-lookup"><span data-stu-id="70e09-205">If the ID is not specified in the attribute, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> field provides a string that is used to identify the default connection point.</span></span>  
  
 <span data-ttu-id="70e09-206">如果使用者或提供者控件中定义了多个连接点，则必须为每个连接点指定一个 ID，以便在创建连接时可以区分连接点。</span><span class="sxs-lookup"><span data-stu-id="70e09-206">If multiple connection points are defined in a consumer or provider control, it is necessary to specify an ID for each connection point, so that the connection points can be distinguished when creating connections.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70e09-207">获取一个字符串，该字符串用作在用户界面 (UI) 中表示连接点的友好显示名称。</span><span class="sxs-lookup"><span data-stu-id="70e09-207">Gets a string that serves as a friendly display name to represent a connection point in the user interface (UI).</span></span></summary>
        <value><span data-ttu-id="70e09-208">一个字符串，包含 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> 对象的友好显示名称。</span><span class="sxs-lookup"><span data-stu-id="70e09-208">A string that contains a friendly display name for a <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e09-209">若要创建 Web 部件连接，连接的提供者和使用者控件必须每个指定至少一个连接点，这是使其能够与数据进行通信和共享的方法。</span><span class="sxs-lookup"><span data-stu-id="70e09-209">To create a Web Parts connection, the provider and consumer controls for the connection must each specify at least one connection point, a method that enables them to communicate and share data.</span></span> <span data-ttu-id="70e09-210">为了识别这些连接点方法，开发人员可以在所选方法上指定属性。</span><span class="sxs-lookup"><span data-stu-id="70e09-210">To identify these connection point methods, a developer specifies an attribute on the selected methods.</span></span> <span data-ttu-id="70e09-211">在提供程序中， `ConnectionProvider` 特性是在所选的回调方法上设置的，在使用者中，将在 `ConnectionConsumer` 接收包含提供程序中的数据的接口实例的方法上设置特性。</span><span class="sxs-lookup"><span data-stu-id="70e09-211">In the provider, a `ConnectionProvider` attribute is set on the selected callback method, and in the consumer, a `ConnectionConsumer` attribute is set on the method that receives an instance of an interface that contains data from the provider.</span></span> <span data-ttu-id="70e09-212">对于这两个属性，无论声明哪个重载来创建属性，都是一个始终需要的参数，它是 `displayName` 参数。</span><span class="sxs-lookup"><span data-stu-id="70e09-212">For both of these attributes, the one parameter that is always required, regardless of which overload is declared to create the attribute, is the `displayName` parameter.</span></span> <span data-ttu-id="70e09-213">开发人员必须分配一个字符串，将其用作连接点的友好显示名称，该字符串将成为属性的值 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="70e09-213">The developer must assign a string to be used as a friendly display name for the connection point, and that string becomes the value of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property.</span></span>  
  
 <span data-ttu-id="70e09-214"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>用户创建连接时，属性值显示在网页的 UI 中。</span><span class="sxs-lookup"><span data-stu-id="70e09-214">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property value is displayed in the UI of a Web page when users create connections.</span></span> <span data-ttu-id="70e09-215">例如，将 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 控件添加到页面时，它会创建用户界面，供用户在控件之间创建连接。</span><span class="sxs-lookup"><span data-stu-id="70e09-215">For example, when the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control is added to the page, it creates a UI for users to create connections between controls.</span></span> <span data-ttu-id="70e09-216">用户将页面切换为连接显示模式并在控件上单击连接谓词后 <xref:System.Web.UI.WebControls.WebParts.WebPart> ，将显示连接 UI。</span><span class="sxs-lookup"><span data-stu-id="70e09-216">After a user switches a page into connect display mode and clicks a connect verb on a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, the connection UI appears.</span></span> <span data-ttu-id="70e09-217">可以参与连接的每个控件都列在 UI 中，每个控件旁边是一个下拉列表控件，用于显示其可用连接点的友好名称。</span><span class="sxs-lookup"><span data-stu-id="70e09-217">Each control that can participate in a connection is listed in the UI, and next to each control is a drop-down list control that displays the friendly names of its available connection points.</span></span> <span data-ttu-id="70e09-218">用户必须至少选择一个连接点以建立连接。</span><span class="sxs-lookup"><span data-stu-id="70e09-218">Users must select at least one connection point to establish a connection.</span></span> <span data-ttu-id="70e09-219">连接点列表中显示的值是从属性获取的 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="70e09-219">The values that appear in the list of connection points are obtained from the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property.</span></span> <span data-ttu-id="70e09-220">如果开发人员生成用于创建连接的自定义 UI，则他们可以通过 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> 类似方式使用属性来提供表示连接点的友好名称。</span><span class="sxs-lookup"><span data-stu-id="70e09-220">If developers build a custom UI for creating connections, they can use the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property in a similar way to provide a friendly name that represents a connection point.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="70e09-221">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="70e09-221">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEnabled">
      <MemberSignature Language="C#" Value="public virtual bool GetEnabled (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetEnabled(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnabled (control As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetEnabled(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member GetEnabled : System.Web.UI.Control -&gt; bool&#xA;override this.GetEnabled : System.Web.UI.Control -&gt; bool" Usage="connectionPoint.GetEnabled control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="70e09-222">一个与连接点关联的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 或其他服务器控件。</span><span class="sxs-lookup"><span data-stu-id="70e09-222">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server control that is associated with a connection point.</span></span></param>
        <summary><span data-ttu-id="70e09-223">返回一个指示连接点是否可以参与连接的值。</span><span class="sxs-lookup"><span data-stu-id="70e09-223">Returns a value that indicates whether a connection point can participate in connections.</span></span></summary>
        <returns><span data-ttu-id="70e09-224">如果控件可以创建连接点来参与连接，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="70e09-224"><see langword="true" /> if the control can create a connection point to participate in a connection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e09-225"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>基类中的方法 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 始终返回 `true` ，但派生的类可以重写方法 `true` ，以便根据的状态返回或 `false` 在不同的时间进行返回 `control` 。</span><span class="sxs-lookup"><span data-stu-id="70e09-225">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> method in the base <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class always returns `true`, but derived classes can override the method to return `true` or `false` at different times, based on the state of `control`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e09-226">下面的代码示例演示如何在 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> 和对象上使用方法 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 。</span><span class="sxs-lookup"><span data-stu-id="70e09-226">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> method on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="70e09-227">此代码示例仅显示包含用于访问属性的代码的网页;有关运行此示例所需的完整代码，请参阅类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 。</span><span class="sxs-lookup"><span data-stu-id="70e09-227">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="70e09-228">网页的方法中的代码可 `Button2_Click` 访问 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> 每个连接点对象上的方法，并将每个值写入一个标签。</span><span class="sxs-lookup"><span data-stu-id="70e09-228">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> method on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="70e09-229">在浏览器中加载页面后，单击 " **连接点详细信息** " 按钮以执行该代码。</span><span class="sxs-lookup"><span data-stu-id="70e09-229">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="70e09-230">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="70e09-230">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70e09-231">获取包含连接点的标识符的字符串。</span><span class="sxs-lookup"><span data-stu-id="70e09-231">Gets a string that contains the identifier for a connection point.</span></span></summary>
        <value><span data-ttu-id="70e09-232">包含连接点的标识符的字符串。</span><span class="sxs-lookup"><span data-stu-id="70e09-232">A string that contains the identifier for a connection point.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e09-233">当开发人员在 <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> 控件的源代码中声明某个方法的或特性时，使该方法可用作连接点，则无需为该 `ID` 连接点属性声明参数。</span><span class="sxs-lookup"><span data-stu-id="70e09-233">When a developer declares a <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> or a <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> attribute on a method in the source code of a control, so that the method can be used as a connection point, it is not required to declare the `ID` parameter for the connection point attribute.</span></span> <span data-ttu-id="70e09-234">唯一必需的属性是 `displayName` 参数。</span><span class="sxs-lookup"><span data-stu-id="70e09-234">The only required attribute is the `displayName` parameter.</span></span> <span data-ttu-id="70e09-235">使用字段中的值向连接点分配默认 ID <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> 。</span><span class="sxs-lookup"><span data-stu-id="70e09-235">A default ID is assigned to the connection point, using the value from the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> field.</span></span>  
  
 <span data-ttu-id="70e09-236">如果控件中只有一个方法用作连接点，则无需指定连接点的 ID。</span><span class="sxs-lookup"><span data-stu-id="70e09-236">If there is only one method in a control being used as a connection point, it is unnecessary to specify an ID for the connection point.</span></span> <span data-ttu-id="70e09-237">如果有多个方法指定为连接点，则必须为每个方法指定一个 ID;否则，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="70e09-237">If there are multiple methods specified as connection points, you must specify an ID for each one; otherwise, an exception will be thrown.</span></span> <span data-ttu-id="70e09-238">通过为每个连接点分配 ID，还可以指定在网页中声明连接时使用的连接点，或在代码中创建连接。</span><span class="sxs-lookup"><span data-stu-id="70e09-238">By assigning an ID to each connection point, you also make it possible to specify which connection point to use when you declare connections in Web pages or create them in code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e09-239">下面的代码示例演示如何在 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> 和对象上使用属性 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 。</span><span class="sxs-lookup"><span data-stu-id="70e09-239">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="70e09-240">此代码示例仅显示包含用于访问属性的代码的网页;有关运行此示例所需的完整代码，请参阅类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 。</span><span class="sxs-lookup"><span data-stu-id="70e09-240">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="70e09-241">网页的方法中的代码可 `Button2_Click` 访问 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> 每个连接点对象的属性，并将每个值写入一个标签。</span><span class="sxs-lookup"><span data-stu-id="70e09-241">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> property on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="70e09-242">在浏览器中加载页面后，单击 " **连接点详细信息** " 按钮以执行该代码。</span><span class="sxs-lookup"><span data-stu-id="70e09-242">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="70e09-243">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="70e09-243">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70e09-244">获取连接点所使用的接口的类型。</span><span class="sxs-lookup"><span data-stu-id="70e09-244">Gets the type of the interface used by a connection point.</span></span></summary>
        <value><span data-ttu-id="70e09-245">与控件所提供或使用的接口类型相对应的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="70e09-245">A <see cref="T:System.Type" /> that corresponds to the interface type provided or consumed by a control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70e09-246"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>属性指示连接点使用哪种类型的接口。</span><span class="sxs-lookup"><span data-stu-id="70e09-246">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property indicates what type of interface a connection point uses.</span></span> <span data-ttu-id="70e09-247">这可以帮助确定两个控件是否兼容并能够形成连接。</span><span class="sxs-lookup"><span data-stu-id="70e09-247">This can help to determine whether two controls are compatible and able to form a connection.</span></span> <span data-ttu-id="70e09-248">如果提供程序连接点的与 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> 使用者连接点的不同 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> ，则这两个控件是不兼容的 (这意味着它们不能直接连接而无需转换器) ， <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 必须使用对象来建立连接。</span><span class="sxs-lookup"><span data-stu-id="70e09-248">If the provider connection point's <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> is different from the consumer connection point's <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>, then the two controls are incompatible (meaning that they cannot be directly connected without a transformer), and a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object must be used to establish a connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="70e09-249">下面的代码示例演示如何在 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> 和对象上使用属性 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 。</span><span class="sxs-lookup"><span data-stu-id="70e09-249">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="70e09-250">此代码示例仅显示包含用于访问属性的代码的网页;有关运行此示例所需的完整代码，请参阅类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> 。</span><span class="sxs-lookup"><span data-stu-id="70e09-250">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="70e09-251">网页的方法中的代码可 `Button2_Click` 访问 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> 每个连接点对象的属性，并将每个值写入一个标签。</span><span class="sxs-lookup"><span data-stu-id="70e09-251">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="70e09-252">在浏览器中加载页面后，单击 " **连接点详细信息** " 按钮以执行该代码。</span><span class="sxs-lookup"><span data-stu-id="70e09-252">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="70e09-253">ASP.NET Web 部件控件</span><span class="sxs-lookup"><span data-stu-id="70e09-253">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
