<Type Name="LayoutEditorPart" FullName="System.Web.UI.WebControls.WebParts.LayoutEditorPart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e159d91ce6ae19e2613f9ae267a441b0ef8c9baf" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89747006" /></Metadata><TypeSignature Language="C#" Value="public sealed class LayoutEditorPart : System.Web.UI.WebControls.WebParts.EditorPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LayoutEditorPart extends System.Web.UI.WebControls.WebParts.EditorPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.LayoutEditorPart" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LayoutEditorPart&#xA;Inherits EditorPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class LayoutEditorPart sealed : System::Web::UI::WebControls::WebParts::EditorPart" />
  <TypeSignature Language="F#" Value="type LayoutEditorPart = class&#xA;    inherit EditorPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.EditorPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供一个编辑器控件，最终用户使用该控件可以编辑关联 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的几个面向布局的用户界面 (UI) 属性。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>类是派生自类的编辑器控件 <xref:System.Web.UI.WebControls.WebParts.EditorPart> ，用于编辑影响关联或控件的布局的属性 <xref:System.Web.UI.WebControls.WebParts.WebPart> <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 。  
  
 正如 Web 部件控件集中的面向工具的区域 (有关详细信息，请参阅 <xref:System.Web.UI.WebControls.WebParts.ToolZone> 类概述) ，其中包含 (工具部件的面向工具的部件控件) ，并且每个工具部分必须位于特定类型的工具区域中。 Web 部件控件集中的工具部件具有两个区分特征：  
  
-   它们是帮助用户控件，使最终用户能够个性化 Web 部件页面上的控件。  
  
-   它们仅在某些显示模式中可见。  
  
 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>控件是一种仅在 Web 部件页面处于编辑模式时，以及在 <xref:System.Web.UI.WebControls.WebParts.WebPart> 选择特定控件进行编辑的情况下变为可见的工具部件。 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>与所有其他 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 控件一样，控件位于 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 控件中。  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.WebParts.EditorZone>区域只能包含 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 控件，而 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 不能将控件置于任何其他类型的区域中。  
  
 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>类具有一个 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart.Title%2A> 属性，该属性可获取或设置布局控件的标题。 类还具有一个 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart.Display%2A> 属性，该属性重写基属性并返回 `true` 。 这意味着 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> ，当页面处于编辑模式时，控件始终可见，即使 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A> 正在编辑的控件上的属性 <xref:System.Web.UI.WebControls.WebParts.WebPart> 设置为也是如此 `false` 。 换句话说，用户始终可以编辑控件中的属性 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> ，即使 <xref:System.Web.UI.WebControls.WebParts.WebPart> 其他控件无法编辑指定控件也是如此 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 。  
  
 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>类还具有两个重要的方法： <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart.ApplyChanges%2A> 和 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart.SyncChanges%2A> ，它们从类继承 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 并重写。 方法非常重要，因为它们允许获取和设置编辑器控件的字段值和正在编辑的控件的属性之间的属性值 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。  
  
 在大多数情况下， <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 控件应在页持久性格式中使用，方法是在元素内声明一个元素 `<asp:layouteditorpart>` `<zonetemplate>` ，该元素又包含在网页中的 `<asp:editorzone>` 元素内。 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>控件使最终用户能够编辑控件的以下 UI 属性 <xref:System.Web.UI.WebControls.WebParts.WebPart> ：  
  
-   <xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A>  
  
 若要编辑控件的其他属性和行为 <xref:System.Web.UI.WebControls.WebParts.WebPart> ，可以使用 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 随 Web 部件控件集提供的其他控件。 这些控件包括 <xref:System.Web.UI.WebControls.WebParts.BehaviorEditorPart> 、 <xref:System.Web.UI.WebControls.WebParts.AppearanceEditorPart> 和 <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> 控件。 提供的 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 控件应提供编辑控件所需的大多数编辑功能 <xref:System.Web.UI.WebControls.WebParts.WebPart> ，但也可以通过从类继承来创建自定义编辑器控件 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 。 有关代码示例，请参阅 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 类概述。  
  
> [!NOTE]
>  为了提高可访问性， <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 控件在元素中呈现 `<fieldset>` 。 `<fieldset>`元素对用于在控件中进行编辑的相关控件集进行分组 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> ，并为视觉用户代理 (（例如普通 Web 浏览器) 和面向语音的用户代理 (如屏幕阅读软件) 等）中的控件提供选项卡式导航。  
  
## <a name="accessibility"></a>可访问性  
 默认情况下，为此控件呈现的标记可能不符合辅助功能标准，例如 Web 内容可访问性准则 1.0 (WCAG) 优先级1指导原则。 有关此控件的辅助功能支持的详细信息，请参阅 [ASP.NET 控件和辅助功能](https://docs.microsoft.com/previous-versions/ms227996(v=vs.140))。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 在网页上声明控件，并使其能够编辑控件的多个 UI 属性 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 此代码示例包含三个部分：  
  
-   使您能够在 Web 部件页上更改显示模式的用户控件。  
  
-   包含 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 控件和控件的网页 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> ，用于编辑控件的布局属性 <xref:System.Web.UI.WebControls.BulletedList> 。  
  
-   说明如何在浏览器中加载页面时工作。  
  
 此代码示例的第一部分是用户控件，该控件使用户能够更改网页上的显示模式。 有关显示模式的详细信息以及此控件中源代码的说明，请参阅 [演练：在 Web 部件页上更改显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_LayoutEditorPart_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_LayoutEditorPart_Overview/CS/DisplayModeMenuCS.ascx#5)]
 [!code-aspx-vb[WebParts_LayoutEditorPart_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_LayoutEditorPart_Overview/VB/DisplayModeMenuVB.ascx#5)]  
  
 此代码示例的第二部分是网页。 它包含对控件的声明性引用 <xref:System.Web.UI.WebControls.WebParts.EditorZone> ，其中包含一个子 `<zonetemplate>` 元素，其中包含对控件的声明性引用 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 。 请注意，此页还包含 <xref:System.Web.UI.WebControls.BulletedList> 绑定到 Pubs 数据库的控件; 因为此控件驻留在某个区域中 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> ，所以它将作为 <xref:System.Web.UI.WebControls.WebParts.WebPart> 可由控件编辑的控件 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 。  
  
 [!code-aspx-csharp[WebParts_LayoutEditorPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_LayoutEditorPart_Overview/CS/layouteditorpartcs.aspx#1)]
 [!code-aspx-vb[WebParts_LayoutEditorPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_LayoutEditorPart_Overview/VB/layouteditorpartvb.aspx#1)]  
  
 在浏览器中加载页面时，可以在 "**显示模式**" 下拉列表控件中选择 "**编辑模式**" 以切换到编辑模式。 可以在 " **创作列表" Web 部件** 控件的标题栏中 (向下箭头) 单击谓词菜单，然后单击 " **编辑** " 开始编辑。 编辑 UI 可见后，可以看到 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 控件，并在其上方显示一个按钮和文本框。 如果在编辑 UI 中进行一些更改，并单击 " **应用** " 按钮，则可以使用 " **显示模式** " 下拉列表控件将页面返回到浏览模式，并查看编辑更改的完整效果。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.AppearanceEditorPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.BehaviorEditorPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LayoutEditorPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.LayoutEditorPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LayoutEditorPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>创建该类的一个新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart.%23ctor%2A>构造函数是默认构造函数; 类中没有声明任何构造函数 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> ，因此在创建类的新实例时，不会执行任何特殊任务。  
  
 通常不需要使用构造函数，因为你可以 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 在设计时以声明方式向页面添加控件。 但是，如果 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 出于某种原因需要以编程方式添加控件，则可以使用 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart.%23ctor%2A> 构造函数。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="ApplyChanges">
      <MemberSignature Language="C#" Value="public override bool ApplyChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ApplyChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.LayoutEditorPart.ApplyChanges" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ApplyChanges () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ApplyChanges();" />
      <MemberSignature Language="F#" Value="override this.ApplyChanges : unit -&gt; bool" Usage="layoutEditorPart.ApplyChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将 <see cref="T:System.Web.UI.WebControls.WebParts.LayoutEditorPart" /> 控件的值保存到关联 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的相应属性。</summary>
        <returns>如果将值从 <see cref="T:System.Web.UI.WebControls.WebParts.LayoutEditorPart" /> 控件保存到 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的操作成功，则为 <see langword="true" />；否则（如果出现错误）为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart.ApplyChanges%2A>方法是控件上的关键方法 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 。 此方法的目的是将用户在控件上设置的值保存 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 到关联控件中的相应属性 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 关联的控件在 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 控件的继承属性中引用 <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> 。  
  
> [!IMPORTANT]
>  不能 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart.ApplyChanges%2A> 从自己的代码中调用方法。 但是，如果您需要对编辑控件所提供的不同控件属性的过程进行更多的编程控制 <xref:System.Web.UI.WebControls.WebParts.WebPart> <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> ，则可以创建自定义 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 控件并提供您自己的此方法的实现。 有关示例，请参见 <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A?displayProperty=nameWithType> 方法。  
  
 此 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart.ApplyChanges%2A> 方法尝试设置关联控件上的以下属性 <xref:System.Web.UI.WebControls.WebParts.WebPart> ：  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeState%2A>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A>  
  
 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart.ApplyChanges%2A>当用户在编辑用户界面 (UI) 中单击表示 "确定" 或 "应用" 谓词的按钮时，将调用方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">当在关联 <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.ChromeState" /> 控件上设置 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 属性的值时发生错误。</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.LayoutEditorPart.SyncChanges" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.LayoutEditorPart.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="layoutEditorPart.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public override string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.LayoutEditorPart.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.WebControls.WebParts.LayoutEditorPart.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>重写从 <see cref="T:System.Web.UI.WebControls.Panel" /> 控件继承的基属性以在设计器中隐藏该属性，并防止它受主题影响。</summary>
        <value>一个字符串，该字符串包含接收 <see cref="T:System.Web.UI.WebControls.Button" /> 控件中的默认焦点的 <see cref="T:System.Web.UI.WebControls.Panel" /> 控件的 ID。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 尽管此属性是公共的，但它用于此控件的默认呈现，不应从开发人员代码调用。  
  
 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和 [ASP.NET 主题和外观](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.DefaultButton" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="public override bool Display { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Display" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.LayoutEditorPart.Display" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Display As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Display { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Display : bool" Usage="System.Web.UI.WebControls.WebParts.LayoutEditorPart.Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示当某个控件的关联 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件在编辑模式下时是否应显示该控件。</summary>
        <value>一个布尔值，指示是否应显示该控件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart.Display%2A> `true` 即使 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A> 属性位于 `false` 关联控件上，属性也将返回 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 这是为了使 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 控件在编辑模式下始终可用，即使在 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件无法由其他控件编辑时也是如此 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorPart.Display" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.LayoutEditorPart.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="layoutEditorPart.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.LayoutEditorPart.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="layoutEditorPart.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncChanges">
      <MemberSignature Language="C#" Value="public override void SyncChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SyncChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.LayoutEditorPart.SyncChanges" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SyncChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SyncChanges();" />
      <MemberSignature Language="F#" Value="override this.SyncChanges : unit -&gt; unit" Usage="layoutEditorPart.SyncChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件检索属性值并将这些属性值分配给关联 <see cref="T:System.Web.UI.WebControls.WebParts.LayoutEditorPart" /> 控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart.SyncChanges%2A>方法是控件上的关键方法 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 。 它实现基类中的 <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> 方法，检索关联控件中的当前值 <xref:System.Web.UI.WebControls.WebParts.WebPart> ，并使用这些值更新控件中的子控件， <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 以便用户可以对其进行编辑。  
  
 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart.SyncChanges%2A>只要关联控件中的值发生更改，就会调用方法 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 对于 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 控件， <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 包含控件的区域将 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart.SyncChanges%2A> 在调用方法之后立即调用方法 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart.ApplyChanges%2A> ，以使控件中的值 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 始终与关联控件中的值同步 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 调用方法的另一种情况 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart.SyncChanges%2A> 是在 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件最初进入编辑模式时。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>虽然你可以 <see cref="M:System.Web.UI.WebControls.WebParts.LayoutEditorPart.SyncChanges" /> 从代码中调用方法，但并不需要这样做。 Web 部件控件集在 <see cref="M:System.Web.UI.WebControls.WebParts.LayoutEditorPart.ApplyChanges" /> 编辑过程中的适当时刻调用此方法和方法，以使编辑控件与其关联的控件保持同步 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.LayoutEditorPart.ApplyChanges" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.LayoutEditorPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.LayoutEditorPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置编辑器控件的标题。</summary>
        <value>用作控件标题的字符串。 默认值是 Web 部件控件集提供的、计算出的控件名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart.Title%2A> <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 当控件在编辑模式中可见时，属性值显示在控件的标题栏中。 在页面中声明控件时，可以为属性设置一个值 `Title` 。 如果未提供标题的值，则使用特定于区域性的默认值来描述此控件允许用户编辑的属性。  
  
   
  
## Examples  
 此代码示例演示如何使用控件的 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart.Title%2A> 属性 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 。 有关运行此示例所需的完整代码，请参阅类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 。  
  
 下面的代码演示如何 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 在网页中以声明方式设置控件的标题。  
  
 [!code-aspx-csharp[WebParts_LayoutEditorPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_LayoutEditorPart_Overview/CS/layouteditorpartcs.aspx#2)]
 [!code-aspx-vb[WebParts_LayoutEditorPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_LayoutEditorPart_Overview/VB/layouteditorpartvb.aspx#2)]  
  
 此代码示例的下一部分演示如何以编程方式设置属性的值 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart.Title%2A> 。  
  
 [!code-csharp[WebParts_LayoutEditorPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_LayoutEditorPart_Overview/CS/layouteditorpartcs.aspx#3)]
 [!code-vb[WebParts_LayoutEditorPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_LayoutEditorPart_Overview/VB/layouteditorpartvb.aspx#3)]  
  
 在浏览器中加载页面时，可以在 "**显示模式**" 下拉列表控件中选择 "**编辑模式**" 以切换到编辑模式。 可以在 " **创作列表" Web 部件** 控件的标题栏中 (向下箭头) 单击谓词菜单，然后单击 " **编辑** " 开始编辑。 编辑用户界面 (UI) 可见时，可以看到 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 控件，并将其置于其上方的按钮和文本框。 请注意，控件的标题 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> 是在网页的声明性标记中分配给它的值。 如果在 " **更新 EditorPart 标题** " 按钮旁边的文本框中输入一些文本，然后单击按钮，则会更新控件的标题。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
  </Members>
</Type>
