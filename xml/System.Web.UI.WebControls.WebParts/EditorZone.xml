<Type Name="EditorZone" FullName="System.Web.UI.WebControls.WebParts.EditorZone">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0588826640540d31425d037f0013cc275712c9d1" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86659345" /></Metadata><TypeSignature Language="C#" Value="public class EditorZone : System.Web.UI.WebControls.WebParts.EditorZoneBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EditorZone extends System.Web.UI.WebControls.WebParts.EditorZoneBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.EditorZone" />
  <TypeSignature Language="VB.NET" Value="Public Class EditorZone&#xA;Inherits EditorZoneBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditorZone : System::Web::UI::WebControls::WebParts::EditorZoneBase" />
  <TypeSignature Language="F#" Value="type EditorZone = class&#xA;    inherit EditorZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.EditorZoneBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.SupportsEventValidation]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.SupportsEventValidation&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>用作 Web 部件控件集内的主控件，用于在网页中承载 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 Web 部件控件集内，区域是包含网页上已定义区域并包含服务器控件的复合控件。 区域的主要功能是布局其包含的控件，并为这些控件提供 (UI) 的通用用户界面。 有关区域及其在 Web 部件应用程序中的使用方式的一般信息，请参阅基类的参考文档 <xref:System.Web.UI.WebControls.WebParts.WebZone> 和[Web 部件控件集概述](https://docs.microsoft.com/previous-versions/aspnet/k3w2y2tf(v=vs.100))。  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZone>控件是 Web 部件控件集中的一项基本控件。 Web 部件的一项重要功能是，最终用户可以根据自己的偏好修改 (或个性化) 网页，并保存其个性化设置以供将来浏览器会话使用。 修改 Web 部件页面的一个方面包括编辑;用户可以编辑可见控件的外观、布局、行为和其他属性 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 Web 部件控件集中的多个控件提供编辑功能，包括 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 控件。  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZone>当 Web 部件页面进入编辑模式时，控件将变为可见，并使可 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 用于对控件进行个性化设置的各种控件 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 <xref:System.Web.UI.WebControls.WebParts.EditorZone>控件与它的父级（类）非常相似， <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 但有一个重要区别： <xref:System.Web.UI.WebControls.WebParts.EditorZone> 控件提供了一个区域模板，该模板在其属性中引用 <xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A> 。 区域模板添加了以页持久性格式声明内容的功能。 页面开发人员可以 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 在网页的声明性标记中放置控件，添加一个子 `<zonetemplate>` 元素，并在元素中 `<zonetemplate>` 添加对控件的声明性引用 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 。  
  
 该 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 控件还具有一个方法， <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A> 该方法重写类中的基方法 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 。 此方法是必需的，以便 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 控件可以创建区域模板以包含以 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 声明方式添加到区域的任何控件。  
  
> [!NOTE]
>  UI 中的按钮 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 需要客户端脚本才能正常工作。 如果在浏览器中禁用了脚本，则用户将无法通过 UI 执行操作 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 。  
  
## <a name="accessibility"></a>可访问性  
 默认情况下，为此控件呈现的标记可能不符合辅助功能标准，例如 Web 内容可访问性准则 1.0 (WCAG) 优先级1指导原则。 有关此控件的辅助功能支持的详细信息，请参阅[ASP.NET 控件和辅助功能](https://docs.microsoft.com/previous-versions/ms227996(v=vs.140))。  
  
   
  
## Examples  
 下面的代码示例演示了类的几个声明性和编程使用 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 。 该示例创建一个从类继承的自定义编辑器区域 <xref:System.Web.UI.WebControls.WebParts.EditorZone> ，并在 Web 部件页中使用它。  
  
 此代码示例包含三个部分：  
  
-   使您能够更改网页上的显示模式的用户控件。  
  
-   引用自定义控件的网页 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 。  
  
-   此示例的工作原理的说明。  
  
 此代码示例的第一部分是用户控件，该控件使用户能够更改网页上的显示模式。 有关显示模式和此控件中的源代码说明的详细信息，请参阅[演练：在 Web 部件页上更改显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_EditorZone_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZone_Overview/CS/displaymodecs.ascx#4)]
 [!code-aspx-vb[WebParts_EditorZone_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZone_Overview/VB/displaymodevb.ascx#4)]  
  
 此代码示例的第二部分是网页。 页面顶部附近是 `Register` 用户控件的指令。 在页面中声明用户控件标记，其中包含 `uc1:` 元素的前缀。 请注意，元素下面的 `<asp:WebPartZone>` `<asp:EditorZone>` 元素包含多个 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 控件，并设置了一些标记和属性来确定其外观和行为。 还有很多方法可用于以编程方式访问各个控件的各个成员 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 。  
  
 [!code-aspx-csharp[WebParts_EditorZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZone_Overview/CS/editorzonecs.aspx#1)]
 [!code-aspx-vb[WebParts_EditorZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZone_Overview/VB/editorzonevb.aspx#1)]  
  
 当你在浏览器中加载页面时，可以在下拉列表中选择 "**编辑模式**" 以切换到编辑模式。 若要显示编辑 UI，可以单击谓词菜单 (两个控件的标题栏中的向下箭头) ，然后单击 "**编辑**" 以编辑控件。 编辑 UI 可见后，可以看到声明性和编程方式使用 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 类成员的效果。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>如果你想要创建自定义 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> 区域来更好地控制编辑 UI 的呈现，则可以直接从类继承，只要 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 你不需要为页面开发人员提供区域模板支持以 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 声明方式将控件添加到区域。 在这种情况下，您可以 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 通过编程方式将所有控件添加到区域。 如果要提供区域模板支持，应从 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> 类继承。</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/k3w2y2tf(v=vs.100)">Web 部件控制集概述</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/z36h8be9(v=vs.100)">Web 部件个性化概述</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateEditorParts () As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::WebParts::EditorPartCollection ^ CreateEditorParts();" />
      <MemberSignature Language="F#" Value="override this.CreateEditorParts : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="editorZone.CreateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建以页持久性格式在区域模板中声明的所有 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件。</summary>
        <returns>一个 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" />，它包含对区域模板中声明的所有 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件的引用。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A>方法会重写基方法，以仅创建在 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 区域模板中声明的控件。 <xref:System.Web.UI.WebControls.WebParts.EditorPart>添加到区域的任何其他控件必须以编程方式添加。 例如，通过在控件中实现接口，可以完成此操作 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 然后，在重写的 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> 方法中，可以将自定义控件的集合添加 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 到区域。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">当前的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件没有 ID。</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="ZoneTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ZoneTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ZoneTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ZoneTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ZoneTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.WebParts.EditorZone))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.WebParts.EditorZone))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>提供模板来以页持久性格式包含 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> 控件中的子控件。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" /> 区域模板，作为区域中子控件的容器。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A>属性是类和基类之间的主要区别 <xref:System.Web.UI.WebControls.WebParts.EditorZone> <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> 。 通过添加对区域模板的支持， <xref:System.Web.UI.WebControls.WebParts.EditorZone> 页面开发人员可以 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 在网页 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 的声明性标记中将子控件置于控件中。 区域模板充当子控件的容器。  
  
> [!NOTE]
>  属性的 set 访问器 <xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A> 调用 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A> 方法，这 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 会强制重新创建在模板中声明的控件的集合。 这会导致识别模板内容中的任何更改。  
  
 若要在控件中以声明方式使用区域模板 <xref:System.Web.UI.WebControls.WebParts.EditorZone> ，请添加一对 `<zonetemplate>` 标记，并在 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 标记之间引用控件。 每个控件实例只呈现一个区域模板 <xref:System.Web.UI.WebControls.WebParts.EditorZone> (因此，没有理由将多个 `<zonetemplate>` 元素添加到 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 控件) 。 此外，控件的区域模板只能 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 包含从类派生的部件控件 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 。  
  
   
  
## Examples  
 下面的代码示例演示了属性的声明性用法 <xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A> 。 该示例的完整代码位于类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 。  
  
 此代码示例演示如何 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 将控件放置在 `<zonetemplate>` 控件中的元素内 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 。  
  
 [!code-aspx-csharp[WebParts_EditorZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZone_Overview/CS/editorzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZone_Overview/VB/editorzonevb.aspx#2)]  
  
 当你在浏览器中加载页面时，可以在下拉列表中选择 "**编辑模式**" 以切换到编辑模式。 若要显示编辑用户界面 (UI ") ，可以在两个控件之一的标题栏中 (向下箭头) 单击谓词菜单，然后单击"**编辑**"以编辑控件。 编辑 UI 可见后，可以看到在 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 元素中声明的多个控件 `<zonetemplate>` 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
  </Members>
</Type>
