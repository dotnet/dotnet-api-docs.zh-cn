<Type Name="IWebPart" FullName="System.Web.UI.WebControls.WebParts.IWebPart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c9f2e124bc5576ba3bc58e4e3503236ede397d80" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="77107559" /></Metadata><TypeSignature Language="C#" Value="public interface IWebPart" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPart" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPart" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPart" />
  <TypeSignature Language="F#" Value="type IWebPart = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定义由 ASP.NET <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件使用的公共用户界面 (UI) 属性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebParts.IWebPart>接口提供多个面向 UI 的属性，这些属性可增强使用控件的用户体验 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 当你创建派生自基类的控件时 <xref:System.Web.UI.WebControls.WebParts.WebPart> ，将获取接口中所有属性的实现 <xref:System.Web.UI.WebControls.WebParts.IWebPart> ，因为 <xref:System.Web.UI.WebControls.WebParts.WebPart> 基类实现了此接口。

 您可以使用现有用户控件、ASP.NET 控件或自定义服务器控件，这些控件不 <xref:System.Web.UI.WebControls.WebParts.WebPart> 作为 Web 部件应用程序的一部分从类继承，并且还可以使用接口声明的这些面向 UI 的属性 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 。 如果将现有服务器控件放在某个 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 区域中，则在运行时将使用对象对它们进行包装 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 。 因为 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 该类继承自 <xref:System.Web.UI.WebControls.WebParts.WebPart> 基类，所以它使现有服务器控件可以充当 true <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件，并将其添加到该接口的属性 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 。

 如果将不是控件的服务器控件放置 <xref:System.Web.UI.WebControls.WebParts.WebPart> 在区域中，则它们可以 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 在运行时使用属性，还可以在页的标记中的服务器控件上声明这些属性的值（采用页持久性格式）。 但是，因为这些属性仅在运行时可用于服务器控件，所以 IntelliSense 的设计时编码功能不识别 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 在服务器控件上声明的属性。 在加载页面时，这些控件上的声明属性仍然有效，但 Microsoft Visual Studio 不会在设计时将属性识别为有效。 如果要将 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 属性添加到现有服务器和用户控件以提高设计时用户体验，可以 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 在服务器控件中实现该接口。

 实现此接口的主要原因可能 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 在于不支持使用 expando （自定义）属性的控件。 Expando 属性是可以通过接口动态添加到类的字符串 <xref:System.Web.UI.IAttributeAccessor> 。 实现此接口的控件（包括 <xref:System.Web.UI.WebControls.WebControl> 类及其子级）可以使用 expando 属性。 因此，所有 ASP.NET 服务器控件、从它们派生的自定义控件、Web 用户控件和 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件都支持使用 expando 属性。 但直接从基类继承的自定义控件 <xref:System.Web.UI.Control> 不支持 expando 属性。 因此，如果在中声明这些控件， <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 则将无法声明控件的公共 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 属性，例如和等属性 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> 。 如果要将这些属性用于此类控件，必须实现 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 接口。



## Examples
 下面的代码示例演示如何 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 在用户控件中实现接口。 这是一个简单的实现，演示如何实现属性。

 此代码示例的第一部分演示用户控件。 用户控件实现了接口的所有属性 <xref:System.Web.UI.WebControls.WebParts.IWebPart> ，以及与用户界面中的控件绑定的其他两个公共属性。 这两个自定义属性都使用 `Personalizable` 属性，这将使这些属性中的值能够跨浏览器会话保存。 请注意，在基类 <xref:System.Web.UI.WebControls.WebParts.WebPart> 实现中，接口的所有属性 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 也实现为可个性化的，尽管它们不在此代码示例中。

 [!code-aspx-csharp[WebParts_IWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#2)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#2)]

 此代码示例的第二部分显示了承载用户控件的网页。 页面具有一个 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 控件，其中引用了用户控件。 请注意， <xref:System.Web.UI.WebControls.WebParts.IWebPart> 会在用户控件的标记中以声明方式设置接口的多个属性值，这使其在 <xref:System.Web.UI.WebControls.WebParts.WebPart> 设计时和运行时都能与控件相似。 如果在浏览器中加载页面，则可以使用页面上的 UI 来演示在运行时以编程方式更改已实现属性的值的功能 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 。 更改某些属性值时，所做的更改在页面上并不明显，但在页面源（ <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> 属性）中可见，或存储在应用程序的状态数据（ <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> 属性）中。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]

 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>通常不需要 <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> 在自定义 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件或服务器控件上实现接口，因为基类 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 已经实现了接口。 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />位于区域中的自定义控件和其他服务器控件 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 可以使用所有 <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> 属性。

自行实现接口的主要原因 <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> 是在自定义 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件或其他服务器控件中，是否要更改默认实现。 例如，您可能希望为某些属性提供默认值。 在用户或服务器控件中实现该接口的另一个原因是，这样就可以增强在控件上使用这些属性的设计时体验。</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
  </Docs>
  <Members>
    <Member MemberName="CatalogIconImageUrl">
      <MemberSignature Language="C#" Value="public string CatalogIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property CatalogIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CatalogIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图像的 URL，该图像在控件目录中表示一个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件。</summary>
        <value>表示图像的 URL 的字符串，该图像用于在目录中表示控件。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Web 部件应用程序通常提供用户可添加到页面的控件的目录（或列表）。 <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>控件的属性包含图像的 URL，该图像在目录中出现时表示该控件。



## Examples
 下面的代码示例演示如何声明和编程方式使用 <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> 属性。 该示例的完整源代码位于类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 。

 此代码示例的第一部分演示用户控件如何实现 <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> 属性。

 [!code-csharp[WebParts_IWebPart_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#8)]
 [!code-vb[WebParts_IWebPart_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#8)]

 此代码示例的第二部分演示用户控件中的方法， <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> 当用户从页面上的单选按钮中选择相应的属性名称、在文本框中设置新值，然后单击 "**更新**" 按钮时，该方法以编程方式设置属性的值。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]

 此代码示例的第三部分演示如何 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 在控件中引用实现接口的用户控件 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> ，以及如何 <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> 在控件上以声明方式设置该属性。 请注意，由于本示例未提供 Web 部件控件的目录，因此看不到设置此属性的实际效果。

 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一条短语，该短语在 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的工具提示和目录中用来概述该控件的作用。</summary>
        <value>字符串，简要概述控件的功能。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>属性值通常用作目录中用于提供控件列表的控件的描述性字符串 <xref:System.Web.UI.WebControls.WebParts.WebPart> ，并用作控件标题栏中的工具提示。 当用户将鼠标指针置于控件标题栏中的标题文本上时，将在工具提示中显示属性的内容。



## Examples
 下面的代码示例演示如何声明和编程方式使用 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> 属性。 该示例的完整源代码位于类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 。

 此代码示例的第一部分演示用户控件如何实现 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> 属性。

 [!code-csharp[WebParts_IWebPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#3)]
 [!code-vb[WebParts_IWebPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#3)]

 此代码示例的第二部分演示用户控件中的方法， <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> 当用户从页面上的单选按钮中选择相应的属性名称、在文本框中设置新值，然后单击 "**更新**" 按钮时，该方法以编程方式设置属性的值。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]

 此代码示例的第三部分演示如何 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 在控件中引用实现接口的用户控件 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> ，以及如何 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> 在控件上以声明方式设置该属性。 请注意，在浏览器中加载页面后，可以通过将鼠标指针放在控件标题栏中的标题文本上来查看此属性的值。 你还可以在运行时通过加载网页并使用提供的用户界面（UI）更改属性值，试验以编程方式更改属性值。

 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Description" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Subtitle">
      <MemberSignature Language="C#" Value="public string Subtitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subtitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Subtitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subtitle { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Subtitle : string" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个字符串，该字符串与 <see cref="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" /> 属性值连接即形成 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的完整标题。</summary>
        <value>作为控件副标题的字符串。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>属性用于返回控件的默认副标题字符串，该 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件追加到标题栏中的控件标题上。

 如果为 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> 实现接口的控件中的属性提供默认值 <xref:System.Web.UI.WebControls.WebParts.IWebPart> ，则 Web 部件控件集会在运行时自动将其追加到控件的属性的值 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> 。



## Examples
 下面的代码示例演示如何声明和编程方式使用 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> 属性。 该示例的完整源代码位于类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 。

 此代码示例的第一部分演示用户控件如何实现 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> 属性。 请注意，属性是只读的，旨在用于提供附加到控件主标题的默认副标题。

 [!code-csharp[WebParts_IWebPart_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#5)]
 [!code-vb[WebParts_IWebPart_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#5)]

 此代码示例的第二部分演示如何 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 在控件中引用实现接口的用户控件 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> ，以及如何 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 在控件上以声明方式设置可写属性。 在浏览器中加载页面后，请注意，在 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> 用户控件的实现代码中设置的属性的默认值将追加到控件标题栏中的标题。

 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的标题。</summary>
        <value>包含控件标题的字符串。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件标题栏中的可见标题文本由 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> 属性设置。

 如果没有为控件提供标题，则 Web 部件控件集会自动计算要用作标题的默认字符串。 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>。 此外，还可以提供追加到标题字符串的默认副标题。 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>。



## Examples
 下面的代码示例演示如何声明和编程方式使用 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> 属性。 该示例的完整源代码位于类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 。

 此代码示例的第一部分演示用户控件如何实现 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> 属性。

 [!code-csharp[WebParts_IWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#4)]
 [!code-vb[WebParts_IWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#4)]

 此代码示例的第二部分演示用户控件中的方法， <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> 当用户从页面上的单选按钮中选择相应的属性名称、在文本框中设置新值，然后单击 "**更新**" 按钮时，该方法以编程方式设置属性的值。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]

 此代码示例的第三部分演示如何 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 在控件中引用实现接口的用户控件 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> ，以及如何 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> 在控件上以声明方式设置该属性。

 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Title" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="TitleIconImageUrl">
      <MemberSignature Language="C#" Value="public string TitleIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TitleIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图像的 URL，该图像用于在控件自身的标题栏中表示 Web 部件控件。</summary>
        <value>表示图像的 URL 的字符串。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A>属性提供了一种将图标与控件相关联的方法 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 该图标将显示在控件自己的标题栏中。 对于主题一致性，应用程序开发人员可能希望使此图标类似于在 Web 部件控件（属性中引用的图像）中的控件的图像 <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> 。

 在 Web 部件控件集中实现该属性时， <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> 最终用户可以对其进行个性化设置，以更改控件的标题栏中显示的图像或图标。



## Examples
 下面的代码示例演示如何声明和编程方式使用 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> 属性。 该示例的完整源代码位于类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 。

 此代码示例的第一部分演示用户控件如何实现 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> 属性。

 [!code-csharp[WebParts_IWebPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#6)]
 [!code-vb[WebParts_IWebPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#6)]

 此代码示例的第二部分演示用户控件中的方法， <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> 当用户从页面上的单选按钮中选择相应的属性名称、在文本框中设置新值，然后单击 "**更新**" 按钮时，该方法以编程方式设置属性的值。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]

 此代码示例的第三部分演示如何 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 在控件中引用实现接口的用户控件 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> ，以及如何 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> 在控件上以声明方式设置该属性。 请注意，如果未向真实图像提供 URL，则会在标题栏中显示图标占位符。

 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="TitleUrl">
      <MemberSignature Language="C#" Value="public string TitleUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TitleUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置有关 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件补充信息的 URL。</summary>
        <value>一个字符串，表示有关 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件更多信息的 URL。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 为属性分配 URL 时 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> ，控件的标题将变为链接。 此属性的目的是为最终用户提供一种方便的方法来访问有关控件的其他信息。 其他信息可能提供版权数据、联系数据、有关控件创建者的详细信息，或控件用途的摘要。

> [!NOTE]
>  通常，不使用 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> 属性链接到帮助内容。 为控件提供帮助链接的最佳方式是使用 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> 属性。



## Examples
 下面的代码示例演示如何声明和编程方式使用 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> 属性。 该示例的完整源代码位于类概述的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 。

 此代码示例的第一部分演示用户控件如何实现 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> 属性。

 [!code-csharp[WebParts_IWebPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#7)]
 [!code-vb[WebParts_IWebPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#7)]

 此代码示例的第二部分演示用户控件中的方法， <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> 当用户从页面上的单选按钮中选择相应的属性名称、在文本框中设置新值，然后单击 "**更新**" 按钮时，该方法以编程方式设置属性的值。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]

 此代码示例的第三部分演示如何 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 在控件中引用实现接口的用户控件 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> ，以及如何 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> 在控件上以声明方式设置该属性。 请注意，如果未提供实际页面的 URL，然后用户单击标题栏中的链接，则会出现一条错误消息。

 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
  </Members>
</Type>
