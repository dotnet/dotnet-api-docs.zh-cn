<Type Name="WebPartTransformerAttribute" FullName="System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="29baf01adddf50b602d215af5dd2937e527fc4e7" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86627937" /></Metadata><TypeSignature Language="C#" Value="public sealed class WebPartTransformerAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebPartTransformerAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebPartTransformerAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartTransformerAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type WebPartTransformerAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>标识转换器所支持的连接点类型。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 转换器用于在两个不兼容的连接点之间转换两个 Web 部件控件之间的数据。 连接点在通过不同的接口提供或使用数据时不兼容。 例如，实现类型为的提供者连接点的提供程序 <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> 无法直接连接到应为类型的提供者连接点的使用者 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 。 相反，必须使用转换器来连接两个连接点。 可以通过从类派生类来创建自定义转换器 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute>特性应用于 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 类。 它定义了提供程序连接点的类型，以及转换器支持的使用者连接点的类型。 转换器支持的使用者和提供者连接点的类型必须与使用者和提供程序 Web 部件控件的连接点匹配才能在控件之间建立连接。 在运行时，可以通过和方法检索特定转换器支持的连接点的类型 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.GetConsumerType%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.GetProviderType%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何将 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute> 属性与自定义类结合使用 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 。 特性指示 `RowToStringTransformer` 类可以将类型的提供程序连接点转换 `IWebPartRow` 为类型的使用者连接点 `IString` 。  
  
 此代码示例摘自类概述中的一个更大的示例 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 。  
  
 [!code-csharp[WebParts_WebPartTransformer_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartTransformer_Overview/CS/TransformerSource.cs#4)]
 [!code-vb[WebParts_WebPartTransformer_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartTransformer_Overview/VB/TransformerSource.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartTransformerAttribute (Type consumerType, Type providerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type consumerType, class System.Type providerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.#ctor(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (consumerType As Type, providerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartTransformerAttribute(Type ^ consumerType, Type ^ providerType);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute : Type * Type -&gt; System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute" Usage="new System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute (consumerType, providerType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="consumerType" Type="System.Type" />
        <Parameter Name="providerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="consumerType">使用者连接点所支持的接口的 <see cref="T:System.Type" />。</param>
        <param name="providerType">提供者连接点所支持的接口的 <see cref="T:System.Type" />。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.%23ctor%2A>构造函数为转换器设置使用者连接点类型和提供程序连接点类型。 这些值可 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.ConsumerType%2A> 分别通过属性和属性进行检索 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.ProviderType%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何将 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute> 属性与自定义类结合使用 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 。 特性指示 `RowToStringTransformer` 类可以将类型的提供程序连接点转换 `IWebPartRow` 为类型的使用者连接点 `IString` 。  
  
 此代码示例摘自类概述中的一个更大的示例 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 。  
  
 [!code-csharp[WebParts_WebPartTransformer_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartTransformer_Overview/CS/TransformerSource.cs#4)]
 [!code-vb[WebParts_WebPartTransformer_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartTransformer_Overview/VB/TransformerSource.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">未指定 <paramref name="consumerType" /> 或 <paramref name="providerType" />。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="consumerType" /> 等于 <paramref name="providerType" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="ConsumerType">
      <MemberSignature Language="C#" Value="public Type ConsumerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ConsumerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.ConsumerType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsumerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ConsumerType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConsumerType : Type" Usage="System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.ConsumerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取使用者连接点所支持的接口的 <see cref="T:System.Type" />。</summary>
        <value>使用者连接点所支持的接口的 <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.ConsumerType%2A>属性通过构造函数进行设置 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.%23ctor%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConsumerType">
      <MemberSignature Language="C#" Value="public static Type GetConsumerType (Type transformerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetConsumerType(class System.Type transformerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.GetConsumerType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConsumerType (transformerType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetConsumerType(Type ^ transformerType);" />
      <MemberSignature Language="F#" Value="static member GetConsumerType : Type -&gt; Type" Usage="System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.GetConsumerType transformerType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="transformerType">转换器的类型。</param>
        <summary>返回转换器在连接点可以接受的使用者类型。</summary>
        <returns>使用者连接点的 <see cref="T:System.Type" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>对象和 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 对象使用 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.GetConsumerType%2A> 方法来确定转换器的使用者类型是否与 Web 部件控件的使用者连接点匹配。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">未指定 <paramref name="transformerType" />。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="transformerType" /> 不是从 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> 类派生的对象。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderType">
      <MemberSignature Language="C#" Value="public static Type GetProviderType (Type transformerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetProviderType(class System.Type transformerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.GetProviderType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProviderType (transformerType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetProviderType(Type ^ transformerType);" />
      <MemberSignature Language="F#" Value="static member GetProviderType : Type -&gt; Type" Usage="System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.GetProviderType transformerType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="transformerType">转换器的类型。</param>
        <summary>返回转换器在连接点可以接受的提供者类型。</summary>
        <returns>提供者连接点的 <see cref="T:System.Type" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>对象和 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 对象使用 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.GetProviderType%2A> 方法来确定转换器的提供程序类型是否与 Web 部件控件的提供程序连接点匹配。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">未指定 <paramref name="transformerType" />。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="transformerType" /> 不是从 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> 类派生的对象。</exception>
      </Docs>
    </Member>
    <Member MemberName="ProviderType">
      <MemberSignature Language="C#" Value="public Type ProviderType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ProviderType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.ProviderType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ProviderType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderType : Type" Usage="System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.ProviderType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取提供者连接点所支持的接口的 <see cref="T:System.Type" />。</summary>
        <value>提供者连接点所支持的接口的 <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.ProviderType%2A>属性通过构造函数进行设置 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformerAttribute.%23ctor%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
