<Type Name="IWebPartField" FullName="System.Web.UI.WebControls.WebParts.IWebPartField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33afb8f6041594bb9feb62847562a8e12e08d2f0" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69395208" /></Metadata><TypeSignature Language="C#" Value="public interface IWebPartField" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPartField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPartField" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPartField" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPartField" />
  <TypeSignature Language="F#" Value="type IWebPartField = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定义使用单个字段数据连接两个服务器控件的提供者接口。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此接口设计为与 Web 部件连接一起使用。 在 Web 部件连接中，位于区域中的两个服务器控件 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 建立连接并共享数据，其中一个控件充当使用者，另一个控件充当提供者。 在 Web 部件连接中共享数据的机制是接口实例，提供程序通过回调方法向使用者提供服务。 若要建立连接，使用者和提供程序都必须使用相同的接口类型来共享数据。 如果使用者不能识别提供程序发送的接口类型，仍可以通过转换器（对象）连接控件，将 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> 访问接口实例发送到使用者识别的类型。 有关连接的详细信息，请参阅 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 和[Web 部件连接概述](https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100))。  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebPartField>接口是包含在 Web 部件控件集的提供程序接口，它是一个标准接口，用于基于数据字段创建连接。 你还可以创建自定义接口以与 Web 部件连接一起使用，但在许多数据驱动的 Web 应用程序中，可以使用接口基于公共行（有关详细信息，请参阅 <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> 接口）、表（有关详细信息、查看 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 接口）或数据源中的字段创建连接 <xref:System.Web.UI.WebControls.WebParts.IWebPartField> 。 在典型连接中， <xref:System.Web.UI.WebControls.WebParts.WebPart> 作为提供者的控件将实现 <xref:System.Web.UI.WebControls.WebParts.IWebPartField> 接口，并向使用者提供一个特殊的回调方法的接口实例。 例如，提供程序可以 <xref:System.Web.UI.WebControls.WebParts.IWebPartField> 为用户信息表中包含 Web 用户的邮政编码数据的字段实现接口。 <xref:System.Web.UI.WebControls.WebParts.WebPart>作为使用者的另一个控件将定义接收接口实例的特殊方法，然后可以提取邮政编码数据，并根据邮政编码查找并显示天气信息。  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebPartField>接口有两个公开的成员。 <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A>属性返回有关封装在对象中的数据字段的架构信息 <xref:System.ComponentModel.PropertyDescriptor> 。 此 <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> 方法声明一个方法，当调用回调方法时，实现程序（如提供程序控件）使用该方法检索接口实例的字段数据。  
  
   
  
## Examples  
 下面的代码示例演示如何使用接口在两个控件之间创建静态连接 <xref:System.Web.UI.WebControls.WebParts.IWebPartField> 。 此代码示例包含三个部分：  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPart>可使用接口形成连接的两个自定义控件的源代码 <xref:System.Web.UI.WebControls.WebParts.IWebPartField> ，其中一个控件充当提供者，另一个控件充当使用者。  
  
-   承载控件并以持久性格式声明静态连接的网页。  
  
-   示例代码运行时所发生的情况的说明。  
  
 此代码示例的第一部分是两个自定义控件的源代码。 首先是实现接口的提供程序的代码 <xref:System.Web.UI.WebControls.WebParts.IWebPartField> 。 为简单起见，在本示例中，提供程序创建了包含一些数据的表，而不是连接到数据库。 `GetConnectionInterface`方法用作提供程序的连接点，后者是将接口实例返回给使用者的回调方法。 对于使用者，它会在名为的方法中从提供程序中检索接口实例 `SetConnectionInterface` ，该实例使用 `ConnectionConsumer` 特性进行标记。 检索接口的实例后，使用者在其 `OnPreRender` 方法中调用 <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> 提供程序中方法的实现来检索实际数据。  
  
 要使代码示例运行，必须编译此源代码。 可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。 此代码示例使用动态编译。 有关演示如何编译的演练，请参阅[演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 此代码示例的第二部分是声明静态连接并承载控件的网页。 页面顶部附近是 `Register` 声明 App_Code 目录中包含的源代码的命名空间的指令。 使用元素声明连接 `<asp:webpartconnection>` 。 自定义使用者和提供程序控件是在元素内的元素中声明的，在元素中 `<zonetemplate>` `<asp:webpartzone>` ，这是必需的，它们必须位于继承自类的区域内 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 。  
  
 [!code-aspx-csharp[WebParts_IWebPartField_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPartField_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/Defaultvb.aspx#1)]  
  
 在浏览器中加载页面。 使用者控件显示从指定字段提供的数据，提供程序通过接口的实例提供该数据 <xref:System.Web.UI.WebControls.WebParts.IWebPartField> 。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartRow" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartTable" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)">Web 部件连接概述</related>
  </Docs>
  <Members>
    <Member MemberName="GetFieldValue">
      <MemberSignature Language="C#" Value="public void GetFieldValue (System.Web.UI.WebControls.WebParts.FieldCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetFieldValue(class System.Web.UI.WebControls.WebParts.FieldCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetFieldValue (callback As FieldCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetFieldValue(System::Web::UI::WebControls::WebParts::FieldCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldValue : System.Web.UI.WebControls.WebParts.FieldCallback -&gt; unit" Usage="iWebPartField.GetFieldValue callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.UI.WebControls.WebParts.FieldCallback" />
      </Parameters>
      <Docs>
        <param name="callback">一个 <see cref="T:System.Web.UI.WebControls.WebParts.FieldCallback" /> 委托，包含接收数据的方法的地址。</param>
        <summary>返回字段的值，该字段由接口用作两个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件之间的连接基础。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可检索接口传递的数据字段值。  
  
   
  
## Examples  
 下面的代码示例演示方法的实现和使用 <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> 。 完整的示例显示在接口的类概述中 <xref:System.Web.UI.WebControls.WebParts.IWebPartField> 。 提供程序控件实现 <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> 方法，并返回数据表中特定字段的值。 使用者控件 <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> 在其方法中调用方法 `OnPreRender` ，以便可以将数据的值写入页面。  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptor Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor Schema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPartField.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptor ^ Schema { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schema : System.ComponentModel.PropertyDescriptor" Usage="System.Web.UI.WebControls.WebParts.IWebPartField.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于在两个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件之间共享数据的数据字段的架构信息。</summary>
        <value><see cref="T:System.ComponentModel.PropertyDescriptor" />，描述该数据字段的架构信息。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性为接口传递的数据提供属性信息。 转换器和使用者控件可以查询此属性，以获取有关 <xref:System.Web.UI.WebControls.WebParts.IWebPartField> 提供程序发送的接口实例中包含的字段的类型、内容和其他详细信息的信息。  
  
   
  
## Examples  
 下面的代码示例演示如何实现和使用 <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> 属性。 完整的示例显示在接口的类概述中 <xref:System.Web.UI.WebControls.WebParts.IWebPartField> 。 提供程序控件实现 <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> 属性。 然后，在其 `GetFieldValue` 方法中使用属性来检索字段值。  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>
