<Type Name="GenericWebPart" FullName="System.Web.UI.WebControls.WebParts.GenericWebPart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="314760911b268006226b3b70084771180e8cf800" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89913529" /></Metadata><TypeSignature Language="C#" Value="public class GenericWebPart : System.Web.UI.WebControls.WebParts.WebPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GenericWebPart extends System.Web.UI.WebControls.WebParts.WebPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
  <TypeSignature Language="VB.NET" Value="Public Class GenericWebPart&#xA;Inherits WebPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class GenericWebPart : System::Web::UI::WebControls::WebParts::WebPart" />
  <TypeSignature Language="F#" Value="type GenericWebPart = class&#xA;    inherit WebPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.WebPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.ToolboxItem(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.ToolboxItem(false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>对不是 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的服务器控件进行包装，使其在运行时与真正的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件具有相同的外观和行为。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>控件存在，以提供不是控件的服务器控件的运行时包装 <xref:System.Web.UI.WebControls.WebParts.WebPart> 程序，以便可以在 Web 部件页面和应用程序中使用此类控件。 当开发人员将服务器控件（例如用户控件、ASP.NET 服务器控件或现有的自定义控件）添加到 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 控件时， <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 控件将在运行时自动包装服务器控件，以便它们可以表现出与真实控件相同的功能 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。  
  
 下表比较了控件和控件并对其进行了对比 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> <xref:System.Web.UI.WebControls.WebParts.WebPart> 。  
  
|<xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 控件|<xref:System.Web.UI.WebControls.WebParts.WebPart> 控件|  
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|存在用于对不是控件的服务器控件进行 <xref:System.Web.UI.WebControls.WebParts.WebPart> Web 部件功能，使任何 ASP.NET、自定义控件或用户控件都可以参与 Web 部件应用程序。|存在，用于创建在中内置了本机 Web 部件功能的自定义 ASP.NET 控件。 这包括个性化设置、连接、导入和导出以及拖放功能。|  
|永远不会在页的标记中声明。 它仅用于在运行时包装服务器控件，并为包装控件 (或子控件) 控件的全部功能 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。|可在设计时在页面的标记中声明，类似于 ASP.NET 服务器控件，只不过它是在区域中声明的 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 。|  
|包含其子控件并将其集成到 Web 部件个性化设置过程中，以便它可用作真正的 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件。 这会自动发生，使开发人员可以轻松地在 Web 部件的应用程序中使用服务器控件和用户控件。|将自动包含在 Web 部件的个性化设置过程中。|  
|可以通过使用方法在运行时以编程方式访问 (， <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> 并向其传递子服务器控件) ，如真正的 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件或标准 ASP.NET 控件。|可以在运行时以编程方式访问，如标准 ASP.NET 控件。|  
  
 用户受益于 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 控制，因为它提供一致的用户体验。 任何服务器控件都可以像控件一样工作 <xref:System.Web.UI.WebControls.WebParts.WebPart> ，并具有相同的用户界面 (UI) 元素（例如谓词、图标、标题和标头）。 开发人员受益于 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 控件，因为它使他们能够重复使用 Web 部件应用程序中的现有用户控件和服务器控件。  
  
> [!NOTE]
>  创建 Web 部件页面时，无需执行任何操作即可使现有用户控件或自定义控件与控件一起包装 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 。 只需 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 以编程方式或通过在页的标记中声明的方式将服务器或用户控件添加到区域，Web 部件控件集就会 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 在运行时自动使用对象包装控件。  
  
 由于放置在区域中的服务器控件 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 在运行时使用控件进行包装，因此开发人员可以使用普通的服务器和用户控件，就像它们是 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件一样。 请注意，如果在中声明了继承自基类的自定义控件 <xref:System.Web.UI.Control> <xref:System.Web.UI.WebControls.WebParts.WebPartZone> ，这些控件将不支持内部属性的使用 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 因此，你不能声明 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 此类控件的属性，包括属性 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> 和属性等属性 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> 。 相反，其他类型的服务器控件 (例如， <xref:System.Web.UI.WebControls.WebParts.WebPart> 从) 继承的控件、用户控件和自定义控件 <xref:System.Web.UI.WebControls.WebControl> 可以声明这些属性，因为它们支持使用 expando 属性。  
  
 Expando 属性实际上是可以通过接口动态添加到类的字符串 <xref:System.Web.UI.IAttributeAccessor> 。 实现此接口的控件（包括 <xref:System.Web.UI.WebControls.WebControl> 类及其子级）可以使用 expando 属性。 由于基类不 <xref:System.Web.UI.Control> 支持 expando 属性，因此当从类继承的自定义控件 <xref:System.Web.UI.Control> 放在中， <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 并 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 在运行时使用控件进行包装时，Web 部件控件集无法将内部属性动态添加 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 到自定义控件。 在这种情况下，您有两种选择。 可以在没有属性的情况下使用自定义控件 <xref:System.Web.UI.WebControls.WebParts.IWebPart> ，也可以 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 在自定义控件中实现该接口，使其可以使用这些属性。  
  
 作为从继承的控件如何 <xref:System.Web.UI.WebControls.WebControl> 使用属性的示例 <xref:System.Web.UI.WebControls.WebParts.IWebPart> ，如果在 <xref:System.Web.UI.WebControls.Calendar> 设计时) 在区域 (中声明 ASP.NET 控件 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ，即使此控件不是从类继承并且不以 <xref:System.Web.UI.WebControls.WebParts.WebPart> 本机方式包含 <xref:System.Web.UI.WebControls.WebParts.WebPart> 成员，你仍可以将其视为完全不包含成员 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 可以 <xref:System.Web.UI.WebControls.WebParts.WebPart> 在 calendar 控件上声明属性，如 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> 、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> 和其他。 在运行时，可以使用 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> 方法（该方法返回 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 动态包装日历控件的控件），并以编程方式与使用控件完全相同的方式进行处理，并可 <xref:System.Web.UI.WebControls.WebParts.WebPart> 访问所有相同的属性、事件和方法。  
  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>控件具有一个关键属性，可用于访问其基础服务器控件： <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> 属性。 此属性允许开发人员以编程方式访问服务器控件。 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A>如果设置了属性，则控件也使用属性 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 来访问子控件中的个性化设置数据，并执行授权 <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> 。  
  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>控件具有多个其他属性，所有这些属性都重写从基类继承的属性 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。 如前所述，可以将这些属性与任何子控件一起使用，以便它能够作为 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件。 一个重要的属性是 <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> 属性; 它确定是否可以导出所有的可导出属性（或只是标记为不敏感的属性）。 从类继承的面向 UI 的属性（如、、、、 <xref:System.Web.UI.WebControls.WebParts.WebPart> <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A> <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Description%2A> <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Height%2A> <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A> <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl%2A> 和 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Width%2A> ）可以在放置于区域中的任何服务器控件的声明性标记中设置 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 。  
  
 类中的重要方法 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 包括 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateControlCollection%2A> 方法，该方法可创建控件的集合 (包括与控件相关联) 的子控件 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> ，以及将 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Render%2A> 所有呈现委托给已包装的子控件的方法。 类的构造函数 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 是受保护的，旨在供内部使用或用于扩展性方案。  
  
 使用控件有一些更有用的见解 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 。 如果要为类中重写的属性设置默认值 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> ，则用户控件或自定义服务器控件可以实现 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 和 <xref:System.Web.UI.WebControls.WebParts.IWebActionable> 接口，并重写它们的成员。 在运行时， <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 控件将从实现接口的子控件获取其实现的属性的值。 如果控件通过使用 metadata 特性) 将其任何属性定义为可个性化的 (`Personalizable` ，则 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 控件将在运行时自动启用这些属性以便进行个性化，就像控件上的可个性化属性一样 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。  
  
 如果要为控件提供 Web 部件编辑功能，可以实现 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 接口。 在运行时，当 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> 调用方法时，属性的 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 控件代码 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.WebBrowsableObject%2A> 将调用到子控件中的相同属性，并使用子控件的实现来创建关联的自定义 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 控件。  
  
   
  
## Examples  
 下面的代码示例演示控件如何 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 在运行时自动包装不是控件的服务器控件 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。  
  
 此代码示例的第一部分包含一个 Web 部件页面，其中包含两个 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 控件。 每个区域中都是标准的 ASP.NET 服务器控件。 由于控件在区域中，因此在 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 编译页面时，这些控件将自动与控件一起包装 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 。 因此，可以 <xref:System.Web.UI.WebControls.WebParts.WebPart> 在这些控件上声明类属性。 在浏览器中加载页面后，如果单击 " **显示所有属性值** " 按钮，则每个控件的详细信息将显示在标签中。 若要显示 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 控件的工作方式， <xref:System.Web.UI.WebControls.Calendar> 第一个区域中的控件在 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> .aspx 页的声明性标记中设置了某些属性，而该控件没有 <xref:System.Web.UI.WebControls.BulletedList> 。 加载页面后，请注意两个控件的属性值之间的差异，并且两者都具有父 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 控件。  
  
 [!code-aspx-csharp[WebParts_GenericWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#1)]
 [!code-aspx-vb[WebParts_GenericWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#1)]  
  
 此代码示例的第二部分演示以编程方式访问控件的某些属性的分部类 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 。 请注意，在 `Page_Load` 方法中， <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> 方法用于检索包装服务器控件的控件的运行时实例 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 。 这种获取对父控件的引用的方法 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 使你能够以编程方式使用普通服务器或用户控件，就像它 <xref:System.Web.UI.WebControls.WebParts.WebPart> 在运行时是控件。  
  
 [!code-csharp[WebParts_GenericWebPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#3)]
 [!code-vb[WebParts_GenericWebPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>有些情况下，需要从 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 类继承。 如果开发人员希望在创建控件时在构造函数中实现某些自定义操作，则会出现这种情况 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 。 例如，你可能想要将子控件存储在类中除控件集合以外的位置 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 。 如果从 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 类继承，还需要从 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 类继承并重写其方法，以 <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)" /> 使其能够创建自定义控件。</para></block>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/hhy9ewf1(v=vs.100)">ASP.NET Web 部件概述</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/k3w2y2tf(v=vs.100)">Web 部件控制集概述</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/z36h8be9(v=vs.100)">Web 部件个性化概述</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal GenericWebPart (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.GenericWebPart.#ctor(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (control As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; GenericWebPart(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.GenericWebPart : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.GenericWebPart" Usage="new System.Web.UI.WebControls.WebParts.GenericWebPart control" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">成为 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 控件实例的子控件的服务器控件。</param>
        <summary>通过传入对成为子控件的控件的引用来初始化 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 控件的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.%23ctor%28System.Web.UI.Control%29> 构造函数由 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 控件在其方法中调用 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> ，以便 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 通过传入对子服务器控件的引用来初始化控件的实例。 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>创建对象后，可以使用属性引用子控件 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="control" /> 的类型为 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />。  
  
- 或 - 
 <paramref name="control" /> 具有 <see langword="null" /> 或空的 <see cref="P:System.Web.UI.Control.ID" /> 属性。  
  
- 或 - 
 <paramref name="control" /> 已被输出缓存。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CatalogIconImageUrl">
      <MemberSignature Language="C#" Value="public override string CatalogIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CatalogIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CatalogIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图像的 URL，该图像在控件目录中表示一个 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 控件。</summary>
        <value>表示图像的 URL 的字符串，该图像用于在目录中表示控件。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 部件应用程序通常会提供一个目录 (或) 列表，用户可将这些控件添加到页面中。 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A>控件的属性包含图像的 URL，该图像在目录中出现时表示该控件。 此属性将重写基属性，以便可以访问子控件上的属性，就像它是真正的 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件一样。  
  
 您可以在网页的声明性标记中，也可以通过编程方式设置控件的属性的值。 若要在每次使用控件时为属性提供默认值，可以实现 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 接口。  
  
   
  
## Examples  
 下面的代码示例演示如何声明和编程方式使用 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A> 属性。 该示例的完整源代码位于概述主题的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 。  
  
 此代码示例的第一部分演示了如何 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A> 在控件内的服务器控件上以声明方式设置属性 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 。  
  
 [!code-aspx-csharp[WebParts_GenericWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#2)]
 [!code-aspx-vb[WebParts_GenericWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#2)]  
  
 此代码示例的第二部分演示当用户单击 " **显示所有属性值** " 按钮时，以编程方式访问属性值的方法。  
  
 [!code-csharp[WebParts_GenericWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts_GenericWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="ChildControl">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ChildControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ChildControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ ChildControl { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildControl : System.Web.UI.Control" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对子控件的引用，该子控件在运行时将由 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 控件包装。</summary>
        <value>引用被包装的子控件的 <see cref="T:System.Web.UI.Control" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A>属性提供访问由控件包装的子控件的方法 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 。 例如， <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 控件使用 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> 属性从子控件提取个性化设置数据。  
  
   
  
## Examples  
 下面的代码示例演示如何以编程方式使用 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> 属性。 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A>以编程方式访问属性以检索有关控件的子控件的信息 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 。 该示例的完整源代码位于概述主题的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 。  
  
 [!code-csharp[WebParts_GenericWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts_GenericWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="genericWebPart.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>由 ASP.NET 页框架调用，以通知服务器控件在准备回发或呈现时使用基于撰写的实现来创建其所包含任何子控件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="genericWebPart.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>重写基方法，以创建由 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 控件所包装的子控件组成的只读集合。</summary>
        <returns>一个包含子控件的 <see cref="T:System.Web.UI.ControlCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateControlCollection%2A>方法创建一个专用的只读集合，该集合包含一个控件的子控件 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 。 创建此集合是为了使开发人员不能手动将其他控件添加到 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 控件。  
  
 如果要在 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 不将子控件添加到专用集合的情况下创建自定义控件，可以从类派生 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> ，重写 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.%23ctor%2A> 构造函数，并提供不同的方法来存储由属性引用的子控件 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateEditorParts () As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::EditorPartCollection ^ CreateEditorParts();" />
      <MemberSignature Language="F#" Value="override this.CreateEditorParts : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="genericWebPart.CreateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回自定义 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件的集合，这些控件可用于在 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 控件的子控件处于编辑模式时对其进行编辑。</summary>
        <returns>一个 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" />，其中包含与服务器控件关联的自定义 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateEditorParts%2A>当控件进入编辑显示模式时，将调用方法。 此方法将重写从类继承的基方法， <xref:System.Web.UI.WebControls.WebParts.WebPart> 因为对于 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 控件，它是正在编辑的子控件，而不是 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 控件本身。 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateEditorParts%2A>方法将子控件强制转换为 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 接口，该接口允许编辑控件。  
  
 此重写的方法使不是从类派生的服务器控件（ <xref:System.Web.UI.WebControls.WebParts.WebPart> 包括 ASP.NET 服务器控件和自定义服务器控件）可作为普通控件进行编辑 <xref:System.Web.UI.WebControls.WebParts.WebPart> 。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public override string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一条短语，该短语在服务器控件的工具提示和目录中用来概述该控件的作用。</summary>
        <value>字符串，简要概述控件的功能。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Description%2A>属性值通常用作目录中用于提供服务器控件列表和控件标题栏中的工具提示的控件的描述性字符串。 当用户将鼠标指针置于控件标题栏中的标题文本上时，将在工具提示中显示属性的内容。  
  
 此属性将重写基属性，以便可以访问子控件上的属性，就像它是真正的 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件一样。  
  
 您可以在网页的声明性标记中，也可以通过编程方式设置控件的属性的值。 若要在每次使用控件时为属性提供默认值，可以实现 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 接口。  
  
   
  
## Examples  
 下面的代码示例演示如何声明和编程方式使用 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Description%2A> 属性。 该示例的完整源代码位于概述主题的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 。  
  
 此代码示例的第一部分演示了如何 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Description%2A> 在控件内的服务器控件上以声明方式设置属性 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 。  
  
 [!code-aspx-csharp[WebParts_GenericWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#2)]
 [!code-aspx-vb[WebParts_GenericWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#2)]  
  
 此代码示例的第二部分演示如何以编程方式访问属性，以便在标签中显示其值。  
  
 [!code-csharp[WebParts_GenericWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts_GenericWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Height As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Height { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.Height : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置控件的高度（以像素为单位）。</summary>
        <value>一个指示控件高度的 <see cref="T:System.Web.UI.WebControls.Unit" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性将重写基属性，以便在子控件上获取或设置高度，就像它是真正的 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件一样。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Height" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public override sealed string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置控件的 ID。 此值是不可继承的。</summary>
        <value>包含控件 ID 的字符串。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.GenericWebPart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="genericWebPart.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示在客户端上呈现 HTML 内容的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将对控件内容的呈现委托给子控件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtitle">
      <MemberSignature Language="C#" Value="public override string Subtitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subtitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Subtitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Subtitle { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Subtitle : string" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个字符串，该字符串与 <see cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Title" /> 属性值连接即形成控件的完整标题。</summary>
        <value>作为控件副标题的字符串。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle%2A> 属性可以选择返回将追加到自定义控件标题的标准副标题字符串 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 。  
  
 此属性将重写基属性，以便可以访问子控件上的属性，就像它是真正的 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件一样。  
  
 如果在 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> 用户控件或自定义控件中实现属性来提供默认值，则 Web 部件控件集会在运行时自动将其追加到控件的属性的值， <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A> 以创建完整的标题。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 控件的标题。</summary>
        <value>一个表示部件控件的标题的字符串。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 部件控件的标题栏中的可见标题文本由 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A> 属性设置。  
  
 如果没有为控件提供标题，则 Web 部件控件集会自动计算要用作标题的默认字符串。 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>。 此外，还可以提供追加到标题字符串的默认副标题。 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle%2A>。  
  
 此属性将重写基属性，以便可以访问子控件上的属性，就像它是真正的 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件一样。  
  
 您可以在网页的声明性标记中，也可以通过编程方式设置控件的属性的值。 若要在每次使用控件时为属性提供默认值，可以实现 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 接口。  
  
   
  
## Examples  
 下面的代码示例演示如何声明和编程方式使用 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A> 属性。 该示例的完整源代码位于概述主题的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 。  
  
 此代码示例的第一部分演示了如何 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A> 在控件内的服务器控件上以声明方式设置属性 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 。  
  
 [!code-aspx-csharp[WebParts_GenericWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#2)]
 [!code-aspx-vb[WebParts_GenericWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#2)]  
  
 此代码示例的第二部分演示如何以编程方式访问属性，以便在标签中显示其值。  
  
 [!code-csharp[WebParts_GenericWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts_GenericWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="TitleIconImageUrl">
      <MemberSignature Language="C#" Value="public override string TitleIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TitleIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TitleIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置图像的 URL，该图像用于在 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 控件自身的标题栏中表示该控件。</summary>
        <value>表示图像的 URL 的字符串。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl%2A>属性提供了一种将图标与控件相关联的方法 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 。 该图标将显示在控件自己的标题栏中。 对于主题一致性，应用程序开发人员通常会使此图标类似于在 Web 部件控件目录中表示控件的图像 (属性) 中引用的图像 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A> 。  
  
 在 Web 部件控件集中实现该属性时， <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl%2A> 最终用户可以对其进行个性化设置，以更改控件的标题栏中显示的图像或图标。  
  
 此属性将重写基属性，以便可以访问子控件上的属性，就像它是真正的 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件一样。  
  
 您可以在网页的声明性标记中，也可以通过编程方式设置控件的属性的值。 若要在每次使用控件时为属性提供默认值，可以实现 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 接口。  
  
   
  
## Examples  
 下面的代码示例演示如何声明和编程方式使用 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl%2A> 属性。 该示例的完整源代码位于概述主题的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 。  
  
 此代码示例的第一部分演示了如何 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl%2A> 在控件内的服务器控件上以声明方式设置属性 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 。  
  
 [!code-aspx-csharp[WebParts_GenericWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#2)]
 [!code-aspx-vb[WebParts_GenericWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#2)]  
  
 此代码示例的第二部分演示如何以编程方式访问属性，以便在标签中显示其值。  
  
 [!code-csharp[WebParts_GenericWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts_GenericWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="TitleUrl">
      <MemberSignature Language="C#" Value="public override string TitleUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TitleUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TitleUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置有关 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 控件补充信息的 URL。</summary>
        <value>一个字符串，表示有关 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 控件更多信息的 URL。 默认值为空字符串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 为属性分配 URL 时 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl%2A> ，控件的标题将变为链接。 此属性为最终用户提供了一种方便的方法来访问有关控件的其他信息。 其他信息可能包括版权数据、联系数据、有关控件创建者的详细信息，或控件用途的摘要。  
  
 此属性将重写基属性，以便可以访问子控件上的属性，就像它是真正的 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件一样。  
  
 您可以在网页的声明性标记中，也可以通过编程方式设置控件的属性的值。 若要在每次使用控件时为属性提供默认值，可以实现 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 接口。  
  
   
  
## Examples  
 下面的代码示例演示如何声明和编程方式使用 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl%2A> 属性。 该示例的完整源代码位于概述主题的 "示例" 部分 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 。  
  
 此代码示例的第一部分演示了如何 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl%2A> 在控件内的服务器控件上以声明方式设置属性 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 。  
  
 [!code-aspx-csharp[WebParts_GenericWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#2)]
 [!code-aspx-vb[WebParts_GenericWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#2)]  
  
 此代码示例的第二部分演示如何以编程方式访问属性，以便在标签中显示其值。  
  
 [!code-csharp[WebParts_GenericWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts_GenericWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPartVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Verbs As WebPartVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerbCollection ^ Verbs { System::Web::UI::WebControls::WebParts::WebPartVerbCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Verbs : System.Web.UI.WebControls.WebParts.WebPartVerbCollection" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 控件关联的自定义谓词的集合。</summary>
        <value>一个 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection" />，其中包含与 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 控件关联的自定义 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 对象。 默认值是 <see cref="F:System.Web.UI.WebControls.WebParts.WebPartVerbCollection.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 谓词派生自 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> 类，并提供用户界面 (UI) 用户可对控件执行的操作 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 。 通常，谓词在用户界面中表示为按钮、链接或菜单项。 有一些标准谓词可用于打开、关闭、编辑和最小化控件，以及用于导出控件定义或加载帮助文件的其他谓词。 这些谓词不包含在集合中 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Verbs%2A> ，因为该集合仅包含自定义谓词。  
  
 此属性将重写基属性，以便可以访问子控件上的属性，就像它是真正的 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件一样。 如果子控件实现 <xref:System.Web.UI.WebControls.WebParts.IWebActionable> 接口，并因此重写其 <xref:System.Web.UI.WebControls.WebParts.IWebActionable.Verbs%2A?displayProperty=nameWithType> 属性，则在对 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 控件调用属性时，控件将使用子控件的实现 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Verbs%2A?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 。  
  
 当你创建自定义谓词并将其添加到 <xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A> 集合时，你可以从控件以编程方式访问谓词 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Verbs%2A> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.IWebActionable.Verbs" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Verbs" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="WebBrowsableObject">
      <MemberSignature Language="C#" Value="public override object WebBrowsableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WebBrowsableObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.WebBrowsableObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property WebBrowsableObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ WebBrowsableObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebBrowsableObject : obj" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.WebBrowsableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对子控件的引用，以使该控件可由自定义 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件进行编辑。</summary>
        <value>一个 <see cref="T:System.Object" />，其中包括 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 控件的子控件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果子控件实现了 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 接口，并重写了其 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> 属性，则当用户选择控件进行编辑时， <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 控件将通过属性调入子控件 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> ，并使用该方法的子控件实现 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> 。 此机制允许不是控件的服务器控件或用户控件 <xref:System.Web.UI.WebControls.WebParts.WebPart> 使用 <xref:System.Web.UI.WebControls.WebParts.EditorPart> Web 部件应用程序中的自定义关联控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Width As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Width { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.Width : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebParts.GenericWebPart.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置控件的宽度（以像素为单位）。</summary>
        <value>一个指示控件宽度的 <see cref="T:System.Web.UI.WebControls.Unit" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性将重写基属性，以便在子控件上获取或设置宽度，就像它是真正的 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件一样。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Width" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
  </Members>
</Type>
