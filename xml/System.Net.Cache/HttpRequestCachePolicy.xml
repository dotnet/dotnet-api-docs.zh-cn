<Type Name="HttpRequestCachePolicy" FullName="System.Net.Cache.HttpRequestCachePolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8eef9be98a1acb66d5ef4d5e709e593a084e9122" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86803169" /></Metadata><TypeSignature Language="C#" Value="public class HttpRequestCachePolicy : System.Net.Cache.RequestCachePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpRequestCachePolicy extends System.Net.Cache.RequestCachePolicy" />
  <TypeSignature Language="DocId" Value="T:System.Net.Cache.HttpRequestCachePolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpRequestCachePolicy&#xA;Inherits RequestCachePolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequestCachePolicy : System::Net::Cache::RequestCachePolicy" />
  <TypeSignature Language="F#" Value="type HttpRequestCachePolicy = class&#xA;    inherit RequestCachePolicy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Net.Requests" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Net.Cache.RequestCachePolicy</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0b526-101">为通过使用 <see cref="T:System.Net.HttpWebRequest" /> 对象获取的资源定义应用程序的缓存要求。</span><span class="sxs-lookup"><span data-stu-id="0b526-101">Defines an application's caching requirements for resources obtained by using <see cref="T:System.Net.HttpWebRequest" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b526-102">可以通过使用 <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> 属性或应用程序或计算机配置文件来指定应用程序的默认缓存策略。</span><span class="sxs-lookup"><span data-stu-id="0b526-102">You can specify a default cache policy for your application by using the <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> property or the application or machine configuration files.</span></span> <span data-ttu-id="0b526-103">有关详细信息，请参阅[ &lt; requestCaching &gt; 元素 (网络设置) ](/dotnet/framework/configure-apps/file-schema/network/requestcaching-element-network-settings)。</span><span class="sxs-lookup"><span data-stu-id="0b526-103">For more information, see [&lt;requestCaching&gt; Element (Network Settings)](/dotnet/framework/configure-apps/file-schema/network/requestcaching-element-network-settings).</span></span>  
  
 <span data-ttu-id="0b526-104">可以通过使用属性为单个请求指定缓存策略 <xref:System.Net.WebRequest.CachePolicy%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0b526-104">You can specify the cache policy for an individual request by using the <xref:System.Net.WebRequest.CachePolicy%2A> property.</span></span>  
  
 <span data-ttu-id="0b526-105">不支持 Web 服务的缓存。</span><span class="sxs-lookup"><span data-stu-id="0b526-105">Caching for Web services is not supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b526-106">下面的代码示例为应用程序域创建默认缓存策略，并将其重写为请求。</span><span class="sxs-lookup"><span data-stu-id="0b526-106">The following code example creates a default cache policy for the application domain, and overrides it for a request.</span></span>  
  
 [!code-cpp[NclSimpleCache#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#2)]
 [!code-csharp[NclSimpleCache#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#2)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/network-programming/cache-management-for-network-applications"><span data-ttu-id="0b526-107">网络应用程序的缓存管理</span><span class="sxs-lookup"><span data-stu-id="0b526-107">Cache Management for Network Applications</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0b526-108">初始化 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0b526-108">Initializes a new instance of the <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b526-109">初始化 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0b526-109">Initializes a new instance of the <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b526-110">此构造函数将 <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> 属性初始化为 <xref:System.Net.Cache.HttpRequestCacheLevel.Default>。</span><span class="sxs-lookup"><span data-stu-id="0b526-110">This constructor initializes the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> property to <xref:System.Net.Cache.HttpRequestCacheLevel.Default>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b526-111">下面的代码示例演示如何使用此构造函数设置缓存策略。</span><span class="sxs-lookup"><span data-stu-id="0b526-111">The following code example demonstrates setting the cache policy using this constructor.</span></span>  
  
 [!code-cpp[NclSimpleCache#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#11)]
 [!code-csharp[NclSimpleCache#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (DateTime cacheSyncDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime cacheSyncDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheSyncDate As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(DateTime cacheSyncDate);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : DateTime -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy cacheSyncDate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheSyncDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="cacheSyncDate"><span data-ttu-id="0b526-112">一个 <see cref="T:System.DateTime" /> 对象，它指定必须重新验证缓存中存储的资源的时间。</span><span class="sxs-lookup"><span data-stu-id="0b526-112">A <see cref="T:System.DateTime" /> object that specifies the time when resources stored in the cache must be revalidated.</span></span></param>
        <summary><span data-ttu-id="0b526-113">使用指定的缓存同步日期初始化 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0b526-113">Initializes a new instance of the <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> class using the specified cache synchronization date.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b526-114">缓存同步日期允许指定必须重新验证缓存内容的绝对日期。</span><span class="sxs-lookup"><span data-stu-id="0b526-114">The cache synchronization date allows you to specify an absolute date when cached contents must be revalidated.</span></span> <span data-ttu-id="0b526-115">如果缓存项是在缓存同步日期之前最后重新验证的，则会发生服务器的重新验证。</span><span class="sxs-lookup"><span data-stu-id="0b526-115">If the cache entry was last revalidated prior to the cache synchronization date, revalidation with the server occurs.</span></span> <span data-ttu-id="0b526-116">如果缓存项在缓存同步日期之后重新验证，且没有服务器重新验证要求使缓存条目无效，则使用缓存中的条目。</span><span class="sxs-lookup"><span data-stu-id="0b526-116">If the cache entry was revalidated after the cache synchronization date and there are no server revalidation requirements that make the cached entry invalid, the entry from the cache is used.</span></span> <span data-ttu-id="0b526-117">如果缓存同步日期设置为未来某个日期，则每次请求时都会重新验证该条目，直到缓存同步日期过去。</span><span class="sxs-lookup"><span data-stu-id="0b526-117">If the cache synchronization date is set to a future date, the entry is revalidated every time it is requested, until the cache synchronization date passes.</span></span>  
  
 <span data-ttu-id="0b526-118">此构造函数将 <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> 属性初始化为 <xref:System.Net.Cache.HttpRequestCacheLevel.Default>。</span><span class="sxs-lookup"><span data-stu-id="0b526-118">This constructor initializes the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> property to <xref:System.Net.Cache.HttpRequestCacheLevel.Default>.</span></span> <span data-ttu-id="0b526-119">将 <xref:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate%2A> 属性初始化为 `cacheSyncDate`。</span><span class="sxs-lookup"><span data-stu-id="0b526-119">The <xref:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate%2A> property is initialized to `cacheSyncDate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b526-120">下面的代码示例演示如何基于缓存同步日期创建缓存策略。</span><span class="sxs-lookup"><span data-stu-id="0b526-120">The following code example demonstrates creating a cache policy based on a cache synchronization date.</span></span>  
  
 [!code-cpp[NclSimpleCache#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#3)]
 [!code-csharp[NclSimpleCache#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpRequestCacheLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpRequestCacheLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpRequestCacheLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (level As HttpRequestCacheLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpRequestCacheLevel level);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : System.Net.Cache.HttpRequestCacheLevel -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy level" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="level" Type="System.Net.Cache.HttpRequestCacheLevel" />
      </Parameters>
      <Docs>
        <param name="level"><span data-ttu-id="0b526-121">一个 <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0b526-121">An <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> value.</span></span></param>
        <summary><span data-ttu-id="0b526-122">使用指定的缓存策略初始化 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0b526-122">Initializes a new instance of the <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> class using the specified cache policy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b526-123">此构造函数将 <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> 属性初始化为 `level`。</span><span class="sxs-lookup"><span data-stu-id="0b526-123">This constructor initializes the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> property to `level`.</span></span>  
  
 <span data-ttu-id="0b526-124"><xref:System.Net.Cache.HttpRequestCacheLevel>值控制是否启用缓存，以及何时可以使用缓存。</span><span class="sxs-lookup"><span data-stu-id="0b526-124">The <xref:System.Net.Cache.HttpRequestCacheLevel> value controls whether caching is enabled, and when the cache can be used.</span></span> <span data-ttu-id="0b526-125">有关其他信息，请参阅 <xref:System.Net.Cache.HttpRequestCacheLevel> 文档。</span><span class="sxs-lookup"><span data-stu-id="0b526-125">For additional information, see the <xref:System.Net.Cache.HttpRequestCacheLevel> documentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b526-126">下面的代码示例演示如何创建缓存策略，以允许从缓存中使用在缓存中找到的资源。</span><span class="sxs-lookup"><span data-stu-id="0b526-126">The following code example demonstrates creating a cache policy that allows resources found in the cache to be used from the cache.</span></span>  
  
 [!code-cpp[NclSimpleCache#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#12)]
 [!code-csharp[NclSimpleCache#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan ageOrFreshOrStale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype System.TimeSpan ageOrFreshOrStale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheAgeControl As HttpCacheAgeControl, ageOrFreshOrStale As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpCacheAgeControl cacheAgeControl, TimeSpan ageOrFreshOrStale);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : System.Net.Cache.HttpCacheAgeControl * TimeSpan -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy (cacheAgeControl, ageOrFreshOrStale)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" />
        <Parameter Name="ageOrFreshOrStale" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="cacheAgeControl"><span data-ttu-id="0b526-127">以下 <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> 枚举值之一：<see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxAge" />、<see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxStale" /> 或 <see cref="F:System.Net.Cache.HttpCacheAgeControl.MinFresh" />。</span><span class="sxs-lookup"><span data-stu-id="0b526-127">One of the following <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> enumeration values: <see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxAge" />, <see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxStale" />, or <see cref="F:System.Net.Cache.HttpCacheAgeControl.MinFresh" />.</span></span></param>
        <param name="ageOrFreshOrStale"><span data-ttu-id="0b526-128">指定时间量的 <see cref="T:System.TimeSpan" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0b526-128">A <see cref="T:System.TimeSpan" /> value that specifies an amount of time.</span></span></param>
        <summary><span data-ttu-id="0b526-129">使用指定的生存期控件和时间值初始化 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0b526-129">Initializes a new instance of the <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> class using the specified age control and time values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b526-130">`cacheAgeControl`值定义 `ageOrFreshOrStale` 参数值的含义，并用于设置关联的属性。</span><span class="sxs-lookup"><span data-stu-id="0b526-130">The `cacheAgeControl` value defines the meaning of the `ageOrFreshOrStale` parameter value and is used to set the associated property.</span></span> <span data-ttu-id="0b526-131">例如，在指定时 <xref:System.Net.Cache.HttpCacheAgeControl.MaxStale> ， <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> 属性设置为参数的值 `ageOrFreshOrStale` 。</span><span class="sxs-lookup"><span data-stu-id="0b526-131">For example, when you specify <xref:System.Net.Cache.HttpCacheAgeControl.MaxStale>, the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> property is set to the value of the `ageOrFreshOrStale` parameter.</span></span>  
  
 <span data-ttu-id="0b526-132">此构造函数将 <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> 属性初始化为 <xref:System.Net.Cache.HttpRequestCacheLevel.Default>。</span><span class="sxs-lookup"><span data-stu-id="0b526-132">This constructor initializes the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> property to <xref:System.Net.Cache.HttpRequestCacheLevel.Default>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b526-133">下面的代码示例演示如何创建基于最小新鲜度的缓存策略。</span><span class="sxs-lookup"><span data-stu-id="0b526-133">The following code example demonstrates creating a cache policy based on minimum freshness.</span></span>  
  
 [!code-cpp[NclSimpleCache#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#5)]
 [!code-csharp[NclSimpleCache#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0b526-134">为 <paramref name="cacheAgeControl" /> 参数指定的值不能与此构造函数一起使用。</span><span class="sxs-lookup"><span data-stu-id="0b526-134">The value specified for the <paramref name="cacheAgeControl" /> parameter cannot be used with this constructor.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype System.TimeSpan maxAge, valuetype System.TimeSpan freshOrStale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheAgeControl As HttpCacheAgeControl, maxAge As TimeSpan, freshOrStale As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : System.Net.Cache.HttpCacheAgeControl * TimeSpan * TimeSpan -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy (cacheAgeControl, maxAge, freshOrStale)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" />
        <Parameter Name="maxAge" Type="System.TimeSpan" />
        <Parameter Name="freshOrStale" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="cacheAgeControl"><span data-ttu-id="0b526-135">一个 <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0b526-135">An <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> value.</span></span></param>
        <param name="maxAge"><span data-ttu-id="0b526-136">指定资源最大生存期的 <see cref="T:System.TimeSpan" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0b526-136">A <see cref="T:System.TimeSpan" /> value that specifies the maximum age for resources.</span></span></param>
        <param name="freshOrStale"><span data-ttu-id="0b526-137">指定时间量的 <see cref="T:System.TimeSpan" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0b526-137">A <see cref="T:System.TimeSpan" /> value that specifies an amount of time.</span></span></param>
        <summary><span data-ttu-id="0b526-138">使用指定的最大生存期、生存期控制值和时间值初始化 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0b526-138">Initializes a new instance of the <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> class using the specified maximum age, age control value, and time value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b526-139">`cacheAgeControl`值用于解释 `freshOrStale` 参数值的含义，并设置关联的属性。</span><span class="sxs-lookup"><span data-stu-id="0b526-139">The `cacheAgeControl` value is used to interpret the meaning of the `freshOrStale` parameter value and set the associated property.</span></span> <span data-ttu-id="0b526-140">例如，在指定时 <xref:System.Net.Cache.HttpCacheAgeControl.MaxStale> ， <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> 属性设置为参数的值 `freshOrStale` 。</span><span class="sxs-lookup"><span data-stu-id="0b526-140">For example, when you specify <xref:System.Net.Cache.HttpCacheAgeControl.MaxStale>, the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> property is set to the value of the `freshOrStale` parameter.</span></span> <span data-ttu-id="0b526-141">指定时 <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale> ，将 <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> 使用参数的值设置属性， `maxAge` 并 <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> 使用参数的值设置属性 `freshOrStale` 。</span><span class="sxs-lookup"><span data-stu-id="0b526-141">When you specify <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale>, the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> property is set using the value of the `maxAge` parameter and the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> property is set using the value of the `freshOrStale` parameter.</span></span>  
  
 <span data-ttu-id="0b526-142">请注意，除非指定 <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale> 或 <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh> ，否则 <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> 不会设置属性。</span><span class="sxs-lookup"><span data-stu-id="0b526-142">Note that unless you specify <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale> or <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh>, the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> property is not set.</span></span>  
  
 <span data-ttu-id="0b526-143">此构造函数将 <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> 属性初始化为 <xref:System.Net.Cache.HttpRequestCacheLevel.Default>。</span><span class="sxs-lookup"><span data-stu-id="0b526-143">This constructor initializes the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> property to <xref:System.Net.Cache.HttpRequestCacheLevel.Default>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b526-144">下面的代码示例演示如何根据最小新鲜度和最长期限创建缓存策略。</span><span class="sxs-lookup"><span data-stu-id="0b526-144">The following code example demonstrates creating a cache policy based on minimum freshness and maximum age.</span></span>  
  
 [!code-cpp[NclSimpleCache#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#9)]
 [!code-csharp[NclSimpleCache#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0b526-145">为 <paramref name="cacheAgeControl" /> 参数指定的值无效。</span><span class="sxs-lookup"><span data-stu-id="0b526-145">The value specified for the <paramref name="cacheAgeControl" /> parameter is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale, DateTime cacheSyncDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype System.TimeSpan maxAge, valuetype System.TimeSpan freshOrStale, valuetype System.DateTime cacheSyncDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheAgeControl As HttpCacheAgeControl, maxAge As TimeSpan, freshOrStale As TimeSpan, cacheSyncDate As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale, DateTime cacheSyncDate);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : System.Net.Cache.HttpCacheAgeControl * TimeSpan * TimeSpan * DateTime -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy (cacheAgeControl, maxAge, freshOrStale, cacheSyncDate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" />
        <Parameter Name="maxAge" Type="System.TimeSpan" />
        <Parameter Name="freshOrStale" Type="System.TimeSpan" />
        <Parameter Name="cacheSyncDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="cacheAgeControl"><span data-ttu-id="0b526-146">一个 <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0b526-146">An <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> value.</span></span></param>
        <param name="maxAge"><span data-ttu-id="0b526-147">指定资源最大生存期的 <see cref="T:System.TimeSpan" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0b526-147">A <see cref="T:System.TimeSpan" /> value that specifies the maximum age for resources.</span></span></param>
        <param name="freshOrStale"><span data-ttu-id="0b526-148">指定时间量的 <see cref="T:System.TimeSpan" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0b526-148">A <see cref="T:System.TimeSpan" /> value that specifies an amount of time.</span></span></param>
        <param name="cacheSyncDate"><span data-ttu-id="0b526-149">一个 <see cref="T:System.DateTime" /> 对象，它指定必须重新验证缓存中存储的资源的时间。</span><span class="sxs-lookup"><span data-stu-id="0b526-149">A <see cref="T:System.DateTime" /> object that specifies the time when resources stored in the cache must be revalidated.</span></span></param>
        <summary><span data-ttu-id="0b526-150">使用指定的最大生存期、生存期控制值、时间值和缓存同步日期初始化 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0b526-150">Initializes a new instance of the <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> class using the specified maximum age, age control value, time value, and cache synchronization date.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b526-151">`cacheAgeControl`值用于解释 `freshOrStale` 参数值的含义，并设置关联的属性。</span><span class="sxs-lookup"><span data-stu-id="0b526-151">The `cacheAgeControl` value is used to interpret the meaning of the `freshOrStale` parameter value and set the associated property.</span></span> <span data-ttu-id="0b526-152">例如，在指定时 <xref:System.Net.Cache.HttpCacheAgeControl.MaxStale> ， <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> 属性设置为参数的值 `freshOrStale` 。</span><span class="sxs-lookup"><span data-stu-id="0b526-152">For example, when you specify <xref:System.Net.Cache.HttpCacheAgeControl.MaxStale>, the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> property is set to the value of the `freshOrStale` parameter.</span></span> <span data-ttu-id="0b526-153">指定时 <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale> ，将 <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> 使用参数的值设置属性， `maxAge` 并 <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> 使用参数的值设置属性 `freshOrStale` 。</span><span class="sxs-lookup"><span data-stu-id="0b526-153">When you specify <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale>, the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> property is set using the value of the `maxAge` parameter and the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A> property is set using the value of the `freshOrStale` parameter.</span></span>  
  
 <span data-ttu-id="0b526-154">请注意，除非指定 <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale> 或 <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh> ，否则 <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> 不会设置属性。</span><span class="sxs-lookup"><span data-stu-id="0b526-154">Note that unless you specify <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale> or <xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh>, the <xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A> property is not set.</span></span>  
  
 <span data-ttu-id="0b526-155">此构造函数将 <xref:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate%2A> 属性初始化为 `cacheSyncDate` ，并将 <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> 属性初始化为 <xref:System.Net.Cache.HttpRequestCacheLevel.Default> 。</span><span class="sxs-lookup"><span data-stu-id="0b526-155">This constructor initializes the <xref:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate%2A> property to `cacheSyncDate`, and initializes the <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> property to <xref:System.Net.Cache.HttpRequestCacheLevel.Default>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b526-156">下面的代码示例演示如何根据最小新鲜度、最长期限和缓存同步日期创建缓存策略。</span><span class="sxs-lookup"><span data-stu-id="0b526-156">The following code example demonstrates creating a cache policy based on minimum freshness, maximum age, and a cache synchronization date.</span></span>  
  
 [!code-cpp[NclSimpleCache#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#10)]
 [!code-csharp[NclSimpleCache#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheSyncDate">
      <MemberSignature Language="C#" Value="public DateTime CacheSyncDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CacheSyncDate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheSyncDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime CacheSyncDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheSyncDate : DateTime" Usage="System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b526-157">获取此实例的缓存同步日期。</span><span class="sxs-lookup"><span data-stu-id="0b526-157">Gets the cache synchronization date for this instance.</span></span></summary>
        <value><span data-ttu-id="0b526-158">一个 <see cref="T:System.DateTime" /> 值，被设置为在创建此实例时指定的日期。</span><span class="sxs-lookup"><span data-stu-id="0b526-158">A <see cref="T:System.DateTime" /> value set to the date specified when this instance was created.</span></span> <span data-ttu-id="0b526-159">如果未指定日期，此属性的值则为 <see cref="F:System.DateTime.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="0b526-159">If no date was specified, this property's value is <see cref="F:System.DateTime.MinValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b526-160">缓存同步日期允许指定必须重新验证缓存内容的绝对日期。</span><span class="sxs-lookup"><span data-stu-id="0b526-160">The cache synchronization date allows you to specify an absolute date when cached contents must be revalidated.</span></span> <span data-ttu-id="0b526-161">如果缓存项是在缓存同步日期之前最后重新验证的，则会发生服务器的重新验证。</span><span class="sxs-lookup"><span data-stu-id="0b526-161">If the cache entry was last revalidated prior to the cache synchronization date, revalidation with the server occurs.</span></span> <span data-ttu-id="0b526-162">如果缓存项在缓存同步日期之后重新验证，且没有服务器重新验证要求使缓存条目无效，则使用缓存中的条目。</span><span class="sxs-lookup"><span data-stu-id="0b526-162">If the cache entry was revalidated after the cache synchronization date and there are no server revalidation requirements that make the cached entry invalid, the entry from the cache is used.</span></span> <span data-ttu-id="0b526-163">如果缓存同步日期设置为未来某个日期，则每次请求时都会重新验证该条目，直到缓存同步日期过去。</span><span class="sxs-lookup"><span data-stu-id="0b526-163">If the cache synchronization date is set to a future date, the entry is revalidated every time it is requested, until the cache synchronization date passes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b526-164">下面的代码示例显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="0b526-164">The following code example displays the value of this property.</span></span>  
  
 [!code-cpp[NclSimpleCache#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#3)]
 [!code-csharp[NclSimpleCache#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public System.Net.Cache.HttpRequestCacheLevel Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Cache.HttpRequestCacheLevel Level" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.Level" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Level As HttpRequestCacheLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Cache::HttpRequestCacheLevel Level { System::Net::Cache::HttpRequestCacheLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.Level : System.Net.Cache.HttpRequestCacheLevel" Usage="System.Net.Cache.HttpRequestCachePolicy.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.HttpRequestCacheLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b526-165">获取创建此实例时指定的 <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0b526-165">Gets the <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> value that was specified when this instance was created.</span></span></summary>
        <value><span data-ttu-id="0b526-166">一个 <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> 值，该值指定使用 <see cref="T:System.Net.HttpWebRequest" /> 对象获取的资源的缓存行为。</span><span class="sxs-lookup"><span data-stu-id="0b526-166">A <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> value that specifies the cache behavior for resources that were obtained using <see cref="T:System.Net.HttpWebRequest" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b526-167">应用程序通常使用 <xref:System.Net.Cache.HttpRequestCacheLevel.Default> 作为其缓存策略级别。</span><span class="sxs-lookup"><span data-stu-id="0b526-167">Applications typically use <xref:System.Net.Cache.HttpRequestCacheLevel.Default> as their cache policy level.</span></span> <span data-ttu-id="0b526-168"><xref:System.Net.WebRequest.CachePolicy%2A>如果不是，则属性将 `null` 确定对请求有效的缓存策略。</span><span class="sxs-lookup"><span data-stu-id="0b526-168">The <xref:System.Net.WebRequest.CachePolicy%2A> property, if not `null`, determines the cache policy in effect for a request.</span></span> <span data-ttu-id="0b526-169">可以使用 <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> 属性或计算机或应用程序配置文件中的设置来设置应用程序域的默认策略。</span><span class="sxs-lookup"><span data-stu-id="0b526-169">The default policy for the application domain can be set using the <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> property or by settings in the machine or application configuration files.</span></span> <span data-ttu-id="0b526-170">有关详细信息，请参阅[ &lt; requestCaching &gt; 元素 (网络设置) ](/dotnet/framework/configure-apps/file-schema/network/requestcaching-element-network-settings)。</span><span class="sxs-lookup"><span data-stu-id="0b526-170">For more information, see [&lt;requestCaching&gt; Element (Network Settings)](/dotnet/framework/configure-apps/file-schema/network/requestcaching-element-network-settings).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b526-171">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="0b526-171">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSimpleCache#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#11)]
 [!code-csharp[NclSimpleCache#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAge">
      <MemberSignature Language="C#" Value="public TimeSpan MaxAge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaxAge" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxAge As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MaxAge { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxAge : TimeSpan" Usage="System.Net.Cache.HttpRequestCachePolicy.MaxAge" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b526-172">获取从缓存返回的资源所允许的最大生存期。</span><span class="sxs-lookup"><span data-stu-id="0b526-172">Gets the maximum age permitted for a resource returned from the cache.</span></span></summary>
        <value><span data-ttu-id="0b526-173">一个 <see cref="T:System.TimeSpan" /> 值，被设置为创建此实例时指定的最大生存期值。</span><span class="sxs-lookup"><span data-stu-id="0b526-173">A <see cref="T:System.TimeSpan" /> value that is set to the maximum age value specified when this instance was created.</span></span> <span data-ttu-id="0b526-174">如果未指定日期，此属性的值则为 <see cref="F:System.DateTime.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="0b526-174">If no date was specified, this property's value is <see cref="F:System.DateTime.MinValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b526-175">如果资源的缓存副本早于指定的时间值，则必须重新验证资源。</span><span class="sxs-lookup"><span data-stu-id="0b526-175">If the cached copy of the resource is older than the specified time value, the resource must be revalidated.</span></span> <span data-ttu-id="0b526-176">此属性的值是在构造实例时指定的。</span><span class="sxs-lookup"><span data-stu-id="0b526-176">The value for this property is specified when the instance is constructed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b526-177">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="0b526-177">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSimpleCache#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#7)]
 [!code-csharp[NclSimpleCache#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxStale">
      <MemberSignature Language="C#" Value="public TimeSpan MaxStale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaxStale" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.MaxStale" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxStale As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MaxStale { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxStale : TimeSpan" Usage="System.Net.Cache.HttpRequestCachePolicy.MaxStale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b526-178">获取从缓存返回的资源所允许的最大过期值。</span><span class="sxs-lookup"><span data-stu-id="0b526-178">Gets the maximum staleness value that is permitted for a resource returned from the cache.</span></span></summary>
        <value><span data-ttu-id="0b526-179">一个 <see cref="T:System.TimeSpan" /> 值，被设置为创建此实例时指定的最大过期值。</span><span class="sxs-lookup"><span data-stu-id="0b526-179">A <see cref="T:System.TimeSpan" /> value that is set to the maximum staleness value specified when this instance was created.</span></span> <span data-ttu-id="0b526-180">如果未指定日期，此属性的值则为 <see cref="F:System.DateTime.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="0b526-180">If no date was specified, this property's value is <see cref="F:System.DateTime.MinValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b526-181">此属性指定在内容过期后，资源的缓存副本可接受的时间量。</span><span class="sxs-lookup"><span data-stu-id="0b526-181">This property specifies the amount of time after content expiration during which the cached copy of the resource is acceptable.</span></span> <span data-ttu-id="0b526-182">此属性的值是在构造实例时指定的。</span><span class="sxs-lookup"><span data-stu-id="0b526-182">The value for this property is specified when the instance is constructed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b526-183">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="0b526-183">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSimpleCache#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#6)]
 [!code-csharp[NclSimpleCache#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinFresh">
      <MemberSignature Language="C#" Value="public TimeSpan MinFresh { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MinFresh" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.MinFresh" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinFresh As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MinFresh { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.MinFresh : TimeSpan" Usage="System.Net.Cache.HttpRequestCachePolicy.MinFresh" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b526-184">获取从缓存返回的资源所允许的最小新鲜值。</span><span class="sxs-lookup"><span data-stu-id="0b526-184">Gets the minimum freshness that is permitted for a resource returned from the cache.</span></span></summary>
        <value><span data-ttu-id="0b526-185">一个 <see cref="T:System.TimeSpan" /> 值，它指定创建此实例时指定的最小新鲜值。</span><span class="sxs-lookup"><span data-stu-id="0b526-185">A <see cref="T:System.TimeSpan" /> value that specifies the minimum freshness specified when this instance was created.</span></span> <span data-ttu-id="0b526-186">如果未指定日期，此属性的值则为 <see cref="F:System.DateTime.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="0b526-186">If no date was specified, this property's value is <see cref="F:System.DateTime.MinValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b526-187">此值指定内容过期之前的时间长度，在此期间，资源的缓存副本是可接受的。</span><span class="sxs-lookup"><span data-stu-id="0b526-187">This value specifies the amount of time before content expiration, during which the cached copy of the resource is acceptable.</span></span> <span data-ttu-id="0b526-188">此属性的值是在构造实例时指定的。</span><span class="sxs-lookup"><span data-stu-id="0b526-188">The value for this property is specified when the instance is constructed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b526-189">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="0b526-189">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclSimpleCache#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#5)]
 [!code-csharp[NclSimpleCache#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="httpRequestCachePolicy.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b526-190">返回此实例的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="0b526-190">Returns a string representation of this instance.</span></span></summary>
        <returns><span data-ttu-id="0b526-191">包含此实例的属性值的 <see cref="T:System.String" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0b526-191">A <see cref="T:System.String" /> value that contains the property values for this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b526-192">该字符串包含一个标签，该标签标识属性，后跟一个冒号 ( "：" ) 和值。</span><span class="sxs-lookup"><span data-stu-id="0b526-192">The string contains a label that identifies the property, followed by a colon (":") and the value.</span></span> <span data-ttu-id="0b526-193">属性由单个空格分隔。</span><span class="sxs-lookup"><span data-stu-id="0b526-193">Properties are separated by a single space.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b526-194">下面的代码示例演示如何调用此方法。</span><span class="sxs-lookup"><span data-stu-id="0b526-194">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NclSimpleCache#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#1)]
 [!code-csharp[NclSimpleCache#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
