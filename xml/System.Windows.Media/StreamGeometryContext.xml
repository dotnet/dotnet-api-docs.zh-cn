<Type Name="StreamGeometryContext" FullName="System.Windows.Media.StreamGeometryContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6346921079791c3614a0609d3e7fbd1492d75dce" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102079042" /></Metadata><TypeSignature Language="C#" Value="public abstract class StreamGeometryContext : System.Windows.Threading.DispatcherObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StreamGeometryContext extends System.Windows.Threading.DispatcherObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.StreamGeometryContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StreamGeometryContext&#xA;Inherits DispatcherObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamGeometryContext abstract : System::Windows::Threading::DispatcherObject, IDisposable" />
  <TypeSignature Language="F#" Value="type StreamGeometryContext = class&#xA;    inherit DispatcherObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>使用绘图命令描述几何图形。 此类与 <see cref="T:System.Windows.Media.StreamGeometry" /> 类结合使用，以创建不支持数据绑定、动画或修改的轻量几何图形。</summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Windows.Media.StreamGeometry" />
    <altmember cref="T:System.Windows.Media.PathGeometry" />
  </Docs>
  <Members>
    <Member MemberName="ArcTo">
      <MemberSignature Language="C#" Value="public abstract void ArcTo (System.Windows.Point point, System.Windows.Size size, double rotationAngle, bool isLargeArc, System.Windows.Media.SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ArcTo(valuetype System.Windows.Point point, valuetype System.Windows.Size size, float64 rotationAngle, bool isLargeArc, valuetype System.Windows.Media.SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ArcTo (point As Point, size As Size, rotationAngle As Double, isLargeArc As Boolean, sweepDirection As SweepDirection, isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ArcTo(System::Windows::Point point, System::Windows::Size size, double rotationAngle, bool isLargeArc, System::Windows::Media::SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="F#" Value="abstract member ArcTo : System.Windows.Point * System.Windows.Size * double * bool * System.Windows.Media.SweepDirection * bool * bool -&gt; unit" Usage="streamGeometryContext.ArcTo (point, size, rotationAngle, isLargeArc, sweepDirection, isStroked, isSmoothJoin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
        <Parameter Name="rotationAngle" Type="System.Double" />
        <Parameter Name="isLargeArc" Type="System.Boolean" />
        <Parameter Name="sweepDirection" Type="System.Windows.Media.SweepDirection" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">弧线末尾的目标点。</param>
        <param name="size">其圆周用于绘制角度的椭圆的半径（半宽度和高度的一半）。 如果椭圆在所有方向上都是非常大的，则圆弧会舍入，如果它接近平面，则弧线会。例如，非常大的宽度和高度会表示一个非常大的椭圆，这会给角带来轻微曲率。</param>
        <param name="rotationAngle">指定曲线的椭圆的旋转角度。 可以使用此参数来旋转弧线的曲面。</param>
        <param name="isLargeArc">若要绘制大于 180 度的弧线，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="sweepDirection">一个值，该值指示在 <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> 还是 <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> 方向绘制弧线。</param>
        <param name="isStroked">若要在使用 <see cref="T:System.Windows.Media.Pen" /> 呈现线段时使线段描边，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="isSmoothJoin">在用 <see cref="T:System.Windows.Media.Pen" /> 描边时，如果要将此线段与前一条线段之间的联接视为角，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>绘制一条到指定点的弧线。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法使用上一段的终点作为起始点。 如果这是图形中的第一段，则它将使用由方法指定的点 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> 作为起点。  
  
 <xref:System.Windows.Media.StreamGeometry>如果包含 <xref:System.Windows.Media.Transform> 或任何非描边或未填充段，则无法对其进行序列化。  
  
   
  
## Examples  
 下面的示例演示如何使用方法绘制圆弧 <xref:System.Windows.Media.StreamGeometryContext.ArcTo%2A> 。  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryArcToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryArcToExample.cs#streamgeometryarctoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryArcToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometryarctoexample.vb#streamgeometryarctoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="BeginFigure">
      <MemberSignature Language="C#" Value="public abstract void BeginFigure (System.Windows.Point startPoint, bool isFilled, bool isClosed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginFigure(valuetype System.Windows.Point startPoint, bool isFilled, bool isClosed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub BeginFigure (startPoint As Point, isFilled As Boolean, isClosed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void BeginFigure(System::Windows::Point startPoint, bool isFilled, bool isClosed);" />
      <MemberSignature Language="F#" Value="abstract member BeginFigure : System.Windows.Point * bool * bool -&gt; unit" Usage="streamGeometryContext.BeginFigure (startPoint, isFilled, isClosed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPoint" Type="System.Windows.Point" />
        <Parameter Name="isFilled" Type="System.Boolean" />
        <Parameter Name="isClosed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPoint">图开始的 <see cref="T:System.Windows.Point" />。</param>
        <param name="isFilled">若要使用该图包含的区域进行命中测试、呈现和剪辑，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="isClosed">若要关闭图，则为 <see langword="true" />；否则为 <see langword="false" />。 例如，如果绘制了两条连接线，并且 <paramref name="isClosed" /> 设置为 <see langword="false" />，则绘制的就只是两条线，但如果 <paramref name="isClosed" /> 设置为 <see langword="true" />，则这两条线将封闭进而形成一个三角形。</param>
        <summary>指定新图的起始点。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过多次调用此方法，您可以在此)  (自包含几何形状 <xref:System.Windows.Media.StreamGeometryContext> 。  
  
 <xref:System.Windows.Media.StreamGeometry>如果包含 <xref:System.Windows.Media.Transform> 或任何非描边或未填充段，则无法对其进行序列化。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BezierTo">
      <MemberSignature Language="C#" Value="public abstract void BezierTo (System.Windows.Point point1, System.Windows.Point point2, System.Windows.Point point3, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BezierTo(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, valuetype System.Windows.Point point3, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub BezierTo (point1 As Point, point2 As Point, point3 As Point, isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void BezierTo(System::Windows::Point point1, System::Windows::Point point2, System::Windows::Point point3, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="F#" Value="abstract member BezierTo : System.Windows.Point * System.Windows.Point * System.Windows.Point * bool * bool -&gt; unit" Usage="streamGeometryContext.BezierTo (point1, point2, point3, isStroked, isSmoothJoin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="point3" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1">用于指定曲线形状的第一个控制点。</param>
        <param name="point2">用于指定曲线形状的第二个控制点。</param>
        <param name="point3">曲线末尾的目标点。</param>
        <param name="isStroked">若要在使用 <see cref="T:System.Windows.Media.Pen" /> 呈现线段时使线段描边，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="isSmoothJoin">在用 <see cref="T:System.Windows.Media.Pen" /> 描边时，如果要将此线段与前一条线段之间的联接视为角，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>绘制一条到指定点的贝塞尔曲线。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 三次方贝塞尔曲线由起点、终点和两个控制点定义。 第一个控制点确定段前半的曲率，第二个控制点决定线段的后半的曲率。  
  
 此方法使用上一段的终点作为起始点。 如果这是图形中的第一段，则它将使用由方法指定的点 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> 作为起点。  
  
 <xref:System.Windows.Media.StreamGeometry>如果包含 <xref:System.Windows.Media.Transform> 或任何非描边或未填充段，则无法对其进行序列化。  
  
   
  
## Examples  
 下面的示例演示如何使用方法绘制贝塞尔曲线 <xref:System.Windows.Media.StreamGeometryContext.BezierTo%2A> 。  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryBezierToExample.cs#streamgeometrybeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrybeziertoexample.vb#streamgeometrybeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">试图添加一条线段，但未通过调用 <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 方法来指定图形的起点。</exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="streamGeometryContext.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>关闭此上下文并刷新其内容，以使其可以呈现。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 关闭后，不能修改上下文。 上下文必须先关闭，然后才能呈现其内容。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">已关闭或释放此上下文。</exception>
      </Docs>
    </Member>
    <Member MemberName="LineTo">
      <MemberSignature Language="C#" Value="public abstract void LineTo (System.Windows.Point point, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineTo(valuetype System.Windows.Point point, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub LineTo (point As Point, isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void LineTo(System::Windows::Point point, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="F#" Value="abstract member LineTo : System.Windows.Point * bool * bool -&gt; unit" Usage="streamGeometryContext.LineTo (point, isStroked, isSmoothJoin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">直线末尾的目标点。</param>
        <param name="isStroked">若要在使用 <see cref="T:System.Windows.Media.Pen" /> 呈现线段时使线段描边，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="isSmoothJoin">在用 <see cref="T:System.Windows.Media.Pen" /> 描边时，如果要将此线段与前一条线段之间的联接视为角，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>绘制一条到指定的 <see cref="T:System.Windows.Point" /> 的直线。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法使用上一段的终点作为起始点。 如果这是图形中的第一段，则它将使用由方法指定的点 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> 作为起点。  
  
 <xref:System.Windows.Media.StreamGeometry>如果包含 <xref:System.Windows.Media.Transform> 或任何非描边或未填充段，则无法对其进行序列化。  
  
   
  
## Examples  
 下面的示例演示如何使用方法绘制三角形 <xref:System.Windows.Media.StreamGeometryContext.LineTo%2A> 。  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryTriangleExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryTriangleExample.cs#streamgeometrytriangleexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryTriangleExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrytriangleexample.vb#streamgeometrytriangleexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">试图添加一条线段，但未通过调用 <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 方法来指定图形的起点。</exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyBezierTo">
      <MemberSignature Language="C#" Value="public abstract void PolyBezierTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyBezierTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PolyBezierTo (points As IList(Of Point), isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PolyBezierTo(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="F#" Value="abstract member PolyBezierTo : System.Collections.Generic.IList&lt;System.Windows.Point&gt; * bool * bool -&gt; unit" Usage="streamGeometryContext.PolyBezierTo (points, isStroked, isSmoothJoin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points">为一条或多条贝塞尔曲线指定控制点和目标点的点列表。 此列表中的点数应为三的倍数。</param>
        <param name="isStroked">若要在使用 <see cref="T:System.Windows.Media.Pen" /> 呈现线段时使线段描边，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="isSmoothJoin">在用 <see cref="T:System.Windows.Media.Pen" /> 描边时，如果要将此线段与前一条线段之间的联接视为角，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>绘制一条或多条互相连接的贝塞尔曲线。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中的第一个点 `points` 指定第一个控制点，接下来指定第二个控制点，第三个点指定终点，下一个点指定下一条曲线的第一个控制点，依此类推。  
  
 此方法使用上一段的终点作为起始点。 如果这是图形中的第一段，则它将使用由方法指定的点 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> 作为起点。  
  
 <xref:System.Windows.Media.StreamGeometry>如果包含 <xref:System.Windows.Media.Transform> 或任何非描边或未填充段，则无法对其进行序列化。  
  
   
  
## Examples  
 下面的示例演示如何使用方法绘制多个连接的贝塞尔曲线 <xref:System.Windows.Media.StreamGeometryContext.PolyBezierTo%2A> 。  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyBezierToExample.cs#streamgeometrypolybeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolybeziertoexample.vb#streamgeometrypolybeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">试图添加一条线段，但未通过调用 <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 方法来指定图形的起点。</exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyLineTo">
      <MemberSignature Language="C#" Value="public abstract void PolyLineTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyLineTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PolyLineTo (points As IList(Of Point), isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PolyLineTo(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="F#" Value="abstract member PolyLineTo : System.Collections.Generic.IList&lt;System.Windows.Point&gt; * bool * bool -&gt; unit" Usage="streamGeometryContext.PolyLineTo (points, isStroked, isSmoothJoin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points">为一条或多条互相连接的直线指定目标点的点集合。</param>
        <param name="isStroked">若要在使用 <see cref="T:System.Windows.Media.Pen" /> 呈现线段时使线段描边，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="isSmoothJoin">在用 <see cref="T:System.Windows.Media.Pen" /> 描边时，如果要将此线段与前一条线段之间的联接视为角，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>绘制一条或多条互相连接的直线。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法使用上一段的终点作为起始点。 如果这是图形中的第一段，则它将使用由方法指定的点 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> 作为起点。  
  
 <xref:System.Windows.Media.StreamGeometry>如果包含 <xref:System.Windows.Media.Transform> 或任何非描边或未填充段，则无法对其进行序列化。  
  
   
  
## Examples  
 下面的示例演示如何使用方法绘制三角形 <xref:System.Windows.Media.StreamGeometryContext.PolyLineTo%2A> 。  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyLineToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyLineToExample.cs#streamgeometrypolylinetoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyLineToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolylinetoexample.vb#streamgeometrypolylinetoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">试图添加一条线段，但未通过调用 <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 方法来指定图形的起点。</exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyQuadraticBezierTo">
      <MemberSignature Language="C#" Value="public abstract void PolyQuadraticBezierTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyQuadraticBezierTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PolyQuadraticBezierTo (points As IList(Of Point), isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PolyQuadraticBezierTo(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="F#" Value="abstract member PolyQuadraticBezierTo : System.Collections.Generic.IList&lt;System.Windows.Point&gt; * bool * bool -&gt; unit" Usage="streamGeometryContext.PolyQuadraticBezierTo (points, isStroked, isSmoothJoin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points">为一条或多条二次贝塞尔曲线指定控制点和目标点的点集合。 该列表中的第一个点指定曲线的控制点，下一个点指定目标点，接下来的一个点指定下一条曲线的控制点，依此类推。 该列表必须包含偶数个点。</param>
        <param name="isStroked">若要在使用 <see cref="T:System.Windows.Media.Pen" /> 呈现线段时使线段描边，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="isSmoothJoin">在用 <see cref="T:System.Windows.Media.Pen" /> 描边时，如果要将此线段与前一条线段之间的联接视为角，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>绘制一条或多条互相连接的二次贝塞尔曲线。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法使用上一段的终点作为起始点。 如果这是图形中的第一段，则它将使用由方法指定的点 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> 作为起点。  
  
 <xref:System.Windows.Media.StreamGeometry>如果包含 <xref:System.Windows.Media.Transform> 或任何非描边或未填充段，则无法对其进行序列化。  
  
   
  
## Examples  
 下面的示例演示如何使用方法绘制多个连接的二次贝塞尔曲线 <xref:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo%2A> 。  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyQuadraticBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyQuadraticBezierToExample.cs#streamgeometrypolyquadraticbeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyQuadraticBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolyquadraticbeziertoexample.vb#streamgeometrypolyquadraticbeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">试图添加一条线段，但未通过调用 <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 方法来指定图形的起点。</exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="QuadraticBezierTo">
      <MemberSignature Language="C#" Value="public abstract void QuadraticBezierTo (System.Windows.Point point1, System.Windows.Point point2, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QuadraticBezierTo(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub QuadraticBezierTo (point1 As Point, point2 As Point, isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void QuadraticBezierTo(System::Windows::Point point1, System::Windows::Point point2, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="F#" Value="abstract member QuadraticBezierTo : System.Windows.Point * System.Windows.Point * bool * bool -&gt; unit" Usage="streamGeometryContext.QuadraticBezierTo (point1, point2, isStroked, isSmoothJoin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1">用于指定曲线形状的控制点。</param>
        <param name="point2">曲线末尾的目标点。</param>
        <param name="isStroked">若要在使用 <see cref="T:System.Windows.Media.Pen" /> 呈现线段时使线段描边，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <param name="isSmoothJoin">在用 <see cref="T:System.Windows.Media.Pen" /> 描边时，如果要将此线段与前一条线段之间的联接视为角，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>绘制一条二次贝塞尔曲线。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不同于使用两个控制点的三次方贝塞尔曲线，二次三次方贝塞尔曲线使用单个控制点。  
  
 此方法使用上一段的终点作为起始点。 如果这是图形中的第一段，则它将使用由方法指定的点 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> 作为起点。  
  
 <xref:System.Windows.Media.StreamGeometry>如果包含 <xref:System.Windows.Media.Transform> 或任何非描边或未填充段，则无法对其进行序列化。  
  
   
  
## Examples  
 下面的示例演示如何使用方法绘制二次贝塞尔曲线 <xref:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo%2A> 。  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryQuadraticBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryQuadraticBezierToExample.cs#streamgeometryquadraticbeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryQuadraticBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometryquadraticbeziertoexample.vb#streamgeometryquadraticbeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">试图添加一条线段，但未通过调用 <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 方法来指定图形的起点。</exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="streamGeometryContext.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，不应在代码中直接使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
