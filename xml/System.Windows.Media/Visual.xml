<Type Name="Visual" FullName="System.Windows.Media.Visual">
  <Metadata><Meta Name="ms.openlocfilehash" Value="857cf0fb52ac644b3d793d5e267dc58de111f5c7" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89795758" /></Metadata><TypeSignature Language="C#" Value="public abstract class Visual : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Visual extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Visual" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Visual&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class Visual abstract : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type Visual = class&#xA;    inherit DependencyObject" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="F#" Value="type Visual = class&#xA;    inherit DependencyObject&#xA;    interface DUCE.IResource" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="911c7-101">为 WPF 中的呈现提供支持，其中包括命中测试、坐标转换和边界框计算。</span><span class="sxs-lookup"><span data-stu-id="911c7-101">Provides rendering support in WPF, which includes hit testing, coordinate transformation, and bounding box calculations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911c7-102"><xref:System.Windows.Media.Visual>类是每个对象派生自的基本抽象 <xref:System.Windows.FrameworkElement> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-102">The <xref:System.Windows.Media.Visual> class is the basic abstraction from which every <xref:System.Windows.FrameworkElement> object derives.</span></span> <span data-ttu-id="911c7-103">它还用作在中编写新控件的入口点 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] ，在许多方面，可以被视为与应用程序模型中的窗口句柄 (HWND) 等效 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 。</span><span class="sxs-lookup"><span data-stu-id="911c7-103">It also serves as the entry point for writing new controls in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], and in many ways can be thought of as an equivalent of a window handle (HWND) in the [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] application model.</span></span>  
  
 <span data-ttu-id="911c7-104"><xref:System.Windows.Media.Visual>对象是核心 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 对象，其主要角色是提供呈现支持。</span><span class="sxs-lookup"><span data-stu-id="911c7-104">The <xref:System.Windows.Media.Visual> object is a core [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] object, whose primary role is to provide rendering support.</span></span> <span data-ttu-id="911c7-105">用户界面控件（例如 <xref:System.Windows.Controls.Button> 和 <xref:System.Windows.Controls.TextBox> ）从 <xref:System.Windows.Media.Visual> 类派生，并使用定义的 <xref:System.Windows.Media.Visual> 属性来保存其呈现数据。</span><span class="sxs-lookup"><span data-stu-id="911c7-105">User interface controls, such as <xref:System.Windows.Controls.Button> and <xref:System.Windows.Controls.TextBox>, derive from the <xref:System.Windows.Media.Visual> class, and use the <xref:System.Windows.Media.Visual> defined properties for persisting their rendering data.</span></span> <span data-ttu-id="911c7-106"><xref:System.Windows.Media.Visual>对象提供对以下各项的支持：</span><span class="sxs-lookup"><span data-stu-id="911c7-106">The <xref:System.Windows.Media.Visual> object provides support for the following:</span></span>  
  
-   <span data-ttu-id="911c7-107">输出显示：呈现视觉对象的持久、序列化的绘图内容。</span><span class="sxs-lookup"><span data-stu-id="911c7-107">Output display: Rendering the persisted, serialized drawing content of a visual.</span></span>  
  
-   <span data-ttu-id="911c7-108">转换：针对视觉对象执行转换。</span><span class="sxs-lookup"><span data-stu-id="911c7-108">Transformations: Performing transformations on a visual.</span></span>  
  
-   <span data-ttu-id="911c7-109">剪裁：为视觉对象提供剪裁区域支持。</span><span class="sxs-lookup"><span data-stu-id="911c7-109">Clipping: Providing clipping region support for a visual.</span></span>  
  
-   <span data-ttu-id="911c7-110">命中测试：确定指定的坐标 (点) 还是几何图形是否包含在视觉对象的边界内。</span><span class="sxs-lookup"><span data-stu-id="911c7-110">Hit testing: Determining whether a specified coordinate (point) or geometry is contained within the bounds of a visual.</span></span>  
  
-   <span data-ttu-id="911c7-111">边框计算：确定视觉对象的边框。</span><span class="sxs-lookup"><span data-stu-id="911c7-111">Bounding box calculations: Determining the bounding rectangle of a visual.</span></span>  
  
 <span data-ttu-id="911c7-112">从结构上讲， <xref:System.Windows.Media.Visual> 对象不支持其他应用程序开发要求/ [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 功能，这些要求/功能不会立即与呈现相关，如以下内容所示：</span><span class="sxs-lookup"><span data-stu-id="911c7-112">Architecturally, the <xref:System.Windows.Media.Visual> object does not include support for other application development requirements / [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] features that are not immediately related to its rendering, such as the following:</span></span>  
  
-   <span data-ttu-id="911c7-113">事件处理</span><span class="sxs-lookup"><span data-stu-id="911c7-113">Event handling</span></span>  
  
-   <span data-ttu-id="911c7-114">Layout</span><span class="sxs-lookup"><span data-stu-id="911c7-114">Layout</span></span>  
  
-   <span data-ttu-id="911c7-115">样式</span><span class="sxs-lookup"><span data-stu-id="911c7-115">Styles</span></span>  
  
-   <span data-ttu-id="911c7-116">数据绑定</span><span class="sxs-lookup"><span data-stu-id="911c7-116">Data binding</span></span>  
  
-   <span data-ttu-id="911c7-117">全球化</span><span class="sxs-lookup"><span data-stu-id="911c7-117">Globalization</span></span>  
  
 <span data-ttu-id="911c7-118"><xref:System.Windows.Media.Visual> 作为可从中派生更多类的公共抽象类提供。</span><span class="sxs-lookup"><span data-stu-id="911c7-118"><xref:System.Windows.Media.Visual> is provided as a public abstract class from which further classes can be derived.</span></span> <span data-ttu-id="911c7-119">下图显示了在体系结构中定义的现有视觉对象的层次结构 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 。</span><span class="sxs-lookup"><span data-stu-id="911c7-119">The following illustration shows the hierarchy of the existing visual objects that are defined in the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] architecture.</span></span>  
  
 <span data-ttu-id="911c7-120">![从 Visual 对象派生的类的示意图](~/add/media/visualclass01.png "从 Visual 对象派生的类的示意图")</span><span class="sxs-lookup"><span data-stu-id="911c7-120">![Diagram of classes derived from the Visual object](~/add/media/visualclass01.png "Diagram of classes derived from the Visual object")</span></span>  
<span data-ttu-id="911c7-121">视觉对象类层次结构</span><span class="sxs-lookup"><span data-stu-id="911c7-121">Visual class hierarchy</span></span>  
  
 <span data-ttu-id="911c7-122">在某些情况下，在派生类中，定义为受保护的成员 <xref:System.Windows.Media.Visual> 将公开为更易于访问的成员，具有类似的名称 <xref:System.Windows.UIElement> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-122">In some cases, members that are defined as protected in <xref:System.Windows.Media.Visual> are exposed as more readily accessible members with similar names in the derived <xref:System.Windows.UIElement> class.</span></span>  
  
 <span data-ttu-id="911c7-123">有关详细信息，请参阅 [WPF 图形呈现概述](/dotnet/framework/wpf/graphics-multimedia/wpf-graphics-rendering-overview)。</span><span class="sxs-lookup"><span data-stu-id="911c7-123">For more information, see [WPF Graphics Rendering Overview](/dotnet/framework/wpf/graphics-multimedia/wpf-graphics-rendering-overview).</span></span>  
  
 <span data-ttu-id="911c7-124"><xref:System.Windows.Media.Visual>具有有限的级别数。</span><span class="sxs-lookup"><span data-stu-id="911c7-124">A <xref:System.Windows.Media.Visual> has a limited number of levels.</span></span> <span data-ttu-id="911c7-125">在 .NET Framework 的以前版本中，此最大深度为255。</span><span class="sxs-lookup"><span data-stu-id="911c7-125">In previous versions of the .NET Framework, this maximum depth was 255.</span></span> <span data-ttu-id="911c7-126">对于在可视化树中具有多个级别的某些布局而言，此限制不够用。</span><span class="sxs-lookup"><span data-stu-id="911c7-126">This limit is inadequate for some layouts that have many levels in the visual tree.</span></span>  
  
 <span data-ttu-id="911c7-127">在中 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] ，的最大深度 <xref:System.Windows.Media.Visual> 为2047，这可以实现更多的可视化树。</span><span class="sxs-lookup"><span data-stu-id="911c7-127">In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the maximum depth of a <xref:System.Windows.Media.Visual> is 2047, which enables much deeper visual trees.</span></span> <span data-ttu-id="911c7-128">在大多数应用程序中，堆栈空间不足，无法遍历太多级别，结果在 <xref:System.StackOverflowException> 布局期间是。</span><span class="sxs-lookup"><span data-stu-id="911c7-128">In most applications, there is not enough stack space to traverse so many levels, and the result is a <xref:System.StackOverflowException> during layout.</span></span> <span data-ttu-id="911c7-129">对于默认堆栈大小，如果树深度大约为800（相当于大约190个嵌套对象），则通常会引发此异常 <xref:System.Windows.Controls.TreeViewItem> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-129">For the default stack size, this exception is usually thrown when the tree depth is approximately 800, which corresponds to about 190 nested <xref:System.Windows.Controls.TreeViewItem> objects.</span></span>  
  
 <span data-ttu-id="911c7-130">如果你的应用程序引发此异常，并且你需要具有更深入的可视化树，则可以增加应用程序的堆栈大小。</span><span class="sxs-lookup"><span data-stu-id="911c7-130">If this exception is thrown by your application and you need to have a deeper visual tree, you can increase the application's stack size.</span></span> <span data-ttu-id="911c7-131">可以通过在编译时使用/STACK 选项或使用 EDITBIN 实用工具来增加堆栈的大小。</span><span class="sxs-lookup"><span data-stu-id="911c7-131">You can increase the size of the stack by using the /STACK option at compile time or by using the EDITBIN utility.</span></span> <span data-ttu-id="911c7-132">增大堆栈大小可能会影响应用程序的性能。</span><span class="sxs-lookup"><span data-stu-id="911c7-132">Increasing the stack size may affect your application's performance.</span></span> <span data-ttu-id="911c7-133">有关详细信息，请参阅 [Stack 分配](https://go.microsoft.com/fwlink/?LinkId=165510) 和 [EDITBIN 选项](https://go.microsoft.com/fwlink/?LinkId=165511)。</span><span class="sxs-lookup"><span data-stu-id="911c7-133">For more information, see [Stack Allocations](https://go.microsoft.com/fwlink/?LinkId=165510) and [EDITBIN Options](https://go.microsoft.com/fwlink/?LinkId=165511).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.VisualCollection" />
    <altmember cref="T:System.Windows.Media.VisualTreeHelper" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Visual ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Visual();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="911c7-134">为从 <see cref="T:System.Windows.Media.Visual" /> 类派生的对象提供基本初始化。</span><span class="sxs-lookup"><span data-stu-id="911c7-134">Provides the base initialization for objects derived from the <see cref="T:System.Windows.Media.Visual" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddVisualChild">
      <MemberSignature Language="C#" Value="protected void AddVisualChild (System.Windows.Media.Visual child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddVisualChild(class System.Windows.Media.Visual child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddVisualChild (child As Visual)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddVisualChild(System::Windows::Media::Visual ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddVisualChild : System.Windows.Media.Visual -&gt; unit" Usage="visual.AddVisualChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="911c7-135">要添加到父可视对象的子可视对象。</span><span class="sxs-lookup"><span data-stu-id="911c7-135">The child visual object to add to parent visual.</span></span></param>
        <summary><span data-ttu-id="911c7-136">定义两个可视对象之间的父子关系。</span><span class="sxs-lookup"><span data-stu-id="911c7-136">Defines the parent-child relationship between two visuals.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911c7-137"><xref:System.Windows.Media.Visual.AddVisualChild%2A>方法设置两个可视对象之间的父子关系。</span><span class="sxs-lookup"><span data-stu-id="911c7-137">The <xref:System.Windows.Media.Visual.AddVisualChild%2A> method sets up the parent-child relationship between two visual objects.</span></span> <span data-ttu-id="911c7-138">如果需要对可视子对象的基础存储实现进行更高级别的控制，则必须使用此方法。</span><span class="sxs-lookup"><span data-stu-id="911c7-138">This method must be used when you need greater low-level control over the underlying storage implementation of visual child objects.</span></span> <span data-ttu-id="911c7-139"><xref:System.Windows.Media.VisualCollection> 可用作存储子对象的默认实现。</span><span class="sxs-lookup"><span data-stu-id="911c7-139"><xref:System.Windows.Media.VisualCollection> can be used as a default implementation for storing child objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="911c7-140">下面的示例演示如何为视觉对象定义自定义存储要求。</span><span class="sxs-lookup"><span data-stu-id="911c7-140">The following example shows how to define custom storage requirements for a visual child.</span></span> <span data-ttu-id="911c7-141">该示例使用 <xref:System.Windows.Media.Visual.AddVisualChild%2A> 和 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> 方法来设置父视觉对象和之间的父子关系 `child` 。</span><span class="sxs-lookup"><span data-stu-id="911c7-141">The example uses the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods to sets up the parent-child relationship between the parent visual and `child`.</span></span> <span data-ttu-id="911c7-142">为了正确枚举可视化树，该示例提供方法和属性的重写实现 <xref:System.Windows.Media.Visual.GetVisualChild%2A> <xref:System.Windows.Media.Visual.VisualChildrenCount%2A> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-142">In order for the visual tree to be enumerated correctly, the example provides overridden implementations of the <xref:System.Windows.Media.Visual.GetVisualChild%2A> method and <xref:System.Windows.Media.Visual.VisualChildrenCount%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="911c7-143">尽管可以使用 <xref:System.Windows.Media.VisualCollection> 创建可视对象之间的父子关系，但当只有一个子级链接到父对象时，提供自己的自定义存储实现会更有效。</span><span class="sxs-lookup"><span data-stu-id="911c7-143">Although it is possible to use <xref:System.Windows.Media.VisualCollection> to create parent-child relationships between visual objects, it is more efficient to provide your own custom storage implementation when only one child is linked to a parent.</span></span>  
  
 [!code-csharp[AddVisualChild#AddVisualChild01](~/samples/snippets/csharp/VS_Snippets_Wpf/AddVisualChild/CSharp/Window1.xaml.cs#addvisualchild01)]
 [!code-vb[AddVisualChild#AddVisualChild01](~/samples/snippets/visualbasic/VS_Snippets_Wpf/AddVisualChild/visualbasic/window1.xaml.vb#addvisualchild01)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.VisualCollection" />
      </Docs>
    </Member>
    <Member MemberName="FindCommonVisualAncestor">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject FindCommonVisualAncestor (System.Windows.DependencyObject otherVisual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject FindCommonVisualAncestor(class System.Windows.DependencyObject otherVisual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindCommonVisualAncestor (otherVisual As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ FindCommonVisualAncestor(System::Windows::DependencyObject ^ otherVisual);" />
      <MemberSignature Language="F#" Value="member this.FindCommonVisualAncestor : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="visual.FindCommonVisualAncestor otherVisual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherVisual" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="otherVisual"><span data-ttu-id="911c7-144">一个 <see cref="T:System.Windows.DependencyObject" /> 类型的可视对象。</span><span class="sxs-lookup"><span data-stu-id="911c7-144">A visual object of type <see cref="T:System.Windows.DependencyObject" />.</span></span></param>
        <summary><span data-ttu-id="911c7-145">返回两个可视对象的公共上级。</span><span class="sxs-lookup"><span data-stu-id="911c7-145">Returns the common ancestor of two visual objects.</span></span></summary>
        <returns><span data-ttu-id="911c7-146">可视对象和 <paramref name="otherVisual" /> 的公共上级（如果存在的话）；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-146">The common ancestor of the visual object and <paramref name="otherVisual" /> if one exists; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911c7-147">二维和三维对象可以具有常见的视觉对象，因此可以传递 <xref:System.Windows.Media.Media3D.Visual3D> 的 `otherVisual` 。</span><span class="sxs-lookup"><span data-stu-id="911c7-147">2D and 3D objects can have common visual ancestors, so it is possible to pass a <xref:System.Windows.Media.Media3D.Visual3D> for `otherVisual`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVisualChild">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Media.Visual GetVisualChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.Visual GetVisualChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetVisualChild (index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Media::Visual ^ GetVisualChild(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetVisualChild : int -&gt; System.Windows.Media.Visual&#xA;override this.GetVisualChild : int -&gt; System.Windows.Media.Visual" Usage="visual.GetVisualChild index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="911c7-148"><see cref="T:System.Windows.Media.VisualCollection" /> 中的可视对象的索引。</span><span class="sxs-lookup"><span data-stu-id="911c7-148">The index of the visual object in the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <summary><span data-ttu-id="911c7-149">返回父级 <see cref="T:System.Windows.Media.Visual" /> 中的指定 <see cref="T:System.Windows.Media.VisualCollection" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-149">Returns the specified <see cref="T:System.Windows.Media.Visual" /> in the parent <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <returns><span data-ttu-id="911c7-150"><see cref="T:System.Windows.Media.VisualCollection" /> 中指定 <paramref name="index" /> 值处的子级。</span><span class="sxs-lookup"><span data-stu-id="911c7-150">The child in the <see cref="T:System.Windows.Media.VisualCollection" /> at the specified <paramref name="index" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911c7-151">默认情况下， <xref:System.Windows.Media.Visual> 没有任何子级。</span><span class="sxs-lookup"><span data-stu-id="911c7-151">By default, a <xref:System.Windows.Media.Visual> has no children.</span></span> <span data-ttu-id="911c7-152">因此，默认实现始终引发 <xref:System.ArgumentOutOfRangeException> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-152">Therefore, the default implementation always throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="911c7-153">下面的示例定义的重写实现 <xref:System.Windows.Media.Visual.GetVisualChild%2A> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-153">The following example defines an overridden implementation of <xref:System.Windows.Media.Visual.GetVisualChild%2A>.</span></span>  
  
 [!code-csharp[DrawingVisualSample#102b](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#102b)]
 [!code-vb[DrawingVisualSample#102b](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#102b)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="911c7-154">从派生的类 <see cref="T:System.Windows.Media.Visual" /> 必须重写此方法和 <see cref="P:System.Windows.Media.Visual.VisualChildrenCount" /> 属性，以便正确枚举可视化树。</span><span class="sxs-lookup"><span data-stu-id="911c7-154">A class that derives from <see cref="T:System.Windows.Media.Visual" /> must override this method, and also the <see cref="P:System.Windows.Media.Visual.VisualChildrenCount" /> property, for the visual tree to be enumerated correctly.</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTestCore">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="911c7-155">确定点或几何图形值是否在可视对象的边界内。</span><span class="sxs-lookup"><span data-stu-id="911c7-155">Determines whether a point or geometry value is within the bounds of the visual object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Media.GeometryHitTestResult HitTestCore (System.Windows.Media.GeometryHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.GeometryHitTestResult HitTestCore(class System.Windows.Media.GeometryHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HitTestCore (hitTestParameters As GeometryHitTestParameters) As GeometryHitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Media::GeometryHitTestResult ^ HitTestCore(System::Windows::Media::GeometryHitTestParameters ^ hitTestParameters);" />
      <MemberSignature Language="F#" Value="abstract member HitTestCore : System.Windows.Media.GeometryHitTestParameters -&gt; System.Windows.Media.GeometryHitTestResult&#xA;override this.HitTestCore : System.Windows.Media.GeometryHitTestParameters -&gt; System.Windows.Media.GeometryHitTestResult" Usage="visual.HitTestCore hitTestParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeometryHitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.GeometryHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters"><span data-ttu-id="911c7-156"><see cref="T:System.Windows.Media.GeometryHitTestParameters" /> 对象，指定 <see cref="T:System.Windows.Media.Geometry" /> 针对命中测试。</span><span class="sxs-lookup"><span data-stu-id="911c7-156">A <see cref="T:System.Windows.Media.GeometryHitTestParameters" /> object that specifies the <see cref="T:System.Windows.Media.Geometry" /> to hit test against.</span></span></param>
        <summary><span data-ttu-id="911c7-157">确定可视对象的边界中是否存在几何图形值。</span><span class="sxs-lookup"><span data-stu-id="911c7-157">Determines whether a geometry value is within the bounds of the visual object.</span></span></summary>
        <returns><span data-ttu-id="911c7-158">表示命中测试结果的 <see cref="T:System.Windows.Media.GeometryHitTestResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="911c7-158">A <see cref="T:System.Windows.Media.GeometryHitTestResult" /> that represents the result of the hit test.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911c7-159">可以通过重写方法来覆盖视觉对象的默认命中测试支持 <xref:System.Windows.Media.Visual.HitTestCore%2A> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-159">You can override default hit testing support for a visual object by overriding the <xref:System.Windows.Media.Visual.HitTestCore%2A> method.</span></span> <span data-ttu-id="911c7-160">这意味着，当你调用 <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> 方法时，将调用的重写实现 <xref:System.Windows.Media.Visual.HitTestCore%2A> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-160">This means that when you invoke the <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> method, your overridden implementation of <xref:System.Windows.Media.Visual.HitTestCore%2A> is called.</span></span> <span data-ttu-id="911c7-161">当命中测试位于可视对象的边框内时，将调用重写的方法，即使该坐标在视觉对象的几何图形之外也是如此。</span><span class="sxs-lookup"><span data-stu-id="911c7-161">Your overridden method is called when a hit test falls within the bounding rectangle of the visual object, even if the coordinate falls outside the geometry of the visual object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="911c7-162">下面的示例演示如何重写 <xref:System.Windows.Media.Visual.HitTestCore%28System.Windows.Media.GeometryHitTestParameters%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="911c7-162">The following example shows how to override the <xref:System.Windows.Media.Visual.HitTestCore%28System.Windows.Media.GeometryHitTestParameters%29> method.</span></span> <span data-ttu-id="911c7-163">可能想要重写此方法的一个原因是在执行命中测试过程中提供附加功能。</span><span class="sxs-lookup"><span data-stu-id="911c7-163">One reason you might want to override this method is to provide additional functionality during the hit testing process.</span></span>  
  
 [!code-csharp[HitTestingOverview#HitTestingOverviewSnippet13](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/GeometryHitTest.cs#hittestingoverviewsnippet13)]
 [!code-vb[HitTestingOverview#HitTestingOverviewSnippet13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/geometryhittest.vb#hittestingoverviewsnippet13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HitTestCore (hitTestParameters As PointHitTestParameters) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Media::HitTestResult ^ HitTestCore(System::Windows::Media::PointHitTestParameters ^ hitTestParameters);" />
      <MemberSignature Language="F#" Value="abstract member HitTestCore : System.Windows.Media.PointHitTestParameters -&gt; System.Windows.Media.HitTestResult&#xA;override this.HitTestCore : System.Windows.Media.PointHitTestParameters -&gt; System.Windows.Media.HitTestResult" Usage="visual.HitTestCore hitTestParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters"><span data-ttu-id="911c7-164"><see cref="T:System.Windows.Media.PointHitTestParameters" /> 对象，指定 <see cref="T:System.Windows.Point" /> 针对命中测试。</span><span class="sxs-lookup"><span data-stu-id="911c7-164">A <see cref="T:System.Windows.Media.PointHitTestParameters" /> object that specifies the <see cref="T:System.Windows.Point" /> to hit test against.</span></span></param>
        <summary><span data-ttu-id="911c7-165">确定点坐标值是否在可视对象的边界内。</span><span class="sxs-lookup"><span data-stu-id="911c7-165">Determines whether a point coordinate value is within the bounds of the visual object.</span></span></summary>
        <returns><span data-ttu-id="911c7-166">表示从命中测试中返回的 <see cref="T:System.Windows.Media.HitTestResult" /> 的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-166">A <see cref="T:System.Windows.Media.HitTestResult" /> that represents the <see cref="T:System.Windows.Media.Visual" /> that is returned from a hit test.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911c7-167">您可以通过重写方法来重写对视觉对象的默认命中测试支持 <xref:System.Windows.Media.Visual.HitTestCore%2A> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-167">You can override the default hit testing support on visual objects by overriding the <xref:System.Windows.Media.Visual.HitTestCore%2A> method.</span></span> <span data-ttu-id="911c7-168">这意味着，当你调用 <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> 方法时，将调用的重写实现 <xref:System.Windows.Media.Visual.HitTestCore%2A> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-168">This means that when you invoke the <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> method, your overridden implementation of <xref:System.Windows.Media.Visual.HitTestCore%2A> is called.</span></span> <span data-ttu-id="911c7-169">当命中测试位于可视对象的边框内时，将调用重写的方法，即使该坐标在视觉对象的几何图形之外也是如此。</span><span class="sxs-lookup"><span data-stu-id="911c7-169">Your overridden method is called when a hit test falls within the bounding rectangle of the visual object, even if the coordinate falls outside the geometry of the visual object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="911c7-170">下面的示例演示如何重写 <xref:System.Windows.Media.Visual.HitTestCore%28System.Windows.Media.PointHitTestParameters%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="911c7-170">The following example shows how to override the <xref:System.Windows.Media.Visual.HitTestCore%28System.Windows.Media.PointHitTestParameters%29> method.</span></span> <span data-ttu-id="911c7-171">可能想要重写此方法的一个原因是在执行命中测试过程中提供附加功能。</span><span class="sxs-lookup"><span data-stu-id="911c7-171">One reason you might want to override this method is to provide additional functionality during the hit testing process.</span></span>  
  
 [!code-csharp[HitTestingOverview#107](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/Window1.xaml.cs#107)]
 [!code-vb[HitTestingOverview#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/window1.xaml.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAncestorOf">
      <MemberSignature Language="C#" Value="public bool IsAncestorOf (System.Windows.DependencyObject descendant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAncestorOf(class System.Windows.DependencyObject descendant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAncestorOf (descendant As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAncestorOf(System::Windows::DependencyObject ^ descendant);" />
      <MemberSignature Language="F#" Value="member this.IsAncestorOf : System.Windows.DependencyObject -&gt; bool" Usage="visual.IsAncestorOf descendant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descendant" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="descendant"><span data-ttu-id="911c7-172">一个 <see cref="T:System.Windows.DependencyObject" /> 类型的值。</span><span class="sxs-lookup"><span data-stu-id="911c7-172">A value of type <see cref="T:System.Windows.DependencyObject" />.</span></span></param>
        <summary><span data-ttu-id="911c7-173">确定可视对象是否为后代可视对象的上级。</span><span class="sxs-lookup"><span data-stu-id="911c7-173">Determines whether the visual object is an ancestor of the descendant visual object.</span></span></summary>
        <returns><span data-ttu-id="911c7-174">如果可视对象是 <paramref name="descendant" /> 的上级，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-174"><see langword="true" /> if the visual object is an ancestor of <paramref name="descendant" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDescendantOf">
      <MemberSignature Language="C#" Value="public bool IsDescendantOf (System.Windows.DependencyObject ancestor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDescendantOf(class System.Windows.DependencyObject ancestor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDescendantOf (ancestor As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDescendantOf(System::Windows::DependencyObject ^ ancestor);" />
      <MemberSignature Language="F#" Value="member this.IsDescendantOf : System.Windows.DependencyObject -&gt; bool" Usage="visual.IsDescendantOf ancestor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ancestor" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="ancestor"><span data-ttu-id="911c7-175">一个 <see cref="T:System.Windows.DependencyObject" /> 类型的值。</span><span class="sxs-lookup"><span data-stu-id="911c7-175">A value of type <see cref="T:System.Windows.DependencyObject" />.</span></span></param>
        <summary><span data-ttu-id="911c7-176">确定可视对象是否为上级可视对象的后代。</span><span class="sxs-lookup"><span data-stu-id="911c7-176">Determines whether the visual object is a descendant of the ancestor visual object.</span></span></summary>
        <returns><span data-ttu-id="911c7-177">如果可视对象是 <paramref name="ancestor" /> 的后代，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-177"><see langword="true" /> if the visual object is a descendant of <paramref name="ancestor" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChanged (System.Windows.DpiScale oldDpi, System.Windows.DpiScale newDpi);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChanged(valuetype System.Windows.DpiScale oldDpi, valuetype System.Windows.DpiScale newDpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChanged (oldDpi As DpiScale, newDpi As DpiScale)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChanged(System::Windows::DpiScale oldDpi, System::Windows::DpiScale newDpi);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChanged : System.Windows.DpiScale * System.Windows.DpiScale -&gt; unit&#xA;override this.OnDpiChanged : System.Windows.DpiScale * System.Windows.DpiScale -&gt; unit" Usage="visual.OnDpiChanged (oldDpi, newDpi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldDpi" Type="System.Windows.DpiScale" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="newDpi" Type="System.Windows.DpiScale" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="oldDpi"><span data-ttu-id="911c7-178">上一 DPI 比例设置。</span><span class="sxs-lookup"><span data-stu-id="911c7-178">The previous DPI scale setting.</span></span></param>
        <param name="newDpi"><span data-ttu-id="911c7-179">新 DPI 比例设置。</span><span class="sxs-lookup"><span data-stu-id="911c7-179">The new DPI scale setting.</span></span></param>
        <summary><span data-ttu-id="911c7-180">呈现此视图时所使用的 DPI 发生变化时进行调用。</span><span class="sxs-lookup"><span data-stu-id="911c7-180">Called when the DPI at which this View is rendered changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualChildrenChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnVisualChildrenChanged (System.Windows.DependencyObject visualAdded, System.Windows.DependencyObject visualRemoved);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnVisualChildrenChanged(class System.Windows.DependencyObject visualAdded, class System.Windows.DependencyObject visualRemoved) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnVisualChildrenChanged (visualAdded As DependencyObject, visualRemoved As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnVisualChildrenChanged(System::Windows::DependencyObject ^ visualAdded, System::Windows::DependencyObject ^ visualRemoved);" />
      <MemberSignature Language="F#" Value="abstract member OnVisualChildrenChanged : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit&#xA;override this.OnVisualChildrenChanged : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="visual.OnVisualChildrenChanged (visualAdded, visualRemoved)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visualAdded" Type="System.Windows.DependencyObject" />
        <Parameter Name="visualRemoved" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="visualAdded"><span data-ttu-id="911c7-181">已添加到集合中的 <see cref="T:System.Windows.Media.Visual" /></span><span class="sxs-lookup"><span data-stu-id="911c7-181">The <see cref="T:System.Windows.Media.Visual" /> that was added to the collection</span></span></param>
        <param name="visualRemoved"><span data-ttu-id="911c7-182">已从集合中移除的 <see cref="T:System.Windows.Media.Visual" /></span><span class="sxs-lookup"><span data-stu-id="911c7-182">The <see cref="T:System.Windows.Media.Visual" /> that was removed from the collection</span></span></param>
        <summary><span data-ttu-id="911c7-183">修改可视对象的 <see cref="T:System.Windows.Media.VisualCollection" /> 时调用。</span><span class="sxs-lookup"><span data-stu-id="911c7-183">Called when the <see cref="T:System.Windows.Media.VisualCollection" /> of the visual object is modified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="abstract member OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit&#xA;override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="visual.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="911c7-184">一个表示 <see cref="T:System.Windows.DependencyObject" /> 对象的上一个父级的 <see cref="T:System.Windows.Media.Visual" /> 类型值。</span><span class="sxs-lookup"><span data-stu-id="911c7-184">A value of type <see cref="T:System.Windows.DependencyObject" /> that represents the previous parent of the <see cref="T:System.Windows.Media.Visual" /> object.</span></span> <span data-ttu-id="911c7-185">如果 <see cref="T:System.Windows.Media.Visual" /> 对象没有上一个父级，则参数的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-185">If the <see cref="T:System.Windows.Media.Visual" /> object did not have a previous parent, the value of the parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="911c7-186">当可视对象的父级更改时调用。</span><span class="sxs-lookup"><span data-stu-id="911c7-186">Called when the parent of the visual object is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911c7-187">从派生的类 <xref:System.Windows.Media.Visual> 可以选择重写此方法。</span><span class="sxs-lookup"><span data-stu-id="911c7-187">A class that derives from <xref:System.Windows.Media.Visual> can choose to override this method.</span></span>  
  
 <span data-ttu-id="911c7-188">未提供可向实例报告此更改的 "VisualParentChanged" 事件。</span><span class="sxs-lookup"><span data-stu-id="911c7-188">There is no "VisualParentChanged" event provided that reports this change to instances.</span></span> <span data-ttu-id="911c7-189">因此，你必须重写此方法以处理通知方案，并提供通知的实例版本（如果这是你的方案的一部分）。</span><span class="sxs-lookup"><span data-stu-id="911c7-189">Therefore, you must override this method to handle notification scenarios and provide an instance version of the notification if that is part of your scenario.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="911c7-190">下面的示例定义的重写实现 <xref:System.Windows.Media.Visual.OnVisualParentChanged%2A> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-190">The following example defines an overridden implementation of <xref:System.Windows.Media.Visual.OnVisualParentChanged%2A>.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet10](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet10)]
 [!code-vb[VisualSnippets#VisualSnippet10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Visual.VisualParent" />
      </Docs>
    </Member>
    <Member MemberName="PointFromScreen">
      <MemberSignature Language="C#" Value="public System.Windows.Point PointFromScreen (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point PointFromScreen(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function PointFromScreen (point As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point PointFromScreen(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.PointFromScreen : System.Windows.Point -&gt; System.Windows.Point" Usage="visual.PointFromScreen point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="911c7-191">屏幕坐标中的 <see cref="T:System.Windows.Point" /> 值。</span><span class="sxs-lookup"><span data-stu-id="911c7-191">The <see cref="T:System.Windows.Point" /> value in screen coordinates.</span></span></param>
        <summary><span data-ttu-id="911c7-192">将屏幕坐标中的 <see cref="T:System.Windows.Point" /> 转换为表示 <see cref="T:System.Windows.Point" /> 的当前坐标系的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-192">Converts a <see cref="T:System.Windows.Point" /> in screen coordinates into a <see cref="T:System.Windows.Point" /> that represents the current coordinate system of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <returns><span data-ttu-id="911c7-193">转换后的 <see cref="T:System.Windows.Point" /> 值表示 <see cref="T:System.Windows.Media.Visual" /> 的当前坐标系。</span><span class="sxs-lookup"><span data-stu-id="911c7-193">The converted <see cref="T:System.Windows.Point" /> value that represents the current coordinate system of the <see cref="T:System.Windows.Media.Visual" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911c7-194">使用 <xref:System.Windows.Media.Visual.PointToScreen%2A> 方法将表示的 <xref:System.Windows.Point> 当前坐标系统的转换为 <xref:System.Windows.Media.Visual> <xref:System.Windows.Point> 屏幕坐标中的。</span><span class="sxs-lookup"><span data-stu-id="911c7-194">Use the <xref:System.Windows.Media.Visual.PointToScreen%2A> method to convert a <xref:System.Windows.Point> that represents the current coordinate system of the <xref:System.Windows.Media.Visual> into a <xref:System.Windows.Point> in screen coordinates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointToScreen">
      <MemberSignature Language="C#" Value="public System.Windows.Point PointToScreen (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point PointToScreen(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.PointToScreen(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function PointToScreen (point As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point PointToScreen(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.PointToScreen : System.Windows.Point -&gt; System.Windows.Point" Usage="visual.PointToScreen point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="911c7-195">表示 <see cref="T:System.Windows.Point" /> 的当前坐标系的 <see cref="T:System.Windows.Media.Visual" /> 值。</span><span class="sxs-lookup"><span data-stu-id="911c7-195">The <see cref="T:System.Windows.Point" /> value that represents the current coordinate system of the <see cref="T:System.Windows.Media.Visual" />.</span></span></param>
        <summary><span data-ttu-id="911c7-196">将表示 <see cref="T:System.Windows.Point" /> 的当前坐标系的 <see cref="T:System.Windows.Media.Visual" /> 转换为屏幕坐标中的 <see cref="T:System.Windows.Point" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-196">Converts a <see cref="T:System.Windows.Point" /> that represents the current coordinate system of the <see cref="T:System.Windows.Media.Visual" /> into a <see cref="T:System.Windows.Point" /> in screen coordinates.</span></span></summary>
        <returns><span data-ttu-id="911c7-197">屏幕坐标中转换后的 <see cref="T:System.Windows.Point" /> 值。</span><span class="sxs-lookup"><span data-stu-id="911c7-197">The converted <see cref="T:System.Windows.Point" /> value in screen coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911c7-198">使用 <xref:System.Windows.Media.Visual.PointFromScreen%2A> 方法将 <xref:System.Windows.Point> 屏幕坐标中的转换为表示的 <xref:System.Windows.Point> 当前坐标系统的 <xref:System.Windows.Media.Visual> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-198">Use the <xref:System.Windows.Media.Visual.PointFromScreen%2A> method to convert a <xref:System.Windows.Point> in screen coordinates into a <xref:System.Windows.Point> that represents the current coordinate system of the <xref:System.Windows.Media.Visual>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveVisualChild">
      <MemberSignature Language="C#" Value="protected void RemoveVisualChild (System.Windows.Media.Visual child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveVisualChild(class System.Windows.Media.Visual child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveVisualChild (child As Visual)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveVisualChild(System::Windows::Media::Visual ^ child);" />
      <MemberSignature Language="F#" Value="member this.RemoveVisualChild : System.Windows.Media.Visual -&gt; unit" Usage="visual.RemoveVisualChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="911c7-199">要从父可视对象中移除的子可视对象。</span><span class="sxs-lookup"><span data-stu-id="911c7-199">The child visual object to remove from the parent visual.</span></span></param>
        <summary><span data-ttu-id="911c7-200">移除两个可视对象之间的父子关系。</span><span class="sxs-lookup"><span data-stu-id="911c7-200">Removes the parent-child relationship between two visuals.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911c7-201"><xref:System.Windows.Media.Visual.RemoveVisualChild%2A>方法移除两个视觉对象之间的父子关系。</span><span class="sxs-lookup"><span data-stu-id="911c7-201">The <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> method removes the parent-child relationship between two visuals.</span></span> <span data-ttu-id="911c7-202"><xref:System.Windows.Media.Visual.AddVisualChild%2A>如果需要对可视子对象的基础存储实现进行更高级别的控制，则必须使用此方法以及方法。</span><span class="sxs-lookup"><span data-stu-id="911c7-202">This method, along with the <xref:System.Windows.Media.Visual.AddVisualChild%2A> method, must be used when you need greater low-level control over the underlying storage implementation of visual child objects.</span></span> <span data-ttu-id="911c7-203"><xref:System.Windows.Media.VisualCollection> 可用作存储子对象的默认实现。</span><span class="sxs-lookup"><span data-stu-id="911c7-203"><xref:System.Windows.Media.VisualCollection> can be used as a default implementation for storing child objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="911c7-204">下面的示例演示如何为视觉对象定义自定义存储要求。</span><span class="sxs-lookup"><span data-stu-id="911c7-204">The following example shows how to define custom storage requirements for a visual child.</span></span> <span data-ttu-id="911c7-205">该示例使用 <xref:System.Windows.Media.Visual.AddVisualChild%2A> 和 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> 方法来设置父视觉对象和之间的父子关系 `child` 。</span><span class="sxs-lookup"><span data-stu-id="911c7-205">The example uses the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods to sets up the parent-child relationship between the parent visual and `child`.</span></span> <span data-ttu-id="911c7-206">为了正确枚举可视化树，该示例提供方法和属性的重写实现 <xref:System.Windows.Media.Visual.GetVisualChild%2A> <xref:System.Windows.Media.Visual.VisualChildrenCount%2A> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-206">In order for the visual tree to be enumerated correctly, the example provides overridden implementations of the <xref:System.Windows.Media.Visual.GetVisualChild%2A> method and <xref:System.Windows.Media.Visual.VisualChildrenCount%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="911c7-207">尽管可以使用 <xref:System.Windows.Media.VisualCollection> 创建可视对象之间的父子关系，但当只有一个子级链接到父对象时，提供自己的自定义存储实现会更有效。</span><span class="sxs-lookup"><span data-stu-id="911c7-207">Although it is possible to use <xref:System.Windows.Media.VisualCollection> to create parent-child relationships between visual objects, it is more efficient to provide your own custom storage implementation when only one child is linked to a parent.</span></span>  
  
 [!code-csharp[AddVisualChild#AddVisualChild01](~/samples/snippets/csharp/VS_Snippets_Wpf/AddVisualChild/CSharp/Window1.xaml.cs#addvisualchild01)]
 [!code-vb[AddVisualChild#AddVisualChild01](~/samples/snippets/visualbasic/VS_Snippets_Wpf/AddVisualChild/visualbasic/window1.xaml.vb#addvisualchild01)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.VisualCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformToAncestor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="911c7-208">返回一个转换，该转换可用于将 <see cref="T:System.Windows.Media.Visual" /> 中的坐标转换为指定的可视对象上级。</span><span class="sxs-lookup"><span data-stu-id="911c7-208">Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified ancestor of the visual object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformToAncestor">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Media3D.GeneralTransform2DTo3D TransformToAncestor (System.Windows.Media.Media3D.Visual3D ancestor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Media3D.GeneralTransform2DTo3D TransformToAncestor(class System.Windows.Media.Media3D.Visual3D ancestor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformToAncestor (ancestor As Visual3D) As GeneralTransform2DTo3D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Media3D::GeneralTransform2DTo3D ^ TransformToAncestor(System::Windows::Media::Media3D::Visual3D ^ ancestor);" />
      <MemberSignature Language="F#" Value="member this.TransformToAncestor : System.Windows.Media.Media3D.Visual3D -&gt; System.Windows.Media.Media3D.GeneralTransform2DTo3D" Usage="visual.TransformToAncestor ancestor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.GeneralTransform2DTo3D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ancestor" Type="System.Windows.Media.Media3D.Visual3D" />
      </Parameters>
      <Docs>
        <param name="ancestor"><span data-ttu-id="911c7-209">要将坐标转换到的 <see cref="T:System.Windows.Media.Media3D.Visual3D" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-209">The <see cref="T:System.Windows.Media.Media3D.Visual3D" /> to which the coordinates are transformed.</span></span></param>
        <summary><span data-ttu-id="911c7-210">返回一个转换，该转换可用于将 <see cref="T:System.Windows.Media.Visual" /> 中的坐标转换为可视对象的指定 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 上级。</span><span class="sxs-lookup"><span data-stu-id="911c7-210">Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" /> ancestor of the visual object.</span></span></summary>
        <returns><span data-ttu-id="911c7-211">一个转换，该转换可用于将 <see cref="T:System.Windows.Media.Visual" /> 中的坐标转换为可视对象的指定 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 上级。</span><span class="sxs-lookup"><span data-stu-id="911c7-211">A transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" /> ancestor of the visual object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformToAncestor">
      <MemberSignature Language="C#" Value="public System.Windows.Media.GeneralTransform TransformToAncestor (System.Windows.Media.Visual ancestor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.GeneralTransform TransformToAncestor(class System.Windows.Media.Visual ancestor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformToAncestor (ancestor As Visual) As GeneralTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::GeneralTransform ^ TransformToAncestor(System::Windows::Media::Visual ^ ancestor);" />
      <MemberSignature Language="F#" Value="member this.TransformToAncestor : System.Windows.Media.Visual -&gt; System.Windows.Media.GeneralTransform" Usage="visual.TransformToAncestor ancestor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeneralTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ancestor" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="ancestor"><span data-ttu-id="911c7-212">要将坐标转换到的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-212">The <see cref="T:System.Windows.Media.Visual" /> to which the coordinates are transformed.</span></span></param>
        <summary><span data-ttu-id="911c7-213">返回一个转换，该转换可用于将 <see cref="T:System.Windows.Media.Visual" /> 中的坐标转换为可视对象的指定 <see cref="T:System.Windows.Media.Visual" /> 上级。</span><span class="sxs-lookup"><span data-stu-id="911c7-213">Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified <see cref="T:System.Windows.Media.Visual" /> ancestor of the visual object.</span></span></summary>
        <returns><span data-ttu-id="911c7-214">一个 <see cref="T:System.Windows.Media.GeneralTransform" /> 类型的值。</span><span class="sxs-lookup"><span data-stu-id="911c7-214">A value of type <see cref="T:System.Windows.Media.GeneralTransform" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911c7-215">或者，您可以使用 <xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A?displayProperty=nameWithType> 方法检索相对于其父级的可视对象的偏移量。</span><span class="sxs-lookup"><span data-stu-id="911c7-215">Alternatively, you can use the <xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A?displayProperty=nameWithType> method to retrieve the offset of a visual object relative to its parent.</span></span> <span data-ttu-id="911c7-216">偏移量值包含在返回值中 <xref:System.Windows.Vector> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-216">The offset values are contained within the returned <xref:System.Windows.Vector> value.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet2)]
 [!code-vb[VisualSnippets#VisualSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet2)]  
  
   
  
## Examples  
 <span data-ttu-id="911c7-217">以下标记示例演示了 <xref:System.Windows.Controls.TextBlock> 嵌套在两个对象中的 <xref:System.Windows.Controls.StackPanel> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-217">The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is nested within two <xref:System.Windows.Controls.StackPanel> objects.</span></span>  
  
 [!code-xaml[VisualSnippets#VisualSnippet7](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window2.xaml#visualsnippet7)]  
  
 <span data-ttu-id="911c7-218">下面的代码示例演示如何使用 <xref:System.Windows.Media.Visual.TransformToAncestor%2A> 方法检索 <xref:System.Windows.Controls.TextBlock> 相对于所包含的的偏移量 <xref:System.Windows.Window> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-218">The following code example shows how to use the <xref:System.Windows.Media.Visual.TransformToAncestor%2A> method to retrieve the offset of the <xref:System.Windows.Controls.TextBlock> relative to the containing <xref:System.Windows.Window>.</span></span> <span data-ttu-id="911c7-219">偏移量值包含在返回的中 <xref:System.Windows.Media.GeneralTransform> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-219">The offset values are contained in the returned <xref:System.Windows.Media.GeneralTransform>.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet5](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet5)]
 [!code-vb[VisualSnippets#VisualSnippet5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet5)]  
  
 <span data-ttu-id="911c7-220">偏移量将考虑 <xref:System.Windows.FrameworkElement.Margin%2A> 包含中的所有对象的值 <xref:System.Windows.Window> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-220">The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> values for all objects within the containing <xref:System.Windows.Window>.</span></span> <span data-ttu-id="911c7-221">在这种情况下， <xref:System.Windows.Vector.X%2A> 为28，而 <xref:System.Windows.Vector.Y%2A> 是28。</span><span class="sxs-lookup"><span data-stu-id="911c7-221">In this case, <xref:System.Windows.Vector.X%2A> is 28, and <xref:System.Windows.Vector.Y%2A> is 28.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="911c7-222"><paramref name="ancestor" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-222"><paramref name="ancestor" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="911c7-223"><paramref name="ancestor" /> 不是可视对象的上级。</span><span class="sxs-lookup"><span data-stu-id="911c7-223"><paramref name="ancestor" /> is not an ancestor of the visual.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="911c7-224">这些可视对象不相关。</span><span class="sxs-lookup"><span data-stu-id="911c7-224">The visual objects are not related.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransformToDescendant">
      <MemberSignature Language="C#" Value="public System.Windows.Media.GeneralTransform TransformToDescendant (System.Windows.Media.Visual descendant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.GeneralTransform TransformToDescendant(class System.Windows.Media.Visual descendant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformToDescendant (descendant As Visual) As GeneralTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::GeneralTransform ^ TransformToDescendant(System::Windows::Media::Visual ^ descendant);" />
      <MemberSignature Language="F#" Value="member this.TransformToDescendant : System.Windows.Media.Visual -&gt; System.Windows.Media.GeneralTransform" Usage="visual.TransformToDescendant descendant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeneralTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descendant" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="descendant"><span data-ttu-id="911c7-225">要将坐标转换到的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-225">The <see cref="T:System.Windows.Media.Visual" /> to which the coordinates are transformed.</span></span></param>
        <summary><span data-ttu-id="911c7-226">返回一个转换，该转换可用于将 <see cref="T:System.Windows.Media.Visual" /> 中的坐标转换为指定的可视对象后代。</span><span class="sxs-lookup"><span data-stu-id="911c7-226">Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified visual object descendant.</span></span></summary>
        <returns><span data-ttu-id="911c7-227">一个 <see cref="T:System.Windows.Media.GeneralTransform" /> 类型的值。</span><span class="sxs-lookup"><span data-stu-id="911c7-227">A value of type <see cref="T:System.Windows.Media.GeneralTransform" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="911c7-228">以下标记示例显示了一个 <xref:System.Windows.Controls.TextBlock> 包含在对象中的 <xref:System.Windows.Controls.StackPanel> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-228">The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is contained within a <xref:System.Windows.Controls.StackPanel> object.</span></span>  
  
 [!code-xaml[VisualSnippets#VisualSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml#visualsnippet4)]  
  
 <span data-ttu-id="911c7-229">下面的代码示例演示如何使用 <xref:System.Windows.Media.Visual.TransformToDescendant%2A> 方法检索相对于其子级的偏移量 <xref:System.Windows.Controls.StackPanel> <xref:System.Windows.Controls.TextBlock> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-229">The following code example shows how to use the <xref:System.Windows.Media.Visual.TransformToDescendant%2A> method to retrieve the offset of the <xref:System.Windows.Controls.StackPanel> relative to its child <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="911c7-230">偏移量值包含在返回值中 <xref:System.Windows.Media.GeneralTransform> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-230">The offset values are contained within the returned <xref:System.Windows.Media.GeneralTransform> value.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet9](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet9)]
 [!code-vb[VisualSnippets#VisualSnippet9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet9)]  
  
 <span data-ttu-id="911c7-231">偏移量会考虑 <xref:System.Windows.FrameworkElement.Margin%2A> 所有对象的值。</span><span class="sxs-lookup"><span data-stu-id="911c7-231">The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> values for all objects.</span></span> <span data-ttu-id="911c7-232">在此示例中， <xref:System.Windows.Vector.X%2A> 为-4，并且 <xref:System.Windows.Vector.Y%2A> 为-4。</span><span class="sxs-lookup"><span data-stu-id="911c7-232">In this case, <xref:System.Windows.Vector.X%2A> is -4, and <xref:System.Windows.Vector.Y%2A> is -4.</span></span> <span data-ttu-id="911c7-233">偏移值是负值，因为父对象相对于其子对象是负偏移。</span><span class="sxs-lookup"><span data-stu-id="911c7-233">The offset values are negative values because the parent object is negatively offset relative to its child object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="911c7-234"><paramref name="descendant" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-234"><paramref name="descendant" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="911c7-235">可视对象不是 <paramref name="descendant" /> 可视对象的上级。</span><span class="sxs-lookup"><span data-stu-id="911c7-235">The visual is not an ancestor of the <paramref name="descendant" /> visual.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="911c7-236">这些可视对象不相关。</span><span class="sxs-lookup"><span data-stu-id="911c7-236">The visual objects are not related.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransformToVisual">
      <MemberSignature Language="C#" Value="public System.Windows.Media.GeneralTransform TransformToVisual (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.GeneralTransform TransformToVisual(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformToVisual (visual As Visual) As GeneralTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::GeneralTransform ^ TransformToVisual(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.TransformToVisual : System.Windows.Media.Visual -&gt; System.Windows.Media.GeneralTransform" Usage="visual.TransformToVisual visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeneralTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="911c7-237">要将坐标转换到的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-237">The <see cref="T:System.Windows.Media.Visual" /> to which the coordinates are transformed.</span></span></param>
        <summary><span data-ttu-id="911c7-238">返回一个转换，该转换可用于将 <see cref="T:System.Windows.Media.Visual" /> 中的坐标转换为指定的可视对象。</span><span class="sxs-lookup"><span data-stu-id="911c7-238">Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified visual object.</span></span></summary>
        <returns><span data-ttu-id="911c7-239">一个 <see cref="T:System.Windows.Media.GeneralTransform" /> 类型的值。</span><span class="sxs-lookup"><span data-stu-id="911c7-239">A value of type <see cref="T:System.Windows.Media.GeneralTransform" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911c7-240"><xref:System.Windows.Media.Visual.TransformToAncestor%2A>和 <xref:System.Windows.Media.Visual.TransformToDescendant%2A> 方法也可用于返回视觉对象的转换。</span><span class="sxs-lookup"><span data-stu-id="911c7-240">The <xref:System.Windows.Media.Visual.TransformToAncestor%2A> and <xref:System.Windows.Media.Visual.TransformToDescendant%2A> methods can also be used to return a transform for a visual object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="911c7-241">以下标记示例显示了一个 <xref:System.Windows.Controls.TextBlock> 包含在对象中的 <xref:System.Windows.Controls.StackPanel> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-241">The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is contained within a <xref:System.Windows.Controls.StackPanel> object.</span></span>  
  
 [!code-xaml[VisualSnippets#VisualSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml#visualsnippet4)]  
  
 <span data-ttu-id="911c7-242">下面的代码示例演示如何使用 <xref:System.Windows.Media.Visual.TransformToVisual%2A> 方法检索相对于其子级的偏移量 <xref:System.Windows.Controls.StackPanel> <xref:System.Windows.Controls.TextBlock> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-242">The following code example shows how to use the <xref:System.Windows.Media.Visual.TransformToVisual%2A> method to retrieve the offset of the <xref:System.Windows.Controls.StackPanel> relative to its child <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="911c7-243">偏移量值包含在返回值中 <xref:System.Windows.Media.GeneralTransform> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-243">The offset values are contained within the returned <xref:System.Windows.Media.GeneralTransform> value.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet8](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet8)]
 [!code-vb[VisualSnippets#VisualSnippet8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet8)]  
  
 <span data-ttu-id="911c7-244">偏移量会考虑 <xref:System.Windows.FrameworkElement.Margin%2A> 所有对象的值。</span><span class="sxs-lookup"><span data-stu-id="911c7-244">The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> values for all objects.</span></span> <span data-ttu-id="911c7-245">在此示例中， <xref:System.Windows.Vector.X%2A> 为-4，并且 <xref:System.Windows.Vector.Y%2A> 为-4。</span><span class="sxs-lookup"><span data-stu-id="911c7-245">In this case, <xref:System.Windows.Vector.X%2A> is -4, and <xref:System.Windows.Vector.Y%2A> is -4.</span></span> <span data-ttu-id="911c7-246">偏移值是负值，因为父对象相对于其子对象是负偏移。</span><span class="sxs-lookup"><span data-stu-id="911c7-246">The offset values are negative values because the parent object is negatively offset relative to its child object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="911c7-247"><paramref name="visual" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-247"><paramref name="visual" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="911c7-248">这些可视对象不相关。</span><span class="sxs-lookup"><span data-stu-id="911c7-248">The visual objects are not related.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VisualBitmapEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffect VisualBitmapEffect { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffect VisualBitmapEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualBitmapEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualBitmapEffect As BitmapEffect" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Effects::BitmapEffect ^ VisualBitmapEffect {  protected public:&#xA;System::Windows::Media::Effects::BitmapEffect ^ get(); protected:&#xA; void set(System::Windows::Media::Effects::BitmapEffect ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualBitmapEffect : System.Windows.Media.Effects.BitmapEffect with get, set" Usage="System.Windows.Media.Visual.VisualBitmapEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.Obsolete("Avoid using BitmapEffects as they have very poor performance characteristics.  They will be deprecated in a future version.  Consider using the UIElement.Effect property and ShaderEffects where appropriate instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Avoid using BitmapEffects as they have very poor performance characteristics.  They will be deprecated in a future version.  Consider using the UIElement.Effect property and ShaderEffects where appropriate instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="911c7-249">获取或设置 <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> 的 <see cref="T:System.Windows.Media.Visual" /> 值。</span><span class="sxs-lookup"><span data-stu-id="911c7-249">Gets or sets the <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> value for the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="911c7-250">此可视对象的位图效果。</span><span class="sxs-lookup"><span data-stu-id="911c7-250">The bitmap effect for this visual object.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.UIElement.BitmapEffect" />
      </Docs>
    </Member>
    <Member MemberName="VisualBitmapEffectInput">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffectInput VisualBitmapEffectInput { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffectInput VisualBitmapEffectInput" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualBitmapEffectInput" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualBitmapEffectInput As BitmapEffectInput" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Effects::BitmapEffectInput ^ VisualBitmapEffectInput {  protected public:&#xA;System::Windows::Media::Effects::BitmapEffectInput ^ get(); protected:&#xA; void set(System::Windows::Media::Effects::BitmapEffectInput ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualBitmapEffectInput : System.Windows.Media.Effects.BitmapEffectInput with get, set" Usage="System.Windows.Media.Visual.VisualBitmapEffectInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.Obsolete("Avoid using BitmapEffects as they have very poor performance characteristics.  They will be deprecated in a future version.  Consider using the UIElement.Effect property and ShaderEffects where appropriate instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Avoid using BitmapEffects as they have very poor performance characteristics.  They will be deprecated in a future version.  Consider using the UIElement.Effect property and ShaderEffects where appropriate instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffectInput</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="911c7-251">获取或设置 <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /> 的 <see cref="T:System.Windows.Media.Visual" /> 值。</span><span class="sxs-lookup"><span data-stu-id="911c7-251">Gets or sets the <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /> value for the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="911c7-252">此可视对象的位图效果输入值。</span><span class="sxs-lookup"><span data-stu-id="911c7-252">The bitmap effect input value for this visual object.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.UIElement.BitmapEffectInput" />
      </Docs>
    </Member>
    <Member MemberName="VisualBitmapScalingMode">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BitmapScalingMode VisualBitmapScalingMode { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.BitmapScalingMode VisualBitmapScalingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualBitmapScalingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualBitmapScalingMode As BitmapScalingMode" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::BitmapScalingMode VisualBitmapScalingMode {  protected public:&#xA;System::Windows::Media::BitmapScalingMode get(); protected:&#xA; void set(System::Windows::Media::BitmapScalingMode value); };" />
      <MemberSignature Language="F#" Value="member this.VisualBitmapScalingMode : System.Windows.Media.BitmapScalingMode with get, set" Usage="System.Windows.Media.Visual.VisualBitmapScalingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BitmapScalingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="911c7-253">获取或设置 <see cref="T:System.Windows.Media.BitmapScalingMode" /> 的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-253">Gets or sets the <see cref="T:System.Windows.Media.BitmapScalingMode" /> for the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="911c7-254">的 <see cref="T:System.Windows.Media.BitmapScalingMode" /> 值 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-254">The <see cref="T:System.Windows.Media.BitmapScalingMode" /> value for the <see cref="T:System.Windows.Media.Visual" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualCacheMode">
      <MemberSignature Language="C#" Value="public System.Windows.Media.CacheMode VisualCacheMode { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.CacheMode VisualCacheMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualCacheMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualCacheMode As CacheMode" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::CacheMode ^ VisualCacheMode {  protected public:&#xA;System::Windows::Media::CacheMode ^ get(); protected:&#xA; void set(System::Windows::Media::CacheMode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualCacheMode : System.Windows.Media.CacheMode with get, set" Usage="System.Windows.Media.Visual.VisualCacheMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CacheMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="911c7-255">获取或设置 <see cref="T:System.Windows.Media.Visual" /> 的缓存表示形式。</span><span class="sxs-lookup"><span data-stu-id="911c7-255">Gets or sets a cached representation of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="911c7-256"><see cref="T:System.Windows.Media.CacheMode" />，用于容纳 <see cref="T:System.Windows.Media.Visual" /> 的缓存表示形式。</span><span class="sxs-lookup"><span data-stu-id="911c7-256">A <see cref="T:System.Windows.Media.CacheMode" /> that holds a cached representation of the <see cref="T:System.Windows.Media.Visual" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911c7-257"><xref:System.Windows.Media.Visual.VisualCacheMode%2A>如果需要提高呈现时间的内容的性能，请设置属性。</span><span class="sxs-lookup"><span data-stu-id="911c7-257">Set the <xref:System.Windows.Media.Visual.VisualCacheMode%2A> property when you need to increase performance for content that is time-consuming to render.</span></span> <span data-ttu-id="911c7-258">有关详细信息，请参阅 <xref:System.Windows.Media.BitmapCache>。</span><span class="sxs-lookup"><span data-stu-id="911c7-258">For more information, see <xref:System.Windows.Media.BitmapCache>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.CacheMode" />
        <altmember cref="P:System.Windows.Media.ContainerVisual.CacheMode" />
        <altmember cref="T:System.Windows.Media.BitmapCache" />
        <altmember cref="T:System.Windows.Media.BitmapCacheBrush" />
      </Docs>
    </Member>
    <Member MemberName="VisualChildrenCount">
      <MemberSignature Language="C#" Value="protected virtual int VisualChildrenCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisualChildrenCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualChildrenCount" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property VisualChildrenCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int VisualChildrenCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisualChildrenCount : int" Usage="System.Windows.Media.Visual.VisualChildrenCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="911c7-259">获取 <see cref="T:System.Windows.Media.Visual" /> 的子元素数量。</span><span class="sxs-lookup"><span data-stu-id="911c7-259">Gets the number of child elements for the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="911c7-260">子元素的数量。</span><span class="sxs-lookup"><span data-stu-id="911c7-260">The number of child elements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911c7-261">默认情况下， <xref:System.Windows.Media.Visual> 没有任何子级。</span><span class="sxs-lookup"><span data-stu-id="911c7-261">By default, a <xref:System.Windows.Media.Visual> has no children.</span></span> <span data-ttu-id="911c7-262">因此，默认实现始终返回0。</span><span class="sxs-lookup"><span data-stu-id="911c7-262">Therefore, the default implementation always returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="911c7-263">下面的示例定义的重写实现 <xref:System.Windows.Media.Visual.VisualChildrenCount%2A> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-263">The following example defines an overridden implementation of <xref:System.Windows.Media.Visual.VisualChildrenCount%2A>.</span></span>  
  
 [!code-csharp[DrawingVisualSample#102a](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#102a)]
 [!code-vb[DrawingVisualSample#102a](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#102a)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="911c7-264">从派生的类 <see cref="T:System.Windows.Media.Visual" /> 必须重写此属性和 <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" /> 方法，以便正确枚举可视化树。</span><span class="sxs-lookup"><span data-stu-id="911c7-264">A class that derives from <see cref="T:System.Windows.Media.Visual" /> must override this property, and also the <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" /> method, for the visual tree to be enumerated correctly.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="VisualClearTypeHint">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Media.ClearTypeHint VisualClearTypeHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.ClearTypeHint VisualClearTypeHint" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualClearTypeHint" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property VisualClearTypeHint As ClearTypeHint" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Windows::Media::ClearTypeHint VisualClearTypeHint { System::Windows::Media::ClearTypeHint get(); void set(System::Windows::Media::ClearTypeHint value); };" />
      <MemberSignature Language="F#" Value="member this.VisualClearTypeHint : System.Windows.Media.ClearTypeHint with get, set" Usage="System.Windows.Media.Visual.VisualClearTypeHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ClearTypeHint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="911c7-265">获取或设置 <see cref="T:System.Windows.Media.ClearTypeHint" />，它确定在 <see cref="T:System.Windows.Media.Visual" /> 中呈现 ClearType 的方式。</span><span class="sxs-lookup"><span data-stu-id="911c7-265">Gets or sets the <see cref="T:System.Windows.Media.ClearTypeHint" /> that determines how ClearType is rendered in the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="911c7-266"><see cref="T:System.Windows.Media.ClearTypeHint" /> 的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-266">A <see cref="T:System.Windows.Media.ClearTypeHint" /> of the <see cref="T:System.Windows.Media.Visual" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualClip">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry VisualClip { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Geometry VisualClip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualClip" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualClip As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Geometry ^ VisualClip {  protected public:&#xA;System::Windows::Media::Geometry ^ get(); protected:&#xA; void set(System::Windows::Media::Geometry ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualClip : System.Windows.Media.Geometry with get, set" Usage="System.Windows.Media.Visual.VisualClip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="911c7-267">获取或设置 <see cref="T:System.Windows.Media.Visual" /> 的剪辑区域作为 <see cref="T:System.Windows.Media.Geometry" /> 值。</span><span class="sxs-lookup"><span data-stu-id="911c7-267">Gets or sets the clip region of the <see cref="T:System.Windows.Media.Visual" /> as a <see cref="T:System.Windows.Media.Geometry" /> value.</span></span></summary>
        <value><span data-ttu-id="911c7-268">作为 <see cref="T:System.Windows.Media.Geometry" /> 类型的可视对象的剪辑区域值。</span><span class="sxs-lookup"><span data-stu-id="911c7-268">The clip region value of the visual as a <see cref="T:System.Windows.Media.Geometry" /> type.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms746710(v=vs.90)"><span data-ttu-id="911c7-269">如何：创建剪辑区域</span><span class="sxs-lookup"><span data-stu-id="911c7-269">How to: Create a Clip Region</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VisualEdgeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Media.EdgeMode VisualEdgeMode { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.EdgeMode VisualEdgeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualEdgeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualEdgeMode As EdgeMode" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::EdgeMode VisualEdgeMode {  protected public:&#xA;System::Windows::Media::EdgeMode get(); protected:&#xA; void set(System::Windows::Media::EdgeMode value); };" />
      <MemberSignature Language="F#" Value="member this.VisualEdgeMode : System.Windows.Media.EdgeMode with get, set" Usage="System.Windows.Media.Visual.VisualEdgeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.EdgeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="911c7-270">获取或设置 <see cref="T:System.Windows.Media.Visual" /> 的边缘模式作为 <see cref="T:System.Windows.Media.EdgeMode" /> 值。</span><span class="sxs-lookup"><span data-stu-id="911c7-270">Gets or sets the edge mode of the <see cref="T:System.Windows.Media.Visual" /> as an <see cref="T:System.Windows.Media.EdgeMode" /> value.</span></span></summary>
        <value><span data-ttu-id="911c7-271">可视对象的 <see cref="T:System.Windows.Media.EdgeMode" /> 值。</span><span class="sxs-lookup"><span data-stu-id="911c7-271">The <see cref="T:System.Windows.Media.EdgeMode" /> value of the visual.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.Effect VisualEffect { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.Effect VisualEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualEffect As Effect" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Effects::Effect ^ VisualEffect {  protected public:&#xA;System::Windows::Media::Effects::Effect ^ get(); protected:&#xA; void set(System::Windows::Media::Effects::Effect ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualEffect : System.Windows.Media.Effects.Effect with get, set" Usage="System.Windows.Media.Visual.VisualEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.Effect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="911c7-272">获取或设置要应用于 <see cref="T:System.Windows.Media.Visual" /> 的位图效果。</span><span class="sxs-lookup"><span data-stu-id="911c7-272">Gets or sets the bitmap effect to apply to the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="911c7-273">一个表示位图效果的 <see cref="T:System.Windows.Media.Effects.Effect" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-273">An <see cref="T:System.Windows.Media.Effects.Effect" /> that represents the bitmap effect.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="VisualOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Vector VisualOffset { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector VisualOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualOffset As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Vector VisualOffset {  protected public:&#xA;System::Windows::Vector get(); protected:&#xA; void set(System::Windows::Vector value); };" />
      <MemberSignature Language="F#" Value="member this.VisualOffset : System.Windows.Vector with get, set" Usage="System.Windows.Media.Visual.VisualOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="911c7-274">获取或设置可视对象的偏移量值。</span><span class="sxs-lookup"><span data-stu-id="911c7-274">Gets or sets the offset value of the visual object.</span></span></summary>
        <value><span data-ttu-id="911c7-275">一个指定偏移量值的 <see cref="T:System.Windows.Vector" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-275">A <see cref="T:System.Windows.Vector" /> that specifies the offset value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualOpacity">
      <MemberSignature Language="C#" Value="public double VisualOpacity { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VisualOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualOpacity" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualOpacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:  property double VisualOpacity {  protected public:&#xA;double get(); protected:&#xA; void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.VisualOpacity : double with get, set" Usage="System.Windows.Media.Visual.VisualOpacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="911c7-276">获取或设置 <see cref="T:System.Windows.Media.Visual" /> 的不透明度。</span><span class="sxs-lookup"><span data-stu-id="911c7-276">Gets or sets the opacity of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="911c7-277">可视对象的不透明度值。</span><span class="sxs-lookup"><span data-stu-id="911c7-277">The opacity value of the visual.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911c7-278">的不透明度值 <xref:System.Windows.Media.Visual> 表示为介于0和1之间的值。</span><span class="sxs-lookup"><span data-stu-id="911c7-278">The value of the opacity of the <xref:System.Windows.Media.Visual> is expressed as a value between 0 and 1.</span></span> <span data-ttu-id="911c7-279">如果值为0，则指示元素是完全透明的，而值1表示元素完全不透明。</span><span class="sxs-lookup"><span data-stu-id="911c7-279">A value of 0 indicates that the element is completely transparent, whereas a value of 1 indicates that the element is completely opaque.</span></span> <span data-ttu-id="911c7-280">如果值为0.5，则表示元素为50% 不透明。</span><span class="sxs-lookup"><span data-stu-id="911c7-280">A value of 0.5 indicates that the element is 50 percent opaque.</span></span> <span data-ttu-id="911c7-281">小于0的值将被视为 0;大于1的值将被视为1。</span><span class="sxs-lookup"><span data-stu-id="911c7-281">Values that are less than 0 are treated as 0; values that are greater than 1 are treated as 1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualOpacityMask">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush VisualOpacityMask { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush VisualOpacityMask" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualOpacityMask" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualOpacityMask As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Brush ^ VisualOpacityMask {  protected public:&#xA;System::Windows::Media::Brush ^ get(); protected:&#xA; void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualOpacityMask : System.Windows.Media.Brush with get, set" Usage="System.Windows.Media.Visual.VisualOpacityMask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="911c7-282">获取或设置 <see cref="T:System.Windows.Media.Brush" /> 值，该值表示 <see cref="T:System.Windows.Media.Visual" /> 的不透明蒙板。</span><span class="sxs-lookup"><span data-stu-id="911c7-282">Gets or sets the <see cref="T:System.Windows.Media.Brush" /> value that represents the opacity mask of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="911c7-283">一个表示可视对象的不透明蒙板值的 <see cref="T:System.Windows.Media.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-283">A <see cref="T:System.Windows.Media.Brush" /> that represents the opacity mask value of the visual.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911c7-284">不透明蒙板是一个 <xref:System.Windows.Media.Brush> ，它应用于此视觉对象的呈现内容的任何 alpha 通道蒙板。</span><span class="sxs-lookup"><span data-stu-id="911c7-284">The opacity mask is a <xref:System.Windows.Media.Brush> that is applied to any alpha-channel masking for the rendered content of this visual.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualParent">
      <MemberSignature Language="C#" Value="protected System.Windows.DependencyObject VisualParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject VisualParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualParent" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property VisualParent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::DependencyObject ^ VisualParent { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VisualParent : System.Windows.DependencyObject" Usage="System.Windows.Media.Visual.VisualParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="911c7-285">获取可视对象的可视化树父级。</span><span class="sxs-lookup"><span data-stu-id="911c7-285">Gets the visual tree parent of the visual object.</span></span></summary>
        <value><span data-ttu-id="911c7-286"><see cref="T:System.Windows.Media.Visual" /> 父级。</span><span class="sxs-lookup"><span data-stu-id="911c7-286">The <see cref="T:System.Windows.Media.Visual" /> parent.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.FrameworkContentElement.Parent" />
        <altmember cref="T:System.Windows.Media.VisualTreeHelper" />
      </Docs>
    </Member>
    <Member MemberName="VisualScrollableAreaClip">
      <MemberSignature Language="C#" Value="public System.Windows.Rect? VisualScrollableAreaClip { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Windows.Rect&gt; VisualScrollableAreaClip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualScrollableAreaClip" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualScrollableAreaClip As Nullable(Of Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:  property Nullable&lt;System::Windows::Rect&gt; VisualScrollableAreaClip {  protected public:&#xA;Nullable&lt;System::Windows::Rect&gt; get(); protected:&#xA; void set(Nullable&lt;System::Windows::Rect&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.VisualScrollableAreaClip : Nullable&lt;System.Windows.Rect&gt; with get, set" Usage="System.Windows.Media.Visual.VisualScrollableAreaClip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Windows.Rect&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="911c7-287">获取或设置 <see cref="T:System.Windows.Media.Visual" /> 的剪辑的可滚动区域。</span><span class="sxs-lookup"><span data-stu-id="911c7-287">Gets or sets a clipped scrollable area for the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="911c7-288">一个表示可滚动的剪辑区域的 <see cref="T:System.Windows.Rect" />，如果未分配剪辑区域，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-288">A <see cref="T:System.Windows.Rect" /> that represents the scrollable clipping area, or <see langword="null" /> if no clipping area is assigned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911c7-289">将 <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> 属性设置为在软件中呈现时启用加速滚动。</span><span class="sxs-lookup"><span data-stu-id="911c7-289">Set the <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property to enable accelerated scrolling when rendering in software.</span></span> <span data-ttu-id="911c7-290">这对于远程呈现方案非常有用，例如，通过远程桌面运行或在虚拟机中运行。</span><span class="sxs-lookup"><span data-stu-id="911c7-290">This is useful in remote rendering scenarios, such as running over Remote Desktop or running in a virtual machine.</span></span> <span data-ttu-id="911c7-291">在将滚动其子级的父元素上设置此属性。</span><span class="sxs-lookup"><span data-stu-id="911c7-291">Set this property on the parent element whose children will be scrolled.</span></span> <span data-ttu-id="911c7-292"><xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A>在呈现硬件加速时，设置属性不起作用。</span><span class="sxs-lookup"><span data-stu-id="911c7-292">Setting the <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property has no effect when rendering is hardware accelerated.</span></span>  
  
 <span data-ttu-id="911c7-293"><xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A>属性启用特定的高级方案。</span><span class="sxs-lookup"><span data-stu-id="911c7-293">The <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property enables specific, advanced scenarios.</span></span> <span data-ttu-id="911c7-294">以下列表显示了使用属性时的注意事项 <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> 。</span><span class="sxs-lookup"><span data-stu-id="911c7-294">The following list shows the caveats that apply when you use the <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property.</span></span>  
  
-   <span data-ttu-id="911c7-295">滚动区域的背景必须是不透明的，否则将发生滚动项目。</span><span class="sxs-lookup"><span data-stu-id="911c7-295">The background of the scrolled area must be opaque, or scrolling artifacts will occur.</span></span>  
  
-   <span data-ttu-id="911c7-296"><xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A>仅当 WPF 在软件中呈现时，属性才会加速滚动。</span><span class="sxs-lookup"><span data-stu-id="911c7-296">The <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property accelerates scrolling only when WPF is rendering in software.</span></span> <span data-ttu-id="911c7-297">例如，当应用程序通过远程桌面运行或在虚拟机中本地运行时，会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="911c7-297">For example, this situation occurs when the application is running over Remote Desktop or running locally in a virtual machine.</span></span>  
  
-   <span data-ttu-id="911c7-298">在硬件中呈现时，滚动行为不变。</span><span class="sxs-lookup"><span data-stu-id="911c7-298">The scrolling behavior is unchanged when rendering in hardware.</span></span> <span data-ttu-id="911c7-299">若要防止滚动行为的差异，应保持 <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> 对硬件和软件启用属性。</span><span class="sxs-lookup"><span data-stu-id="911c7-299">To prevent differences in scrolling behavior, you should keep the <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property enabled for both hardware and software.</span></span>  
  
-   <span data-ttu-id="911c7-300">旋转和倾斜变换禁用加速滚动。</span><span class="sxs-lookup"><span data-stu-id="911c7-300">Rotate and skew transforms disable accelerated scrolling.</span></span> <span data-ttu-id="911c7-301">缩放转换和滚动区域上方的水平或垂直翻译工作正常，不会禁用滚动加速。</span><span class="sxs-lookup"><span data-stu-id="911c7-301">Scale transforms and horizontal or vertical translations above the scrolled region work correctly and do not disable scrolling acceleration.</span></span>  
  
-   <span data-ttu-id="911c7-302">更改子树或触发可滚动区域的部分以通过动画进行重绘会按预期方式运行，但会丧失重绘区域加速滚动的优点。</span><span class="sxs-lookup"><span data-stu-id="911c7-302">Changing the subtree or triggering parts of the scrollable area to redraw via animation behave as expected, but lose the benefit of accelerated scrolling for the redrawn area.</span></span> <span data-ttu-id="911c7-303">在滚动发生的相同帧中使滚动区域失效的任何动画消除了此优化的优点。</span><span class="sxs-lookup"><span data-stu-id="911c7-303">Any animation that invalidates the scrolled area during the same frame in which scrolling occurs eliminates the benefit of this optimization.</span></span>  
  
-   <span data-ttu-id="911c7-304">该 <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> 矩形向内对齐到像素。</span><span class="sxs-lookup"><span data-stu-id="911c7-304">The <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> rectangle snaps inward to pixels.</span></span> <span data-ttu-id="911c7-305">因此，滚动矩形的已对齐大小始终小于或等于您设置的大小。</span><span class="sxs-lookup"><span data-stu-id="911c7-305">Therefore, the snapped size of the scrolling rectangle is always less than or equal to the size you have set.</span></span>  
  
-   <span data-ttu-id="911c7-306">靠下的偏移量。</span><span class="sxs-lookup"><span data-stu-id="911c7-306">Offsets snap downward.</span></span> <span data-ttu-id="911c7-307">这意味着，上一个对齐的偏移量和当前对齐的偏移量的差始终为整数的像素数。</span><span class="sxs-lookup"><span data-stu-id="911c7-307">This means that the difference of the previous snapped offset and current snapped offset is always an integer number of pixels.</span></span>  
  
-   <span data-ttu-id="911c7-308">命中测试最多可以关闭一个像素。</span><span class="sxs-lookup"><span data-stu-id="911c7-308">Hit tests can be off by up to a pixel.</span></span>  
  
-   <span data-ttu-id="911c7-309">应启用布局舍入，因为它可以确保可滚动区域的边缘和边界窗口客户端区域将对齐到像素边界，从而使对齐正确。</span><span class="sxs-lookup"><span data-stu-id="911c7-309">Layout rounding should be turned on, because it ensures that the edges of scrollable areas and the boundary window client area are snapped to pixel boundaries, resulting in correct alignment.</span></span>  
  
-   <span data-ttu-id="911c7-310">滚动加速在分层窗口上不起作用。</span><span class="sxs-lookup"><span data-stu-id="911c7-310">Scrolling acceleration does not work on layered windows.</span></span> <span data-ttu-id="911c7-311">这意味着 windows 中 AllowTransparency = = true，windowstyle = = none，等等。</span><span class="sxs-lookup"><span data-stu-id="911c7-311">This means windows in which AllowTransparency == true, window.windowstyle == none, and so on.</span></span>  
  
-   <span data-ttu-id="911c7-312">滚动加速过程中不会发生滚动加速。</span><span class="sxs-lookup"><span data-stu-id="911c7-312">Scrolling acceleration does not occur during full-window rendering.</span></span>  
  
-   <span data-ttu-id="911c7-313">当窗口跨越两台监视器时，滚动加速不起作用。</span><span class="sxs-lookup"><span data-stu-id="911c7-313">Scrolling acceleration does not work when the window straddles two monitors.</span></span>  
  
-   <span data-ttu-id="911c7-314">滚动加速在滚动元素的父链中存在中间呈现目标时不起作用。</span><span class="sxs-lookup"><span data-stu-id="911c7-314">Scrolling acceleration does not work in the presence of intermediate render targets in the parent chain of the scrolled element.</span></span> <span data-ttu-id="911c7-315">以下列表显示了其中一些中间呈现目标。</span><span class="sxs-lookup"><span data-stu-id="911c7-315">The following list shows some of these intermediate render targets.</span></span>  
  
    -   <span data-ttu-id="911c7-316">剪辑</span><span class="sxs-lookup"><span data-stu-id="911c7-316">Clips</span></span>  
  
    -   <span data-ttu-id="911c7-317">效果</span><span class="sxs-lookup"><span data-stu-id="911c7-317">Effects</span></span>  
  
    -   <span data-ttu-id="911c7-318">DrawingBrushes</span><span class="sxs-lookup"><span data-stu-id="911c7-318">DrawingBrushes</span></span>  
  
    -   <span data-ttu-id="911c7-319">VisualBrushes</span><span class="sxs-lookup"><span data-stu-id="911c7-319">VisualBrushes</span></span>  
  
    -   <span data-ttu-id="911c7-320">OpacityMasks</span><span class="sxs-lookup"><span data-stu-id="911c7-320">OpacityMasks</span></span>  
  
    -   <span data-ttu-id="911c7-321">不透明度</span><span class="sxs-lookup"><span data-stu-id="911c7-321">Opacity</span></span>  
  
-   <span data-ttu-id="911c7-322">每个帧只能发生一次加速滚动。</span><span class="sxs-lookup"><span data-stu-id="911c7-322">Only one accelerated scroll can happen per frame.</span></span> <span data-ttu-id="911c7-323">可以有多个加速滚动区域，但其中只有一个可以在框架中执行加速滚动。</span><span class="sxs-lookup"><span data-stu-id="911c7-323">There can be multiple accelerated scroll areas, but only one of them can perform an accelerated scroll during a frame.</span></span> <span data-ttu-id="911c7-324">滚动的区域是不确定的。</span><span class="sxs-lookup"><span data-stu-id="911c7-324">Which area is scrolled is indeterminate.</span></span>  
  
-   <span data-ttu-id="911c7-325">滚动加速支持滚动区域上方的内容 (z 顺序) ，不会滚动到其余内容。</span><span class="sxs-lookup"><span data-stu-id="911c7-325">Scrolling acceleration supports content above the scrolling region (in z-order) that is not scrolled with the rest of the content.</span></span> <span data-ttu-id="911c7-326">系统将计算所有必要的脏区域并完成加速滚动，但会通过线路发送多个附加的位图，将无意中滚动的部分移回其在屏幕上的正确位置。</span><span class="sxs-lookup"><span data-stu-id="911c7-326">The system calculates all necessary dirty regions and completes the accelerated scroll, but it sends several additional bitmaps over the wire to move the unintentionally scrolled portion back to its correct position on screen.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualTextHintingMode">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Media.TextHintingMode VisualTextHintingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.TextHintingMode VisualTextHintingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualTextHintingMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property VisualTextHintingMode As TextHintingMode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Windows::Media::TextHintingMode VisualTextHintingMode { System::Windows::Media::TextHintingMode get(); void set(System::Windows::Media::TextHintingMode value); };" />
      <MemberSignature Language="F#" Value="member this.VisualTextHintingMode : System.Windows.Media.TextHintingMode with get, set" Usage="System.Windows.Media.Visual.VisualTextHintingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextHintingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="911c7-327">获取或设置 <see cref="T:System.Windows.Media.Visual" /> 的 <see cref="T:System.Windows.Media.TextHintingMode" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-327">Gets or sets the <see cref="T:System.Windows.Media.TextHintingMode" /> of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="911c7-328">应用于 <see cref="T:System.Windows.Media.Visual" /> 的 <see cref="T:System.Windows.Media.TextHintingMode" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-328">The <see cref="T:System.Windows.Media.TextHintingMode" /> applied to the <see cref="T:System.Windows.Media.Visual" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualTextRenderingMode">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Media.TextRenderingMode VisualTextRenderingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.TextRenderingMode VisualTextRenderingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualTextRenderingMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property VisualTextRenderingMode As TextRenderingMode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Windows::Media::TextRenderingMode VisualTextRenderingMode { System::Windows::Media::TextRenderingMode get(); void set(System::Windows::Media::TextRenderingMode value); };" />
      <MemberSignature Language="F#" Value="member this.VisualTextRenderingMode : System.Windows.Media.TextRenderingMode with get, set" Usage="System.Windows.Media.Visual.VisualTextRenderingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextRenderingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="911c7-329">获取或设置 <see cref="T:System.Windows.Media.Visual" /> 的 <see cref="T:System.Windows.Media.TextRenderingMode" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-329">Gets or sets the <see cref="T:System.Windows.Media.TextRenderingMode" /> of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="911c7-330">应用于 <see cref="T:System.Windows.Media.Visual" /> 的 <see cref="T:System.Windows.Media.TextRenderingMode" />。</span><span class="sxs-lookup"><span data-stu-id="911c7-330">The <see cref="T:System.Windows.Media.TextRenderingMode" /> applied to the <see cref="T:System.Windows.Media.Visual" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualTransform">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Transform VisualTransform { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Transform VisualTransform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualTransform" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualTransform As Transform" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Transform ^ VisualTransform {  protected public:&#xA;System::Windows::Media::Transform ^ get(); protected:&#xA; void set(System::Windows::Media::Transform ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualTransform : System.Windows.Media.Transform with get, set" Usage="System.Windows.Media.Visual.VisualTransform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Transform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="911c7-331">获取或设置 <see cref="T:System.Windows.Media.Transform" /> 的 <see cref="T:System.Windows.Media.Visual" /> 值。</span><span class="sxs-lookup"><span data-stu-id="911c7-331">Gets or sets the <see cref="T:System.Windows.Media.Transform" /> value for the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <value><span data-ttu-id="911c7-332">可视对象的转换值。</span><span class="sxs-lookup"><span data-stu-id="911c7-332">The transform value of the visual.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualXSnappingGuidelines">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DoubleCollection VisualXSnappingGuidelines { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.DoubleCollection VisualXSnappingGuidelines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualXSnappingGuidelines" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualXSnappingGuidelines As DoubleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::DoubleCollection ^ VisualXSnappingGuidelines {  protected public:&#xA;System::Windows::Media::DoubleCollection ^ get(); protected:&#xA; void set(System::Windows::Media::DoubleCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualXSnappingGuidelines : System.Windows.Media.DoubleCollection with get, set" Usage="System.Windows.Media.Visual.VisualXSnappingGuidelines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DoubleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="911c7-333">获取或设置 x 坐标（垂直）准线集合。</span><span class="sxs-lookup"><span data-stu-id="911c7-333">Gets or sets the x-coordinate (vertical) guideline collection.</span></span></summary>
        <value><span data-ttu-id="911c7-334">视觉对象的 x 坐标准线集合。</span><span class="sxs-lookup"><span data-stu-id="911c7-334">The x-coordinate guideline collection of the visual.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911c7-335">像素对齐是内容布局固定到的过程，以便在特定于设备的像素上呈现对象边缘。</span><span class="sxs-lookup"><span data-stu-id="911c7-335">Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels.</span></span> <span data-ttu-id="911c7-336">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 图形系统使用与设备无关的单元来使分辨率和设备独立。</span><span class="sxs-lookup"><span data-stu-id="911c7-336">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] graphics system uses device-independent units to enable resolution and device independence.</span></span> <span data-ttu-id="911c7-337">每个与设备无关的像素都会随着系统的 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] 设置自动进行缩放。</span><span class="sxs-lookup"><span data-stu-id="911c7-337">Each device independent pixel automatically scales with the system's [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] setting.</span></span> <span data-ttu-id="911c7-338">这为 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 应用程序提供了不同 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] 设置的适当缩放，并使应用程序自动感知 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="911c7-338">This provides [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] applications proper scaling for different [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] settings and makes the application automatically [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]-aware.</span></span>  
  
 <span data-ttu-id="911c7-339">但是，这 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] 种独立性可能会因为抗锯齿而产生不规则边缘渲染。</span><span class="sxs-lookup"><span data-stu-id="911c7-339">However, this [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] independence can create irregular edge rendering due to anti-aliasing.</span></span> <span data-ttu-id="911c7-340">当边缘的位置落在设备像素中间而不是设备像素之间时，可能会出现这些项目，这些项目通常被视为模糊或 "软" 边缘。</span><span class="sxs-lookup"><span data-stu-id="911c7-340">These artifacts, commonly seen as blurry or "soft" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels.</span></span> <span data-ttu-id="911c7-341">若要解决此问题，可为 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 可视化树中的对象边缘提供一种 "对齐" 到设备像素的方式，从而消除抗锯齿产生的软边缘。</span><span class="sxs-lookup"><span data-stu-id="911c7-341">To address this issue, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] provides a way for object edges in a visual tree to "snap" to device pixels, eliminating the soft edges produced by anti-aliasing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)" />
      </Docs>
    </Member>
    <Member MemberName="VisualYSnappingGuidelines">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DoubleCollection VisualYSnappingGuidelines { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.DoubleCollection VisualYSnappingGuidelines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualYSnappingGuidelines" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualYSnappingGuidelines As DoubleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::DoubleCollection ^ VisualYSnappingGuidelines {  protected public:&#xA;System::Windows::Media::DoubleCollection ^ get(); protected:&#xA; void set(System::Windows::Media::DoubleCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualYSnappingGuidelines : System.Windows.Media.DoubleCollection with get, set" Usage="System.Windows.Media.Visual.VisualYSnappingGuidelines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DoubleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="911c7-342">获取或设置 Y 坐标（水平）准线集合。</span><span class="sxs-lookup"><span data-stu-id="911c7-342">Gets or sets the y-coordinate (horizontal) guideline collection.</span></span></summary>
        <value><span data-ttu-id="911c7-343">可视对象的 Y 坐标准线集合。</span><span class="sxs-lookup"><span data-stu-id="911c7-343">The y-coordinate guideline collection of the visual.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911c7-344">像素对齐是内容布局固定到的过程，以便在特定于设备的像素上呈现对象边缘。</span><span class="sxs-lookup"><span data-stu-id="911c7-344">Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels.</span></span> <span data-ttu-id="911c7-345">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 图形系统使用与设备无关的单元来使分辨率和设备独立。</span><span class="sxs-lookup"><span data-stu-id="911c7-345">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] graphics system uses device-independent units to enable resolution and device independence.</span></span> <span data-ttu-id="911c7-346">每个与设备无关的像素都会随着系统的 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] 设置自动进行缩放。</span><span class="sxs-lookup"><span data-stu-id="911c7-346">Each device independent pixel automatically scales with the system's [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] setting.</span></span> <span data-ttu-id="911c7-347">这为 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 应用程序提供了不同 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] 设置的适当缩放，并使应用程序自动感知 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="911c7-347">This provides [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] applications proper scaling for different [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] settings and makes the application automatically [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]-aware.</span></span>  
  
 <span data-ttu-id="911c7-348">但是，这 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] 种独立性可能会因为抗锯齿而产生不规则边缘渲染。</span><span class="sxs-lookup"><span data-stu-id="911c7-348">However, this [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] independence can create irregular edge rendering due to anti-aliasing.</span></span> <span data-ttu-id="911c7-349">当边缘的位置落在设备像素中间而不是设备像素之间时，可能会出现这些项目（通常看起来是模糊或 "软" 边缘）。</span><span class="sxs-lookup"><span data-stu-id="911c7-349">These artifacts, commonly seen as blurry, or "soft" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels.</span></span> <span data-ttu-id="911c7-350">若要解决此问题，可为 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 可视化树中的对象边缘提供一种 "对齐" 到设备像素的方式，从而消除抗锯齿产生的软边缘。</span><span class="sxs-lookup"><span data-stu-id="911c7-350">To address this issue, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] provides a way for object edges in a visual tree to "snap" to device pixels, eliminating the soft edges produced by anti-aliasing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)" />
      </Docs>
    </Member>
  </Members>
</Type>
