<Type Name="RenderCapability" FullName="System.Windows.Media.RenderCapability">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e4a4c2f2c98ef46e8c4ff035ad58a209d20f9fb6" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86642835" /></Metadata><TypeSignature Language="C#" Value="public static class RenderCapability" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RenderCapability extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.RenderCapability" />
  <TypeSignature Language="VB.NET" Value="Public Class RenderCapability" />
  <TypeSignature Language="C++ CLI" Value="public ref class RenderCapability abstract sealed" />
  <TypeSignature Language="F#" Value="type RenderCapability = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4ef62-101">允许 WPF 应用程序为其关联的 <see cref="T:System.Windows.Threading.Dispatcher" /> 对象查询当前的呈现层并注册更改通知。</span><span class="sxs-lookup"><span data-stu-id="4ef62-101">Enables WPF applications to query for the current rendering tier for their associated <see cref="T:System.Windows.Threading.Dispatcher" /> object and to register for notification of changes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ef62-102">呈现层为运行 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 应用程序的设备定义图形硬件功能和性能级别。</span><span class="sxs-lookup"><span data-stu-id="4ef62-102">A rendering tier defines a level of graphics hardware capability and performance for a device that runs a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] application.</span></span> <span data-ttu-id="4ef62-103">最影响呈现层级别的图形硬件的功能如下所示：</span><span class="sxs-lookup"><span data-stu-id="4ef62-103">The features of the graphics hardware that most affect the rendering tier levels are the following:</span></span>  
  
-   <span data-ttu-id="4ef62-104">视频 RAM：图形硬件上的视频内存量决定了可用于合成图形的缓冲区大小和数量。</span><span class="sxs-lookup"><span data-stu-id="4ef62-104">Video RAM: The amount of video memory on the graphics hardware determines the size and number of buffers that can be used for compositing graphics.</span></span>  
  
-   <span data-ttu-id="4ef62-105">像素着色器：像素着色器是一个图形处理函数，用于计算每个像素的效果。</span><span class="sxs-lookup"><span data-stu-id="4ef62-105">Pixel Shader: A pixel shader is a graphics processing function that calculates effects on a per-pixel basis.</span></span> <span data-ttu-id="4ef62-106">每个显示帧可能有数百万像素需要处理，具体取决于显示图形的分辨率。</span><span class="sxs-lookup"><span data-stu-id="4ef62-106">Depending on the resolution of the displayed graphics, there could be several million pixels that need to be processed for each display frame.</span></span>  
  
-   <span data-ttu-id="4ef62-107">顶点着色器：顶点着色器是一个图形处理函数，它对对象的顶点数据执行数学运算。</span><span class="sxs-lookup"><span data-stu-id="4ef62-107">Vertex Shader: A vertex shader is a graphics processing function that performs mathematical operations on the vertex data of the object.</span></span>  
  
-   <span data-ttu-id="4ef62-108">多纹理支持：多纹理支持指的是在三维图形对象上进行混合操作时应用两个或更多不同纹理的功能。</span><span class="sxs-lookup"><span data-stu-id="4ef62-108">Multitexture Support: Multitexture support refers to the ability to apply two or more distinct textures during a blending operation on a 3D graphics object.</span></span> <span data-ttu-id="4ef62-109">多纹理支持的程度取决于图形硬件中的多纹理单元数。</span><span class="sxs-lookup"><span data-stu-id="4ef62-109">The degree of multitexture support is determined by the number of multitexture units on the graphics hardware.</span></span>  
  
 <span data-ttu-id="4ef62-110">"像素着色器"、"顶点着色器" 和 "多纹理" 功能用于定义特定 [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 版本级别，后者反过来用于定义中的不同呈现层 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 。</span><span class="sxs-lookup"><span data-stu-id="4ef62-110">The pixel shader, vertex shader, and multitexture features are used to define specific [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] version levels, which, in turn, are used to define the different rendering tiers in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span></span> <span data-ttu-id="4ef62-111">有关呈现层的完整说明，请参阅 [图形呈现层](/dotnet/framework/wpf/advanced/graphics-rendering-tiers)。</span><span class="sxs-lookup"><span data-stu-id="4ef62-111">For a full description of the rendering tiers, see [Graphics Rendering Tiers](/dotnet/framework/wpf/advanced/graphics-rendering-tiers).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.RenderOptions" />
    <altmember cref="T:System.Windows.Threading.Dispatcher" />
  </Docs>
  <Members>
    <Member MemberName="IsPixelShaderVersionSupported">
      <MemberSignature Language="C#" Value="public static bool IsPixelShaderVersionSupported (short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPixelShaderVersionSupported(int16 majorVersionRequested, int16 minorVersionRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPixelShaderVersionSupported (majorVersionRequested As Short, minorVersionRequested As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPixelShaderVersionSupported(short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="F#" Value="static member IsPixelShaderVersionSupported : int16 * int16 -&gt; bool" Usage="System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported (majorVersionRequested, minorVersionRequested)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="majorVersionRequested" Type="System.Int16" />
        <Parameter Name="minorVersionRequested" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="majorVersionRequested"><span data-ttu-id="4ef62-112">像素着色器的主要版本。</span><span class="sxs-lookup"><span data-stu-id="4ef62-112">The major version of the pixel shader.</span></span></param>
        <param name="minorVersionRequested"><span data-ttu-id="4ef62-113">像素着色器的次要版本。</span><span class="sxs-lookup"><span data-stu-id="4ef62-113">The minor version of the pixel shader.</span></span></param>
        <summary><span data-ttu-id="4ef62-114">获取一个值，该值指示是否支持该指定像素着色器版本。</span><span class="sxs-lookup"><span data-stu-id="4ef62-114">Gets a value that indicates whether the specified pixel shader version is supported.</span></span></summary>
        <returns><span data-ttu-id="4ef62-115">如果 WPF 的当前版本支持该像素着色器版本，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4ef62-115"><see langword="true" /> if the pixel shader version is supported by the current version of WPF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ef62-116"><xref:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported%2A> `true` 如果当前版本的 WPF 支持像素着色器版本，并且 <xref:System.Windows.Media.Effects.Effect> 使用指定的主要/次要版本可在 GPU 上运行，则该方法返回。</span><span class="sxs-lookup"><span data-stu-id="4ef62-116">The <xref:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported%2A> method returns `true` if the pixel shader version is supported by the current version of WPF, and if an <xref:System.Windows.Media.Effects.Effect> using the specified major/minor version can run on the GPU.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="IsPixelShaderVersionSupportedInSoftware">
      <MemberSignature Language="C#" Value="public static bool IsPixelShaderVersionSupportedInSoftware (short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPixelShaderVersionSupportedInSoftware(int16 majorVersionRequested, int16 minorVersionRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPixelShaderVersionSupportedInSoftware (majorVersionRequested As Short, minorVersionRequested As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPixelShaderVersionSupportedInSoftware(short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="F#" Value="static member IsPixelShaderVersionSupportedInSoftware : int16 * int16 -&gt; bool" Usage="System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware (majorVersionRequested, minorVersionRequested)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="majorVersionRequested" Type="System.Int16" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="minorVersionRequested" Type="System.Int16" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="majorVersionRequested"><span data-ttu-id="4ef62-117">像素着色器的主要版本。</span><span class="sxs-lookup"><span data-stu-id="4ef62-117">The major version of the pixel shader.</span></span></param>
        <param name="minorVersionRequested"><span data-ttu-id="4ef62-118">像素着色器的次要版本。</span><span class="sxs-lookup"><span data-stu-id="4ef62-118">The minor version of the pixel shader.</span></span></param>
        <summary><span data-ttu-id="4ef62-119">获取一个值，该值指示是否可以在当前系统上的软件中呈现该指定像素着色器版本。</span><span class="sxs-lookup"><span data-stu-id="4ef62-119">Gets a value that indicates whether the specified pixel shader version can be rendered in software on the current system.</span></span></summary>
        <returns><span data-ttu-id="4ef62-120">如果能够在当前系统上的软件中呈现像素着色器，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4ef62-120"><see langword="true" /> if the pixel shader can be rendered in software on the current system; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ef62-121">只有像素着色器2.0 支持软件呈现。</span><span class="sxs-lookup"><span data-stu-id="4ef62-121">Software rendering is only supported for Pixel Shader 2.0.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="IsShaderEffectSoftwareRenderingSupported">
      <MemberSignature Language="C#" Value="public static bool IsShaderEffectSoftwareRenderingSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsShaderEffectSoftwareRenderingSupported" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsShaderEffectSoftwareRenderingSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsShaderEffectSoftwareRenderingSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsShaderEffectSoftwareRenderingSupported : bool" Usage="System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Obsolete("IsShaderEffectSoftwareRenderingSupported property is deprecated.  Use IsPixelShaderVersionSupportedInSoftware static method instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("IsShaderEffectSoftwareRenderingSupported property is deprecated.  Use IsPixelShaderVersionSupportedInSoftware static method instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ef62-122">获取一个值，该值指示系统能否在软件中呈现位图效果。</span><span class="sxs-lookup"><span data-stu-id="4ef62-122">Gets a value that indicates whether the system can render bitmap effects in software.</span></span></summary>
        <value><span data-ttu-id="4ef62-123">如果系统能够在软件中呈现位图效果，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4ef62-123"><see langword="true" /> if the system can render bitmap effects in software; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="MaxHardwareTextureSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Size MaxHardwareTextureSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Size MaxHardwareTextureSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderCapability.MaxHardwareTextureSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxHardwareTextureSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Size MaxHardwareTextureSize { System::Windows::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxHardwareTextureSize : System.Windows.Size" Usage="System.Windows.Media.RenderCapability.MaxHardwareTextureSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ef62-124">获取基础硬件设备位图创建的最大宽度和高度。</span><span class="sxs-lookup"><span data-stu-id="4ef62-124">Gets the maximum width and height for bitmap creation of the underlying hardware device.</span></span></summary>
        <value><span data-ttu-id="4ef62-125">一个表示硬件位图创建的最大宽度和高度的 <see cref="T:System.Windows.Size" />。</span><span class="sxs-lookup"><span data-stu-id="4ef62-125">A <see cref="T:System.Windows.Size" /> that represents the maximum width and height for hardware bitmap creation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ef62-126">如果有多个设备，则 <xref:System.Windows.Media.RenderCapability.MaxHardwareTextureSize%2A> 返回它们之间的最小大小。</span><span class="sxs-lookup"><span data-stu-id="4ef62-126">If there are multiple devices, <xref:System.Windows.Media.RenderCapability.MaxHardwareTextureSize%2A> returns the minimum size among them.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.BitmapCache" />
      </Docs>
    </Member>
    <Member MemberName="MaxPixelShaderInstructionSlots">
      <MemberSignature Language="C#" Value="public static int MaxPixelShaderInstructionSlots (short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MaxPixelShaderInstructionSlots(int16 majorVersionRequested, int16 minorVersionRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxPixelShaderInstructionSlots (majorVersionRequested As Short, minorVersionRequested As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int MaxPixelShaderInstructionSlots(short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="F#" Value="static member MaxPixelShaderInstructionSlots : int16 * int16 -&gt; int" Usage="System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots (majorVersionRequested, minorVersionRequested)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="majorVersionRequested" Type="System.Int16" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="minorVersionRequested" Type="System.Int16" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="majorVersionRequested"><span data-ttu-id="4ef62-127">像素着色器的主要版本。</span><span class="sxs-lookup"><span data-stu-id="4ef62-127">The major version of the pixel shader.</span></span></param>
        <param name="minorVersionRequested"><span data-ttu-id="4ef62-128">像素着色器的次要版本。</span><span class="sxs-lookup"><span data-stu-id="4ef62-128">The minor version of the pixel shader.</span></span></param>
        <summary><span data-ttu-id="4ef62-129">获取指定像素着色器版本所支持的指令槽的最大数目。</span><span class="sxs-lookup"><span data-stu-id="4ef62-129">Gets the maximum number of instruction slots supported by the specified pixel shader version.</span></span></summary>
        <returns><span data-ttu-id="4ef62-130">Pixel Shader 2.0 为 96，Pixel Shader 3.0 至少为 512，任何其他版本的像素着色器则为 0。</span><span class="sxs-lookup"><span data-stu-id="4ef62-130">96 for Pixel Shader 2.0, 512 or greater for Pixel Shader 3.0, or 0 for any other version of Pixel Shader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ef62-131">像素着色器3.0 支持的指令槽的数目各不相同，但始终为512或更高。</span><span class="sxs-lookup"><span data-stu-id="4ef62-131">The number of instruction slots supported by Pixel Shader 3.0 varies, but is always 512 or greater.</span></span>  
  
 <span data-ttu-id="4ef62-132">仅支持像素着色器2.0 和3.0。</span><span class="sxs-lookup"><span data-stu-id="4ef62-132">Only Pixel Shader 2.0 and 3.0 are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="Tier">
      <MemberSignature Language="C#" Value="public static int Tier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 Tier" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderCapability.Tier" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Tier As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int Tier { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Tier : int" Usage="System.Windows.Media.RenderCapability.Tier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ef62-133">获取一个值，该值指示当前线程的呈现层。</span><span class="sxs-lookup"><span data-stu-id="4ef62-133">Gets a value that indicates the rendering tier for the current thread.</span></span></summary>
        <value><span data-ttu-id="4ef62-134">一个 <see cref="T:System.Int32" /> 值，该值的高序位字与当前线程的呈现层对应。</span><span class="sxs-lookup"><span data-stu-id="4ef62-134">An <see cref="T:System.Int32" /> value whose high-order word corresponds to the rendering tier for the current thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="4ef62-135">从 .NET Framework 4 开始，呈现层 1 进行了重新定义，只包含支持 [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 9.0 或更高版本的图形硬件。</span><span class="sxs-lookup"><span data-stu-id="4ef62-135">Starting in the .NET Framework 4, rendering tier 1 has been redefined to only include graphics hardware that supports [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 9.0 or greater.</span></span> <span data-ttu-id="4ef62-136">支持 [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 7 或 8 的图形硬件现定义为呈现层 0。</span><span class="sxs-lookup"><span data-stu-id="4ef62-136">Graphics hardware that supports [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 7 or 8 is now defined as rendering tier 0.</span></span>  
  
 <span data-ttu-id="4ef62-137">返回值是以下三个可能的值之一：</span><span class="sxs-lookup"><span data-stu-id="4ef62-137">The return value is one of three possible values:</span></span>  
  
|<span data-ttu-id="4ef62-138">返回值</span><span class="sxs-lookup"><span data-stu-id="4ef62-138">Return value</span></span>|<span data-ttu-id="4ef62-139">呈现层</span><span class="sxs-lookup"><span data-stu-id="4ef62-139">Rendering tier</span></span>|<span data-ttu-id="4ef62-140">说明</span><span class="sxs-lookup"><span data-stu-id="4ef62-140">Notes</span></span>|  
|------------------|--------------------|-----------|  
|<span data-ttu-id="4ef62-141">0x00000000</span><span class="sxs-lookup"><span data-stu-id="4ef62-141">0x00000000</span></span>|<span data-ttu-id="4ef62-142">0</span><span class="sxs-lookup"><span data-stu-id="4ef62-142">0</span></span>|<span data-ttu-id="4ef62-143">设备上的应用程序不能使用图形硬件加速。</span><span class="sxs-lookup"><span data-stu-id="4ef62-143">No graphics hardware acceleration is available for the application on the device.</span></span> <span data-ttu-id="4ef62-144">所有图形功能都使用软件加速。</span><span class="sxs-lookup"><span data-stu-id="4ef62-144">All graphics features use software acceleration.</span></span> <span data-ttu-id="4ef62-145">[!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 版本级别低于 9.0。</span><span class="sxs-lookup"><span data-stu-id="4ef62-145">The [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] version level is less than version 9.0.</span></span>|  
|<span data-ttu-id="4ef62-146">0x00010000</span><span class="sxs-lookup"><span data-stu-id="4ef62-146">0x00010000</span></span>|<span data-ttu-id="4ef62-147">1</span><span class="sxs-lookup"><span data-stu-id="4ef62-147">1</span></span>|<span data-ttu-id="4ef62-148">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]如果所需的系统资源可用且还未耗尽，则的大多数图形功能都将使用硬件加速。</span><span class="sxs-lookup"><span data-stu-id="4ef62-148">Most of the graphics features of [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] will use hardware acceleration if the necessary system resources are available and have not been exhausted.</span></span> <span data-ttu-id="4ef62-149">这对应于高于或等于 9.0 的 [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 版本。</span><span class="sxs-lookup"><span data-stu-id="4ef62-149">This corresponds to a [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] version that is greater than or equal to 9.0.</span></span>|  
|<span data-ttu-id="4ef62-150">0x00020000</span><span class="sxs-lookup"><span data-stu-id="4ef62-150">0x00020000</span></span>|<span data-ttu-id="4ef62-151">2</span><span class="sxs-lookup"><span data-stu-id="4ef62-151">2</span></span>|<span data-ttu-id="4ef62-152">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]如果所需的系统资源尚未用尽，则的大多数图形功能都将使用硬件加速。</span><span class="sxs-lookup"><span data-stu-id="4ef62-152">Most of the graphics features of [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] will use hardware acceleration provided the necessary system resources have not been exhausted.</span></span> <span data-ttu-id="4ef62-153">这对应于高于或等于 9.0 的 [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 版本。</span><span class="sxs-lookup"><span data-stu-id="4ef62-153">This corresponds to a [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] version that is greater than or equal to 9.0.</span></span>|  
  
 <span data-ttu-id="4ef62-154">下表显示呈现层 1 和呈现层 2 的图形硬件需求差异：</span><span class="sxs-lookup"><span data-stu-id="4ef62-154">The following table shows the differences in graphics hardware requirements for rendering tier 1 and rendering tier 2:</span></span>  
  
|<span data-ttu-id="4ef62-155">功能</span><span class="sxs-lookup"><span data-stu-id="4ef62-155">Feature</span></span>|<span data-ttu-id="4ef62-156">第 1 层</span><span class="sxs-lookup"><span data-stu-id="4ef62-156">Tier 1</span></span>|<span data-ttu-id="4ef62-157">第 2 层</span><span class="sxs-lookup"><span data-stu-id="4ef62-157">Tier 2</span></span>|  
|-------------|------------|------------|  
|[!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] <span data-ttu-id="4ef62-158">版本</span><span class="sxs-lookup"><span data-stu-id="4ef62-158">version</span></span>|<span data-ttu-id="4ef62-159">必须高于或等于 9.0。</span><span class="sxs-lookup"><span data-stu-id="4ef62-159">Must be greater than or equal to 9.0.</span></span>|<span data-ttu-id="4ef62-160">必须高于或等于 9.0。</span><span class="sxs-lookup"><span data-stu-id="4ef62-160">Must be greater than or equal to 9.0.</span></span>|  
|<span data-ttu-id="4ef62-161">视频 RAM</span><span class="sxs-lookup"><span data-stu-id="4ef62-161">Video RAM</span></span>|<span data-ttu-id="4ef62-162">必须大于或等于 60 MB。</span><span class="sxs-lookup"><span data-stu-id="4ef62-162">Must be greater than or equal to 60MB.</span></span>|<span data-ttu-id="4ef62-163">必须大于或等于 120 MB。</span><span class="sxs-lookup"><span data-stu-id="4ef62-163">Must be greater than or equal to 120MB.</span></span>|  
|<span data-ttu-id="4ef62-164">像素着色器</span><span class="sxs-lookup"><span data-stu-id="4ef62-164">Pixel shader</span></span>|<span data-ttu-id="4ef62-165">版本级别必须高于或等于 2.0。</span><span class="sxs-lookup"><span data-stu-id="4ef62-165">Version level must greater than or equal to 2.0.</span></span>|<span data-ttu-id="4ef62-166">版本级别必须高于或等于 2.0。</span><span class="sxs-lookup"><span data-stu-id="4ef62-166">Version level must greater than or equal to 2.0.</span></span>|  
|<span data-ttu-id="4ef62-167">顶点着色器</span><span class="sxs-lookup"><span data-stu-id="4ef62-167">Vertex shader</span></span>|<span data-ttu-id="4ef62-168">没有要求。</span><span class="sxs-lookup"><span data-stu-id="4ef62-168">No requirement.</span></span>|<span data-ttu-id="4ef62-169">版本级别必须高于或等于 2.0。</span><span class="sxs-lookup"><span data-stu-id="4ef62-169">Version level must greater than or equal to 2.0.</span></span>|  
|<span data-ttu-id="4ef62-170">多纹理单元</span><span class="sxs-lookup"><span data-stu-id="4ef62-170">Multitexture units</span></span>|<span data-ttu-id="4ef62-171">没有要求。</span><span class="sxs-lookup"><span data-stu-id="4ef62-171">No requirement.</span></span>|<span data-ttu-id="4ef62-172">单元数必须大于或等于 4。</span><span class="sxs-lookup"><span data-stu-id="4ef62-172">Number of units must greater than or equal to 4.</span></span>|  
  
 <span data-ttu-id="4ef62-173">有关呈现层定义的详细信息，请参阅 [图形呈现层](/dotnet/framework/wpf/advanced/graphics-rendering-tiers)。</span><span class="sxs-lookup"><span data-stu-id="4ef62-173">For more information on the definitions for the rendering tiers, see [Graphics Rendering Tiers](/dotnet/framework/wpf/advanced/graphics-rendering-tiers).</span></span>  
  
 <span data-ttu-id="4ef62-174">如果当前线程没有关联的 <xref:System.Windows.Threading.Dispatcher> 对象，则会自动创建一个。</span><span class="sxs-lookup"><span data-stu-id="4ef62-174">If the current thread does not have an associated <xref:System.Windows.Threading.Dispatcher> object, one is automatically created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ef62-175">下面的示例演示如何返回当前线程的呈现层。</span><span class="sxs-lookup"><span data-stu-id="4ef62-175">The following example shows how to return the rendering tier for the current thread.</span></span>  
  
 [!code-csharp[RenderOptions#RenderCapability1](~/samples/snippets/csharp/VS_Snippets_Wpf/RenderOptions/CSharp/Window1.xaml.cs#rendercapability1)]
 [!code-vb[RenderOptions#RenderCapability1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RenderOptions/visualbasic/window1.xaml.vb#rendercapability1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TierChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler TierChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TierChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.RenderCapability.TierChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event TierChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ TierChanged;" />
      <MemberSignature Language="F#" Value="member this.TierChanged : EventHandler " Usage="member this.TierChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ef62-176">在呈现层已为当前线程的 <see cref="T:System.Windows.Threading.Dispatcher" /> 对象而更改时发生。</span><span class="sxs-lookup"><span data-stu-id="4ef62-176">Occurs when the rendering tier has changed for the <see cref="T:System.Windows.Threading.Dispatcher" /> object of the current thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ef62-177">如果当前线程没有关联的 <xref:System.Windows.Threading.Dispatcher> 对象，则会自动创建一个。</span><span class="sxs-lookup"><span data-stu-id="4ef62-177">If the current thread does not have an associated <xref:System.Windows.Threading.Dispatcher> object, one is automatically created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
