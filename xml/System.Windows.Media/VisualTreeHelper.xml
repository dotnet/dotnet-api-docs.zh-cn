<Type Name="VisualTreeHelper" FullName="System.Windows.Media.VisualTreeHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bb6bcc35d8067aaa34bcf45d98cb4fdfe84676b1" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83973207" /></Metadata><TypeSignature Language="C#" Value="public static class VisualTreeHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit VisualTreeHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.VisualTreeHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualTreeHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualTreeHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type VisualTreeHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="775d4-101">提供一些实用工具方法，用于执行涉及可视化树中的节点的常见任务。</span><span class="sxs-lookup"><span data-stu-id="775d4-101">Provides utility methods that perform common tasks involving nodes in a visual tree.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775d4-102">可视化树中的节点可以是 <xref:System.Windows.Media.Visual> 或 <xref:System.Windows.Media.Media3D.Visual3D> 对象。</span><span class="sxs-lookup"><span data-stu-id="775d4-102">Nodes in the visual tree can be either <xref:System.Windows.Media.Visual> or <xref:System.Windows.Media.Media3D.Visual3D> objects.</span></span> <span data-ttu-id="775d4-103">特定于某种视觉对象类型的方法被类型化为 <xref:System.Windows.Media.Visual> 或 <xref:System.Windows.Media.Media3D.Visual3D>。</span><span class="sxs-lookup"><span data-stu-id="775d4-103">Methods that are specific to a type of visual object are typed as either <xref:System.Windows.Media.Visual> or <xref:System.Windows.Media.Media3D.Visual3D>.</span></span> <span data-ttu-id="775d4-104">但 <xref:System.Windows.Media.VisualTreeHelper> 类中的某些方法可以接受表示任一类型的视觉对象的 <xref:System.Windows.DependencyObject> 值。</span><span class="sxs-lookup"><span data-stu-id="775d4-104">However, some methods in the <xref:System.Windows.Media.VisualTreeHelper> class can accept a <xref:System.Windows.DependencyObject> value that represents either type of visual object.</span></span>  
  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="775d4-105">支持以编程方式访问对象的多个不同树结构。</span><span class="sxs-lookup"><span data-stu-id="775d4-105">supports programmatic access to several different tree structures of objects.</span></span> <span data-ttu-id="775d4-106">这主要是公开为可视化树和逻辑树。</span><span class="sxs-lookup"><span data-stu-id="775d4-106">Primarily, this is exposed as a visual tree and a logical tree.</span></span> <span data-ttu-id="775d4-107">在某些情况下，逻辑树是 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 应用程序中的元素的更实用表示形式，但从概念上讲，逻辑树是在 <xref:System.Windows.Media.Visual> 类之外的级别实现的。</span><span class="sxs-lookup"><span data-stu-id="775d4-107">In some cases, the logical tree is a more useful representation of the elements in a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] application, but conceptually the logical tree is implemented at a level beyond the <xref:System.Windows.Media.Visual> class.</span></span> <span data-ttu-id="775d4-108">与可视化树不同，逻辑树可以表示非可视数据对象，如 <xref:System.Windows.Documents.ListItem>。</span><span class="sxs-lookup"><span data-stu-id="775d4-108">Unlike the visual tree, the logical tree can represent nonvisual data objects, such as <xref:System.Windows.Documents.ListItem>.</span></span> <span data-ttu-id="775d4-109">有关逻辑树的详细信息，请参阅 [WPF 中的树](/dotnet/framework/wpf/advanced/trees-in-wpf)。</span><span class="sxs-lookup"><span data-stu-id="775d4-109">For more information on the logical tree, see [Trees in WPF](/dotnet/framework/wpf/advanced/trees-in-wpf).</span></span> <span data-ttu-id="775d4-110">类似的实用工具方法类还支持逻辑树，<xref:System.Windows.LogicalTreeHelper>。</span><span class="sxs-lookup"><span data-stu-id="775d4-110">The logical tree also is supported by a similar utility method class, <xref:System.Windows.LogicalTreeHelper>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="775d4-111">下面的示例演示如何枚举视觉对象的所有后代，如果你对序列化可视化对象层次结构的所有呈现信息感兴趣，则可能希望使用该技术。</span><span class="sxs-lookup"><span data-stu-id="775d4-111">The following example shows how to enumerate all the descendants of a visual object, which is a technique you might want to use if you were interested in serializing all the rendering information of a visual object hierarchy.</span></span>  
  
 [!code-csharp[VisualsOverview#101](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualsOverview/CSharp/Window1.xaml.cs#101)]
 [!code-vb[VisualsOverview#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualsOverview/visualbasic/window1.xaml.vb#101)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetBitmapEffect">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Effects.BitmapEffect GetBitmapEffect (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.Effects.BitmapEffect GetBitmapEffect(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetBitmapEffect(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBitmapEffect (reference As Visual) As BitmapEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Effects::BitmapEffect ^ GetBitmapEffect(System::Windows::Media::Visual ^ reference);" />
      <MemberSignature Language="F#" Value="static member GetBitmapEffect : System.Windows.Media.Visual -&gt; System.Windows.Media.Effects.BitmapEffect" Usage="System.Windows.Media.VisualTreeHelper.GetBitmapEffect reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-112">包含位图效果的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-112">The <see cref="T:System.Windows.Media.Visual" /> that contains the bitmap effect.</span></span></param>
        <summary><span data-ttu-id="775d4-113">返回指定 <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> 的 <see cref="T:System.Windows.Media.Visual" /> 值。</span><span class="sxs-lookup"><span data-stu-id="775d4-113">Returns the <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> value for the specified <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <returns><span data-ttu-id="775d4-114">用于此 <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> 的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-114">The <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> for this <see cref="T:System.Windows.Media.Visual" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBitmapEffectInput">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Effects.BitmapEffectInput GetBitmapEffectInput (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.Effects.BitmapEffectInput GetBitmapEffectInput(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetBitmapEffectInput(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBitmapEffectInput (reference As Visual) As BitmapEffectInput" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Effects::BitmapEffectInput ^ GetBitmapEffectInput(System::Windows::Media::Visual ^ reference);" />
      <MemberSignature Language="F#" Value="static member GetBitmapEffectInput : System.Windows.Media.Visual -&gt; System.Windows.Media.Effects.BitmapEffectInput" Usage="System.Windows.Media.VisualTreeHelper.GetBitmapEffectInput reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffectInput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-115">包含位图效果输入值的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-115">The <see cref="T:System.Windows.Media.Visual" /> that contains the bitmap effect input value.</span></span></param>
        <summary><span data-ttu-id="775d4-116">返回指定 <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /> 的 <see cref="T:System.Windows.Media.Visual" /> 值。</span><span class="sxs-lookup"><span data-stu-id="775d4-116">Returns the <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /> value for the specified <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <returns><span data-ttu-id="775d4-117">用于此 <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /> 的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-117">The <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /> for this <see cref="T:System.Windows.Media.Visual" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.CacheMode GetCacheMode (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.CacheMode GetCacheMode(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetCacheMode(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCacheMode (reference As Visual) As CacheMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::CacheMode ^ GetCacheMode(System::Windows::Media::Visual ^ reference);" />
      <MemberSignature Language="F#" Value="static member GetCacheMode : System.Windows.Media.Visual -&gt; System.Windows.Media.CacheMode" Usage="System.Windows.Media.VisualTreeHelper.GetCacheMode reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CacheMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-118">要获取其 <see cref="T:System.Windows.Media.Visual" /> 的 <see cref="T:System.Windows.Media.CacheMode" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-118">The <see cref="T:System.Windows.Media.Visual" /> to get the <see cref="T:System.Windows.Media.CacheMode" /> for.</span></span></param>
        <summary><span data-ttu-id="775d4-119">检索指定的 <see cref="T:System.Windows.Media.Visual" /> 的缓存表示形式。</span><span class="sxs-lookup"><span data-stu-id="775d4-119">Retrieves the cached representation of the specified <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <returns><span data-ttu-id="775d4-120"><paramref name="reference" /> 的 <see cref="T:System.Windows.Media.CacheMode" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-120">The <see cref="T:System.Windows.Media.CacheMode" /> for <paramref name="reference" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.BitmapCache" />
        <altmember cref="T:System.Windows.Media.BitmapCacheBrush" />
      </Docs>
    </Member>
    <Member MemberName="GetChild">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetChild (System.Windows.DependencyObject reference, int childIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetChild(class System.Windows.DependencyObject reference, int32 childIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChild (reference As DependencyObject, childIndex As Integer) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetChild(System::Windows::DependencyObject ^ reference, int childIndex);" />
      <MemberSignature Language="F#" Value="static member GetChild : System.Windows.DependencyObject * int -&gt; System.Windows.DependencyObject" Usage="System.Windows.Media.VisualTreeHelper.GetChild (reference, childIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.DependencyObject" />
        <Parameter Name="childIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-121">父可视对象，作为 <see cref="T:System.Windows.DependencyObject" /> 引用。</span><span class="sxs-lookup"><span data-stu-id="775d4-121">The parent visual, referenced as a <see cref="T:System.Windows.DependencyObject" />.</span></span></param>
        <param name="childIndex"><span data-ttu-id="775d4-122">表示 <paramref name="reference" /> 包含的子可视对象的索引。</span><span class="sxs-lookup"><span data-stu-id="775d4-122">The index that represents the child visual that is contained by <paramref name="reference" />.</span></span></param>
        <summary><span data-ttu-id="775d4-123">返回指定父可视对象中位于指定集合索引位置的子可视对象。</span><span class="sxs-lookup"><span data-stu-id="775d4-123">Returns the child visual object from the specified collection index within a specified parent.</span></span></summary>
        <returns><span data-ttu-id="775d4-124">子可视对象的索引值。</span><span class="sxs-lookup"><span data-stu-id="775d4-124">The index value of the child visual object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775d4-125">调用 <xref:System.Windows.Media.VisualTreeHelper.GetChildrenCount%2A> 方法，以确定父视觉对象的子元素总数。</span><span class="sxs-lookup"><span data-stu-id="775d4-125">Call the <xref:System.Windows.Media.VisualTreeHelper.GetChildrenCount%2A> method to determine the total number of child elements of a parent visual.</span></span>  
  
 <span data-ttu-id="775d4-126">`reference` 的值可以表示 <xref:System.Windows.Media.Visual> 或 <xref:System.Windows.Media.Media3D.Visual3D> 对象，这就是在此处使用常见基类型 <xref:System.Windows.DependencyObject> 作为参数类型的原因。</span><span class="sxs-lookup"><span data-stu-id="775d4-126">The value of `reference` can represent either a <xref:System.Windows.Media.Visual> or <xref:System.Windows.Media.Media3D.Visual3D> object, which is why the common base type <xref:System.Windows.DependencyObject> is used here as a parameter type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="775d4-127">下面的示例演示如何枚举视觉对象的所有子代。</span><span class="sxs-lookup"><span data-stu-id="775d4-127">The following example shows how to enumerate all the descendants of a visual object.</span></span> <span data-ttu-id="775d4-128">如果您有兴趣序列化可视对象层次结构的所有呈现信息，或正在执行分析或替代呈现，则可以使用这种方法。</span><span class="sxs-lookup"><span data-stu-id="775d4-128">This is a technique you might use if you are interested in serializing all the rendering information of a visual object hierarchy or are performing analysis or alternative rendering.</span></span>  
  
 [!code-csharp[VisualsOverview#101](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualsOverview/CSharp/Window1.xaml.cs#101)]
 [!code-vb[VisualsOverview#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualsOverview/visualbasic/window1.xaml.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildrenCount">
      <MemberSignature Language="C#" Value="public static int GetChildrenCount (System.Windows.DependencyObject reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetChildrenCount(class System.Windows.DependencyObject reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildrenCount (reference As DependencyObject) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetChildrenCount(System::Windows::DependencyObject ^ reference);" />
      <MemberSignature Language="F#" Value="static member GetChildrenCount : System.Windows.DependencyObject -&gt; int" Usage="System.Windows.Media.VisualTreeHelper.GetChildrenCount reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-129">父可视对象，作为 <see cref="T:System.Windows.DependencyObject" /> 引用。</span><span class="sxs-lookup"><span data-stu-id="775d4-129">The parent visual that is referenced as a <see cref="T:System.Windows.DependencyObject" />.</span></span></param>
        <summary><span data-ttu-id="775d4-130">返回指定可视对象包含的子级个数。</span><span class="sxs-lookup"><span data-stu-id="775d4-130">Returns the number of children that the specified visual object contains.</span></span></summary>
        <returns><span data-ttu-id="775d4-131">父可视对象包含的子可视对象数。</span><span class="sxs-lookup"><span data-stu-id="775d4-131">The number of child visuals that the parent visual contains.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775d4-132">使用 <xref:System.Windows.Media.VisualTreeHelper.GetChild%2A> 方法可以检索父视觉对象的指定子级。</span><span class="sxs-lookup"><span data-stu-id="775d4-132">Use the <xref:System.Windows.Media.VisualTreeHelper.GetChild%2A> method to retrieve a specified child of a parent visual.</span></span>  
  
 <span data-ttu-id="775d4-133">`reference` 的值可以表示 <xref:System.Windows.Media.Visual> 或 <xref:System.Windows.Media.Media3D.Visual3D> 对象，这就是在此处使用常见基类型 <xref:System.Windows.DependencyObject> 作为参数类型的原因。</span><span class="sxs-lookup"><span data-stu-id="775d4-133">The value of `reference` can represent either a <xref:System.Windows.Media.Visual> or <xref:System.Windows.Media.Media3D.Visual3D> object, which is why the common base type <xref:System.Windows.DependencyObject> is used here as a parameter type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="775d4-134">下面的示例演示如何枚举视觉对象的所有子代。</span><span class="sxs-lookup"><span data-stu-id="775d4-134">The following example shows how to enumerate all the descendants of a visual object.</span></span> <span data-ttu-id="775d4-135">如果您有兴趣序列化可视对象层次结构的所有呈现信息，或正在执行分析或替代呈现，则可以使用这种方法。</span><span class="sxs-lookup"><span data-stu-id="775d4-135">This is a technique you might use if you are interested in serializing all the rendering information of a visual object hierarchy or are performing analysis or alternative rendering.</span></span>  
  
 [!code-csharp[VisualsOverview#101](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualsOverview/CSharp/Window1.xaml.cs#101)]
 [!code-vb[VisualsOverview#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualsOverview/visualbasic/window1.xaml.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClip">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Geometry GetClip (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.Geometry GetClip(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetClip(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClip (reference As Visual) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Geometry ^ GetClip(System::Windows::Media::Visual ^ reference);" />
      <MemberSignature Language="F#" Value="static member GetClip : System.Windows.Media.Visual -&gt; System.Windows.Media.Geometry" Usage="System.Windows.Media.VisualTreeHelper.GetClip reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-136">要返回其剪辑区域值的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-136">The <see cref="T:System.Windows.Media.Visual" /> whose clip region value is returned.</span></span></param>
        <summary><span data-ttu-id="775d4-137">将指定的 <see cref="T:System.Windows.Media.Visual" /> 的剪辑区域作为 <see cref="T:System.Windows.Media.Geometry" /> 值返回。</span><span class="sxs-lookup"><span data-stu-id="775d4-137">Return the clip region of the specified <see cref="T:System.Windows.Media.Visual" /> as a <see cref="T:System.Windows.Media.Geometry" /> value.</span></span></summary>
        <returns><span data-ttu-id="775d4-138">作为 <see cref="T:System.Windows.Media.Visual" /> 类型返回的 <see cref="T:System.Windows.Media.Geometry" /> 的剪辑区域值。</span><span class="sxs-lookup"><span data-stu-id="775d4-138">The clip region value of the <see cref="T:System.Windows.Media.Visual" /> returned as a <see cref="T:System.Windows.Media.Geometry" /> type.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.ContainerVisual.Clip" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms746710(v=vs.90)"><span data-ttu-id="775d4-139">如何：创建剪辑区域</span><span class="sxs-lookup"><span data-stu-id="775d4-139">How to: Create a Clip Region</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetContentBounds">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="775d4-140">返回 <see cref="T:System.Windows.Media.Visual" /> 的已缓存的边界框矩形。</span><span class="sxs-lookup"><span data-stu-id="775d4-140">Returns the cached bounding box rectangle for the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetContentBounds">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Media3D.Rect3D GetContentBounds (System.Windows.Media.Media3D.Visual3D reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Media3D.Rect3D GetContentBounds(class System.Windows.Media.Media3D.Visual3D reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Media3D.Visual3D)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetContentBounds (reference As Visual3D) As Rect3D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Media3D::Rect3D GetContentBounds(System::Windows::Media::Media3D::Visual3D ^ reference);" />
      <MemberSignature Language="F#" Value="static member GetContentBounds : System.Windows.Media.Media3D.Visual3D -&gt; System.Windows.Media.Media3D.Rect3D" Usage="System.Windows.Media.VisualTreeHelper.GetContentBounds reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.Rect3D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Media3D.Visual3D" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-141">要计算其边界框值的三维可视对象。</span><span class="sxs-lookup"><span data-stu-id="775d4-141">The 3D visual whose bounding box value is computed.</span></span></param>
        <summary><span data-ttu-id="775d4-142">返回指定 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 的已缓存的边界框矩形。</span><span class="sxs-lookup"><span data-stu-id="775d4-142">Returns the cached bounding box rectangle for the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" />.</span></span></summary>
        <returns><span data-ttu-id="775d4-143"><see cref="T:System.Windows.Media.Media3D.Visual3D" /> 的边界框三维矩形。</span><span class="sxs-lookup"><span data-stu-id="775d4-143">The bounding box 3D rectangle for the <see cref="T:System.Windows.Media.Media3D.Visual3D" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775d4-144">使用 <xref:System.Windows.Media.VisualTreeHelper.GetDescendantBounds%2A> 方法返回三维视觉对象的所有子代的所有内容边界框的联合，其中包括 <xref:System.Windows.Media.Media3D.Visual3D> 本身。</span><span class="sxs-lookup"><span data-stu-id="775d4-144">Use the <xref:System.Windows.Media.VisualTreeHelper.GetDescendantBounds%2A> method to return the union of all the content bounding boxes for all the descendants of a 3D visual object, which includes the <xref:System.Windows.Media.Media3D.Visual3D> itself.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Visual)" />
      </Docs>
    </Member>
    <Member MemberName="GetContentBounds">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect GetContentBounds (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect GetContentBounds(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetContentBounds (reference As Visual) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect GetContentBounds(System::Windows::Media::Visual ^ reference);" />
      <MemberSignature Language="F#" Value="static member GetContentBounds : System.Windows.Media.Visual -&gt; System.Windows.Rect" Usage="System.Windows.Media.VisualTreeHelper.GetContentBounds reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-145">要计算其边界框值的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-145">The <see cref="T:System.Windows.Media.Visual" /> whose bounding box value is computed.</span></span></param>
        <summary><span data-ttu-id="775d4-146">返回指定 <see cref="T:System.Windows.Media.Visual" /> 的已缓存的边界框矩形。</span><span class="sxs-lookup"><span data-stu-id="775d4-146">Returns the cached bounding box rectangle for the specified <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <returns><span data-ttu-id="775d4-147"><see cref="T:System.Windows.Media.Visual" /> 的边界框矩形。</span><span class="sxs-lookup"><span data-stu-id="775d4-147">The bounding box rectangle for the <see cref="T:System.Windows.Media.Visual" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775d4-148">调用 <xref:System.Windows.Media.VisualTreeHelper.GetDescendantBounds%2A> 方法以返回可视对象的所有子代的所有内容边界框的联合，其中包括 <xref:System.Windows.Media.Visual> 本身。</span><span class="sxs-lookup"><span data-stu-id="775d4-148">Call the <xref:System.Windows.Media.VisualTreeHelper.GetDescendantBounds%2A> method to return the union of all the content bounding boxes for all the descendants of a visual object, which includes the <xref:System.Windows.Media.Visual> itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="775d4-149">下面的示例演示如何检索 <xref:System.Windows.Media.Visual> 对象的边框。</span><span class="sxs-lookup"><span data-stu-id="775d4-149">The following example shows how to retrieve the bounding rectangle of a <xref:System.Windows.Media.Visual> object.</span></span>  
  
 [!code-csharp[VisualsOverview#102](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualsOverview/CSharp/Window1.xaml.cs#102)]
 [!code-vb[VisualsOverview#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualsOverview/visualbasic/window1.xaml.vb#102)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Media3D.Visual3D)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDescendantBounds">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="775d4-150">返回视觉对象所有后代的全部内容范围框的联合，其中包括 <see cref="T:System.Windows.Media.Visual" /> 的内容范围框。</span><span class="sxs-lookup"><span data-stu-id="775d4-150">Returns the union of all the content bounding boxes for all the descendants of the visual object, which includes the content bounding box of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDescendantBounds">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Media3D.Rect3D GetDescendantBounds (System.Windows.Media.Media3D.Visual3D reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Media3D.Rect3D GetDescendantBounds(class System.Windows.Media.Media3D.Visual3D reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Media3D.Visual3D)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDescendantBounds (reference As Visual3D) As Rect3D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Media3D::Rect3D GetDescendantBounds(System::Windows::Media::Media3D::Visual3D ^ reference);" />
      <MemberSignature Language="F#" Value="static member GetDescendantBounds : System.Windows.Media.Media3D.Visual3D -&gt; System.Windows.Media.Media3D.Rect3D" Usage="System.Windows.Media.VisualTreeHelper.GetDescendantBounds reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.Rect3D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Media3D.Visual3D" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-151">要计算其所有子代的边界框值的三维可视对象。</span><span class="sxs-lookup"><span data-stu-id="775d4-151">The 3D visual whose bounding box value for all descendants is computed.</span></span></param>
        <summary><span data-ttu-id="775d4-152">返回指定 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 所有子代的所有内容边界框的联合，其中包括 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 的内容边界框。</span><span class="sxs-lookup"><span data-stu-id="775d4-152">Returns the union of all the content bounding boxes for all the descendants of the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" />, which includes the content bounding box of the <see cref="T:System.Windows.Media.Media3D.Visual3D" />.</span></span></summary>
        <returns><span data-ttu-id="775d4-153">返回三维可视对象的边界框三维矩形。</span><span class="sxs-lookup"><span data-stu-id="775d4-153">Returns the bounding box 3D rectangle for the 3D visual.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775d4-154">调用 <xref:System.Windows.Media.VisualTreeHelper.GetContentBounds%2A> 方法为三维可视对象返回已缓存的边界框矩形。</span><span class="sxs-lookup"><span data-stu-id="775d4-154">Call the <xref:System.Windows.Media.VisualTreeHelper.GetContentBounds%2A> method to return the cached bounding box rectangle for a 3D visual object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDescendantBounds">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect GetDescendantBounds (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect GetDescendantBounds(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDescendantBounds (reference As Visual) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect GetDescendantBounds(System::Windows::Media::Visual ^ reference);" />
      <MemberSignature Language="F#" Value="static member GetDescendantBounds : System.Windows.Media.Visual -&gt; System.Windows.Rect" Usage="System.Windows.Media.VisualTreeHelper.GetDescendantBounds reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-155">要计算其所有子代的边界框值的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-155">The <see cref="T:System.Windows.Media.Visual" /> whose bounding box value for all descendants is computed.</span></span></param>
        <summary><span data-ttu-id="775d4-156">返回 <see cref="T:System.Windows.Media.Visual" /> 所有子代的所有内容边界框的联合，其中包括 <see cref="T:System.Windows.Media.Visual" /> 的内容边界框。</span><span class="sxs-lookup"><span data-stu-id="775d4-156">Returns the union of all the content bounding boxes for all the descendants of the <see cref="T:System.Windows.Media.Visual" />, which includes the content bounding box of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <returns><span data-ttu-id="775d4-157">指定的 <see cref="T:System.Windows.Media.Visual" /> 的边界框矩形。</span><span class="sxs-lookup"><span data-stu-id="775d4-157">The bounding box rectangle for the specified <see cref="T:System.Windows.Media.Visual" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775d4-158">调用 <xref:System.Windows.Media.VisualTreeHelper.GetContentBounds%2A> 方法返回 <xref:System.Windows.Media.Visual>缓存的边界框矩形。</span><span class="sxs-lookup"><span data-stu-id="775d4-158">Call the <xref:System.Windows.Media.VisualTreeHelper.GetContentBounds%2A> method to return the cached bounding box rectangle for a <xref:System.Windows.Media.Visual>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="775d4-159">下面的示例演示如何检索 <xref:System.Windows.Media.Visual>子代的边框的并集。</span><span class="sxs-lookup"><span data-stu-id="775d4-159">The following example shows how to retrieve the union of bounding rectangles for the descendants of a <xref:System.Windows.Media.Visual>.</span></span>  
  
 [!code-csharp[VisualsOverview#102](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualsOverview/CSharp/Window1.xaml.cs#102)]
 [!code-vb[VisualsOverview#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualsOverview/visualbasic/window1.xaml.vb#102)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDpi">
      <MemberSignature Language="C#" Value="public static System.Windows.DpiScale GetDpi (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.DpiScale GetDpi(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetDpi(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDpi (visual As Visual) As DpiScale" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DpiScale GetDpi(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="static member GetDpi : System.Windows.Media.Visual -&gt; System.Windows.DpiScale" Usage="System.Windows.Media.VisualTreeHelper.GetDpi visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DpiScale</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="775d4-160">视觉目标对象。</span><span class="sxs-lookup"><span data-stu-id="775d4-160">The Visual target object.</span></span></param>
        <summary><span data-ttu-id="775d4-161">获取测量和呈现此视觉对象的 DPI 信息。</span><span class="sxs-lookup"><span data-stu-id="775d4-161">Gets the DPI information at which this Visual is measured and rendered.</span></span></summary>
        <returns><span data-ttu-id="775d4-162">DPIScale 值。</span><span class="sxs-lookup"><span data-stu-id="775d4-162">A DPIScale value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDrawing">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.DrawingGroup GetDrawing (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.DrawingGroup GetDrawing(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetDrawing(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDrawing (reference As Visual) As DrawingGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::DrawingGroup ^ GetDrawing(System::Windows::Media::Visual ^ reference);" />
      <MemberSignature Language="F#" Value="static member GetDrawing : System.Windows.Media.Visual -&gt; System.Windows.Media.DrawingGroup" Usage="System.Windows.Media.VisualTreeHelper.GetDrawing reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DrawingGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-163">要返回其绘图内容的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-163">The <see cref="T:System.Windows.Media.Visual" /> whose drawing content is returned.</span></span></param>
        <summary><span data-ttu-id="775d4-164">返回指定的 <see cref="T:System.Windows.Media.Visual" /> 的绘图内容。</span><span class="sxs-lookup"><span data-stu-id="775d4-164">Returns the drawing content of the specified <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <returns><span data-ttu-id="775d4-165">作为 <see cref="T:System.Windows.Media.Visual" /> 类型返回的 <see cref="T:System.Windows.Media.DrawingGroup" /> 的绘图内容。</span><span class="sxs-lookup"><span data-stu-id="775d4-165">The drawing content of the <see cref="T:System.Windows.Media.Visual" /> returned as a <see cref="T:System.Windows.Media.DrawingGroup" /> type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="775d4-166">下面的示例演示如何使用 <xref:System.Windows.Media.VisualTreeHelper.GetDrawing%2A> 方法从视觉对象检索 <xref:System.Windows.Media.DrawingGroup>。</span><span class="sxs-lookup"><span data-stu-id="775d4-166">The following example shows how to retrieve the <xref:System.Windows.Media.DrawingGroup> from a visual object by using the <xref:System.Windows.Media.VisualTreeHelper.GetDrawing%2A> method.</span></span> <span data-ttu-id="775d4-167">然后，将对 <xref:System.Windows.Media.DrawingGroup> 中的每个绘图的几何执行命中测试，以确定命中了哪个几何。</span><span class="sxs-lookup"><span data-stu-id="775d4-167">A hit test is then performed on the geometry of each drawing in the <xref:System.Windows.Media.DrawingGroup> to determine which geometry was hit.</span></span>  
  
 [!code-csharp[VisualsOverview#VisualsOverviewSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualsOverview/CSharp/Window1.xaml.cs#visualsoverviewsnippet4)]
 [!code-vb[VisualsOverview#VisualsOverviewSnippet4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualsOverview/visualbasic/window1.xaml.vb#visualsoverviewsnippet4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEdgeMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.EdgeMode GetEdgeMode (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.EdgeMode GetEdgeMode(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEdgeMode (reference As Visual) As EdgeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::EdgeMode GetEdgeMode(System::Windows::Media::Visual ^ reference);" />
      <MemberSignature Language="F#" Value="static member GetEdgeMode : System.Windows.Media.Visual -&gt; System.Windows.Media.EdgeMode" Usage="System.Windows.Media.VisualTreeHelper.GetEdgeMode reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.EdgeMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-168">要返回其边缘模式值的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-168">The <see cref="T:System.Windows.Media.Visual" /> whose edge mode value is returned.</span></span></param>
        <summary><span data-ttu-id="775d4-169">将指定的 <see cref="T:System.Windows.Media.Visual" /> 的边缘模式作为 <see cref="T:System.Windows.Media.EdgeMode" /> 值返回。</span><span class="sxs-lookup"><span data-stu-id="775d4-169">Returns the edge mode of the specified <see cref="T:System.Windows.Media.Visual" /> as an <see cref="T:System.Windows.Media.EdgeMode" /> value.</span></span></summary>
        <returns><span data-ttu-id="775d4-170"><see cref="T:System.Windows.Media.EdgeMode" /> 的 <see cref="T:System.Windows.Media.Visual" /> 值。</span><span class="sxs-lookup"><span data-stu-id="775d4-170">The <see cref="T:System.Windows.Media.EdgeMode" /> value of the <see cref="T:System.Windows.Media.Visual" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775d4-171">边缘模式值确定非文本基元的边缘的呈现方式。</span><span class="sxs-lookup"><span data-stu-id="775d4-171">The edge mode value determines how the edges of non-text primitives are rendered.</span></span>  
  
|<span data-ttu-id="775d4-172">边缘模式值</span><span class="sxs-lookup"><span data-stu-id="775d4-172">Edge mode value</span></span>|<span data-ttu-id="775d4-173">说明</span><span class="sxs-lookup"><span data-stu-id="775d4-173">Description</span></span>|  
|---------------------|-----------------|  
|<xref:System.Windows.Media.EdgeMode.Aliased>|<span data-ttu-id="775d4-174">将非文本基元的边缘呈现为锯齿边缘。</span><span class="sxs-lookup"><span data-stu-id="775d4-174">Render edges of non-text primitives as aliased edges.</span></span>|  
|<xref:System.Windows.Media.EdgeMode.Unspecified>|<span data-ttu-id="775d4-175">未指定边缘模式。</span><span class="sxs-lookup"><span data-stu-id="775d4-175">No edge mode is specified.</span></span> <span data-ttu-id="775d4-176">不要更改应用于非文本基元的当前边缘模式。</span><span class="sxs-lookup"><span data-stu-id="775d4-176">Do not change the current edge mode that is applied to non-text primitives.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEffect">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Effects.Effect GetEffect (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.Effects.Effect GetEffect(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetEffect(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEffect (reference As Visual) As Effect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Effects::Effect ^ GetEffect(System::Windows::Media::Visual ^ reference);" />
      <MemberSignature Language="F#" Value="static member GetEffect : System.Windows.Media.Visual -&gt; System.Windows.Media.Effects.Effect" Usage="System.Windows.Media.VisualTreeHelper.GetEffect reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.Effect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-177">要为其获取位图效果的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-177">The <see cref="T:System.Windows.Media.Visual" /> to get the bitmap effect for.</span></span></param>
        <summary><span data-ttu-id="775d4-178">获取指定 <see cref="T:System.Windows.Media.Visual" /> 的位图效果。</span><span class="sxs-lookup"><span data-stu-id="775d4-178">Gets the bitmap effect for the specified <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <returns><span data-ttu-id="775d4-179">应用到 <paramref name="reference" /> 的 <see cref="T:System.Windows.Media.Effects.Effect" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-179">The <see cref="T:System.Windows.Media.Effects.Effect" /> applied to <paramref name="reference" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <Member MemberName="GetOffset">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector GetOffset (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Vector GetOffset(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOffset (reference As Visual) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector GetOffset(System::Windows::Media::Visual ^ reference);" />
      <MemberSignature Language="F#" Value="static member GetOffset : System.Windows.Media.Visual -&gt; System.Windows.Vector" Usage="System.Windows.Media.VisualTreeHelper.GetOffset reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-180">要返回其偏移量的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-180">The <see cref="T:System.Windows.Media.Visual" /> whose offset is returned.</span></span></param>
        <summary><span data-ttu-id="775d4-181">返回 <see cref="T:System.Windows.Media.Visual" /> 的偏移量。</span><span class="sxs-lookup"><span data-stu-id="775d4-181">Returns the offset of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <returns><span data-ttu-id="775d4-182">一个 <see cref="T:System.Windows.Vector" />，表示 <see cref="T:System.Windows.Media.Visual" /> 的偏移值。</span><span class="sxs-lookup"><span data-stu-id="775d4-182">A <see cref="T:System.Windows.Vector" /> that represents the offset value of the <see cref="T:System.Windows.Media.Visual" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775d4-183">返回的偏移值相对于 <xref:System.Windows.Media.Visual>的父级。</span><span class="sxs-lookup"><span data-stu-id="775d4-183">The returned offset value is relative to the parent of the <xref:System.Windows.Media.Visual>.</span></span> <span data-ttu-id="775d4-184">如果要返回与 <xref:System.Windows.Media.Visual>的父级不相关的偏移值，请使用 <xref:System.Windows.Media.Visual.TransformToAncestor%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="775d4-184">If you want to return an offset value that is not relative to the parent of a <xref:System.Windows.Media.Visual>, use the <xref:System.Windows.Media.Visual.TransformToAncestor%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="775d4-185">以下标记示例显示了使用 <xref:System.Windows.FrameworkElement.Margin%2A> 值4定义的 <xref:System.Windows.Controls.TextBlock>。</span><span class="sxs-lookup"><span data-stu-id="775d4-185">The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is defined with <xref:System.Windows.FrameworkElement.Margin%2A> value of 4.</span></span>  
  
 [!code-xaml[VisualSnippets#VisualSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml#visualsnippet1)]  
  
 <span data-ttu-id="775d4-186">下面的代码示例演示如何使用 <xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A> 方法检索 <xref:System.Windows.Controls.TextBlock>的偏移量。</span><span class="sxs-lookup"><span data-stu-id="775d4-186">The following code example shows how to use the <xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A> method to retrieve the offset of the <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="775d4-187">偏移量值包含在返回的 <xref:System.Windows.Vector> 值中。</span><span class="sxs-lookup"><span data-stu-id="775d4-187">The offset values are contained within the returned <xref:System.Windows.Vector> value.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet2)]
 [!code-vb[VisualSnippets#VisualSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet2)]  
  
 <span data-ttu-id="775d4-188">偏移量会考虑 <xref:System.Windows.FrameworkElement.Margin%2A> 值。</span><span class="sxs-lookup"><span data-stu-id="775d4-188">The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> value.</span></span> <span data-ttu-id="775d4-189">在此示例中，<xref:System.Windows.Vector.X%2A> 为4，<xref:System.Windows.Vector.Y%2A> 为4。</span><span class="sxs-lookup"><span data-stu-id="775d4-189">In this case, <xref:System.Windows.Vector.X%2A> is 4, and <xref:System.Windows.Vector.Y%2A> is 4.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOpacity">
      <MemberSignature Language="C#" Value="public static double GetOpacity (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetOpacity(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetOpacity(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOpacity (reference As Visual) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetOpacity(System::Windows::Media::Visual ^ reference);" />
      <MemberSignature Language="F#" Value="static member GetOpacity : System.Windows.Media.Visual -&gt; double" Usage="System.Windows.Media.VisualTreeHelper.GetOpacity reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-190">要返回其不透明度值的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-190">The <see cref="T:System.Windows.Media.Visual" /> whose opacity value is returned.</span></span></param>
        <summary><span data-ttu-id="775d4-191">返回 <see cref="T:System.Windows.Media.Visual" /> 的不透明度。</span><span class="sxs-lookup"><span data-stu-id="775d4-191">Returns the opacity of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <returns><span data-ttu-id="775d4-192">一个 <see cref="T:System.Double" /> 类型的值，表示 <see cref="T:System.Windows.Media.Visual" /> 的不透明度值。</span><span class="sxs-lookup"><span data-stu-id="775d4-192">A value of type <see cref="T:System.Double" /> that represents the opacity value of the <see cref="T:System.Windows.Media.Visual" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775d4-193">不透明度的值表示为0和1之间的一个值。</span><span class="sxs-lookup"><span data-stu-id="775d4-193">The value of the opacity is expressed as a value between 0 and 1.</span></span> <span data-ttu-id="775d4-194">如果值为0，则表示元素是完全透明的，而值为1时表示元素完全不透明。</span><span class="sxs-lookup"><span data-stu-id="775d4-194">A value of 0 indicates that the element is completely transparent, while a value of 1 indicates that the element is completely opaque.</span></span> <span data-ttu-id="775d4-195">如果值为0.5，则表示元素为50% 不透明。</span><span class="sxs-lookup"><span data-stu-id="775d4-195">A value of 0.5 indicates that the element is 50 percent opaque.</span></span> <span data-ttu-id="775d4-196">小于0的值将被视为0，大于1的值将被视为1。</span><span class="sxs-lookup"><span data-stu-id="775d4-196">Values less than 0 are treated as 0, and values greater than 1 are treated as 1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOpacityMask">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Brush GetOpacityMask (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.Brush GetOpacityMask(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetOpacityMask(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOpacityMask (reference As Visual) As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Brush ^ GetOpacityMask(System::Windows::Media::Visual ^ reference);" />
      <MemberSignature Language="F#" Value="static member GetOpacityMask : System.Windows.Media.Visual -&gt; System.Windows.Media.Brush" Usage="System.Windows.Media.VisualTreeHelper.GetOpacityMask reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-197">要返回其不透明蒙板值的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-197">The <see cref="T:System.Windows.Media.Visual" /> whose opacity mask value is returned.</span></span></param>
        <summary><span data-ttu-id="775d4-198">返回一个 <see cref="T:System.Windows.Media.Brush" /> 值，该值表示 <see cref="T:System.Windows.Media.Visual" /> 的不透明蒙板。</span><span class="sxs-lookup"><span data-stu-id="775d4-198">Returns a <see cref="T:System.Windows.Media.Brush" /> value that represents the opacity mask of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <returns><span data-ttu-id="775d4-199">一个类型为 <see cref="T:System.Windows.Media.Brush" /> 的值，表示 <see cref="T:System.Windows.Media.Visual" /> 的不透明蒙板值。</span><span class="sxs-lookup"><span data-stu-id="775d4-199">A value of type <see cref="T:System.Windows.Media.Brush" /> that represents the opacity mask value of the <see cref="T:System.Windows.Media.Visual" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775d4-200">不透明蒙板是一个 <xref:System.Windows.Media.Brush>，适用于此 <xref:System.Windows.Media.Visual>的呈现内容的任何 alpha 通道蒙板。</span><span class="sxs-lookup"><span data-stu-id="775d4-200">The opacity mask is a <xref:System.Windows.Media.Brush> that is applied to any alpha-channel masking for the rendered content of this <xref:System.Windows.Media.Visual>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetParent (System.Windows.DependencyObject reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetParent(class System.Windows.DependencyObject reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetParent(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetParent (reference As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetParent(System::Windows::DependencyObject ^ reference);" />
      <MemberSignature Language="F#" Value="static member GetParent : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Media.VisualTreeHelper.GetParent reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-201">返回其父对象的可见对象。</span><span class="sxs-lookup"><span data-stu-id="775d4-201">The visual whose parent is returned.</span></span></param>
        <summary><span data-ttu-id="775d4-202">返回表示视觉对象的父对象的 <see cref="T:System.Windows.DependencyObject" /> 值。</span><span class="sxs-lookup"><span data-stu-id="775d4-202">Returns a <see cref="T:System.Windows.DependencyObject" /> value that represents the parent of the visual object.</span></span></summary>
        <returns><span data-ttu-id="775d4-203">可见对象的父对象。</span><span class="sxs-lookup"><span data-stu-id="775d4-203">The parent of the visual.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775d4-204">`reference` 的值可以表示 <xref:System.Windows.Media.Visual> 或 <xref:System.Windows.Media.Media3D.Visual3D> 对象。</span><span class="sxs-lookup"><span data-stu-id="775d4-204">The value of `reference` can represent either a <xref:System.Windows.Media.Visual> or <xref:System.Windows.Media.Media3D.Visual3D> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="775d4-205"><paramref name="reference" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-205"><paramref name="reference" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="775d4-206"><paramref name="reference" /> 不是 <see cref="T:System.Windows.Media.Visual" /> 或 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="775d4-206"><paramref name="reference" /> is not a <see cref="T:System.Windows.Media.Visual" /> or <see cref="T:System.Windows.Media.Media3D.Visual3D" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTransform">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Transform GetTransform (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.Transform GetTransform(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTransform (reference As Visual) As Transform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Transform ^ GetTransform(System::Windows::Media::Visual ^ reference);" />
      <MemberSignature Language="F#" Value="static member GetTransform : System.Windows.Media.Visual -&gt; System.Windows.Media.Transform" Usage="System.Windows.Media.VisualTreeHelper.GetTransform reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Transform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-207">要返回其变换值的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-207">The <see cref="T:System.Windows.Media.Visual" /> whose transform value is returned.</span></span></param>
        <summary><span data-ttu-id="775d4-208">返回 <see cref="T:System.Windows.Media.Transform" /> 的 <see cref="T:System.Windows.Media.Visual" /> 值。</span><span class="sxs-lookup"><span data-stu-id="775d4-208">Returns a <see cref="T:System.Windows.Media.Transform" /> value for the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <returns><span data-ttu-id="775d4-209"><see cref="T:System.Windows.Media.Visual" /> 的变换值；如果 <paramref name="reference" /> 未定义变换，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-209">The transform value of the <see cref="T:System.Windows.Media.Visual" />, or <see langword="null" /> if <paramref name="reference" /> does not have a transform defined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775d4-210">或者，您可以使用 <xref:System.Windows.Media.Visual.TransformToAncestor%2A> 方法返回 <xref:System.Windows.Media.Visual>的祖先的转换值。</span><span class="sxs-lookup"><span data-stu-id="775d4-210">Alternatively, you can use the <xref:System.Windows.Media.Visual.TransformToAncestor%2A> method to return a transform value for the ancestor of a <xref:System.Windows.Media.Visual>.</span></span> <span data-ttu-id="775d4-211">此方法始终返回有效的转换。</span><span class="sxs-lookup"><span data-stu-id="775d4-211">This method always returns a valid transform.</span></span> <span data-ttu-id="775d4-212">下面的代码示例演示如何使用 <xref:System.Windows.Media.Visual.TransformToAncestor%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="775d4-212">The following code example shows how to use <xref:System.Windows.Media.Visual.TransformToAncestor%2A> method.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet3)]
 [!code-vb[VisualSnippets#VisualSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet3)]  
  
   
  
## Examples  
 <span data-ttu-id="775d4-213">下面的代码示例演示如何使用 <xref:System.Windows.Media.VisualTreeHelper.GetTransform%2A> 方法检索指定视觉对象的转换。</span><span class="sxs-lookup"><span data-stu-id="775d4-213">The following code example shows how to use the <xref:System.Windows.Media.VisualTreeHelper.GetTransform%2A> method to retrieve the transform for the specified visual object.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet6](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet6)]
 [!code-vb[VisualSnippets#VisualSnippet6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet6)]  
  
 <span data-ttu-id="775d4-214">你的代码应在使用返回值之前测试 `null`。</span><span class="sxs-lookup"><span data-stu-id="775d4-214">Your code should test for `null` before using the returned value.</span></span> <span data-ttu-id="775d4-215">若要返回所返回转换的偏移量，请使用 <xref:System.Windows.Media.GeneralTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="775d4-215">To return the offset of the returned transform, use the <xref:System.Windows.Media.GeneralTransform.Transform%2A> method.</span></span> <span data-ttu-id="775d4-216">偏移值相对于 <xref:System.Windows.Media.Visual>的父级。</span><span class="sxs-lookup"><span data-stu-id="775d4-216">The offset value is relative to the parent of the <xref:System.Windows.Media.Visual>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXSnappingGuidelines">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.DoubleCollection GetXSnappingGuidelines (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.DoubleCollection GetXSnappingGuidelines(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetXSnappingGuidelines (reference As Visual) As DoubleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::DoubleCollection ^ GetXSnappingGuidelines(System::Windows::Media::Visual ^ reference);" />
      <MemberSignature Language="F#" Value="static member GetXSnappingGuidelines : System.Windows.Media.Visual -&gt; System.Windows.Media.DoubleCollection" Usage="System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DoubleCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-217">返回其 X 坐标准线集合的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-217">The <see cref="T:System.Windows.Media.Visual" /> whose X-coordinate guideline collection is returned.</span></span></param>
        <summary><span data-ttu-id="775d4-218">返回 X 坐标（垂直）准线集合。</span><span class="sxs-lookup"><span data-stu-id="775d4-218">Returns an X-coordinate (vertical) guideline collection.</span></span></summary>
        <returns><span data-ttu-id="775d4-219"><see cref="T:System.Windows.Media.Visual" /> 的 X 坐标准线集合。</span><span class="sxs-lookup"><span data-stu-id="775d4-219">The X-coordinate guideline collection of the <see cref="T:System.Windows.Media.Visual" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775d4-220">像素对齐是内容布局固定到的过程，以便在特定于设备的像素上呈现对象边缘。</span><span class="sxs-lookup"><span data-stu-id="775d4-220">Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels.</span></span> <span data-ttu-id="775d4-221">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 图形系统使用与设备无关的单元来使分辨率和设备独立。</span><span class="sxs-lookup"><span data-stu-id="775d4-221">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] graphics system uses device-independent units to enable resolution and device independence.</span></span> <span data-ttu-id="775d4-222">每个与设备无关的像素都会随着系统的 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] 设置自动进行缩放。</span><span class="sxs-lookup"><span data-stu-id="775d4-222">Each device independent pixel automatically scales with the system's [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] setting.</span></span> <span data-ttu-id="775d4-223">这为 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 应用程序提供了不同 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] 设置的适当缩放，并使应用程序自动感知 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="775d4-223">This provides [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] applications proper scaling for different [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] settings and makes the application automatically [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]-aware.</span></span>  
  
 <span data-ttu-id="775d4-224">但是，这 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] 独立性可能会因为抗锯齿而产生不规则边缘渲染。</span><span class="sxs-lookup"><span data-stu-id="775d4-224">However, this [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] independence can create irregular edge rendering due to anti-aliasing.</span></span> <span data-ttu-id="775d4-225">当边缘的位置落在设备像素中间而不是设备像素之间时，可能会出现这些项目（通常看起来是模糊或 "软" 边缘）。</span><span class="sxs-lookup"><span data-stu-id="775d4-225">These artifacts, commonly seen as blurry, or "soft" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels.</span></span> <span data-ttu-id="775d4-226">为了解决此问题，[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 提供了一种方法，使可视化树中的对象边缘通过像素对齐方式 "对齐" 到设备像素，从而消除抗锯齿产生的软边缘。</span><span class="sxs-lookup"><span data-stu-id="775d4-226">To address this issue, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] provides a way for object edges in a visual tree to "snap" to device pixels through pixel snapping, eliminating the soft edges produced by anti-aliasing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Visual.VisualXSnappingGuidelines" />
      </Docs>
    </Member>
    <Member MemberName="GetYSnappingGuidelines">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.DoubleCollection GetYSnappingGuidelines (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.DoubleCollection GetYSnappingGuidelines(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetYSnappingGuidelines (reference As Visual) As DoubleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::DoubleCollection ^ GetYSnappingGuidelines(System::Windows::Media::Visual ^ reference);" />
      <MemberSignature Language="F#" Value="static member GetYSnappingGuidelines : System.Windows.Media.Visual -&gt; System.Windows.Media.DoubleCollection" Usage="System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines reference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DoubleCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-227"><see cref="T:System.Windows.Media.Visual" />，返回了其 Y 坐标准线集合。</span><span class="sxs-lookup"><span data-stu-id="775d4-227">The <see cref="T:System.Windows.Media.Visual" /> whose Y-coordinate guideline collection is returned.</span></span></param>
        <summary><span data-ttu-id="775d4-228">返回 Y 坐标（水平）准线集合。</span><span class="sxs-lookup"><span data-stu-id="775d4-228">Returns a Y-coordinate (horizontal) guideline collection.</span></span></summary>
        <returns><span data-ttu-id="775d4-229"><see cref="T:System.Windows.Media.Visual" /> 的 Y 坐标准线集合。</span><span class="sxs-lookup"><span data-stu-id="775d4-229">The Y-coordinate guideline collection of the <see cref="T:System.Windows.Media.Visual" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775d4-230">像素对齐是内容布局固定到的过程，以便在特定于设备的像素上呈现对象边缘。</span><span class="sxs-lookup"><span data-stu-id="775d4-230">Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels.</span></span> <span data-ttu-id="775d4-231">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 图形系统使用与设备无关的单元来使分辨率和设备独立。</span><span class="sxs-lookup"><span data-stu-id="775d4-231">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] graphics system uses device-independent units to enable resolution and device independence.</span></span> <span data-ttu-id="775d4-232">每个与设备无关的像素都会随着系统的 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] 设置自动进行缩放。</span><span class="sxs-lookup"><span data-stu-id="775d4-232">Each device independent pixel automatically scales with the system's [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] setting.</span></span> <span data-ttu-id="775d4-233">这为 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 应用程序提供了不同 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] 设置的适当缩放，并使应用程序自动感知 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="775d4-233">This provides [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] applications proper scaling for different [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] settings and makes the application automatically [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]-aware.</span></span>  
  
 <span data-ttu-id="775d4-234">但是，这 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] 独立性可能会因为抗锯齿而产生不规则边缘渲染。</span><span class="sxs-lookup"><span data-stu-id="775d4-234">However, this [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] independence can create irregular edge rendering due to anti-aliasing.</span></span> <span data-ttu-id="775d4-235">当边缘的位置落在设备像素中间而不是设备像素之间时，可能会出现这些项目（通常看起来是模糊或 "软" 边缘）。</span><span class="sxs-lookup"><span data-stu-id="775d4-235">These artifacts, commonly seen as blurry, or "soft" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels.</span></span> <span data-ttu-id="775d4-236">为了解决此问题，[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 提供了一种方法，使可视化树中的对象边缘通过像素对齐方式 "对齐" 到设备像素，从而消除抗锯齿产生的软边缘。</span><span class="sxs-lookup"><span data-stu-id="775d4-236">To address this issue, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] provides a way for object edges in a visual tree to "snap" to device pixels through pixel snapping, eliminating the soft edges produced by anti-aliasing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Visual.VisualYSnappingGuidelines" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="775d4-237">返回命中测试的最顶层 <see cref="T:System.Windows.Media.Visual" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="775d4-237">Returns the topmost <see cref="T:System.Windows.Media.Visual" /> object of a hit test.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775d4-238">采用 <xref:System.Windows.Media.HitTestResultCallback> 和 <xref:System.Windows.Media.HitTestFilterCallback> 作为参数的重载方法在命中测试期间提供附加功能：</span><span class="sxs-lookup"><span data-stu-id="775d4-238">The overloaded methods that take <xref:System.Windows.Media.HitTestResultCallback> and <xref:System.Windows.Media.HitTestFilterCallback> as parameters provide additional functionality during hit testing:</span></span>  
  
-   <span data-ttu-id="775d4-239">允许用户在命中测试期间参与控制可视化树遍历。</span><span class="sxs-lookup"><span data-stu-id="775d4-239">Allow you to participate in controlling the visual tree traversal during hit testing.</span></span>  
  
-   <span data-ttu-id="775d4-240">允许您检索点或几何图形下的所有视觉对象，而不只是最顶层的视觉对象。</span><span class="sxs-lookup"><span data-stu-id="775d4-240">Allow you to retrieve all of the visuals under the point or geometry, not just the topmost one.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.HitTestResult HitTest (System.Windows.Media.Visual reference, System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.HitTestResult HitTest(class System.Windows.Media.Visual reference, valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HitTest (reference As Visual, point As Point) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::HitTestResult ^ HitTest(System::Windows::Media::Visual ^ reference, System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="static member HitTest : System.Windows.Media.Visual * System.Windows.Point -&gt; System.Windows.Media.HitTestResult" Usage="System.Windows.Media.VisualTreeHelper.HitTest (reference, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-241">要进行命中测试的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-241">The <see cref="T:System.Windows.Media.Visual" /> to hit test.</span></span></param>
        <param name="point"><span data-ttu-id="775d4-242">要进行命中测试的点值。</span><span class="sxs-lookup"><span data-stu-id="775d4-242">The point value to hit test against.</span></span></param>
        <summary><span data-ttu-id="775d4-243">通过指定 <see cref="T:System.Windows.Point" /> 返回命中测试的最顶层 <see cref="T:System.Windows.Media.Visual" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="775d4-243">Returns the topmost <see cref="T:System.Windows.Media.Visual" /> object of a hit test by specifying a <see cref="T:System.Windows.Point" />.</span></span></summary>
        <returns><span data-ttu-id="775d4-244"><see cref="T:System.Windows.Media.Visual" /> 的命中测试结果，作为 <see cref="T:System.Windows.Media.HitTestResult" /> 类型返回。</span><span class="sxs-lookup"><span data-stu-id="775d4-244">The hit test result of the <see cref="T:System.Windows.Media.Visual" />, returned as a <see cref="T:System.Windows.Media.HitTestResult" /> type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775d4-245">返回值的 <xref:System.Windows.Media.HitTestResult.VisualHit%2A> 属性表示命中的 <xref:System.Windows.Media.Visual> 对象。</span><span class="sxs-lookup"><span data-stu-id="775d4-245">The <xref:System.Windows.Media.HitTestResult.VisualHit%2A> property of the return value represents the <xref:System.Windows.Media.Visual> object that was hit.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="775d4-246">在二维可视化树中启动的命中测试可能返回 <xref:System.Windows.Media.Media3D.RayHitTestResult>，这是一个三维命中测试结果对象。</span><span class="sxs-lookup"><span data-stu-id="775d4-246">It is possible for a hit test that starts in a 2D visual tree to return <xref:System.Windows.Media.Media3D.RayHitTestResult>, which is a 3D hit test result object.</span></span> <span data-ttu-id="775d4-247">在二维可视化树中开始的命中测试无缝扩展到任何已定义的三维可视化树。</span><span class="sxs-lookup"><span data-stu-id="775d4-247">Hit testing that starts in a 2D visual tree seamlessly extends into any defined 3D visual tree.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="775d4-248">下面的示例演示如何使用 <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> 方法对 <xref:System.Windows.Controls.Canvas>中的对象进行命中测试。</span><span class="sxs-lookup"><span data-stu-id="775d4-248">The following example shows how to use the <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> method to hit test the objects within a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[HitTestingOverview#100](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/Window1.xaml.cs#100)]
 [!code-vb[HitTestingOverview#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/window1.xaml.vb#100)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159994"><span data-ttu-id="775d4-249">使用 Drawingvisuals 进行的命中测试示例</span><span class="sxs-lookup"><span data-stu-id="775d4-249">Hit Test Using DrawingVisuals Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public static void HitTest (System.Windows.Media.Media3D.Visual3D reference, System.Windows.Media.HitTestFilterCallback filterCallback, System.Windows.Media.HitTestResultCallback resultCallback, System.Windows.Media.Media3D.HitTestParameters3D hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HitTest(class System.Windows.Media.Media3D.Visual3D reference, class System.Windows.Media.HitTestFilterCallback filterCallback, class System.Windows.Media.HitTestResultCallback resultCallback, class System.Windows.Media.Media3D.HitTestParameters3D hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HitTest (reference As Visual3D, filterCallback As HitTestFilterCallback, resultCallback As HitTestResultCallback, hitTestParameters As HitTestParameters3D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HitTest(System::Windows::Media::Media3D::Visual3D ^ reference, System::Windows::Media::HitTestFilterCallback ^ filterCallback, System::Windows::Media::HitTestResultCallback ^ resultCallback, System::Windows::Media::Media3D::HitTestParameters3D ^ hitTestParameters);" />
      <MemberSignature Language="F#" Value="static member HitTest : System.Windows.Media.Media3D.Visual3D * System.Windows.Media.HitTestFilterCallback * System.Windows.Media.HitTestResultCallback * System.Windows.Media.Media3D.HitTestParameters3D -&gt; unit" Usage="System.Windows.Media.VisualTreeHelper.HitTest (reference, filterCallback, resultCallback, hitTestParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Media3D.Visual3D" />
        <Parameter Name="filterCallback" Type="System.Windows.Media.HitTestFilterCallback" />
        <Parameter Name="resultCallback" Type="System.Windows.Media.HitTestResultCallback" />
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.Media3D.HitTestParameters3D" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-250">要进行命中测试的 <see cref="T:System.Windows.Media.Media3D.Visual3D" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-250">The <see cref="T:System.Windows.Media.Media3D.Visual3D" /> to hit test.</span></span></param>
        <param name="filterCallback"><span data-ttu-id="775d4-251">表示命中测试筛选回调值的方法。</span><span class="sxs-lookup"><span data-stu-id="775d4-251">The method that represents the hit test filter callback value.</span></span></param>
        <param name="resultCallback"><span data-ttu-id="775d4-252">表示命中测试结果回调值的方法。</span><span class="sxs-lookup"><span data-stu-id="775d4-252">The method that represents the hit test result callback value.</span></span></param>
        <param name="hitTestParameters"><span data-ttu-id="775d4-253">要对其执行命中测试的 3D 参数值。</span><span class="sxs-lookup"><span data-stu-id="775d4-253">The 3D parameter value to hit test against.</span></span></param>
        <summary><span data-ttu-id="775d4-254">使用调用方定义的 <see cref="T:System.Windows.Media.HitTestFilterCallback" /> 和 <see cref="T:System.Windows.Media.HitTestResultCallback" /> 方法对指定 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 启动命中测试。</span><span class="sxs-lookup"><span data-stu-id="775d4-254">Initiates a hit test on the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" />, with caller-defined <see cref="T:System.Windows.Media.HitTestFilterCallback" /> and <see cref="T:System.Windows.Media.HitTestResultCallback" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775d4-255">`filterCallback` 参数可以是 `null`的，在这种情况下，它将被忽略。</span><span class="sxs-lookup"><span data-stu-id="775d4-255">The `filterCallback` parameter can be `null`, in which case, it is ignored.</span></span> <span data-ttu-id="775d4-256">如果 `filterCallback` 未 `null`，则在 `resultCallback`之前调用它。</span><span class="sxs-lookup"><span data-stu-id="775d4-256">If `filterCallback` is not `null`, it is invoked before `resultCallback`.</span></span>  <span data-ttu-id="775d4-257">`resultCallback` 不能为 `null`。</span><span class="sxs-lookup"><span data-stu-id="775d4-257">`resultCallback` cannot be `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="775d4-258">在二维可视化树中启动的命中测试可能返回 <xref:System.Windows.Media.Media3D.RayHitTestResult>，这是一个三维命中测试结果对象。</span><span class="sxs-lookup"><span data-stu-id="775d4-258">It is possible for a hit test that starts in a 2D visual tree to return <xref:System.Windows.Media.Media3D.RayHitTestResult>, which is a 3D hit test result object.</span></span> <span data-ttu-id="775d4-259">在二维可视化树中开始的命中测试无缝扩展到任何已定义的三维可视化树。</span><span class="sxs-lookup"><span data-stu-id="775d4-259">Hit testing that starts in a 2D visual tree seamlessly extends into any defined 3D visual tree.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public static void HitTest (System.Windows.Media.Visual reference, System.Windows.Media.HitTestFilterCallback filterCallback, System.Windows.Media.HitTestResultCallback resultCallback, System.Windows.Media.HitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HitTest(class System.Windows.Media.Visual reference, class System.Windows.Media.HitTestFilterCallback filterCallback, class System.Windows.Media.HitTestResultCallback resultCallback, class System.Windows.Media.HitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HitTest (reference As Visual, filterCallback As HitTestFilterCallback, resultCallback As HitTestResultCallback, hitTestParameters As HitTestParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HitTest(System::Windows::Media::Visual ^ reference, System::Windows::Media::HitTestFilterCallback ^ filterCallback, System::Windows::Media::HitTestResultCallback ^ resultCallback, System::Windows::Media::HitTestParameters ^ hitTestParameters);" />
      <MemberSignature Language="F#" Value="static member HitTest : System.Windows.Media.Visual * System.Windows.Media.HitTestFilterCallback * System.Windows.Media.HitTestResultCallback * System.Windows.Media.HitTestParameters -&gt; unit" Usage="System.Windows.Media.VisualTreeHelper.HitTest (reference, filterCallback, resultCallback, hitTestParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
        <Parameter Name="filterCallback" Type="System.Windows.Media.HitTestFilterCallback" />
        <Parameter Name="resultCallback" Type="System.Windows.Media.HitTestResultCallback" />
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.HitTestParameters" />
      </Parameters>
      <Docs>
        <param name="reference"><span data-ttu-id="775d4-260">要进行命中测试的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="775d4-260">The <see cref="T:System.Windows.Media.Visual" /> to hit test.</span></span></param>
        <param name="filterCallback"><span data-ttu-id="775d4-261">表示命中测试筛选回调值的方法。</span><span class="sxs-lookup"><span data-stu-id="775d4-261">The method that represents the hit test filter callback value.</span></span></param>
        <param name="resultCallback"><span data-ttu-id="775d4-262">表示命中测试结果回调值的方法。</span><span class="sxs-lookup"><span data-stu-id="775d4-262">The method that represents the hit test result callback value.</span></span></param>
        <param name="hitTestParameters"><span data-ttu-id="775d4-263">要对其执行命中测试的参数值。</span><span class="sxs-lookup"><span data-stu-id="775d4-263">The parameter value to hit test against.</span></span></param>
        <summary><span data-ttu-id="775d4-264">使用调用方定义的 <see cref="T:System.Windows.Media.HitTestFilterCallback" /> 和 <see cref="T:System.Windows.Media.HitTestResultCallback" /> 方法对指定 <see cref="T:System.Windows.Media.Visual" /> 启动命中测试。</span><span class="sxs-lookup"><span data-stu-id="775d4-264">Initiates a hit test on the specified <see cref="T:System.Windows.Media.Visual" />, with caller-defined <see cref="T:System.Windows.Media.HitTestFilterCallback" /> and <see cref="T:System.Windows.Media.HitTestResultCallback" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="775d4-265">`filterCallback` 参数可以是 `null`，在这种情况下，它将被忽略。</span><span class="sxs-lookup"><span data-stu-id="775d4-265">The `filterCallback` parameter can be `null`, in which case it is ignored.</span></span> <span data-ttu-id="775d4-266">如果 `filterCallback` 未 `null`，则在 `resultCallback`之前调用它。</span><span class="sxs-lookup"><span data-stu-id="775d4-266">If `filterCallback` is not `null`, it is invoked before `resultCallback`.</span></span> <span data-ttu-id="775d4-267">`resultCallback` 不能为 `null`。</span><span class="sxs-lookup"><span data-stu-id="775d4-267">`resultCallback` cannot be `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="775d4-268">在二维可视化树中启动的命中测试可能返回 <xref:System.Windows.Media.Media3D.RayHitTestResult>，这是一个三维命中测试结果对象。</span><span class="sxs-lookup"><span data-stu-id="775d4-268">It is possible for a hit test that starts in a 2D visual tree to return <xref:System.Windows.Media.Media3D.RayHitTestResult>, which is a 3D hit test result object.</span></span> <span data-ttu-id="775d4-269">在二维可视化树中开始的命中测试无缝扩展到任何已定义的三维可视化树。</span><span class="sxs-lookup"><span data-stu-id="775d4-269">Hit testing that starts in a 2D visual tree seamlessly extends into any defined 3D visual tree.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="775d4-270">下面的示例演示如何使用 <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> 方法对 <xref:System.Windows.Controls.Canvas>中的对象进行命中测试。</span><span class="sxs-lookup"><span data-stu-id="775d4-270">The following example shows how to use the <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> method to hit test the objects within a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[HitTestingOverview#101](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/Window1.xaml.cs#101)]
 [!code-vb[HitTestingOverview#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/window1.xaml.vb#101)]  
[!code-csharp[HitTestingOverview#102](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/Window1.xaml.cs#102)]
[!code-vb[HitTestingOverview#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/window1.xaml.vb#102)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159994"><span data-ttu-id="775d4-271">使用 Drawingvisuals 进行的命中测试示例</span><span class="sxs-lookup"><span data-stu-id="775d4-271">Hit Test Using DrawingVisuals Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetRootDpi">
      <MemberSignature Language="C#" Value="public static void SetRootDpi (System.Windows.Media.Visual visual, System.Windows.DpiScale dpiInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetRootDpi(class System.Windows.Media.Visual visual, valuetype System.Windows.DpiScale dpiInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.SetRootDpi(System.Windows.Media.Visual,System.Windows.DpiScale)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetRootDpi (visual As Visual, dpiInfo As DpiScale)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetRootDpi(System::Windows::Media::Visual ^ visual, System::Windows::DpiScale dpiInfo);" />
      <MemberSignature Language="F#" Value="static member SetRootDpi : System.Windows.Media.Visual * System.Windows.DpiScale -&gt; unit" Usage="System.Windows.Media.VisualTreeHelper.SetRootDpi (visual, dpiInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dpiInfo" Type="System.Windows.DpiScale" Index="1" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="775d4-272">视觉对象目标。</span><span class="sxs-lookup"><span data-stu-id="775d4-272">A Visual object target.</span></span></param>
        <param name="dpiInfo"><span data-ttu-id="775d4-273">目标视觉对象的 DPI 信息。</span><span class="sxs-lookup"><span data-stu-id="775d4-273">DPI information for the target Visual.</span></span></param>
        <summary><span data-ttu-id="775d4-274">更新视觉对象的 DPI 信息。</span><span class="sxs-lookup"><span data-stu-id="775d4-274">Updates the DPI information of a Visual.</span></span> <span data-ttu-id="775d4-275">它仅能在没有父级的视觉对象上调用。</span><span class="sxs-lookup"><span data-stu-id="775d4-275">It can only be called on a Visual without a parent.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
