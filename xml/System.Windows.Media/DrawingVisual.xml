<Type Name="DrawingVisual" FullName="System.Windows.Media.DrawingVisual">
  <Metadata><Meta Name="ms.openlocfilehash" Value="16276efff024e4c01c5bf9ad5af8abb2d905fbb8" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83968645" /></Metadata><TypeSignature Language="C#" Value="public class DrawingVisual : System.Windows.Media.ContainerVisual" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawingVisual extends System.Windows.Media.ContainerVisual" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.DrawingVisual" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawingVisual&#xA;Inherits ContainerVisual" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawingVisual : System::Windows::Media::ContainerVisual" />
  <TypeSignature Language="F#" Value="type DrawingVisual = class&#xA;    inherit ContainerVisual" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.ContainerVisual</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Windows.Media.DrawingVisual" /> 是可用于在屏幕上呈现矢量图形的视觉对象。 内容由系统保留。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.DrawingVisual> 是一种轻量绘图类，用于呈现形状、图像或文本。 此类被视为轻型类，因为它不提供布局、输入、焦点或事件处理，从而提高了性能。 因此，绘图非常适用于背景和剪贴画。  
  
 若要使用 <xref:System.Windows.Media.DrawingVisual> 对象，需要为对象创建主机容器。 宿主容器对象必须派生自 <xref:System.Windows.FrameworkElement> 类，该类提供 <xref:System.Windows.Media.DrawingVisual> 类不支持的布局和事件处理支持。 宿主容器对象不显示任何可视属性，因为它的主要用途是包含子对象。 有关详细信息，请参阅[使用 DrawingVisual 对象](/dotnet/framework/wpf/graphics-multimedia/using-drawingvisual-objects)。  
  
 有关演示如何使用主机容器创建 <xref:System.Windows.Media.DrawingVisual> 对象的完整示例，请参阅[使用 drawingvisuals 进行的命中测试示例](https://go.microsoft.com/fwlink/?LinkID=159994)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawingVisual ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingVisual.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawingVisual();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.DrawingVisual" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 创建 <xref:System.Windows.Media.DrawingVisual> 对象时，该对象没有绘制内容。 可以通过检索对象的绘图上下文并在其中进行绘制来添加文本、图形或图像内容。 绘图上下文通过调用 <xref:System.Windows.Media.DrawingVisual> 对象的 <xref:System.Windows.Media.DrawingVisual.RenderOpen%2A> 方法返回。  
  
   
  
## Examples  
 在下面的示例中，将创建一个 <xref:System.Windows.Media.DrawingVisual> 对象，并在其绘图上下文中绘制一个矩形。 请注意，必须调用 <xref:System.Windows.Media.DrawingContext> 的 <xref:System.Windows.Media.DrawingContext.Close%2A> 方法来持久保存绘图内容。  
  
 [!code-csharp[DrawingVisualSample#101](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#101)]
 [!code-vb[DrawingVisualSample#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drawing">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DrawingGroup Drawing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.DrawingGroup Drawing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DrawingVisual.Drawing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Drawing As DrawingGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::DrawingGroup ^ Drawing { System::Windows::Media::DrawingGroup ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Drawing : System.Windows.Media.DrawingGroup" Usage="System.Windows.Media.DrawingVisual.Drawing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DrawingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Windows.Media.DrawingVisual" /> 对象的绘图内容。</summary>
        <value>获取一个 <see cref="T:System.Windows.Media.DrawingGroup" /> 类型的值，该值表示 <see cref="T:System.Windows.Media.Drawing" /> 中 <see cref="T:System.Windows.Media.DrawingVisual" /> 对象的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 视觉对象将其呈现数据存储为矢量图形指令列表。 指令列表中的每一项都以序列化格式表示一组低级别的图形数据。 有关视觉对象如何存储图形数据的详细信息，请参阅[WPF 图形呈现概述](/dotnet/framework/wpf/graphics-multimedia/wpf-graphics-rendering-overview)。  
  
 对返回 <xref:System.Windows.Media.DrawingGroup> 值所做的任何更改都不会由 <xref:System.Windows.Media.DrawingVisual>保存。  
  
   
  
## Examples  
 在下面的示例中，枚举了主机视觉对象中每个 <xref:System.Windows.Media.DrawingVisual> 的 <xref:System.Windows.Media.DrawingGroup> 值。  
  
 [!code-csharp[VisualSnippets#DrawingVisualSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/DrawingVisual.xaml.cs#drawingvisualsnippet1)]
 [!code-vb[VisualSnippets#DrawingVisualSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/drawingvisual.xaml.vb#drawingvisualsnippet1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTestCore">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="Overload:System.Windows.Media.DrawingVisual.HitTestCore" /> 确定是否已命中可视对象的边界。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.GeometryHitTestResult HitTestCore (System.Windows.Media.GeometryHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.GeometryHitTestResult HitTestCore(class System.Windows.Media.GeometryHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingVisual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As GeometryHitTestParameters) As GeometryHitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::GeometryHitTestResult ^ HitTestCore(System::Windows::Media::GeometryHitTestParameters ^ hitTestParameters);" />
      <MemberSignature Language="F#" Value="override this.HitTestCore : System.Windows.Media.GeometryHitTestParameters -&gt; System.Windows.Media.GeometryHitTestResult" Usage="drawingVisual.HitTestCore hitTestParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeometryHitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.GeometryHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters">一个 <see cref="T:System.Windows.Media.GeometryHitTestParameters" /> 类型的值，指定命中测试所依据的 <see cref="T:System.Windows.Media.Geometry" />。</param>
        <summary>确定可视对象的边界中是否存在几何图形值。</summary>
        <returns>一个 <see cref="T:System.Windows.Media.GeometryHitTestResult" /> 类型的值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingVisual.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As PointHitTestParameters) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::HitTestResult ^ HitTestCore(System::Windows::Media::PointHitTestParameters ^ hitTestParameters);" />
      <MemberSignature Language="F#" Value="override this.HitTestCore : System.Windows.Media.PointHitTestParameters -&gt; System.Windows.Media.HitTestResult" Usage="drawingVisual.HitTestCore hitTestParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters">一个 <see cref="T:System.Windows.Media.PointHitTestParameters" /> 类型的值，指定命中测试所依据的 <see cref="T:System.Windows.Point" />。</param>
        <summary>确定在 <see cref="T:System.Windows.Media.DrawingVisual" /> 对象的边界中是否存在点坐标值。</summary>
        <returns>一个 <see cref="T:System.Windows.Media.HitTestResult" /> 类型的值，表示从命中测试中返回的 <see cref="T:System.Windows.Media.Visual" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回值的 <xref:System.Windows.Media.HitTestResult.VisualHit%2A> 属性表示已命中的视觉对象。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderOpen">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DrawingContext RenderOpen ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.DrawingContext RenderOpen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingVisual.RenderOpen" />
      <MemberSignature Language="VB.NET" Value="Public Function RenderOpen () As DrawingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::DrawingContext ^ RenderOpen();" />
      <MemberSignature Language="F#" Value="member this.RenderOpen : unit -&gt; System.Windows.Media.DrawingContext" Usage="drawingVisual.RenderOpen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DrawingContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>打开用于呈现的 <see cref="T:System.Windows.Media.DrawingVisual" /> 对象。 返回的 <see cref="T:System.Windows.Media.DrawingContext" /> 值可用于呈现为 <see cref="T:System.Windows.Media.DrawingVisual" />。</summary>
        <returns>一个 <see cref="T:System.Windows.Media.DrawingContext" /> 类型的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用 <xref:System.Windows.Media.DrawingContext>的 <xref:System.Windows.Media.DrawingContext.Close%2A> 方法时，当前绘图内容将替换为 <xref:System.Windows.Media.DrawingVisual>定义的任何以前的绘图内容。 这意味着无法将新的绘图内容追加到现有的绘图内容。  
  
   
  
## Examples  
 在下面的示例中，将创建一个 <xref:System.Windows.Media.DrawingVisual> 对象，并返回其 <xref:System.Windows.Media.DrawingContext>。  
  
 [!code-csharp[DrawingVisualSample#101](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#101)]
 [!code-vb[DrawingVisualSample#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#101)]  
  
 绘制到绘图上下文中的顺序非常重要，每个后续绘图都是在其他绘图之上绘制的。 在下面的示例中，先绘制矩形，然后绘制文本。  
  
 [!code-csharp[VisualSnippets#RenderOrderSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Snippets.cs#renderordersnippet1)]
 [!code-vb[VisualSnippets#RenderOrderSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/snippets.vb#renderordersnippet1)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159994">使用 Drawingvisuals 进行的命中测试示例</related>
      </Docs>
    </Member>
  </Members>
</Type>
