<Type Name="HitTestFilterCallback" FullName="System.Windows.Media.HitTestFilterCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8298265731168c920379af40d034876c221730aa" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89778595" /></Metadata><TypeSignature Language="C#" Value="public delegate System.Windows.Media.HitTestFilterBehavior HitTestFilterCallback(DependencyObject potentialHitTestTarget);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HitTestFilterCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.HitTestFilterCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function HitTestFilterCallback(potentialHitTestTarget As DependencyObject) As HitTestFilterBehavior " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Windows::Media::HitTestFilterBehavior HitTestFilterCallback(DependencyObject ^ potentialHitTestTarget);" />
  <TypeSignature Language="F#" Value="type HitTestFilterCallback = delegate of DependencyObject -&gt; HitTestFilterBehavior" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="potentialHitTestTarget" Type="System.Windows.DependencyObject" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Windows.Media.HitTestFilterBehavior</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="potentialHitTestTarget">要执行命中测试的视觉对象。</param>
    <summary>表示一种回叫方法，该方法指定可视化树中不进行命中测试处理的部分。</summary>
    <returns>一个 <see cref="T:System.Windows.Media.HitTestFilterBehavior" />，它表示从命中测试中产生的操作。</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于映射到命中测试条件的所有视觉对象，将调用命中测试筛选器回调方法，该方法从您指定的视觉对象开始，并从其可视化树的分支中按降序排列。 但是，你可能要忽略不希望在命中测试结果回调叫函数中处理的可视化树的某些分支。 命中测试筛选器回叫函数的返回值确定视觉对象的枚举应采用的操作类型。 例如，如果返回值， <xref:System.Windows.Media.HitTestFilterBehavior.ContinueSkipSelfAndChildren> 则可以从命中测试结果枚举中删除当前的可视对象及其子代。 这意味着命中测试结果回调方法在其枚举中将看不到这些对象。  
  
> [!NOTE]
>  修剪对象的可视化树会减少命中测试结果枚举传递期间的处理量。  
  
 ![使用命中测试筛选器修剪可视化树](~/add/media/filteredvisualtree-01.png "使用命中测试筛选器修剪可视化树")  
修剪可视化树  
  
   
  
## Examples  
 下面的示例演示如何 <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> 使用 <xref:System.Windows.Media.HitTestFilterCallback> 值调用。 还定义了相应的命中测试回叫方法。  
  
 [!code-csharp[HitTestingOverview#104](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/Window1.xaml.cs#104)]
 [!code-vb[HitTestingOverview#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/window1.xaml.vb#104)]  
  
 下面的示例演示如何 <xref:System.Windows.Media.HitTestFilterBehavior> 从命中测试筛选器回调方法返回值。  
  
 [!code-csharp[HitTestingOverview#106](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/Window1.xaml.cs#106)]
 [!code-vb[HitTestingOverview#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/window1.xaml.vb#106)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)" />
  </Docs>
</Type>
