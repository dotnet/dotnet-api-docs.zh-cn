<Type Name="DashStyle" FullName="System.Windows.Media.DashStyle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ccb32606709db841d15c658d74121199f74b168d" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89764268" /></Metadata><TypeSignature Language="C#" Value="public sealed class DashStyle : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DashStyle extends System.Windows.Media.Animation.Animatable" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.DashStyle" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DashStyle&#xA;Inherits Animatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DashStyle sealed : System::Windows::Media::Animation::Animatable" />
  <TypeSignature Language="F#" Value="type DashStyle = class&#xA;    inherit Animatable" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DashStyle extends System.Windows.Media.Animation.Animatable" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type DashStyle = class&#xA;    inherit Animatable&#xA;    interface DUCE.IResource" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Windows.Media.Pen" /> 将应用的虚线和间距的序列。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.DashStyle.Dashes%2A>此类的属性描述了交替虚线和间隙的长度。  集合中的值是的 <xref:System.Windows.Media.Pen.Thickness%2A> 的倍数 <xref:System.Windows.Media.Pen> 。  例如，的数组 `1` `2` 指定长度为 (`1`  *  <xref:System.Windows.Media.Pen.Thickness%2A>) 后跟长度 () 的间距 `2`  *  <xref:System.Windows.Media.Pen.Thickness%2A> 的短划线。  
  
> [!NOTE]
>  绘制的短划线的实际长度取决于 <xref:System.Windows.Media.Pen.DashCap%2A> 添加到虚线每个端点的的样式。 的默认 <xref:System.Windows.Media.Pen.DashCap%2A> 值 <xref:System.Windows.Media.Pen> 为 <xref:System.Windows.Media.PenLineCap.Square> 。 这会导致一端在笔笔划的每一端添加一一半，即线条粗细的一半。  (参见 <xref:System.Windows.Media.PenLineCap> 以获取示例。 ) 因此，如果指定的数组 `0` `2` 和正方形 <xref:System.Windows.Media.Pen.DashCap%2A> ，则会 (`0`  *  <xref:System.Windows.Media.Pen.Thickness%2A>) + (`2`  *  <xref:System.Windows.Media.Pen.DashCap%2A>) 使用实际的短划线长度。  
  
 如果集合中有奇数个值，则会将值解释为在生成偶数个值后重复出现。  例如，包含 `2` 、、的集合 `3` 与 `5` 包含、、、、、的集合 `2` 相同 `3` `5` `2` `3` `5` 。  
  
 数组中的负值被解释为其绝对值。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Windows.Media.DashStyle> 的属性 <xref:System.Windows.Media.Pen> 在文本下创建虚线。  
  
 [!code-xaml[DrawingMiscSnippets_snip#DashStyle](~/samples/snippets/xaml/VS_Snippets_Wpf/DrawingMiscSnippets_snip/XAML/DashStyleExample.xaml#dashstyle)]  
  
 下图显示了前面的示例生成的内容。  
  
 ![下面有虚线的文本。](~/add/media/graphicsdashstyle.gif "下面有虚线的文本。")  
  
 下图显示了应用于下划线的不同虚线样式的示例。  
  
 ![显示几种不同的破折号样式。](~/add/media/graphicsdashstyles.gif "显示几种不同的破折号样式。")  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.DashStyles" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.DashStyle" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DashStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DashStyle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DashStyle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.DashStyle" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DashStyle (System.Collections.Generic.IEnumerable&lt;double&gt; dashes, double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;float64&gt; dashes, float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DashStyle.#ctor(System.Collections.Generic.IEnumerable{System.Double},System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dashes As IEnumerable(Of Double), offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DashStyle(System::Collections::Generic::IEnumerable&lt;double&gt; ^ dashes, double offset);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.DashStyle : seq&lt;double&gt; * double -&gt; System.Windows.Media.DashStyle" Usage="new System.Windows.Media.DashStyle (dashes, offset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dashes" Type="System.Collections.Generic.IEnumerable&lt;System.Double&gt;" />
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="dashes"><see cref="P:System.Windows.Media.DashStyle.Dashes" /> 的 <see cref="T:System.Windows.Media.DashStyle" />。</param>
        <param name="offset"><see cref="P:System.Windows.Media.DashStyle.Offset" /> 的 <see cref="T:System.Windows.Media.DashStyle" />。</param>
        <summary>使用指定的 <see cref="T:System.Windows.Media.DashStyle" /> 和 <see cref="P:System.Windows.Media.DashStyle.Dashes" /> 初始化 <see cref="P:System.Windows.Media.DashStyle.Offset" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DashStyle Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.DashStyle Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DashStyle.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As DashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::DashStyle ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.DashStyle" Usage="dashStyle.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DashStyle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建此 <see cref="T:System.Windows.Media.DashStyle" /> 的可修改克隆，从而深度复制此对象的值。</summary>
        <returns>当前对象的可修改复本。 即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="false" />，所克隆对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也为 <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于生成冻结 <xref:System.Windows.Freezable> 对象 (或任何对象) 的可修改副本 <xref:System.Windows.Freezable> 。 为方便起见，此方法使用强类型实现隐藏了继承的版本。  
  
 有关详细信息，请参阅 <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>。  
  
 在复制依赖项属性时，此方法会复制资源引用和数据绑定 (它们可能不再解析) ，而不能解析动画或其当前值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DashStyle CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.DashStyle CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DashStyle.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As DashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::DashStyle ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.DashStyle" Usage="dashStyle.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DashStyle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建此 <see cref="T:System.Windows.Media.DashStyle" /> 对象的可修改复本，从而深度复制此对象的当前值。</summary>
        <returns>当前对象的可修改复本。 即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="false" />，所克隆对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也为 <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于生成冻结 <xref:System.Windows.Freezable> 对象 (或任何对象) 的可修改副本 <xref:System.Windows.Freezable> 。 为方便起见，此方法使用强类型实现隐藏了继承的版本。  
  
 有关详细信息，请参阅 <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>。  
  
 不复制资源引用、数据绑定和动画，而是复制其当前值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DashStyle.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="dashStyle.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dashes">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DoubleCollection Dashes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.DoubleCollection Dashes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DashStyle.Dashes" />
      <MemberSignature Language="VB.NET" Value="Public Property Dashes As DoubleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::DoubleCollection ^ Dashes { System::Windows::Media::DoubleCollection ^ get(); void set(System::Windows::Media::DoubleCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Dashes : System.Windows.Media.DoubleCollection with get, set" Usage="System.Windows.Media.DashStyle.Dashes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DoubleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置此 <see cref="T:System.Windows.Media.DashStyle" /> 中虚线和间距的集合。</summary>
        <value>虚线和间距的集合。  默认值为空 <see cref="T:System.Windows.Media.DoubleCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此集合描述了交替短划线和间隙的长度。  集合中的值是的 <xref:System.Windows.Media.Pen.Thickness%2A> 的倍数 <xref:System.Windows.Media.Pen> 。  例如，的数组 `1` `2` 指定长度为 (`1`  *  <xref:System.Windows.Media.Pen.Thickness%2A>) 后跟长度 () 的间距 `2`  *  <xref:System.Windows.Media.Pen.Thickness%2A> 的短划线。  
  
> [!NOTE]
>  绘制的短划线的实际长度取决于 <xref:System.Windows.Media.Pen.DashCap%2A> 添加到虚线每个端点的的样式。 的默认 <xref:System.Windows.Media.Pen.DashCap%2A> 值 <xref:System.Windows.Media.Pen> 为 <xref:System.Windows.Media.PenLineCap.Square> 。 这会导致一端在笔笔划的每一端添加一一半，即线条粗细的一半。  (参见 <xref:System.Windows.Media.PenLineCap> 以获取示例。 ) 因此，如果指定的数组 `0` `2` 和正方形 <xref:System.Windows.Media.Pen.DashCap%2A> ，则会 (`0`  *  <xref:System.Windows.Media.Pen.Thickness%2A>) + (`2`  *  <xref:System.Windows.Media.Pen.DashCap%2A>) 使用实际的短划线长度。  
  
 如果集合中有奇数个值，则会将值解释为在生成偶数个值后重复出现。  例如，包含 `2` 、、的集合 `3` 与 `5` 包含、、、、、的集合 `2` 相同 `3` `5` `2` `3` `5` 。  
  
 数组中的负值被解释为其绝对值。  
  
<a name="dependencyPropertyInfo_Dashes"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Media.DashStyle.DashesProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Windows.Media.DashStyle> 的属性 <xref:System.Windows.Media.Pen> 在文本下创建虚线。  
  
 [!code-xaml[DrawingMiscSnippets_snip#DashStyle](~/samples/snippets/xaml/VS_Snippets_Wpf/DrawingMiscSnippets_snip/XAML/DashStyleExample.xaml#dashstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DashesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DashesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DashesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.DashStyle.DashesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DashesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DashesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DashesProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.DashStyle.DashesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.DashStyle.Dashes" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public double Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DashStyle.Offset" />
      <MemberSignature Language="VB.NET" Value="Public Property Offset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Offset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Offset : double with get, set" Usage="System.Windows.Media.DashStyle.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置笔画在虚线序列中开始的距离。</summary>
        <value>虚线序列的偏移量。  默认值为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 强烈建议使用可解析为任意虚线中间的偏移值。  这会使大多数笔画在中划线（而不是间距）开始和结束。  
  
<a name="dependencyPropertyInfo_Offset"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Media.DashStyle.OffsetProperty>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.DashStyle.OffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OffsetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OffsetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.DashStyle.OffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.DashStyle.Offset" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
