<Type Name="Color" FullName="System.Windows.Media.Color">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f02fcd7c77f609fb0f19bb8c527b01122aef1aae" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102059412" /></Metadata><TypeSignature Language="C#" Value="public struct Color : IEquatable&lt;System.Windows.Media.Color&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Color extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.Media.Color&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Color" />
  <TypeSignature Language="VB.NET" Value="Public Structure Color&#xA;Implements IEquatable(Of Color), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Color : IEquatable&lt;System::Windows::Media::Color&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type Color = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.Media.Color&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Windows.Media.ColorConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Windows.Media.ColorConverter))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>从 alpha、红色、绿色和蓝色通道角度描述一种颜色。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_Color"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性用法  
  
```  
<object property="predefinedColor"/>  
- or -  
<object property="#rgb"/>  
- or -  
<object property="#argb"/>  
- or -  
<object property="#rrggbb"/>  
- or -  
<object property="#aarrggbb"/>  
- or -  
<object property="sc# scA,scR,scG,scB"/>  
- or -  
<object property="ContextColor profileUri alphaValue,colorValue"/>  
  
```  
  
<a name="xamlValues_Color"></a>   
## <a name="xaml-values"></a>XAML 值  
 *predefinedColor*  
 类预定义的颜色之一 <xref:System.Windows.Media.Colors> 。  
  
 *rgb*  
 三位十六进制数。 第一个数字指定颜色的 <xref:System.Windows.Media.Color.R%2A> 值，第二个数字指定 <xref:System.Windows.Media.Color.G%2A> 值，第三个数字指定 <xref:System.Windows.Media.Color.B%2A> 值。 例如，`00F`。  
  
 *argb*  
 四位十六进制数。 第一个数字指定颜色的 <xref:System.Windows.Media.Color.A%2A> 值，第二个数字指定其 <xref:System.Windows.Media.Color.R%2A> 值，下一个数字指定 <xref:System.Windows.Media.Color.G%2A> 值，最后一个数字指定其 <xref:System.Windows.Media.Color.B%2A> 值。 例如，`F00F`。  
  
 *rrggbb*  
 六位十六进制数。 前两位数字指定颜色的 <xref:System.Windows.Media.Color.R%2A> 值，接下来的两个数字指定其 <xref:System.Windows.Media.Color.G%2A> 值，最后两个数字指定其值 <xref:System.Windows.Media.Color.B%2A> 。 例如，`0000FF`。  
  
 *aarrggbb*  
 8位十六进制数。 前两位数字指定颜色的值，接下来的两个值指定其值，接下来的两个数字指定其值 <xref:System.Windows.Media.Color.A%2A> <xref:System.Windows.Media.Color.R%2A> <xref:System.Windows.Media.Color.G%2A> ，最后两个数字指定其值 <xref:System.Windows.Media.Color.B%2A> 。 例如，`FF0000FF`。  
  
 *scA*  
 <xref:System.Single?displayProperty=nameWithType>  
  
 颜色的 <xref:System.Windows.Media.Color.ScA%2A> 值。  
  
 *scR*  
 <xref:System.Single?displayProperty=nameWithType>  
  
 颜色的 <xref:System.Windows.Media.Color.ScR%2A> 值。  
  
 *scG*  
 <xref:System.Single?displayProperty=nameWithType>  
  
 颜色的 <xref:System.Windows.Media.Color.ScG%2A> 值。  
  
 *scB*  
 <xref:System.Single?displayProperty=nameWithType>  
  
 颜色的 <xref:System.Windows.Media.Color.ScB%2A> 值。  
  
 *profileUri*  
 <xref:System.Uri?displayProperty=nameWithType>  
  
 国际颜色联盟 (ICC) 或图像颜色管理 (ICM) 颜色配置文件。  
  
 *alphaValue*  
 <xref:System.Single?displayProperty=nameWithType>  
  
 Alpha 通道颜色值。 值范围为0.0 到1.0。  
  
 *colorValue*  
 <xref:System.Single?displayProperty=nameWithType>  
  
 以逗号分隔的列表，其中包含三到八个值，它们表示颜色配置文件的颜色通道。 值范围为0.0 到1.0。  
  
   
  
## Examples  
 此示例演示如何使用 sRGB、ScRGB 和颜色配置文件值创建蓝色。  
  
 [!code-xaml[GraphicsMMMiscSnippets_snip#ColorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/GraphicsMMMiscSnippets_snip/CS/ColorExample.xaml#colorexample)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="A">
      <MemberSignature Language="C#" Value="public byte A { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 A" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Color.A" />
      <MemberSignature Language="VB.NET" Value="Public Property A As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte A { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.A : byte with get, set" Usage="System.Windows.Media.Color.A" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置颜色的 <see langword="sRGB" /> alpha 通道值。</summary>
        <value>颜色的 <see langword="sRGB" /> Alpha 通道值，介于 0 到 255 之间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 结构的 alpha 通道 <xref:System.Windows.Media.Color> 确定具有的透明度 <xref:System.Windows.Media.Color> 。  Alpha 值255指示 <xref:System.Windows.Media.Color> 完全不透明，值为0表示颜色完全透明。  
  
 `sRGB`通道 (<xref:System.Windows.Media.Color.A%2A> 、 <xref:System.Windows.Media.Color.R%2A> 、 <xref:System.Windows.Media.Color.G%2A> 、 <xref:System.Windows.Media.Color.B%2A>) 和 ScRGB 通道 (<xref:System.Windows.Media.Color.ScA%2A> 、、、 <xref:System.Windows.Media.Color.ScR%2A>) <xref:System.Windows.Media.Color.ScG%2A> 为 <xref:System.Windows.Media.Color.ScB%2A> <xref:System.Windows.Media.Color> 同步属性。  例如，如果 <xref:System.Windows.Media.Color.A%2A> `sRGB` 修改了 alpha 通道，则 `ScRGB` <xref:System.Windows.Media.Color.ScA%2A> 使用方案支持的0-1 范围将 alpha 通道转换为等效的值 `Sc` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color Add (System.Windows.Media.Color color1, System.Windows.Media.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Color Add(valuetype System.Windows.Media.Color color1, valuetype System.Windows.Media.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.Add(System.Windows.Media.Color,System.Windows.Media.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (color1 As Color, color2 As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Color Add(System::Windows::Media::Color color1, System::Windows::Media::Color color2);" />
      <MemberSignature Language="F#" Value="static member Add : System.Windows.Media.Color * System.Windows.Media.Color -&gt; System.Windows.Media.Color" Usage="System.Windows.Media.Color.Add (color1, color2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color1" Type="System.Windows.Media.Color" />
        <Parameter Name="color2" Type="System.Windows.Media.Color" />
      </Parameters>
      <Docs>
        <param name="color1">要相加的第一个 <see cref="T:System.Windows.Media.Color" /> 结构。</param>
        <param name="color2">要相加的第二个 <see cref="T:System.Windows.Media.Color" /> 结构。</param>
        <summary>将两个 <see cref="T:System.Windows.Media.Color" /> 结构相加。</summary>
        <returns>一个新的 <see cref="T:System.Windows.Media.Color" /> 结构，其颜色值是加法运算的结果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Color> 通过将第一种颜色的 alpha、红色、绿色和蓝色通道添加到第二种颜色的 alpha、红色、绿色和蓝色通道来添加结构。 例如，alpha 通道 `color1` 和 alpha 通道 `color2` 一起添加，以生成结果颜色的 alpha 通道。 这是通过红色、绿色和蓝色通道实现的，用来生成新颜色的红色、绿色和蓝色通道。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Color.op_Addition(System.Windows.Media.Color,System.Windows.Media.Color)" />
      </Docs>
    </Member>
    <Member MemberName="AreClose">
      <MemberSignature Language="C#" Value="public static bool AreClose (System.Windows.Media.Color color1, System.Windows.Media.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AreClose(valuetype System.Windows.Media.Color color1, valuetype System.Windows.Media.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.AreClose(System.Windows.Media.Color,System.Windows.Media.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AreClose (color1 As Color, color2 As Color) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool AreClose(System::Windows::Media::Color color1, System::Windows::Media::Color color2);" />
      <MemberSignature Language="F#" Value="static member AreClose : System.Windows.Media.Color * System.Windows.Media.Color -&gt; bool" Usage="System.Windows.Media.Color.AreClose (color1, color2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color1" Type="System.Windows.Media.Color" />
        <Parameter Name="color2" Type="System.Windows.Media.Color" />
      </Parameters>
      <Docs>
        <param name="color1">要比较的第一种颜色。</param>
        <param name="color2">要比较的第二种颜色。</param>
        <summary>比较两个 <see cref="T:System.Windows.Media.Color" /> 结构是否模糊相等。</summary>
        <returns>如果 <paramref name="color1" /> 与 <paramref name="color2" /> 基本上相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此相等方法会补偿，因为浮点值在操作时可以获取少量错误。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Color.AreClose(System.Windows.Media.Color,System.Windows.Media.Color)" />
        <altmember cref="Overload:System.Windows.Media.Color.Equals" />
        <altmember cref="M:System.Windows.Media.Color.op_Equality(System.Windows.Media.Color,System.Windows.Media.Color)" />
        <altmember cref="M:System.Windows.Media.Color.op_Inequality(System.Windows.Media.Color,System.Windows.Media.Color)" />
      </Docs>
    </Member>
    <Member MemberName="B">
      <MemberSignature Language="C#" Value="public byte B { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 B" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Color.B" />
      <MemberSignature Language="VB.NET" Value="Public Property B As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte B { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.B : byte with get, set" Usage="System.Windows.Media.Color.B" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置颜色的 <see langword="sRGB" /> 蓝色通道值。</summary>
        <value><see cref="T:System.Windows.Media.Color" /> 结构的 <see langword="sRGB" /> 蓝色通道值，介于 0 到 255 之间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `sRGB`通道 (<xref:System.Windows.Media.Color.A%2A> 、 <xref:System.Windows.Media.Color.R%2A> 、 <xref:System.Windows.Media.Color.G%2A> 、 <xref:System.Windows.Media.Color.B%2A>) 和 `ScRGB` 该结构的通道 (<xref:System.Windows.Media.Color.ScA%2A> 、、、 <xref:System.Windows.Media.Color.ScR%2A> <xref:System.Windows.Media.Color.ScG%2A> <xref:System.Windows.Media.Color.ScB%2A>) <xref:System.Windows.Media.Color> 为同步属性。  例如，当 <xref:System.Windows.Media.Color.B%2A> `sRGB` 修改蓝色通道时，会 `ScRGB` <xref:System.Windows.Media.Color.ScB%2A> 使用方案支持的0-1 范围将蓝色通道转换为等效的值 `Sc` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public void Clamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clamp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.Clamp" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clamp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clamp();" />
      <MemberSignature Language="F#" Value="member this.Clamp : unit -&gt; unit" Usage="color.Clamp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果颜色的 <see langword="ScRGB" /> 通道不在 0 到 1 的范围内，请将它们设置在此范围内。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 颜色空间的色域大于 `ScRGB` 夹具范围，因此使用此方法可能会导致颜色信息丢失。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorContext">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ColorContext ColorContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ColorContext ColorContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Color.ColorContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColorContext As ColorContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ColorContext ^ ColorContext { System::Windows::Media::ColorContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ColorContext : System.Windows.Media.ColorContext" Usage="System.Windows.Media.Color.ColorContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ColorContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取颜色 (ICC) 或图像颜色管理 (ICM) 颜色配置文件的国际颜色协会。</summary>
        <value>国际颜色联盟 (ICC) 或图像颜色管理 (ICM) 颜色配置文件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 国际颜色协会 (ICC) 或图像颜色管理 (ICM) 颜色配置文件包含特定应用程序或设备（如彩色打印机）的颜色系统配置文件。 此配置文件与通用配置文件匹配，后者又可以映射到其他设备的各个配置文件。 这允许一台计算机设备使用的颜色系统与相同或其他计算机系统上其他应用程序和设备的颜色相匹配。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>测试两个 <see cref="T:System.Windows.Media.Color" /> 结构是否相同。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="color.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">与此 <see cref="T:System.Windows.Media.Color" /> 结构进行比较的对象。</param>
        <summary>测试指定的对象是否为 <see cref="T:System.Windows.Media.Color" /> 结构并等同于当前颜色。</summary>
        <returns>如果指定的对象是 <see cref="T:System.Windows.Media.Color" /> 结构并与当前的 <see cref="T:System.Windows.Media.Color" /> 结构相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在对浮点值进行操作时，这些值可能会获得少量错误。  <xref:System.Windows.Media.Color.Equals%2A>方法、 <xref:System.Windows.Media.Color.op_Equality%2A> 运算符和 <xref:System.Windows.Media.Color.op_Inequality%2A> 运算符不能弥补这一点，因此可能不会返回预期的布尔值结果。  
  
 <xref:System.Windows.Media.Color.AreClose%2A>方法使用模糊相等算法，该算法通过返回 `true` 来比较两个 <xref:System.Windows.Media.Color> 几乎完全相同的结构，但其值可能会因 minuscule 量而有所不同，从而补偿此浮点算术错误。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Color.AreClose(System.Windows.Media.Color,System.Windows.Media.Color)" />
        <altmember cref="M:System.Windows.Media.Color.op_Equality(System.Windows.Media.Color,System.Windows.Media.Color)" />
        <altmember cref="M:System.Windows.Media.Color.op_Inequality(System.Windows.Media.Color,System.Windows.Media.Color)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Media.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.Media.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.Equals(System.Windows.Media.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (color As Color) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Windows::Media::Color color);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Media.Color -&gt; bool" Usage="color.Equals color" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Windows.Media.Color" />
      </Parameters>
      <Docs>
        <param name="color">要与当前 <see cref="T:System.Windows.Media.Color" /> 结构进行比较的 <see cref="T:System.Windows.Media.Color" /> 结构。</param>
        <summary>测试指定的对象是否为 <see cref="T:System.Windows.Media.Color" /> 结构并与当前颜色完全相同。</summary>
        <returns>如果指定的 <see cref="T:System.Windows.Media.Color" /> 结构与当前的 <see cref="T:System.Windows.Media.Color" /> 结构相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Media.Color color1, System.Windows.Media.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Media.Color color1, valuetype System.Windows.Media.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.Equals(System.Windows.Media.Color,System.Windows.Media.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (color1 As Color, color2 As Color) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Media::Color color1, System::Windows::Media::Color color2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Media.Color * System.Windows.Media.Color -&gt; bool" Usage="System.Windows.Media.Color.Equals (color1, color2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color1" Type="System.Windows.Media.Color" />
        <Parameter Name="color2" Type="System.Windows.Media.Color" />
      </Parameters>
      <Docs>
        <param name="color1">要比较的第一个 <see cref="T:System.Windows.Media.Color" /> 结构。</param>
        <param name="color2">要比较的第二个 <see cref="T:System.Windows.Media.Color" /> 结构。</param>
        <summary>测试两个 <see cref="T:System.Windows.Media.Color" /> 结构是否相同。</summary>
        <returns>如果 <paramref name="color1" /> 与 <paramref name="color2" /> 完全相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在对浮点值进行操作时，这些值可能会获得少量错误。  <xref:System.Windows.Media.Color.Equals%2A>方法、 <xref:System.Windows.Media.Color.op_Equality%2A> 运算符和 <xref:System.Windows.Media.Color.op_Inequality%2A> 运算符不能弥补这一点，因此可能不会返回预期的布尔值结果。  
  
 <xref:System.Windows.Media.Color.AreClose%2A>方法使用模糊相等算法，该算法通过返回 `true` 来比较两个 <xref:System.Windows.Media.Color> 几乎完全相同的结构，但其值可能会因 minuscule 量而有所不同，从而补偿此浮点算术错误。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Color.AreClose(System.Windows.Media.Color,System.Windows.Media.Color)" />
        <altmember cref="M:System.Windows.Media.Color.op_Equality(System.Windows.Media.Color,System.Windows.Media.Color)" />
        <altmember cref="M:System.Windows.Media.Color.op_Inequality(System.Windows.Media.Color,System.Windows.Media.Color)" />
      </Docs>
    </Member>
    <Member MemberName="FromArgb">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color FromArgb (byte a, byte r, byte g, byte b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Color FromArgb(unsigned int8 a, unsigned int8 r, unsigned int8 g, unsigned int8 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromArgb (a As Byte, r As Byte, g As Byte, b As Byte) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Color FromArgb(System::Byte a, System::Byte r, System::Byte g, System::Byte b);" />
      <MemberSignature Language="F#" Value="static member FromArgb : byte * byte * byte * byte -&gt; System.Windows.Media.Color" Usage="System.Windows.Media.Color.FromArgb (a, r, g, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte" />
        <Parameter Name="r" Type="System.Byte" />
        <Parameter Name="g" Type="System.Byte" />
        <Parameter Name="b" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="a">新颜色的 Alpha 通道 <see cref="P:System.Windows.Media.Color.A" />。</param>
        <param name="r">新颜色的红色通道 <see cref="P:System.Windows.Media.Color.R" />。</param>
        <param name="g">新颜色的绿色通道 <see cref="P:System.Windows.Media.Color.G" />。</param>
        <param name="b">新颜色的蓝色通道 <see cref="P:System.Windows.Media.Color.B" />。</param>
        <summary>使用指定的 <see langword="sRGB" /> Alpha 通道和颜色通道值创建一个新的 <see cref="T:System.Windows.Media.Color" /> 结构。</summary>
        <returns>具有指定值的 <see cref="T:System.Windows.Media.Color" /> 结构。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Color.FromArgb%2A>方法允许您指定 alpha 通道; <xref:System.Windows.Media.Color.FromRgb%2A> 对于 alpha 通道，此方法使用默认值255。  
  
 颜色的 alpha 通道确定颜色的透明度。 Alpha 值255表示颜色完全不透明，值为0表示颜色完全透明。  
  
   
  
## Examples  
 [!code-csharp[BrushesMiscSnippets_procedural_snip#FromArgbExample](~/samples/snippets/csharp/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/CSharp/CreateColorsFromExample.cs#fromargbexample)]
 [!code-vb[BrushesMiscSnippets_procedural_snip#FromArgbExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/visualbasic/createcolorsfromexample.vb#fromargbexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Color.FromRgb(System.Byte,System.Byte,System.Byte)" />
        <altmember cref="M:System.Windows.Media.Color.FromScRgb(System.Single,System.Single,System.Single,System.Single)" />
        <altmember cref="M:System.Windows.Media.Color.FromAValues(System.Single,System.Single[],System.Uri)" />
        <altmember cref="M:System.Windows.Media.Color.FromValues(System.Single[],System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="FromAValues">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color FromAValues (float a, float[] values, Uri profileUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Color FromAValues(float32 a, float32[] values, class System.Uri profileUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.FromAValues(System.Single,System.Single[],System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromAValues (a As Single, values As Single(), profileUri As Uri) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Color FromAValues(float a, cli::array &lt;float&gt; ^ values, Uri ^ profileUri);" />
      <MemberSignature Language="F#" Value="static member FromAValues : single * single[] * Uri -&gt; System.Windows.Media.Color" Usage="System.Windows.Media.Color.FromAValues (a, values, profileUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single" />
        <Parameter Name="values" Type="System.Single[]" />
        <Parameter Name="profileUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="a">颜色的 Alpha 通道值，该值介于 0 和 1 之间。</param>
        <param name="values">一个值集合，其中的值指定新颜色的颜色通道。 这些值映射到 <paramref name="profileUri" />。</param>
        <param name="profileUri">国际颜色联盟 (ICC) 或图像颜色管理 (ICM) 颜色配置文件来实现新的颜色。</param>
        <summary>使用指定的 Alpha 通道、颜色通道值和颜色配置文件创建一个新的 <see cref="T:System.Windows.Media.Color" /> 结构。</summary>
        <returns>具有指定值的 <see cref="T:System.Windows.Media.Color" /> 结构。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 国际颜色协会 (ICC) 或图像颜色管理 (ICM) 颜色配置文件包含特定应用程序或设备（如彩色打印机）的颜色系统配置文件。 此配置文件与通用配置文件匹配，后者又可以映射到其他设备的各个配置文件。 这允许一台计算机设备使用的颜色系统与相同或其他计算机系统上其他应用程序和设备的颜色相匹配。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Windows.Media.Color.FromAValues%2A> 方法创建 <xref:System.Windows.Media.Color> 结构。  
  
 [!code-csharp[BrushesMiscSnippets_procedural_snip#FromAValuesExample](~/samples/snippets/csharp/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/CSharp/CreateColorsFromExample.cs#fromavaluesexample)]
 [!code-vb[BrushesMiscSnippets_procedural_snip#FromAValuesExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/visualbasic/createcolorsfromexample.vb#fromavaluesexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromRgb">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color FromRgb (byte r, byte g, byte b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Color FromRgb(unsigned int8 r, unsigned int8 g, unsigned int8 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.FromRgb(System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromRgb (r As Byte, g As Byte, b As Byte) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Color FromRgb(System::Byte r, System::Byte g, System::Byte b);" />
      <MemberSignature Language="F#" Value="static member FromRgb : byte * byte * byte -&gt; System.Windows.Media.Color" Usage="System.Windows.Media.Color.FromRgb (r, g, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Byte" />
        <Parameter Name="g" Type="System.Byte" />
        <Parameter Name="b" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="r">新颜色的 <see langword="sRGB" /> 红色通道 <see cref="P:System.Windows.Media.Color.R" />。</param>
        <param name="g">新颜色的 <see langword="sRGB" /> 绿色通道 <see cref="P:System.Windows.Media.Color.G" />。</param>
        <param name="b">新颜色的 <see langword="sRGB" /> 蓝色通道 <see cref="P:System.Windows.Media.Color.B" />。</param>
        <summary>使用指定的 <see langword="sRGB" /> 颜色通道值创建一个新的 <see cref="T:System.Windows.Media.Color" /> 结构。</summary>
        <returns>具有指定值且 Alpha 通道值为 255 的 <see cref="T:System.Windows.Media.Color" /> 结构。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Color.FromArgb%2A>方法允许您指定 alpha 通道; <xref:System.Windows.Media.Color.FromRgb%2A> 对于 alpha 通道，此方法使用默认值1。  
  
 颜色的 alpha 通道确定颜色的透明度。 Alpha 值为1表示颜色完全不透明，值为0表示颜色完全透明。  
  
 SRGB 通道 (<xref:System.Windows.Media.Color.A%2A> 、 <xref:System.Windows.Media.Color.R%2A> 、 <xref:System.Windows.Media.Color.G%2A> 、 <xref:System.Windows.Media.Color.B%2A>) 和 ScRGB 通道 (<xref:System.Windows.Media.Color.ScA%2A> 、、、 <xref:System.Windows.Media.Color.ScR%2A>) <xref:System.Windows.Media.Color.ScG%2A> 为 <xref:System.Windows.Media.Color.ScB%2A> <xref:System.Windows.Media.Color> 同步属性。  例如，如果在 <xref:System.Windows.Media.Color.R%2A> ，sRGB 红色通道修改了 ScRGB 红色通道， <xref:System.Windows.Media.Color.ScR%2A> 则将转换为等效的值。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Windows.Media.Color.FromRgb%2A> 方法创建 <xref:System.Windows.Media.Color> 结构。  
  
 [!code-csharp[BrushesMiscSnippets_procedural_snip#FromRgbExample](~/samples/snippets/csharp/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/CSharp/CreateColorsFromExample.cs#fromrgbexample)]
 [!code-vb[BrushesMiscSnippets_procedural_snip#FromRgbExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/visualbasic/createcolorsfromexample.vb#fromrgbexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)" />
        <altmember cref="M:System.Windows.Media.Color.FromScRgb(System.Single,System.Single,System.Single,System.Single)" />
        <altmember cref="M:System.Windows.Media.Color.FromAValues(System.Single,System.Single[],System.Uri)" />
        <altmember cref="M:System.Windows.Media.Color.FromValues(System.Single[],System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="FromScRgb">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color FromScRgb (float a, float r, float g, float b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Color FromScRgb(float32 a, float32 r, float32 g, float32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.FromScRgb(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromScRgb (a As Single, r As Single, g As Single, b As Single) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Color FromScRgb(float a, float r, float g, float b);" />
      <MemberSignature Language="F#" Value="static member FromScRgb : single * single * single * single -&gt; System.Windows.Media.Color" Usage="System.Windows.Media.Color.FromScRgb (a, r, g, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single" />
        <Parameter Name="r" Type="System.Single" />
        <Parameter Name="g" Type="System.Single" />
        <Parameter Name="b" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="a">新颜色的 <see langword="ScRGB" /> Alpha 通道 <see cref="P:System.Windows.Media.Color.ScA" />。</param>
        <param name="r">新颜色的 <see langword="ScRGB" /> 红色通道 <see cref="P:System.Windows.Media.Color.ScR" />。</param>
        <param name="g">新颜色的 <see langword="ScRGB" /> 绿色通道 <see cref="P:System.Windows.Media.Color.ScG" />。</param>
        <param name="b">新颜色的 <see langword="ScRGB" /> 蓝色通道 <see cref="P:System.Windows.Media.Color.ScB" />。</param>
        <summary>使用指定的 <see langword="ScRGB" /> Alpha 通道和颜色通道值创建一个新的 <see cref="T:System.Windows.Media.Color" /> 结构。</summary>
        <returns>具有指定值的 <see cref="T:System.Windows.Media.Color" /> 结构。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 颜色的 alpha 通道确定颜色的透明度。 Alpha 值为1表示颜色完全不透明，值为0表示颜色完全透明。  
  
   
  
## Examples  
 [!code-csharp[BrushesMiscSnippets_procedural_snip#FromScRgbExample](~/samples/snippets/csharp/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/CSharp/CreateColorsFromExample.cs#fromscrgbexample)]
 [!code-vb[BrushesMiscSnippets_procedural_snip#FromScRgbExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/visualbasic/createcolorsfromexample.vb#fromscrgbexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Color.FromRgb(System.Byte,System.Byte,System.Byte)" />
        <altmember cref="M:System.Windows.Media.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)" />
        <altmember cref="M:System.Windows.Media.Color.FromValues(System.Single[],System.Uri)" />
        <altmember cref="M:System.Windows.Media.Color.FromAValues(System.Single,System.Single[],System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="FromValues">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color FromValues (float[] values, Uri profileUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Color FromValues(float32[] values, class System.Uri profileUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.FromValues(System.Single[],System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromValues (values As Single(), profileUri As Uri) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Color FromValues(cli::array &lt;float&gt; ^ values, Uri ^ profileUri);" />
      <MemberSignature Language="F#" Value="static member FromValues : single[] * Uri -&gt; System.Windows.Media.Color" Usage="System.Windows.Media.Color.FromValues (values, profileUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Single[]" />
        <Parameter Name="profileUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="values">一个值集合，其中的值指定新颜色的颜色通道。 这些值映射到 <paramref name="profileUri" />。</param>
        <param name="profileUri">国际颜色联盟 (ICC) 或图像颜色管理 (ICM) 颜色配置文件来实现新的颜色。</param>
        <summary>使用指定的颜色通道值和颜色配置文件创建一个新的 <see cref="T:System.Windows.Media.Color" /> 结构。</summary>
        <returns>具有指定值且 Alpha 通道值为 1 的 <see cref="T:System.Windows.Media.Color" /> 结构。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 国际颜色协会 (ICC) 或图像颜色管理 (ICM) 颜色配置文件包含特定应用程序或设备（如彩色打印机）的颜色系统配置文件。 此配置文件与通用配置文件匹配，后者又可以映射到其他设备的各个配置文件。 这允许一台计算机设备使用的颜色系统与相同或其他计算机系统上其他应用程序和设备的颜色相匹配。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Windows.Media.Color.FromValues%2A> 方法创建 <xref:System.Windows.Media.Color> 结构。  
  
 [!code-csharp[BrushesMiscSnippets_procedural_snip#FromValuesExample](~/samples/snippets/csharp/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/CSharp/CreateColorsFromExample.cs#fromvaluesexample)]
 [!code-vb[BrushesMiscSnippets_procedural_snip#FromValuesExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesMiscSnippets_procedural_snip/visualbasic/createcolorsfromexample.vb#fromvaluesexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="G">
      <MemberSignature Language="C#" Value="public byte G { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 G" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Color.G" />
      <MemberSignature Language="VB.NET" Value="Public Property G As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte G { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.G : byte with get, set" Usage="System.Windows.Media.Color.G" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置颜色的 <see langword="sRGB" /> 绿色通道值。</summary>
        <value><see cref="T:System.Windows.Media.Color" /> 结构的 <see langword="sRGB" /> 绿色通道值，介于 0 到 255 之间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `sRGB`通道 (<xref:System.Windows.Media.Color.A%2A> 、 <xref:System.Windows.Media.Color.R%2A> 、 <xref:System.Windows.Media.Color.G%2A> 、 <xref:System.Windows.Media.Color.B%2A>) 和 `ScRGB` 该结构的通道 (<xref:System.Windows.Media.Color.ScA%2A> 、、、 <xref:System.Windows.Media.Color.ScR%2A> <xref:System.Windows.Media.Color.ScG%2A> <xref:System.Windows.Media.Color.ScB%2A>) <xref:System.Windows.Media.Color> 为同步属性。  例如，当 <xref:System.Windows.Media.Color.G%2A> `sRGB` 修改绿色通道时，会 `ScRGB` <xref:System.Windows.Media.Color.ScG%2A> 使用方案支持的0-1 范围将绿色通道转换为等效的值 `Sc` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="color.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取此 <see cref="T:System.Windows.Media.Color" /> 结构的哈希代码。</summary>
        <returns>此 <see cref="T:System.Windows.Media.Color" /> 结构的哈希代码。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNativeColorValues">
      <MemberSignature Language="C#" Value="public float[] GetNativeColorValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32[] GetNativeColorValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.GetNativeColorValues" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNativeColorValues () As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;float&gt; ^ GetNativeColorValues();" />
      <MemberSignature Language="F#" Value="member this.GetNativeColorValues : unit -&gt; single[]" Usage="color.GetNativeColorValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取颜色的颜色通道值。</summary>
        <returns>颜色通道值的数组。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color Multiply (System.Windows.Media.Color color, float coefficient);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Color Multiply(valuetype System.Windows.Media.Color color, float32 coefficient) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.Multiply(System.Windows.Media.Color,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (color As Color, coefficient As Single) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Color Multiply(System::Windows::Media::Color color, float coefficient);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Windows.Media.Color * single -&gt; System.Windows.Media.Color" Usage="System.Windows.Media.Color.Multiply (color, coefficient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Windows.Media.Color" />
        <Parameter Name="coefficient" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="color">作为被乘数的 <see cref="T:System.Windows.Media.Color" />。</param>
        <param name="coefficient">要相乘的值。</param>
        <summary>将指定的 <see cref="T:System.Windows.Media.Color" /> 结构的 Alpha、红色、蓝色和绿色通道与指定值相乘。</summary>
        <returns>一个新的 <see cref="T:System.Windows.Media.Color" /> 结构，其颜色值是乘法运算的结果。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Media.Color.op_Multiply(System.Windows.Media.Color,System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color operator + (System.Windows.Media.Color color1, System.Windows.Media.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Media.Color op_Addition(valuetype System.Windows.Media.Color color1, valuetype System.Windows.Media.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.op_Addition(System.Windows.Media.Color,System.Windows.Media.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (color1 As Color, color2 As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Color operator +(System::Windows::Media::Color color1, System::Windows::Media::Color color2);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Windows.Media.Color * System.Windows.Media.Color -&gt; System.Windows.Media.Color" Usage="color1 + color2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color1" Type="System.Windows.Media.Color" />
        <Parameter Name="color2" Type="System.Windows.Media.Color" />
      </Parameters>
      <Docs>
        <param name="color1">要相加的第一个 <see cref="T:System.Windows.Media.Color" /> 结构。</param>
        <param name="color2">要相加的第二个 <see cref="T:System.Windows.Media.Color" /> 结构。</param>
        <summary>将两个 <see cref="T:System.Windows.Media.Color" /> 结构相加。</summary>
        <returns>一个新的 <see cref="T:System.Windows.Media.Color" /> 结构，其颜色值是加法运算的结果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Color> 通过将第一种颜色的 alpha、红色、绿色和蓝色通道添加到第二种颜色的 alpha、红色、绿色和蓝色通道来添加结构。  例如，alpha 通道 `color1` 和 alpha 通道 `color2` 一起添加，以生成结果颜色的 alpha 通道。  这是通过红色、绿色和蓝色通道实现的，用来生成新颜色的红色、绿色和蓝色通道。  
  
 此运算符的等效方法是 <xref:System.Windows.Media.Color.Add%28System.Windows.Media.Color%2CSystem.Windows.Media.Color%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Media.Color color1, System.Windows.Media.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Media.Color color1, valuetype System.Windows.Media.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.op_Equality(System.Windows.Media.Color,System.Windows.Media.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (color1 As Color, color2 As Color) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Media::Color color1, System::Windows::Media::Color color2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Media.Color * System.Windows.Media.Color -&gt; bool" Usage="color1 = color2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color1" Type="System.Windows.Media.Color" />
        <Parameter Name="color2" Type="System.Windows.Media.Color" />
      </Parameters>
      <Docs>
        <param name="color1">要比较的第一个 <see cref="T:System.Windows.Media.Color" /> 结构。</param>
        <param name="color2">要比较的第二个 <see cref="T:System.Windows.Media.Color" /> 结构。</param>
        <summary>测试两个 <see cref="T:System.Windows.Media.Color" /> 结构是否相同。</summary>
        <returns>如果 <paramref name="color1" /> 与 <paramref name="color2" /> 完全相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在对浮点值进行操作时，这些值可能会获得少量错误。  <xref:System.Windows.Media.Color.Equals%2A>方法、 <xref:System.Windows.Media.Color.op_Equality%2A> 运算符和 <xref:System.Windows.Media.Color.op_Inequality%2A> 运算符不能弥补这一点，因此可能不会返回预期的布尔值结果。  
  
 <xref:System.Windows.Media.Color.AreClose%2A>方法使用模糊相等算法，该算法通过返回 `true` 来比较两个 <xref:System.Windows.Media.Color> 几乎完全相同的结构，但其值可能会因 minuscule 量而有所不同，从而补偿此浮点算术错误。  
  
 此运算符的等效方法是 <xref:System.Windows.Media.Color.Equals%28System.Windows.Media.Color%2CSystem.Windows.Media.Color%29?displayProperty=nameWithType>]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Color.AreClose(System.Windows.Media.Color,System.Windows.Media.Color)" />
        <altmember cref="Overload:System.Windows.Media.Color.Equals" />
        <altmember cref="M:System.Windows.Media.Color.op_Inequality(System.Windows.Media.Color,System.Windows.Media.Color)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Media.Color color1, System.Windows.Media.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Media.Color color1, valuetype System.Windows.Media.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.op_Inequality(System.Windows.Media.Color,System.Windows.Media.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (color1 As Color, color2 As Color) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Media::Color color1, System::Windows::Media::Color color2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Media.Color * System.Windows.Media.Color -&gt; bool" Usage="System.Windows.Media.Color.op_Inequality (color1, color2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color1" Type="System.Windows.Media.Color" />
        <Parameter Name="color2" Type="System.Windows.Media.Color" />
      </Parameters>
      <Docs>
        <param name="color1">要比较的第一个 <see cref="T:System.Windows.Media.Color" /> 结构。</param>
        <param name="color2">要比较的第二个 <see cref="T:System.Windows.Media.Color" /> 结构。</param>
        <summary>测试两个 <see cref="T:System.Windows.Media.Color" /> 结构是否不同。</summary>
        <returns>如果 <paramref name="color1" /> 和 <paramref name="color2" /> 不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在对浮点值进行操作时，这些值可能会获得少量错误。  <xref:System.Windows.Media.Color.Equals%2A>方法、 <xref:System.Windows.Media.Color.op_Equality%2A> 运算符和 <xref:System.Windows.Media.Color.op_Inequality%2A> 运算符不能弥补这一点，因此可能不会返回预期的布尔值结果。  
  
 <xref:System.Windows.Media.Color.AreClose%2A>方法使用模糊相等算法，该算法通过返回 `true` 来比较两个 <xref:System.Windows.Media.Color> 几乎完全相同的结构，但其值可能会因 minuscule 量而有所不同，从而补偿此浮点算术错误。  
  
 此运算符的等效方法是 <xref:System.Windows.Media.Color.Equals%28System.Windows.Media.Color%2CSystem.Windows.Media.Color%29?displayProperty=nameWithType>]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Color.AreClose(System.Windows.Media.Color,System.Windows.Media.Color)" />
        <altmember cref="Overload:System.Windows.Media.Color.Equals" />
        <altmember cref="M:System.Windows.Media.Color.op_Equality(System.Windows.Media.Color,System.Windows.Media.Color)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color operator * (System.Windows.Media.Color color, float coefficient);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Media.Color op_Multiply(valuetype System.Windows.Media.Color color, float32 coefficient) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.op_Multiply(System.Windows.Media.Color,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (color As Color, coefficient As Single) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Color operator *(System::Windows::Media::Color color, float coefficient);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Windows.Media.Color * single -&gt; System.Windows.Media.Color" Usage="color * coefficient" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Windows.Media.Color" />
        <Parameter Name="coefficient" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="color">作为被乘数的 <see cref="T:System.Windows.Media.Color" />。</param>
        <param name="coefficient">要相乘的值。</param>
        <summary>将指定的 <see cref="T:System.Windows.Media.Color" /> 结构的 Alpha、红色、蓝色和绿色通道与指定值相乘。</summary>
        <returns>一个新的 <see cref="T:System.Windows.Media.Color" /> 结构，其颜色值是乘法运算的结果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[此运算符的等效方法是 <xref:System.Windows.Media.Color.Multiply%28System.Windows.Media.Color%2CSystem.Single%29?displayProperty=nameWithType>]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Color.Multiply(System.Windows.Media.Color,System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color operator - (System.Windows.Media.Color color1, System.Windows.Media.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Media.Color op_Subtraction(valuetype System.Windows.Media.Color color1, valuetype System.Windows.Media.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.op_Subtraction(System.Windows.Media.Color,System.Windows.Media.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (color1 As Color, color2 As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Color operator -(System::Windows::Media::Color color1, System::Windows::Media::Color color2);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Windows.Media.Color * System.Windows.Media.Color -&gt; System.Windows.Media.Color" Usage="color1 - color2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color1" Type="System.Windows.Media.Color" />
        <Parameter Name="color2" Type="System.Windows.Media.Color" />
      </Parameters>
      <Docs>
        <param name="color1">作为被减数的 <see cref="T:System.Windows.Media.Color" /> 结构。</param>
        <param name="color2">要从 <paramref name="color1" /> 中减去的 <see cref="T:System.Windows.Media.Color" /> 结构。</param>
        <summary>从一个 <see cref="T:System.Windows.Media.Color" /> 结构中减去一个 <see cref="T:System.Windows.Media.Color" /> 结构。</summary>
        <returns>一个新的 <see cref="T:System.Windows.Media.Color" /> 结构，其颜色值是减法运算的结果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Color> 通过在第一种颜色的 alpha、红色、绿色和蓝色通道中减去第二种颜色的 alpha、红色、绿色和蓝色通道，可以从一个结构中减去彼此。  例如，在的 alpha 通道中减去的 alpha 通道， `color2` `color1` 以生成生成的结构的 alpha 通道 <xref:System.Windows.Media.Color> 。  这是通过红色、绿色和蓝色通道实现的，用来生成新结构的红色、绿色和蓝色通道 <xref:System.Windows.Media.Color> 。  
  
 此运算符的等效方法是 <xref:System.Windows.Media.Color.Subtract%28System.Windows.Media.Color%2CSystem.Windows.Media.Color%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="R">
      <MemberSignature Language="C#" Value="public byte R { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 R" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Color.R" />
      <MemberSignature Language="VB.NET" Value="Public Property R As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte R { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.R : byte with get, set" Usage="System.Windows.Media.Color.R" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置颜色的 <see langword="sRGB" /> 红色通道值。</summary>
        <value><see cref="T:System.Windows.Media.Color" /> 结构的 <see langword="sRGB" /> 红色通道值，介于 0 到 255 之间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `sRGB`通道 (<xref:System.Windows.Media.Color.A%2A> 、 <xref:System.Windows.Media.Color.R%2A> 、 <xref:System.Windows.Media.Color.G%2A> 、 <xref:System.Windows.Media.Color.B%2A>) 和 `ScRGB` 该结构的通道 (<xref:System.Windows.Media.Color.ScA%2A> 、、、 <xref:System.Windows.Media.Color.ScR%2A> <xref:System.Windows.Media.Color.ScG%2A> <xref:System.Windows.Media.Color.ScB%2A>) <xref:System.Windows.Media.Color> 为同步属性。  例如，如果 <xref:System.Windows.Media.Color.R%2A> `sRGB` 修改了红色通道，则 `ScRGB` <xref:System.Windows.Media.Color.ScR%2A> 使用方案支持的0-1 范围将红通道转换为等效的值 `Sc` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScA">
      <MemberSignature Language="C#" Value="public float ScA { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ScA" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Color.ScA" />
      <MemberSignature Language="VB.NET" Value="Public Property ScA As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float ScA { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.ScA : single with get, set" Usage="System.Windows.Media.Color.ScA" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置颜色的 <see langword="ScRGB" /> alpha 通道值。</summary>
        <value><see cref="T:System.Windows.Media.Color" /> 结构的 <see langword="ScRGB" /> Alpha 通道值，介于 0 和 1 之间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 结构的 alpha 通道 <xref:System.Windows.Media.Color> 确定具有的透明度 <xref:System.Windows.Media.Color> 。  Alpha 值为1表示 <xref:System.Windows.Media.Color> 完全不透明，值为0表示颜色完全透明。  
  
 `sRGB`通道 (<xref:System.Windows.Media.Color.A%2A> 、 <xref:System.Windows.Media.Color.R%2A> 、 <xref:System.Windows.Media.Color.G%2A> 、 <xref:System.Windows.Media.Color.B%2A>) 和 `ScRGB` 该结构的通道 (<xref:System.Windows.Media.Color.ScA%2A> 、、、 <xref:System.Windows.Media.Color.ScR%2A> <xref:System.Windows.Media.Color.ScG%2A> <xref:System.Windows.Media.Color.ScB%2A>) <xref:System.Windows.Media.Color> 为同步属性。  例如， <xref:System.Windows.Media.Color.A%2A> `sRGB` alpha 通道经过修改后，将 `ScRGB` <xref:System.Windows.Media.Color.ScA%2A> 使用方案支持的0-1 范围将其转换为等效的值 `Sc` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScB">
      <MemberSignature Language="C#" Value="public float ScB { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ScB" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Color.ScB" />
      <MemberSignature Language="VB.NET" Value="Public Property ScB As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float ScB { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.ScB : single with get, set" Usage="System.Windows.Media.Color.ScB" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置颜色的 ScRGB 蓝色通道值。</summary>
        <value><see cref="T:System.Windows.Media.Color" /> 结构的 ScRGB 红色通道值，介于 0 到 1 之间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `sRGB`通道 (<xref:System.Windows.Media.Color.A%2A> 、 <xref:System.Windows.Media.Color.R%2A> 、 <xref:System.Windows.Media.Color.G%2A> 、 <xref:System.Windows.Media.Color.B%2A>) 和 `ScRGB` 该结构的通道 (<xref:System.Windows.Media.Color.ScA%2A> 、、、 <xref:System.Windows.Media.Color.ScR%2A> <xref:System.Windows.Media.Color.ScG%2A> <xref:System.Windows.Media.Color.ScB%2A>) <xref:System.Windows.Media.Color> 为同步属性。  例如，当 <xref:System.Windows.Media.Color.B%2A> `sRGB` 修改蓝色通道时，会 `ScRGB` <xref:System.Windows.Media.Color.ScB%2A> 使用方案支持的0-1 范围将蓝色通道转换为等效的值 `Sc` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScG">
      <MemberSignature Language="C#" Value="public float ScG { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ScG" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Color.ScG" />
      <MemberSignature Language="VB.NET" Value="Public Property ScG As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float ScG { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.ScG : single with get, set" Usage="System.Windows.Media.Color.ScG" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置颜色的 <see langword="ScRGB" /> 绿色通道值。</summary>
        <value><see langword="ScRGB" />结构的绿色通道值 <see cref="T:System.Windows.Media.Color" /> ，值介于0和1之间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `sRGB`通道 (<xref:System.Windows.Media.Color.A%2A> 、 <xref:System.Windows.Media.Color.R%2A> 、 <xref:System.Windows.Media.Color.G%2A> 、 <xref:System.Windows.Media.Color.B%2A>) 和 `ScRGB` 该结构的通道 (<xref:System.Windows.Media.Color.ScA%2A> 、、、 <xref:System.Windows.Media.Color.ScR%2A> <xref:System.Windows.Media.Color.ScG%2A> <xref:System.Windows.Media.Color.ScB%2A>) <xref:System.Windows.Media.Color> 为同步属性。  例如，当 <xref:System.Windows.Media.Color.G%2A> `sRGB` 修改绿色通道时，会 `ScRGB` <xref:System.Windows.Media.Color.ScG%2A> 使用方案支持的0-1 范围将绿色通道转换为等效的值 `Sc` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScR">
      <MemberSignature Language="C#" Value="public float ScR { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ScR" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Color.ScR" />
      <MemberSignature Language="VB.NET" Value="Public Property ScR As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float ScR { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.ScR : single with get, set" Usage="System.Windows.Media.Color.ScR" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置颜色的 <see langword="ScRGB" /> 红色通道值。</summary>
        <value><see langword="ScRGB" />结构的红色通道值 <see cref="T:System.Windows.Media.Color" /> ，值介于0和1之间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `sRGB`通道 (<xref:System.Windows.Media.Color.A%2A> 、 <xref:System.Windows.Media.Color.R%2A> 、 <xref:System.Windows.Media.Color.G%2A> 、 <xref:System.Windows.Media.Color.B%2A>) 和 `ScRGB` 该结构的通道 (<xref:System.Windows.Media.Color.ScA%2A> 、、、 <xref:System.Windows.Media.Color.ScR%2A> <xref:System.Windows.Media.Color.ScG%2A> <xref:System.Windows.Media.Color.ScB%2A>) <xref:System.Windows.Media.Color> 为同步属性。  例如，如果 <xref:System.Windows.Media.Color.R%2A> `sRGB` 修改了红色通道，则 `ScRGB` <xref:System.Windows.Media.Color.ScR%2A> 使用方案支持的0-1 范围将红通道转换为等效的值 `Sc` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Color Subtract (System.Windows.Media.Color color1, System.Windows.Media.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Color Subtract(valuetype System.Windows.Media.Color color1, valuetype System.Windows.Media.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.Subtract(System.Windows.Media.Color,System.Windows.Media.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (color1 As Color, color2 As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Color Subtract(System::Windows::Media::Color color1, System::Windows::Media::Color color2);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Windows.Media.Color * System.Windows.Media.Color -&gt; System.Windows.Media.Color" Usage="System.Windows.Media.Color.Subtract (color1, color2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color1" Type="System.Windows.Media.Color" />
        <Parameter Name="color2" Type="System.Windows.Media.Color" />
      </Parameters>
      <Docs>
        <param name="color1">作为被减数的 <see cref="T:System.Windows.Media.Color" /> 结构。</param>
        <param name="color2">要从 <paramref name="color1" /> 中减去的 <see cref="T:System.Windows.Media.Color" /> 结构。</param>
        <summary>从一个 <see cref="T:System.Windows.Media.Color" /> 结构中减去一个 <see cref="T:System.Windows.Media.Color" /> 结构。</summary>
        <returns>一个新的 <see cref="T:System.Windows.Media.Color" /> 结构，其颜色值是减法运算的结果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Color> 通过在第一种颜色的 alpha、红色、绿色和蓝色通道中减去第二种颜色的 alpha、红色、绿色和蓝色通道，可以从一个结构中减去彼此。  例如，在的 alpha 通道中减去的 alpha 通道， `color2` `color1` 以生成生成的结构的 alpha 通道 <xref:System.Windows.Media.Color> 。  这是通过红色、绿色和蓝色通道实现的，用来生成新结构的红色、绿色和蓝色通道 <xref:System.Windows.Media.Color> 。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Color.op_Subtraction(System.Windows.Media.Color,System.Windows.Media.Color)" />
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberSignature Language="F#" Value="abstract member System.IFormattable.ToString : string * IFormatProvider -&gt; string&#xA;override this.System.IFormattable.ToString : string * IFormatProvider -&gt; string" Usage="color.System.IFormattable.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">要使用的格式。  
  
- 或 - 
null 引用（在 Visual Basic 中为 <see langword="Nothing" />），用于使用为 <see cref="T:System.IFormattable" /> 实现的类型定义的默认格式。</param>
        <param name="provider">要用于格式化值的提供程序。  
  
- 或 - 
null 引用（在 Visual Basic 中为 <see langword="Nothing" />），用于从操作系统的当前区域设置获取数字格式信息。</param>
        <summary>使用指定格式对当前实例的值设置格式。</summary>
        <returns>采用指定格式的当前实例的值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使用 <see langword="sRGB" /> 通道创建颜色的字符串表示形式。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="color.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用 <see langword="sRGB" /> 通道创建颜色的字符串表示形式。</summary>
        <returns>颜色的字符串表示形式。 默认实现表示 <see cref="T:System.Byte" /> 十六进制格式的值，带字符的前缀 <c>#</c> ，以 alpha 通道开头。 例如，<see cref="P:System.Windows.Media.Colors.AliceBlue" /> 的 <see cref="M:System.Windows.Media.Color.ToString" /> 值是 <c>#FFF0F8FF</c>。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Color.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="color.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">区域性特定的格式设置信息。</param>
        <summary>使用 <see langword="sRGB" /> 通道和指定的格式提供程序创建颜色的字符串表示形式。</summary>
        <returns>颜色的字符串表示形式。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
