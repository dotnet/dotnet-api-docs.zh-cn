<Type Name="DelegatingConfigHost" FullName="System.Configuration.Internal.DelegatingConfigHost">
  <Metadata><Meta Name="ms.openlocfilehash" Value="41bfd120916814618eae17d7ee73ccb2e04f0a13" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89709759" /></Metadata><TypeSignature Language="C#" Value="public class DelegatingConfigHost : System.Configuration.Internal.IInternalConfigHost" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DelegatingConfigHost extends System.Object implements class System.Configuration.Internal.IInternalConfigHost" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Internal.DelegatingConfigHost" />
  <TypeSignature Language="VB.NET" Value="Public Class DelegatingConfigHost&#xA;Implements IInternalConfigHost" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class DelegatingConfigHost : System::Configuration::Internal::IInternalConfigHost" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type DelegatingConfigHost = class&#xA;    interface IInternalConfigHost" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public class DelegatingConfigHost : System.Configuration.Internal.IInternalConfigHost, System.Configuration.Internal.IInternalConfigurationBuilderHost" FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DelegatingConfigHost extends System.Object implements class System.Configuration.Internal.IInternalConfigHost, class System.Configuration.Internal.IInternalConfigurationBuilderHost" FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public Class DelegatingConfigHost&#xA;Implements IInternalConfigHost, IInternalConfigurationBuilderHost" FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class DelegatingConfigHost : System::Configuration::Internal::IInternalConfigHost, System::Configuration::Internal::IInternalConfigurationBuilderHost" FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type DelegatingConfigHost = class&#xA;    interface IInternalConfigHost&#xA;    interface IInternalConfigurationBuilderHost" FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Configuration.Internal.IInternalConfigHost</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.Configuration.Internal.IInternalConfigurationBuilderHost</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a6310-101">将 <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 接口的所有成员委托给主机的另一个实例。</span><span class="sxs-lookup"><span data-stu-id="a6310-101">Delegates all members of the <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> interface to another instance of a host.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Configuration.Internal.IInternalConfigHost" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DelegatingConfigHost ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DelegatingConfigHost();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a6310-102">初始化 <see cref="T:System.Configuration.Internal.DelegatingConfigHost" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a6310-102">Initializes a new instance of the <see cref="T:System.Configuration.Internal.DelegatingConfigHost" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConfigBuilderHost">
      <MemberSignature Language="C#" Value="protected System.Configuration.Internal.IInternalConfigurationBuilderHost ConfigBuilderHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.Internal.IInternalConfigurationBuilderHost ConfigBuilderHost" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Internal.DelegatingConfigHost.ConfigBuilderHost" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ConfigBuilderHost As IInternalConfigurationBuilderHost" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Configuration::Internal::IInternalConfigurationBuilderHost ^ ConfigBuilderHost { System::Configuration::Internal::IInternalConfigurationBuilderHost ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConfigBuilderHost : System.Configuration.Internal.IInternalConfigurationBuilderHost" Usage="System.Configuration.Internal.DelegatingConfigHost.ConfigBuilderHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Internal.IInternalConfigurationBuilderHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6310-103">如果委托主机提供该接口所需的功能，则获取 <see cref="T:System.Configuration.Internal.IInternalConfigurationBuilderHost" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-103">Gets the <see cref="T:System.Configuration.Internal.IInternalConfigurationBuilderHost" /> object if the delegated host provides the functionality required by that interface.</span></span></summary>
        <value><span data-ttu-id="a6310-104">一个 <see cref="T:System.Configuration.Internal.IInternalConfigurationBuilderHost" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-104">An <see cref="T:System.Configuration.Internal.IInternalConfigurationBuilderHost" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConfigurationContext">
      <MemberSignature Language="C#" Value="public virtual object CreateConfigurationContext (string configPath, string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateConfigurationContext(string configPath, string locationSubPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.CreateConfigurationContext(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateConfigurationContext (configPath As String, locationSubPath As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateConfigurationContext(System::String ^ configPath, System::String ^ locationSubPath);" />
      <MemberSignature Language="F#" Value="abstract member CreateConfigurationContext : string * string -&gt; obj&#xA;override this.CreateConfigurationContext : string * string -&gt; obj" Usage="delegatingConfigHost.CreateConfigurationContext (configPath, locationSubPath)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.CreateConfigurationContext(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath"><span data-ttu-id="a6310-105">表示配置文件路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-105">A string representing the path to a configuration file.</span></span></param>
        <param name="locationSubPath"><span data-ttu-id="a6310-106">表示位置子路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-106">A string representing a location subpath.</span></span></param>
        <summary><span data-ttu-id="a6310-107">创建新的配置上下文。</span><span class="sxs-lookup"><span data-stu-id="a6310-107">Creates a new configuration context.</span></span></summary>
        <returns><span data-ttu-id="a6310-108">表示新配置上下文的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-108">A <see cref="T:System.Object" /> representing a new configuration context.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CreateDeprecatedConfigContext">
      <MemberSignature Language="C#" Value="public virtual object CreateDeprecatedConfigContext (string configPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateDeprecatedConfigContext(string configPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.CreateDeprecatedConfigContext(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDeprecatedConfigContext (configPath As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateDeprecatedConfigContext(System::String ^ configPath);" />
      <MemberSignature Language="F#" Value="abstract member CreateDeprecatedConfigContext : string -&gt; obj&#xA;override this.CreateDeprecatedConfigContext : string -&gt; obj" Usage="delegatingConfigHost.CreateDeprecatedConfigContext configPath" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.CreateDeprecatedConfigContext(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath"><span data-ttu-id="a6310-109">表示配置文件路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-109">A string representing the path to a configuration file.</span></span></param>
        <summary><span data-ttu-id="a6310-110">创建已否决的配置上下文。</span><span class="sxs-lookup"><span data-stu-id="a6310-110">Creates a deprecated configuration context.</span></span></summary>
        <returns><span data-ttu-id="a6310-111">表示已否决配置上下文的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-111">A <see cref="T:System.Object" /> representing a deprecated configuration context.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DecryptSection">
      <MemberSignature Language="C#" Value="public virtual string DecryptSection (string encryptedXml, System.Configuration.ProtectedConfigurationProvider protectionProvider, System.Configuration.ProtectedConfigurationSection protectedConfigSection);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DecryptSection(string encryptedXml, class System.Configuration.ProtectedConfigurationProvider protectionProvider, class System.Configuration.ProtectedConfigurationSection protectedConfigSection) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DecryptSection (encryptedXml As String, protectionProvider As ProtectedConfigurationProvider, protectedConfigSection As ProtectedConfigurationSection) As String" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ DecryptSection(System::String ^ encryptedXml, System::Configuration::ProtectedConfigurationProvider ^ protectionProvider, System::Configuration::ProtectedConfigurationSection ^ protectedConfigSection);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member DecryptSection : string * System.Configuration.ProtectedConfigurationProvider * System.Configuration.ProtectedConfigurationSection -&gt; string&#xA;override this.DecryptSection : string * System.Configuration.ProtectedConfigurationProvider * System.Configuration.ProtectedConfigurationSection -&gt; string" Usage="delegatingConfigHost.DecryptSection (encryptedXml, protectionProvider, protectedConfigSection)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual string DecryptSection (string encryptedXml, System.Configuration.ProtectedConfigurationProvider protectionProvider, System.Configuration.ProtectedConfigurationSection protectedSection);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DecryptSection(string encryptedXml, class System.Configuration.ProtectedConfigurationProvider protectionProvider, class System.Configuration.ProtectedConfigurationSection protectedSection) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DecryptSection (encryptedXml As String, protectionProvider As ProtectedConfigurationProvider, protectedSection As ProtectedConfigurationSection) As String" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ DecryptSection(System::String ^ encryptedXml, System::Configuration::ProtectedConfigurationProvider ^ protectionProvider, System::Configuration::ProtectedConfigurationSection ^ protectedSection);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member DecryptSection : string * System.Configuration.ProtectedConfigurationProvider * System.Configuration.ProtectedConfigurationSection -&gt; string&#xA;override this.DecryptSection : string * System.Configuration.ProtectedConfigurationProvider * System.Configuration.ProtectedConfigurationSection -&gt; string" Usage="delegatingConfigHost.DecryptSection (encryptedXml, protectionProvider, protectedSection)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedXml" Type="System.String" Index="0" />
        <Parameter Name="protectionProvider" Type="System.Configuration.ProtectedConfigurationProvider" Index="1" />
        <Parameter Name="protectedConfigSection" Type="System.Configuration.ProtectedConfigurationSection" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="protectedSection" Type="System.Configuration.ProtectedConfigurationSection" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedXml"><span data-ttu-id="a6310-112">配置文件中已加密的节。</span><span class="sxs-lookup"><span data-stu-id="a6310-112">An encrypted section of a configuration file.</span></span></param>
        <param name="protectionProvider"><span data-ttu-id="a6310-113">一个对象，它包含对受保护的配置数据进行加密和解密的提供程序。</span><span class="sxs-lookup"><span data-stu-id="a6310-113">An object containing the providers that encrypt and decrypt protected configuration data.</span></span></param>
        <param name="protectedConfigSection"><span data-ttu-id="a6310-114">一个对象，它提供对 <c>configProtectedData </c> 配置节的以编程方式的访问。</span><span class="sxs-lookup"><span data-stu-id="a6310-114">An object that provides programatic access to the <c>configProtectedData</c> configuration section.</span></span></param>
        <param name="protectedSection"><span data-ttu-id="a6310-115">一个对象，它提供对 <c>configProtectedData </c> 配置节的以编程方式的访问。</span><span class="sxs-lookup"><span data-stu-id="a6310-115">An object that provides programatic access to the <c>configProtectedData</c> configuration section.</span></span></param>
        <summary><span data-ttu-id="a6310-116">对已加密的配置节进行解密。</span><span class="sxs-lookup"><span data-stu-id="a6310-116">Decrypts an encrypted configuration section.</span></span></summary>
        <returns><span data-ttu-id="a6310-117">表示已解密的配置节的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-117">A string representing a decrypted configuration section.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DeleteStream">
      <MemberSignature Language="C#" Value="public virtual void DeleteStream (string streamName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteStream(string streamName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.DeleteStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteStream (streamName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteStream(System::String ^ streamName);" />
      <MemberSignature Language="F#" Value="abstract member DeleteStream : string -&gt; unit&#xA;override this.DeleteStream : string -&gt; unit" Usage="delegatingConfigHost.DeleteStream streamName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.DeleteStream(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="streamName"><span data-ttu-id="a6310-118">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="a6310-118">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</span></span></param>
        <summary><span data-ttu-id="a6310-119">删除在配置文件上执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-119">Deletes the <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="EncryptSection">
      <MemberSignature Language="C#" Value="public virtual string EncryptSection (string clearTextXml, System.Configuration.ProtectedConfigurationProvider protectionProvider, System.Configuration.ProtectedConfigurationSection protectedConfigSection);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string EncryptSection(string clearTextXml, class System.Configuration.ProtectedConfigurationProvider protectionProvider, class System.Configuration.ProtectedConfigurationSection protectedConfigSection) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EncryptSection (clearTextXml As String, protectionProvider As ProtectedConfigurationProvider, protectedConfigSection As ProtectedConfigurationSection) As String" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ EncryptSection(System::String ^ clearTextXml, System::Configuration::ProtectedConfigurationProvider ^ protectionProvider, System::Configuration::ProtectedConfigurationSection ^ protectedConfigSection);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member EncryptSection : string * System.Configuration.ProtectedConfigurationProvider * System.Configuration.ProtectedConfigurationSection -&gt; string&#xA;override this.EncryptSection : string * System.Configuration.ProtectedConfigurationProvider * System.Configuration.ProtectedConfigurationSection -&gt; string" Usage="delegatingConfigHost.EncryptSection (clearTextXml, protectionProvider, protectedConfigSection)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual string EncryptSection (string encryptedXml, System.Configuration.ProtectedConfigurationProvider protectionProvider, System.Configuration.ProtectedConfigurationSection protectedSection);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string EncryptSection(string encryptedXml, class System.Configuration.ProtectedConfigurationProvider protectionProvider, class System.Configuration.ProtectedConfigurationSection protectedSection) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EncryptSection (encryptedXml As String, protectionProvider As ProtectedConfigurationProvider, protectedSection As ProtectedConfigurationSection) As String" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ EncryptSection(System::String ^ encryptedXml, System::Configuration::ProtectedConfigurationProvider ^ protectionProvider, System::Configuration::ProtectedConfigurationSection ^ protectedSection);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member EncryptSection : string * System.Configuration.ProtectedConfigurationProvider * System.Configuration.ProtectedConfigurationSection -&gt; string&#xA;override this.EncryptSection : string * System.Configuration.ProtectedConfigurationProvider * System.Configuration.ProtectedConfigurationSection -&gt; string" Usage="delegatingConfigHost.EncryptSection (encryptedXml, protectionProvider, protectedSection)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clearTextXml" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="encryptedXml" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="protectionProvider" Type="System.Configuration.ProtectedConfigurationProvider" Index="1" />
        <Parameter Name="protectedConfigSection" Type="System.Configuration.ProtectedConfigurationSection" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="protectedSection" Type="System.Configuration.ProtectedConfigurationSection" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="clearTextXml"><span data-ttu-id="a6310-120">未加密的配置节。</span><span class="sxs-lookup"><span data-stu-id="a6310-120">A section of the configuration that is not encrypted.</span></span></param>
        <param name="encryptedXml"><span data-ttu-id="a6310-121">未加密的配置节。</span><span class="sxs-lookup"><span data-stu-id="a6310-121">A section of the configuration that is not encrypted.</span></span></param>
        <param name="protectionProvider"><span data-ttu-id="a6310-122">一个对象，它包含对受保护的配置数据进行加密和解密的提供程序</span><span class="sxs-lookup"><span data-stu-id="a6310-122">An object containing the providers that encrypt and decrypt protected configuration data</span></span></param>
        <param name="protectedConfigSection"><span data-ttu-id="a6310-123">一个对象，它提供对 <c>configProtectedData </c> 配置节的以编程方式的访问。</span><span class="sxs-lookup"><span data-stu-id="a6310-123">An object that provides programatic access to the <c>configProtectedData</c> configuration section.</span></span></param>
        <param name="protectedSection"><span data-ttu-id="a6310-124">一个对象，它提供对 <c>configProtectedData </c> 配置节的以编程方式的访问。</span><span class="sxs-lookup"><span data-stu-id="a6310-124">An object that provides programatic access to the <c>configProtectedData</c> configuration section.</span></span></param>
        <summary><span data-ttu-id="a6310-125">对配置对象的节进行加密。</span><span class="sxs-lookup"><span data-stu-id="a6310-125">Encrypts a section of a configuration object.</span></span></summary>
        <returns><span data-ttu-id="a6310-126">表示配置对象的已加密节的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-126">A string representing an encrypted section of the configuration object.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetConfigPathFromLocationSubPath">
      <MemberSignature Language="C#" Value="public virtual string GetConfigPathFromLocationSubPath (string configPath, string locationSubPath);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetConfigPathFromLocationSubPath(string configPath, string locationSubPath) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfigPathFromLocationSubPath (configPath As String, locationSubPath As String) As String" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetConfigPathFromLocationSubPath(System::String ^ configPath, System::String ^ locationSubPath);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetConfigPathFromLocationSubPath : string * string -&gt; string&#xA;override this.GetConfigPathFromLocationSubPath : string * string -&gt; string" Usage="delegatingConfigHost.GetConfigPathFromLocationSubPath (configPath, locationSubPath)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual string GetConfigPathFromLocationSubPath (string configPath, string locatinSubPath);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetConfigPathFromLocationSubPath(string configPath, string locatinSubPath) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfigPathFromLocationSubPath (configPath As String, locatinSubPath As String) As String" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetConfigPathFromLocationSubPath(System::String ^ configPath, System::String ^ locatinSubPath);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetConfigPathFromLocationSubPath : string * string -&gt; string&#xA;override this.GetConfigPathFromLocationSubPath : string * string -&gt; string" Usage="delegatingConfigHost.GetConfigPathFromLocationSubPath (configPath, locatinSubPath)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" Index="0" />
        <Parameter Name="locationSubPath" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="locatinSubPath" Type="System.String" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="configPath"><span data-ttu-id="a6310-127">表示配置文件路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-127">A string representing the path to a configuration file.</span></span></param>
        <param name="locationSubPath"><span data-ttu-id="a6310-128">表示位置子路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-128">A string representing a location subpath.</span></span></param>
        <param name="locatinSubPath"><span data-ttu-id="a6310-129">表示位置子路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-129">A string representing a location subpath.</span></span></param>
        <summary><span data-ttu-id="a6310-130">返回基于位置子路径的配置路径。</span><span class="sxs-lookup"><span data-stu-id="a6310-130">Returns a configuration path based on a location subpath.</span></span></summary>
        <returns><span data-ttu-id="a6310-131">表示配置路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-131">A string representing a configuration path.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetConfigType">
      <MemberSignature Language="C#" Value="public virtual Type GetConfigType (string typeName, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetConfigType(string typeName, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfigType (typeName As String, throwOnError As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetConfigType(System::String ^ typeName, bool throwOnError);" />
      <MemberSignature Language="F#" Value="abstract member GetConfigType : string * bool -&gt; Type&#xA;override this.GetConfigType : string * bool -&gt; Type" Usage="delegatingConfigHost.GetConfigType (typeName, throwOnError)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.GetConfigType(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="a6310-132">表示配置类型的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-132">A string representing the configuration type.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="a6310-133">如果遇到错误时应引发异常，则为 <see langword="true" />；如果遇到错误时不应引发异常，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-133"><see langword="true" /> if an exception should be thrown if an error is encountered; <see langword="false" /> if an exception should not be thrown if an error is encountered.</span></span></param>
        <summary><span data-ttu-id="a6310-134">返回表示配置类型的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-134">Returns a <see cref="T:System.Type" /> representing the type of the configuration.</span></span></summary>
        <returns><span data-ttu-id="a6310-135">一个 <see cref="T:System.Type" />，表示配置的类型。</span><span class="sxs-lookup"><span data-stu-id="a6310-135">A <see cref="T:System.Type" /> representing the type of the configuration.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetConfigTypeName">
      <MemberSignature Language="C#" Value="public virtual string GetConfigTypeName (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetConfigTypeName(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigTypeName(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConfigTypeName (t As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetConfigTypeName(Type ^ t);" />
      <MemberSignature Language="F#" Value="abstract member GetConfigTypeName : Type -&gt; string&#xA;override this.GetConfigTypeName : Type -&gt; string" Usage="delegatingConfigHost.GetConfigTypeName t" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.GetConfigTypeName(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t"><span data-ttu-id="a6310-136"><see cref="T:System.Type" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-136">A <see cref="T:System.Type" /> object.</span></span></param>
        <summary><span data-ttu-id="a6310-137">返回表示配置对象的类型名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-137">Returns a string representing the type name of the configuration object.</span></span></summary>
        <returns><span data-ttu-id="a6310-138">表示配置对象的类型名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-138">A string representing the type name of the configuration object.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetRestrictedPermissions">
      <MemberSignature Language="C#" Value="public virtual void GetRestrictedPermissions (System.Configuration.Internal.IInternalConfigRecord configRecord, out System.Security.PermissionSet permissionSet, out bool isHostReady);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetRestrictedPermissions(class System.Configuration.Internal.IInternalConfigRecord configRecord, [out] class System.Security.PermissionSet&amp; permissionSet, [out] bool&amp; isHostReady) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetRestrictedPermissions (configRecord As IInternalConfigRecord, ByRef permissionSet As PermissionSet, ByRef isHostReady As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetRestrictedPermissions(System::Configuration::Internal::IInternalConfigRecord ^ configRecord, [Runtime::InteropServices::Out] System::Security::PermissionSet ^ % permissionSet, [Runtime::InteropServices::Out] bool % isHostReady);" />
      <MemberSignature Language="F#" Value="abstract member GetRestrictedPermissions : System.Configuration.Internal.IInternalConfigRecord * PermissionSet * bool -&gt; unit&#xA;override this.GetRestrictedPermissions : System.Configuration.Internal.IInternalConfigRecord * PermissionSet * bool -&gt; unit" Usage="delegatingConfigHost.GetRestrictedPermissions (configRecord, permissionSet, isHostReady)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configRecord" Type="System.Configuration.Internal.IInternalConfigRecord" />
        <Parameter Name="permissionSet" Type="System.Security.PermissionSet" RefType="out" />
        <Parameter Name="isHostReady" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="configRecord"><span data-ttu-id="a6310-139">一个 <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-139">An <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</span></span></param>
        <param name="permissionSet"><span data-ttu-id="a6310-140"><see cref="T:System.Security.PermissionSet" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-140">A <see cref="T:System.Security.PermissionSet" /> object.</span></span></param>
        <param name="isHostReady"><span data-ttu-id="a6310-141">如果主机已完成初始化，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-141"><see langword="true" /> if the host has finished initialization; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a6310-142">如果在主机对象内可用，则设置指定的权限集。</span><span class="sxs-lookup"><span data-stu-id="a6310-142">Sets the specified permission set if available within the host object.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetStreamName">
      <MemberSignature Language="C#" Value="public virtual string GetStreamName (string configPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetStreamName(string configPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStreamName (configPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetStreamName(System::String ^ configPath);" />
      <MemberSignature Language="F#" Value="abstract member GetStreamName : string -&gt; string&#xA;override this.GetStreamName : string -&gt; string" Usage="delegatingConfigHost.GetStreamName configPath" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.GetStreamName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath"><span data-ttu-id="a6310-143">表示配置文件路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-143">A string representing the path to a configuration file.</span></span></param>
        <summary><span data-ttu-id="a6310-144">返回对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="a6310-144">Returns the name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</span></span></summary>
        <returns><span data-ttu-id="a6310-145">一个字符串，表示对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="a6310-145">A string representing the name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetStreamNameForConfigSource">
      <MemberSignature Language="C#" Value="public virtual string GetStreamNameForConfigSource (string streamName, string configSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetStreamNameForConfigSource(string streamName, string configSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamNameForConfigSource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStreamNameForConfigSource (streamName As String, configSource As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetStreamNameForConfigSource(System::String ^ streamName, System::String ^ configSource);" />
      <MemberSignature Language="F#" Value="abstract member GetStreamNameForConfigSource : string * string -&gt; string&#xA;override this.GetStreamNameForConfigSource : string * string -&gt; string" Usage="delegatingConfigHost.GetStreamNameForConfigSource (streamName, configSource)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.GetStreamNameForConfigSource(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="configSource" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="streamName"><span data-ttu-id="a6310-146">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="a6310-146">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</span></span></param>
        <param name="configSource"><span data-ttu-id="a6310-147">表示配置源的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-147">A string representing the configuration source.</span></span></param>
        <summary><span data-ttu-id="a6310-148">返回对配置源执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="a6310-148">Returns the name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration source.</span></span></summary>
        <returns><span data-ttu-id="a6310-149">一个字符串，表示在配置源上执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="a6310-149">A string representing the name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration source.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetStreamVersion">
      <MemberSignature Language="C#" Value="public virtual object GetStreamVersion (string streamName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetStreamVersion(string streamName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStreamVersion (streamName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetStreamVersion(System::String ^ streamName);" />
      <MemberSignature Language="F#" Value="abstract member GetStreamVersion : string -&gt; obj&#xA;override this.GetStreamVersion : string -&gt; obj" Usage="delegatingConfigHost.GetStreamVersion streamName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.GetStreamVersion(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="streamName"><span data-ttu-id="a6310-150">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="a6310-150">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</span></span></param>
        <summary><span data-ttu-id="a6310-151">返回一个 <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" /> 对象，该对象表示在配置文件上执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的版本。</span><span class="sxs-lookup"><span data-stu-id="a6310-151">Returns a <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" /> object representing the version of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</span></span></summary>
        <returns><span data-ttu-id="a6310-152">一个 <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" /> 对象，表示在配置文件上执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的版本。</span><span class="sxs-lookup"><span data-stu-id="a6310-152">A <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" /> object representing the version of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="HasLocalConfig">
      <MemberSignature Language="C#" Value="public virtual bool HasLocalConfig { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLocalConfig" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Internal.DelegatingConfigHost.HasLocalConfig" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasLocalConfig As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasLocalConfig { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasLocalConfig : bool" Usage="System.Configuration.Internal.DelegatingConfigHost.HasLocalConfig" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6310-153">确定委派的主机是否具有本地配置。</span><span class="sxs-lookup"><span data-stu-id="a6310-153">Determines if the delegated host has a local configuration.</span></span></summary>
        <value><span data-ttu-id="a6310-154"><see langword="true" /> 如果当前实例具有本地配置，则为; 否则为。否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="a6310-154"><see langword="true" /> if the current instance has a local configuration; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="HasRoamingConfig">
      <MemberSignature Language="C#" Value="public virtual bool HasRoamingConfig { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRoamingConfig" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Internal.DelegatingConfigHost.HasRoamingConfig" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasRoamingConfig As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRoamingConfig { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRoamingConfig : bool" Usage="System.Configuration.Internal.DelegatingConfigHost.HasRoamingConfig" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6310-155">确定委派的主机是否具有漫游配置。</span><span class="sxs-lookup"><span data-stu-id="a6310-155">Determines if the delegated host has a roaming configuration.</span></span></summary>
        <value><span data-ttu-id="a6310-156"><see langword="true" /> 如果当前实例具有漫游配置，则为; 否则为。否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="a6310-156"><see langword="true" /> if the current instance has a roaming configuration; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="protected System.Configuration.Internal.IInternalConfigHost Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.Internal.IInternalConfigHost Host" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Internal.DelegatingConfigHost.Host" />
      <MemberSignature Language="VB.NET" Value="Protected Property Host As IInternalConfigHost" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Configuration::Internal::IInternalConfigHost ^ Host { System::Configuration::Internal::IInternalConfigHost ^ get(); void set(System::Configuration::Internal::IInternalConfigHost ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Host : System.Configuration.Internal.IInternalConfigHost with get, set" Usage="System.Configuration.Internal.DelegatingConfigHost.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Internal.IInternalConfigHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6310-157">获取或设置 <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-157">Gets or sets the <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object.</span></span></summary>
        <value><span data-ttu-id="a6310-158"><see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-158">A <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public virtual IDisposable Impersonate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable Impersonate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.Impersonate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Impersonate () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IDisposable ^ Impersonate();" />
      <MemberSignature Language="F#" Value="abstract member Impersonate : unit -&gt; IDisposable&#xA;override this.Impersonate : unit -&gt; IDisposable" Usage="delegatingConfigHost.Impersonate " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.Impersonate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a6310-159">指示主机进行模拟并返回 .NET Framework 内部所需的 <see cref="T:System.IDisposable" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-159">Instructs the host to impersonate and returns an <see cref="T:System.IDisposable" /> object required internally by the .NET Framework.</span></span></summary>
        <returns><span data-ttu-id="a6310-160">一个 <see cref="T:System.IDisposable" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a6310-160">An <see cref="T:System.IDisposable" /> value.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public virtual void Init (System.Configuration.Internal.IInternalConfigRoot configRoot, params object[] hostInitParams);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Configuration.Internal.IInternalConfigRoot configRoot, object[] hostInitParams) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Init (configRoot As IInternalConfigRoot, ParamArray hostInitParams As Object())" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init(System::Configuration::Internal::IInternalConfigRoot ^ configRoot, ... cli::array &lt;System::Object ^&gt; ^ hostInitParams);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member Init : System.Configuration.Internal.IInternalConfigRoot * obj[] -&gt; unit&#xA;override this.Init : System.Configuration.Internal.IInternalConfigRoot * obj[] -&gt; unit" Usage="delegatingConfigHost.Init (configRoot, hostInitParams)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual void Init (System.Configuration.Internal.IInternalConfigRoot root, params object[] hostInitParams);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Configuration.Internal.IInternalConfigRoot root, object[] hostInitParams) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Init (root As IInternalConfigRoot, ParamArray hostInitParams As Object())" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init(System::Configuration::Internal::IInternalConfigRoot ^ root, ... cli::array &lt;System::Object ^&gt; ^ hostInitParams);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member Init : System.Configuration.Internal.IInternalConfigRoot * obj[] -&gt; unit&#xA;override this.Init : System.Configuration.Internal.IInternalConfigRoot * obj[] -&gt; unit" Usage="delegatingConfigHost.Init (root, hostInitParams)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configRoot" Type="System.Configuration.Internal.IInternalConfigRoot" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="root" Type="System.Configuration.Internal.IInternalConfigRoot" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="hostInitParams" Type="System.Object[]" Index="1">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="configRoot"><span data-ttu-id="a6310-161">一个 <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-161">An <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> object.</span></span></param>
        <param name="root">To be added.</param>
        <param name="hostInitParams"><span data-ttu-id="a6310-162">一个参数对象，包含用于初始化配置主机的值。</span><span class="sxs-lookup"><span data-stu-id="a6310-162">A parameter object containing the values used for initializing the configuration host.</span></span></param>
        <summary><span data-ttu-id="a6310-163">初始化配置主机。</span><span class="sxs-lookup"><span data-stu-id="a6310-163">Initializes the configuration host.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="InitForConfiguration">
      <MemberSignature Language="C#" Value="public virtual void InitForConfiguration (ref string locationSubPath, out string configPath, out string locationConfigPath, System.Configuration.Internal.IInternalConfigRoot configRoot, params object[] hostInitConfigurationParams);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitForConfiguration(string&amp; locationSubPath, [out] string&amp; configPath, [out] string&amp; locationConfigPath, class System.Configuration.Internal.IInternalConfigRoot configRoot, object[] hostInitConfigurationParams) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitForConfiguration (ByRef locationSubPath As String, ByRef configPath As String, ByRef locationConfigPath As String, configRoot As IInternalConfigRoot, ParamArray hostInitConfigurationParams As Object())" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitForConfiguration(System::String ^ % locationSubPath, [Runtime::InteropServices::Out] System::String ^ % configPath, [Runtime::InteropServices::Out] System::String ^ % locationConfigPath, System::Configuration::Internal::IInternalConfigRoot ^ configRoot, ... cli::array &lt;System::Object ^&gt; ^ hostInitConfigurationParams);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member InitForConfiguration : string * string * string * System.Configuration.Internal.IInternalConfigRoot * obj[] -&gt; unit&#xA;override this.InitForConfiguration : string * string * string * System.Configuration.Internal.IInternalConfigRoot * obj[] -&gt; unit" Usage="delegatingConfigHost.InitForConfiguration (locationSubPath, configPath, locationConfigPath, configRoot, hostInitConfigurationParams)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public virtual void InitForConfiguration (ref string locationSubPath, out string configPath, out string locationConfigPath, System.Configuration.Internal.IInternalConfigRoot root, params object[] hostInitConfigurationParams);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitForConfiguration(string&amp; locationSubPath, [out] string&amp; configPath, [out] string&amp; locationConfigPath, class System.Configuration.Internal.IInternalConfigRoot root, object[] hostInitConfigurationParams) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitForConfiguration (ByRef locationSubPath As String, ByRef configPath As String, ByRef locationConfigPath As String, root As IInternalConfigRoot, ParamArray hostInitConfigurationParams As Object())" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitForConfiguration(System::String ^ % locationSubPath, [Runtime::InteropServices::Out] System::String ^ % configPath, [Runtime::InteropServices::Out] System::String ^ % locationConfigPath, System::Configuration::Internal::IInternalConfigRoot ^ root, ... cli::array &lt;System::Object ^&gt; ^ hostInitConfigurationParams);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member InitForConfiguration : string * string * string * System.Configuration.Internal.IInternalConfigRoot * obj[] -&gt; unit&#xA;override this.InitForConfiguration : string * string * string * System.Configuration.Internal.IInternalConfigRoot * obj[] -&gt; unit" Usage="delegatingConfigHost.InitForConfiguration (locationSubPath, configPath, locationConfigPath, root, hostInitConfigurationParams)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String" RefType="ref" Index="0" />
        <Parameter Name="configPath" Type="System.String" RefType="out" Index="1" />
        <Parameter Name="locationConfigPath" Type="System.String" RefType="out" Index="2" />
        <Parameter Name="configRoot" Type="System.Configuration.Internal.IInternalConfigRoot" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="root" Type="System.Configuration.Internal.IInternalConfigRoot" Index="3" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="hostInitConfigurationParams" Type="System.Object[]" Index="4">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="locationSubPath"><span data-ttu-id="a6310-164">一个字符串，表示位置子路径（按引用传递）。</span><span class="sxs-lookup"><span data-stu-id="a6310-164">A string representing a location subpath (passed by reference).</span></span></param>
        <param name="configPath"><span data-ttu-id="a6310-165">表示配置文件路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-165">A string representing the path to a configuration file.</span></span></param>
        <param name="locationConfigPath"><span data-ttu-id="a6310-166">位置配置路径。</span><span class="sxs-lookup"><span data-stu-id="a6310-166">The location configuration path.</span></span></param>
        <param name="configRoot"><span data-ttu-id="a6310-167">配置根元素。</span><span class="sxs-lookup"><span data-stu-id="a6310-167">The configuration root element.</span></span></param>
        <param name="root">To be added.</param>
        <param name="hostInitConfigurationParams"><span data-ttu-id="a6310-168">表示用于初始化主机的参数的参数对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-168">A parameter object representing the parameters used to initialize the host.</span></span></param>
        <summary><span data-ttu-id="a6310-169">初始化配置的主机。</span><span class="sxs-lookup"><span data-stu-id="a6310-169">Initializes the host for configuration.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsAboveApplication">
      <MemberSignature Language="C#" Value="public virtual bool IsAboveApplication (string configPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAboveApplication(string configPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.IsAboveApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAboveApplication (configPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAboveApplication(System::String ^ configPath);" />
      <MemberSignature Language="F#" Value="abstract member IsAboveApplication : string -&gt; bool&#xA;override this.IsAboveApplication : string -&gt; bool" Usage="delegatingConfigHost.IsAboveApplication configPath" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.IsAboveApplication(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath"><span data-ttu-id="a6310-170">表示配置文件路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-170">A string representing the path to a configuration file.</span></span></param>
        <summary><span data-ttu-id="a6310-171">返回一个值，该值指示配置是否位于配置层次结构中的应用程序配置之上。</span><span class="sxs-lookup"><span data-stu-id="a6310-171">Returns a value indicating whether the configuration is above the application configuration in the configuration hierarchy.</span></span></summary>
        <returns><span data-ttu-id="a6310-172">如果配置处于配置层次结构中的应用程序配置之上，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-172"><see langword="true" /> if the configuration is above the application configuration in the configuration hierarchy; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsAppConfigHttp">
      <MemberSignature Language="C#" Value="public virtual bool IsAppConfigHttp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAppConfigHttp" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Internal.DelegatingConfigHost.IsAppConfigHttp" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAppConfigHttp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAppConfigHttp { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAppConfigHttp : bool" Usage="System.Configuration.Internal.DelegatingConfigHost.IsAppConfigHttp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6310-173">确定应用程序配置文件来自非本地 URI（即 <c>http://</c>）还是为本地文件。</span><span class="sxs-lookup"><span data-stu-id="a6310-173">Determines if the application configuration file comes from a non-local URI (that is, <c>http://</c>) or is a local file.</span></span></summary>
        <value><span data-ttu-id="a6310-174"><see langword="true" /> 如果委托主机的部分属于 <c>System.Net</c> ，并使用通过 HTTP 下载应用程序的配置文件 <see cref="T:System.Net.WebClient" /> ，则为; 否则为 <see langword="false" /> 。</span><span class="sxs-lookup"><span data-stu-id="a6310-174"><see langword="true" /> if the delegated host's sections belong to <c>System.Net</c> and the configuration file for the application is downloaded via HTTP using <see cref="T:System.Net.WebClient" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsConfigRecordRequired">
      <MemberSignature Language="C#" Value="public virtual bool IsConfigRecordRequired (string configPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsConfigRecordRequired(string configPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.IsConfigRecordRequired(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsConfigRecordRequired (configPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsConfigRecordRequired(System::String ^ configPath);" />
      <MemberSignature Language="F#" Value="abstract member IsConfigRecordRequired : string -&gt; bool&#xA;override this.IsConfigRecordRequired : string -&gt; bool" Usage="delegatingConfigHost.IsConfigRecordRequired configPath" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.IsConfigRecordRequired(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath"><span data-ttu-id="a6310-175">表示配置文件路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-175">A string representing the path to a configuration file.</span></span></param>
        <summary><span data-ttu-id="a6310-176">返回一个值，该值指示主机配置初始化是否需要配置记录。</span><span class="sxs-lookup"><span data-stu-id="a6310-176">Returns a value indicating whether a configuration record is required for the host configuration initialization.</span></span></summary>
        <returns><span data-ttu-id="a6310-177">如果主机配置初始化需要配置记录，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-177"><see langword="true" /> if a configuration record is required for the host configuration initialization; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsDefinitionAllowed">
      <MemberSignature Language="C#" Value="public virtual bool IsDefinitionAllowed (string configPath, System.Configuration.ConfigurationAllowDefinition allowDefinition, System.Configuration.ConfigurationAllowExeDefinition allowExeDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefinitionAllowed(string configPath, valuetype System.Configuration.ConfigurationAllowDefinition allowDefinition, valuetype System.Configuration.ConfigurationAllowExeDefinition allowExeDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDefinitionAllowed (configPath As String, allowDefinition As ConfigurationAllowDefinition, allowExeDefinition As ConfigurationAllowExeDefinition) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDefinitionAllowed(System::String ^ configPath, System::Configuration::ConfigurationAllowDefinition allowDefinition, System::Configuration::ConfigurationAllowExeDefinition allowExeDefinition);" />
      <MemberSignature Language="F#" Value="abstract member IsDefinitionAllowed : string * System.Configuration.ConfigurationAllowDefinition * System.Configuration.ConfigurationAllowExeDefinition -&gt; bool&#xA;override this.IsDefinitionAllowed : string * System.Configuration.ConfigurationAllowDefinition * System.Configuration.ConfigurationAllowExeDefinition -&gt; bool" Usage="delegatingConfigHost.IsDefinitionAllowed (configPath, allowDefinition, allowExeDefinition)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
        <Parameter Name="allowDefinition" Type="System.Configuration.ConfigurationAllowDefinition" />
        <Parameter Name="allowExeDefinition" Type="System.Configuration.ConfigurationAllowExeDefinition" />
      </Parameters>
      <Docs>
        <param name="configPath"><span data-ttu-id="a6310-178">表示配置文件路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-178">A string representing the path to a configuration file.</span></span></param>
        <param name="allowDefinition"><span data-ttu-id="a6310-179"><see cref="T:System.Configuration.ConfigurationAllowDefinition" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-179">The <see cref="T:System.Configuration.ConfigurationAllowDefinition" /> object.</span></span></param>
        <param name="allowExeDefinition"><span data-ttu-id="a6310-180"><see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-180">The <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> object.</span></span></param>
        <summary><span data-ttu-id="a6310-181">限制或允许主机配置中的定义。</span><span class="sxs-lookup"><span data-stu-id="a6310-181">Restricts or allows definitions in the host configuration.</span></span></summary>
        <returns><span data-ttu-id="a6310-182">如果主机配置中定义的授予或限制成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-182"><see langword="true" /> if the grant or restriction of definitions in the host configuration was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsFile">
      <MemberSignature Language="C#" Value="public virtual bool IsFile (string streamName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsFile(string streamName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.IsFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsFile (streamName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsFile(System::String ^ streamName);" />
      <MemberSignature Language="F#" Value="abstract member IsFile : string -&gt; bool&#xA;override this.IsFile : string -&gt; bool" Usage="delegatingConfigHost.IsFile streamName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.IsFile(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="streamName"><span data-ttu-id="a6310-183">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="a6310-183">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</span></span></param>
        <summary><span data-ttu-id="a6310-184">返回一个值，指示由 <see cref="T:System.IO.Stream" /> 对象用于读取配置文件的文件路径是否为有效路径。</span><span class="sxs-lookup"><span data-stu-id="a6310-184">Returns a value indicating whether the file path used by a <see cref="T:System.IO.Stream" /> object to read a configuration file is a valid path.</span></span></summary>
        <returns><span data-ttu-id="a6310-185">如果由 <see cref="T:System.IO.Stream" /> 对象用于读取配置文件的路径是有效路径，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-185"><see langword="true" /> if the path used by a <see cref="T:System.IO.Stream" /> object to read a configuration file is a valid path; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsFullTrustSectionWithoutAptcaAllowed">
      <MemberSignature Language="C#" Value="public virtual bool IsFullTrustSectionWithoutAptcaAllowed (System.Configuration.Internal.IInternalConfigRecord configRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsFullTrustSectionWithoutAptcaAllowed(class System.Configuration.Internal.IInternalConfigRecord configRecord) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsFullTrustSectionWithoutAptcaAllowed (configRecord As IInternalConfigRecord) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsFullTrustSectionWithoutAptcaAllowed(System::Configuration::Internal::IInternalConfigRecord ^ configRecord);" />
      <MemberSignature Language="F#" Value="abstract member IsFullTrustSectionWithoutAptcaAllowed : System.Configuration.Internal.IInternalConfigRecord -&gt; bool&#xA;override this.IsFullTrustSectionWithoutAptcaAllowed : System.Configuration.Internal.IInternalConfigRecord -&gt; bool" Usage="delegatingConfigHost.IsFullTrustSectionWithoutAptcaAllowed configRecord" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configRecord" Type="System.Configuration.Internal.IInternalConfigRecord" />
      </Parameters>
      <Docs>
        <param name="configRecord"><span data-ttu-id="a6310-186"><see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-186">The <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</span></span></param>
        <summary><span data-ttu-id="a6310-187">返回一个值，它指示配置节是否需要完全受信任的代码访问安全级别，并且不允许 <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> 特性禁用隐式链接请求。</span><span class="sxs-lookup"><span data-stu-id="a6310-187">Returns a value indicating whether a configuration section requires a fully trusted code access security level and does not allow the <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> attribute to disable implicit link demands.</span></span></summary>
        <returns><span data-ttu-id="a6310-188">如果配置节需要完全受信任的代码访问安全级别并且不允许 <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> 特性禁用隐式链接请求，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-188"><see langword="true" /> if the configuration section requires a fully trusted code access security level and does not allow the <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> attribute to disable implicit link demands; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsInitDelayed">
      <MemberSignature Language="C#" Value="public virtual bool IsInitDelayed (System.Configuration.Internal.IInternalConfigRecord configRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInitDelayed(class System.Configuration.Internal.IInternalConfigRecord configRecord) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInitDelayed (configRecord As IInternalConfigRecord) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInitDelayed(System::Configuration::Internal::IInternalConfigRecord ^ configRecord);" />
      <MemberSignature Language="F#" Value="abstract member IsInitDelayed : System.Configuration.Internal.IInternalConfigRecord -&gt; bool&#xA;override this.IsInitDelayed : System.Configuration.Internal.IInternalConfigRecord -&gt; bool" Usage="delegatingConfigHost.IsInitDelayed configRecord" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configRecord" Type="System.Configuration.Internal.IInternalConfigRecord" />
      </Parameters>
      <Docs>
        <param name="configRecord"><span data-ttu-id="a6310-189"><see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-189">The <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</span></span></param>
        <summary><span data-ttu-id="a6310-190">返回一个值，它指示配置对象初始化是否被视为延迟。</span><span class="sxs-lookup"><span data-stu-id="a6310-190">Returns a value indicating whether the initialization of a configuration object is considered delayed.</span></span></summary>
        <returns><span data-ttu-id="a6310-191">如果配置对象初始化被视为延迟，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-191"><see langword="true" /> if the initialization of a configuration object is considered delayed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsLocationApplicable">
      <MemberSignature Language="C#" Value="public virtual bool IsLocationApplicable (string configPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLocationApplicable(string configPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.IsLocationApplicable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsLocationApplicable (configPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsLocationApplicable(System::String ^ configPath);" />
      <MemberSignature Language="F#" Value="abstract member IsLocationApplicable : string -&gt; bool&#xA;override this.IsLocationApplicable : string -&gt; bool" Usage="delegatingConfigHost.IsLocationApplicable configPath" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.IsLocationApplicable(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath"><span data-ttu-id="a6310-192">表示配置文件路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-192">A string representing the path to a configuration file.</span></span></param>
        <summary><span data-ttu-id="a6310-193">返回一个值，它指示配置对象是否支持位置标记。</span><span class="sxs-lookup"><span data-stu-id="a6310-193">Returns a value indicating whether the configuration object supports a location tag.</span></span></summary>
        <returns><span data-ttu-id="a6310-194">如果配置对象支持位置标记，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-194"><see langword="true" /> if the configuration object supports a location tag; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsRemote">
      <MemberSignature Language="C#" Value="public virtual bool IsRemote { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRemote" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Internal.DelegatingConfigHost.IsRemote" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsRemote As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsRemote { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRemote : bool" Usage="System.Configuration.Internal.DelegatingConfigHost.IsRemote" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Configuration.Internal.IInternalConfigHost.IsRemote</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6310-195">获取一个值，指示配置是否为远程配置。</span><span class="sxs-lookup"><span data-stu-id="a6310-195">Gets a value indicating whether the configuration is remote.</span></span></summary>
        <value><span data-ttu-id="a6310-196">如果配置为远程配置，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-196"><see langword="true" /> if the configuration is remote; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsSecondaryRoot">
      <MemberSignature Language="C#" Value="public virtual bool IsSecondaryRoot (string configPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSecondaryRoot(string configPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.IsSecondaryRoot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSecondaryRoot (configPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSecondaryRoot(System::String ^ configPath);" />
      <MemberSignature Language="F#" Value="abstract member IsSecondaryRoot : string -&gt; bool&#xA;override this.IsSecondaryRoot : string -&gt; bool" Usage="delegatingConfigHost.IsSecondaryRoot configPath" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.IsSecondaryRoot(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath"><span data-ttu-id="a6310-197">表示配置文件路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-197">A string representing the path to a configuration file.</span></span></param>
        <summary><span data-ttu-id="a6310-198">返回一个值，它指示配置路径是否指向应将其内容视为根的配置节点。</span><span class="sxs-lookup"><span data-stu-id="a6310-198">Returns a value indicating whether a configuration path is to a configuration node whose contents should be treated as a root.</span></span></summary>
        <returns><span data-ttu-id="a6310-199">如果配置路径指向应将其内容视为根的配置节点，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-199"><see langword="true" /> if the configuration path is to a configuration node whose contents should be treated as a root; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsTrustedConfigPath">
      <MemberSignature Language="C#" Value="public virtual bool IsTrustedConfigPath (string configPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsTrustedConfigPath(string configPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.IsTrustedConfigPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsTrustedConfigPath (configPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsTrustedConfigPath(System::String ^ configPath);" />
      <MemberSignature Language="F#" Value="abstract member IsTrustedConfigPath : string -&gt; bool&#xA;override this.IsTrustedConfigPath : string -&gt; bool" Usage="delegatingConfigHost.IsTrustedConfigPath configPath" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.IsTrustedConfigPath(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath"><span data-ttu-id="a6310-200">表示配置文件路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-200">A string representing the path to a configuration file.</span></span></param>
        <summary><span data-ttu-id="a6310-201">返回一个指示配置路径是否受信任的值。</span><span class="sxs-lookup"><span data-stu-id="a6310-201">Returns a value indicating whether the configuration path is trusted.</span></span></summary>
        <returns><span data-ttu-id="a6310-202">如果配置路径受信任，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-202"><see langword="true" /> if the configuration path is trusted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStreamForRead">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a6310-203">打开并返回 <see cref="T:System.IO.Stream" /> 对象以读取配置文件。</span><span class="sxs-lookup"><span data-stu-id="a6310-203">Opens and returns a <see cref="T:System.IO.Stream" /> object to read a configuration file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStreamForRead">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream OpenStreamForRead (string streamName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream OpenStreamForRead(string streamName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenStreamForRead (streamName As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ OpenStreamForRead(System::String ^ streamName);" />
      <MemberSignature Language="F#" Value="abstract member OpenStreamForRead : string -&gt; System.IO.Stream&#xA;override this.OpenStreamForRead : string -&gt; System.IO.Stream" Usage="delegatingConfigHost.OpenStreamForRead streamName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="streamName"><span data-ttu-id="a6310-204">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="a6310-204">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</span></span></param>
        <summary><span data-ttu-id="a6310-205">打开一个 <see cref="T:System.IO.Stream" /> 对象，以便读取配置文件。</span><span class="sxs-lookup"><span data-stu-id="a6310-205">Opens a <see cref="T:System.IO.Stream" /> object to read a configuration file.</span></span></summary>
        <returns><span data-ttu-id="a6310-206"><paramref name="streamName" /> 指定的对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-206">The object specified by <paramref name="streamName" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForRead">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream OpenStreamForRead (string streamName, bool assertPermissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream OpenStreamForRead(string streamName, bool assertPermissions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenStreamForRead (streamName As String, assertPermissions As Boolean) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ OpenStreamForRead(System::String ^ streamName, bool assertPermissions);" />
      <MemberSignature Language="F#" Value="abstract member OpenStreamForRead : string * bool -&gt; System.IO.Stream&#xA;override this.OpenStreamForRead : string * bool -&gt; System.IO.Stream" Usage="delegatingConfigHost.OpenStreamForRead (streamName, assertPermissions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="assertPermissions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="streamName"><span data-ttu-id="a6310-207">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="a6310-207">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</span></span></param>
        <param name="assertPermissions"><span data-ttu-id="a6310-208">如果断言权限，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-208"><see langword="true" /> to assert permissions; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a6310-209">打开一个 <see cref="T:System.IO.Stream" /> 对象，以便读取配置文件。</span><span class="sxs-lookup"><span data-stu-id="a6310-209">Opens a <see cref="T:System.IO.Stream" /> object to read a configuration file.</span></span></summary>
        <returns><span data-ttu-id="a6310-210"><paramref name="streamName" /> 指定的对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-210">The object specified by <paramref name="streamName" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStreamForWrite">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a6310-211">打开并返回 <see cref="T:System.IO.Stream" /> 对象以写入配置文件。</span><span class="sxs-lookup"><span data-stu-id="a6310-211">Opens and returns a <see cref="T:System.IO.Stream" /> object for writing to a configuration file.</span></span> <span data-ttu-id="a6310-212">允许将 <see cref="T:System.IO.Stream" /> 对象指定为模板，以便复制文件特性。</span><span class="sxs-lookup"><span data-stu-id="a6310-212">Allows a <see cref="T:System.IO.Stream" /> object to be designated as a template for copying file attributes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStreamForWrite">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream OpenStreamForWrite (string streamName, string templateStreamName, ref object writeContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream OpenStreamForWrite(string streamName, string templateStreamName, object&amp; writeContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenStreamForWrite (streamName As String, templateStreamName As String, ByRef writeContext As Object) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ OpenStreamForWrite(System::String ^ streamName, System::String ^ templateStreamName, System::Object ^ % writeContext);" />
      <MemberSignature Language="F#" Value="abstract member OpenStreamForWrite : string * string * obj -&gt; System.IO.Stream&#xA;override this.OpenStreamForWrite : string * string * obj -&gt; System.IO.Stream" Usage="delegatingConfigHost.OpenStreamForWrite (streamName, templateStreamName, writeContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="templateStreamName" Type="System.String" />
        <Parameter Name="writeContext" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="streamName"><span data-ttu-id="a6310-213">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="a6310-213">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</span></span></param>
        <param name="templateStreamName"><span data-ttu-id="a6310-214">\`<see cref="T:System.IO.Stream" /> 对象的名称，从该对象复制文件特性作为模板。</span><span class="sxs-lookup"><span data-stu-id="a6310-214">The name of a <see cref="T:System.IO.Stream" /> object from which file attributes are to be copied as a template.</span></span></param>
        <param name="writeContext"><span data-ttu-id="a6310-215"><see cref="T:System.IO.Stream" /> 对象的写上下文（按引用传递）。</span><span class="sxs-lookup"><span data-stu-id="a6310-215">The write context of the <see cref="T:System.IO.Stream" /> object (passed by reference).</span></span></param>
        <summary><span data-ttu-id="a6310-216">打开一个 <see cref="T:System.IO.Stream" /> 对象，以便写入配置文件或写入用于生成配置文件的临时文件。</span><span class="sxs-lookup"><span data-stu-id="a6310-216">Opens a <see cref="T:System.IO.Stream" /> object for writing to a configuration file or for writing to a temporary file used to build a configuration file.</span></span> <span data-ttu-id="a6310-217">允许将 <see cref="T:System.IO.Stream" /> 对象指定为模板，以便复制文件特性。</span><span class="sxs-lookup"><span data-stu-id="a6310-217">Allows a <see cref="T:System.IO.Stream" /> object to be designated as a template for copying file attributes.</span></span></summary>
        <returns><span data-ttu-id="a6310-218"><see cref="T:System.IO.Stream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-218">A <see cref="T:System.IO.Stream" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForWrite">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream OpenStreamForWrite (string streamName, string templateStreamName, ref object writeContext, bool assertPermissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream OpenStreamForWrite(string streamName, string templateStreamName, object&amp; writeContext, bool assertPermissions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OpenStreamForWrite (streamName As String, templateStreamName As String, ByRef writeContext As Object, assertPermissions As Boolean) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ OpenStreamForWrite(System::String ^ streamName, System::String ^ templateStreamName, System::Object ^ % writeContext, bool assertPermissions);" />
      <MemberSignature Language="F#" Value="abstract member OpenStreamForWrite : string * string * obj * bool -&gt; System.IO.Stream&#xA;override this.OpenStreamForWrite : string * string * obj * bool -&gt; System.IO.Stream" Usage="delegatingConfigHost.OpenStreamForWrite (streamName, templateStreamName, writeContext, assertPermissions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="templateStreamName" Type="System.String" />
        <Parameter Name="writeContext" Type="System.Object" RefType="ref" />
        <Parameter Name="assertPermissions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="streamName"><span data-ttu-id="a6310-219">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="a6310-219">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</span></span></param>
        <param name="templateStreamName"><span data-ttu-id="a6310-220">\`<see cref="T:System.IO.Stream" /> 对象的名称，从该对象复制文件特性作为模板。</span><span class="sxs-lookup"><span data-stu-id="a6310-220">The name of a <see cref="T:System.IO.Stream" /> object from which file attributes are to be copied as a template.</span></span></param>
        <param name="writeContext"><span data-ttu-id="a6310-221">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的写上下文（按引用传递）。</span><span class="sxs-lookup"><span data-stu-id="a6310-221">The write context of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file (passed by reference).</span></span></param>
        <param name="assertPermissions"><span data-ttu-id="a6310-222">如果断言权限，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-222"><see langword="true" /> to assert permissions; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a6310-223">打开一个 <see cref="T:System.IO.Stream" /> 对象，以便写入配置文件。</span><span class="sxs-lookup"><span data-stu-id="a6310-223">Opens a <see cref="T:System.IO.Stream" /> object for writing to a configuration file.</span></span> <span data-ttu-id="a6310-224">允许将 <see cref="T:System.IO.Stream" /> 对象指定为模板，以便复制文件特性。</span><span class="sxs-lookup"><span data-stu-id="a6310-224">Allows a <see cref="T:System.IO.Stream" /> object to be designated as a template for copying file attributes.</span></span></summary>
        <returns><span data-ttu-id="a6310-225">由 <paramref name="streamName" /> 参数指定的对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-225">The object specified by the <paramref name="streamName" /> parameter.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PrefetchAll">
      <MemberSignature Language="C#" Value="public virtual bool PrefetchAll (string configPath, string streamName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PrefetchAll(string configPath, string streamName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchAll(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrefetchAll (configPath As String, streamName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PrefetchAll(System::String ^ configPath, System::String ^ streamName);" />
      <MemberSignature Language="F#" Value="abstract member PrefetchAll : string * string -&gt; bool&#xA;override this.PrefetchAll : string * string -&gt; bool" Usage="delegatingConfigHost.PrefetchAll (configPath, streamName)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.PrefetchAll(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
        <Parameter Name="streamName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath"><span data-ttu-id="a6310-226">表示配置文件路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-226">A string representing the path to a configuration file.</span></span></param>
        <param name="streamName"><span data-ttu-id="a6310-227">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="a6310-227">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</span></span></param>
        <summary><span data-ttu-id="a6310-228">返回一个值，它指示是否可由指定的 <see cref="T:System.IO.Stream" /> 对象读取整个配置文件。</span><span class="sxs-lookup"><span data-stu-id="a6310-228">Returns a value indicating whether the entire configuration file could be read by a designated <see cref="T:System.IO.Stream" /> object.</span></span></summary>
        <returns><span data-ttu-id="a6310-229">如果由 <paramref name="streamName" /> 指定的 <see cref="T:System.IO.Stream" /> 对象可以读取整个配置文件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-229"><see langword="true" /> if the entire configuration file could be read by the <see cref="T:System.IO.Stream" /> object designated by <paramref name="streamName" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PrefetchSection">
      <MemberSignature Language="C#" Value="public virtual bool PrefetchSection (string sectionGroupName, string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PrefetchSection(string sectionGroupName, string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchSection(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PrefetchSection (sectionGroupName As String, sectionName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PrefetchSection(System::String ^ sectionGroupName, System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="abstract member PrefetchSection : string * string -&gt; bool&#xA;override this.PrefetchSection : string * string -&gt; bool" Usage="delegatingConfigHost.PrefetchSection (sectionGroupName, sectionName)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.PrefetchSection(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionGroupName" Type="System.String" />
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionGroupName"><span data-ttu-id="a6310-230">一个字符串，表示配置文件中节组的名称。</span><span class="sxs-lookup"><span data-stu-id="a6310-230">A string representing the name of a section group in the configuration file.</span></span></param>
        <param name="sectionName"><span data-ttu-id="a6310-231">一个字符串，表示配置文件中节的名称。</span><span class="sxs-lookup"><span data-stu-id="a6310-231">A string representing the name of a section in the configuration file.</span></span></param>
        <summary><span data-ttu-id="a6310-232">指示 <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 对象读取其关联配置文件的指定节。</span><span class="sxs-lookup"><span data-stu-id="a6310-232">Instructs the <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object to read a designated section of its associated configuration file.</span></span></summary>
        <returns><span data-ttu-id="a6310-233">如果 <see cref="T:System.IO.Stream" /> 对象可读取由 <paramref name="sectionGroupName" /> 和 <paramref name="sectionName" /> 指定的配置文件节，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-233"><see langword="true" /> if a section of the configuration file designated by the <paramref name="sectionGroupName" /> and <paramref name="sectionName" /> parameters can be read by a <see cref="T:System.IO.Stream" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ProcessConfigurationSection">
      <MemberSignature Language="C#" Value="public virtual System.Configuration.ConfigurationSection ProcessConfigurationSection (System.Configuration.ConfigurationSection configSection, System.Configuration.ConfigurationBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.ConfigurationSection ProcessConfigurationSection(class System.Configuration.ConfigurationSection configSection, class System.Configuration.ConfigurationBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.ProcessConfigurationSection(System.Configuration.ConfigurationSection,System.Configuration.ConfigurationBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ProcessConfigurationSection (configSection As ConfigurationSection, builder As ConfigurationBuilder) As ConfigurationSection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Configuration::ConfigurationSection ^ ProcessConfigurationSection(System::Configuration::ConfigurationSection ^ configSection, System::Configuration::ConfigurationBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="abstract member ProcessConfigurationSection : System.Configuration.ConfigurationSection * System.Configuration.ConfigurationBuilder -&gt; System.Configuration.ConfigurationSection&#xA;override this.ProcessConfigurationSection : System.Configuration.ConfigurationSection * System.Configuration.ConfigurationBuilder -&gt; System.Configuration.ConfigurationSection" Usage="delegatingConfigHost.ProcessConfigurationSection (configSection, builder)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigurationBuilderHost.ProcessConfigurationSection(System.Configuration.ConfigurationSection,System.Configuration.ConfigurationBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationSection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configSection" Type="System.Configuration.ConfigurationSection" Index="0" FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="builder" Type="System.Configuration.ConfigurationBuilder" Index="1" FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="configSection"><span data-ttu-id="a6310-234">要处理的 <see cref="T:System.Configuration.ConfigurationSection" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-234">The <see cref="T:System.Configuration.ConfigurationSection" /> to process.</span></span></param>
        <param name="builder"><span data-ttu-id="a6310-235">要用于处理 <paramref name="configSection" /> 的 <see cref="T:System.Configuration.ConfigurationBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-235"><see cref="T:System.Configuration.ConfigurationBuilder" /> to use to process the <paramref name="configSection" />.</span></span></param>
        <summary><span data-ttu-id="a6310-236">使用提供的 <see cref="T:System.Configuration.ConfigurationBuilder" /> 处理 <see cref="T:System.Configuration.ConfigurationSection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-236">Processes a <see cref="T:System.Configuration.ConfigurationSection" /> object using the provided <see cref="T:System.Configuration.ConfigurationBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="a6310-237">已处理的 <see cref="T:System.Configuration.ConfigurationSection" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-237">The processed <see cref="T:System.Configuration.ConfigurationSection" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRawXml">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNode ProcessRawXml (System.Xml.XmlNode rawXml, System.Configuration.ConfigurationBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlNode ProcessRawXml(class System.Xml.XmlNode rawXml, class System.Configuration.ConfigurationBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.ProcessRawXml(System.Xml.XmlNode,System.Configuration.ConfigurationBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ProcessRawXml (rawXml As XmlNode, builder As ConfigurationBuilder) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNode ^ ProcessRawXml(System::Xml::XmlNode ^ rawXml, System::Configuration::ConfigurationBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="abstract member ProcessRawXml : System.Xml.XmlNode * System.Configuration.ConfigurationBuilder -&gt; System.Xml.XmlNode&#xA;override this.ProcessRawXml : System.Xml.XmlNode * System.Configuration.ConfigurationBuilder -&gt; System.Xml.XmlNode" Usage="delegatingConfigHost.ProcessRawXml (rawXml, builder)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigurationBuilderHost.ProcessRawXml(System.Xml.XmlNode,System.Configuration.ConfigurationBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawXml" Type="System.Xml.XmlNode" Index="0" FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="builder" Type="System.Configuration.ConfigurationBuilder" Index="1" FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="rawXml"><span data-ttu-id="a6310-238">要处理的 <see cref="T:System.Xml.XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-238">The <see cref="T:System.Xml.XmlNode" /> to process.</span></span></param>
        <param name="builder"><span data-ttu-id="a6310-239">要用于处理 <paramref name="rawXml" /> 的 <see cref="T:System.Configuration.ConfigurationBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-239"><see cref="T:System.Configuration.ConfigurationBuilder" /> to use to process the <paramref name="rawXml" />.</span></span></param>
        <summary><span data-ttu-id="a6310-240">使用提供的 <see cref="T:System.Configuration.ConfigurationBuilder" /> 处理配置节的标记。</span><span class="sxs-lookup"><span data-stu-id="a6310-240">Processes the markup of a configuration section using the provided <see cref="T:System.Configuration.ConfigurationBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="a6310-241">已处理的 <see cref="T:System.Xml.XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-241">The processed <see cref="T:System.Xml.XmlNode" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshConfigPaths">
      <MemberSignature Language="C#" Value="public virtual void RefreshConfigPaths ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshConfigPaths() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.RefreshConfigPaths" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RefreshConfigPaths ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RefreshConfigPaths();" />
      <MemberSignature Language="F#" Value="abstract member RefreshConfigPaths : unit -&gt; unit&#xA;override this.RefreshConfigPaths : unit -&gt; unit" Usage="delegatingConfigHost.RefreshConfigPaths " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a6310-242">调用可刷新配置路径的委派主机的方法。</span><span class="sxs-lookup"><span data-stu-id="a6310-242">Invokes the delegated host's method that refreshes configuration paths.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RequireCompleteInit">
      <MemberSignature Language="C#" Value="public virtual void RequireCompleteInit (System.Configuration.Internal.IInternalConfigRecord configRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequireCompleteInit(class System.Configuration.Internal.IInternalConfigRecord configRecord) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RequireCompleteInit (configRecord As IInternalConfigRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RequireCompleteInit(System::Configuration::Internal::IInternalConfigRecord ^ configRecord);" />
      <MemberSignature Language="F#" Value="abstract member RequireCompleteInit : System.Configuration.Internal.IInternalConfigRecord -&gt; unit&#xA;override this.RequireCompleteInit : System.Configuration.Internal.IInternalConfigRecord -&gt; unit" Usage="delegatingConfigHost.RequireCompleteInit configRecord" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configRecord" Type="System.Configuration.Internal.IInternalConfigRecord" />
      </Parameters>
      <Docs>
        <param name="configRecord"><span data-ttu-id="a6310-243">一个 <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-243">An <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</span></span></param>
        <summary><span data-ttu-id="a6310-244">指示新配置记录需要完全初始化。</span><span class="sxs-lookup"><span data-stu-id="a6310-244">Indicates that a new configuration record requires a complete initialization.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StartMonitoringStreamForChanges">
      <MemberSignature Language="C#" Value="public virtual object StartMonitoringStreamForChanges (string streamName, System.Configuration.Internal.StreamChangeCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object StartMonitoringStreamForChanges(string streamName, class System.Configuration.Internal.StreamChangeCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartMonitoringStreamForChanges (streamName As String, callback As StreamChangeCallback) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ StartMonitoringStreamForChanges(System::String ^ streamName, System::Configuration::Internal::StreamChangeCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member StartMonitoringStreamForChanges : string * System.Configuration.Internal.StreamChangeCallback -&gt; obj&#xA;override this.StartMonitoringStreamForChanges : string * System.Configuration.Internal.StreamChangeCallback -&gt; obj" Usage="delegatingConfigHost.StartMonitoringStreamForChanges (streamName, callback)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="callback" Type="System.Configuration.Internal.StreamChangeCallback" />
      </Parameters>
      <Docs>
        <param name="streamName"><span data-ttu-id="a6310-245">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="a6310-245">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</span></span></param>
        <param name="callback"><span data-ttu-id="a6310-246">一个 <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> 对象，它用于接收返回的表示配置文件中的更改的数据。</span><span class="sxs-lookup"><span data-stu-id="a6310-246">A <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> object to receive the returned data representing the changes in the configuration file.</span></span></param>
        <summary><span data-ttu-id="a6310-247">指示主机监视配置文件中关联 <see cref="T:System.IO.Stream" /> 对象的更改。</span><span class="sxs-lookup"><span data-stu-id="a6310-247">Instructs the host to monitor an associated <see cref="T:System.IO.Stream" /> object for changes in a configuration file.</span></span></summary>
        <returns><span data-ttu-id="a6310-248">一个 <see cref="T:System.Object" /> 实例，包含更改的配置设置。</span><span class="sxs-lookup"><span data-stu-id="a6310-248">An <see cref="T:System.Object" /> instance containing changed configuration settings.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StopMonitoringStreamForChanges">
      <MemberSignature Language="C#" Value="public virtual void StopMonitoringStreamForChanges (string streamName, System.Configuration.Internal.StreamChangeCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopMonitoringStreamForChanges(string streamName, class System.Configuration.Internal.StreamChangeCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub StopMonitoringStreamForChanges (streamName As String, callback As StreamChangeCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopMonitoringStreamForChanges(System::String ^ streamName, System::Configuration::Internal::StreamChangeCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member StopMonitoringStreamForChanges : string * System.Configuration.Internal.StreamChangeCallback -&gt; unit&#xA;override this.StopMonitoringStreamForChanges : string * System.Configuration.Internal.StreamChangeCallback -&gt; unit" Usage="delegatingConfigHost.StopMonitoringStreamForChanges (streamName, callback)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="callback" Type="System.Configuration.Internal.StreamChangeCallback" />
      </Parameters>
      <Docs>
        <param name="streamName"><span data-ttu-id="a6310-249">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="a6310-249">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</span></span></param>
        <param name="callback"><span data-ttu-id="a6310-250"><see cref="T:System.Configuration.Internal.StreamChangeCallback" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-250">A <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> object.</span></span></param>
        <summary><span data-ttu-id="a6310-251">指示主机对象停止监视配置文件中关联 <see cref="T:System.IO.Stream" /> 对象的更改。</span><span class="sxs-lookup"><span data-stu-id="a6310-251">Instructs the host object to stop monitoring an associated <see cref="T:System.IO.Stream" /> object for changes in a configuration file.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeNotifications">
      <MemberSignature Language="C#" Value="public virtual bool SupportsChangeNotifications { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeNotifications" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Internal.DelegatingConfigHost.SupportsChangeNotifications" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsChangeNotifications As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsChangeNotifications { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsChangeNotifications : bool" Usage="System.Configuration.Internal.DelegatingConfigHost.SupportsChangeNotifications" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Configuration.Internal.IInternalConfigHost.SupportsChangeNotifications</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6310-252">获取一个值，它指示主机配置是否支持更改通知。</span><span class="sxs-lookup"><span data-stu-id="a6310-252">Gets a value indicating whether the host configuration supports change notifications.</span></span></summary>
        <value><span data-ttu-id="a6310-253">如果主机支持更改通知，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-253"><see langword="true" /> if the host supports change notifications; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SupportsLocation">
      <MemberSignature Language="C#" Value="public virtual bool SupportsLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsLocation" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Internal.DelegatingConfigHost.SupportsLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsLocation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsLocation { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsLocation : bool" Usage="System.Configuration.Internal.DelegatingConfigHost.SupportsLocation" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Configuration.Internal.IInternalConfigHost.SupportsLocation</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6310-254">获取一个值，它指示主机配置是否支持位置标记。</span><span class="sxs-lookup"><span data-stu-id="a6310-254">Gets a value indicating whether the host configuration supports location tags.</span></span></summary>
        <value><span data-ttu-id="a6310-255">如果主机支持位置标记，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-255"><see langword="true" /> if the host supports location tags; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SupportsPath">
      <MemberSignature Language="C#" Value="public virtual bool SupportsPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsPath" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Internal.DelegatingConfigHost.SupportsPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsPath As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsPath { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsPath : bool" Usage="System.Configuration.Internal.DelegatingConfigHost.SupportsPath" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Configuration.Internal.IInternalConfigHost.SupportsPath</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6310-256">获取一个值，它指示主机配置是否具有路径支持。</span><span class="sxs-lookup"><span data-stu-id="a6310-256">Gets a value indicating whether the host configuration has path support.</span></span></summary>
        <value><span data-ttu-id="a6310-257">如果主机配置具有路径支持，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-257"><see langword="true" /> if the host configuration has path support; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SupportsRefresh">
      <MemberSignature Language="C#" Value="public virtual bool SupportsRefresh { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsRefresh" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Internal.DelegatingConfigHost.SupportsRefresh" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsRefresh As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsRefresh { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsRefresh : bool" Usage="System.Configuration.Internal.DelegatingConfigHost.SupportsRefresh" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Configuration.Internal.IInternalConfigHost.SupportsRefresh</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6310-258">获取一个值，它指示主机配置是否支持刷新。</span><span class="sxs-lookup"><span data-stu-id="a6310-258">Gets a value indicating whether the host configuration supports refresh.</span></span></summary>
        <value><span data-ttu-id="a6310-259">如果主机配置支持刷新，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-259"><see langword="true" /> if the host configuration supports refresh; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="VerifyDefinitionAllowed">
      <MemberSignature Language="C#" Value="public virtual void VerifyDefinitionAllowed (string configPath, System.Configuration.ConfigurationAllowDefinition allowDefinition, System.Configuration.ConfigurationAllowExeDefinition allowExeDefinition, System.Configuration.Internal.IConfigErrorInfo errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VerifyDefinitionAllowed(string configPath, valuetype System.Configuration.ConfigurationAllowDefinition allowDefinition, valuetype System.Configuration.ConfigurationAllowExeDefinition allowExeDefinition, class System.Configuration.Internal.IConfigErrorInfo errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VerifyDefinitionAllowed (configPath As String, allowDefinition As ConfigurationAllowDefinition, allowExeDefinition As ConfigurationAllowExeDefinition, errorInfo As IConfigErrorInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void VerifyDefinitionAllowed(System::String ^ configPath, System::Configuration::ConfigurationAllowDefinition allowDefinition, System::Configuration::ConfigurationAllowExeDefinition allowExeDefinition, System::Configuration::Internal::IConfigErrorInfo ^ errorInfo);" />
      <MemberSignature Language="F#" Value="abstract member VerifyDefinitionAllowed : string * System.Configuration.ConfigurationAllowDefinition * System.Configuration.ConfigurationAllowExeDefinition * System.Configuration.Internal.IConfigErrorInfo -&gt; unit&#xA;override this.VerifyDefinitionAllowed : string * System.Configuration.ConfigurationAllowDefinition * System.Configuration.ConfigurationAllowExeDefinition * System.Configuration.Internal.IConfigErrorInfo -&gt; unit" Usage="delegatingConfigHost.VerifyDefinitionAllowed (configPath, allowDefinition, allowExeDefinition, errorInfo)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
        <Parameter Name="allowDefinition" Type="System.Configuration.ConfigurationAllowDefinition" />
        <Parameter Name="allowExeDefinition" Type="System.Configuration.ConfigurationAllowExeDefinition" />
        <Parameter Name="errorInfo" Type="System.Configuration.Internal.IConfigErrorInfo" />
      </Parameters>
      <Docs>
        <param name="configPath"><span data-ttu-id="a6310-260">表示配置文件路径的字符串。</span><span class="sxs-lookup"><span data-stu-id="a6310-260">A string representing the path to a configuration file.</span></span></param>
        <param name="allowDefinition"><span data-ttu-id="a6310-261">一个 <see cref="P:System.Configuration.SectionInformation.AllowDefinition" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-261">An <see cref="P:System.Configuration.SectionInformation.AllowDefinition" /> object.</span></span></param>
        <param name="allowExeDefinition"><span data-ttu-id="a6310-262">一个 <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> 对象</span><span class="sxs-lookup"><span data-stu-id="a6310-262">A <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> object</span></span></param>
        <param name="errorInfo"><span data-ttu-id="a6310-263">一个 <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a6310-263">An <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> object.</span></span></param>
        <summary><span data-ttu-id="a6310-264">验证是否允许对配置记录使用配置定义。</span><span class="sxs-lookup"><span data-stu-id="a6310-264">Verifies that a configuration definition is allowed for a configuration record.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteCompleted">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a6310-265">指示已完成所有写入配置文件操作，并指定是否应断言权限。</span><span class="sxs-lookup"><span data-stu-id="a6310-265">Indicates that all writing to the configuration file has completed and specifies whether permissions should be asserted.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteCompleted">
      <MemberSignature Language="C#" Value="public virtual void WriteCompleted (string streamName, bool success, object writeContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteCompleted(string streamName, bool success, object writeContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteCompleted (streamName As String, success As Boolean, writeContext As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteCompleted(System::String ^ streamName, bool success, System::Object ^ writeContext);" />
      <MemberSignature Language="F#" Value="abstract member WriteCompleted : string * bool * obj -&gt; unit&#xA;override this.WriteCompleted : string * bool * obj -&gt; unit" Usage="delegatingConfigHost.WriteCompleted (streamName, success, writeContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="success" Type="System.Boolean" />
        <Parameter Name="writeContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="streamName"><span data-ttu-id="a6310-266">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="a6310-266">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</span></span></param>
        <param name="success"><span data-ttu-id="a6310-267">如果已成功完成对配置文件的写入，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-267"><see langword="true" /> if writing to the configuration file completed successfully; otherwise, <see langword="false" />.</span></span></param>
        <param name="writeContext"><span data-ttu-id="a6310-268">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的写上下文。</span><span class="sxs-lookup"><span data-stu-id="a6310-268">The write context of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</span></span></param>
        <summary><span data-ttu-id="a6310-269">指示已完成所有写入配置文件操作。</span><span class="sxs-lookup"><span data-stu-id="a6310-269">Indicates that all writing to the configuration file has completed.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="WriteCompleted">
      <MemberSignature Language="C#" Value="public virtual void WriteCompleted (string streamName, bool success, object writeContext, bool assertPermissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteCompleted(string streamName, bool success, object writeContext, bool assertPermissions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteCompleted (streamName As String, success As Boolean, writeContext As Object, assertPermissions As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteCompleted(System::String ^ streamName, bool success, System::Object ^ writeContext, bool assertPermissions);" />
      <MemberSignature Language="F#" Value="abstract member WriteCompleted : string * bool * obj * bool -&gt; unit&#xA;override this.WriteCompleted : string * bool * obj * bool -&gt; unit" Usage="delegatingConfigHost.WriteCompleted (streamName, success, writeContext, assertPermissions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="success" Type="System.Boolean" />
        <Parameter Name="writeContext" Type="System.Object" />
        <Parameter Name="assertPermissions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="streamName"><span data-ttu-id="a6310-270">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="a6310-270">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</span></span></param>
        <param name="success"><span data-ttu-id="a6310-271"><see langword="true" /> 指示已成功完成写入操作；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-271"><see langword="true" /> to indicate that writing was completed successfully; otherwise, <see langword="false" />.</span></span></param>
        <param name="writeContext"><span data-ttu-id="a6310-272">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的写上下文。</span><span class="sxs-lookup"><span data-stu-id="a6310-272">The write context of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</span></span></param>
        <param name="assertPermissions"><span data-ttu-id="a6310-273">如果断言权限，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6310-273"><see langword="true" /> to assert permissions; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a6310-274">指示已完成所有写入配置文件操作，并指定是否应断言权限。</span><span class="sxs-lookup"><span data-stu-id="a6310-274">Indicates that all writing to the configuration file has completed and specifies whether permissions should be asserted.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
