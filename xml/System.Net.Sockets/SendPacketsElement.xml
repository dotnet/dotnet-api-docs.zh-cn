<Type Name="SendPacketsElement" FullName="System.Net.Sockets.SendPacketsElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="15fdb9084cf446dc036a4e52e15cc9f7cdd00df0" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89758590" /></Metadata><TypeSignature Language="C#" Value="public class SendPacketsElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SendPacketsElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.SendPacketsElement" />
  <TypeSignature Language="VB.NET" Value="Public Class SendPacketsElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendPacketsElement" />
  <TypeSignature Language="F#" Value="type SendPacketsElement = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Net.Sockets" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 数组中的一个元素。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement>类用于增强类，以便 <xref:System.Net.Sockets.Socket> 使用异步网络 i/o 实现最高性能的服务器应用程序使用。 <xref:System.Net.Sockets.SendPacketsElement>类与属性一起使用 <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType> ，以获取或设置要使用方法发送的数据缓冲区或文件 <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
    </remarks>
    <threadsafe>此类的实例是线程安全的。</threadsafe>
    <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : byte[] -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement buffer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法发送的数据的字节数组。</param>
        <summary>使用指定的缓冲区初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement>类与属性一起使用 <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType> ，以获取或设置要使用方法发送的数据缓冲区或文件 <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> 参数不能为 null</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (System.IO.FileStream fileStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.FileStream fileStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileStream As FileStream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(System::IO::FileStream ^ fileStream);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : System.IO.FileStream -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement fileStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="fileStream">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法传输的文件。</param>
        <summary>使用指定的 <see cref="T:System.IO.FileStream" /> 对象初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement>类与属性一起使用 <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements?displayProperty=nameWithType> ，以获取或设置要使用方法发送的数据缓冲区或文件 <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="fileStream" /> 未针对异步读取和写入开放。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="fileStream" /> 不能为 null。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (string filepath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filepath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filepath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(System::String ^ filepath);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : string -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement filepath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="filepath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filepath">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法传输的文件的文件名。</param>
        <summary>使用指定的文件初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement>类与属性一起使用 <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType> ，以获取或设置要使用方法发送的数据缓冲区或文件 <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> 。  
  
 参数支持 (UNC) 路径的通用命名约定 `filepath` 。 如果文件在当前工作目录中，则不需要指定路径信息。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="filepath" /> 参数不能为 null</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : byte[] * int * int -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (buffer, offset, count)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法发送的数据的字节数组。</param>
        <param name="offset">以字节为单位表示的偏移量，该偏移量是指 <paramref name="buffer" /> 的起始位置与 <paramref name="buffer" /> 中开始发送 <paramref name="buffer" /> 参数中指定数据的位置之间的偏移。</param>
        <param name="count">从 <paramref name="offset" /> 参数开始发送的字节数。 如果 <paramref name="count" /> 为零，则不发送任何字节。</param>
        <summary>使用指定的缓冲区范围初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement>类与属性一起使用 <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType> ，以获取或设置要使用方法发送的数据缓冲区或文件 <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> 参数不能为 null</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> 和 <paramref name="count" /> 参数必须大于或等于零。  
  
<paramref name="offset" /> 和 <paramref name="count" /> 必须小于缓冲区的大小</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (System.IO.FileStream fileStream, long offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.FileStream fileStream, int64 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream,System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileStream As FileStream, offset As Long, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(System::IO::FileStream ^ fileStream, long offset, int count);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : System.IO.FileStream * int64 * int -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (fileStream, offset, count)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="offset" Type="System.Int64" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="fileStream">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法传输的文件。</param>
        <param name="offset">以字节为单位表示的偏移量，该偏移量是指文件的起始位置与文件中开始发送字节的文件位置之间的偏移。</param>
        <param name="count">从 <paramref name="offset" /> 开始发送的字节数。 如果 <paramref name="count" /> 为零，则发送整个文件。</param>
        <summary>使用指定的 <see cref="T:System.IO.FileStream" /> 对象范围初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement>类与属性一起使用 <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements?displayProperty=nameWithType> ，以获取或设置要使用方法发送的数据缓冲区或文件 <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">必须已针对异步读取和写入开放 <paramref name="fileStream" /> 参数。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="fileStream" /> 参数不能为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> 和 <paramref name="count" /> 参数必须大于或等于零。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (string filepath, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filepath, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filepath As String, offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(System::String ^ filepath, int offset, int count);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : string * int * int -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (filepath, offset, count)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="filepath" Type="System.String" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="filepath">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法传输的文件的文件名。</param>
        <param name="offset">以字节为单位表示的偏移量，该偏移量是指文件的起始位置与文件中开始发送 <paramref name="filepath" /> 参数中指定文件的位置之间的偏移。</param>
        <param name="count">从 <paramref name="offset" /> 参数开始发送的字节数。 如果 <paramref name="count" /> 为零，则发送整个文件。</param>
        <summary>使用指定的文件范围初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement>类与属性一起使用 <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType> ，以获取或设置要使用方法发送的数据缓冲区或文件 <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> 。  
  
 参数支持 (UNC) 路径的通用命名约定 `filepath` 。 如果文件在当前工作目录中，则不需要指定路径信息。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="filepath" /> 参数不能为 null</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> 和 <paramref name="count" /> 参数必须大于或等于零。</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (string filepath, long offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filepath, int64 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filepath As String, offset As Long, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(System::String ^ filepath, long offset, int count);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : string * int64 * int -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (filepath, offset, count)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filepath" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="offset" Type="System.Int64" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="filepath">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法传输的文件的文件名。</param>
        <param name="offset">以字节为单位表示的偏移量，该偏移量是指文件的起始位置与文件中开始发送 <paramref name="filepath" /> 参数中指定文件的位置之间的偏移。</param>
        <param name="count">从 <paramref name="offset" /> 开始发送的字节数。 如果 <paramref name="count" /> 为零，则发送整个文件。</param>
        <summary>使用指定的文件范围初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement>类与属性一起使用 <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements?displayProperty=nameWithType> ，以获取或设置要使用方法发送的数据缓冲区或文件 <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> 。  
  
 参数支持 (UNC) 路径的通用命名约定 `filepath` 。 如果文件在当前工作目录中，则不需要指定路径信息。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="filepath" /> 参数不能为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> 和 <paramref name="count" /> 参数必须大于或等于零。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (byte[] buffer, int offset, int count, bool endOfPacket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] buffer, int32 offset, int32 count, bool endOfPacket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (buffer As Byte(), offset As Integer, count As Integer, endOfPacket As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, bool endOfPacket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : byte[] * int * int * bool -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (buffer, offset, count, endOfPacket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="endOfPacket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="buffer">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法发送的数据的字节数组。</param>
        <param name="offset">以字节为单位表示的偏移量，该偏移量是指 <paramref name="buffer" /> 的起始位置与 <paramref name="buffer" /> 中开始发送 <paramref name="buffer" /> 参数中指定数据的位置之间的偏移。</param>
        <param name="count">从 <paramref name="offset" /> 参数开始发送的字节数。 如果 <paramref name="count" /> 为零，则不发送任何字节。</param>
        <param name="endOfPacket">一个布尔值，该值指定此元素不应与从套接字层到传输层的单一发送请求中的下一个元素合并。 此标志用于精细控制数据报或面向消息的套接字中每个消息的内容。</param>
        <summary>使用指定的缓冲区范围，以及一个用于将此元素与从套接字层到传输层的单一发送请求中的下一个元素进行合并的选项，来初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement>类与属性一起使用 <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType> ，以获取或设置要使用方法发送的数据缓冲区或文件 <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> 参数不能为 null</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> 和 <paramref name="count" /> 参数必须大于或等于零。  
  
<paramref name="offset" /> 和 <paramref name="count" /> 必须小于缓冲区的大小</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (System.IO.FileStream fileStream, long offset, int count, bool endOfPacket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.FileStream fileStream, int64 offset, int32 count, bool endOfPacket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream,System.Int64,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileStream As FileStream, offset As Long, count As Integer, endOfPacket As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(System::IO::FileStream ^ fileStream, long offset, int count, bool endOfPacket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : System.IO.FileStream * int64 * int * bool -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (fileStream, offset, count, endOfPacket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="offset" Type="System.Int64" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="endOfPacket" Type="System.Boolean" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="fileStream">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法传输的文件。</param>
        <param name="offset">以字节为单位表示的偏移量，该偏移量是指文件的起始位置与文件中开始发送字节的文件位置之间的偏移。</param>
        <param name="count">从 offset 参数开始发送的字节数。 如果 count 为零，则发送整个文件。</param>
        <param name="endOfPacket">指定此元素不应与从套接字层到传输层的单一发送请求中的下一个元素合并。 此标志用于精细控制数据报或面向消息的套接字中每个消息的内容。</param>
        <summary>使用指定的 <see cref="T:System.IO.FileStream" /> 对象范围，以及一个用于将此元素与从套接字层到传输层的单一发送请求中的下一个元素进行合并的选项，来初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement>类与属性一起使用 <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements?displayProperty=nameWithType> ，以获取或设置要使用方法发送的数据缓冲区或文件 <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">必须已针对异步读取和写入开放 <paramref name="fileStream" /> 参数。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="fileStream" /> 参数不能为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> 和 <paramref name="count" /> 参数必须大于或等于零。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (string filepath, int offset, int count, bool endOfPacket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filepath, int32 offset, int32 count, bool endOfPacket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filepath As String, offset As Integer, count As Integer, endOfPacket As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(System::String ^ filepath, int offset, int count, bool endOfPacket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : string * int * int * bool -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (filepath, offset, count, endOfPacket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="filepath" Type="System.String" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="endOfPacket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filepath">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法传输的文件的文件名。</param>
        <param name="offset">以字节为单位表示的偏移量，该偏移量是指文件的起始位置与文件中开始发送 <paramref name="filepath" /> 参数中指定文件的位置之间的偏移。</param>
        <param name="count">从 <paramref name="offset" /> 参数开始发送的字节数。 如果 <paramref name="count" /> 为零，则发送整个文件。</param>
        <param name="endOfPacket">一个布尔值，该值指定此元素不应与从套接字层到传输层的单一发送请求中的下一个元素合并。 此标志用于精细控制数据报或面向消息的套接字中每个消息的内容。</param>
        <summary>使用指定的文件范围，以及一个用于将此元素与从套接字层到传输层的单一发送请求中的下一个元素进行合并的选项，来初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement>类与属性一起使用 <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType> ，以获取或设置要使用方法发送的数据缓冲区或文件 <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> 。  
  
 参数支持 (UNC) 路径的通用命名约定 `filepath` 。 如果文件在当前工作目录中，则不需要指定路径信息。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="filepath" /> 参数不能为 null</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> 和 <paramref name="count" /> 参数必须大于或等于零。</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (string filepath, long offset, int count, bool endOfPacket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filepath, int64 offset, int32 count, bool endOfPacket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int64,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filepath As String, offset As Long, count As Integer, endOfPacket As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(System::String ^ filepath, long offset, int count, bool endOfPacket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : string * int64 * int * bool -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (filepath, offset, count, endOfPacket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filepath" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="offset" Type="System.Int64" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="endOfPacket" Type="System.Boolean" Index="3" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="filepath">要用 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法传输的文件的文件名。</param>
        <param name="offset">以字节为单位表示的偏移量，该偏移量是指文件的起始位置与文件中开始发送 <paramref name="filepath" /> 参数中指定文件的位置之间的偏移。</param>
        <param name="count">从 <paramref name="offset" /> 参数开始发送的字节数。 如果 <paramref name="count" /> 为零，则发送整个文件。</param>
        <param name="endOfPacket">指定此元素不应与从套接字层到传输层的单一发送请求中的下一个元素合并。 此标志用于精细控制数据报或面向消息的套接字中每个消息的内容。</param>
        <summary>使用指定的文件范围，以及一个用于将此元素与从套接字层到传输层的单一发送请求中的下一个元素进行合并的选项，来初始化 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement>类与属性一起使用 <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements?displayProperty=nameWithType> ，以获取或设置要使用方法发送的数据缓冲区或文件 <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> 。  
  
 参数支持 (UNC) 路径的通用命名约定 `filepath` 。 如果文件在当前工作目录中，则不需要指定路径信息。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="filepath" /> 参数不能为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> 和 <paramref name="count" /> 参数必须大于或等于零。</exception>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public byte[]? Buffer { get; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Buffer As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Buffer { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : byte[]" Usage="System.Net.Sockets.SendPacketsElement.Buffer" />
      <MemberSignature Language="C#" Value="public byte[] Buffer { get; }" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 对象使用 <paramref name="buffer" /> 参数初始化的情况下发送的缓冲区。</summary>
        <value>如果 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 对象是用参数初始化的，则为要发送的字节缓冲区 <paramref name="buffer" /> 。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement.Buffer> `null` 如果 <xref:System.Net.Sockets.SendPacketsElement> 未使用参数初始化对象，则属性的默认值为 `buffer` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Net.Sockets.SendPacketsElement.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要发送的字节的计数。</summary>
        <value>在 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 类使用 <paramref name="count" /> 参数初始化的情况下发送的字节计数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement.Count%2A>如果 <xref:System.Net.Sockets.SendPacketsElement> 未使用参数初始化类，则属性的默认值为零 `count` 。  
  
 如果文件的值为 <xref:System.Net.Sockets.SendPacketsElement.Count%2A> 零，则发送整个文件。 如果 <xref:System.Net.Sockets.SendPacketsElement.Count%2A> 缓冲区为零，则不发送任何字节。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOfPacket">
      <MemberSignature Language="C#" Value="public bool EndOfPacket { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EndOfPacket" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.EndOfPacket" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndOfPacket As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EndOfPacket { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EndOfPacket : bool" Usage="System.Net.Sockets.SendPacketsElement.EndOfPacket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个布尔值，该值指示此元素是否不应与从套接字层到传输层的单一发送请求中的下一个元素合并。</summary>
        <value>一个布尔值，该值指示此元素是否不应当与单一发送请求中的下一个元素合并。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement.EndOfPacket%2A>如果 <xref:System.Net.Sockets.SendPacketsElement> 没有 `endOfPacket` 将参数设置为 true，则属性的默认值为 false。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePath">
      <MemberSignature Language="C#" Value="public string? FilePath { get; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePath" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.FilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePath : string" Usage="System.Net.Sockets.SendPacketsElement.FilePath" />
      <MemberSignature Language="C#" Value="public string FilePath { get; }" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 对象使用 <paramref name="filepath" /> 参数初始化的情况下发送的文件的文件名。</summary>
        <value><see cref="T:System.Net.Sockets.SendPacketsElement" />用参数初始化对象时要发送的文件的文件名 <paramref name="filepath" /> 。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性支持 (UNC) 路径的通用命名约定 <xref:System.Net.Sockets.SendPacketsElement.FilePath%2A> 。 如果文件在当前工作目录中，则不需要指定路径信息。  
  
 <xref:System.Net.Sockets.SendPacketsElement.FilePath> `null` 如果 <xref:System.Net.Sockets.SendPacketsElement> 未使用参数初始化对象，则属性的默认值为 `filepath` 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileStream">
      <MemberSignature Language="C#" Value="public System.IO.FileStream? FileStream { get; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.FileStream FileStream" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.FileStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileStream As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileStream ^ FileStream { System::IO::FileStream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileStream : System.IO.FileStream" Usage="System.Net.Sockets.SendPacketsElement.FileStream" />
      <MemberSignature Language="C#" Value="public System.IO.FileStream FileStream { get; }" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 对象使用 <see cref="T:System.IO.FileStream" /> 参数初始化的情况下发送的文件的对象表示形式。</summary>
        <value>如果 <see cref="T:System.Net.Sockets.SendPacketsElement" /> 对象是用参数初始化的，则为要发送的文件的对象表示形式 <see cref="T:System.IO.FileStream" /> 。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <xref:System.Net.Sockets.SendPacketsElement.FileStream> `null` 如果 <xref:System.Net.Sockets.SendPacketsElement> 未使用参数初始化对象，则属性的默认值为 `fileStream` 。
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int" Usage="System.Net.Sockets.SendPacketsElement.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取以字节为单位表示的偏移量，该偏移量是指数据缓冲区或文件的起始位置与该缓冲区或文件中开始发送数据的位置之间的偏移。</summary>
        <value>以字节为单位表示的偏移量，该偏移量是指数据缓冲区或文件的起始位置与该缓冲区或文件中开始发送数据的位置之间的偏移。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement.Offset>如果 <xref:System.Net.Sockets.SendPacketsElement> 未使用参数初始化类，则属性的默认值为零 `offset` 。  
  
  如果 <xref:System.Net.Sockets.SendPacketsElement.OffsetLong> 大于，则 <xref:System.Int32.MaxValue> <xref:System.Net.Sockets.SendPacketsElement.Offset> 将 <xref:System.OverflowException> 在你尝试访问它时引发。 

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetLong">
      <MemberSignature Language="C#" Value="public long OffsetLong { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 OffsetLong" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.OffsetLong" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetLong As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long OffsetLong { long get(); };" />
      <MemberSignature Language="F#" Value="member this.OffsetLong : int64" Usage="System.Net.Sockets.SendPacketsElement.OffsetLong" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取以字节为单位表示的偏移量，该偏移量是指数据缓冲区或文件的起始位置与该缓冲区或文件中开始发送数据的位置之间的偏移。</summary>
        <value>以字节为单位表示的偏移量，该偏移量是指数据缓冲区或文件的起始位置与该缓冲区或文件中开始发送数据的位置之间的偏移。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.SendPacketsElement.OffsetLong>如果 <xref:System.Net.Sockets.SendPacketsElement> 未使用参数初始化类，则属性的默认值为零 `offset` 。  
  
  如果 <xref:System.Net.Sockets.SendPacketsElement.OffsetLong> 大于，则 <xref:System.Int32.MaxValue> <xref:System.Net.Sockets.SendPacketsElement.Offset> 将 <xref:System.OverflowException> 在你尝试访问它时引发。 

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
