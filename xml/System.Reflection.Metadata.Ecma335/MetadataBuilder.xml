<Type Name="MetadataBuilder" FullName="System.Reflection.Metadata.Ecma335.MetadataBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="186735adfb6be3d0f03be22e00bca49a9262f8d3" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89757516" /></Metadata><TypeSignature Language="C#" Value="public sealed class MetadataBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MetadataBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.Ecma335.MetadataBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MetadataBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataBuilder sealed" />
  <TypeSignature Language="F#" Value="type MetadataBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
    <AssemblyVersion>1.4.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="85f24-101">MetadataBuilder 类以高性能的方式读取和写入程序集的元数据。</span><span class="sxs-lookup"><span data-stu-id="85f24-101">The MetadataBuilder class reads and writes metadata for an assembly in a highly performant manner.</span></span> <span data-ttu-id="85f24-102">它专用于编译器和其他程序集生成工具。</span><span class="sxs-lookup"><span data-stu-id="85f24-102">It is designed for use by compilers and other assembly generation tools.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataBuilder (int userStringHeapStartOffset = 0, int stringHeapStartOffset = 0, int blobHeapStartOffset = 0, int guidHeapStartOffset = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 userStringHeapStartOffset, int32 stringHeapStartOffset, int32 blobHeapStartOffset, int32 guidHeapStartOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional userStringHeapStartOffset As Integer = 0, Optional stringHeapStartOffset As Integer = 0, Optional blobHeapStartOffset As Integer = 0, Optional guidHeapStartOffset As Integer = 0)" />
      <MemberSignature Language="F#" Value="new System.Reflection.Metadata.Ecma335.MetadataBuilder : int * int * int * int -&gt; System.Reflection.Metadata.Ecma335.MetadataBuilder" Usage="new System.Reflection.Metadata.Ecma335.MetadataBuilder (userStringHeapStartOffset, stringHeapStartOffset, blobHeapStartOffset, guidHeapStartOffset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userStringHeapStartOffset" Type="System.Int32" />
        <Parameter Name="stringHeapStartOffset" Type="System.Int32" />
        <Parameter Name="blobHeapStartOffset" Type="System.Int32" />
        <Parameter Name="guidHeapStartOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="userStringHeapStartOffset"><span data-ttu-id="85f24-103">用户字符串堆的起始偏移量。</span><span class="sxs-lookup"><span data-stu-id="85f24-103">The start offset of the User String heap.</span></span> <span data-ttu-id="85f24-104">所有以前的 EnC 生成的用户字符串堆的累计大小应为 0，除非元数据为 EnC 增量元数据。</span><span class="sxs-lookup"><span data-stu-id="85f24-104">The cumulative size of User String heaps of all previous EnC generations should be 0 unless the metadata is EnC delta metadata.</span></span></param>
        <param name="stringHeapStartOffset"><span data-ttu-id="85f24-105">字符串堆的起始偏移量。</span><span class="sxs-lookup"><span data-stu-id="85f24-105">The start offset of the String heap.</span></span> <span data-ttu-id="85f24-106">所有以前的 EnC 生成的字符串堆的累计大小应为 0，除非元数据为 EnC 增量元数据。</span><span class="sxs-lookup"><span data-stu-id="85f24-106">The cumulative size of String heaps of all previous EnC generations should be 0 unless the metadata is EnC delta metadata.</span></span></param>
        <param name="blobHeapStartOffset"><span data-ttu-id="85f24-107">Blob 堆的起始偏移量。</span><span class="sxs-lookup"><span data-stu-id="85f24-107">The start offset of the Blob heap.</span></span> <span data-ttu-id="85f24-108">所有以前的 EnC 生成的 Blob 堆的累计大小应为 0，除非元数据为 EnC 增量元数据。</span><span class="sxs-lookup"><span data-stu-id="85f24-108">The cumulative size of Blob heaps of all previous EnC generations should be 0 unless the metadata is EnC delta metadata.</span></span></param>
        <param name="guidHeapStartOffset"><span data-ttu-id="85f24-109">Guid 堆的起始偏移量。</span><span class="sxs-lookup"><span data-stu-id="85f24-109">The start offset of the Guid heap.</span></span> <span data-ttu-id="85f24-110">所有以前的 EnC 生成的 Guid 堆的累计大小应为 0，除非元数据为 EnC 增量元数据。</span><span class="sxs-lookup"><span data-stu-id="85f24-110">The cumulative size of Guid heaps of all previous EnC generations should be 0 unless the metadata is EnC delta metadata.</span></span></param>
        <summary><span data-ttu-id="85f24-111">创建元数据表和堆的生成器。</span><span class="sxs-lookup"><span data-stu-id="85f24-111">Creates a builder for metadata tables and heaps.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.Metadata.ImageFormatLimitationException"><span data-ttu-id="85f24-112">偏移量太大。</span><span class="sxs-lookup"><span data-stu-id="85f24-112">Offset is too big.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="85f24-113">偏移量为负。</span><span class="sxs-lookup"><span data-stu-id="85f24-113">Offset is negative.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85f24-114"><paramref name="guidHeapStartOffset" /> 不是 GUID 大小的倍数。</span><span class="sxs-lookup"><span data-stu-id="85f24-114"><paramref name="guidHeapStartOffset" /> is not a multiple of size of GUID.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.AssemblyDefinitionHandle AddAssembly (System.Reflection.Metadata.StringHandle name, Version version, System.Reflection.Metadata.StringHandle culture, System.Reflection.Metadata.BlobHandle publicKey, System.Reflection.AssemblyFlags flags, System.Reflection.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.AssemblyDefinitionHandle AddAssembly(valuetype System.Reflection.Metadata.StringHandle name, class System.Version version, valuetype System.Reflection.Metadata.StringHandle culture, valuetype System.Reflection.Metadata.BlobHandle publicKey, valuetype System.Reflection.AssemblyFlags flags, valuetype System.Reflection.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssembly(System.Reflection.Metadata.StringHandle,System.Version,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.AssemblyFlags,System.Reflection.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddAssembly (name As StringHandle, version As Version, culture As StringHandle, publicKey As BlobHandle, flags As AssemblyFlags, hashAlgorithm As AssemblyHashAlgorithm) As AssemblyDefinitionHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::AssemblyDefinitionHandle AddAssembly(System::Reflection::Metadata::StringHandle name, Version ^ version, System::Reflection::Metadata::StringHandle culture, System::Reflection::Metadata::BlobHandle publicKey, System::Reflection::AssemblyFlags flags, System::Reflection::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="F#" Value="member this.AddAssembly : System.Reflection.Metadata.StringHandle * Version * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle * System.Reflection.AssemblyFlags * System.Reflection.AssemblyHashAlgorithm -&gt; System.Reflection.Metadata.AssemblyDefinitionHandle" Usage="metadataBuilder.AddAssembly (name, version, culture, publicKey, flags, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.AssemblyDefinitionHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" />
        <Parameter Name="version" Type="System.Version" />
        <Parameter Name="culture" Type="System.Reflection.Metadata.StringHandle" />
        <Parameter Name="publicKey" Type="System.Reflection.Metadata.BlobHandle" />
        <Parameter Name="flags" Type="System.Reflection.AssemblyFlags" />
        <Parameter Name="hashAlgorithm" Type="System.Reflection.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="version">To be added.</param>
        <param name="culture">To be added.</param>
        <param name="publicKey">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAssemblyFile">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.AssemblyFileHandle AddAssemblyFile (System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle hashValue, bool containsMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.AssemblyFileHandle AddAssemblyFile(valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.BlobHandle hashValue, bool containsMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyFile(System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddAssemblyFile (name As StringHandle, hashValue As BlobHandle, containsMetadata As Boolean) As AssemblyFileHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::AssemblyFileHandle AddAssemblyFile(System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::BlobHandle hashValue, bool containsMetadata);" />
      <MemberSignature Language="F#" Value="member this.AddAssemblyFile : System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle * bool -&gt; System.Reflection.Metadata.AssemblyFileHandle" Usage="metadataBuilder.AddAssemblyFile (name, hashValue, containsMetadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.AssemblyFileHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" />
        <Parameter Name="hashValue" Type="System.Reflection.Metadata.BlobHandle" />
        <Parameter Name="containsMetadata" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="hashValue">To be added.</param>
        <param name="containsMetadata">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAssemblyReference">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.AssemblyReferenceHandle AddAssemblyReference (System.Reflection.Metadata.StringHandle name, Version version, System.Reflection.Metadata.StringHandle culture, System.Reflection.Metadata.BlobHandle publicKeyOrToken, System.Reflection.AssemblyFlags flags, System.Reflection.Metadata.BlobHandle hashValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.AssemblyReferenceHandle AddAssemblyReference(valuetype System.Reflection.Metadata.StringHandle name, class System.Version version, valuetype System.Reflection.Metadata.StringHandle culture, valuetype System.Reflection.Metadata.BlobHandle publicKeyOrToken, valuetype System.Reflection.AssemblyFlags flags, valuetype System.Reflection.Metadata.BlobHandle hashValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyReference(System.Reflection.Metadata.StringHandle,System.Version,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.AssemblyFlags,System.Reflection.Metadata.BlobHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddAssemblyReference (name As StringHandle, version As Version, culture As StringHandle, publicKeyOrToken As BlobHandle, flags As AssemblyFlags, hashValue As BlobHandle) As AssemblyReferenceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::AssemblyReferenceHandle AddAssemblyReference(System::Reflection::Metadata::StringHandle name, Version ^ version, System::Reflection::Metadata::StringHandle culture, System::Reflection::Metadata::BlobHandle publicKeyOrToken, System::Reflection::AssemblyFlags flags, System::Reflection::Metadata::BlobHandle hashValue);" />
      <MemberSignature Language="F#" Value="member this.AddAssemblyReference : System.Reflection.Metadata.StringHandle * Version * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle * System.Reflection.AssemblyFlags * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.AssemblyReferenceHandle" Usage="metadataBuilder.AddAssemblyReference (name, version, culture, publicKeyOrToken, flags, hashValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.AssemblyReferenceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" />
        <Parameter Name="version" Type="System.Version" />
        <Parameter Name="culture" Type="System.Reflection.Metadata.StringHandle" />
        <Parameter Name="publicKeyOrToken" Type="System.Reflection.Metadata.BlobHandle" />
        <Parameter Name="flags" Type="System.Reflection.AssemblyFlags" />
        <Parameter Name="hashValue" Type="System.Reflection.Metadata.BlobHandle" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="version">To be added.</param>
        <param name="culture">To be added.</param>
        <param name="publicKeyOrToken">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="hashValue">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddConstant">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ConstantHandle AddConstant (System.Reflection.Metadata.EntityHandle parent, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ConstantHandle AddConstant(valuetype System.Reflection.Metadata.EntityHandle parent, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddConstant(System.Reflection.Metadata.EntityHandle,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddConstant (parent As EntityHandle, value As Object) As ConstantHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ConstantHandle AddConstant(System::Reflection::Metadata::EntityHandle parent, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddConstant : System.Reflection.Metadata.EntityHandle * obj -&gt; System.Reflection.Metadata.ConstantHandle" Usage="metadataBuilder.AddConstant (parent, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ConstantHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Reflection.Metadata.EntityHandle" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="85f24-115">父级实体句柄，可以是以下项之一：<see cref="T:System.Reflection.Metadata.ParameterHandle" />、<see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" /> 或 <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-115">The parent entity handle, which can be one of the following: <see cref="T:System.Reflection.Metadata.ParameterHandle" />, <see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />, or <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />.</span></span></param>
        <param name="value"><span data-ttu-id="85f24-116">常量值。</span><span class="sxs-lookup"><span data-stu-id="85f24-116">The constant value.</span></span></param>
        <summary><span data-ttu-id="85f24-117">添加参数、字段或属性的默认值。</span><span class="sxs-lookup"><span data-stu-id="85f24-117">Adds a default value for a parameter, field or property.</span></span></summary>
        <returns><span data-ttu-id="85f24-118">已添加的常量的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-118">A handle to the added constant.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-119">可以按任意顺序添加条目。</span><span class="sxs-lookup"><span data-stu-id="85f24-119">Entries may be added in any order.</span></span> <span data-ttu-id="85f24-120">序列化时，该表会自动进行排序。</span><span class="sxs-lookup"><span data-stu-id="85f24-120">The table is automatically sorted when serialized.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85f24-121"><paramref name="parent" /> 不具有预期的句柄类型。</span><span class="sxs-lookup"><span data-stu-id="85f24-121"><paramref name="parent" /> doesn't have the expected handle kind.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddCustomAttribute">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.CustomAttributeHandle AddCustomAttribute (System.Reflection.Metadata.EntityHandle parent, System.Reflection.Metadata.EntityHandle constructor, System.Reflection.Metadata.BlobHandle value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.CustomAttributeHandle AddCustomAttribute(valuetype System.Reflection.Metadata.EntityHandle parent, valuetype System.Reflection.Metadata.EntityHandle constructor, valuetype System.Reflection.Metadata.BlobHandle value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomAttribute(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCustomAttribute (parent As EntityHandle, constructor As EntityHandle, value As BlobHandle) As CustomAttributeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::CustomAttributeHandle AddCustomAttribute(System::Reflection::Metadata::EntityHandle parent, System::Reflection::Metadata::EntityHandle constructor, System::Reflection::Metadata::BlobHandle value);" />
      <MemberSignature Language="F#" Value="member this.AddCustomAttribute : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.CustomAttributeHandle" Usage="metadataBuilder.AddCustomAttribute (parent, constructor, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.CustomAttributeHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Reflection.Metadata.EntityHandle" />
        <Parameter Name="constructor" Type="System.Reflection.Metadata.EntityHandle" />
        <Parameter Name="value" Type="System.Reflection.Metadata.BlobHandle" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="85f24-122">一个实体，用于将自定义属性附加到以下项：<see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />、<see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.ParameterHandle" />、<see cref="T:System.Reflection.Metadata.InterfaceImplementationHandle" />、<see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />、<see cref="T:System.Reflection.Metadata.ModuleDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle" />、<see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.EventDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.StandaloneSignatureHandle" />、<see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />、<see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />、<see cref="T:System.Reflection.Metadata.AssemblyDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />、<see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />、<see cref="T:System.Reflection.Metadata.ExportedTypeHandle" />、<see cref="T:System.Reflection.Metadata.ManifestResourceHandle" />、<see cref="T:System.Reflection.Metadata.GenericParameterHandle" />、<see cref="T:System.Reflection.Metadata.GenericParameterConstraintHandle" /> 或 <see cref="T:System.Reflection.Metadata.MethodSpecificationHandle" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-122">An entity to attach the custom attribute to: a <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.ParameterHandle" />, <see cref="T:System.Reflection.Metadata.InterfaceImplementationHandle" />, <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />, <see cref="T:System.Reflection.Metadata.ModuleDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle" />, <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.EventDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.StandaloneSignatureHandle" />, <see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />, <see cref="T:System.Reflection.Metadata.ExportedTypeHandle" />, <see cref="T:System.Reflection.Metadata.ManifestResourceHandle" />, <see cref="T:System.Reflection.Metadata.GenericParameterHandle" />, <see cref="T:System.Reflection.Metadata.GenericParameterConstraintHandle" />, or a <see cref="T:System.Reflection.Metadata.MethodSpecificationHandle" />.</span></span></param>
        <param name="constructor"><span data-ttu-id="85f24-123">自定义属性构造函数：<see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> 或 <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-123">A custom attribute constructor: a <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> or <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />.</span></span></param>
        <param name="value"><span data-ttu-id="85f24-124">自定义属性值 blob。</span><span class="sxs-lookup"><span data-stu-id="85f24-124">A custom attribute value blob.</span></span></param>
        <summary><span data-ttu-id="85f24-125">添加自定义属性。</span><span class="sxs-lookup"><span data-stu-id="85f24-125">Adds a custom attribute.</span></span></summary>
        <returns><span data-ttu-id="85f24-126">已添加的自定义属性的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-126">A handle to the added custom attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-127">可以按任意顺序添加条目。</span><span class="sxs-lookup"><span data-stu-id="85f24-127">Entries may be added in any order.</span></span> <span data-ttu-id="85f24-128">序列化时，该表会自动进行排序。</span><span class="sxs-lookup"><span data-stu-id="85f24-128">The table is automatically sorted when serialized.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85f24-129"><paramref name="parent" /> 不具有预期的句柄类型。</span><span class="sxs-lookup"><span data-stu-id="85f24-129"><paramref name="parent" /> doesn't have the expected handle kind.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddCustomDebugInformation">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.CustomDebugInformationHandle AddCustomDebugInformation (System.Reflection.Metadata.EntityHandle parent, System.Reflection.Metadata.GuidHandle kind, System.Reflection.Metadata.BlobHandle value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.CustomDebugInformationHandle AddCustomDebugInformation(valuetype System.Reflection.Metadata.EntityHandle parent, valuetype System.Reflection.Metadata.GuidHandle kind, valuetype System.Reflection.Metadata.BlobHandle value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomDebugInformation(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.BlobHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCustomDebugInformation (parent As EntityHandle, kind As GuidHandle, value As BlobHandle) As CustomDebugInformationHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::CustomDebugInformationHandle AddCustomDebugInformation(System::Reflection::Metadata::EntityHandle parent, System::Reflection::Metadata::GuidHandle kind, System::Reflection::Metadata::BlobHandle value);" />
      <MemberSignature Language="F#" Value="member this.AddCustomDebugInformation : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.GuidHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.CustomDebugInformationHandle" Usage="metadataBuilder.AddCustomDebugInformation (parent, kind, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.CustomDebugInformationHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Reflection.Metadata.EntityHandle" />
        <Parameter Name="kind" Type="System.Reflection.Metadata.GuidHandle" />
        <Parameter Name="value" Type="System.Reflection.Metadata.BlobHandle" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="85f24-130">一个实体，用于将调试信息附加到以下项：<see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />、<see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.ParameterHandle" />、<see cref="T:System.Reflection.Metadata.InterfaceImplementationHandle" />、<see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />、<see cref="T:System.Reflection.Metadata.ModuleDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle" />、<see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.EventDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.StandaloneSignatureHandle" />、<see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />、<see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />、<see cref="T:System.Reflection.Metadata.AssemblyDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />、<see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />、<see cref="T:System.Reflection.Metadata.ExportedTypeHandle" />、<see cref="T:System.Reflection.Metadata.ManifestResourceHandle" />、<see cref="T:System.Reflection.Metadata.GenericParameterHandle" />、<see cref="T:System.Reflection.Metadata.GenericParameterConstraintHandle" />、<see cref="T:System.Reflection.Metadata.MethodSpecificationHandle" />、<see cref="T:System.Reflection.Metadata.DocumentHandle" />、<see cref="T:System.Reflection.Metadata.LocalScopeHandle" />、<see cref="T:System.Reflection.Metadata.LocalVariableHandle" />、<see cref="T:System.Reflection.Metadata.LocalConstantHandle" /> 或 <see cref="T:System.Reflection.Metadata.ImportScopeHandle" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-130">An entity to attach the debug information to: a <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.ParameterHandle" />, <see cref="T:System.Reflection.Metadata.InterfaceImplementationHandle" />, <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />, <see cref="T:System.Reflection.Metadata.ModuleDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle" />, <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.EventDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.StandaloneSignatureHandle" />, <see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />, <see cref="T:System.Reflection.Metadata.ExportedTypeHandle" />, <see cref="T:System.Reflection.Metadata.ManifestResourceHandle" />, <see cref="T:System.Reflection.Metadata.GenericParameterHandle" />, <see cref="T:System.Reflection.Metadata.GenericParameterConstraintHandle" />, <see cref="T:System.Reflection.Metadata.MethodSpecificationHandle" />, <see cref="T:System.Reflection.Metadata.DocumentHandle" />, <see cref="T:System.Reflection.Metadata.LocalScopeHandle" />, <see cref="T:System.Reflection.Metadata.LocalVariableHandle" />, <see cref="T:System.Reflection.Metadata.LocalConstantHandle" />, or a <see cref="T:System.Reflection.Metadata.ImportScopeHandle" />.</span></span></param>
        <param name="kind"><span data-ttu-id="85f24-131">信息种类。</span><span class="sxs-lookup"><span data-stu-id="85f24-131">The information kind.</span></span> <span data-ttu-id="85f24-132">确定 <paramref name="value" /> blob 的结构。</span><span class="sxs-lookup"><span data-stu-id="85f24-132">Determines the structure of the <paramref name="value" /> blob.</span></span></param>
        <param name="value"><span data-ttu-id="85f24-133">自定义调试信息 blob。</span><span class="sxs-lookup"><span data-stu-id="85f24-133">The custom debug information blob.</span></span></param>
        <summary><span data-ttu-id="85f24-134">添加自定义调试信息。</span><span class="sxs-lookup"><span data-stu-id="85f24-134">Adds custom debug information.</span></span></summary>
        <returns><span data-ttu-id="85f24-135">已添加的自定义调试信息的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-135">A handle to the added custom debug information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-136">可以按任意顺序添加条目。</span><span class="sxs-lookup"><span data-stu-id="85f24-136">Entries may be added in any order.</span></span> <span data-ttu-id="85f24-137">序列化时，该表会自动进行排序。</span><span class="sxs-lookup"><span data-stu-id="85f24-137">The table is automatically sorted when serialized.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85f24-138"><paramref name="parent" /> 不具有预期的句柄类型。</span><span class="sxs-lookup"><span data-stu-id="85f24-138"><paramref name="parent" /> doesn't have the expected handle kind.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddDeclarativeSecurityAttribute">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.DeclarativeSecurityAttributeHandle AddDeclarativeSecurityAttribute (System.Reflection.Metadata.EntityHandle parent, System.Reflection.DeclarativeSecurityAction action, System.Reflection.Metadata.BlobHandle permissionSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.DeclarativeSecurityAttributeHandle AddDeclarativeSecurityAttribute(valuetype System.Reflection.Metadata.EntityHandle parent, valuetype System.Reflection.DeclarativeSecurityAction action, valuetype System.Reflection.Metadata.BlobHandle permissionSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDeclarativeSecurityAttribute(System.Reflection.Metadata.EntityHandle,System.Reflection.DeclarativeSecurityAction,System.Reflection.Metadata.BlobHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDeclarativeSecurityAttribute (parent As EntityHandle, action As DeclarativeSecurityAction, permissionSet As BlobHandle) As DeclarativeSecurityAttributeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::DeclarativeSecurityAttributeHandle AddDeclarativeSecurityAttribute(System::Reflection::Metadata::EntityHandle parent, System::Reflection::DeclarativeSecurityAction action, System::Reflection::Metadata::BlobHandle permissionSet);" />
      <MemberSignature Language="F#" Value="member this.AddDeclarativeSecurityAttribute : System.Reflection.Metadata.EntityHandle * System.Reflection.DeclarativeSecurityAction * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.DeclarativeSecurityAttributeHandle" Usage="metadataBuilder.AddDeclarativeSecurityAttribute (parent, action, permissionSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.DeclarativeSecurityAttributeHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Reflection.Metadata.EntityHandle" />
        <Parameter Name="action" Type="System.Reflection.DeclarativeSecurityAction" />
        <Parameter Name="permissionSet" Type="System.Reflection.Metadata.BlobHandle" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="85f24-139">父级实体句柄，可以是以下项之一：<see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> 或 <see cref="T:System.Reflection.Metadata.AssemblyDefinitionHandle" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-139">The parent entity handle, which can be one of the following: a <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />, or a <see cref="T:System.Reflection.Metadata.AssemblyDefinitionHandle" />.</span></span></param>
        <param name="action"><span data-ttu-id="85f24-140">声明性安全操作。</span><span class="sxs-lookup"><span data-stu-id="85f24-140">A declarative security action.</span></span></param>
        <param name="permissionSet"><span data-ttu-id="85f24-141">权限集 blob。</span><span class="sxs-lookup"><span data-stu-id="85f24-141">The permission set blob.</span></span></param>
        <summary><span data-ttu-id="85f24-142">将声明性安全属性添加到类型、方法或程序集。</span><span class="sxs-lookup"><span data-stu-id="85f24-142">Adds a declarative security attribute to a type, method, or assembly.</span></span></summary>
        <returns><span data-ttu-id="85f24-143">已添加的声明性安全属性的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-143">A handle to the added declarative security attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-144">可以按任意顺序添加条目。</span><span class="sxs-lookup"><span data-stu-id="85f24-144">Entries may be added in any order.</span></span> <span data-ttu-id="85f24-145">序列化时，该表会自动进行排序。</span><span class="sxs-lookup"><span data-stu-id="85f24-145">The table is automatically sorted when serialized.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85f24-146"><paramref name="parent" /> 不具有预期的句柄类型。</span><span class="sxs-lookup"><span data-stu-id="85f24-146"><paramref name="parent" /> doesn't have the expected handle kind.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddDocument">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.DocumentHandle AddDocument (System.Reflection.Metadata.BlobHandle name, System.Reflection.Metadata.GuidHandle hashAlgorithm, System.Reflection.Metadata.BlobHandle hash, System.Reflection.Metadata.GuidHandle language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.DocumentHandle AddDocument(valuetype System.Reflection.Metadata.BlobHandle name, valuetype System.Reflection.Metadata.GuidHandle hashAlgorithm, valuetype System.Reflection.Metadata.BlobHandle hash, valuetype System.Reflection.Metadata.GuidHandle language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDocument(System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.GuidHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDocument (name As BlobHandle, hashAlgorithm As GuidHandle, hash As BlobHandle, language As GuidHandle) As DocumentHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::DocumentHandle AddDocument(System::Reflection::Metadata::BlobHandle name, System::Reflection::Metadata::GuidHandle hashAlgorithm, System::Reflection::Metadata::BlobHandle hash, System::Reflection::Metadata::GuidHandle language);" />
      <MemberSignature Language="F#" Value="member this.AddDocument : System.Reflection.Metadata.BlobHandle * System.Reflection.Metadata.GuidHandle * System.Reflection.Metadata.BlobHandle * System.Reflection.Metadata.GuidHandle -&gt; System.Reflection.Metadata.DocumentHandle" Usage="metadataBuilder.AddDocument (name, hashAlgorithm, hash, language)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.DocumentHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.Metadata.BlobHandle" />
        <Parameter Name="hashAlgorithm" Type="System.Reflection.Metadata.GuidHandle" />
        <Parameter Name="hash" Type="System.Reflection.Metadata.BlobHandle" />
        <Parameter Name="language" Type="System.Reflection.Metadata.GuidHandle" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="85f24-147">文档名称 blob。</span><span class="sxs-lookup"><span data-stu-id="85f24-147">The document name blob.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="85f24-148">哈希算法的 GUID，用于计算 <paramref name="hash" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="85f24-148">THe GUID of the hash algorithm used to calculate the value of <paramref name="hash" />.</span></span></param>
        <param name="hash"><span data-ttu-id="85f24-149">文档内容的哈希。</span><span class="sxs-lookup"><span data-stu-id="85f24-149">The hash of the document content.</span></span></param>
        <param name="language"><span data-ttu-id="85f24-150">语言的 GUID。</span><span class="sxs-lookup"><span data-stu-id="85f24-150">The GUID of the language.</span></span></param>
        <summary><span data-ttu-id="85f24-151">添加文档调试信息。</span><span class="sxs-lookup"><span data-stu-id="85f24-151">Adds document debug information.</span></span></summary>
        <returns><span data-ttu-id="85f24-152">已添加的文档的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-152">A handle to the added document.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-153">有关 `name`的更多信息，请参见<https://github.com/dotnet/runtime/blob/master/docs/design/specs/PortablePdb-Metadata.md#document-name-blob>。</span><span class="sxs-lookup"><span data-stu-id="85f24-153">For more information about `name`, see <https://github.com/dotnet/runtime/blob/master/docs/design/specs/PortablePdb-Metadata.md#document-name-blob>.</span></span>

<span data-ttu-id="85f24-154">有关的公共值的详细信息 `hashAlgorithm` ，请参阅 <https://github.com/dotnet/runtime/blob/master/docs/design/specs/PortablePdb-Metadata.md#document-table-0x30> 。</span><span class="sxs-lookup"><span data-stu-id="85f24-154">For more information about common values for `hashAlgorithm`, see <https://github.com/dotnet/runtime/blob/master/docs/design/specs/PortablePdb-Metadata.md#document-table-0x30>.</span></span>

<span data-ttu-id="85f24-155">有关的公共值的详细信息 `language` ，请参阅 <https://github.com/dotnet/runtime/blob/master/docs/design/specs/PortablePdb-Metadata.md#document-table-0x30> 。</span><span class="sxs-lookup"><span data-stu-id="85f24-155">For more information about common values for `language`, see <https://github.com/dotnet/runtime/blob/master/docs/design/specs/PortablePdb-Metadata.md#document-table-0x30>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEncLogEntry">
      <MemberSignature Language="C#" Value="public void AddEncLogEntry (System.Reflection.Metadata.EntityHandle entity, System.Reflection.Metadata.Ecma335.EditAndContinueOperation code);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEncLogEntry(valuetype System.Reflection.Metadata.EntityHandle entity, valuetype System.Reflection.Metadata.Ecma335.EditAndContinueOperation code) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncLogEntry(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.Ecma335.EditAndContinueOperation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEncLogEntry (entity As EntityHandle, code As EditAndContinueOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEncLogEntry(System::Reflection::Metadata::EntityHandle entity, System::Reflection::Metadata::Ecma335::EditAndContinueOperation code);" />
      <MemberSignature Language="F#" Value="member this.AddEncLogEntry : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.Ecma335.EditAndContinueOperation -&gt; unit" Usage="metadataBuilder.AddEncLogEntry (entity, code)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Reflection.Metadata.EntityHandle" />
        <Parameter Name="code" Type="System.Reflection.Metadata.Ecma335.EditAndContinueOperation" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <param name="code">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEncMapEntry">
      <MemberSignature Language="C#" Value="public void AddEncMapEntry (System.Reflection.Metadata.EntityHandle entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEncMapEntry(valuetype System.Reflection.Metadata.EntityHandle entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncMapEntry(System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEncMapEntry (entity As EntityHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEncMapEntry(System::Reflection::Metadata::EntityHandle entity);" />
      <MemberSignature Language="F#" Value="member this.AddEncMapEntry : System.Reflection.Metadata.EntityHandle -&gt; unit" Usage="metadataBuilder.AddEncMapEntry entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Reflection.Metadata.EntityHandle" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEvent">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.EventDefinitionHandle AddEvent (System.Reflection.EventAttributes attributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.EntityHandle type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.EventDefinitionHandle AddEvent(valuetype System.Reflection.EventAttributes attributes, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.EntityHandle type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEvent(System.Reflection.EventAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddEvent (attributes As EventAttributes, name As StringHandle, type As EntityHandle) As EventDefinitionHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::EventDefinitionHandle AddEvent(System::Reflection::EventAttributes attributes, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::EntityHandle type);" />
      <MemberSignature Language="F#" Value="member this.AddEvent : System.Reflection.EventAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.EntityHandle -&gt; System.Reflection.Metadata.EventDefinitionHandle" Usage="metadataBuilder.AddEvent (attributes, name, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.EventDefinitionHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.EventAttributes" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" />
        <Parameter Name="type" Type="System.Reflection.Metadata.EntityHandle" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="85f24-156">事件属性。</span><span class="sxs-lookup"><span data-stu-id="85f24-156">The event attributes.</span></span></param>
        <param name="name"><span data-ttu-id="85f24-157">事件名称。</span><span class="sxs-lookup"><span data-stu-id="85f24-157">The event name.</span></span></param>
        <param name="type"><span data-ttu-id="85f24-158">事件类型：<see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /> 或 <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-158">The type of the event: a <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, or <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />.</span></span></param>
        <summary><span data-ttu-id="85f24-159">添加事件定义。</span><span class="sxs-lookup"><span data-stu-id="85f24-159">Adds an event definition.</span></span></summary>
        <returns><span data-ttu-id="85f24-160">已添加的事件定义的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-160">A handle to the added event definition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85f24-161"><paramref name="type" /> 不具有预期的句柄类型。</span><span class="sxs-lookup"><span data-stu-id="85f24-161"><paramref name="type" /> doesn't have the expected handle kind.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddEventMap">
      <MemberSignature Language="C#" Value="public void AddEventMap (System.Reflection.Metadata.TypeDefinitionHandle declaringType, System.Reflection.Metadata.EventDefinitionHandle eventList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEventMap(valuetype System.Reflection.Metadata.TypeDefinitionHandle declaringType, valuetype System.Reflection.Metadata.EventDefinitionHandle eventList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEventMap(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EventDefinitionHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEventMap (declaringType As TypeDefinitionHandle, eventList As EventDefinitionHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEventMap(System::Reflection::Metadata::TypeDefinitionHandle declaringType, System::Reflection::Metadata::EventDefinitionHandle eventList);" />
      <MemberSignature Language="F#" Value="member this.AddEventMap : System.Reflection.Metadata.TypeDefinitionHandle * System.Reflection.Metadata.EventDefinitionHandle -&gt; unit" Usage="metadataBuilder.AddEventMap (declaringType, eventList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="declaringType" Type="System.Reflection.Metadata.TypeDefinitionHandle" />
        <Parameter Name="eventList" Type="System.Reflection.Metadata.EventDefinitionHandle" />
      </Parameters>
      <Docs>
        <param name="declaringType">To be added.</param>
        <param name="eventList">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExportedType">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ExportedTypeHandle AddExportedType (System.Reflection.TypeAttributes attributes, System.Reflection.Metadata.StringHandle namespace, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.EntityHandle implementation, int typeDefinitionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ExportedTypeHandle AddExportedType(valuetype System.Reflection.TypeAttributes attributes, valuetype System.Reflection.Metadata.StringHandle namespace, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.EntityHandle implementation, int32 typeDefinitionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddExportedType(System.Reflection.TypeAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddExportedType (attributes As TypeAttributes, namespace As StringHandle, name As StringHandle, implementation As EntityHandle, typeDefinitionId As Integer) As ExportedTypeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ExportedTypeHandle AddExportedType(System::Reflection::TypeAttributes attributes, System::Reflection::Metadata::StringHandle namespace, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::EntityHandle implementation, int typeDefinitionId);" />
      <MemberSignature Language="F#" Value="member this.AddExportedType : System.Reflection.TypeAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.EntityHandle * int -&gt; System.Reflection.Metadata.ExportedTypeHandle" Usage="metadataBuilder.AddExportedType (attributes, namespace, name, implementation, typeDefinitionId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ExportedTypeHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="namespace" Type="System.Reflection.Metadata.StringHandle" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" />
        <Parameter Name="implementation" Type="System.Reflection.Metadata.EntityHandle" />
        <Parameter Name="typeDefinitionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="85f24-162">类型属性。</span><span class="sxs-lookup"><span data-stu-id="85f24-162">The type attributes.</span></span></param>
        <param name="namespace"><span data-ttu-id="85f24-163">类型命名空间。</span><span class="sxs-lookup"><span data-stu-id="85f24-163">The type namespace.</span></span></param>
        <param name="name"><span data-ttu-id="85f24-164">类型名称。</span><span class="sxs-lookup"><span data-stu-id="85f24-164">The type name.</span></span></param>
        <param name="implementation"><span data-ttu-id="85f24-165">实现实体句柄，可以是以下项之一：<see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />、<see cref="T:System.Reflection.Metadata.ExportedTypeHandle" /> 或 <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-165">The implementation entity handle, which can be one of the following: an <see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />, <see cref="T:System.Reflection.Metadata.ExportedTypeHandle" />, or <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />.</span></span></param>
        <param name="typeDefinitionId"><span data-ttu-id="85f24-166">类型定义 ID。</span><span class="sxs-lookup"><span data-stu-id="85f24-166">The type definition ID.</span></span></param>
        <summary><span data-ttu-id="85f24-167">添加导出类型。</span><span class="sxs-lookup"><span data-stu-id="85f24-167">Adds an exported type.</span></span></summary>
        <returns><span data-ttu-id="85f24-168">已添加的导出类型的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-168">A handle to the added exported type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85f24-169"><paramref name="implementation" /> 不具有预期的句柄类型。</span><span class="sxs-lookup"><span data-stu-id="85f24-169"><paramref name="implementation" /> doesn't have the expected handle kind.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddFieldDefinition">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.FieldDefinitionHandle AddFieldDefinition (System.Reflection.FieldAttributes attributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.FieldDefinitionHandle AddFieldDefinition(valuetype System.Reflection.FieldAttributes attributes, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.BlobHandle signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldDefinition(System.Reflection.FieldAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFieldDefinition (attributes As FieldAttributes, name As StringHandle, signature As BlobHandle) As FieldDefinitionHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::FieldDefinitionHandle AddFieldDefinition(System::Reflection::FieldAttributes attributes, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::BlobHandle signature);" />
      <MemberSignature Language="F#" Value="member this.AddFieldDefinition : System.Reflection.FieldAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.FieldDefinitionHandle" Usage="metadataBuilder.AddFieldDefinition (attributes, name, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.FieldDefinitionHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" />
        <Parameter Name="signature" Type="System.Reflection.Metadata.BlobHandle" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="85f24-170">字段属性。</span><span class="sxs-lookup"><span data-stu-id="85f24-170">The field attributes.</span></span></param>
        <param name="name"><span data-ttu-id="85f24-171">字段名。</span><span class="sxs-lookup"><span data-stu-id="85f24-171">The field name.</span></span></param>
        <param name="signature"><span data-ttu-id="85f24-172">字段签名。</span><span class="sxs-lookup"><span data-stu-id="85f24-172">The field signature.</span></span> <span data-ttu-id="85f24-173">使用 <see cref="M:System.Reflection.Metadata.Ecma335.BlobEncoder.FieldSignature" /> 构造 blob。</span><span class="sxs-lookup"><span data-stu-id="85f24-173">Use <see cref="M:System.Reflection.Metadata.Ecma335.BlobEncoder.FieldSignature" /> to construct the blob.</span></span></param>
        <summary><span data-ttu-id="85f24-174">添加字段定义。</span><span class="sxs-lookup"><span data-stu-id="85f24-174">Adds a field definition.</span></span></summary>
        <returns><span data-ttu-id="85f24-175">已添加的字段定义的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-175">A handle to the added field definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFieldLayout">
      <MemberSignature Language="C#" Value="public void AddFieldLayout (System.Reflection.Metadata.FieldDefinitionHandle field, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFieldLayout(valuetype System.Reflection.Metadata.FieldDefinitionHandle field, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldLayout(System.Reflection.Metadata.FieldDefinitionHandle,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFieldLayout (field As FieldDefinitionHandle, offset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFieldLayout(System::Reflection::Metadata::FieldDefinitionHandle field, int offset);" />
      <MemberSignature Language="F#" Value="member this.AddFieldLayout : System.Reflection.Metadata.FieldDefinitionHandle * int -&gt; unit" Usage="metadataBuilder.AddFieldLayout (field, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.Reflection.Metadata.FieldDefinitionHandle" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="field"><span data-ttu-id="85f24-176">字段定义句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-176">The field definition handle.</span></span></param>
        <param name="offset"><span data-ttu-id="85f24-177">声明类型实例中的字段的字节偏移量。</span><span class="sxs-lookup"><span data-stu-id="85f24-177">The byte offset of the field within the declaring type instance.</span></span></param>
        <summary><span data-ttu-id="85f24-178">定义字段定义的字段布局。</span><span class="sxs-lookup"><span data-stu-id="85f24-178">Defines a field layout of a field definition.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-179">必须按照与相应字段定义相同的顺序添加项。</span><span class="sxs-lookup"><span data-stu-id="85f24-179">Entries must be added in the same order as the corresponding field definitions.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFieldRelativeVirtualAddress">
      <MemberSignature Language="C#" Value="public void AddFieldRelativeVirtualAddress (System.Reflection.Metadata.FieldDefinitionHandle field, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFieldRelativeVirtualAddress(valuetype System.Reflection.Metadata.FieldDefinitionHandle field, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldRelativeVirtualAddress(System.Reflection.Metadata.FieldDefinitionHandle,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFieldRelativeVirtualAddress (field As FieldDefinitionHandle, offset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFieldRelativeVirtualAddress(System::Reflection::Metadata::FieldDefinitionHandle field, int offset);" />
      <MemberSignature Language="F#" Value="member this.AddFieldRelativeVirtualAddress : System.Reflection.Metadata.FieldDefinitionHandle * int -&gt; unit" Usage="metadataBuilder.AddFieldRelativeVirtualAddress (field, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.Reflection.Metadata.FieldDefinitionHandle" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="field"><span data-ttu-id="85f24-180">字段定义句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-180">The field definition handle.</span></span></param>
        <param name="offset"><span data-ttu-id="85f24-181">PE 映像的块中的偏移量，用于存储映射字段的初始值（通常位于 .text 部分中）。</span><span class="sxs-lookup"><span data-stu-id="85f24-181">The offset within the block in the PE image that stores initial values of mapped fields (usually in the .text section).</span></span></param>
        <summary><span data-ttu-id="85f24-182">将字段中的映射添加到存储在 PE 映像中的初始值。</span><span class="sxs-lookup"><span data-stu-id="85f24-182">Adds a mapping from a field to its initial value stored in the PE image.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-183">必须按照与相应字段定义相同的顺序添加条目。</span><span class="sxs-lookup"><span data-stu-id="85f24-183">Entires must be added in the same order as the corresponding field definitions.</span></span>

<span data-ttu-id="85f24-184">当通过将偏移量添加到块开始的虚拟地址来序列化元数据时，将计算元数据中存储的最终相对虚拟地址。</span><span class="sxs-lookup"><span data-stu-id="85f24-184">The final relative virtual address stored in the metadata is calculated when the metadata is serialized by adding the offset to the virtual address of the block start.</span></span>
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="85f24-185"><paramref name="offset" /> 为负数。</span><span class="sxs-lookup"><span data-stu-id="85f24-185"><paramref name="offset" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddGenericParameter">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.GenericParameterHandle AddGenericParameter (System.Reflection.Metadata.EntityHandle parent, System.Reflection.GenericParameterAttributes attributes, System.Reflection.Metadata.StringHandle name, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.GenericParameterHandle AddGenericParameter(valuetype System.Reflection.Metadata.EntityHandle parent, valuetype System.Reflection.GenericParameterAttributes attributes, valuetype System.Reflection.Metadata.StringHandle name, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameter(System.Reflection.Metadata.EntityHandle,System.Reflection.GenericParameterAttributes,System.Reflection.Metadata.StringHandle,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddGenericParameter (parent As EntityHandle, attributes As GenericParameterAttributes, name As StringHandle, index As Integer) As GenericParameterHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::GenericParameterHandle AddGenericParameter(System::Reflection::Metadata::EntityHandle parent, System::Reflection::GenericParameterAttributes attributes, System::Reflection::Metadata::StringHandle name, int index);" />
      <MemberSignature Language="F#" Value="member this.AddGenericParameter : System.Reflection.Metadata.EntityHandle * System.Reflection.GenericParameterAttributes * System.Reflection.Metadata.StringHandle * int -&gt; System.Reflection.Metadata.GenericParameterHandle" Usage="metadataBuilder.AddGenericParameter (parent, attributes, name, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.GenericParameterHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Reflection.Metadata.EntityHandle" />
        <Parameter Name="attributes" Type="System.Reflection.GenericParameterAttributes" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="85f24-186">父级实体句柄，可以是 <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" /> 或 <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-186">The parent entity handle, which can be either a <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" /> or <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />.</span></span></param>
        <param name="attributes"><span data-ttu-id="85f24-187">泛型参数属性。</span><span class="sxs-lookup"><span data-stu-id="85f24-187">The generic parameter attributes.</span></span></param>
        <param name="name"><span data-ttu-id="85f24-188">参数名称。</span><span class="sxs-lookup"><span data-stu-id="85f24-188">The parameter name.</span></span></param>
        <param name="index"><span data-ttu-id="85f24-189">从零开始的参数索引。</span><span class="sxs-lookup"><span data-stu-id="85f24-189">The zero-based parameter index.</span></span></param>
        <summary><span data-ttu-id="85f24-190">添加泛型参数定义。</span><span class="sxs-lookup"><span data-stu-id="85f24-190">Adds a generic parameter definition.</span></span></summary>
        <returns><span data-ttu-id="85f24-191">已添加的泛型参数的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-191">A handle to the added generic parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-192">泛型参数必须按其父实体的编码索引确定的顺序添加 (<xref:System.Reflection.Metadata.Ecma335.CodedIndex.TypeOrMethodDef(System.Reflection.Metadata.EntityHandle)?displayProperty=nameWithType>) 。</span><span class="sxs-lookup"><span data-stu-id="85f24-192">Generic parameters must be added in an order determined by the coded index of their parent entity (<xref:System.Reflection.Metadata.Ecma335.CodedIndex.TypeOrMethodDef(System.Reflection.Metadata.EntityHandle)?displayProperty=nameWithType>).</span></span>

<span data-ttu-id="85f24-193">具有相同父项的泛型参数必须按其排序 `index` 。</span><span class="sxs-lookup"><span data-stu-id="85f24-193">Generic parameters with the same parent must be ordered by their `index`.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85f24-194"><paramref name="parent" /> 不具有预期的句柄类型。</span><span class="sxs-lookup"><span data-stu-id="85f24-194"><paramref name="parent" /> doesn't have the expected handle kind.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="85f24-195"><paramref name="index" /> 大于 <see cref="F:System.UInt16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-195"><paramref name="index" /> is greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddGenericParameterConstraint">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.GenericParameterConstraintHandle AddGenericParameterConstraint (System.Reflection.Metadata.GenericParameterHandle genericParameter, System.Reflection.Metadata.EntityHandle constraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.GenericParameterConstraintHandle AddGenericParameterConstraint(valuetype System.Reflection.Metadata.GenericParameterHandle genericParameter, valuetype System.Reflection.Metadata.EntityHandle constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameterConstraint(System.Reflection.Metadata.GenericParameterHandle,System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddGenericParameterConstraint (genericParameter As GenericParameterHandle, constraint As EntityHandle) As GenericParameterConstraintHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::GenericParameterConstraintHandle AddGenericParameterConstraint(System::Reflection::Metadata::GenericParameterHandle genericParameter, System::Reflection::Metadata::EntityHandle constraint);" />
      <MemberSignature Language="F#" Value="member this.AddGenericParameterConstraint : System.Reflection.Metadata.GenericParameterHandle * System.Reflection.Metadata.EntityHandle -&gt; System.Reflection.Metadata.GenericParameterConstraintHandle" Usage="metadataBuilder.AddGenericParameterConstraint (genericParameter, constraint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.GenericParameterConstraintHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericParameter" Type="System.Reflection.Metadata.GenericParameterHandle" />
        <Parameter Name="constraint" Type="System.Reflection.Metadata.EntityHandle" />
      </Parameters>
      <Docs>
        <param name="genericParameter"><span data-ttu-id="85f24-196">要约束的泛型参数。</span><span class="sxs-lookup"><span data-stu-id="85f24-196">The generic parameter to constrain.</span></span></param>
        <param name="constraint"><span data-ttu-id="85f24-197">类型约束，可以是以下项之一：<see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /> 或 <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-197">The type constraint, which can be one of the following: a <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /> or a <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />.</span></span></param>
        <summary><span data-ttu-id="85f24-198">向泛型参数添加类型约束。</span><span class="sxs-lookup"><span data-stu-id="85f24-198">Adds a type constraint to a generic parameter.</span></span></summary>
        <returns><span data-ttu-id="85f24-199">已添加的泛型参数约束的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-199">A handle to the added generic parameter constraint.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-200">约束的添加顺序必须与对应的泛型参数的顺序相同。</span><span class="sxs-lookup"><span data-stu-id="85f24-200">Constraints must be added in the same order as the corresponding generic parameters.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85f24-201"><paramref name="genericParameter" /> 不具有预期的句柄类型。</span><span class="sxs-lookup"><span data-stu-id="85f24-201"><paramref name="genericParameter" /> doesn't have the expected handle kind.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddImportScope">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ImportScopeHandle AddImportScope (System.Reflection.Metadata.ImportScopeHandle parentScope, System.Reflection.Metadata.BlobHandle imports);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ImportScopeHandle AddImportScope(valuetype System.Reflection.Metadata.ImportScopeHandle parentScope, valuetype System.Reflection.Metadata.BlobHandle imports) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddImportScope(System.Reflection.Metadata.ImportScopeHandle,System.Reflection.Metadata.BlobHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddImportScope (parentScope As ImportScopeHandle, imports As BlobHandle) As ImportScopeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ImportScopeHandle AddImportScope(System::Reflection::Metadata::ImportScopeHandle parentScope, System::Reflection::Metadata::BlobHandle imports);" />
      <MemberSignature Language="F#" Value="member this.AddImportScope : System.Reflection.Metadata.ImportScopeHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.ImportScopeHandle" Usage="metadataBuilder.AddImportScope (parentScope, imports)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ImportScopeHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentScope" Type="System.Reflection.Metadata.ImportScopeHandle" />
        <Parameter Name="imports" Type="System.Reflection.Metadata.BlobHandle" />
      </Parameters>
      <Docs>
        <param name="parentScope"><span data-ttu-id="85f24-202">父级作用域句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-202">The parent scope handle.</span></span></param>
        <param name="imports"><span data-ttu-id="85f24-203">导入作用域句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-203">The import scope handle.</span></span></param>
        <summary><span data-ttu-id="85f24-204">添加局部作用域调试信息。</span><span class="sxs-lookup"><span data-stu-id="85f24-204">Adds local scope debug information.</span></span></summary>
        <returns><span data-ttu-id="85f24-205">已添加的导入作用域的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-205">A handle to the added import scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-206">有关 `imports`的更多信息，请参见<https://github.com/dotnet/runtime/blob/master/docs/design/specs/PortablePdb-Metadata.md#imports-blob>。</span><span class="sxs-lookup"><span data-stu-id="85f24-206">For more information about `imports`, see <https://github.com/dotnet/runtime/blob/master/docs/design/specs/PortablePdb-Metadata.md#imports-blob>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInterfaceImplementation">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.InterfaceImplementationHandle AddInterfaceImplementation (System.Reflection.Metadata.TypeDefinitionHandle type, System.Reflection.Metadata.EntityHandle implementedInterface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.InterfaceImplementationHandle AddInterfaceImplementation(valuetype System.Reflection.Metadata.TypeDefinitionHandle type, valuetype System.Reflection.Metadata.EntityHandle implementedInterface) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddInterfaceImplementation(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddInterfaceImplementation (type As TypeDefinitionHandle, implementedInterface As EntityHandle) As InterfaceImplementationHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::InterfaceImplementationHandle AddInterfaceImplementation(System::Reflection::Metadata::TypeDefinitionHandle type, System::Reflection::Metadata::EntityHandle implementedInterface);" />
      <MemberSignature Language="F#" Value="member this.AddInterfaceImplementation : System.Reflection.Metadata.TypeDefinitionHandle * System.Reflection.Metadata.EntityHandle -&gt; System.Reflection.Metadata.InterfaceImplementationHandle" Usage="metadataBuilder.AddInterfaceImplementation (type, implementedInterface)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.InterfaceImplementationHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Reflection.Metadata.TypeDefinitionHandle" />
        <Parameter Name="implementedInterface" Type="System.Reflection.Metadata.EntityHandle" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="85f24-207">实现接口的类型。</span><span class="sxs-lookup"><span data-stu-id="85f24-207">The type implementing the interface.</span></span></param>
        <param name="implementedInterface"><span data-ttu-id="85f24-208">要实现的接口，可以是以下项之一：<see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /> 或 <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-208">The interface being implemented, which can be one of the following: <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, or <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />.</span></span></param>
        <summary><span data-ttu-id="85f24-209">将接口实现添加到类型。</span><span class="sxs-lookup"><span data-stu-id="85f24-209">Adds an interface implementation to a type.</span></span></summary>
        <returns><span data-ttu-id="85f24-210">已添加的接口实现的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-210">A handle to the added interface implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-211">接口实现的添加顺序必须与实现接口的相应类型定义的顺序相同。</span><span class="sxs-lookup"><span data-stu-id="85f24-211">Interface implementations must be added in the same order as the corresponding type definitions implementing the interface.</span></span>

<span data-ttu-id="85f24-212">如果某个类型实现多个接口，则必须按其编码索引确定的顺序添加相应的项 (<xref:System.Reflection.Metadata.Ecma335.CodedIndex.TypeDefOrRefOrSpec(System.Reflection.Metadata.EntityHandle)?displayProperty=nameWithType>) 。</span><span class="sxs-lookup"><span data-stu-id="85f24-212">If a type implements multiple interfaces, the corresponding entries must be added in the order determined by their coded indices (<xref:System.Reflection.Metadata.Ecma335.CodedIndex.TypeDefOrRefOrSpec(System.Reflection.Metadata.EntityHandle)?displayProperty=nameWithType>).</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85f24-213"><paramref name="implementedInterface" /> 不具有预期的句柄类型。</span><span class="sxs-lookup"><span data-stu-id="85f24-213"><paramref name="implementedInterface" /> doesn't have the expected handle kind.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddLocalConstant">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.LocalConstantHandle AddLocalConstant (System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.LocalConstantHandle AddLocalConstant(valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.BlobHandle signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalConstant(System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLocalConstant (name As StringHandle, signature As BlobHandle) As LocalConstantHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::LocalConstantHandle AddLocalConstant(System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::BlobHandle signature);" />
      <MemberSignature Language="F#" Value="member this.AddLocalConstant : System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.LocalConstantHandle" Usage="metadataBuilder.AddLocalConstant (name, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.LocalConstantHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" />
        <Parameter Name="signature" Type="System.Reflection.Metadata.BlobHandle" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="85f24-214">变量名。</span><span class="sxs-lookup"><span data-stu-id="85f24-214">The name of the variable.</span></span></param>
        <param name="signature"><span data-ttu-id="85f24-215">LocalConstantSig blob。</span><span class="sxs-lookup"><span data-stu-id="85f24-215">The LocalConstantSig blob.</span></span></param>
        <summary><span data-ttu-id="85f24-216">添加局部常量调试信息。</span><span class="sxs-lookup"><span data-stu-id="85f24-216">Adds local constant debug information.</span></span></summary>
        <returns><span data-ttu-id="85f24-217">已添加的局部常量的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-217">A handle to the added local constant.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-218">有关的详细信息 `signature` ，请参阅 GitHub 上的： [LocalConstantSig Blob](https://github.com/dotnet/runtime/blob/master/docs/design/specs/PortablePdb-Metadata.md#localconstantsig-blob) 。</span><span class="sxs-lookup"><span data-stu-id="85f24-218">For more information about `signature`, see: [LocalConstantSig Blob](https://github.com/dotnet/runtime/blob/master/docs/design/specs/PortablePdb-Metadata.md#localconstantsig-blob) on GitHub.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLocalScope">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.LocalScopeHandle AddLocalScope (System.Reflection.Metadata.MethodDefinitionHandle method, System.Reflection.Metadata.ImportScopeHandle importScope, System.Reflection.Metadata.LocalVariableHandle variableList, System.Reflection.Metadata.LocalConstantHandle constantList, int startOffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.LocalScopeHandle AddLocalScope(valuetype System.Reflection.Metadata.MethodDefinitionHandle method, valuetype System.Reflection.Metadata.ImportScopeHandle importScope, valuetype System.Reflection.Metadata.LocalVariableHandle variableList, valuetype System.Reflection.Metadata.LocalConstantHandle constantList, int32 startOffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalScope(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.Metadata.ImportScopeHandle,System.Reflection.Metadata.LocalVariableHandle,System.Reflection.Metadata.LocalConstantHandle,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLocalScope (method As MethodDefinitionHandle, importScope As ImportScopeHandle, variableList As LocalVariableHandle, constantList As LocalConstantHandle, startOffset As Integer, length As Integer) As LocalScopeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::LocalScopeHandle AddLocalScope(System::Reflection::Metadata::MethodDefinitionHandle method, System::Reflection::Metadata::ImportScopeHandle importScope, System::Reflection::Metadata::LocalVariableHandle variableList, System::Reflection::Metadata::LocalConstantHandle constantList, int startOffset, int length);" />
      <MemberSignature Language="F#" Value="member this.AddLocalScope : System.Reflection.Metadata.MethodDefinitionHandle * System.Reflection.Metadata.ImportScopeHandle * System.Reflection.Metadata.LocalVariableHandle * System.Reflection.Metadata.LocalConstantHandle * int * int -&gt; System.Reflection.Metadata.LocalScopeHandle" Usage="metadataBuilder.AddLocalScope (method, importScope, variableList, constantList, startOffset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.LocalScopeHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.Metadata.MethodDefinitionHandle" />
        <Parameter Name="importScope" Type="System.Reflection.Metadata.ImportScopeHandle" />
        <Parameter Name="variableList" Type="System.Reflection.Metadata.LocalVariableHandle" />
        <Parameter Name="constantList" Type="System.Reflection.Metadata.LocalConstantHandle" />
        <Parameter Name="startOffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="85f24-219">包含的方法。</span><span class="sxs-lookup"><span data-stu-id="85f24-219">The containing method.</span></span></param>
        <param name="importScope"><span data-ttu-id="85f24-220">关联的导入作用域的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-220">The handle of the associated import scope.</span></span></param>
        <param name="variableList"><span data-ttu-id="85f24-221">如果作用域声明变量，请将其设置为第一个变量的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-221">If the scope declares variables, set this to the handle of the first one.</span></span> <span data-ttu-id="85f24-222">否则，请将其设置为下一个作用域定义所声明的第一个变量的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-222">Otherwise, set this to the handle of the first variable declared by the next scope definition.</span></span> <span data-ttu-id="85f24-223">如果任何作用域都未定义任何变量，则设置为 <see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.LocalVariableHandle(1)" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-223">If no scope defines any variables, <see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.LocalVariableHandle(1)" />.</span></span></param>
        <param name="constantList"><span data-ttu-id="85f24-224">如果作用域声明常量，则将其设置为第一个常量的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-224">If the scope declares constants, set this the handle of the first one.</span></span> <span data-ttu-id="85f24-225">否则，请将其设置为下一个作用域定义所声明的第一个常量的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-225">Otherwise, set this to the handle of the first constant declared by the next scope definition.</span></span> <span data-ttu-id="85f24-226">如果任何作用域都未定义任何常量，则设置为 <see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.LocalConstantHandle(1)" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-226">If no scope defines any constants, <see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.LocalConstantHandle(1)" />.</span></span></param>
        <param name="startOffset"><span data-ttu-id="85f24-227">作用域所涵盖的第一个指令的偏移量。</span><span class="sxs-lookup"><span data-stu-id="85f24-227">The offset of the first instruction covered by the scope.</span></span></param>
        <param name="length"><span data-ttu-id="85f24-228">作用域的长度（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="85f24-228">The length (in bytes) of the scope.</span></span></param>
        <summary><span data-ttu-id="85f24-229">添加局部作用域调试信息。</span><span class="sxs-lookup"><span data-stu-id="85f24-229">Adds local scope debug information.</span></span></summary>
        <returns><span data-ttu-id="85f24-230">已添加的局部作用域的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-230">A handle to the added local scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-231">应按照与相应方法定义相同的顺序添加本地范围。</span><span class="sxs-lookup"><span data-stu-id="85f24-231">Local scopes should be added in the same order as the corresponding method definition.</span></span>

<span data-ttu-id="85f24-232">在方法中，应按升序排序， `startOffset` 然后按降序排序 `length` 。</span><span class="sxs-lookup"><span data-stu-id="85f24-232">Within a method, they should be ordered by ascending `startOffset` and then by descending `length`.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLocalVariable">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.LocalVariableHandle AddLocalVariable (System.Reflection.Metadata.LocalVariableAttributes attributes, int index, System.Reflection.Metadata.StringHandle name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.LocalVariableHandle AddLocalVariable(valuetype System.Reflection.Metadata.LocalVariableAttributes attributes, int32 index, valuetype System.Reflection.Metadata.StringHandle name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalVariable(System.Reflection.Metadata.LocalVariableAttributes,System.Int32,System.Reflection.Metadata.StringHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLocalVariable (attributes As LocalVariableAttributes, index As Integer, name As StringHandle) As LocalVariableHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::LocalVariableHandle AddLocalVariable(System::Reflection::Metadata::LocalVariableAttributes attributes, int index, System::Reflection::Metadata::StringHandle name);" />
      <MemberSignature Language="F#" Value="member this.AddLocalVariable : System.Reflection.Metadata.LocalVariableAttributes * int * System.Reflection.Metadata.StringHandle -&gt; System.Reflection.Metadata.LocalVariableHandle" Usage="metadataBuilder.AddLocalVariable (attributes, index, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.LocalVariableHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.Metadata.LocalVariableAttributes" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="85f24-233">局部变量属性。</span><span class="sxs-lookup"><span data-stu-id="85f24-233">The local variable attributes.</span></span></param>
        <param name="index"><span data-ttu-id="85f24-234">本地签名中局部变量的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="85f24-234">The zero-base index of the local variable in the local signature.</span></span></param>
        <param name="name"><span data-ttu-id="85f24-235">变量名。</span><span class="sxs-lookup"><span data-stu-id="85f24-235">The name of the variable.</span></span></param>
        <summary><span data-ttu-id="85f24-236">添加局部变量调试信息。</span><span class="sxs-lookup"><span data-stu-id="85f24-236">Adds local variable debug information.</span></span></summary>
        <returns><span data-ttu-id="85f24-237">已添加的局部变量的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-237">A handle to the added local variable.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="85f24-238"><paramref name="index" /> 大于 <see cref="F:System.UInt16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-238"><paramref name="index" /> is greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddManifestResource">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ManifestResourceHandle AddManifestResource (System.Reflection.ManifestResourceAttributes attributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.EntityHandle implementation, uint offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ManifestResourceHandle AddManifestResource(valuetype System.Reflection.ManifestResourceAttributes attributes, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.EntityHandle implementation, unsigned int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddManifestResource(System.Reflection.ManifestResourceAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddManifestResource (attributes As ManifestResourceAttributes, name As StringHandle, implementation As EntityHandle, offset As UInteger) As ManifestResourceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ManifestResourceHandle AddManifestResource(System::Reflection::ManifestResourceAttributes attributes, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::EntityHandle implementation, System::UInt32 offset);" />
      <MemberSignature Language="F#" Value="member this.AddManifestResource : System.Reflection.ManifestResourceAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.EntityHandle * uint32 -&gt; System.Reflection.Metadata.ManifestResourceHandle" Usage="metadataBuilder.AddManifestResource (attributes, name, implementation, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ManifestResourceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.ManifestResourceAttributes" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" />
        <Parameter Name="implementation" Type="System.Reflection.Metadata.EntityHandle" />
        <Parameter Name="offset" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="85f24-239">清单资源属性。</span><span class="sxs-lookup"><span data-stu-id="85f24-239">The manifest resource attributes.</span></span></param>
        <param name="name"><span data-ttu-id="85f24-240">清单资源的名称。</span><span class="sxs-lookup"><span data-stu-id="85f24-240">The name of the manifest resource.</span></span></param>
        <param name="implementation"><span data-ttu-id="85f24-241">实现实体句柄，可以是以下项之一：<see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />、<see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" /> 或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-241">The implementation entity handle, which can be one of the following: <see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />, or <see langword="null" />.</span></span></param>
        <param name="offset"><span data-ttu-id="85f24-242">指定此资源记录开始处的引用文件内的字节偏移量。</span><span class="sxs-lookup"><span data-stu-id="85f24-242">Specifies the byte offset within the referenced file at which this resource record begins.</span></span></param>
        <summary><span data-ttu-id="85f24-243">添加清单资源。</span><span class="sxs-lookup"><span data-stu-id="85f24-243">Adds a manifest resource.</span></span></summary>
        <returns><span data-ttu-id="85f24-244">已添加的清单资源的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-244">A handle to the added manifest resource.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85f24-245"><paramref name="implementation" /> 不具有预期的句柄类型。</span><span class="sxs-lookup"><span data-stu-id="85f24-245"><paramref name="implementation" /> doesn't have the expected handle kind.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMarshallingDescriptor">
      <MemberSignature Language="C#" Value="public void AddMarshallingDescriptor (System.Reflection.Metadata.EntityHandle parent, System.Reflection.Metadata.BlobHandle descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMarshallingDescriptor(valuetype System.Reflection.Metadata.EntityHandle parent, valuetype System.Reflection.Metadata.BlobHandle descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMarshallingDescriptor(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMarshallingDescriptor (parent As EntityHandle, descriptor As BlobHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMarshallingDescriptor(System::Reflection::Metadata::EntityHandle parent, System::Reflection::Metadata::BlobHandle descriptor);" />
      <MemberSignature Language="F#" Value="member this.AddMarshallingDescriptor : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.BlobHandle -&gt; unit" Usage="metadataBuilder.AddMarshallingDescriptor (parent, descriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Reflection.Metadata.EntityHandle" />
        <Parameter Name="descriptor" Type="System.Reflection.Metadata.BlobHandle" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="85f24-246">父级实体句柄，可以是以下项之一：<see cref="T:System.Reflection.Metadata.ParameterHandle" /> 或 <see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-246">The parent entity handle, which can be one of the following: <see cref="T:System.Reflection.Metadata.ParameterHandle" /> or <see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />.</span></span></param>
        <param name="descriptor"><span data-ttu-id="85f24-247">描述符 blob。</span><span class="sxs-lookup"><span data-stu-id="85f24-247">The descriptor blob.</span></span></param>
        <summary><span data-ttu-id="85f24-248">向字段或参数添加封送信息。</span><span class="sxs-lookup"><span data-stu-id="85f24-248">Adds marshalling information to a field or a parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-249">可以按任意顺序添加条目。</span><span class="sxs-lookup"><span data-stu-id="85f24-249">Entries may be added in any order.</span></span> <span data-ttu-id="85f24-250">序列化时，该表会自动进行排序。</span><span class="sxs-lookup"><span data-stu-id="85f24-250">The table is automatically sorted when serialized.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85f24-251"><paramref name="parent" /> 不具有预期的句柄类型。</span><span class="sxs-lookup"><span data-stu-id="85f24-251"><paramref name="parent" /> doesn't have the expected handle kind.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMemberReference">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.MemberReferenceHandle AddMemberReference (System.Reflection.Metadata.EntityHandle parent, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.MemberReferenceHandle AddMemberReference(valuetype System.Reflection.Metadata.EntityHandle parent, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.BlobHandle signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMemberReference(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMemberReference (parent As EntityHandle, name As StringHandle, signature As BlobHandle) As MemberReferenceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::MemberReferenceHandle AddMemberReference(System::Reflection::Metadata::EntityHandle parent, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::BlobHandle signature);" />
      <MemberSignature Language="F#" Value="member this.AddMemberReference : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.MemberReferenceHandle" Usage="metadataBuilder.AddMemberReference (parent, name, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MemberReferenceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Reflection.Metadata.EntityHandle" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" />
        <Parameter Name="signature" Type="System.Reflection.Metadata.BlobHandle" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="85f24-252">包含的实体，可以是以下项之一：<see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />、<see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />、<see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> 或 <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-252">The containing entity, which can be one of the following: <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, <see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />, <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />, or <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />.</span></span></param>
        <param name="name"><span data-ttu-id="85f24-253">成员名称。</span><span class="sxs-lookup"><span data-stu-id="85f24-253">The member name.</span></span></param>
        <param name="signature"><span data-ttu-id="85f24-254">成员签名。</span><span class="sxs-lookup"><span data-stu-id="85f24-254">The member signature.</span></span></param>
        <summary><span data-ttu-id="85f24-255">添加 MemberRef 表行。</span><span class="sxs-lookup"><span data-stu-id="85f24-255">Adds a MemberRef table row.</span></span></summary>
        <returns><span data-ttu-id="85f24-256">已添加的成员引用的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-256">A handle to the added member reference.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85f24-257"><paramref name="parent" /> 不具有预期的句柄类型。</span><span class="sxs-lookup"><span data-stu-id="85f24-257"><paramref name="parent" /> doesn't have the expected handle kind.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMethodDebugInformation">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.MethodDebugInformationHandle AddMethodDebugInformation (System.Reflection.Metadata.DocumentHandle document, System.Reflection.Metadata.BlobHandle sequencePoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.MethodDebugInformationHandle AddMethodDebugInformation(valuetype System.Reflection.Metadata.DocumentHandle document, valuetype System.Reflection.Metadata.BlobHandle sequencePoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDebugInformation(System.Reflection.Metadata.DocumentHandle,System.Reflection.Metadata.BlobHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMethodDebugInformation (document As DocumentHandle, sequencePoints As BlobHandle) As MethodDebugInformationHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::MethodDebugInformationHandle AddMethodDebugInformation(System::Reflection::Metadata::DocumentHandle document, System::Reflection::Metadata::BlobHandle sequencePoints);" />
      <MemberSignature Language="F#" Value="member this.AddMethodDebugInformation : System.Reflection.Metadata.DocumentHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.MethodDebugInformationHandle" Usage="metadataBuilder.AddMethodDebugInformation (document, sequencePoints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MethodDebugInformationHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Reflection.Metadata.DocumentHandle" />
        <Parameter Name="sequencePoints" Type="System.Reflection.Metadata.BlobHandle" />
      </Parameters>
      <Docs>
        <param name="document"><span data-ttu-id="85f24-258">如果方法具有序列点或跨越多个文档，则为单个文档的句柄，其中包含方法的所有序列点；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-258">The handle of a single document containing all sequence points of the method, or <see langword="null" /> if the method doesn't have sequence points or spans multiple documents.</span></span></param>
        <param name="sequencePoints"><span data-ttu-id="85f24-259">如果方法具有序列点，则为序列点 blob；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-259">The sequence Points blob, or <see langword="null" /> if the method doesn't have sequence points.</span></span></param>
        <summary><span data-ttu-id="85f24-260">添加方法调试信息。</span><span class="sxs-lookup"><span data-stu-id="85f24-260">Adds method debug information.</span></span></summary>
        <returns><span data-ttu-id="85f24-261">已添加的方法调试信息的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-261">A handle to the added method debug information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-262">有关的详细信息 `sequencePoints` ，请参阅 GitHub 上的： [序列点 Blob](https://github.com/dotnet/runtime/blob/master/docs/design/specs/PortablePdb-Metadata.md#sequence-points-blob) 。</span><span class="sxs-lookup"><span data-stu-id="85f24-262">For more information about `sequencePoints`, see: [Sequence Points Blob](https://github.com/dotnet/runtime/blob/master/docs/design/specs/PortablePdb-Metadata.md#sequence-points-blob) on GitHub.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMethodDefinition">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.MethodDefinitionHandle AddMethodDefinition (System.Reflection.MethodAttributes attributes, System.Reflection.MethodImplAttributes implAttributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle signature, int bodyOffset, System.Reflection.Metadata.ParameterHandle parameterList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.MethodDefinitionHandle AddMethodDefinition(valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.MethodImplAttributes implAttributes, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.BlobHandle signature, int32 bodyOffset, valuetype System.Reflection.Metadata.ParameterHandle parameterList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDefinition(System.Reflection.MethodAttributes,System.Reflection.MethodImplAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Int32,System.Reflection.Metadata.ParameterHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMethodDefinition (attributes As MethodAttributes, implAttributes As MethodImplAttributes, name As StringHandle, signature As BlobHandle, bodyOffset As Integer, parameterList As ParameterHandle) As MethodDefinitionHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::MethodDefinitionHandle AddMethodDefinition(System::Reflection::MethodAttributes attributes, System::Reflection::MethodImplAttributes implAttributes, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::BlobHandle signature, int bodyOffset, System::Reflection::Metadata::ParameterHandle parameterList);" />
      <MemberSignature Language="F#" Value="member this.AddMethodDefinition : System.Reflection.MethodAttributes * System.Reflection.MethodImplAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle * int * System.Reflection.Metadata.ParameterHandle -&gt; System.Reflection.Metadata.MethodDefinitionHandle" Usage="metadataBuilder.AddMethodDefinition (attributes, implAttributes, name, signature, bodyOffset, parameterList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MethodDefinitionHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="implAttributes" Type="System.Reflection.MethodImplAttributes" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" />
        <Parameter Name="signature" Type="System.Reflection.Metadata.BlobHandle" />
        <Parameter Name="bodyOffset" Type="System.Int32" />
        <Parameter Name="parameterList" Type="System.Reflection.Metadata.ParameterHandle" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="85f24-263">方法属性。</span><span class="sxs-lookup"><span data-stu-id="85f24-263">The method attributes.</span></span></param>
        <param name="implAttributes"><span data-ttu-id="85f24-264">方法实现属性。</span><span class="sxs-lookup"><span data-stu-id="85f24-264">The method implementation attributes.</span></span></param>
        <param name="name"><span data-ttu-id="85f24-265">方法名。</span><span class="sxs-lookup"><span data-stu-id="85f24-265">The method name.</span></span></param>
        <param name="signature"><span data-ttu-id="85f24-266">方法签名。</span><span class="sxs-lookup"><span data-stu-id="85f24-266">The method signature.</span></span></param>
        <param name="bodyOffset"><span data-ttu-id="85f24-267">如果该方法具有主体，则为 PE 映像中存储方法主体（IL 流）的块内的偏移量；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="85f24-267">Offset within the block in the PE image that stores method bodies (the IL stream), or -1 if the method doesn't have a body.</span></span></param>
        <param name="parameterList"><span data-ttu-id="85f24-268">如果方法在 Params 表中声明参数，请将其设置为第一个参数的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-268">If the method declares parameters in the Params table, set this to the handle of the first one.</span></span> <span data-ttu-id="85f24-269">否则，请将其设置为下一个方法定义所声明的第一个参数的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-269">Otherwise, set this to the handle of the first parameter declared by the next method definition.</span></span> <span data-ttu-id="85f24-270">如果未在模块中声明任何参数，则为 <see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.ParameterHandle(1)" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-270">If no parameters are declared in the module, <see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.ParameterHandle(1)" />.</span></span></param>
        <summary><span data-ttu-id="85f24-271">添加方法定义。</span><span class="sxs-lookup"><span data-stu-id="85f24-271">Adds a method definition.</span></span></summary>
        <returns><span data-ttu-id="85f24-272">已添加的方法定义的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-272">A handle to the added method definition.</span></span></returns>
        <remarks><span data-ttu-id="85f24-273">当通过将偏移量添加到块开头的虚拟地址来序列化元数据时，将计算元数据中存储的最终相对虚拟地址。</span><span class="sxs-lookup"><span data-stu-id="85f24-273">The final relative virtual address stored in the metadata is calculated when the metadata is serialized by adding the offset to the virtual address of the beginning of the block.</span></span></remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="85f24-274"><paramref name="bodyOffset" /> 小于 -1。</span><span class="sxs-lookup"><span data-stu-id="85f24-274"><paramref name="bodyOffset" /> is less than -1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMethodImplementation">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.MethodImplementationHandle AddMethodImplementation (System.Reflection.Metadata.TypeDefinitionHandle type, System.Reflection.Metadata.EntityHandle methodBody, System.Reflection.Metadata.EntityHandle methodDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.MethodImplementationHandle AddMethodImplementation(valuetype System.Reflection.Metadata.TypeDefinitionHandle type, valuetype System.Reflection.Metadata.EntityHandle methodBody, valuetype System.Reflection.Metadata.EntityHandle methodDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImplementation(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMethodImplementation (type As TypeDefinitionHandle, methodBody As EntityHandle, methodDeclaration As EntityHandle) As MethodImplementationHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::MethodImplementationHandle AddMethodImplementation(System::Reflection::Metadata::TypeDefinitionHandle type, System::Reflection::Metadata::EntityHandle methodBody, System::Reflection::Metadata::EntityHandle methodDeclaration);" />
      <MemberSignature Language="F#" Value="member this.AddMethodImplementation : System.Reflection.Metadata.TypeDefinitionHandle * System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.EntityHandle -&gt; System.Reflection.Metadata.MethodImplementationHandle" Usage="metadataBuilder.AddMethodImplementation (type, methodBody, methodDeclaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MethodImplementationHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Reflection.Metadata.TypeDefinitionHandle" />
        <Parameter Name="methodBody" Type="System.Reflection.Metadata.EntityHandle" />
        <Parameter Name="methodDeclaration" Type="System.Reflection.Metadata.EntityHandle" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="85f24-275">类型定义。</span><span class="sxs-lookup"><span data-stu-id="85f24-275">The type definition.</span></span></param>
        <param name="methodBody"><span data-ttu-id="85f24-276">方法主体实体句柄，可以是以下项之一：<see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> 或 <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-276">The method body entity handle, which can be one of the following: <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> or <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />.</span></span></param>
        <param name="methodDeclaration"><span data-ttu-id="85f24-277">方法声明实体句柄，可以是以下项之一：<see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> 或 <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-277">The method declaration entity handle, which can be one of the following: <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> or <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />.</span></span></param>
        <summary><span data-ttu-id="85f24-278">定义类型中方法声明的实现。</span><span class="sxs-lookup"><span data-stu-id="85f24-278">Defines an implementation for a method declaration within a type.</span></span></summary>
        <returns><span data-ttu-id="85f24-279">已添加的方法实现的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-279">A handle to the added method implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-280">必须按照与相应类型定义相同的顺序添加方法实现。</span><span class="sxs-lookup"><span data-stu-id="85f24-280">Method implementations must be added in the same order as the corresponding type definitions.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85f24-281"><paramref name="methodBody" /> 或 <paramref name="methodDeclaration" /> 不具有预期的句柄类型。</span><span class="sxs-lookup"><span data-stu-id="85f24-281"><paramref name="methodBody" /> or <paramref name="methodDeclaration" /> doesn't have the expected handle kind.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMethodImport">
      <MemberSignature Language="C#" Value="public void AddMethodImport (System.Reflection.Metadata.MethodDefinitionHandle method, System.Reflection.MethodImportAttributes attributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.ModuleReferenceHandle module);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMethodImport(valuetype System.Reflection.Metadata.MethodDefinitionHandle method, valuetype System.Reflection.MethodImportAttributes attributes, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.ModuleReferenceHandle module) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImport(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.MethodImportAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.ModuleReferenceHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMethodImport (method As MethodDefinitionHandle, attributes As MethodImportAttributes, name As StringHandle, module As ModuleReferenceHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMethodImport(System::Reflection::Metadata::MethodDefinitionHandle method, System::Reflection::MethodImportAttributes attributes, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::ModuleReferenceHandle module);" />
      <MemberSignature Language="F#" Value="member this.AddMethodImport : System.Reflection.Metadata.MethodDefinitionHandle * System.Reflection.MethodImportAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.ModuleReferenceHandle -&gt; unit" Usage="metadataBuilder.AddMethodImport (method, attributes, name, module)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.Metadata.MethodDefinitionHandle" />
        <Parameter Name="attributes" Type="System.Reflection.MethodImportAttributes" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" />
        <Parameter Name="module" Type="System.Reflection.Metadata.ModuleReferenceHandle" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="85f24-282">方法定义句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-282">The method definition handle.</span></span></param>
        <param name="attributes"><span data-ttu-id="85f24-283">方法导入属性。</span><span class="sxs-lookup"><span data-stu-id="85f24-283">The method import attributes.</span></span></param>
        <param name="name"><span data-ttu-id="85f24-284">非托管的方法名称。</span><span class="sxs-lookup"><span data-stu-id="85f24-284">The unmanaged method name.</span></span></param>
        <param name="module"><span data-ttu-id="85f24-285">包含非托管方法的模块。</span><span class="sxs-lookup"><span data-stu-id="85f24-285">The module containing the unmanaged method.</span></span></param>
        <summary><span data-ttu-id="85f24-286">将导入信息添加到方法定义。</span><span class="sxs-lookup"><span data-stu-id="85f24-286">Adds import information to a method definition.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-287">方法导入的添加顺序必须与对应的方法定义的顺序相同。</span><span class="sxs-lookup"><span data-stu-id="85f24-287">Method imports must be added in the same order as the corresponding method definitions.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMethodSemantics">
      <MemberSignature Language="C#" Value="public void AddMethodSemantics (System.Reflection.Metadata.EntityHandle association, System.Reflection.MethodSemanticsAttributes semantics, System.Reflection.Metadata.MethodDefinitionHandle methodDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMethodSemantics(valuetype System.Reflection.Metadata.EntityHandle association, valuetype System.Reflection.MethodSemanticsAttributes semantics, valuetype System.Reflection.Metadata.MethodDefinitionHandle methodDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSemantics(System.Reflection.Metadata.EntityHandle,System.Reflection.MethodSemanticsAttributes,System.Reflection.Metadata.MethodDefinitionHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMethodSemantics (association As EntityHandle, semantics As MethodSemanticsAttributes, methodDefinition As MethodDefinitionHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMethodSemantics(System::Reflection::Metadata::EntityHandle association, System::Reflection::MethodSemanticsAttributes semantics, System::Reflection::Metadata::MethodDefinitionHandle methodDefinition);" />
      <MemberSignature Language="F#" Value="member this.AddMethodSemantics : System.Reflection.Metadata.EntityHandle * System.Reflection.MethodSemanticsAttributes * System.Reflection.Metadata.MethodDefinitionHandle -&gt; unit" Usage="metadataBuilder.AddMethodSemantics (association, semantics, methodDefinition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="association" Type="System.Reflection.Metadata.EntityHandle" />
        <Parameter Name="semantics" Type="System.Reflection.MethodSemanticsAttributes" />
        <Parameter Name="methodDefinition" Type="System.Reflection.Metadata.MethodDefinitionHandle" />
      </Parameters>
      <Docs>
        <param name="association"><span data-ttu-id="85f24-288">关联实体句柄，可以是以下项之一：<see cref="T:System.Reflection.Metadata.EventDefinitionHandle" /> 或 <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-288">The association entity handle, which can be one of the following: <see cref="T:System.Reflection.Metadata.EventDefinitionHandle" /> or <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />.</span></span></param>
        <param name="semantics"><span data-ttu-id="85f24-289">方法语义特性。</span><span class="sxs-lookup"><span data-stu-id="85f24-289">The method semantics attributes.</span></span></param>
        <param name="methodDefinition"><span data-ttu-id="85f24-290">方法定义。</span><span class="sxs-lookup"><span data-stu-id="85f24-290">The method definition.</span></span></param>
        <summary><span data-ttu-id="85f24-291">将方法（getter、setter、adder 等）与属性或事件关联。</span><span class="sxs-lookup"><span data-stu-id="85f24-291">Associates a method (a getter, a setter, an adder, etc.) with a property or an event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-292">可以按任意顺序添加条目。</span><span class="sxs-lookup"><span data-stu-id="85f24-292">Entries may be added in any order.</span></span> <span data-ttu-id="85f24-293">序列化时，该表会自动进行排序。</span><span class="sxs-lookup"><span data-stu-id="85f24-293">The table is automatically sorted when serialized.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85f24-294"><paramref name="association" /> 不具有预期的句柄类型。</span><span class="sxs-lookup"><span data-stu-id="85f24-294"><paramref name="association" /> doesn't have the expected handle kind.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMethodSpecification">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.MethodSpecificationHandle AddMethodSpecification (System.Reflection.Metadata.EntityHandle method, System.Reflection.Metadata.BlobHandle instantiation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.MethodSpecificationHandle AddMethodSpecification(valuetype System.Reflection.Metadata.EntityHandle method, valuetype System.Reflection.Metadata.BlobHandle instantiation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSpecification(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMethodSpecification (method As EntityHandle, instantiation As BlobHandle) As MethodSpecificationHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::MethodSpecificationHandle AddMethodSpecification(System::Reflection::Metadata::EntityHandle method, System::Reflection::Metadata::BlobHandle instantiation);" />
      <MemberSignature Language="F#" Value="member this.AddMethodSpecification : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.MethodSpecificationHandle" Usage="metadataBuilder.AddMethodSpecification (method, instantiation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MethodSpecificationHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.Metadata.EntityHandle" />
        <Parameter Name="instantiation" Type="System.Reflection.Metadata.BlobHandle" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="85f24-295">泛型方法实体句柄，可以是以下项之一：<see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> 或 <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-295">The generic method entity handle, which can be one of the following: <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> or <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />.</span></span></param>
        <param name="instantiation"><span data-ttu-id="85f24-296">实例化 blob 对方法的泛型参数进行编码。</span><span class="sxs-lookup"><span data-stu-id="85f24-296">The instantiation blob encoding the generic arguments of the method.</span></span></param>
        <summary><span data-ttu-id="85f24-297">添加方法规范（实例化）。</span><span class="sxs-lookup"><span data-stu-id="85f24-297">Adds a method specification (an instantiation).</span></span></summary>
        <returns><span data-ttu-id="85f24-298">已添加的方法规范的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-298">A handle to the added method specification.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85f24-299"><paramref name="method" /> 不具有预期的句柄类型。</span><span class="sxs-lookup"><span data-stu-id="85f24-299"><paramref name="method" /> doesn't have the expected handle kind.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ModuleDefinitionHandle AddModule (int generation, System.Reflection.Metadata.StringHandle moduleName, System.Reflection.Metadata.GuidHandle mvid, System.Reflection.Metadata.GuidHandle encId, System.Reflection.Metadata.GuidHandle encBaseId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ModuleDefinitionHandle AddModule(int32 generation, valuetype System.Reflection.Metadata.StringHandle moduleName, valuetype System.Reflection.Metadata.GuidHandle mvid, valuetype System.Reflection.Metadata.GuidHandle encId, valuetype System.Reflection.Metadata.GuidHandle encBaseId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModule(System.Int32,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.GuidHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddModule (generation As Integer, moduleName As StringHandle, mvid As GuidHandle, encId As GuidHandle, encBaseId As GuidHandle) As ModuleDefinitionHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ModuleDefinitionHandle AddModule(int generation, System::Reflection::Metadata::StringHandle moduleName, System::Reflection::Metadata::GuidHandle mvid, System::Reflection::Metadata::GuidHandle encId, System::Reflection::Metadata::GuidHandle encBaseId);" />
      <MemberSignature Language="F#" Value="member this.AddModule : int * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.GuidHandle * System.Reflection.Metadata.GuidHandle * System.Reflection.Metadata.GuidHandle -&gt; System.Reflection.Metadata.ModuleDefinitionHandle" Usage="metadataBuilder.AddModule (generation, moduleName, mvid, encId, encBaseId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ModuleDefinitionHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generation" Type="System.Int32" />
        <Parameter Name="moduleName" Type="System.Reflection.Metadata.StringHandle" />
        <Parameter Name="mvid" Type="System.Reflection.Metadata.GuidHandle" />
        <Parameter Name="encId" Type="System.Reflection.Metadata.GuidHandle" />
        <Parameter Name="encBaseId" Type="System.Reflection.Metadata.GuidHandle" />
      </Parameters>
      <Docs>
        <param name="generation">To be added.</param>
        <param name="moduleName">To be added.</param>
        <param name="mvid">To be added.</param>
        <param name="encId">To be added.</param>
        <param name="encBaseId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddModuleReference">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ModuleReferenceHandle AddModuleReference (System.Reflection.Metadata.StringHandle moduleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ModuleReferenceHandle AddModuleReference(valuetype System.Reflection.Metadata.StringHandle moduleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModuleReference(System.Reflection.Metadata.StringHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddModuleReference (moduleName As StringHandle) As ModuleReferenceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ModuleReferenceHandle AddModuleReference(System::Reflection::Metadata::StringHandle moduleName);" />
      <MemberSignature Language="F#" Value="member this.AddModuleReference : System.Reflection.Metadata.StringHandle -&gt; System.Reflection.Metadata.ModuleReferenceHandle" Usage="metadataBuilder.AddModuleReference moduleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ModuleReferenceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.Reflection.Metadata.StringHandle" />
      </Parameters>
      <Docs>
        <param name="moduleName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNestedType">
      <MemberSignature Language="C#" Value="public void AddNestedType (System.Reflection.Metadata.TypeDefinitionHandle type, System.Reflection.Metadata.TypeDefinitionHandle enclosingType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddNestedType(valuetype System.Reflection.Metadata.TypeDefinitionHandle type, valuetype System.Reflection.Metadata.TypeDefinitionHandle enclosingType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddNestedType(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.TypeDefinitionHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddNestedType (type As TypeDefinitionHandle, enclosingType As TypeDefinitionHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddNestedType(System::Reflection::Metadata::TypeDefinitionHandle type, System::Reflection::Metadata::TypeDefinitionHandle enclosingType);" />
      <MemberSignature Language="F#" Value="member this.AddNestedType : System.Reflection.Metadata.TypeDefinitionHandle * System.Reflection.Metadata.TypeDefinitionHandle -&gt; unit" Usage="metadataBuilder.AddNestedType (type, enclosingType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Reflection.Metadata.TypeDefinitionHandle" />
        <Parameter Name="enclosingType" Type="System.Reflection.Metadata.TypeDefinitionHandle" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="85f24-300">嵌套类型定义句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-300">The nested type definition handle.</span></span></param>
        <param name="enclosingType"><span data-ttu-id="85f24-301">封闭类型定义句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-301">The enclosing type definition handle.</span></span></param>
        <summary><span data-ttu-id="85f24-302">定义与指定的类型定义的嵌套关系。</span><span class="sxs-lookup"><span data-stu-id="85f24-302">Defines a nesting relationship to specified type definitions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-303">项的添加顺序必须与对应的嵌套类型定义的顺序相同。</span><span class="sxs-lookup"><span data-stu-id="85f24-303">Entries must be added in the same order as the corresponding nested type definitions.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParameter">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ParameterHandle AddParameter (System.Reflection.ParameterAttributes attributes, System.Reflection.Metadata.StringHandle name, int sequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ParameterHandle AddParameter(valuetype System.Reflection.ParameterAttributes attributes, valuetype System.Reflection.Metadata.StringHandle name, int32 sequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddParameter(System.Reflection.ParameterAttributes,System.Reflection.Metadata.StringHandle,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddParameter (attributes As ParameterAttributes, name As StringHandle, sequenceNumber As Integer) As ParameterHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ParameterHandle AddParameter(System::Reflection::ParameterAttributes attributes, System::Reflection::Metadata::StringHandle name, int sequenceNumber);" />
      <MemberSignature Language="F#" Value="member this.AddParameter : System.Reflection.ParameterAttributes * System.Reflection.Metadata.StringHandle * int -&gt; System.Reflection.Metadata.ParameterHandle" Usage="metadataBuilder.AddParameter (attributes, name, sequenceNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ParameterHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.ParameterAttributes" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" />
        <Parameter Name="sequenceNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="85f24-304">参数特性。</span><span class="sxs-lookup"><span data-stu-id="85f24-304">The parameter attributes.</span></span></param>
        <param name="name"><span data-ttu-id="85f24-305">可选。</span><span class="sxs-lookup"><span data-stu-id="85f24-305">Optional.</span></span> <span data-ttu-id="85f24-306">参数名称。</span><span class="sxs-lookup"><span data-stu-id="85f24-306">The parameter name.</span></span></param>
        <param name="sequenceNumber"><span data-ttu-id="85f24-307">参数的序列号。</span><span class="sxs-lookup"><span data-stu-id="85f24-307">The sequence number of the parameter.</span></span> <span data-ttu-id="85f24-308">值为 0 表示所有者方法的返回类型；然后从 1 开始对其参数进行编号。</span><span class="sxs-lookup"><span data-stu-id="85f24-308">A value of 0 refers to the owner method's return type; its parameters are then numbered from 1 onward.</span></span></param>
        <summary><span data-ttu-id="85f24-309">添加参数定义。</span><span class="sxs-lookup"><span data-stu-id="85f24-309">Adds a parameter definition.</span></span></summary>
        <returns><span data-ttu-id="85f24-310">已添加的参数的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-310">A handle to the added parameter.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="85f24-311"><paramref name="sequenceNumber" /> 大于 <see cref="F:System.UInt16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-311"><paramref name="sequenceNumber" /> is greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.PropertyDefinitionHandle AddProperty (System.Reflection.PropertyAttributes attributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.PropertyDefinitionHandle AddProperty(valuetype System.Reflection.PropertyAttributes attributes, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.BlobHandle signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddProperty(System.Reflection.PropertyAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddProperty (attributes As PropertyAttributes, name As StringHandle, signature As BlobHandle) As PropertyDefinitionHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::PropertyDefinitionHandle AddProperty(System::Reflection::PropertyAttributes attributes, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::BlobHandle signature);" />
      <MemberSignature Language="F#" Value="member this.AddProperty : System.Reflection.PropertyAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.PropertyDefinitionHandle" Usage="metadataBuilder.AddProperty (attributes, name, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.PropertyDefinitionHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.PropertyAttributes" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" />
        <Parameter Name="signature" Type="System.Reflection.Metadata.BlobHandle" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="85f24-312">属性特性。</span><span class="sxs-lookup"><span data-stu-id="85f24-312">The property attributes.</span></span></param>
        <param name="name"><span data-ttu-id="85f24-313">属性名称。</span><span class="sxs-lookup"><span data-stu-id="85f24-313">The property name.</span></span></param>
        <param name="signature"><span data-ttu-id="85f24-314">属性的签名。</span><span class="sxs-lookup"><span data-stu-id="85f24-314">The signature of the property.</span></span></param>
        <summary><span data-ttu-id="85f24-315">添加属性定义。</span><span class="sxs-lookup"><span data-stu-id="85f24-315">Adds a property definition.</span></span></summary>
        <returns><span data-ttu-id="85f24-316">已添加的属性定义的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-316">A handle to the added property definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPropertyMap">
      <MemberSignature Language="C#" Value="public void AddPropertyMap (System.Reflection.Metadata.TypeDefinitionHandle declaringType, System.Reflection.Metadata.PropertyDefinitionHandle propertyList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPropertyMap(valuetype System.Reflection.Metadata.TypeDefinitionHandle declaringType, valuetype System.Reflection.Metadata.PropertyDefinitionHandle propertyList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddPropertyMap(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.PropertyDefinitionHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPropertyMap (declaringType As TypeDefinitionHandle, propertyList As PropertyDefinitionHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPropertyMap(System::Reflection::Metadata::TypeDefinitionHandle declaringType, System::Reflection::Metadata::PropertyDefinitionHandle propertyList);" />
      <MemberSignature Language="F#" Value="member this.AddPropertyMap : System.Reflection.Metadata.TypeDefinitionHandle * System.Reflection.Metadata.PropertyDefinitionHandle -&gt; unit" Usage="metadataBuilder.AddPropertyMap (declaringType, propertyList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="declaringType" Type="System.Reflection.Metadata.TypeDefinitionHandle" />
        <Parameter Name="propertyList" Type="System.Reflection.Metadata.PropertyDefinitionHandle" />
      </Parameters>
      <Docs>
        <param name="declaringType">To be added.</param>
        <param name="propertyList">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStandaloneSignature">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.StandaloneSignatureHandle AddStandaloneSignature (System.Reflection.Metadata.BlobHandle signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.StandaloneSignatureHandle AddStandaloneSignature(valuetype System.Reflection.Metadata.BlobHandle signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStandaloneSignature(System.Reflection.Metadata.BlobHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddStandaloneSignature (signature As BlobHandle) As StandaloneSignatureHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::StandaloneSignatureHandle AddStandaloneSignature(System::Reflection::Metadata::BlobHandle signature);" />
      <MemberSignature Language="F#" Value="member this.AddStandaloneSignature : System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.StandaloneSignatureHandle" Usage="metadataBuilder.AddStandaloneSignature signature" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.StandaloneSignatureHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signature" Type="System.Reflection.Metadata.BlobHandle" />
      </Parameters>
      <Docs>
        <param name="signature">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStateMachineMethod">
      <MemberSignature Language="C#" Value="public void AddStateMachineMethod (System.Reflection.Metadata.MethodDefinitionHandle moveNextMethod, System.Reflection.Metadata.MethodDefinitionHandle kickoffMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddStateMachineMethod(valuetype System.Reflection.Metadata.MethodDefinitionHandle moveNextMethod, valuetype System.Reflection.Metadata.MethodDefinitionHandle kickoffMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStateMachineMethod(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.Metadata.MethodDefinitionHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddStateMachineMethod (moveNextMethod As MethodDefinitionHandle, kickoffMethod As MethodDefinitionHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddStateMachineMethod(System::Reflection::Metadata::MethodDefinitionHandle moveNextMethod, System::Reflection::Metadata::MethodDefinitionHandle kickoffMethod);" />
      <MemberSignature Language="F#" Value="member this.AddStateMachineMethod : System.Reflection.Metadata.MethodDefinitionHandle * System.Reflection.Metadata.MethodDefinitionHandle -&gt; unit" Usage="metadataBuilder.AddStateMachineMethod (moveNextMethod, kickoffMethod)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moveNextMethod" Type="System.Reflection.Metadata.MethodDefinitionHandle" />
        <Parameter Name="kickoffMethod" Type="System.Reflection.Metadata.MethodDefinitionHandle" />
      </Parameters>
      <Docs>
        <param name="moveNextMethod"><span data-ttu-id="85f24-317">状态机的 <see langword="MoveNext" /> 方法（由编译器生成的方法）的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-317">The handle of the <see langword="MoveNext" /> method of the state machine (the compiler-generated method).</span></span></param>
        <param name="kickoffMethod"><span data-ttu-id="85f24-318">启动方法（用户定义的迭代器/异步方法）的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-318">The handle of the kickoff method (the user defined iterator/async method).</span></span></param>
        <summary><span data-ttu-id="85f24-319">添加状态机方法调试信息。</span><span class="sxs-lookup"><span data-stu-id="85f24-319">Adds state machine method debug information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-320">应按照与相应的方法定义相同的顺序添加项 `MoveNext` 。</span><span class="sxs-lookup"><span data-stu-id="85f24-320">Entries should be added in the same order as the corresponding `MoveNext` method definitions.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTypeDefinition">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.TypeDefinitionHandle AddTypeDefinition (System.Reflection.TypeAttributes attributes, System.Reflection.Metadata.StringHandle namespace, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.EntityHandle baseType, System.Reflection.Metadata.FieldDefinitionHandle fieldList, System.Reflection.Metadata.MethodDefinitionHandle methodList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.TypeDefinitionHandle AddTypeDefinition(valuetype System.Reflection.TypeAttributes attributes, valuetype System.Reflection.Metadata.StringHandle namespace, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.EntityHandle baseType, valuetype System.Reflection.Metadata.FieldDefinitionHandle fieldList, valuetype System.Reflection.Metadata.MethodDefinitionHandle methodList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeDefinition(System.Reflection.TypeAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.FieldDefinitionHandle,System.Reflection.Metadata.MethodDefinitionHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTypeDefinition (attributes As TypeAttributes, namespace As StringHandle, name As StringHandle, baseType As EntityHandle, fieldList As FieldDefinitionHandle, methodList As MethodDefinitionHandle) As TypeDefinitionHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::TypeDefinitionHandle AddTypeDefinition(System::Reflection::TypeAttributes attributes, System::Reflection::Metadata::StringHandle namespace, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::EntityHandle baseType, System::Reflection::Metadata::FieldDefinitionHandle fieldList, System::Reflection::Metadata::MethodDefinitionHandle methodList);" />
      <MemberSignature Language="F#" Value="member this.AddTypeDefinition : System.Reflection.TypeAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.FieldDefinitionHandle * System.Reflection.Metadata.MethodDefinitionHandle -&gt; System.Reflection.Metadata.TypeDefinitionHandle" Usage="metadataBuilder.AddTypeDefinition (attributes, namespace, name, baseType, fieldList, methodList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.TypeDefinitionHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="namespace" Type="System.Reflection.Metadata.StringHandle" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" />
        <Parameter Name="baseType" Type="System.Reflection.Metadata.EntityHandle" />
        <Parameter Name="fieldList" Type="System.Reflection.Metadata.FieldDefinitionHandle" />
        <Parameter Name="methodList" Type="System.Reflection.Metadata.MethodDefinitionHandle" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="85f24-321">类型属性。</span><span class="sxs-lookup"><span data-stu-id="85f24-321">The type attributes.</span></span></param>
        <param name="namespace"><span data-ttu-id="85f24-322">类型命名空间。</span><span class="sxs-lookup"><span data-stu-id="85f24-322">The type namespace.</span></span></param>
        <param name="name"><span data-ttu-id="85f24-323">类型名称。</span><span class="sxs-lookup"><span data-stu-id="85f24-323">The type name.</span></span></param>
        <param name="baseType"><span data-ttu-id="85f24-324">基类型实体句柄，可以是以下项之一：<see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />、<see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" /> 或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-324">The base type entity handle, which can be one of the following: <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />, or <see langword="null" />.</span></span></param>
        <param name="fieldList"><span data-ttu-id="85f24-325">如果类型声明字段，请将其设置为第一个字段的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-325">If the type declares fields, set this to the handle of the first one.</span></span> <span data-ttu-id="85f24-326">否则，请将其设置为下一个类型定义所声明的第一个字段的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-326">Otherwise, set this to the handle of the first field declared by the next type definition.</span></span> <span data-ttu-id="85f24-327">如果任何类型都未在模块中定义任何字段，则为 <see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.FieldDefinitionHandle(1)" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-327">If no type defines any fields in the module, <see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.FieldDefinitionHandle(1)" />.</span></span></param>
        <param name="methodList"><span data-ttu-id="85f24-328">如果类型声明方法，则为第一个方法的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-328">If the type declares methods, the handle of the first one.</span></span> <span data-ttu-id="85f24-329">否则，为下一个类型定义所声明的第一个方法的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-329">Otherwise, the handle of the first method declared by the next type definition.</span></span> <span data-ttu-id="85f24-330">如果任何类型都未在模块中定义任何方法，则为 <see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.MethodDefinitionHandle(1)" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-330">If no type defines any methods in the module, <see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.MethodDefinitionHandle(1)" />.</span></span></param>
        <summary><span data-ttu-id="85f24-331">添加类型定义。</span><span class="sxs-lookup"><span data-stu-id="85f24-331">Adds a type definition.</span></span></summary>
        <returns><span data-ttu-id="85f24-332">已添加的类型定义的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-332">A handle to the added type definition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85f24-333"><paramref name="baseType" /> 不具有预期的句柄类型。</span><span class="sxs-lookup"><span data-stu-id="85f24-333"><paramref name="baseType" /> doesn't have the expected handle kind.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddTypeLayout">
      <MemberSignature Language="C#" Value="public void AddTypeLayout (System.Reflection.Metadata.TypeDefinitionHandle type, ushort packingSize, uint size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddTypeLayout(valuetype System.Reflection.Metadata.TypeDefinitionHandle type, unsigned int16 packingSize, unsigned int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeLayout(System.Reflection.Metadata.TypeDefinitionHandle,System.UInt16,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddTypeLayout (type As TypeDefinitionHandle, packingSize As UShort, size As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddTypeLayout(System::Reflection::Metadata::TypeDefinitionHandle type, System::UInt16 packingSize, System::UInt32 size);" />
      <MemberSignature Language="F#" Value="member this.AddTypeLayout : System.Reflection.Metadata.TypeDefinitionHandle * uint16 * uint32 -&gt; unit" Usage="metadataBuilder.AddTypeLayout (type, packingSize, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Reflection.Metadata.TypeDefinitionHandle" />
        <Parameter Name="packingSize" Type="System.UInt16" />
        <Parameter Name="size" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="85f24-334">类型定义。</span><span class="sxs-lookup"><span data-stu-id="85f24-334">The type definition.</span></span></param>
        <param name="packingSize"><span data-ttu-id="85f24-335">指定应将字段放在类型实例中为 <paramref name="packingSize" /> 的倍数的字节地址，或者按该字段类型的自然对齐方式放置，以字节地址较小者为准。</span><span class="sxs-lookup"><span data-stu-id="85f24-335">Specifies that fields should be placed within the type instance at byte addresses which are a multiple of <paramref name="packingSize" />, or at natural alignment for that field type, whichever is smaller.</span></span> <span data-ttu-id="85f24-336">其值应为以下值之一：0、1、2、4、8、16、32、64 或 128。</span><span class="sxs-lookup"><span data-stu-id="85f24-336">Its value should be one of the following: 0, 1, 2, 4, 8, 16, 32, 64, or 128.</span></span> <span data-ttu-id="85f24-337">如果值为零，则表示所使用的包大小应与当前平台的默认值匹配。</span><span class="sxs-lookup"><span data-stu-id="85f24-337">A value of zero indicates that the packing size used should match the default for the current platform.</span></span></param>
        <param name="size"><span data-ttu-id="85f24-338">指示类型实例的最小大小，并旨在允许填充。</span><span class="sxs-lookup"><span data-stu-id="85f24-338">Indicates a minimum size of the type instance and is intended to allow for padding.</span></span> <span data-ttu-id="85f24-339">分配的内存量是根据布局和 <paramref name="size" /> 计算得到的最大大小。</span><span class="sxs-lookup"><span data-stu-id="85f24-339">The amount of memory allocated is the maximum of the size calculated from the layout and <paramref name="size" />.</span></span> <span data-ttu-id="85f24-340">请注意，如果此指令适用于值类型，则大小将小于 1 MB。</span><span class="sxs-lookup"><span data-stu-id="85f24-340">Note that if this directive applies to a value type, then the size will be less than 1 MB.</span></span></param>
        <summary><span data-ttu-id="85f24-341">定义类型定义的类型布局。</span><span class="sxs-lookup"><span data-stu-id="85f24-341">Defines a type layout of a type definition.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-342">必须按照与相应类型定义相同的顺序添加条目。</span><span class="sxs-lookup"><span data-stu-id="85f24-342">Entires must be added in the same order as the corresponding type definitions.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTypeReference">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.TypeReferenceHandle AddTypeReference (System.Reflection.Metadata.EntityHandle resolutionScope, System.Reflection.Metadata.StringHandle namespace, System.Reflection.Metadata.StringHandle name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.TypeReferenceHandle AddTypeReference(valuetype System.Reflection.Metadata.EntityHandle resolutionScope, valuetype System.Reflection.Metadata.StringHandle namespace, valuetype System.Reflection.Metadata.StringHandle name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeReference(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTypeReference (resolutionScope As EntityHandle, namespace As StringHandle, name As StringHandle) As TypeReferenceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::TypeReferenceHandle AddTypeReference(System::Reflection::Metadata::EntityHandle resolutionScope, System::Reflection::Metadata::StringHandle namespace, System::Reflection::Metadata::StringHandle name);" />
      <MemberSignature Language="F#" Value="member this.AddTypeReference : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.StringHandle -&gt; System.Reflection.Metadata.TypeReferenceHandle" Usage="metadataBuilder.AddTypeReference (resolutionScope, namespace, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.TypeReferenceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolutionScope" Type="System.Reflection.Metadata.EntityHandle" />
        <Parameter Name="namespace" Type="System.Reflection.Metadata.StringHandle" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" />
      </Parameters>
      <Docs>
        <param name="resolutionScope"><span data-ttu-id="85f24-343">声明目标类型的实体，可以是以下项之一：<see cref="T:System.Reflection.Metadata.ModuleDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />、<see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />、<see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /> 或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-343">The entity declaring the target type, which can be one of the following: <see cref="T:System.Reflection.Metadata.ModuleDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />, <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />, or <see langword="null" />.</span></span></param>
        <param name="namespace"><span data-ttu-id="85f24-344">类型引用命名空间。</span><span class="sxs-lookup"><span data-stu-id="85f24-344">The type reference namespace.</span></span></param>
        <param name="name"><span data-ttu-id="85f24-345">类型引用名称。</span><span class="sxs-lookup"><span data-stu-id="85f24-345">The type reference name.</span></span></param>
        <summary><span data-ttu-id="85f24-346">添加类型引用。</span><span class="sxs-lookup"><span data-stu-id="85f24-346">Adds a type reference.</span></span></summary>
        <returns><span data-ttu-id="85f24-347">已添加的类型引用的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-347">A handle to the added type reference.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85f24-348"><paramref name="resolutionScope" /> 不具有预期的句柄类型。</span><span class="sxs-lookup"><span data-stu-id="85f24-348"><paramref name="resolutionScope" /> doesn't have the expected handle kind.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddTypeSpecification">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.TypeSpecificationHandle AddTypeSpecification (System.Reflection.Metadata.BlobHandle signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.TypeSpecificationHandle AddTypeSpecification(valuetype System.Reflection.Metadata.BlobHandle signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeSpecification(System.Reflection.Metadata.BlobHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTypeSpecification (signature As BlobHandle) As TypeSpecificationHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::TypeSpecificationHandle AddTypeSpecification(System::Reflection::Metadata::BlobHandle signature);" />
      <MemberSignature Language="F#" Value="member this.AddTypeSpecification : System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.TypeSpecificationHandle" Usage="metadataBuilder.AddTypeSpecification signature" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.TypeSpecificationHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signature" Type="System.Reflection.Metadata.BlobHandle" />
      </Parameters>
      <Docs>
        <param name="signature">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddBlob">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobHandle GetOrAddBlob (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.BlobHandle GetOrAddBlob(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddBlob (value As Byte()) As BlobHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::BlobHandle GetOrAddBlob(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetOrAddBlob : byte[] -&gt; System.Reflection.Metadata.BlobHandle" Usage="metadataBuilder.GetOrAddBlob value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="85f24-349">包含 blob 的数组。</span><span class="sxs-lookup"><span data-stu-id="85f24-349">The array containing the blob.</span></span></param>
        <summary><span data-ttu-id="85f24-350">将指定的 blob 添加到 Blob 堆（如果尚不存在）。</span><span class="sxs-lookup"><span data-stu-id="85f24-350">Adds the specified blob to the Blob heap, if it's not there already.</span></span></summary>
        <returns><span data-ttu-id="85f24-351">已添加的或现有的 blob 的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-351">A handle to the added or existing blob.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="85f24-352"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-352"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddBlob">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobHandle GetOrAddBlob (System.Collections.Immutable.ImmutableArray&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.BlobHandle GetOrAddBlob(valuetype System.Collections.Immutable.ImmutableArray`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddBlob (value As ImmutableArray(Of Byte)) As BlobHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::BlobHandle GetOrAddBlob(System::Collections::Immutable::ImmutableArray&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="member this.GetOrAddBlob : System.Collections.Immutable.ImmutableArray&lt;byte&gt; -&gt; System.Reflection.Metadata.BlobHandle" Usage="metadataBuilder.GetOrAddBlob value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.Immutable.ImmutableArray&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="85f24-353">包含 blob 的数组。</span><span class="sxs-lookup"><span data-stu-id="85f24-353">The array containing the blob.</span></span></param>
        <summary><span data-ttu-id="85f24-354">将指定的 blob 从字节数组添加到 Blob 堆（如果尚不存在）。</span><span class="sxs-lookup"><span data-stu-id="85f24-354">Adds the specified blob from a byte array to the Blob heap, if it's not there already.</span></span></summary>
        <returns><span data-ttu-id="85f24-355">已添加的或现有的 blob 的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-355">A handle to the added or existing blob.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="85f24-356"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-356"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddBlob">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobHandle GetOrAddBlob (System.Reflection.Metadata.BlobBuilder value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.BlobHandle GetOrAddBlob(class System.Reflection.Metadata.BlobBuilder value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Reflection.Metadata.BlobBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddBlob (value As BlobBuilder) As BlobHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::BlobHandle GetOrAddBlob(System::Reflection::Metadata::BlobBuilder ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetOrAddBlob : System.Reflection.Metadata.BlobBuilder -&gt; System.Reflection.Metadata.BlobHandle" Usage="metadataBuilder.GetOrAddBlob value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Reflection.Metadata.BlobBuilder" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="85f24-357">包含 blob 的 blob 生成器实例。</span><span class="sxs-lookup"><span data-stu-id="85f24-357">The blob builder instance containing the blob.</span></span></param>
        <summary><span data-ttu-id="85f24-358">将指定的 blob 从不可变字节数组添加到 Blob 堆（如果尚不存在）。</span><span class="sxs-lookup"><span data-stu-id="85f24-358">Adds the specified blob from an immutable byte array to the Blob heap, if it's not there already.</span></span></summary>
        <returns><span data-ttu-id="85f24-359">已添加的或现有的 blob 的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-359">A handle to the added or existing blob.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="85f24-360"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-360"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddBlobUTF16">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobHandle GetOrAddBlobUTF16 (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.BlobHandle GetOrAddBlobUTF16(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF16(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddBlobUTF16 (value As String) As BlobHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::BlobHandle GetOrAddBlobUTF16(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetOrAddBlobUTF16 : string -&gt; System.Reflection.Metadata.BlobHandle" Usage="metadataBuilder.GetOrAddBlobUTF16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="85f24-361">要添加的字符串。</span><span class="sxs-lookup"><span data-stu-id="85f24-361">The string to add.</span></span></param>
        <summary><span data-ttu-id="85f24-362">使用 UTF16 编码向 blob 编码字符串，并将其添加到 Blob 堆（如果尚不存在）。</span><span class="sxs-lookup"><span data-stu-id="85f24-362">Encodes a string using UTF16 encoding to a blob and adds it to the Blob heap, if it's not there already.</span></span></summary>
        <returns><span data-ttu-id="85f24-363">已添加的或现有的 blob 的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-363">A handle to the added or existing blob.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="85f24-364"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-364"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddBlobUTF8">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobHandle GetOrAddBlobUTF8 (string value, bool allowUnpairedSurrogates = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.BlobHandle GetOrAddBlobUTF8(string value, bool allowUnpairedSurrogates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF8(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddBlobUTF8 (value As String, Optional allowUnpairedSurrogates As Boolean = true) As BlobHandle" />
      <MemberSignature Language="F#" Value="member this.GetOrAddBlobUTF8 : string * bool -&gt; System.Reflection.Metadata.BlobHandle" Usage="metadataBuilder.GetOrAddBlobUTF8 (value, allowUnpairedSurrogates)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="allowUnpairedSurrogates" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="85f24-365">要相加的值。</span><span class="sxs-lookup"><span data-stu-id="85f24-365">The value to add.</span></span></param>
        <param name="allowUnpairedSurrogates"><span data-ttu-id="85f24-366">如果为 <see langword="true" />，则按指定方式对不成对的代理进行编码；如果为 <see langword="false" />，则将它们替换为 U + FFFD 字符。</span><span class="sxs-lookup"><span data-stu-id="85f24-366"><see langword="true" /> to encode the unpaired surrogates as specified; <see langword="false" /> to replace them with the U+FFFD character.</span></span></param>
        <summary><span data-ttu-id="85f24-367">使用 UTF8 编码向 blob 编码字符串，并将其添加到 Blob 堆（如果尚不存在）。</span><span class="sxs-lookup"><span data-stu-id="85f24-367">Encodes a string using UTF8 encoding to a blob and adds it to the Blob heap, if it's not there already.</span></span></summary>
        <returns><span data-ttu-id="85f24-368">已添加的或现有的 blob 的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-368">A handle to the added or existing blob.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="85f24-369"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-369"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddConstantBlob">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobHandle GetOrAddConstantBlob (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.BlobHandle GetOrAddConstantBlob(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddConstantBlob(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddConstantBlob (value As Object) As BlobHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::BlobHandle GetOrAddConstantBlob(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetOrAddConstantBlob : obj -&gt; System.Reflection.Metadata.BlobHandle" Usage="metadataBuilder.GetOrAddConstantBlob value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="85f24-370">要添加的常量值。</span><span class="sxs-lookup"><span data-stu-id="85f24-370">The constant value to add.</span></span></param>
        <summary><span data-ttu-id="85f24-371">向 blob 编码常量值，并将其添加到 Blob 堆（如果尚不存在）。</span><span class="sxs-lookup"><span data-stu-id="85f24-371">Encodes a constant value to a blob and adds it to the Blob heap, if it's not there already.</span></span> <span data-ttu-id="85f24-372">使用 UTF16 对字符串常量进行编码。</span><span class="sxs-lookup"><span data-stu-id="85f24-372">Uses UTF16 to encode string constants.</span></span></summary>
        <returns><span data-ttu-id="85f24-373">已添加的或现有的 blob 的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-373">A handle to the added or existing blob.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddDocumentName">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobHandle GetOrAddDocumentName (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.BlobHandle GetOrAddDocumentName(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddDocumentName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddDocumentName (value As String) As BlobHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::BlobHandle GetOrAddDocumentName(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetOrAddDocumentName : string -&gt; System.Reflection.Metadata.BlobHandle" Usage="metadataBuilder.GetOrAddDocumentName value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="85f24-374">要添加的文档名称。</span><span class="sxs-lookup"><span data-stu-id="85f24-374">The document name to add.</span></span></param>
        <summary><span data-ttu-id="85f24-375">对调试文档名称进行编码，并将其添加到 Blob 堆（如果尚不存在）。</span><span class="sxs-lookup"><span data-stu-id="85f24-375">Encodes a debug document name and adds it to the Blob heap, if it's not there already.</span></span></summary>
        <returns><span data-ttu-id="85f24-376">已添加的或现有的文档名称 blob 的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-376">A handle to the added or existing document name blob.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-377">有关文档名称 blob 的详细信息，请参阅： https://github.com/dotnet/runtime/blob/master/docs/design/specs/PortablePdb-Metadata.md#DocumentNameBlob</span><span class="sxs-lookup"><span data-stu-id="85f24-377">For more information about document name blobs, see: https://github.com/dotnet/runtime/blob/master/docs/design/specs/PortablePdb-Metadata.md#DocumentNameBlob</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="85f24-378"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-378"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddGuid">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.GuidHandle GetOrAddGuid (Guid guid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.GuidHandle GetOrAddGuid(valuetype System.Guid guid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddGuid(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddGuid (guid As Guid) As GuidHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::GuidHandle GetOrAddGuid(Guid guid);" />
      <MemberSignature Language="F#" Value="member this.GetOrAddGuid : Guid -&gt; System.Reflection.Metadata.GuidHandle" Usage="metadataBuilder.GetOrAddGuid guid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.GuidHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="guid"><span data-ttu-id="85f24-379">要添加的 Guid。</span><span class="sxs-lookup"><span data-stu-id="85f24-379">The Guid to add.</span></span></param>
        <summary><span data-ttu-id="85f24-380">将指定的 Guid 添加到 Guid 堆（如果尚不存在）。</span><span class="sxs-lookup"><span data-stu-id="85f24-380">Adds the specified Guid to the Guid heap, if it's not there already.</span></span></summary>
        <returns><span data-ttu-id="85f24-381">已添加的或现有的 Guid 的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-381">A handle to the added or existing Guid.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddString">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.StringHandle GetOrAddString (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.StringHandle GetOrAddString(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddString (value As String) As StringHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::StringHandle GetOrAddString(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetOrAddString : string -&gt; System.Reflection.Metadata.StringHandle" Usage="metadataBuilder.GetOrAddString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.StringHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="85f24-382">要添加的字符串。</span><span class="sxs-lookup"><span data-stu-id="85f24-382">The string to add.</span></span></param>
        <summary><span data-ttu-id="85f24-383">将指定的字符串添加到字符串堆（如果尚不存在）。</span><span class="sxs-lookup"><span data-stu-id="85f24-383">Adds the specified string to the string heap, if it's not there already.</span></span></summary>
        <returns><span data-ttu-id="85f24-384">已添加的或现有的字符串的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-384">A handle to the added or existing string.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="85f24-385"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-385"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddUserString">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.UserStringHandle GetOrAddUserString (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.UserStringHandle GetOrAddUserString(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddUserString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddUserString (value As String) As UserStringHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::UserStringHandle GetOrAddUserString(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetOrAddUserString : string -&gt; System.Reflection.Metadata.UserStringHandle" Usage="metadataBuilder.GetOrAddUserString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.UserStringHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="85f24-386">要添加的字符串。</span><span class="sxs-lookup"><span data-stu-id="85f24-386">The string to add.</span></span></param>
        <summary><span data-ttu-id="85f24-387">将指定的字符串添加到用户字符串堆（如果尚不存在）。</span><span class="sxs-lookup"><span data-stu-id="85f24-387">Adds the specified string to the user string heap, if it's not there already.</span></span></summary>
        <returns><span data-ttu-id="85f24-388">已添加的或现有的字符串的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-388">A handle to the added or existing string.</span></span> <span data-ttu-id="85f24-389">此值可用于 <see cref="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.LoadString(System.Reflection.Metadata.UserStringHandle)" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-389">This value may be used in <see cref="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.LoadString(System.Reflection.Metadata.UserStringHandle)" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.Metadata.ImageFormatLimitationException"><span data-ttu-id="85f24-390">堆上的剩余空间太小，无法容纳该字符串。</span><span class="sxs-lookup"><span data-stu-id="85f24-390">The remaining space on the heap is too small to fit the string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="85f24-391"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-391"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRowCount">
      <MemberSignature Language="C#" Value="public int GetRowCount (System.Reflection.Metadata.Ecma335.TableIndex table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRowCount(valuetype System.Reflection.Metadata.Ecma335.TableIndex table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCount(System.Reflection.Metadata.Ecma335.TableIndex)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowCount (table As TableIndex) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetRowCount(System::Reflection::Metadata::Ecma335::TableIndex table);" />
      <MemberSignature Language="F#" Value="member this.GetRowCount : System.Reflection.Metadata.Ecma335.TableIndex -&gt; int" Usage="metadataBuilder.GetRowCount table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Reflection.Metadata.Ecma335.TableIndex" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="85f24-392">表索引。</span><span class="sxs-lookup"><span data-stu-id="85f24-392">The table index.</span></span></param>
        <summary><span data-ttu-id="85f24-393">返回指定表中的当前项数。</span><span class="sxs-lookup"><span data-stu-id="85f24-393">Returns the current number of items in the specified table.</span></span></summary>
        <returns><span data-ttu-id="85f24-394">表中的项数。</span><span class="sxs-lookup"><span data-stu-id="85f24-394">The number of items in the table.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="85f24-395"><paramref name="table" /> 不是有效的表索引。</span><span class="sxs-lookup"><span data-stu-id="85f24-395"><paramref name="table" /> is not a valid table index.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRowCounts">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;int&gt; GetRowCounts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;int32&gt; GetRowCounts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCounts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowCounts () As ImmutableArray(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;int&gt; GetRowCounts();" />
      <MemberSignature Language="F#" Value="member this.GetRowCounts : unit -&gt; System.Collections.Immutable.ImmutableArray&lt;int&gt;" Usage="metadataBuilder.GetRowCounts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85f24-396">返回每个表中的当前项数。</span><span class="sxs-lookup"><span data-stu-id="85f24-396">Returns the current number of items in each table.</span></span></summary>
        <returns><span data-ttu-id="85f24-397">大小为 <see cref="F:System.Reflection.Metadata.Ecma335.MetadataTokens.TableCount" /> 的数组，其中每一项都由相应表的当前行计数填充。</span><span class="sxs-lookup"><span data-stu-id="85f24-397">An array of size <see cref="F:System.Reflection.Metadata.Ecma335.MetadataTokens.TableCount" />, with each item filled with the current row count of the corresponding table.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReserveGuid">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ReservedBlob&lt;System.Reflection.Metadata.GuidHandle&gt; ReserveGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ReservedBlob`1&lt;valuetype System.Reflection.Metadata.GuidHandle&gt; ReserveGuid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveGuid" />
      <MemberSignature Language="VB.NET" Value="Public Function ReserveGuid () As ReservedBlob(Of GuidHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ReservedBlob&lt;System::Reflection::Metadata::GuidHandle&gt; ReserveGuid();" />
      <MemberSignature Language="F#" Value="member this.ReserveGuid : unit -&gt; System.Reflection.Metadata.ReservedBlob&lt;System.Reflection.Metadata.GuidHandle&gt;" Usage="metadataBuilder.ReserveGuid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ReservedBlob&lt;System.Reflection.Metadata.GuidHandle&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85f24-398">在 Guid 堆上为 GUID 保留空间。</span><span class="sxs-lookup"><span data-stu-id="85f24-398">Reserves space on the Guid heap for a GUID.</span></span></summary>
        <returns><span data-ttu-id="85f24-399">保留的 Guid 和表示存储在堆上的 GUID blob 的 <see cref="T:System.Reflection.Metadata.Blob" /> 的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-399">A handle to the reserved Guid and a <see cref="T:System.Reflection.Metadata.Blob" /> representing the GUID blob as stored on the heap.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.Metadata.ImageFormatLimitationException"><span data-ttu-id="85f24-400">堆上的剩余空间太小，无法容纳该字符串。</span><span class="sxs-lookup"><span data-stu-id="85f24-400">The remaining space on the heap is too small to fit the string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReserveUserString">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ReservedBlob&lt;System.Reflection.Metadata.UserStringHandle&gt; ReserveUserString (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ReservedBlob`1&lt;valuetype System.Reflection.Metadata.UserStringHandle&gt; ReserveUserString(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveUserString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReserveUserString (length As Integer) As ReservedBlob(Of UserStringHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ReservedBlob&lt;System::Reflection::Metadata::UserStringHandle&gt; ReserveUserString(int length);" />
      <MemberSignature Language="F#" Value="member this.ReserveUserString : int -&gt; System.Reflection.Metadata.ReservedBlob&lt;System.Reflection.Metadata.UserStringHandle&gt;" Usage="metadataBuilder.ReserveUserString length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ReservedBlob&lt;System.Reflection.Metadata.UserStringHandle&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length"><span data-ttu-id="85f24-401">要保留的字符数。</span><span class="sxs-lookup"><span data-stu-id="85f24-401">The number of characters to reserve.</span></span></param>
        <summary><span data-ttu-id="85f24-402">在用户字符串堆上为指定长度的字符串保留空间。</span><span class="sxs-lookup"><span data-stu-id="85f24-402">Reserves space on the user string heap for a string of the specified length.</span></span></summary>
        <returns><span data-ttu-id="85f24-403">保留的用户字符串和表示整个用户字符串 blob （包括其长度和终端字符）的 <see cref="T:System.Reflection.Metadata.Blob" /> 的句柄。</span><span class="sxs-lookup"><span data-stu-id="85f24-403">A handle to the reserved user string and a <see cref="T:System.Reflection.Metadata.Blob" /> representing the entire User String blob (including its length and terminal character).</span></span> <span data-ttu-id="85f24-404">该句柄可用于 <see cref="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.LoadString(System.Reflection.Metadata.UserStringHandle)" />。</span><span class="sxs-lookup"><span data-stu-id="85f24-404">The handle may be used in <see cref="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.LoadString(System.Reflection.Metadata.UserStringHandle)" />.</span></span>
<span data-ttu-id="85f24-405">使用 <see cref="M:System.Reflection.Metadata.BlobWriter.WriteUserString(System.String)" /> 填充 blob 内容。</span><span class="sxs-lookup"><span data-stu-id="85f24-405">Use <see cref="M:System.Reflection.Metadata.BlobWriter.WriteUserString(System.String)" /> to fill in the blob content.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Reflection.Metadata.ImageFormatLimitationException"><span data-ttu-id="85f24-406">堆上的剩余空间太小，无法容纳该字符串。</span><span class="sxs-lookup"><span data-stu-id="85f24-406">The remaining space on the heap is too small to fit the string.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="85f24-407"><paramref name="length" /> 为负数。</span><span class="sxs-lookup"><span data-stu-id="85f24-407"><paramref name="length" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetCapacity">
      <MemberSignature Language="C#" Value="public void SetCapacity (System.Reflection.Metadata.Ecma335.HeapIndex heap, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCapacity(valuetype System.Reflection.Metadata.Ecma335.HeapIndex heap, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity(System.Reflection.Metadata.Ecma335.HeapIndex,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCapacity (heap As HeapIndex, byteCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCapacity(System::Reflection::Metadata::Ecma335::HeapIndex heap, int byteCount);" />
      <MemberSignature Language="F#" Value="member this.SetCapacity : System.Reflection.Metadata.Ecma335.HeapIndex * int -&gt; unit" Usage="metadataBuilder.SetCapacity (heap, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="heap" Type="System.Reflection.Metadata.Ecma335.HeapIndex" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="heap"><span data-ttu-id="85f24-408">堆索引。</span><span class="sxs-lookup"><span data-stu-id="85f24-408">The heap index.</span></span></param>
        <param name="byteCount"><span data-ttu-id="85f24-409">字节数。</span><span class="sxs-lookup"><span data-stu-id="85f24-409">The number of bytes.</span></span></param>
        <summary><span data-ttu-id="85f24-410">设置指定堆的容量。</span><span class="sxs-lookup"><span data-stu-id="85f24-410">Sets the capacity of the specified heap.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-411">如果事先知道近似字节数，请使用此方法减少分配。</span><span class="sxs-lookup"><span data-stu-id="85f24-411">Use this method to reduce allocations if the approximate number of bytes is known ahead of time.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="85f24-412"><paramref name="heap" /> 不是有效的堆索引。</span><span class="sxs-lookup"><span data-stu-id="85f24-412"><paramref name="heap" /> is not a valid heap index.</span></span>

<span data-ttu-id="85f24-413">- 或 -</span><span class="sxs-lookup"><span data-stu-id="85f24-413">-or-</span></span>

<span data-ttu-id="85f24-414"><paramref name="byteCount" /> 为负数。</span><span class="sxs-lookup"><span data-stu-id="85f24-414"><paramref name="byteCount" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetCapacity">
      <MemberSignature Language="C#" Value="public void SetCapacity (System.Reflection.Metadata.Ecma335.TableIndex table, int rowCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCapacity(valuetype System.Reflection.Metadata.Ecma335.TableIndex table, int32 rowCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity(System.Reflection.Metadata.Ecma335.TableIndex,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCapacity (table As TableIndex, rowCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCapacity(System::Reflection::Metadata::Ecma335::TableIndex table, int rowCount);" />
      <MemberSignature Language="F#" Value="member this.SetCapacity : System.Reflection.Metadata.Ecma335.TableIndex * int -&gt; unit" Usage="metadataBuilder.SetCapacity (table, rowCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Reflection.Metadata.Ecma335.TableIndex" />
        <Parameter Name="rowCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="85f24-415">表索引。</span><span class="sxs-lookup"><span data-stu-id="85f24-415">The table index.</span></span></param>
        <param name="rowCount"><span data-ttu-id="85f24-416">表中的行数。</span><span class="sxs-lookup"><span data-stu-id="85f24-416">The number of rows in the table.</span></span></param>
        <summary><span data-ttu-id="85f24-417">设置指定表的容量。</span><span class="sxs-lookup"><span data-stu-id="85f24-417">Sets the capacity of the specified table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="85f24-418">如果事先知道大致的行数，请使用此方法减少分配。</span><span class="sxs-lookup"><span data-stu-id="85f24-418">Use this method to reduce allocations if the approximate number of rows is known ahead of time.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="85f24-419"><paramref name="table" /> 不是有效的表索引。</span><span class="sxs-lookup"><span data-stu-id="85f24-419"><paramref name="table" /> is not a valid table index.</span></span>

<span data-ttu-id="85f24-420">- 或 -</span><span class="sxs-lookup"><span data-stu-id="85f24-420">-or-</span></span>

<span data-ttu-id="85f24-421"><paramref name="rowCount" /> 为负数。</span><span class="sxs-lookup"><span data-stu-id="85f24-421"><paramref name="rowCount" /> is negative.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
