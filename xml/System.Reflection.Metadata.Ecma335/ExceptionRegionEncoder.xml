<Type Name="ExceptionRegionEncoder" FullName="System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1ce4ba5e97cf70e75f7ce6648c22c9024a22f9f8" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89804204" /></Metadata><TypeSignature Language="C#" Value="public struct ExceptionRegionEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ExceptionRegionEncoder extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder" />
  <TypeSignature Language="VB.NET" Value="Public Structure ExceptionRegionEncoder" />
  <TypeSignature Language="C++ CLI" Value="public value class ExceptionRegionEncoder" />
  <TypeSignature Language="F#" Value="type ExceptionRegionEncoder = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
    <AssemblyVersion>1.4.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder Add (System.Reflection.Metadata.ExceptionRegionKind kind, int tryOffset, int tryLength, int handlerOffset, int handlerLength, System.Reflection.Metadata.EntityHandle catchType = default, int filterOffset = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder Add(valuetype System.Reflection.Metadata.ExceptionRegionKind kind, int32 tryOffset, int32 tryLength, int32 handlerOffset, int32 handlerLength, valuetype System.Reflection.Metadata.EntityHandle catchType, int32 filterOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Add(System.Reflection.Metadata.ExceptionRegionKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.Metadata.EntityHandle,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (kind As ExceptionRegionKind, tryOffset As Integer, tryLength As Integer, handlerOffset As Integer, handlerLength As Integer, Optional catchType As EntityHandle = Nothing, Optional filterOffset As Integer = 0) As ExceptionRegionEncoder" />
      <MemberSignature Language="F#" Value="member this.Add : System.Reflection.Metadata.ExceptionRegionKind * int * int * int * int * System.Reflection.Metadata.EntityHandle * int -&gt; System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder" Usage="exceptionRegionEncoder.Add (kind, tryOffset, tryLength, handlerOffset, handlerLength, catchType, filterOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.Reflection.Metadata.ExceptionRegionKind" />
        <Parameter Name="tryOffset" Type="System.Int32" />
        <Parameter Name="tryLength" Type="System.Int32" />
        <Parameter Name="handlerOffset" Type="System.Int32" />
        <Parameter Name="handlerLength" Type="System.Int32" />
        <Parameter Name="catchType" Type="System.Reflection.Metadata.EntityHandle" />
        <Parameter Name="filterOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="kind"><span data-ttu-id="dec8e-101">子句类型。</span><span class="sxs-lookup"><span data-stu-id="dec8e-101">Clause kind.</span></span></param>
        <param name="tryOffset"><span data-ttu-id="dec8e-102">Try 块初始偏移量。</span><span class="sxs-lookup"><span data-stu-id="dec8e-102">Try block start offset.</span></span></param>
        <param name="tryLength"><span data-ttu-id="dec8e-103">Try 块长度。</span><span class="sxs-lookup"><span data-stu-id="dec8e-103">Try block length.</span></span></param>
        <param name="handlerOffset"><span data-ttu-id="dec8e-104">处理程序初始偏移量。</span><span class="sxs-lookup"><span data-stu-id="dec8e-104">Handler start offset.</span></span></param>
        <param name="handlerLength"><span data-ttu-id="dec8e-105">处理程序长度。</span><span class="sxs-lookup"><span data-stu-id="dec8e-105">Handler length.</span></span></param>
        <param name="catchType"><span data-ttu-id="dec8e-106"><see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /> 或 <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />；如果 <paramref name="kind" /> 不是 <see cref="F:System.Reflection.Metadata.ExceptionRegionKind.Catch" />，则为 nil</span><span class="sxs-lookup"><span data-stu-id="dec8e-106"><see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /> or <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />, or nil if <paramref name="kind" /> is not <see cref="F:System.Reflection.Metadata.ExceptionRegionKind.Catch" /></span></span></param>
        <param name="filterOffset"><span data-ttu-id="dec8e-107">筛选器块的偏移量；如果 <paramref name="kind" /> 不是 <see cref="F:System.Reflection.Metadata.ExceptionRegionKind.Filter" />，则为 0。</span><span class="sxs-lookup"><span data-stu-id="dec8e-107">Offset of the filter block, or 0 if the <paramref name="kind" /> is not <see cref="F:System.Reflection.Metadata.ExceptionRegionKind.Filter" />.</span></span></param>
        <summary><span data-ttu-id="dec8e-108">添加异常子句。</span><span class="sxs-lookup"><span data-stu-id="dec8e-108">Adds an exception clause.</span></span></summary>
        <returns><span data-ttu-id="dec8e-109">下一子句的编码器。</span><span class="sxs-lookup"><span data-stu-id="dec8e-109">Encoder for the next clause.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dec8e-110"><paramref name="catchType" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="dec8e-110"><paramref name="catchType" /> is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dec8e-111"><paramref name="kind" /> 具有无效值。</span><span class="sxs-lookup"><span data-stu-id="dec8e-111"><paramref name="kind" /> has an invalid value.</span></span>
          
<span data-ttu-id="dec8e-112">- 或 -</span><span class="sxs-lookup"><span data-stu-id="dec8e-112">-or-</span></span>

<span data-ttu-id="dec8e-113"><paramref name="tryOffset" />、<paramref name="tryLength" />、<paramref name="handlerOffset" /> 或 <paramref name="handlerLength" /> 超出范围。</span><span class="sxs-lookup"><span data-stu-id="dec8e-113"><paramref name="tryOffset" />, <paramref name="tryLength" />, <paramref name="handlerOffset" />, or <paramref name="handlerLength" /> is out of range.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dec8e-114">方法主体未声明为具有异常区域。</span><span class="sxs-lookup"><span data-stu-id="dec8e-114">Method body was not declared to have exception regions.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddCatch">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder AddCatch (int tryOffset, int tryLength, int handlerOffset, int handlerLength, System.Reflection.Metadata.EntityHandle catchType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder AddCatch(int32 tryOffset, int32 tryLength, int32 handlerOffset, int32 handlerLength, valuetype System.Reflection.Metadata.EntityHandle catchType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddCatch(System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.Metadata.EntityHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCatch (tryOffset As Integer, tryLength As Integer, handlerOffset As Integer, handlerLength As Integer, catchType As EntityHandle) As ExceptionRegionEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::Ecma335::ExceptionRegionEncoder AddCatch(int tryOffset, int tryLength, int handlerOffset, int handlerLength, System::Reflection::Metadata::EntityHandle catchType);" />
      <MemberSignature Language="F#" Value="member this.AddCatch : int * int * int * int * System.Reflection.Metadata.EntityHandle -&gt; System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder" Usage="exceptionRegionEncoder.AddCatch (tryOffset, tryLength, handlerOffset, handlerLength, catchType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tryOffset" Type="System.Int32" />
        <Parameter Name="tryLength" Type="System.Int32" />
        <Parameter Name="handlerOffset" Type="System.Int32" />
        <Parameter Name="handlerLength" Type="System.Int32" />
        <Parameter Name="catchType" Type="System.Reflection.Metadata.EntityHandle" />
      </Parameters>
      <Docs>
        <param name="tryOffset"><span data-ttu-id="dec8e-115">Try 块初始偏移量。</span><span class="sxs-lookup"><span data-stu-id="dec8e-115">Try block start offset.</span></span></param>
        <param name="tryLength"><span data-ttu-id="dec8e-116">Try 块长度。</span><span class="sxs-lookup"><span data-stu-id="dec8e-116">Try block length.</span></span></param>
        <param name="handlerOffset"><span data-ttu-id="dec8e-117">处理程序初始偏移量。</span><span class="sxs-lookup"><span data-stu-id="dec8e-117">Handler start offset.</span></span></param>
        <param name="handlerLength"><span data-ttu-id="dec8e-118">处理程序长度。</span><span class="sxs-lookup"><span data-stu-id="dec8e-118">Handler length.</span></span></param>
        <param name="catchType"><span data-ttu-id="dec8e-119"><see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /> 或 <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />。</span><span class="sxs-lookup"><span data-stu-id="dec8e-119"><see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /> or <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />.</span></span></param>
        <summary><span data-ttu-id="dec8e-120">添加 fault 子句。</span><span class="sxs-lookup"><span data-stu-id="dec8e-120">Adds a fault clause.</span></span></summary>
        <returns><span data-ttu-id="dec8e-121">下一子句的编码器。</span><span class="sxs-lookup"><span data-stu-id="dec8e-121">Encoder for the next clause.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dec8e-122"><paramref name="catchType" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="dec8e-122"><paramref name="catchType" /> is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dec8e-123"><paramref name="tryOffset" />、<paramref name="tryLength" />、<paramref name="handlerOffset" /> 或 <paramref name="handlerLength" /> 超出范围。</span><span class="sxs-lookup"><span data-stu-id="dec8e-123"><paramref name="tryOffset" />, <paramref name="tryLength" />, <paramref name="handlerOffset" /> or <paramref name="handlerLength" /> is out of range.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dec8e-124">方法主体未声明为具有异常区域。</span><span class="sxs-lookup"><span data-stu-id="dec8e-124">Method body was not declared to have exception regions.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddFault">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder AddFault (int tryOffset, int tryLength, int handlerOffset, int handlerLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder AddFault(int32 tryOffset, int32 tryLength, int32 handlerOffset, int32 handlerLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFault(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFault (tryOffset As Integer, tryLength As Integer, handlerOffset As Integer, handlerLength As Integer) As ExceptionRegionEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::Ecma335::ExceptionRegionEncoder AddFault(int tryOffset, int tryLength, int handlerOffset, int handlerLength);" />
      <MemberSignature Language="F#" Value="member this.AddFault : int * int * int * int -&gt; System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder" Usage="exceptionRegionEncoder.AddFault (tryOffset, tryLength, handlerOffset, handlerLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tryOffset" Type="System.Int32" />
        <Parameter Name="tryLength" Type="System.Int32" />
        <Parameter Name="handlerOffset" Type="System.Int32" />
        <Parameter Name="handlerLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tryOffset"><span data-ttu-id="dec8e-125">Try 块初始偏移量。</span><span class="sxs-lookup"><span data-stu-id="dec8e-125">Try block start offset.</span></span></param>
        <param name="tryLength"><span data-ttu-id="dec8e-126">Try 块长度。</span><span class="sxs-lookup"><span data-stu-id="dec8e-126">Try block length.</span></span></param>
        <param name="handlerOffset"><span data-ttu-id="dec8e-127">处理程序初始偏移量。</span><span class="sxs-lookup"><span data-stu-id="dec8e-127">Handler start offset.</span></span></param>
        <param name="handlerLength"><span data-ttu-id="dec8e-128">处理程序长度。</span><span class="sxs-lookup"><span data-stu-id="dec8e-128">Handler length.</span></span></param>
        <summary><span data-ttu-id="dec8e-129">添加 fault 子句。</span><span class="sxs-lookup"><span data-stu-id="dec8e-129">Adds a fault clause.</span></span></summary>
        <returns><span data-ttu-id="dec8e-130">下一子句的编码器。</span><span class="sxs-lookup"><span data-stu-id="dec8e-130">Encoder for the next clause.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dec8e-131"><paramref name="tryOffset" />、<paramref name="tryLength" />、<paramref name="handlerOffset" /> 或 <paramref name="handlerLength" /> 超出范围。</span><span class="sxs-lookup"><span data-stu-id="dec8e-131"><paramref name="tryOffset" />, <paramref name="tryLength" />, <paramref name="handlerOffset" /> or <paramref name="handlerLength" /> is out of range.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dec8e-132">方法主体未声明为具有异常区域。</span><span class="sxs-lookup"><span data-stu-id="dec8e-132">Method body was not declared to have exception regions.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder AddFilter (int tryOffset, int tryLength, int handlerOffset, int handlerLength, int filterOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder AddFilter(int32 tryOffset, int32 tryLength, int32 handlerOffset, int32 handlerLength, int32 filterOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFilter(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFilter (tryOffset As Integer, tryLength As Integer, handlerOffset As Integer, handlerLength As Integer, filterOffset As Integer) As ExceptionRegionEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::Ecma335::ExceptionRegionEncoder AddFilter(int tryOffset, int tryLength, int handlerOffset, int handlerLength, int filterOffset);" />
      <MemberSignature Language="F#" Value="member this.AddFilter : int * int * int * int * int -&gt; System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder" Usage="exceptionRegionEncoder.AddFilter (tryOffset, tryLength, handlerOffset, handlerLength, filterOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tryOffset" Type="System.Int32" />
        <Parameter Name="tryLength" Type="System.Int32" />
        <Parameter Name="handlerOffset" Type="System.Int32" />
        <Parameter Name="handlerLength" Type="System.Int32" />
        <Parameter Name="filterOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tryOffset"><span data-ttu-id="dec8e-133">Try 块初始偏移量。</span><span class="sxs-lookup"><span data-stu-id="dec8e-133">Try block start offset.</span></span></param>
        <param name="tryLength"><span data-ttu-id="dec8e-134">Try 块长度。</span><span class="sxs-lookup"><span data-stu-id="dec8e-134">Try block length.</span></span></param>
        <param name="handlerOffset"><span data-ttu-id="dec8e-135">处理程序初始偏移量。</span><span class="sxs-lookup"><span data-stu-id="dec8e-135">Handler start offset.</span></span></param>
        <param name="handlerLength"><span data-ttu-id="dec8e-136">处理程序长度。</span><span class="sxs-lookup"><span data-stu-id="dec8e-136">Handler length.</span></span></param>
        <param name="filterOffset"><span data-ttu-id="dec8e-137">筛选器块的偏移量。</span><span class="sxs-lookup"><span data-stu-id="dec8e-137">Offset of the filter block.</span></span></param>
        <summary><span data-ttu-id="dec8e-138">添加 fault 子句。</span><span class="sxs-lookup"><span data-stu-id="dec8e-138">Adds a fault clause.</span></span></summary>
        <returns><span data-ttu-id="dec8e-139">下一子句的编码器。</span><span class="sxs-lookup"><span data-stu-id="dec8e-139">Encoder for the next clause.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dec8e-140"><paramref name="tryOffset" />、<paramref name="tryLength" />、<paramref name="handlerOffset" /> 或 <paramref name="handlerLength" /> 超出范围。</span><span class="sxs-lookup"><span data-stu-id="dec8e-140"><paramref name="tryOffset" />, <paramref name="tryLength" />, <paramref name="handlerOffset" /> or <paramref name="handlerLength" /> is out of range.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dec8e-141">方法主体未声明为具有异常区域。</span><span class="sxs-lookup"><span data-stu-id="dec8e-141">Method body was not declared to have exception regions.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddFinally">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder AddFinally (int tryOffset, int tryLength, int handlerOffset, int handlerLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder AddFinally(int32 tryOffset, int32 tryLength, int32 handlerOffset, int32 handlerLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFinally(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFinally (tryOffset As Integer, tryLength As Integer, handlerOffset As Integer, handlerLength As Integer) As ExceptionRegionEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::Ecma335::ExceptionRegionEncoder AddFinally(int tryOffset, int tryLength, int handlerOffset, int handlerLength);" />
      <MemberSignature Language="F#" Value="member this.AddFinally : int * int * int * int -&gt; System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder" Usage="exceptionRegionEncoder.AddFinally (tryOffset, tryLength, handlerOffset, handlerLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tryOffset" Type="System.Int32" />
        <Parameter Name="tryLength" Type="System.Int32" />
        <Parameter Name="handlerOffset" Type="System.Int32" />
        <Parameter Name="handlerLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tryOffset"><span data-ttu-id="dec8e-142">Try 块初始偏移量。</span><span class="sxs-lookup"><span data-stu-id="dec8e-142">Try block start offset.</span></span></param>
        <param name="tryLength"><span data-ttu-id="dec8e-143">Try 块长度。</span><span class="sxs-lookup"><span data-stu-id="dec8e-143">Try block length.</span></span></param>
        <param name="handlerOffset"><span data-ttu-id="dec8e-144">处理程序初始偏移量。</span><span class="sxs-lookup"><span data-stu-id="dec8e-144">Handler start offset.</span></span></param>
        <param name="handlerLength"><span data-ttu-id="dec8e-145">处理程序长度。</span><span class="sxs-lookup"><span data-stu-id="dec8e-145">Handler length.</span></span></param>
        <summary><span data-ttu-id="dec8e-146">添加 finally 子句。</span><span class="sxs-lookup"><span data-stu-id="dec8e-146">Adds a finally clause.</span></span></summary>
        <returns><span data-ttu-id="dec8e-147">下一子句的编码器。</span><span class="sxs-lookup"><span data-stu-id="dec8e-147">Encoder for the next clause.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dec8e-148"><paramref name="tryOffset" />、<paramref name="tryLength" />、<paramref name="handlerOffset" /> 或 <paramref name="handlerLength" /> 超出范围。</span><span class="sxs-lookup"><span data-stu-id="dec8e-148"><paramref name="tryOffset" />, <paramref name="tryLength" />, <paramref name="handlerOffset" /> or <paramref name="handlerLength" /> is out of range.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dec8e-149">方法主体未声明为具有异常区域。</span><span class="sxs-lookup"><span data-stu-id="dec8e-149">Method body was not declared to have exception regions.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Builder">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobBuilder Builder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Metadata.BlobBuilder Builder" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Builder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Builder As BlobBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Metadata::BlobBuilder ^ Builder { System::Reflection::Metadata::BlobBuilder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Builder : System.Reflection.Metadata.BlobBuilder" Usage="System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Builder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dec8e-150">基础生成器。</span><span class="sxs-lookup"><span data-stu-id="dec8e-150">The underlying builder.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSmallFormat">
      <MemberSignature Language="C#" Value="public bool HasSmallFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSmallFormat" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.HasSmallFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasSmallFormat As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasSmallFormat { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasSmallFormat : bool" Usage="System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.HasSmallFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dec8e-151">如果编码器使用小格式，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="dec8e-151"><see langword="true" /> if the encoder uses small format.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSmallExceptionRegion">
      <MemberSignature Language="C#" Value="public static bool IsSmallExceptionRegion (int startOffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSmallExceptionRegion(int32 startOffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallExceptionRegion(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSmallExceptionRegion (startOffset As Integer, length As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSmallExceptionRegion(int startOffset, int length);" />
      <MemberSignature Language="F#" Value="static member IsSmallExceptionRegion : int * int -&gt; bool" Usage="System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallExceptionRegion (startOffset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startOffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startOffset"><span data-ttu-id="dec8e-152">区域的起始偏移量。</span><span class="sxs-lookup"><span data-stu-id="dec8e-152">Start offset of the region.</span></span></param>
        <param name="length"><span data-ttu-id="dec8e-153">区域的长度。</span><span class="sxs-lookup"><span data-stu-id="dec8e-153">Length of the region.</span></span></param>
        <summary><span data-ttu-id="dec8e-154">如果区域适合小格式，则返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="dec8e-154">Returns <see langword="true" /> if the region fits small format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSmallRegionCount">
      <MemberSignature Language="C#" Value="public static bool IsSmallRegionCount (int exceptionRegionCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSmallRegionCount(int32 exceptionRegionCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallRegionCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSmallRegionCount (exceptionRegionCount As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSmallRegionCount(int exceptionRegionCount);" />
      <MemberSignature Language="F#" Value="static member IsSmallRegionCount : int -&gt; bool" Usage="System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallRegionCount exceptionRegionCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptionRegionCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="exceptionRegionCount"><span data-ttu-id="dec8e-155">异常区域的数目。</span><span class="sxs-lookup"><span data-stu-id="dec8e-155">Number of exception regions.</span></span></param>
        <summary><span data-ttu-id="dec8e-156">如果异常区域的数目是第一小格式，则返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="dec8e-156">Returns <see langword="true" /> if the number of exception regions first small format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
