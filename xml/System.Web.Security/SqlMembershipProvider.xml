<Type Name="SqlMembershipProvider" FullName="System.Web.Security.SqlMembershipProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2995c7ece3ffc33763628887ae15bcb434292484" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89998178" /></Metadata><TypeSignature Language="C#" Value="public class SqlMembershipProvider : System.Web.Security.MembershipProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlMembershipProvider extends System.Web.Security.MembershipProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.SqlMembershipProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlMembershipProvider&#xA;Inherits MembershipProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlMembershipProvider : System::Web::Security::MembershipProvider" />
  <TypeSignature Language="F#" Value="type SqlMembershipProvider = class&#xA;    inherit MembershipProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.MembershipProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>管理 SQL Server 数据库中 ASP.NET 应用程序的成员资格信息存储。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 和类使用此类 <xref:System.Web.Security.Membership> <xref:System.Web.Security.MembershipUser> 为使用 SQL Server 数据库的 ASP.NET 应用程序提供成员身份服务。 不能使用 <xref:System.Web.Security.SqlMembershipProvider> 不带 SQL Server 的。 如果计算机安装了默认实例名称和用户实例化的 SQL Server Express，则 <xref:System.Web.Security.SqlMembershipProvider> `aspnetdb` `App_Data` 首次运行应用程序时，对象将在应用程序的目录中创建一个名为的数据库。  
  
 若要手动创建数据库，请运行 `Aspnet_regsql.exe` 在文件夹中找到的可执行文件， `%systemroot%\Microsoft.NET\Framework\ versionNumber` 并指定 `-A m` 选项 (例如 `aspnet_regsql.exe -A m`) 。 创建的数据库名为 Aspnetdb.mdf。 或者，运行 `Aspnet_regsql.exe` 以提取 GUI 配置模式并选择配置所有 ASP.NET 功能。  
  
 如果成员资格提供程序配置了使用集成安全性的连接字符串，则 ASP.NET 应用程序的进程帐户必须具有连接到 SQL Server 数据库的权限。  
  
 Machine.config 文件定义一个 <xref:System.Web.Security.SqlMembershipProvider> 名为的默认实例 `AspNetSqlMembershipProvider` ，该实例连接到本地计算机上的默认 SQL Server Express 实例。 如果使用默认实例名称安装 SQL Server Express，则可以使用此提供程序的实例，也可以在 ASP.NET 应用程序的 Web.config 文件中定义自己的实例。  
  
 如果将属性设置 `passwordCompatMode` 为 <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework40> ，则应用程序可以使用 ASP.NET 4 中已添加的哈希和加密成员资格选项。 但是，如果将 `passwordCompatMode` 属性设置为 <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20> ，则只能使用 ASP.NET 2.0、ASP.NET 3.5 和 ASP.NET 3.5 SP1 中的哈希和加密成员资格选项。 默认值是 <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>。 有关详细信息，请参阅 <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>。  
  
   
  
## Examples  
 下面的代码示例演示了配置为使用的 ASP.NET 应用程序的 Web.config 文件 <xref:System.Web.Security.SqlMembershipProvider> 。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
        name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
    </authorization>  
    <membership defaultProvider="SqlProvider"  
      userIsOnlineTimeWindow="15">  
      <providers>  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          applicationName="MyApplication"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          requiresUniqueEmail="false"  
          passwordFormat="Hashed"  
          maxInvalidPasswordAttempts="5"  
          passwordAttemptWindow="10" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlMembershipProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlMembershipProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Security.SqlMembershipProvider" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.%23ctor%2A>构造函数由 ASP.NET 调用，以创建 <xref:System.Web.Security.SqlMembershipProvider> 在应用程序的配置中指定的类的实例。 不应在代码中使用此构造函数。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.SqlMembershipProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要存储和检索其成员资格信息的应用程序的名称。</summary>
        <value>应用程序的名称，将存储和检索该应用程序的成员资格信息。 默认值为当前 <see cref="P:System.Web.HttpRequest.ApplicationPath" /> 的 <see cref="P:System.Web.HttpContext.Request" /> 属性值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>由用 <xref:System.Web.Security.SqlMembershipProvider> 来对用户信息进行分组。 通过使用应用程序名称限定用户信息，你可以将多个应用程序的信息存储在单个数据库中，而不会在重复用户名之间发生冲突。 另外，多个 ASP.NET 应用程序可以通过在属性中指定相同的值，来使用相同的用户数据库 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> 。 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>可以通过编程方式设置该属性，也可以在具有属性的 Web 应用程序的配置文件中以声明方式设置该属性 `applicationName` 。  
  
 如果没有为 `applicationName` Web 应用程序的配置文件中的属性指定值，则 <xref:System.Web.HttpRequest.ApplicationPath%2A> 使用对应用程序发出的第一个请求的属性值。  
  
> [!CAUTION]
>  由于单个默认成员资格提供程序实例用于某个对象提供的所有请求，因此 <xref:System.Web.HttpApplication> 可以同时执行多个请求并尝试设置该 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> 属性值。 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>对于多个写入，属性不是线程安全的，并且更改 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> 属性值可能会导致应用程序的多个用户产生意外行为。 建议你避免编写代码来允许用户设置 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> 属性，除非你必须这样做。 可能需要设置属性的应用程序的一个示例 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> 是管理多个应用程序的成员资格数据的管理应用程序。 此类应用程序应为单用户应用程序，而不是 Web 应用程序。  
  
   
  
## Examples  
 下面的代码示例显示了 ASP.NET 应用程序的 Web.config 文件部分中的 [成员身份](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) 元素 `system.web` 。 它指定应用程序的 <xref:System.Web.Security.SqlMembershipProvider> 实例，并将设置 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> 为 `MyApplication` 。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">尝试将 <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> 属性设置为空字符串或 <see langword="null" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">尝试将 <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> 属性设置为长于 256 个字符的字符串。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public override bool ChangePassword (string username, string oldPassword, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePassword(string username, string oldPassword, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePassword (username As String, oldPassword As String, newPassword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePassword(System::String ^ username, System::String ^ oldPassword, System::String ^ newPassword);" />
      <MemberSignature Language="F#" Value="override this.ChangePassword : string * string * string -&gt; bool" Usage="sqlMembershipProvider.ChangePassword (username, oldPassword, newPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="oldPassword" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要为其更新密码的用户。</param>
        <param name="oldPassword">指定的用户的当前密码。</param>
        <param name="newPassword">指定的用户的新密码。</param>
        <summary>修改用户密码。</summary>
        <returns>如果密码更新成功，则为 <see langword="true" />。 如果提供的旧密码无效、用户被锁定或数据库中不存在该用户，则返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法由 <xref:System.Web.Security.Membership> 类调用，以更新 ASP.NET 应用程序的配置文件中指定的 SQL Server 数据库中的用户的密码 ( # A0) 。  
  
 最大密码长度为128个字符。  
  
 如果为方法提供了错误密码 <xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A> ，则跟踪无效密码尝试的内部计数器会递增1。 这可能会导致用户被锁定，并且在通过调用方法清除锁定状态之前无法登录 <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> 。 如果提供了正确的密码并且用户当前未锁定，则跟踪无效密码和密码答案尝试的内部计数器将重置为零。 有关详细信息，请参阅 <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> 和 <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> 属性。  
  
 通过 <xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A> 先通过类的属性获取对实例的引用，可以直接调用方法 <xref:System.Web.Security.SqlMembershipProvider> <xref:System.Web.Security.Membership.Provider%2A> <xref:System.Web.Security.Membership> 。 <xref:System.Web.Security.Membership.Provider%2A>属性公开 `defaultProvider` 应用程序的 Web.config 文件中的指定。 配置的提供程序，这些提供程序不是使用属性引用的默认提供程序 <xref:System.Web.Security.Membership.Providers%2A> 。  
  
 还可以使用方法更改用户密码 <xref:System.Web.Security.MembershipUser.ChangePassword%2A> 。  
  
 将从所有参数值中去除前导空格和尾随空格。  
  
   
  
## Examples  
 下面的代码示例修改指定用户的密码。  
  
> [!NOTE]
>  此示例使用 <xref:System.Web.Security.Membership.Provider%2A> 类的属性 <xref:System.Web.Security.Membership> ，以 <xref:System.Web.Security.SqlMembershipProvider> `defaultProvider` 在 Web.config 文件中调用指定的。 如果需要以类型访问默认提供程序 <xref:System.Web.Security.SqlMembershipProvider> ，则可以强制转换 <xref:System.Web.Security.Membership.Provider%2A> 类的属性 <xref:System.Web.Security.Membership> 。 若要以特定的提供程序类型访问其他已配置的提供程序，可以使用类的属性访问这些提供程序， <xref:System.Web.Security.Membership.Providers%2A> <xref:System.Web.Security.Membership> 并将其转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordcs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 为空字符串 ("")、包含一个逗号或长度超过 256 个字符。  
  
- 或 - 
 <paramref name="oldPassword" /> 为空字符串，或者长度超过 128 个字符。  
  
- 或 - 
 <paramref name="newPassword" /> 为空字符串，或者长度超过 128 个字符。  
  
- 或 - 
编码版本的 <paramref name="newPassword" /> 的长度超过 128 个字符。  
  
- 或 - 
更改密码操作被 <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> 事件的订户取消，并且 <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> 属性为 <see langword="null" />。  
  
- 或 - 
<paramref name="newPassword" /> 的长度小于 <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" /> 属性中指定的最小长度。  
  
- 或 - 
<paramref name="newPassword" /> 中非字母字符数量少于 <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" /> 属性中指定的所需非字母字符数量。  
  
- 或 - 
 <paramref name="newPassword" /> 未通过 <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" /> 属性中定义的正则表达式的验证。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="oldPassword" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="newPassword" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Web.Security.MembershipPasswordException">在数据库中找不到 <paramref name="username" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">设置数据库新密码值时出现错误。</exception>
        <exception cref="T:System.Exception">发生了未经处理的异常。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePasswordQuestionAndAnswer (username As String, password As String, newPasswordQuestion As String, newPasswordAnswer As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePasswordQuestionAndAnswer(System::String ^ username, System::String ^ password, System::String ^ newPasswordQuestion, System::String ^ newPasswordAnswer);" />
      <MemberSignature Language="F#" Value="override this.ChangePasswordQuestionAndAnswer : string * string * string * string -&gt; bool" Usage="sqlMembershipProvider.ChangePasswordQuestionAndAnswer (username, password, newPasswordQuestion, newPasswordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="newPasswordQuestion" Type="System.String" />
        <Parameter Name="newPasswordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要为其更改密码提示问题和答案的用户。</param>
        <param name="password">指定的用户的密码。</param>
        <param name="newPasswordQuestion">指定的用户的新密码提示问题。</param>
        <param name="newPasswordAnswer">指定的用户的新密码提示问题答案。</param>
        <summary>更新 SQL Server 成员资格数据库中用户的密码提示问题和答案。</summary>
        <returns>如果更新操作成功，则为 <see langword="true" />；否则为 <see langword="false" />。 如果 <paramref name="password" /> 错误、用户被锁定或数据库中不存在该用户，还将返回 <see langword="false" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法由类调用， <xref:System.Web.Security.MembershipUser> 以更新 ASP.NET 应用程序的配置文件中指定的 SQL Server 数据库中的用户的密码提示问题和答案 ( # A0) 。 密码答案是使用属性中指定的格式进行加密的 <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> 。  
  
 在检索或重置用户密码时，需要密码提示问题和答案可以提供额外的安全层。 创建用户名时，用户可以提供稍后可用于检索或重置忘记密码的问题和答案。 <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A>方法为成员资格用户更新密码提示问题和答案。  
  
 如果为方法提供了错误密码 <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A> ，则跟踪无效密码尝试的内部计数器会递增1。 这可能会导致用户被锁定，并且在通过调用方法清除锁定状态之前无法登录 <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> 。 如果提供了正确的密码并且用户当前未锁定，则跟踪无效密码和密码答案尝试的内部计数器将重置为零。 有关详细信息，请参阅 <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> 和 <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> 属性。  
  
 密码提示问题的最大长度为256个字符。 密码答案的最大长度为128个字符。  
  
 有关详细信息，请参阅<xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>、<xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>和<xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>。  
  
 将从所有参数值中去除前导空格和尾随空格。  
  
   
  
## Examples  
 下面的代码示例将更新用户的密码提示问题和答案。  
  
> [!NOTE]
>  此示例使用 <xref:System.Web.Security.Membership.Provider%2A> 类的属性 <xref:System.Web.Security.Membership> ，以 <xref:System.Web.Security.SqlMembershipProvider> `defaultProvider` 在 Web.config 文件中调用指定的。 如果需要以类型访问默认提供程序 <xref:System.Web.Security.SqlMembershipProvider> ，则可以强制转换 <xref:System.Web.Security.Membership.Provider%2A> 类的属性 <xref:System.Web.Security.Membership> 。 若要以特定的提供程序类型访问其他已配置的提供程序，可以使用类的属性访问这些提供程序， <xref:System.Web.Security.Membership.Providers%2A> <xref:System.Web.Security.Membership> 并将其转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordQuestioncs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordQuestionvb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 为空字符串 ("")、包含一个逗号或长度超过 256 个字符。  
  
- 或 - 
 <paramref name="password" /> 为空字符串，或者长度超过 128 个字符。  
  
- 或 - 
 <paramref name="newPasswordQuestion" /> 为空字符串，或者长度超过 256 个字符。  
  
- 或 - 
 <paramref name="newPasswordAnswer" /> 为空字符串，或者长度超过 128 个字符。  
  
- 或 - 
<paramref name="newPasswordAnswer" /> 的编码版本长度 128 个字符。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="password" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="newPasswordQuestion" /> 为 <see langword="null" />，而 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> 为 <see langword="true" />。  
  
- 或 - 
 <paramref name="newPasswordAnswer" /> 为 <see langword="null" />，而 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> 为 <see langword="true" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">更改数据库中的密码提示问题和答案时出错。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="override this.CreateUser : string * string * string * string * string * bool * obj * MembershipCreateStatus -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, providerUserKey, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">新用户的用户名。</param>
        <param name="password">新用户的密码。</param>
        <param name="email">新用户的电子邮件地址。</param>
        <param name="passwordQuestion">新用户的密码提示问题。</param>
        <param name="passwordAnswer">新用户的密码提示问题答案。</param>
        <param name="isApproved">是否允许验证新用户。</param>
        <param name="providerUserKey">唯一标识 SQL Server 数据库中成员资格用户的 <see cref="T:System.Guid" />。</param>
        <param name="status">一个 <see cref="T:System.Web.Security.MembershipCreateStatus" /> 值，指示是否成功创建用户。</param>
        <summary>向 SQL Server 成员资格数据库添加一个新用户。</summary>
        <returns>用于新创建用户的 <see cref="T:System.Web.Security.MembershipUser" /> 对象。 如果没有创建用户，此方法将返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法由 <xref:System.Web.Security.Membership> 类调用，以在 ASP.NET 应用程序的配置文件中指定的 SQL Server 数据库中创建新用户。  
  
 新用户用配置的标识 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> 。  
  
 如果将 <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> 属性设置为 `true` ，或为 `null` 参数指定了空字符串 ( "" ) `email` ，则用户创建将失败。 如果将 <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> 属性设置为 `true` ，并且为该参数指定的值 `email` 是的配置的数据库中的现有用户的电子邮件地址重复，则用户创建也会失败 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> 。  
  
 用户名的最大长度为256个字符。 电子邮件地址的最大长度为256个字符。 密码的最大长度为明文或哈希或加密之后为128个字符。  
  
 导致用户创建失败的其他情况：  
  
-   `password`参数为 `null` ，或修整后出现空字符串。  
  
-   参数的长度 `password` 小于在属性中指定的值 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> 。  
  
-   参数中的非字母字符数小于在 `password` 属性中指定的值 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> 。  
  
-   `password`参数未在属性中传递正则表达式 <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> 。  
  
-   自定义密码验证代码在事件期间取消了用户创建 <xref:System.Web.Security.MembershipProvider.ValidatingPassword> 。  
  
-   <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>属性为 `true` ，并且 `passwordAnswer` 参数为 `null` 或修整后的空字符串。  
  
-   `passwordAnswer` 参数是空字符串。  
  
-   `passwordAnswer`参数的长度超过128个字符。  
  
-   <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>属性为 `true` ，并且密码问题为 `null` 或修整后的空字符串。  
  
-   `passwordQuestion` 参数是空字符串。  
  
-   `passwordQuestion`参数的长度超过256个字符。  
  
-   `providerUserKey`参数设置为类型以外的对象 <xref:System.Guid?displayProperty=nameWithType> 。  
  
-   `providerUserKey`参数是现有用户密钥的副本。  
  
-   `username`参数与现有用户名重复。  
  
 将从所有字符串参数值中去除前导空格和尾随空格。  
  
   
  
## Examples  
 下面的代码示例为配置为使用 forms 身份验证和的 ASP.NET 应用程序创建一个新用户 <xref:System.Web.Security.SqlMembershipProvider> 。 如果未成功创建用户，则会向用户显示一条消息。 否则，会将用户重定向到应用程序的登录页。  
  
> [!NOTE]
>  此示例 <xref:System.Web.Security.SqlMembershipProvider> `defaultProvider` 使用类在 Web.config 文件中调用指定的 <xref:System.Web.Security.Membership> 。 如果需要以类型访问默认提供程序 <xref:System.Web.Security.SqlMembershipProvider> ，则可以强制转换 <xref:System.Web.Security.Membership.Provider%2A> 类的属性 <xref:System.Web.Security.Membership> 。 若要以特定的提供程序类型访问其他已配置的提供程序，可以使用类的属性访问这些提供程序， <xref:System.Web.Security.Membership.Providers%2A> <xref:System.Web.Security.Membership> 并将其转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public override bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberSignature Language="F#" Value="override this.DeleteUser : string * bool -&gt; bool" Usage="sqlMembershipProvider.DeleteUser (username, deleteAllRelatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">要删除的用户的名称。</param>
        <param name="deleteAllRelatedData">如果要从数据库中删除与用户相关的数据，则为 <see langword="true" />；如果要在数据库中保留与用户相关的数据，则为 <see langword="false" />。</param>
        <summary>从 SQL Server 成员资格数据库删除用户的成员资格信息。</summary>
        <returns>如果用户已删除，则为 <see langword="true" />；否则为 <see langword="false" />。 如果数据库中没有此用户，也会返回 <see langword="false" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法由 <xref:System.Web.Security.Membership> 类调用，以从 ASP.NET 应用程序的配置文件中指定的 SQL Server 数据库中删除用户。  
  
 仅从配置的中删除已删除的用户 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> 。  
  
 如果 `deleteAllRelatedData` 设置为 `true` ，则 <xref:System.Web.Security.Roles> <xref:System.Web.HttpContext.Profile%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart> 还会为配置的删除、或个性化功能的数据库中存储的所有用户数据 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> 。  
  
 如果成员资格用户在数据库中不存在，并且 `deleteAllRelatedData` 为，则仍将为 `true` <xref:System.Web.Security.Roles> <xref:System.Web.HttpContext.Profile%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart> 属性中指定的应用程序删除为、或个性化功能存储的相关数据和用户信息 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> 。 因此，该 <xref:System.Web.Security.SqlMembershipProvider.DeleteUser%2A> 方法可用于快速删除与用户相关的信息，即使该 <xref:System.Web.Security.SqlMembershipProvider> 对象不用于存储经过身份验证的用户信息也是如此。  
  
 删除 `username` 参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例将删除当前已登录的用户。  
  
> [!NOTE]
>  此示例使用 <xref:System.Web.Security.SqlMembershipProvider> <xref:System.Web.Security.SqlMembershipProvider> `defaultProvider` 在 Web.config 文件中调用指定的作为。 如果需要以类型访问默认提供程序 <xref:System.Web.Security.SqlMembershipProvider> ，则可以强制转换 <xref:System.Web.Security.Membership.Provider%2A> 类的属性 <xref:System.Web.Security.Membership> 。 若要以特定的提供程序类型访问其他已配置的提供程序，可以使用类的属性访问这些提供程序， <xref:System.Web.Security.Membership.Providers%2A> <xref:System.Web.Security.Membership> 并将其转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 为空字符串 ("")、包含一个逗号或长度超过 256 个字符。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> 为 <see langword="null" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordReset { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordReset : bool" Usage="System.Web.Security.SqlMembershipProvider.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，指示 SQL Server 成员资格提供程序是否配置为允许用户重置其密码。</summary>
        <value>如果成员资格提供程序支持密码重置，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 密码重置允许成员资格提供程序将用户名的当前密码替换为随机生成的新密码。 当 <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> 属性设置为时，此方法特别有用 <xref:System.Web.Security.MembershipPasswordFormat.Hashed> ，因为用户无法检索哈希密码值。  
  
   
  
## Examples  
 下面的代码示例显示了 ASP.NET 应用程序的 Web.config 文件部分中的 [成员身份](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) 元素 `system.web` 。 它指定应用程序的 <xref:System.Web.Security.SqlMembershipProvider> 实例，并启用密码重置。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordRetrieval : bool" Usage="System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，指示 SQL Server 成员资格提供程序是否配置为允许用户检索其密码。</summary>
        <value>如果成员资格提供程序支持密码检索，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果将 <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> 属性设置为 <xref:System.Web.Security.MembershipPasswordFormat.Hashed> ，则用户将无法从数据库中检索其现有密码。 <xref:System.Web.Security.MembershipPasswordFormat.Hashed>密码格式提供密码值的单向编码。 密码使用随机生成的 salt 值进行哈希处理，并与存储在用于身份验证的数据库中的值进行比较。 不能对哈希值进行编码以检索原始密码值。  
  
 如果 <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> 属性设置为 <xref:System.Web.Security.MembershipPasswordFormat.Hashed> ，并且 <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> 设置为，则在 `true` <xref:System.Configuration.Provider.ProviderException> 初始化提供程序时引发。  
  
   
  
## Examples  
 下面的代码示例显示了 ASP.NET 应用程序的 Web.config 文件部分中的 [成员身份](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) 元素 `system.web` 。 它指定应用程序的 <xref:System.Web.Security.SqlMembershipProvider> 实例，并启用密码检索。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindUsersByEmail : string * int * int * int -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.FindUsersByEmail (emailToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">要搜索的电子邮件地址。</param>
        <param name="pageIndex">要返回的结果页的索引。 <paramref name="pageIndex" /> 从零开始。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">匹配用户的总数。</param>
        <summary>返回成员资格用户集合，这些用户的电子邮件地址字段包含指定的电子邮件地址。</summary>
        <returns>包含一页 <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> 对象的 <see cref="T:System.Web.Security.MembershipUserCollection" />，这些对象从 <paramref name="pageIndex" /> 指定的页开始。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> 返回一个成员资格用户的列表，其中的电子邮件地址包含与为配置的提供的匹配的匹配项 `emailToMatch` <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> 。  
  
 <xref:System.Web.Security.SqlMembershipProvider> `emailToMatch` 使用 LIKE 子句搜索与参数值匹配的用户名。 参数值中可以包含 SQL Server 通配符。 例如，如果将 `emailToMatch` 参数设置为 " address@example.com "，则返回电子邮件地址为 "" 的用户的信息 address@example.com （如果存在）。 如果 `emailToMatch` 将参数设置为 "% @example.com "，则将返回电子邮件地址为 " address@example.com "、" address2@example.com "、"" 等的用户的信息 admin@example.com 。  
  
 返回的结果 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> 是由 `pageIndex` 和参数约束的 `pageSize` 。 `pageSize`参数标识 <xref:System.Web.Security.MembershipUser> 要在中返回的对象的最大数目 <xref:System.Web.Security.MembershipUserCollection> 。 `pageIndex`参数标识要返回的结果页，其中零标识第一页。 `totalRecords`参数是一个 `out` 参数，该参数设置为已配置的成员资格用户的总数 `applicationName` 。 例如，如果配置了13个用户 `applicationName` ，并且 `pageIndex` 值为1且为 `pageSize` 5，则 <xref:System.Web.Security.MembershipUserCollection> 返回的将包含返回的第六到第十个用户。 `totalRecords`参数将设置为13。  
  
 删除 `emailToMatch` 参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例使用 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> 方法来检索成员资格用户信息，并在数据页中显示结果。  
  
> [!NOTE]
>  此示例使用 <xref:System.Web.Security.Membership> 类 <xref:System.Web.Security.SqlMembershipProvider> `defaultProvider` 在 Web.config 文件中调用指定的。 如果需要以类型访问默认提供程序 <xref:System.Web.Security.SqlMembershipProvider> ，则可以强制转换 <xref:System.Web.Security.Membership.Provider%2A> 类的属性 <xref:System.Web.Security.Membership> 。 若要以特定的提供程序类型访问其他已配置的提供程序，可以使用类的属性访问这些提供程序， <xref:System.Web.Security.Membership.Providers%2A> <xref:System.Web.Security.Membership> 并将其转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="emailToMatch" /> 的长度超过 256 个字符。  
  
- 或 - 
 <paramref name="pageIndex" /> 小于零。  
  
- 或 - 
 <paramref name="pageSize" /> 小于一。  
  
- 或 - 
 <paramref name="pageIndex" /> 乘以 <paramref name="pageSize" />，然后加上 <paramref name="pageSize" /> 再减去 1 后得到的值大于 <see cref="F:System.Int32.MaxValue" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindUsersByName : string * int * int * int -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.FindUsersByName (usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">要搜索的用户名。</param>
        <param name="pageIndex">要返回的结果页的索引。 <paramref name="pageIndex" /> 从零开始。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">当此方法返回时，此参数包含匹配用户的总数。</param>
        <summary>获取一个成员资格用户的集合，其中的用户名包含要匹配的指定用户名。</summary>
        <returns>包含一页 <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> 对象的 <see cref="T:System.Web.Security.MembershipUserCollection" />，这些对象从 <paramref name="pageIndex" /> 指定的页开始。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> 返回一个成员资格用户的列表，其中的用户名包含与为配置的提供的匹配的 `usernameToMatch` <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> 。  
  
 <xref:System.Web.Security.SqlMembershipProvider> `usernameToMatch` 使用 LIKE 子句搜索与参数值匹配的用户名。 参数值可以包含 SQL Server 通配符。 例如，如果将 `usernameToMatch` 参数设置为 "user1"，则将返回用户名为 "user1" 的用户的用户信息（如果存在）。 如果将 `usernameToMatch` 参数设置为 "user%"，则将返回用户名为 "user1"、"用户 2"、"user_admin" 等的用户的用户信息。  
  
 返回的结果 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> 是由 `pageIndex` 和参数约束的 `pageSize` 。 `pageSize`参数标识 <xref:System.Web.Security.MembershipUser> 要在中返回的对象的最大数目 <xref:System.Web.Security.MembershipUserCollection> 。 `pageIndex`参数标识要返回的结果页，其中零标识第一页。 `totalRecords`参数是一个 `out` 参数，该参数设置为已配置的成员资格用户的总数 `applicationName` 。 例如，如果配置了13个用户 `applicationName` ，并且 `pageIndex` 值为1且为 `pageSize` 5，则 <xref:System.Web.Security.MembershipUserCollection> 返回的将包含返回的第6个到第10个用户。 `totalRecords`参数将设置为13。  
  
 删除 `usernameToMatch` 参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例使用 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> 方法来检索成员资格用户信息，并在数据页中显示结果。  
  
> [!NOTE]
>  此示例使用 SqlMembershipProvider 来调用 <xref:System.Web.Security.SqlMembershipProvider> 指定的作为 `defaultProvider` Web.config 文件中的。 如果需要以类型访问默认提供程序 <xref:System.Web.Security.SqlMembershipProvider> ，则可以强制转换 <xref:System.Web.Security.Membership.Provider%2A> 类的属性 <xref:System.Web.Security.Membership> 。 若要以特定的提供程序类型访问其他已配置的提供程序，可以使用类的属性访问这些提供程序， <xref:System.Web.Security.Membership.Providers%2A> <xref:System.Web.Security.Membership> 并将其转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> 为空字符串 ("")，或者长度超过 256 个字符。  
  
- 或 - 
 <paramref name="pageIndex" /> 小于零。  
  
- 或 - 
 <paramref name="pageSize" /> 小于 1。  
  
- 或 - 
 <paramref name="pageIndex" /> 乘以 <paramref name="pageSize" />，然后加上 <paramref name="pageSize" /> 再减去 1 后得到的值大于 <see cref="F:System.Int32.MaxValue" />。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> 为 <see langword="null" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public virtual string GeneratePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GeneratePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GeneratePassword" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GeneratePassword () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GeneratePassword();" />
      <MemberSignature Language="F#" Value="abstract member GeneratePassword : unit -&gt; string&#xA;override this.GeneratePassword : unit -&gt; string" Usage="sqlMembershipProvider.GeneratePassword " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>生成长度至少为 14 个字符的随机密码。</summary>
        <returns>长度至少为 14 个字符的随机密码。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership>类提供一个 <xref:System.Web.Security.Membership.GeneratePassword%2A> 方法，该方法将生成指定大小至少为指定数量的非字母字符的密码。 <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A>的方法 <xref:System.Web.Security.SqlMembershipProvider> 调用 <xref:System.Web.Security.Membership.GeneratePassword%2A> 类的方法 <xref:System.Web.Security.Membership> 来检索长度至少为14个字符的随机密码。 如果 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> 属性大于14，则返回的密码将是属性中指定的长度 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> 。  
  
 您可以 <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> 通过 <xref:System.Web.Security.SqlMembershipProvider> 直接从类的属性中引用类来专门调用方法 <xref:System.Web.Security.Membership.Provider%2A> <xref:System.Web.Security.Membership> 。  
  
 生成的密码只包含字母数字字符和以下标点符号： `!@#$%^&*()_-+=[{]};:<>|./?` 。 生成的密码中不包含隐藏或不可打印的控制字符。  
  
> [!NOTE]
>  不保证通过方法创建的随机密码 <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> 在属性中传递正则表达式 <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> 。 但是，随机密码会满足和属性所建立的条件 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> 。  
  
   
  
## Examples  
 下面的代码示例生成一个随机10个字符的密码。  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GeneratePasswordcs.aspx#9)]
 [!code-vb[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GeneratePasswordvb.aspx#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.GetAllUsers : int * int * int -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.GetAllUsers (pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">要返回的结果页的索引。 <paramref name="pageIndex" /> 从零开始。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">用户的总数。</param>
        <summary>获取 SQL Server 成员资格数据库中所有用户的集合。</summary>
        <returns><see cref="T:System.Web.Security.MembershipUserCollection" /> 对象的 <see cref="T:System.Web.Security.MembershipUser" />，表示数据库中配置的 <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> 的所有用户。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法由 <xref:System.Web.Security.Membership> 类调用，以从 ASP.NET 应用程序的配置文件中指定的 SQL Server 数据库中检索用户信息 ( # A0) 。  
  
 返回的结果 <xref:System.Web.Security.SqlMembershipProvider.GetAllUsers%2A> 是由 `pageIndex` 和参数约束的 `pageSize` 。 `pageSize`参数标识 <xref:System.Web.Security.MembershipUser> 要在中返回的对象的最大数目 <xref:System.Web.Security.MembershipUserCollection> 。 `pageIndex`参数标识要返回的结果页，其中零标识第一页。 `totalRecords`参数是一个 `out` 参数，该参数设置为已配置的成员资格用户的总数 `applicationName` 。 例如，如果配置了13个用户 `applicationName` ，并且 `pageIndex` 值为1且为 `pageSize` 5，则 <xref:System.Web.Security.MembershipUserCollection> 返回的将包含返回的第6个到第10个用户。 `totalRecords`参数将设置为13。  
  
   
  
## Examples  
 下面的代码示例返回数据页中的用户列表，其中包含当前联机用户数的计数。  
  
> [!NOTE]
>  此示例使用 <xref:System.Web.Security.Membership> 类 <xref:System.Web.Security.SqlMembershipProvider> `defaultProvider` 在 Web.config 文件中调用指定的。 如果需要以类型访问默认提供程序 <xref:System.Web.Security.SqlMembershipProvider> ，则可以强制转换 <xref:System.Web.Security.Membership.Provider%2A> 类的属性 <xref:System.Web.Security.Membership> 。 若要以特定的提供程序类型访问其他已配置的提供程序，可以使用类的属性访问这些提供程序， <xref:System.Web.Security.Membership.Providers%2A> <xref:System.Web.Security.Membership> 并将其转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="pageIndex" /> 小于零。  
  
- 或 - 
 <paramref name="pageSize" /> 小于一。  
  
- 或 - 
 <paramref name="pageIndex" /> 乘以 <paramref name="pageSize" />，然后加上 <paramref name="pageSize" /> 再减去 1 后得到的值大于 <see cref="F:System.Int32.MaxValue" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public override int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetNumberOfUsersOnline();" />
      <MemberSignature Language="F#" Value="override this.GetNumberOfUsersOnline : unit -&gt; int" Usage="sqlMembershipProvider.GetNumberOfUsersOnline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回当前访问该应用程序的用户数。</summary>
        <returns>当前正在访问应用程序的用户数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法由 <xref:System.Web.Security.Membership> 类调用，以检索从 ASP.NET 应用程序的配置文件中指定的 SQL Server 数据库获得的联机用户数量 ( # A0) 。  
  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> 返回当前应用程序的用户数，其最后一个活动的日期和时间大于当前日期和时间 <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> （以分钟为单位）属性的值。  
  
 计数中仅包括与配置的关联的用户 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> 。  
  
   
  
## Examples  
 下面的代码示例返回用户的列表，其中包含当前联机的用户计数。  
  
> [!NOTE]
>  此示例使用 <xref:System.Web.Security.Membership> 类 <xref:System.Web.Security.SqlMembershipProvider> `defaultProvider` 在 Web.config 文件中调用指定的。 如果需要以类型访问默认提供程序 <xref:System.Web.Security.SqlMembershipProvider> ，则可以强制转换 <xref:System.Web.Security.Membership.Provider%2A> 类的属性 <xref:System.Web.Security.Membership> 。 若要以特定的提供程序类型访问其他已配置的提供程序，可以使用类的属性访问这些提供程序， <xref:System.Web.Security.Membership.Providers%2A> <xref:System.Web.Security.Membership> 并将其转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="GetPassword">
      <MemberSignature Language="C#" Value="public override string GetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberSignature Language="F#" Value="override this.GetPassword : string * string -&gt; string" Usage="sqlMembershipProvider.GetPassword (username, passwordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要为其检索密码的用户。</param>
        <param name="passwordAnswer">用户的密码提示问题答案。</param>
        <summary>从 SQL Server 成员资格数据库返回指定用户名的密码。</summary>
        <returns>指定用户名所对应的密码。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法由 <xref:System.Web.Security.MembershipUser> 类调用，以从 ASP.NET 应用程序的配置文件中指定的 SQL Server 数据库中检索用户的密码 ( # A0) 。  
  
 如果为方法提供的密码答案不正确 <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> ，则跟踪无效密码答案尝试的内部计数器会递增1。 这可能会导致用户被锁定，并且在通过调用方法清除锁定状态之前无法登录 <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> 。 如果提供了正确的密码答案并且用户当前未锁定，则跟踪无效密码答案尝试的内部计数器将重置为零。 有关详细信息，请参阅 <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> 和 <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> 属性。  
  
 通过 <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> 先通过类的属性获取对实例的引用，可以直接调用方法 <xref:System.Web.Security.SqlMembershipProvider> <xref:System.Web.Security.Membership.Provider%2A> <xref:System.Web.Security.Membership> 。  
  
 如果将 <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> 属性设置为 <xref:System.Web.Security.MembershipPasswordFormat.Hashed> ，则此 <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> 方法将无法检索密码。 哈希密码是单向加密的，无法解密。 如果 <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> 属性设置为 <xref:System.Web.Security.MembershipPasswordFormat.Hashed> ，并且 <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> 设置为，则在 `true` <xref:System.Configuration.Provider.ProviderException> 初始化提供程序时引发。  
  
 将从所有参数值中去除前导空格和尾随空格。  
  
   
  
## Examples  
 下面的代码示例检索指定用户名的密码，并通过电子邮件将其发送给用户。  
  
> [!NOTE]
>  对于需要高安全级别的站点，不建议使用电子邮件以明文形式返回密码。 对于高安全性站点，建议使用加密（如 SSL）返回密码。  
  
> [!NOTE]
>  此示例 <xref:System.Web.Security.SqlMembershipProvider> `defaultProvider` 使用类在 Web.config 文件中调用指定的 <xref:System.Web.Security.Membership> 。 如果需要以类型访问默认提供程序 <xref:System.Web.Security.SqlMembershipProvider> ，则可以强制转换 <xref:System.Web.Security.Membership.Provider%2A> 类的属性 <xref:System.Web.Security.Membership> 。 若要以特定的提供程序类型访问其他已配置的提供程序，可以使用类的属性访问这些提供程序， <xref:System.Web.Security.Membership.Providers%2A> <xref:System.Web.Security.Membership> 并将其转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException"><paramref name="passwordAnswer" /> 无效。  
  
- 或 - 
<paramref name="username" /> 标识的成员资格用户已被锁定。</exception>
        <exception cref="T:System.NotSupportedException">将 <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" /> 设置为 <see langword="false" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">在成员资格数据库中找不到 <paramref name="username" />。  
  
- 或 - 
从数据库中检索密码时出现错误。</exception>
        <exception cref="T:System.ArgumentException">某个参数值超过最大允许长度。  
  
- 或 - 
 <paramref name="username" /> 为空字符串 ("")、包含一个逗号或长度超过 256 个字符。  
  
- 或 - 
 <paramref name="passwordAnswer" /> 是空字符串且 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> 为 <see langword="true" />。  
  
- 或 - 
 <paramref name="passwordAnswer" /> 的长度超过 128 个字符。  
  
- 或 - 
编码版本的 <paramref name="passwordAnswer" /> 的长度超过 128 个字符。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="passwordAnswer" /> 为 <see langword="null" />，而 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> 为 <see langword="true" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>从数据源获取成员资格用户的信息。</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="override this.GetUser : obj * bool -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.GetUser (providerUserKey, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">用户的唯一标识符。</param>
        <param name="userIsOnline">如果为 <see langword="true" />，则更新指定用户的上次活动日期/时间戳；否则为 <see langword="false" />。</param>
        <summary>从数据源获得与指定的唯一标识符关联的成员资格用户的信息，并更新该用户的上次活动日期/时间戳（如果指定）。</summary>
        <returns>一个 <see cref="T:System.Web.Security.MembershipUser" /> 对象，它表示与指定的唯一标识符关联的用户。 如果在数据库中没有找到指定的 <paramref name="providerUserKey" /> 值所对应的用户，则返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> 从数据源检索用户信息，并创建 <xref:System.Web.Security.MembershipUser> 用返回的数据填充的对象。 用户使用参数指定的唯一标识符进行标识 `providerUserKey` 。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="providerUserKey" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="providerUserKey" /> 的类型不是 <see cref="T:System.Guid" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="override this.GetUser : string * bool -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.GetUser (username, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">要为其获取信息的用户的名称。</param>
        <param name="userIsOnline">设置为 <see langword="true" /> 则更新用户的上次活动日期/时间戳；设置为 <see langword="false" /> 则返回用户信息而不更新用户的上次活动日期/时间戳。</param>
        <summary>从 SQL Server 成员资格数据库返回用户的信息，并提供更新用户的上次活动日期/时间戳的可选功能。</summary>
        <returns>一个 <see cref="T:System.Web.Security.MembershipUser" /> 对象，它表示指定的用户。 如果在数据库中没有找到指定的 <paramref name="username" /> 值所对应的用户，则返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法由 <xref:System.Web.Security.Membership> 类调用，以从 ASP.NET 应用程序的配置文件中指定的 SQL Server 数据库中检索用户信息 ( # A0) 。  
  
 如果 `userIsOnline` 为 `true` ，则将用户的上次活动日期/时间戳更新为当前日期和时间。 这会反映在 <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> 和 <xref:System.Web.Security.MembershipUser.IsOnline%2A> 属性以及由返回的值中 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> 。  
  
 删除 `username` 参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例使用 <xref:System.Web.Security.SqlMembershipProvider.GetUser%2A> 方法来确定在检索用户的密码之前是否存在用户。  
  
> [!NOTE]
>  此示例使用 <xref:System.Web.Security.Membership> 类 <xref:System.Web.Security.SqlMembershipProvider> `defaultProvider` 在 Web.config 文件中调用指定的。 如果需要以类型访问默认提供程序 <xref:System.Web.Security.SqlMembershipProvider> ，则可以强制转换 <xref:System.Web.Security.Membership.Provider%2A> 类的属性 <xref:System.Web.Security.Membership> 。 若要以特定的提供程序类型访问其他已配置的提供程序，可以使用类的属性访问这些提供程序， <xref:System.Web.Security.Membership.Providers%2A> <xref:System.Web.Security.Membership> 并将其转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 的长度超过 256 个字符。  
  
- 或 - 
 <paramref name="username" /> 包含一个逗号。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> 为 <see langword="null" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public override string GetUserNameByEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetUserNameByEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUserNameByEmail (email As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetUserNameByEmail(System::String ^ email);" />
      <MemberSignature Language="F#" Value="override this.GetUserNameByEmail : string -&gt; string" Usage="sqlMembershipProvider.GetUserNameByEmail email" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">要搜索的电子邮件地址。</param>
        <summary>获取与指定电子邮件地址关联的用户名。</summary>
        <returns>与指定电子邮件地址关联的用户名。 如果未找到匹配项，此方法将返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法由 <xref:System.Web.Security.Membership> 具有电子邮件地址的类调用，该地址用于从 ASP.NET 应用程序的配置文件中指定的 SQL Server 数据库中检索关联的用户名 ( # A0) 。  
  
 如果成员资格数据库中有多个用户具有相同的电子邮件地址，则返回遇到的第一个用户名。 可以 `requiresUniqueEmail` `true` 在应用程序配置文件中将属性设置为，以确保数据库中的每个电子邮件地址都是唯一的。  
  
 删除 `email` 参数值的前导和尾随空格。  
  
   
  
## Examples  
 下面的代码示例检索指定电子邮件地址的用户名。  
  
> [!NOTE]
>  此示例使用 <xref:System.Web.Security.Membership> 类 <xref:System.Web.Security.SqlMembershipProvider> `defaultProvider` 在 Web.config 文件中调用指定的。 如果需要以类型访问默认提供程序 <xref:System.Web.Security.SqlMembershipProvider> ，则可以强制转换 <xref:System.Web.Security.Membership.Provider%2A> 类的属性 <xref:System.Web.Security.Membership> 。 若要以特定的提供程序类型访问其他已配置的提供程序，可以使用类的属性访问这些提供程序， <xref:System.Web.Security.Membership.Providers%2A> <xref:System.Web.Security.Membership> 并将其转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="email" /> 的长度超过 256 个字符。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">数据库中存在多个具有相同电子邮件地址的用户，并且 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> 为 <see langword="true" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="sqlMembershipProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">要初始化的 <see cref="T:System.Web.Security.SqlMembershipProvider" /> 实例的名称。</param>
        <param name="config">一个 <see cref="T:System.Collections.Specialized.NameValueCollection" />，其中包含成员资格提供程序配置选项的值和名称。</param>
        <summary>使用 ASP.NET 应用程序配置文件中指定的属性值初始化 SQL Server 成员资格提供程序。 此方法不能直接在代码中使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法 <xref:System.Web.Security.SqlMembershipProvider> 使用 ASP.NET 应用程序配置文件中指定的属性值初始化， ( # A0) ，不应在代码中直接使用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="config" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><see langword="enablePasswordRetrieval" />、<see langword="enablePasswordReset" />、<see langword="requiresQuestionAndAnswer" /> 或 <see langword="requiresUniqueEmail" /> 特性设置为一个非 <see langword="Boolean" /> 值。  
  
- 或 - 
<see langword="maxInvalidPasswordAttempts" /> 或 <see langword="passwordAttemptWindow" /> 特性设置为一个非正整数值。  
  
- 或 - 
<see langword="minRequiredPasswordLength" /> 特性设置为一个非正整数值或大于 128 的值。  
  
- 或 - 
<see langword="minRequiredNonalphanumericCharacters" /> 特性设置为一个非正整数或零的值，或者设置为一个大于 128 的值。  
  
- 或 - 
<see langword="passwordStrengthRegularExpression" /> 特性的值不是有效正则表达式。  
  
- 或 - 
<see langword="applicationName" /> 特性设置为一个大于 256 个字符的值。  
  
- 或 - 
应用程序配置文件中指定的 <see langword="passwordFormat" /> 特性是一个无效 <see cref="T:System.Web.Security.MembershipPasswordFormat" /> 枚举。  
  
- 或 - 
在应用程序配置中，<see langword="passwordFormat" /> 特性设置为 <see cref="F:System.Web.Security.MembershipPasswordFormat.Hashed" /> 且 <see langword="enablePasswordRetrieval" /> 特性设置为 <see langword="true" />。  
  
- 或 - 
<see langword="passwordFormat" /> 特性设置为 <see langword="Encrypted" /> 且 <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w8h3skw9(v%3dvs.100)">&lt;machineKey&gt;</see> 配置元素为 <see langword="decryptionKey" /> 特性指定了 <see langword="AutoGenerate" />。  
  
- 或 - 
<see langword="connectionStringName" /> 特性为空或应用程序配置中不存在该特性。  
  
- 或 - 
<see langword="connectionStringName" /> 特性值的连接字符串的值为空，或应用程序配置文件中不存在指定的 <see langword="connectionStringName" />。  
  
- 或 - 
<see langword="commandTimeout" /> 特性的值设置为一个非正整数或零的值。  
  
- 或 - 
该 <see cref="T:System.Web.Security.SqlMembershipProvider" /> 实例的应用程序配置文件包含无法识别的特性。</exception>
        <exception cref="T:System.Web.HttpException">当前信任级别低于 <see langword="Low" />。</exception>
        <exception cref="T:System.InvalidOperationException">在当前对 <see cref="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 方法的调用之前已初始化了提供程序。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public override int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxInvalidPasswordAttempts : int" Usage="System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在锁定成员资格用户之前允许的无效密码或密码答案尝试次数。</summary>
        <value>锁定成员资格用户之前允许的无效密码或密码答案尝试次数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>与配合使用 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> 来防止不必要的源通过重复尝试来猜测成员资格用户的密码或密码答案。 如果为成员资格用户提供的无效密码或密码问题的数量大于或等于属性 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> 值标识的分钟数中的属性值 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> ，则会通过将属性设置为来锁定成员资格用户， <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> `true` 直到使用方法解除锁定用户为止 <xref:System.Web.Security.MembershipUser.UnlockUser%2A> 。 如果在达到值之前提供了有效密码 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> ，则跟踪无效密码和密码答案尝试次数的计数器将重置为零。 如果在达到值之前提供了有效密码答案 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> ，则只有跟踪无效密码答案尝试次数的计数器将重置为零。  
  
 将 <xref:System.Web.Security.SqlMembershipProvider> 分别保留无效密码尝试次数和无效密码答案尝试次数。 无效的密码尝试会导致只增加密码尝试计数器。 无效的密码答案尝试仅导致密码答案计数器递增。  
  
 在 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> 应用程序配置中，使用 `maxInvalidPasswordAttempts` [成员资格](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) 配置节的属性设置该属性值。  
  
 如果将 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> 属性设置为 `false` ，则不会跟踪无效的密码答案尝试。  
  
   
  
## Examples  
 下面的代码示例显示了 ASP.NET 应用程序的 Web.config 文件部分中的 [成员身份](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) 元素 `system.web` 。 它指定应用程序使用的实例 <xref:System.Web.Security.SqlMembershipProvider> ，并将 `maxInvalidPasswordAttempts` 属性设置为5个无效尝试，并将设置为 `passwordAttemptWindow` 30 分钟。  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public override int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredNonAlphanumericCharacters : int" Usage="System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取有效密码中必须包含的最少特殊字符数。</summary>
        <value>有效密码中必须包含的最少特殊字符数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>属性返回为对象创建有效密码时必须输入的特殊非字母字符的最小数目 <xref:System.Web.Security.SqlMembershipProvider> 。  
  
 在 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> 应用程序配置中，使用成员资格元素的特性在应用程序配置中设置属性值 `minRequiredNonalphanumericCharacters` [ (ASP.NET 设置架构) ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v=vs.100)) 配置元素。  
  
 非字母数字字符是该 <xref:System.Char.IsLetterOrDigit%2A> 方法返回的字符 `false` 。  
  
   
  
## Examples  
 下面的示例显示了应用程序 Web.config 文件的部分中 [ (ASP.NET 设置架构) 配置元素的成员身份元素 ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v=vs.100)) `system.web` 。 它指定应用程序使用类的实例 <xref:System.Web.Security.SqlMembershipProvider> 来提供成员身份服务，并将 `minRequiredNonalphanumericCharacters` 特性设置为一个字符。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonalphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public override int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredPasswordLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredPasswordLength : int" Usage="System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取密码所需的最小长度。</summary>
        <value>密码所需的最小长度。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> 属性获取为对象创建有效密码时必须输入的最小字符数 <xref:System.Web.Security.SqlMembershipProvider> 。  
  
 在 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> 应用程序配置中，使用成员资格元素的特性在应用程序配置中设置属性值 `minRequiredPasswordLength` [ (ASP.NET 设置架构) ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v=vs.100)) 配置元素。  
  
   
  
## Examples  
 下面的示例显示了应用程序 Web.config 文件的部分中 [ (ASP.NET 设置架构) 配置元素的成员身份元素 ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v=vs.100)) `system.web` 。 它指定应用程序使用类的实例 <xref:System.Web.Security.SqlMembershipProvider> 来提供成员身份服务，并将该属性设置 `minRequiredPasswordLength` 为七个字符。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
    <providers>  
      <add  
        name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        minRequiredPasswordLength="7"  
        />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public override int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PasswordAttemptWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAttemptWindow : int" Usage="System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取时间长度，在该时间间隔内对提供有效密码或密码答案的连续失败尝试次数进行跟踪。</summary>
        <value>对未能提供有效密码或密码答案的连续尝试次数进行跟踪的时间长度（以分钟为单位）。 默认值为 10 分钟。 如果当前失败尝试和上次失败尝试之间的间隔大于 <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" /> 属性设置，则每个失败尝试均被视为第一次失败尝试。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此 <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> 属性与属性结合使用 <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> ，以帮助防止不需要的源通过重复尝试来猜测成员身份用户的密码或密码提示问题答案。 当用户尝试登录、更改其密码或重置其密码时，在指定的时间范围内只允许一定数量的连续尝试。 时间范围的长度由 <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> 属性指定，该属性用于标识无效尝试之间允许的分钟数。 如果用户重置其密码的连续失败尝试次数等于属性中存储的值 <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> ，并且自上次无效尝试以来所经过的时间小于为属性指定的分钟数 <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> ，则将属性设置为将锁定成员资格用户 <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> `true` 。 可以通过调用方法来解锁用户 <xref:System.Web.Security.MembershipUser.UnlockUser%2A> 。 如果当前失败尝试与上次失败尝试之间的间隔大于 <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> 属性设置，则当前的无效尝试将计为第一次。 如果在达到允许的最大尝试无效次数之前提供了有效密码答案，则无效密码答案尝试的计数将设置为零。 如果在达到允许的最大尝试无效次数之前提供了有效密码，则无效密码尝试次数和无效密码答案尝试计数将设置为零。  
  
 <xref:System.Web.Security.SqlMembershipProvider>分别保留无效密码尝试次数和无效密码答案尝试次数。 无效的密码尝试会导致只增加密码尝试计数器。 无效的密码答案尝试仅导致密码答案计数器递增。  
  
 在 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> 应用程序配置中，使用 `passwordAttemptWindow` [成员资格](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) 配置节的属性设置该属性值。  
  
 如果将 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> 属性设置为 `false` ，则不会跟踪无效的密码答案尝试。  
  
   
  
## Examples  
 下面的代码示例显示了 ASP.NET 应用程序的 Web.config 文件部分中的 [成员身份](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) 元素 `system.web` 。 它指定应用程序使用的实例 <xref:System.Web.Security.SqlMembershipProvider> ，并将 `maxInvalidPasswordAttempts` 属性设置为5个无效尝试，并将设置为 `passwordAttemptWindow` 30 分钟。  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordFormat">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.MembershipPasswordFormat PasswordFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordFormat As MembershipPasswordFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Security::MembershipPasswordFormat PasswordFormat { System::Web::Security::MembershipPasswordFormat get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordFormat : System.Web.Security.MembershipPasswordFormat" Usage="System.Web.Security.SqlMembershipProvider.PasswordFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipPasswordFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 SQL Server 成员资格数据库中存储密码的格式。</summary>
        <value>一个 <see cref="T:System.Web.Security.MembershipPasswordFormat" /> 值，它指示 SQL Server 数据库中存储密码的格式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Hashed`仅使用， `Clear` `Encrypted` 不安全。 `Hashed` 使用单向哈希算法和随机生成的 salt 值进行哈希处理，并将其存储在数据库中。 验证密码时，将使用数据库中用于验证的 salt 值对其进行哈希处理。 无法检索哈希密码。 `Encrypted` 密码不安全，因为泄露数据库内容也可以公开加密密钥。 这意味着可以对加密的密码进行解密和公开。  
  
 <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>该值是在 ASP.NET 应用程序的 Web.config 文件的 "[提供程序](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/6d4936ht(v%3dvs.100))" 部分中指定的。  
  
 `Encrypted``Hashed`默认情况下，基于在配置中的[machineKey](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w8h3skw9(v%3dvs.100))元素中提供的信息对和密码进行加密或哈希处理。 请注意，如果为属性指定值 `3DES` `validation` ，或者如果未指定任何值，则将使用算法对哈希密码进行哈希处理 <xref:System.Security.Cryptography.SHA1> 。  
  
 自定义哈希算法可以使用 `hashAlgorithmType` [成员资格元素 (ASP.NET 设置架构) ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v=vs.100)) 配置元素的属性进行定义。 如果选择了 "加密"，默认密码加密将使用 AES。 可以通过设置 `decryption` [machineKey](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w8h3skw9(v%3dvs.100)) 配置元素的属性来更改加密算法。 如果要加密密码，则必须为 `decryptionKey` [machineKey](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w8h3skw9(v%3dvs.100)) 元素中的属性提供显式值。 将 `AutoGenerate` `decryptionKey` 加密密码与 ASP.NET 成员身份结合使用时，不支持属性的默认值。  
  
 由于 SHA1 出现冲突问题，Microsoft 建议使用基于 SHA256 或更好的安全模型。  
  
## Examples  
 下面的代码示例显示了 ASP.NET 应用程序的 Web.config 文件部分中的 [成员身份](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) 元素 `system.web` 。 它指定应用程序的 <xref:System.Web.Security.SqlMembershipProvider> 实例，并将其密码格式设置为 `Hashed` 。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public override string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordStrengthRegularExpression : string" Usage="System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于计算密码的正则表达式。</summary>
        <value>用于计算密码的正则表达式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>属性获取用于计算对象的密码复杂性的正则表达式 <xref:System.Web.Security.SqlMembershipProvider> 。  
  
 在 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> 应用程序配置中，使用成员资格元素的特性在应用程序配置中设置属性， `passwordStrengthRegularExpression` [ (ASP.NET 设置架构) ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v=vs.100)) 配置元素。  
  
   
  
## Examples  
 下面的示例显示了应用程序 Web.config 文件的部分中 [ (ASP.NET 设置架构) 配置元素的成员身份元素 ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v=vs.100)) `system.web` 。 它指定应用程序使用类的实例 <xref:System.Web.Security.SqlMembershipProvider> 来提供成员身份服务，并将 `passwordStrengthRegularExpression` 特性设置为一个正则表达式，该表达式用于验证密码是否满足以下条件：  
  
-   至少为7个字符。  
  
-   包含至少一个数字。  
  
-   包含至少一个特殊 (非字母数字) 字符。  
  
 如果密码不符合这些条件，则成员资格提供程序不接受该密码。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression="@\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresQuestionAndAnswer : bool" Usage="System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，指示 SQL Server 成员资格提供程序是否配置为要求用户在进行密码重置和检索时回答密码提示问题。</summary>
        <value>如果密码重置和检索需要提供密码提示问题答案，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在检索或重置用户密码时，需要密码提示问题和答案可以提供额外的安全层。 创建用户名时，用户可以提供稍后可用于检索或重置忘记密码的问题和答案。 如果 <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A> 属性和 <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> 属性都是，则 `false` 属性的值 <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> 是不相关的。  
  
 有关详细信息，请参阅 <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> 和 <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>。  
  
   
  
## Examples  
 下面的代码示例显示了 ASP.NET 应用程序的 Web.config 文件部分中的 [成员身份](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) 元素 `system.web` 。 它指定应用程序的 <xref:System.Web.Security.SqlMembershipProvider> 实例，并将其配置为要求密码重置或检索的密码答案。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public override bool RequiresUniqueEmail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueEmail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresUniqueEmail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueEmail { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueEmail : bool" Usage="System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，指示 SQL Server 成员资格提供程序是否配置为要求每个用户名具有唯一的电子邮件地址。</summary>
        <value><see langword="true" /> 如果成员资格提供程序要求唯一的电子邮件地址，则为;否则为 <see langword="false" /> 。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例显示了 ASP.NET 应用程序的 Web.config 文件部分中的 [成员身份](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/1b9hw62f(v%3dvs.100)) 元素 `system.web` 。 它指定 <xref:System.Web.Security.SqlMembershipProvider> 实例，并将其配置为要求每个用户名具有唯一的电子邮件地址。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      requiresUniqueEmail="true"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="ResetPassword">
      <MemberSignature Language="C#" Value="public override string ResetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ResetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ResetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberSignature Language="F#" Value="override this.ResetPassword : string * string -&gt; string" Usage="sqlMembershipProvider.ResetPassword (username, passwordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要为其重置密码的用户。</param>
        <param name="passwordAnswer">指定的用户的密码提示问题答案。</param>
        <summary>将用户密码重置为自动生成的新密码。</summary>
        <returns>指定的用户的新密码。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法由 <xref:System.Web.Security.Membership> 类调用，以将 ASP.NET 应用程序配置文件中指定的 SQL Server 数据库中的用户的密码重置 ( # A0) 到新的、随机生成的值。 返回新密码。  
  
> [!NOTE]
>  不保证通过方法创建的随机密码 <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> 在属性中传递正则表达式 <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> 。 但是，随机密码会满足和属性所建立的条件 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> 。  
  
 <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>当属性设置为时，最常见的方法是使用方法 <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> `Hashed` 。 如果用户忘记了已进行哈希处理的密码，则无法检索该密码。 但是，如果用户提供正确的密码提示问题答案，则提供程序可以将密码重置为自动生成的新密码。  
  
 如果为方法提供的密码答案不正确 <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> ，则跟踪无效密码尝试的内部计数器会递增1。 这可能会导致用户被锁定，并且在通过调用方法清除锁定状态之前无法登录 <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> 。 如果提供了正确的密码答案并且用户当前未锁定，则跟踪无效密码答案尝试的内部计数器将重置为零。 有关详细信息，请参阅 <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> 和 <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> 属性。  
  
 您可以 <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> 通过先从类的属性获取对实例的引用，直接调用方法 <xref:System.Web.Security.SqlMembershipProvider> <xref:System.Web.Security.Membership.Provider%2A> <xref:System.Web.Security.Membership> 。 生成的密码的长度至少为14个字符，或属性中指定的长度， <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> 并将包含属性中指定的非字母数字字符数 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> 。 如果指定了属性，则不能保证密码传递该属性中包含的正则表达式 <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> 。  
  
 将从所有参数值中去除前导空格和尾随空格。  
  
   
  
## Examples  
 下面的代码示例重置用户的密码并返回自动生成的新密码。  
  
> [!NOTE]
>  此示例使用 <xref:System.Web.Security.Membership> 类 <xref:System.Web.Security.SqlMembershipProvider> `defaultProvider` 在 Web.config 文件中调用指定的。 如果需要以类型访问默认提供程序 <xref:System.Web.Security.SqlMembershipProvider> ，则可以强制转换 <xref:System.Web.Security.Membership.Provider%2A> 类的属性 <xref:System.Web.Security.Membership> 。 若要以特定的提供程序类型访问其他已配置的提供程序，可以使用类的属性访问这些提供程序， <xref:System.Web.Security.Membership.Providers%2A> <xref:System.Web.Security.Membership> 并将其转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException"><paramref name="passwordAnswer" /> 无效。  
  
- 或 - 
当前锁定了用户帐户。</exception>
        <exception cref="T:System.NotSupportedException">将 <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" /> 设置为 <see langword="false" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">在成员资格数据库中找不到 <paramref name="username" />。  
  
- 或 - 
<see cref="E:System.Web.Security.Membership.ValidatingPassword" /> 事件的订户取消对更改密码操作，且 <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> 属性为 <see langword="null" />。  
  
- 或 - 
从数据库中检索密码时出现错误。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 为空字符串 ("")、包含一个逗号或长度超过 256 个字符。  
  
- 或 - 
 <paramref name="passwordAnswer" /> 为空字符串，或者其长度超过 128 个字符，且 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> 为 <see langword="true" />。  
  
- 或 - 
 编码后 <paramref name="passwordAnswer" /> 的长度超过 128 个字符。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="passwordAnswer" /> 为 <see langword="null" />，而 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> 为 <see langword="true" />。</exception>
        <exception cref="T:System.Exception">发生了未经处理的异常。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="UnlockUser">
      <MemberSignature Language="C#" Value="public override bool UnlockUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool UnlockUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnlockUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool UnlockUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.UnlockUser : string -&gt; bool" Usage="sqlMembershipProvider.UnlockUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要为其清除锁定状态的成员资格用户的用户名。</param>
        <summary>清除用户的锁定状态，以便可以验证该成员资格用户。</summary>
        <returns>如果成功取消成员资格用户的锁定，则为 <see langword="true" />；否则为 <see langword="false" />。 如果数据库中没有此用户，也会返回 <see langword="false" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A>当超出范围时，用户通常被锁定，并且不能通过方法进行验证 <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> 。  
  
 删除 `username` 参数值的前导和尾随空格。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 为空字符串，长度超过 256 个字符，或包含一个逗号。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> 为 <see langword="null" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public override void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberSignature Language="F#" Value="override this.UpdateUser : System.Web.Security.MembershipUser -&gt; unit" Usage="sqlMembershipProvider.UpdateUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">一个 <see cref="T:System.Web.Security.MembershipUser" /> 对象，表示要更新的用户及其更新信息。</param>
        <summary>更新 SQL Server 成员资格数据库中用户的信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法由 <xref:System.Web.Security.Membership> 类调用，以更新 ASP.NET 应用程序的配置文件中指定的 SQL Server 数据库中的用户的用户信息 ( # A0) 。 <xref:System.Web.Security.MembershipUser.Email%2A> <xref:System.Web.Security.MembershipUser.Comment%2A> <xref:System.Web.Security.MembershipUser.IsApproved%2A> <xref:System.Web.Security.MembershipUser.LastLoginDate%2A> <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> 为指定的成员资格用户更新了、、、和属性值。  
  
 属性的最大长度 <xref:System.Web.Security.MembershipUser.UserName%2A> 为256个字符。 属性的最大长度 <xref:System.Web.Security.MembershipUser.Email%2A> 为256个字符。  
  
 成员资格用户的密码不能使用方法进行更新 <xref:System.Web.Security.SqlMembershipProvider.UpdateUser%2A> 。 若要更新成员资格用户的密码，请使用 <xref:System.Web.Security.MembershipUser.ChangePassword%2A> 类的方法 <xref:System.Web.Security.MembershipUser> 。  
  
   
  
## Examples  
 下面的代码示例将更新用户的电子邮件地址。  
  
> [!NOTE]
>  此示例使用 <xref:System.Web.Security.Membership> 类 <xref:System.Web.Security.SqlMembershipProvider> `defaultProvider` 在 Web.config 文件中调用指定的。 如果需要以类型访问默认提供程序 <xref:System.Web.Security.SqlMembershipProvider> ，则可以强制转换 <xref:System.Web.Security.Membership.Provider%2A> 类的属性 <xref:System.Web.Security.Membership> 。 若要以特定的提供程序类型访问其他已配置的提供程序，可以使用类的属性访问这些提供程序， <xref:System.Web.Security.Membership.Providers%2A> <xref:System.Web.Security.Membership> 并将其转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="user" /> 为 <see langword="null" />。  
  
- 或 - 
<paramref name="user" /> 的 <see cref="P:System.Web.Security.MembershipUser.UserName" /> 属性为 <see langword="null" />。  
  
- 或 - 
<paramref name="user" /> 的 <see cref="P:System.Web.Security.MembershipUser.Email" /> 属性为 <see langword="null" /> 且 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> 设置为 <see langword="true" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="user" /> 的 <see cref="P:System.Web.Security.MembershipUser.UserName" /> 属性为空字符串 ("")、包含一个逗号或长度超过 256 个字符。  
  
- 或 - 
<paramref name="user" /> 的 <see cref="P:System.Web.Security.MembershipUser.Email" /> 属性的长度超过 256 个字符。  
  
- 或 - 
<paramref name="user" /> 的 <see cref="P:System.Web.Security.MembershipUser.Email" /> 属性是一个空字符串且 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> 设置为 <see langword="true" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">数据库中未找到 <paramref name="user" /> 的 <see cref="P:System.Web.Security.MembershipUser.UserName" /> 属性。  
  
- 或 - 
<paramref name="user" /> 的 <see cref="P:System.Web.Security.MembershipUser.Email" /> 属性等于数据库中的某个现有电子邮件地址且 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> 设置为 true。  
  
- 或 - 
用户更新失败。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public override bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="override this.ValidateUser : string * string -&gt; bool" Usage="sqlMembershipProvider.ValidateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要验证的用户的名称。</param>
        <param name="password">指定的用户的密码。</param>
        <summary>验证 SQL Server 成员资格数据库中是否存在指定的用户名和密码。</summary>
        <returns>如果指定的用户名和密码有效，则为 <see langword="true" />；否则为 <see langword="false" />。 如果数据库中没有此用户，也会返回 <see langword="false" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法由 <xref:System.Web.Security.Membership> 类调用，用于验证 ASP.NET 应用程序的配置文件中指定的 SQL Server 数据库中的用户的用户信息 ( # A0) 。  
  
 成功验证用户后，最后一个活动日期和最后一个登录日期值将更新为数据库中的当前日期和时间。  
  
 如果为方法提供了错误密码 <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A> ，则跟踪无效密码尝试的内部计数器会递增1。 这可能会导致用户被锁定，并且在通过调用方法清除锁定状态之前无法登录 <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> 。 如果提供了正确的密码并且用户当前未锁定，则跟踪无效密码和密码答案尝试的内部计数器将重置为零。 有关详细信息，请参阅 <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> 和 <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> 属性。  
  
 将从所有参数值中去除前导空格和尾随空格。  
  
   
  
## Examples  
 下面的代码示例演示了配置为使用 forms 身份验证和的 ASP.NET 应用程序的登录页 <xref:System.Web.Security.SqlMembershipProvider> 。 如果提供的用户凭据无效，则向用户显示一条消息。 否则，使用方法将用户重定向到最初请求的 URL <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> 。  
  
> [!NOTE]
>  此示例使用 <xref:System.Web.Security.Membership> 类 <xref:System.Web.Security.SqlMembershipProvider> `defaultProvider` 在 Web.config 文件中调用指定的。 如果需要以类型访问默认提供程序 <xref:System.Web.Security.SqlMembershipProvider> ，则可以强制转换 <xref:System.Web.Security.Membership.Provider%2A> 类的属性 <xref:System.Web.Security.Membership> 。 若要以特定的提供程序类型访问其他已配置的提供程序，可以使用类的属性访问这些提供程序， <xref:System.Web.Security.Membership.Providers%2A> <xref:System.Web.Security.Membership> 并将其转换为特定的提供程序类型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/yh26yfzy(v=vs.100)">ASP.NET 成员资格简介</related>
      </Docs>
    </Member>
  </Members>
</Type>
