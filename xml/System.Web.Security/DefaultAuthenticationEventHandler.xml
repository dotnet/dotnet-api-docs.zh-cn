<Type Name="DefaultAuthenticationEventHandler" FullName="System.Web.Security.DefaultAuthenticationEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="282111598da8facc5bdbadf6f1d20bd0cd5d5f45" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="69050999" /></Metadata><TypeSignature Language="C#" Value="public delegate void DefaultAuthenticationEventHandler(object sender, DefaultAuthenticationEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DefaultAuthenticationEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.DefaultAuthenticationEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DefaultAuthenticationEventHandler(sender As Object, e As DefaultAuthenticationEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DefaultAuthenticationEventHandler(System::Object ^ sender, DefaultAuthenticationEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type DefaultAuthenticationEventHandler = delegate of obj * DefaultAuthenticationEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Web.Security.DefaultAuthenticationEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">事件源。</param>
    <param name="e">包含事件数据的 <see cref="T:System.Web.Security.DefaultAuthenticationEventArgs" />。</param>
    <summary>表示处理 <see cref="T:System.Web.Security.DefaultAuthenticationModule" /> 的 DefaultAuthentication_OnAuthenticate 事件的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.DefaultAuthenticationEventHandler>委托是为类的事件定义的 <xref:System.Web.Security.DefaultAuthenticationModule.Authenticate> <xref:System.Web.Security.DefaultAuthenticationModule> 。 可以 <xref:System.Web.Security.DefaultAuthenticationModule.Authenticate> <xref:System.Web.Security.DefaultAuthenticationModule> 通过在 ASP.NET 应用程序的 global.asax 文件中指定名为**DefaultAuthentication_OnAuthenticate**的子程序来访问类的事件。 <xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>事件在事件后引发 <xref:System.Web.HttpApplication.AuthenticateRequest> ，并用于确保使用 <xref:System.Web.HttpContext.User%2A> 对象填充当前的属性 <xref:System.Web.HttpContext> <xref:System.Security.Principal.IPrincipal> 。  
  
 您可以使用 <xref:System.Web.Security.DefaultAuthenticationEventArgs.Context%2A> <xref:System.Web.Security.DefaultAuthenticationEventArgs> 提供给**DefaultAuthentication_OnAuthenticate**事件的对象的属性，将 <xref:System.Web.HttpContext.User%2A> 当前的属性设置 <xref:System.Web.HttpContext> 为自定义 <xref:System.Security.Principal.IPrincipal> 对象。 如果未在 <xref:System.Web.HttpContext.User%2A> DefaultAuthentication_OnAuthenticate 事件期间为提供的属性指定值 <xref:System.Web.HttpContext> ，则会**DefaultAuthentication_OnAuthenticate**将 <xref:System.Web.Security.DefaultAuthenticationModule> <xref:System.Web.HttpContext.User%2A> 的属性设置 <xref:System.Web.HttpContext> 为 <xref:System.Security.Principal.GenericPrincipal> 不包含用户信息的对象。  
  
 在**DefaultAuthentication_OnAuthenticate**事件之后 <xref:System.Web.HttpApplication.AuthenticateRequest> 和事件之前引发 DefaultAuthentication_OnAuthenticate 事件 <xref:System.Web.HttpApplication.AuthorizeRequest> 。 如果某个节依赖于要拒绝的用户名或允许对应用程序的访问，则修改 <xref:System.Web.HttpContext.User%2A> 当前的属性 <xref:System.Web.HttpContext> 可能会影响应用程序的行为。 在配置中指定节时，请确保考虑在**DefaultAuthentication_OnAuthenticate**事件中设置的用户名。  
  
   
  
## Examples  
 下面的代码示例使用**DefaultAuthentication_OnAuthenticate**事件来测试 <xref:System.Web.HttpContext.User%2A> 当前的属性是否 <xref:System.Web.HttpContext> 为 `null` 。 如果属性为 `null` ，则此示例将 <xref:System.Web.HttpContext.User%2A> 当前的属性设置为一个 <xref:System.Web.HttpContext> <xref:System.Security.Principal.GenericPrincipal> 对象，其中对象的 <xref:System.Security.Principal.GenericPrincipal.Identity%2A> <xref:System.Security.Principal.GenericPrincipal> 是一个 <xref:System.Security.Principal.GenericIdentity> 值为 <xref:System.Security.Principal.GenericIdentity.Name%2A> "default" 的。  
  
> [!NOTE]
>  在事件前引发**DefaultAuthentication_OnAuthenticate**事件 <xref:System.Web.HttpApplication.AuthorizeRequest> 。 因此，如果将当前的属性设置 <xref:System.Web.HttpContext.User%2A> <xref:System.Web.HttpContext> 为自定义标识，则它可能会影响应用程序的行为。 例如，如果您使用的是 <xref:System.Web.Security.FormsAuthentication> 类，并且您确保只有通过身份验证的用户才能访问您的站点，则通过使用部分并指定 `<deny users="?" />` ，此示例将导致元素被忽略，因为用户将具有一个名称，这是 "默认值"。 相反，您需要指定 `<deny users="default" />` 以确保只有经过身份验证的用户才能访问您的站点。  
  
 [!code-csharp[System.Web.Security.DefaultAuthenticationModule#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.DefaultAuthenticationModule/CS/global.asax#1)]
 [!code-vb[System.Web.Security.DefaultAuthenticationModule#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.DefaultAuthenticationModule/VB/global.asax#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
