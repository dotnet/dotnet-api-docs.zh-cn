<Type Name="TrackingWorkflowExceptionEventArgs" FullName="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c78cf3ae60d1bece3c6e623fde993c429ac1ae6d" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89763095" /></Metadata><TypeSignature Language="C#" Value="public class TrackingWorkflowExceptionEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TrackingWorkflowExceptionEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class TrackingWorkflowExceptionEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrackingWorkflowExceptionEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type TrackingWorkflowExceptionEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>包含与工作流实例执行过程中发生的异常关联的数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 当工作流实例执行过程中发生异常，并且与该工作流实例关联的 <xref:System.Workflow.Runtime.Tracking.TrackingProfile> 包括针对 <xref:System.Workflow.Runtime.Tracking.WorkflowTrackPoint> 配置的 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowEvent.Exception?displayProperty=nameWithType> 时，工作流跟踪基础结构会在它发送到跟踪服务的 <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord.EventArgs%2A> 中将 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> 设置为 <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord>。  
  
> [!NOTE]
>  <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> 仅由运行时跟踪服务使用，以在 <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord> 中传递信息。  
  
   
  
## Examples  
 下面的代码示例演示一个名为 `WriteExceptionEventArgs` 的方法，该方法可捕获 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>。 代码将检查 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> 属性是否为 `null`（在 Visual Basic 中为 `Nothing`）。  
  
 如果不是，代码会将与 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> 属性关联的消息写入控制台。 此外，代码会将 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> 属性的值转换为字符串，并将其写入控制台。  
  
 此代码示例摘自 Program.cs 文件中的 EventArgs 跟踪 SDK 示例。 有关详细信息，请参阅 [EventArgs 跟踪示例](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741730(v=vs.90))。  
  
 [!code-csharp[WF_Samples#289](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#289)]
 [!code-vb[WF_Samples#289](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#289)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741730(v=vs.90)">“EventArgs 跟踪”示例</related>
  </Docs>
  <Members>
    <Member MemberName="ContextGuid">
      <MemberSignature Language="C#" Value="public Guid ContextGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ContextGuid" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextGuid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ContextGuid { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextGuid : Guid" Usage="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ContextGuid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取关联的活动的上下文 ID。</summary>
        <value>一个 <see cref="T:System.Guid" />，其中包含 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的上下文 ID。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentActivityPath">
      <MemberSignature Language="C#" Value="public string CurrentActivityPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentActivityPath" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentActivityPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentActivityPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentActivityPath : string" Usage="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前引发异常的活动的 <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" />。</summary>
        <value>当前引发异常的活动的 <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 异常将在一系列异常处理程序活动中向上传递。 异常处理程序可能会选择再次引发异常。 当异常处理程序再次引发异常时，将会在运行时跟踪基础结构中引发一个包含新 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> 的新异常跟踪事件。 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.CurrentActivityPath%2A> 引用当前引发异常的活动。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取工作流实例所引发的 <see cref="T:System.Exception" />。</summary>
        <value>工作流实例引发的异常 。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示一个名为 `WriteExceptionEventArgs` 的方法，该方法可捕获 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>。 代码将检查 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> 属性是否为 `null`（在 Visual Basic 中为 `Nothing`）。 如果不是，代码会将与 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> 属性关联的消息写入控制台。 如果异常为 `null` (`Nothing`)，则代码会将 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> 属性的值转换为字符串，并将其写入控制台。  
  
 此代码示例摘自 Program.cs 文件中的 EventArgs 跟踪 SDK 示例。 有关详细信息，请参阅 [EventArgs 跟踪示例](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741730(v=vs.90))。  
  
 [!code-csharp[WF_Samples#289](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#289)]
 [!code-vb[WF_Samples#289](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#289)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741730(v=vs.90)">“EventArgs 跟踪”示例</related>
      </Docs>
    </Member>
    <Member MemberName="OriginalActivityPath">
      <MemberSignature Language="C#" Value="public string OriginalActivityPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalActivityPath" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalActivityPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OriginalActivityPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalActivityPath : string" Usage="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取原来引发异常的活动的 <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" />。</summary>
        <value>原来引发异常的活动的 <see cref="P:System.Workflow.ComponentModel.Activity.QualifiedName" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 异常将在一系列异常处理程序活动中向上传递。 异常处理程序可能会选择再次引发异常。 当异常处理程序再次引发异常时，将会在运行时跟踪基础结构中引发一个包含新 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs> 的新异常跟踪事件。 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> 引用原来引发异常的活动。  
  
   
  
## Examples  
 下面的代码示例演示一个名为 `WriteExceptionEventArgs` 的方法，该方法可捕获 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs>。 代码将检查 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> 属性是否为 `null`（在 Visual Basic 中为 `Nothing`）。 如果不是，代码会将与 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> 属性关联的消息写入控制台。 如果 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.Exception%2A> 为 `null` (`Nothing`)，代码会将 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.OriginalActivityPath%2A> 属性的值转换为字符串，并将其写入控制台。  
  
 此代码示例摘自 Program.cs 文件中的 EventArgs 跟踪 SDK 示例。 有关详细信息，请参阅 [EventArgs 跟踪示例](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741730(v=vs.90))。  
  
 [!code-csharp[WF_Samples#289](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#289)]
 [!code-vb[WF_Samples#289](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#289)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741730(v=vs.90)">“EventArgs 跟踪”示例</related>
      </Docs>
    </Member>
    <Member MemberName="ParentContextGuid">
      <MemberSignature Language="C#" Value="public Guid ParentContextGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ParentContextGuid" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentContextGuid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ParentContextGuid { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentContextGuid : Guid" Usage="System.Workflow.Runtime.Tracking.TrackingWorkflowExceptionEventArgs.ParentContextGuid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取父活动的上下文 ID。</summary>
        <value>一个 <see cref="T:System.Guid" />，其中包含父 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的上下文 ID。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
