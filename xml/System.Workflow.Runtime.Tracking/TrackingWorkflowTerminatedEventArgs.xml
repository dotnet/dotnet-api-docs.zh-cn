<Type Name="TrackingWorkflowTerminatedEventArgs" FullName="System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="10a185d6b0528842be23ff5a7c38aa8ada1d6d22" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86714140" /></Metadata><TypeSignature Language="C#" Value="public class TrackingWorkflowTerminatedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TrackingWorkflowTerminatedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class TrackingWorkflowTerminatedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrackingWorkflowTerminatedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type TrackingWorkflowTerminatedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>包含与工作流实例终止关联的数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 当工作流实例终止时，运行时跟踪基础结构将生成一个 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs>。 如果与工作流实例关联的 <xref:System.Workflow.Runtime.Tracking.TrackingProfile> 包括为 <xref:System.Workflow.Runtime.Tracking.WorkflowTrackPoint><xref:System.Workflow.Runtime.Tracking.TrackingWorkflowEvent.Terminated> 配置的 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowEvent>，工作流跟踪基础结构会将 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs> 放在 <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord.EventArgs%2A> 中（位于它发送到跟踪服务的 <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord> 中）。  
  
 工作流实例可能会通过以下三种方式之一终止：宿主可能调用 <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A?displayProperty=nameWithType>；可能会从工作流实例内部调用 <xref:System.Workflow.ComponentModel.TerminateActivity> 活动；或者可能会发生未经处理的异常。 如果工作流被宿主或 <xref:System.Workflow.ComponentModel.TerminateActivity> 活动终止，运行时跟踪基础结构会将 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception%2A> 设置为 <xref:System.Workflow.ComponentModel.WorkflowTerminatedException>，其 <xref:System.Exception.Message%2A> 属性设置为终止原因的说明。 如果工作流由于未经处理的异常而终止，运行时跟踪基础结构将在 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception%2A> 中传递未经处理的异常。  
  
> [!NOTE]
>  <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs> 仅由运行时跟踪服务使用，以在 <xref:System.Workflow.Runtime.Tracking.WorkflowTrackingRecord> 中传递信息。 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated?displayProperty=nameWithType> 事件的数据在 <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> 中传递。  
  
   
  
## Examples  
 下面的代码示例演示一个名为 `WriteTerminatedEventArgs` 的方法，该方法可捕获 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs>。 代码将检查 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception%2A> 属性是否为 `null`（在 Visual Basic 中为 `Nothing`）。 如果不是，代码会将与 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception%2A> 属性关联的消息写入控制台。 如果 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception%2A> 为 `null` (`Nothing`)，则代码不会将任何异常信息写入控制台。  
  
 此代码示例摘自 Program.cs 文件中的 EventArgs 跟踪 SDK 示例。 有关详细信息，请参阅 [EventArgs 跟踪示例](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741730(v=vs.90))。  
  
 [!code-csharp[WF_Samples#288](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#288)]
 [!code-vb[WF_Samples#288](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#288)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741730(v=vs.90)">“EventArgs 跟踪”示例</related>
  </Docs>
  <Members>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取导致工作流实例终止的异常。</summary>
        <value>导致工作流实例终止的 <see cref="T:System.Exception" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当工作流实例由于未经处理的异常而终止时，<xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception%2A> 将包含未经处理的异常。  
  
 当工作流实例由于宿主对 <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A?displayProperty=nameWithType> 的调用或由于 <xref:System.Workflow.ComponentModel.TerminateActivity> 活动而终止时，<xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception%2A> 包含一个 <xref:System.Workflow.ComponentModel.WorkflowTerminatedException>，其 <xref:System.Exception.Message%2A> 属性设置为终止原因的说明。 如果宿主终止了工作流实例，它会在 `string` 的 <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A?displayProperty=nameWithType> 参数中提供此说明；如果 <xref:System.Workflow.ComponentModel.TerminateActivity> 终止了工作流实例，则该说明由 <xref:System.Workflow.ComponentModel.TerminateActivity.Error%2A?displayProperty=nameWithType> 提供。  
  
   
  
## Examples  
 下面的代码示例演示一个名为 `WriteTerminatedEventArgs` 的方法，该方法可捕获 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs>。 代码将检查 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception%2A> 属性是否为 `null`（在 Visual Basic 中为 `Nothing`）。 如果不是，代码会将与 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception%2A> 属性关联的消息写入控制台。 如果 <xref:System.Workflow.Runtime.Tracking.TrackingWorkflowTerminatedEventArgs.Exception%2A> 为 `null` (`Nothing`)，则代码不会将任何异常信息写入控制台。  
  
 此代码示例摘自 Program.cs 文件中的 EventArgs 跟踪 SDK 示例。 有关详细信息，请参阅 [EventArgs 跟踪示例](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741730(v=vs.90))。  
  
 [!code-csharp[WF_Samples#288](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#288)]
 [!code-vb[WF_Samples#288](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#288)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741730(v=vs.90)">“EventArgs 跟踪”示例</related>
      </Docs>
    </Member>
  </Members>
</Type>
