<Type Name="TrackingProfileSerializer" FullName="System.Workflow.Runtime.Tracking.TrackingProfileSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ec94038a31e0425c8b5d9e251de4d996223c000" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89763244" /></Metadata><TypeSignature Language="C#" Value="public class TrackingProfileSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TrackingProfileSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Tracking.TrackingProfileSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class TrackingProfileSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrackingProfileSerializer" />
  <TypeSignature Language="F#" Value="type TrackingProfileSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供通过使用跟踪配置文件 XML 架构定义 (XSD) 将跟踪配置文件序列化为 XML 文档或从 XML 文档反序列化跟踪配置文件的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer> 使用 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Schema%2A?displayProperty=nameWithType> 中包含的跟踪配置文件 XSD 将 <xref:System.Workflow.Runtime.Tracking.TrackingProfile> 对象序列化为有效的 XML 文档，并将有效的 XML 文档反序列化为 <xref:System.Workflow.Runtime.Tracking.TrackingProfile> 对象。 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer> 在序列化和反序列化过程中执行验证，并在必要时引发适当的异常。  
  
 XML 文档提供了一种用于存储跟踪配置文件的方便格式。 它还提供了一种编写跟踪配置文件的非编程方式。 现成可用的 <xref:System.Workflow.Runtime.Tracking.SqlTrackingService> 使用 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer> 来序列化和反序列化存储在其数据库中的跟踪配置文件。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer> 构造函数创建 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.%23ctor%2A>，以便序列化 <xref:System.Workflow.Runtime.Tracking.TrackingProfile>。 代码还使用 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Serialize%2A> 方法。  
  
 此代码示例摘自 Program.cs 文件中的“使用 SQLTrackingService 查询”SDK 示例。 有关详细信息，请参阅 [使用 SQLTrackingService 查询](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742042(v=vs.90))。  
  
 [!code-csharp[WF_Samples#291](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#291)]
 [!code-vb[WF_Samples#291](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#291)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742042(v=vs.90)">使用 SQLTrackingService 进行查询</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TrackingProfileSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TrackingProfileSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfileSerializer" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer> 构造函数创建 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.%23ctor%2A>，以便序列化 <xref:System.Workflow.Runtime.Tracking.TrackingProfile>。 代码还使用 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Serialize%2A> 方法。  
  
 此代码示例摘自 Program.cs 文件中的“使用 SQLTrackingService 查询”SDK 示例。 有关详细信息，请参阅 [使用 SQLTrackingService 查询](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742042(v=vs.90))。  
  
 [!code-csharp[WF_Samples#291](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#291)]
 [!code-vb[WF_Samples#291](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#291)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742042(v=vs.90)">使用 SQLTrackingService 进行查询</related>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.Tracking.TrackingProfile Deserialize (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.Tracking.TrackingProfile Deserialize(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Deserialize(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (reader As TextReader) As TrackingProfile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::Tracking::TrackingProfile ^ Deserialize(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.IO.TextReader -&gt; System.Workflow.Runtime.Tracking.TrackingProfile" Usage="trackingProfileSerializer.Deserialize reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Tracking.TrackingProfile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">包含 XML 文档的 <see cref="T:System.IO.TextReader" />。</param>
        <summary>通过使用跟踪配置文件 XML 架构定义 (XSD) 反序列化包含在文本阅读器中的 XML 文档。</summary>
        <returns>包含反序列化的跟踪配置文件的 <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 反序列化是指依据格式良好的 XML 文档创建对象的过程。 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Deserialize%2A> 使用 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Schema%2A> 中包含的跟踪配置文件 XSD 将包含在文本阅读器中的 XML 文档反序列化为有效的 <xref:System.Workflow.Runtime.Tracking.TrackingProfile>。 XML 文档验证是在反序列化过程中执行的，并且，如果文档无效，则会引发 <xref:System.Workflow.Runtime.Tracking.TrackingProfileDeserializationException>。 您可以捕获此异常，并检查 <xref:System.Workflow.Runtime.Tracking.TrackingProfileDeserializationException.ValidationEventArgs%2A> 来确定验证错误的原因。 如果在反序列化跟踪配置文件时出现任何未经处理的异常，为其请求跟踪配置文件的工作流实例将终止。  
  
> [!NOTE]
>  如果要执行验证而不反序列化跟踪配置文件的 XML 表示形式，您可以编写自己的跟踪配置文件验证程序。 有关更多信息，请参见 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Schema%2A> 属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="reader" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
        <exception cref="T:System.Workflow.Runtime.Tracking.TrackingProfileDeserializationException"><paramref name="reader" /> 不包含符合跟踪配置文件 XSD 的文档。</exception>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchema Schema" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchema ^ Schema { System::Xml::Schema::XmlSchema ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schema : System.Xml.Schema.XmlSchema" Usage="System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取跟踪配置文件 XML 架构定义 (XSD)。</summary>
        <value>跟踪配置文件 XSD。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性公开 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer> 用于执行 <xref:System.Workflow.Runtime.Tracking.TrackingProfile> 序列化和反序列化的跟踪配置文件 XSD。 还可以使用此属性来获取跟踪配置文件 XSD，以便编写自己的验证程序来跟踪配置文件。 例如，您可能需要这样做以便在不执行反序列化的情况下验证跟踪配置文件的 XML 表示形式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.TextWriter writer, System.Workflow.Runtime.Tracking.TrackingProfile profile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.TextWriter writer, class System.Workflow.Runtime.Tracking.TrackingProfile profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Serialize(System.IO.TextWriter,System.Workflow.Runtime.Tracking.TrackingProfile)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (writer As TextWriter, profile As TrackingProfile)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::TextWriter ^ writer, System::Workflow::Runtime::Tracking::TrackingProfile ^ profile);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.IO.TextWriter * System.Workflow.Runtime.Tracking.TrackingProfile -&gt; unit" Usage="trackingProfileSerializer.Serialize (writer, profile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="profile" Type="System.Workflow.Runtime.Tracking.TrackingProfile" />
      </Parameters>
      <Docs>
        <param name="writer">有效的 <see cref="T:System.Workflow.Runtime.Tracking.TrackingProfile" />。</param>
        <param name="profile">此方法返回时将包含容纳 XML 文档的 <see cref="T:System.IO.TextWriter" />。 参数未经初始化即被传递。</param>
        <summary>通过使用跟踪配置文件 XML 架构定义 (XSD) 将跟踪配置文件序列化为 XML 文档。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 序列化是指依据有效的 <xref:System.Workflow.Runtime.Tracking.TrackingProfile> 创建格式良好的 XML 文档的过程。 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Serialize%2A> 使用跟踪配置文件 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Schema%2A> 来序列化跟踪配置文件。 `profile` 必须是包含至少一个有效跟踪点的有效 <xref:System.Workflow.Runtime.Tracking.TrackingProfile>。 跟踪配置文件验证是在序列化过程中执行的，并且，如果跟踪配置文件无效，则会引发 <xref:System.ArgumentException>。 您可以捕获此异常，并检查其消息属性来确定验证错误的原因。 如果在序列化跟踪配置文件时出现任何未经处理的异常，为其请求跟踪配置文件的工作流实例将终止。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer> 构造函数创建 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.%23ctor%2A>，以便序列化 <xref:System.Workflow.Runtime.Tracking.TrackingProfile>。 代码还使用 <xref:System.Workflow.Runtime.Tracking.TrackingProfileSerializer.Serialize%2A> 方法。  
  
 此代码示例摘自 Program.cs 文件中的“使用 SQLTrackingService 查询”SDK 示例。 有关详细信息，请参阅 [使用 SQLTrackingService 查询](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742042(v=vs.90))。  
  
 [!code-csharp[WF_Samples#291](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#291)]
 [!code-vb[WF_Samples#291](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#291)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="profile" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="writer" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="profile" /> 不是有效的跟踪配置文件。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742042(v=vs.90)">使用 SQLTrackingService 进行查询</related>
      </Docs>
    </Member>
  </Members>
</Type>
