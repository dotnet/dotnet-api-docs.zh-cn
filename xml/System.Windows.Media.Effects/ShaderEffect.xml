<Type Name="ShaderEffect" FullName="System.Windows.Media.Effects.ShaderEffect">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e7daf57b3cd2ee260819c25757d9d5bfa427cdee" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="86992103" /></Metadata><TypeSignature Language="C#" Value="public abstract class ShaderEffect : System.Windows.Media.Effects.Effect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ShaderEffect extends System.Windows.Media.Effects.Effect" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Effects.ShaderEffect" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ShaderEffect&#xA;Inherits Effect" />
  <TypeSignature Language="C++ CLI" Value="public ref class ShaderEffect abstract : System::Windows::Media::Effects::Effect" />
  <TypeSignature Language="F#" Value="type ShaderEffect = class&#xA;    inherit Effect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ShaderEffect extends System.Windows.Media.Effects.Effect" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Effects.Effect</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="efd54-101">通过使用 <see cref="T:System.Windows.Media.Effects.PixelShader" /> 提供自定义位图效果。</span><span class="sxs-lookup"><span data-stu-id="efd54-101">Provides a custom bitmap effect by using a <see cref="T:System.Windows.Media.Effects.PixelShader" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd54-102">从类派生 <xref:System.Windows.Media.Effects.ShaderEffect> 以实现基于单个像素着色器的自定义效果。</span><span class="sxs-lookup"><span data-stu-id="efd54-102">Derive from the <xref:System.Windows.Media.Effects.ShaderEffect> class to implement a custom effect based on a single pixel shader.</span></span>  
  
 <span data-ttu-id="efd54-103">以下步骤演示如何创建自定义效果。</span><span class="sxs-lookup"><span data-stu-id="efd54-103">The following steps show how to create a custom effect.</span></span>  
  
1.  <span data-ttu-id="efd54-104"><xref:System.Windows.Media.Effects.PixelShader>从预编译的高级着色语言 (HLSL) 字节码加载。</span><span class="sxs-lookup"><span data-stu-id="efd54-104">Load a <xref:System.Windows.Media.Effects.PixelShader> from precompiled High Level Shading Language (HLSL) bytecode.</span></span>  
  
2.  <span data-ttu-id="efd54-105">定义表示效果的参数和 <xref:System.Windows.Media.Brush> 基于的图面输入的依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="efd54-105">Define dependency properties that represent the parameters of the effect and the <xref:System.Windows.Media.Brush>-based surface inputs.</span></span> <span data-ttu-id="efd54-106">使用其中一个 <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A> 重载将这些输入与 HLSL 字节码中引用的寄存器号关联。</span><span class="sxs-lookup"><span data-stu-id="efd54-106">Use one of the <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A> overloads to associate these inputs with register numbers that are referenced in the HLSL bytecode.</span></span>  
  
 <span data-ttu-id="efd54-107">采样器数限制为4。</span><span class="sxs-lookup"><span data-stu-id="efd54-107">The number of samplers is limited to 4.</span></span>  
  
 <span data-ttu-id="efd54-108">使用 PS 3.0 着色器时，以下限制适用。</span><span class="sxs-lookup"><span data-stu-id="efd54-108">The following restrictions apply when using a PS 3.0 shader.</span></span>  
  
-   <span data-ttu-id="efd54-109">分配 PS 3.0 着色器后，取样器数将增加到8。</span><span class="sxs-lookup"><span data-stu-id="efd54-109">When a PS 3.0 shader is assigned, the number of samplers increases to 8.</span></span> <span data-ttu-id="efd54-110">将 PS 3.0 着色器分配到其他着色器之前，以允许注册8个取样器。</span><span class="sxs-lookup"><span data-stu-id="efd54-110">Assign the PS 3.0 shader before other shaders to enable registering 8 samplers.</span></span>  
  
-   <span data-ttu-id="efd54-111">使用完整的着色器常量寄存器限制（224）。</span><span class="sxs-lookup"><span data-stu-id="efd54-111">The full shader constant register limit of 224 for floats is used.</span></span> <span data-ttu-id="efd54-112">有关详细信息，请参阅[ps_3_0](https://go.microsoft.com/fwlink/?LinkId=166292)。</span><span class="sxs-lookup"><span data-stu-id="efd54-112">For more information, see [ps_3_0](https://go.microsoft.com/fwlink/?LinkId=166292).</span></span>  
  
-   <span data-ttu-id="efd54-113">仅 PS 3.0 着色器支持以下数据类型。</span><span class="sxs-lookup"><span data-stu-id="efd54-113">The following data types are supported in PS 3.0 shaders only.</span></span> <span data-ttu-id="efd54-114">如果在较低的着色器版本中使用了异常，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="efd54-114">An exception is thrown if these are used in lower shader versions.</span></span>  
  
    -   <span data-ttu-id="efd54-115">`int`和类型可转换为 `int` ： `uint` 、 `byte` 、 `sbyte` 、 `long` 、 `ulong` `short` `ushort` 、、、`char`</span><span class="sxs-lookup"><span data-stu-id="efd54-115">`int` and types convertible to `int`: `uint`, `byte`, `sbyte`, `long`, `ulong`, `short`, `ushort`, `char`</span></span>  
  
    -   `bool`  
  
-   <span data-ttu-id="efd54-116">如果在不支持 PS 3.0 硬件的计算机上加载有效 PS 3.0 着色器，则将忽略着色器。</span><span class="sxs-lookup"><span data-stu-id="efd54-116">If a valid PS 3.0 shader is loaded on a computer that does not have hardware support for PS 3.0, the shader is ignored.</span></span> <span data-ttu-id="efd54-117">如果着色器无效，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="efd54-117">If the shader is invalid, no exception is thrown.</span></span>  
  
-   <span data-ttu-id="efd54-118">如果计算机有多个视频卡，则该行为由功能最少的视频卡定义。</span><span class="sxs-lookup"><span data-stu-id="efd54-118">If a computer has more than one video card, the behavior is defined by the least capable video card.</span></span> <span data-ttu-id="efd54-119">例如，如果计算机有两个视频卡，其中一个卡支持 PS 3.0，其中一个不支持 PS，则行为与计算机不支持 PS 3.0 时相同。</span><span class="sxs-lookup"><span data-stu-id="efd54-119">For example, if the computer has two video cards, one of which supports PS 3.0 and one of which does not, the behavior is the same as if the computer does not support PS 3.0.</span></span>  
  
-   <span data-ttu-id="efd54-120">如果计算机支持在硬件中呈现 PS 3.0，但分配了无效的 PS 3.0 着色器，则 <xref:System.Windows.Media.Effects.PixelShader.InvalidPixelShaderEncountered> 会引发事件。</span><span class="sxs-lookup"><span data-stu-id="efd54-120">If a computer supports rendering PS 3.0 in hardware, but an invalid PS 3.0 shader is assigned, the <xref:System.Windows.Media.Effects.PixelShader.InvalidPixelShaderEncountered> event is raised.</span></span> <span data-ttu-id="efd54-121">无效 PS 3.0 着色器的一个示例是用标志编译的着色器 `ps_3_sw` 。</span><span class="sxs-lookup"><span data-stu-id="efd54-121">An example of an invalid PS 3.0 shader is one compiled with the `ps_3_sw` flag.</span></span> <span data-ttu-id="efd54-122"><xref:System.Windows.Media.Effects.ShaderEffect>类只接受用传递到 fxc.exe 的标志编译的 PS 3.0 着色器 `ps_3_0` 。</span><span class="sxs-lookup"><span data-stu-id="efd54-122">The <xref:System.Windows.Media.Effects.ShaderEffect> class accepts only PS 3.0 shaders that are compiled with the `ps_3_0` flag passed to fxc.exe.</span></span> <span data-ttu-id="efd54-123">有关详细信息，请参阅[效果-编译器工具](https://go.microsoft.com/fwlink/?LinkId=166293)。</span><span class="sxs-lookup"><span data-stu-id="efd54-123">For more information, see [Effect-Compiler Tool](https://go.microsoft.com/fwlink/?LinkId=166293).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efd54-124">在软件中呈现时，PS 2.0 着色器将运行。</span><span class="sxs-lookup"><span data-stu-id="efd54-124">PS 2.0 shaders run when rendering in software.</span></span> <span data-ttu-id="efd54-125">但是，即使系统的硬件支持 PS 3.0，PS 3.0 着色器也不会在软件呈现期间运行。</span><span class="sxs-lookup"><span data-stu-id="efd54-125">However, even if PS 3.0 is supported by the system's hardware, PS 3.0 shaders do not run during software rendering.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efd54-126">下面的代码示例演示如何从 <xref:System.Windows.Media.Effects.ShaderEffect> 类派生。</span><span class="sxs-lookup"><span data-stu-id="efd54-126">The following code example shows how to derive from the <xref:System.Windows.Media.Effects.ShaderEffect> class.</span></span>  
  
 [!code-csharp[System.Windows.Media.Effects.ShaderEffect#1](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Media.Effects.ShaderEffect/CS/ThresholdEffect.cs#1)]  
  
 <span data-ttu-id="efd54-127">下面的代码示例演示与前面的类相对应的着色器 <xref:System.Windows.Media.Effects.ShaderEffect> 。</span><span class="sxs-lookup"><span data-stu-id="efd54-127">The following code example shows a shader that corresponds to the previous <xref:System.Windows.Media.Effects.ShaderEffect> class.</span></span>  
  
 [!code-csharp[System.Windows.Media.Effects.ShaderEffect#10](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Media.Effects.ShaderEffect/CS/Threshold.fx#10)]  
  
 <span data-ttu-id="efd54-128">下面的 XAML 演示如何使用自定义着色器效果。</span><span class="sxs-lookup"><span data-stu-id="efd54-128">The following XAML shows how to use the custom shader effect.</span></span>  
  
 [!code-xaml[System.Windows.Media.Effects.ShaderEffect#1000](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Media.Effects.ShaderEffect/CS/Window1.xaml#1000)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Effects.Effect" />
    <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ShaderEffect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ShaderEffect();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efd54-129">初始化 <see cref="T:System.Windows.Media.Effects.ShaderEffect" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="efd54-129">Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.ShaderEffect" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.ShaderEffect Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Effects.ShaderEffect Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ShaderEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Effects::ShaderEffect ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Effects.ShaderEffect" Usage="shaderEffect.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.ShaderEffect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efd54-130">创建此 <see cref="T:System.Windows.Media.Effects.ShaderEffect" /> 对象的可修改复本，从而深度复制此对象的值。</span><span class="sxs-lookup"><span data-stu-id="efd54-130">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.ShaderEffect" /> object, making deep copies of this object's values.</span></span> <span data-ttu-id="efd54-131">在复制此对象的依赖项属性时，此方法复制资源引用和数据绑定（可能不再解析），但不复制动画或其当前值。</span><span class="sxs-lookup"><span data-stu-id="efd54-131">When copying this object's dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.</span></span></summary>
        <returns><span data-ttu-id="efd54-132">此实例的可修改复本。</span><span class="sxs-lookup"><span data-stu-id="efd54-132">A modifiable clone of this instance.</span></span> <span data-ttu-id="efd54-133">返回的复本实际上是当前对象的深层副本。</span><span class="sxs-lookup"><span data-stu-id="efd54-133">The returned clone is effectively a deep copy of the current object.</span></span> <span data-ttu-id="efd54-134">该复本的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="efd54-134">The clone's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd54-135"><xref:System.Windows.Media.Effects.ShaderEffect.Clone%2A>方法可用于生成冻结对象的可修改副本 <xref:System.Windows.Freezable> 。</span><span class="sxs-lookup"><span data-stu-id="efd54-135">The <xref:System.Windows.Media.Effects.ShaderEffect.Clone%2A> method can be used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects.</span></span> <span data-ttu-id="efd54-136">为方便起见，此方法隐藏了继承 <xref:System.Windows.Freezable.Clone%2A> 方法以提供强类型实现。</span><span class="sxs-lookup"><span data-stu-id="efd54-136">For convenience, this method shadows the inherited <xref:System.Windows.Freezable.Clone%2A> method to provide a strongly typed implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="shaderEffect.CloneCore sourceFreezable" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="shaderEffect.CloneCore sourceFreezable" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="efd54-137">要克隆的对象。</span><span class="sxs-lookup"><span data-stu-id="efd54-137">The object to clone.</span></span></param>
        <summary><span data-ttu-id="efd54-138">使用基（未经过动画处理的）属性值使该实例成为指定 <see cref="T:System.Windows.Freezable" /> 的克隆（深层复制）。</span><span class="sxs-lookup"><span data-stu-id="efd54-138">Makes the instance a clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.ShaderEffect CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Effects.ShaderEffect CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As ShaderEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Effects::ShaderEffect ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.Effects.ShaderEffect" Usage="shaderEffect.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.ShaderEffect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efd54-139">创建此 <see cref="T:System.Windows.Media.Effects.ShaderEffect" /> 对象的可修改复本，从而深度复制此对象的当前值。</span><span class="sxs-lookup"><span data-stu-id="efd54-139">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.ShaderEffect" /> object, making deep copies of this object's current values.</span></span> <span data-ttu-id="efd54-140">不复制资源引用、数据绑定和动画，而是复制其当前值。</span><span class="sxs-lookup"><span data-stu-id="efd54-140">Resource references, data bindings, and animations are not copied, but their current values are copied.</span></span></summary>
        <returns><span data-ttu-id="efd54-141">当前对象的可修改复本。</span><span class="sxs-lookup"><span data-stu-id="efd54-141">A modifiable clone of the current object.</span></span> <span data-ttu-id="efd54-142">即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true" />，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="efd54-142">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd54-143">此方法用于生成冻结 <xref:System.Windows.Freezable> 对象 (或任何对象) 的可修改副本 <xref:System.Windows.Freezable> 。</span><span class="sxs-lookup"><span data-stu-id="efd54-143">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="efd54-144">为方便起见，此方法使用强类型实现隐藏了继承的版本。</span><span class="sxs-lookup"><span data-stu-id="efd54-144">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="efd54-145">有关详细信息，请参阅 <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="efd54-145">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCurrentValueCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="shaderEffect.CloneCurrentValueCore sourceFreezable" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="shaderEffect.CloneCurrentValueCore sourceFreezable" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="efd54-146">要克隆的 <see cref="T:System.Windows.Freezable" />。</span><span class="sxs-lookup"><span data-stu-id="efd54-146">The <see cref="T:System.Windows.Freezable" /> to be cloned.</span></span></param>
        <summary><span data-ttu-id="efd54-147">使用当前属性值使该实例成为指定 <see cref="T:System.Windows.Freezable" /> 的可修改克隆（深层复制）。</span><span class="sxs-lookup"><span data-stu-id="efd54-147">Makes the instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using current property values.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="shaderEffect.CreateInstanceCore " FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="shaderEffect.CreateInstanceCore " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efd54-148">创建 <see cref="T:System.Windows.Freezable" /> 派生类的新实例。</span><span class="sxs-lookup"><span data-stu-id="efd54-148">Creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class.</span></span></summary>
        <returns><span data-ttu-id="efd54-149">新实例。</span><span class="sxs-lookup"><span data-stu-id="efd54-149">The new instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DdxUvDdyUvRegisterIndex">
      <MemberSignature Language="C#" Value="protected int DdxUvDdyUvRegisterIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DdxUvDdyUvRegisterIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex" />
      <MemberSignature Language="VB.NET" Value="Protected Property DdxUvDdyUvRegisterIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int DdxUvDdyUvRegisterIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DdxUvDdyUvRegisterIndex : int with get, set" Usage="System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd54-150">获取或设置一个值，该值指示要用于纹理坐标对屏幕空间的偏导数的着色器寄存器。</span><span class="sxs-lookup"><span data-stu-id="efd54-150">Gets or sets a value that indicates the shader register to use for the partial derivatives of the texture coordinates with respect to screen space.</span></span></summary>
        <value><span data-ttu-id="efd54-151">包含偏导数的寄存器的索引。</span><span class="sxs-lookup"><span data-stu-id="efd54-151">The index of the register that contains the partial derivatives.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd54-152">使用 <xref:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex%2A> 属性可以指定包含纹理坐标相对于屏幕空间的偏导数的着色器寄存器。</span><span class="sxs-lookup"><span data-stu-id="efd54-152">Use the <xref:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex%2A> property to specify the shader register that contains the partial derivatives of the texture coordinates with respect to screen space.</span></span> <span data-ttu-id="efd54-153">例如，如果 <xref:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex%2A> 设置为4，则使用着色器注册 c4。</span><span class="sxs-lookup"><span data-stu-id="efd54-153">For example, if <xref:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex%2A> is set to 4, the shader register c4 is used.</span></span> <span data-ttu-id="efd54-154">Register c4 包含四个 float 字段。</span><span class="sxs-lookup"><span data-stu-id="efd54-154">Register c4 contains four float fields.</span></span> <span data-ttu-id="efd54-155">以下高级底纹语言 (HLSL) 代码演示如何使用此寄存器。</span><span class="sxs-lookup"><span data-stu-id="efd54-155">The following High Level Shading Language (HLSL) code shows how this register is used.</span></span> <span data-ttu-id="efd54-156">`nextPixelUV`该值表示右侧的下一个像素。</span><span class="sxs-lookup"><span data-stu-id="efd54-156">The `nextPixelUV` value represents the next pixel to the right.</span></span>  
  
```  
float4 ddxUvDdyUv : register(c4);  
SamplerState  sampler : register(S0);  
...  
float2 nextPixelUV;  
nextPixelUV.u = ddxUvDdyUv.x + u;  
nextPixelUV.v = ddxUvDdyUv.y + v;  
  
tex2D(sampler, nextPixelUV);  
```  
  
 <span data-ttu-id="efd54-157">下表显示如何填充为指定的 <xref:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex%2A> 。</span><span class="sxs-lookup"><span data-stu-id="efd54-157">The following table shows how the register specified for <xref:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex%2A> is filled.</span></span>  
  
|<span data-ttu-id="efd54-158">Register 常量</span><span class="sxs-lookup"><span data-stu-id="efd54-158">Register Constant</span></span>|<span data-ttu-id="efd54-159">导数值</span><span class="sxs-lookup"><span data-stu-id="efd54-159">Derivative Value</span></span>|  
|-----------------------|----------------------|  
|<span data-ttu-id="efd54-160">x 组件</span><span class="sxs-lookup"><span data-stu-id="efd54-160">x component</span></span>|<span data-ttu-id="efd54-161">ddx (u) </span><span class="sxs-lookup"><span data-stu-id="efd54-161">ddx(u)</span></span>|  
|<span data-ttu-id="efd54-162">y 组件</span><span class="sxs-lookup"><span data-stu-id="efd54-162">y component</span></span>|<span data-ttu-id="efd54-163">ddx (v) </span><span class="sxs-lookup"><span data-stu-id="efd54-163">ddx(v)</span></span>|  
|<span data-ttu-id="efd54-164">z 组件</span><span class="sxs-lookup"><span data-stu-id="efd54-164">z component</span></span>|<span data-ttu-id="efd54-165">ddy (u) </span><span class="sxs-lookup"><span data-stu-id="efd54-165">ddy(u)</span></span>|  
|<span data-ttu-id="efd54-166">w 组件</span><span class="sxs-lookup"><span data-stu-id="efd54-166">w component</span></span>|<span data-ttu-id="efd54-167">ddy (v) </span><span class="sxs-lookup"><span data-stu-id="efd54-167">ddy(v)</span></span>|  
  
 <span data-ttu-id="efd54-168">纹理坐标表示为 `(u, v)` 。</span><span class="sxs-lookup"><span data-stu-id="efd54-168">Texture coordinates are denoted as `(u, v)`.</span></span> <span data-ttu-id="efd54-169">`ddx(u)`是纹理坐标组件 `u` 相对于屏幕空间 x 坐标的常量部分导数。</span><span class="sxs-lookup"><span data-stu-id="efd54-169">`ddx(u)` is the constant partial derivative of the texture coordinate component `u` with respect to the screen-space x-coordinate.</span></span> <span data-ttu-id="efd54-170">`ddy(u)`是纹理坐标 `u` 相对于屏幕空间 y 坐标的部分导数。</span><span class="sxs-lookup"><span data-stu-id="efd54-170">`ddy(u)` is the partial derivative of the texture coordinate `u` with respect to the screen-space y-coordinate.</span></span> <span data-ttu-id="efd54-171">同样， `ddx(v)` 和 `ddy(v)` 是纹理坐标组件的相应屏幕空间派生 `v` 。</span><span class="sxs-lookup"><span data-stu-id="efd54-171">Similarly, `ddx(v)` and `ddy(v)` are the corresponding screen-space derivatives for the texture coordinate component `v`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efd54-172">HLSL 具有用于计算这些值的 ddx 和 ddy 说明，但这些说明在所有 PixelShader 2.0 硬件上都不可用。</span><span class="sxs-lookup"><span data-stu-id="efd54-172">HLSL has the ddx and ddy instructions to calculate these values, but these instructions are not available on all PixelShader 2.0 hardware.</span></span>  
  
 <span data-ttu-id="efd54-173">您可以按以下方式考虑这些常量。</span><span class="sxs-lookup"><span data-stu-id="efd54-173">You may think of these constants in the following way.</span></span> <span data-ttu-id="efd54-174">如果在屏幕空间 (的 x) 方向上向右1个像素，则 `ddx(u)` 为 `u` 纹理空间变化的量，并且 `ddx(v)` 是 `v` 纹理空间中的变化量。</span><span class="sxs-lookup"><span data-stu-id="efd54-174">If you step 1 pixel to the right in screen space (in the x direction), then `ddx(u)` is the amount that `u` changes in texture space, and `ddx(v)` is the amount that `v` changes in texture space.</span></span> <span data-ttu-id="efd54-175">如果效果在呈现时为轴对齐，则 `ddx(v)` 为0。</span><span class="sxs-lookup"><span data-stu-id="efd54-175">If the effect is axis-aligned when it is rendered, then `ddx(v)` is 0.</span></span> <span data-ttu-id="efd54-176">如果效果在呈现时旋转，则 `ddx(v)` 为非零值。</span><span class="sxs-lookup"><span data-stu-id="efd54-176">If the effect is rotated when it is rendered, then `ddx(v)` is non-zero.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="efd54-177">尝试多次或在初次处理效果后设置 <see cref="P:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="efd54-177">An attempt was made to set the <see cref="P:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex" /> property more than one time or after initial processing of the effect.</span></span></exception>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="shaderEffect.GetAsFrozenCore sourceFreezable" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="shaderEffect.GetAsFrozenCore sourceFreezable" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="efd54-178">要复制的实例。</span><span class="sxs-lookup"><span data-stu-id="efd54-178">The instance to copy.</span></span></param>
        <summary><span data-ttu-id="efd54-179">让该实例成为指定的 <see cref="T:System.Windows.Freezable" /> 的冻结克隆，前者使用基（非动画的）属性值。</span><span class="sxs-lookup"><span data-stu-id="efd54-179">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="shaderEffect.GetCurrentValueAsFrozenCore sourceFreezable" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="shaderEffect.GetCurrentValueAsFrozenCore sourceFreezable" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="efd54-180">要复制和冻结的 <see cref="T:System.Windows.Freezable" />。</span><span class="sxs-lookup"><span data-stu-id="efd54-180">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</span></span></param>
        <summary><span data-ttu-id="efd54-181">使当前实例成为指定 <see cref="T:System.Windows.Freezable" /> 的冻结克隆。</span><span class="sxs-lookup"><span data-stu-id="efd54-181">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span></span> <span data-ttu-id="efd54-182">如果对象具有动画依赖属性，则复制其当前的动画值。</span><span class="sxs-lookup"><span data-stu-id="efd54-182">If the object has animated dependency properties, their current animated values are copied.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="PaddingBottom">
      <MemberSignature Language="C#" Value="protected double PaddingBottom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PaddingBottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.ShaderEffect.PaddingBottom" />
      <MemberSignature Language="VB.NET" Value="Protected Property PaddingBottom As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property double PaddingBottom { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PaddingBottom : double with get, set" Usage="System.Windows.Media.Effects.ShaderEffect.PaddingBottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd54-183">获取或设置一个值，该值指示沿下边缘方向效果的输出纹理大于其输入纹理。</span><span class="sxs-lookup"><span data-stu-id="efd54-183">Gets or sets a value indicating that the effect's output texture is larger than its input texture along the bottom edge.</span></span></summary>
        <value><span data-ttu-id="efd54-184">沿效果下边缘的填充。</span><span class="sxs-lookup"><span data-stu-id="efd54-184">The padding along the bottom edge of the effect.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="efd54-185">提供的值小于 0。</span><span class="sxs-lookup"><span data-stu-id="efd54-185">The provided value is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PaddingLeft">
      <MemberSignature Language="C#" Value="protected double PaddingLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PaddingLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.ShaderEffect.PaddingLeft" />
      <MemberSignature Language="VB.NET" Value="Protected Property PaddingLeft As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property double PaddingLeft { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PaddingLeft : double with get, set" Usage="System.Windows.Media.Effects.ShaderEffect.PaddingLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd54-186">获取或设置一个值，该值指示沿左边缘方向效果的输出纹理大于其输入纹理。</span><span class="sxs-lookup"><span data-stu-id="efd54-186">Gets or sets a value indicating that the effect's output texture is larger than its input texture along the left edge.</span></span></summary>
        <value><span data-ttu-id="efd54-187">沿效果左边缘的填充。</span><span class="sxs-lookup"><span data-stu-id="efd54-187">The padding along the left edge of the effect.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="efd54-188">提供的值小于 0。</span><span class="sxs-lookup"><span data-stu-id="efd54-188">The provided value is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PaddingRight">
      <MemberSignature Language="C#" Value="protected double PaddingRight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PaddingRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.ShaderEffect.PaddingRight" />
      <MemberSignature Language="VB.NET" Value="Protected Property PaddingRight As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property double PaddingRight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PaddingRight : double with get, set" Usage="System.Windows.Media.Effects.ShaderEffect.PaddingRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd54-189">获取或设置一个值，该值指示沿右边缘方向效果的输出纹理大于其输入纹理。</span><span class="sxs-lookup"><span data-stu-id="efd54-189">Gets or sets a value indicating that the effect's output texture is larger than its input texture along the right edge.</span></span></summary>
        <value><span data-ttu-id="efd54-190">沿效果右边缘的填充。</span><span class="sxs-lookup"><span data-stu-id="efd54-190">The padding along the right edge of the effect.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="efd54-191">提供的值小于 0。</span><span class="sxs-lookup"><span data-stu-id="efd54-191">The provided value is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PaddingTop">
      <MemberSignature Language="C#" Value="protected double PaddingTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PaddingTop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.ShaderEffect.PaddingTop" />
      <MemberSignature Language="VB.NET" Value="Protected Property PaddingTop As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property double PaddingTop { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PaddingTop : double with get, set" Usage="System.Windows.Media.Effects.ShaderEffect.PaddingTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd54-192">获取或设置一个值，该值指示沿上边缘方向效果的输出纹理大于其输入纹理。</span><span class="sxs-lookup"><span data-stu-id="efd54-192">Gets or sets a value indicating that the effect's output texture is larger than its input texture along the top edge.</span></span></summary>
        <value><span data-ttu-id="efd54-193">沿效果上边缘的填充。</span><span class="sxs-lookup"><span data-stu-id="efd54-193">The padding along the top edge of the effect.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="efd54-194">提供的值小于 0。</span><span class="sxs-lookup"><span data-stu-id="efd54-194">The provided value is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PixelShader">
      <MemberSignature Language="C#" Value="protected System.Windows.Media.Effects.PixelShader PixelShader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.PixelShader PixelShader" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.ShaderEffect.PixelShader" />
      <MemberSignature Language="VB.NET" Value="Protected Property PixelShader As PixelShader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Media::Effects::PixelShader ^ PixelShader { System::Windows::Media::Effects::PixelShader ^ get(); void set(System::Windows::Media::Effects::PixelShader ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PixelShader : System.Windows.Media.Effects.PixelShader with get, set" Usage="System.Windows.Media.Effects.ShaderEffect.PixelShader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.PixelShader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd54-195">获取或设置要用于该效果的 <see cref="T:System.Windows.Media.Effects.PixelShader" />。</span><span class="sxs-lookup"><span data-stu-id="efd54-195">Gets or sets the <see cref="T:System.Windows.Media.Effects.PixelShader" /> to use for the effect.</span></span></summary>
        <value><span data-ttu-id="efd54-196">该效果的 <see cref="T:System.Windows.Media.Effects.PixelShader" />。</span><span class="sxs-lookup"><span data-stu-id="efd54-196">The <see cref="T:System.Windows.Media.Effects.PixelShader" /> for the effect.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_PixelShader"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="efd54-197">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="efd54-197">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="efd54-198">标识符字段</span><span class="sxs-lookup"><span data-stu-id="efd54-198">Identifier field</span></span>|<xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty>|  
|<span data-ttu-id="efd54-199">元数据属性设置为`true`</span><span class="sxs-lookup"><span data-stu-id="efd54-199">Metadata properties set to `true`</span></span>|<span data-ttu-id="efd54-200">None</span><span class="sxs-lookup"><span data-stu-id="efd54-200">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <Member MemberName="PixelShaderConstantCallback">
      <MemberSignature Language="C#" Value="protected static System.Windows.PropertyChangedCallback PixelShaderConstantCallback (int floatRegisterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Windows.PropertyChangedCallback PixelShaderConstantCallback(int32 floatRegisterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function PixelShaderConstantCallback (floatRegisterIndex As Integer) As PropertyChangedCallback" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Windows::PropertyChangedCallback ^ PixelShaderConstantCallback(int floatRegisterIndex);" />
      <MemberSignature Language="F#" Value="static member PixelShaderConstantCallback : int -&gt; System.Windows.PropertyChangedCallback" Usage="System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback floatRegisterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyChangedCallback</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="floatRegisterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="floatRegisterIndex"><span data-ttu-id="efd54-201">与依赖项属性关联的着色器寄存器的索引。</span><span class="sxs-lookup"><span data-stu-id="efd54-201">The index of the shader register associated with the dependency property.</span></span></param>
        <summary><span data-ttu-id="efd54-202">将依赖项属性值与像素着色器的浮点常量寄存器相关联。</span><span class="sxs-lookup"><span data-stu-id="efd54-202">Associates a dependency property value with a pixel shader's float constant register.</span></span></summary>
        <returns><span data-ttu-id="efd54-203">一个 <see cref="T:System.Windows.PropertyChangedCallback" /> 委托，该委托将依赖项属性与 <paramref name="floatRegisterIndex" /> 指定的着色器常量寄存器相关联。</span><span class="sxs-lookup"><span data-stu-id="efd54-203">A <see cref="T:System.Windows.PropertyChangedCallback" /> delegate that associates a dependency property and the shader constant register specified by <paramref name="floatRegisterIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd54-204">在 <xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback%2A> 为着色器常数注册依赖属性时，请使用方法。</span><span class="sxs-lookup"><span data-stu-id="efd54-204">Use the <xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback%2A> method when you register a dependency property for a shader constant.</span></span> <span data-ttu-id="efd54-205"><xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback%2A>方法构造一个 <xref:System.Windows.PropertyChangedCallback> 委托，在调用它时，将在依赖项属性与指定的着色器常数寄存器之间创建关联 `floatRegisterIndex` 。</span><span class="sxs-lookup"><span data-stu-id="efd54-205">The <xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback%2A> method constructs a <xref:System.Windows.PropertyChangedCallback> delegate that, when invoked, creates an association between the dependency property and the shader constant register specified by `floatRegisterIndex`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="efd54-206">该依赖项属性是一个未知类型。</span><span class="sxs-lookup"><span data-stu-id="efd54-206">The dependency property is an unknown type.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="efd54-207"><paramref name="floatRegisterIndex" /> 大于或等于 32，或 <paramref name="floatRegisterIndex" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="efd54-207"><paramref name="floatRegisterIndex" /> is greater than or equal to 32, or <paramref name="floatRegisterIndex" /> is less than 0.</span></span></exception>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <Member MemberName="PixelShaderProperty">
      <MemberSignature Language="C#" Value="protected static readonly System.Windows.DependencyProperty PixelShaderProperty;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly class System.Windows.DependencyProperty PixelShaderProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly PixelShaderProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Windows::DependencyProperty ^ PixelShaderProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PixelShaderProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efd54-208">标识 <see cref="P:System.Windows.Media.Effects.ShaderEffect.PixelShader" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="efd54-208">Identifies the <see cref="P:System.Windows.Media.Effects.ShaderEffect.PixelShader" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PixelShaderSamplerCallback">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="efd54-209">将依赖项属性值与像素着色器的采样器寄存器相关联。</span><span class="sxs-lookup"><span data-stu-id="efd54-209">Associates a dependency property value with a pixel shader's sampler register.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PixelShaderSamplerCallback">
      <MemberSignature Language="C#" Value="protected static System.Windows.PropertyChangedCallback PixelShaderSamplerCallback (int samplerRegisterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Windows.PropertyChangedCallback PixelShaderSamplerCallback(int32 samplerRegisterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function PixelShaderSamplerCallback (samplerRegisterIndex As Integer) As PropertyChangedCallback" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Windows::PropertyChangedCallback ^ PixelShaderSamplerCallback(int samplerRegisterIndex);" />
      <MemberSignature Language="F#" Value="static member PixelShaderSamplerCallback : int -&gt; System.Windows.PropertyChangedCallback" Usage="System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback samplerRegisterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyChangedCallback</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="samplerRegisterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="samplerRegisterIndex"><span data-ttu-id="efd54-210">与依赖项属性关联的着色器采样器的索引。</span><span class="sxs-lookup"><span data-stu-id="efd54-210">The index of the shader sampler associated with the dependency property.</span></span></param>
        <summary><span data-ttu-id="efd54-211">将依赖项属性值与像素着色器的采样器寄存器相关联。</span><span class="sxs-lookup"><span data-stu-id="efd54-211">Associates a dependency property value with a pixel shader's sampler register.</span></span></summary>
        <returns><span data-ttu-id="efd54-212">一个 <see cref="T:System.Windows.PropertyChangedCallback" /> 委托，该委托将依赖项属性与 <paramref name="samplerRegisterIndex" /> 指定的着色器的采样器寄存器相关联。</span><span class="sxs-lookup"><span data-stu-id="efd54-212">A <see cref="T:System.Windows.PropertyChangedCallback" /> delegate that associates a dependency property and the shader sampler register specified by <paramref name="samplerRegisterIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd54-213">在 <xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback%2A> <xref:System.Windows.Media.Brush> 为着色器采样器注册值依赖属性时，请使用方法。</span><span class="sxs-lookup"><span data-stu-id="efd54-213">Use the <xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback%2A> method when you register a <xref:System.Windows.Media.Brush>-valued dependency property for a shader sampler.</span></span> <span data-ttu-id="efd54-214"><xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback%2A>方法构造一个 <xref:System.Windows.PropertyChangedCallback> 委托，该委托在调用时创建由指定的依赖项属性与着色器的采样器寄存器之间的关联 `samplerRegisterIndex` 。</span><span class="sxs-lookup"><span data-stu-id="efd54-214">The <xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback%2A> method constructs a <xref:System.Windows.PropertyChangedCallback> delegate that, when invoked, creates an association between the dependency property and the shader sampler register specified by `samplerRegisterIndex`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <Member MemberName="PixelShaderSamplerCallback">
      <MemberSignature Language="C#" Value="protected static System.Windows.PropertyChangedCallback PixelShaderSamplerCallback (int samplerRegisterIndex, System.Windows.Media.Effects.SamplingMode samplingMode);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Windows.PropertyChangedCallback PixelShaderSamplerCallback(int32 samplerRegisterIndex, valuetype System.Windows.Media.Effects.SamplingMode samplingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function PixelShaderSamplerCallback (samplerRegisterIndex As Integer, samplingMode As SamplingMode) As PropertyChangedCallback" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Windows::PropertyChangedCallback ^ PixelShaderSamplerCallback(int samplerRegisterIndex, System::Windows::Media::Effects::SamplingMode samplingMode);" />
      <MemberSignature Language="F#" Value="static member PixelShaderSamplerCallback : int * System.Windows.Media.Effects.SamplingMode -&gt; System.Windows.PropertyChangedCallback" Usage="System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback (samplerRegisterIndex, samplingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyChangedCallback</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="samplerRegisterIndex" Type="System.Int32" />
        <Parameter Name="samplingMode" Type="System.Windows.Media.Effects.SamplingMode" />
      </Parameters>
      <Docs>
        <param name="samplerRegisterIndex"><span data-ttu-id="efd54-215">与依赖项属性关联的着色器采样器的索引。</span><span class="sxs-lookup"><span data-stu-id="efd54-215">The index of the shader sampler associated with the dependency property.</span></span></param>
        <param name="samplingMode"><span data-ttu-id="efd54-216">着色器采样器的 <see cref="T:System.Windows.Media.Effects.SamplingMode" />。</span><span class="sxs-lookup"><span data-stu-id="efd54-216">The <see cref="T:System.Windows.Media.Effects.SamplingMode" /> for the shader sampler.</span></span></param>
        <summary><span data-ttu-id="efd54-217">将依赖项属性值与像素着色器的采样器寄存器以及 <see cref="T:System.Windows.Media.Effects.SamplingMode" /> 相关联。</span><span class="sxs-lookup"><span data-stu-id="efd54-217">Associates a dependency property value with a pixel shader's sampler register and a <see cref="T:System.Windows.Media.Effects.SamplingMode" />.</span></span></summary>
        <returns><span data-ttu-id="efd54-218">一个 <see cref="T:System.Windows.PropertyChangedCallback" /> 委托，该委托将依赖项属性与 <paramref name="samplerRegisterIndex" /> 指定的着色器的采样器寄存器相关联。</span><span class="sxs-lookup"><span data-stu-id="efd54-218">A <see cref="T:System.Windows.PropertyChangedCallback" /> delegate that associates a dependency property and the shader sampler register specified by <paramref name="samplerRegisterIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efd54-219">在 <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A> <xref:System.Windows.Media.Brush> 为着色器采样器注册值依赖属性时，请使用方法。</span><span class="sxs-lookup"><span data-stu-id="efd54-219">Use the <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A> method when you register a <xref:System.Windows.Media.Brush>-valued dependency property for a shader sampler.</span></span> <span data-ttu-id="efd54-220"><xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A>方法构造一个 <xref:System.Windows.PropertyChangedCallback> 委托，该委托在调用时创建由指定的依赖项属性与着色器的采样器寄存器之间的关联 `samplerRegisterIndex` 。</span><span class="sxs-lookup"><span data-stu-id="efd54-220">The <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A> method constructs a <xref:System.Windows.PropertyChangedCallback> delegate that, when invoked, creates an association between the dependency property and the shader sampler register specified by `samplerRegisterIndex`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterPixelShaderSamplerProperty">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="efd54-221">将依赖项属性与着色器的采样器寄存器相关联。</span><span class="sxs-lookup"><span data-stu-id="efd54-221">Associates a dependency property with a shader sampler register.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterPixelShaderSamplerProperty">
      <MemberSignature Language="C#" Value="protected static System.Windows.DependencyProperty RegisterPixelShaderSamplerProperty (string dpName, Type ownerType, int samplerRegisterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Windows.DependencyProperty RegisterPixelShaderSamplerProperty(string dpName, class System.Type ownerType, int32 samplerRegisterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function RegisterPixelShaderSamplerProperty (dpName As String, ownerType As Type, samplerRegisterIndex As Integer) As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Windows::DependencyProperty ^ RegisterPixelShaderSamplerProperty(System::String ^ dpName, Type ^ ownerType, int samplerRegisterIndex);" />
      <MemberSignature Language="F#" Value="static member RegisterPixelShaderSamplerProperty : string * Type * int -&gt; System.Windows.DependencyProperty" Usage="System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty (dpName, ownerType, samplerRegisterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dpName" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="samplerRegisterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dpName"><span data-ttu-id="efd54-222">依赖项属性的名称。</span><span class="sxs-lookup"><span data-stu-id="efd54-222">The name of the dependency property.</span></span></param>
        <param name="ownerType"><span data-ttu-id="efd54-223">具有该依赖项属性的效果的类型。</span><span class="sxs-lookup"><span data-stu-id="efd54-223">The type of the effect that has the dependency property.</span></span></param>
        <param name="samplerRegisterIndex"><span data-ttu-id="efd54-224">与依赖项属性关联的着色器采样器的索引。</span><span class="sxs-lookup"><span data-stu-id="efd54-224">The index of the shader sampler associated with the dependency property.</span></span></param>
        <summary><span data-ttu-id="efd54-225">将依赖项属性与着色器的采样器寄存器相关联。</span><span class="sxs-lookup"><span data-stu-id="efd54-225">Associates a dependency property with a shader sampler register.</span></span></summary>
        <returns><span data-ttu-id="efd54-226">与 <paramref name="samplerRegisterIndex" /> 指定的着色器采样器关联的依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="efd54-226">A dependency property associated with the shader sampler specified by <paramref name="samplerRegisterIndex" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <Member MemberName="RegisterPixelShaderSamplerProperty">
      <MemberSignature Language="C#" Value="protected static System.Windows.DependencyProperty RegisterPixelShaderSamplerProperty (string dpName, Type ownerType, int samplerRegisterIndex, System.Windows.Media.Effects.SamplingMode samplingMode);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Windows.DependencyProperty RegisterPixelShaderSamplerProperty(string dpName, class System.Type ownerType, int32 samplerRegisterIndex, valuetype System.Windows.Media.Effects.SamplingMode samplingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32,System.Windows.Media.Effects.SamplingMode)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function RegisterPixelShaderSamplerProperty (dpName As String, ownerType As Type, samplerRegisterIndex As Integer, samplingMode As SamplingMode) As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Windows::DependencyProperty ^ RegisterPixelShaderSamplerProperty(System::String ^ dpName, Type ^ ownerType, int samplerRegisterIndex, System::Windows::Media::Effects::SamplingMode samplingMode);" />
      <MemberSignature Language="F#" Value="static member RegisterPixelShaderSamplerProperty : string * Type * int * System.Windows.Media.Effects.SamplingMode -&gt; System.Windows.DependencyProperty" Usage="System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty (dpName, ownerType, samplerRegisterIndex, samplingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dpName" Type="System.String" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="samplerRegisterIndex" Type="System.Int32" />
        <Parameter Name="samplingMode" Type="System.Windows.Media.Effects.SamplingMode" />
      </Parameters>
      <Docs>
        <param name="dpName"><span data-ttu-id="efd54-227">依赖项属性的名称。</span><span class="sxs-lookup"><span data-stu-id="efd54-227">The name of the dependency property.</span></span></param>
        <param name="ownerType"><span data-ttu-id="efd54-228">具有该依赖项属性的效果的类型。</span><span class="sxs-lookup"><span data-stu-id="efd54-228">The type of the effect that has the dependency property.</span></span></param>
        <param name="samplerRegisterIndex"><span data-ttu-id="efd54-229">与依赖项属性关联的着色器采样器的索引。</span><span class="sxs-lookup"><span data-stu-id="efd54-229">The index of the shader sampler associated with the dependency property.</span></span></param>
        <param name="samplingMode"><span data-ttu-id="efd54-230">着色器采样器的 <see cref="T:System.Windows.Media.Effects.SamplingMode" />。</span><span class="sxs-lookup"><span data-stu-id="efd54-230">The <see cref="T:System.Windows.Media.Effects.SamplingMode" /> for the shader sampler.</span></span></param>
        <summary><span data-ttu-id="efd54-231">将依赖项属性与着色器的采样器寄存器以及 <see cref="T:System.Windows.Media.Effects.SamplingMode" /> 相关联。</span><span class="sxs-lookup"><span data-stu-id="efd54-231">Associates a dependency property with a shader sampler register and a <see cref="T:System.Windows.Media.Effects.SamplingMode" />.</span></span></summary>
        <returns><span data-ttu-id="efd54-232">与 <paramref name="samplerRegisterIndex" /> 指定的着色器采样器关联的依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="efd54-232">A dependency property associated with the shader sampler specified by <paramref name="samplerRegisterIndex" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <Member MemberName="UpdateShaderValue">
      <MemberSignature Language="C#" Value="protected void UpdateShaderValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateShaderValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateShaderValue (dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateShaderValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="member this.UpdateShaderValue : System.Windows.DependencyProperty -&gt; unit" Usage="shaderEffect.UpdateShaderValue dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="efd54-233">要更新的依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="efd54-233">The dependency property to be updated.</span></span></param>
        <summary><span data-ttu-id="efd54-234">通知效果应当更新与指定依赖项属性对应的着色器常量或采样器。</span><span class="sxs-lookup"><span data-stu-id="efd54-234">Notifies the effect that the shader constant or sampler corresponding to the specified dependency property should be updated.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
  </Members>
</Type>
