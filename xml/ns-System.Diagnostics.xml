<Namespace Name="System.Diagnostics">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef6aeaebe2981ce7e1b191a089dab9ae242e488a" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="64444581" /></Metadata><Docs>
    <summary><see cref="N:System.Diagnostics" /> 命名空间提供类，使您能够与系统进程、事件日志和性能计数器进行交互。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <xref:System.Diagnostics.EventLog>组件提供了写入事件日志、读取事件日志项以及在网络上创建和删除事件日志和事件源的功能。 <xref:System.Diagnostics.EntryWrittenEventHandler>提供了一种异步交互事件日志的方法。 支持类提供对更详细的控制的访问权限，包括：权限限制、指定事件日志类型的能力（控制用事件日志条目写入的默认数据类型），以及循环访问事件日志条目的集合。 有关这些任务的详细信息，请参阅 <xref:System.Diagnostics.EventLogPermission> 、 <xref:System.Diagnostics.EventLogEntryType> 和 <xref:System.Diagnostics.EventLogEntryCollection> 类。  
  
-   <xref:System.Diagnostics.Process>类提供通过网络监视系统进程以及启动和停止本地系统进程的功能。 除了检索正在运行的进程的列表（通过指定计算机、进程名称或进程 id）或查看有关当前有权访问处理器的进程的信息之外，您还可以通过 <xref:System.Diagnostics.Process> 类本身以及与和类交互来获取进程线程和模块的详细知识 <xref:System.Diagnostics.ProcessThread> <xref:System.Diagnostics.ProcessModule> 。 利用 <xref:System.Diagnostics.ProcessStartInfo> 类，您可以指定用于启动新进程的各种元素，例如输入、输出和错误流、工作目录和命令行谓词和参数。 这使您可以对进程的行为进行精细控制。 其他相关类使你可以指定窗口样式、进程和线程优先级，并与线程和模块的集合进行交互。  
  
-   <xref:System.Diagnostics.PerformanceCounter>类使你能够监视系统性能，而 <xref:System.Diagnostics.PerformanceCounterCategory> 类提供了一种方法来创建新的自定义计数器和类别。 可以写入本地自定义计数器，并从本地和远程计数器（系统和自定义）进行读取。 您可以使用类来采样计数器 <xref:System.Diagnostics.PerformanceCounter> ，并使用类计算后续性能计数器样本的结果 <xref:System.Diagnostics.CounterSample> 。 <xref:System.Diagnostics.CounterCreationData>类使你能够在一个类别中创建多个计数器并指定其类型。 与性能计数器组件关联的其他类提供对计数器、计数器权限和计数器类型的集合的访问权限。  
  
 <xref:System.Diagnostics>命名空间还提供了一些类，这些类可用于调试应用程序并跟踪代码的执行。 有关更多信息，请参见 <xref:System.Diagnostics.Trace> 和 <xref:System.Diagnostics.Debug> 类。  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>