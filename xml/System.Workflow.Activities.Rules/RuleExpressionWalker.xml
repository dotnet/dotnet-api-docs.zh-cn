<Type Name="RuleExpressionWalker" FullName="System.Workflow.Activities.Rules.RuleExpressionWalker">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0c2077eaac2bc3a1bde1d6b3f457b75546c18d07" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89752114" /></Metadata><TypeSignature Language="C#" Value="public static class RuleExpressionWalker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RuleExpressionWalker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.Rules.RuleExpressionWalker" />
  <TypeSignature Language="VB.NET" Value="Public Class RuleExpressionWalker" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuleExpressionWalker abstract sealed" />
  <TypeSignature Language="F#" Value="type RuleExpressionWalker = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8e488-101">将表达式中的当前行为传播到子节点。</span><span class="sxs-lookup"><span data-stu-id="8e488-101">Propagates the current behavior in the expression to child nodes.</span></span> <span data-ttu-id="8e488-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="8e488-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e488-103">此类由所有 <xref:System.Workflow.Activities.Rules.IRuleExpression> 方法用于向子节点传播行为。</span><span class="sxs-lookup"><span data-stu-id="8e488-103">This class is used by all <xref:System.Workflow.Activities.Rules.IRuleExpression> methods to propagate behavior to child nodes.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AnalyzeUsage">
      <MemberSignature Language="C#" Value="public static void AnalyzeUsage (System.Workflow.Activities.Rules.RuleAnalysis analysis, System.CodeDom.CodeExpression expression, bool isRead, bool isWritten, System.Workflow.Activities.Rules.RulePathQualifier qualifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AnalyzeUsage(class System.Workflow.Activities.Rules.RuleAnalysis analysis, class System.CodeDom.CodeExpression expression, bool isRead, bool isWritten, class System.Workflow.Activities.Rules.RulePathQualifier qualifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AnalyzeUsage (analysis As RuleAnalysis, expression As CodeExpression, isRead As Boolean, isWritten As Boolean, qualifier As RulePathQualifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AnalyzeUsage(System::Workflow::Activities::Rules::RuleAnalysis ^ analysis, System::CodeDom::CodeExpression ^ expression, bool isRead, bool isWritten, System::Workflow::Activities::Rules::RulePathQualifier ^ qualifier);" />
      <MemberSignature Language="F#" Value="static member AnalyzeUsage : System.Workflow.Activities.Rules.RuleAnalysis * System.CodeDom.CodeExpression * bool * bool * System.Workflow.Activities.Rules.RulePathQualifier -&gt; unit" Usage="System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage (analysis, expression, isRead, isWritten, qualifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="analysis" Type="System.Workflow.Activities.Rules.RuleAnalysis" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="isRead" Type="System.Boolean" />
        <Parameter Name="isWritten" Type="System.Boolean" />
        <Parameter Name="qualifier" Type="System.Workflow.Activities.Rules.RulePathQualifier" />
      </Parameters>
      <Docs>
        <param name="analysis"><span data-ttu-id="8e488-104">存储表示由规则条件和操作使用的属性和字段的符号的 <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="8e488-104">The <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /> instance that stores symbols representing the properties and fields used by rule conditions and actions.</span></span></param>
        <param name="expression"><span data-ttu-id="8e488-105">正在执行的表达式。</span><span class="sxs-lookup"><span data-stu-id="8e488-105">The expression being executed.</span></span></param>
        <param name="isRead"><span data-ttu-id="8e488-106">如果要将 <see langword="true" /> 读取的字段和属性添加到 <see cref="T:System.Workflow.Activities.Rules.RuleAction" />，则为 <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8e488-106"><see langword="true" /> if fields and properties read by a <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> are to be added to <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />; otherwise, <see langword="false" />.</span></span></param>
        <param name="isWritten"><span data-ttu-id="8e488-107">如果要将 <see langword="true" /> 写入的字段和属性添加到 <see cref="T:System.Workflow.Activities.Rules.RuleAction" />，则为 <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8e488-107"><see langword="true" /> if fields and properties written by a <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> are to be added to <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />; otherwise, <see langword="false" />.</span></span></param>
        <param name="qualifier"><span data-ttu-id="8e488-108">到目前为止确定的字段或属性的路径。</span><span class="sxs-lookup"><span data-stu-id="8e488-108">The path of a field or property determined up to this point.</span></span></param>
        <summary><span data-ttu-id="8e488-109">标识由表达式使用的字段和属性并将它们作为符号添加到 <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="8e488-109">Identifies the fields and properties used by an expression and adds these as symbols to the <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8e488-110"><paramref name="analysis" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="8e488-110"><paramref name="analysis" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public static System.CodeDom.CodeExpression Clone (System.CodeDom.CodeExpression originalExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.CodeExpression Clone(class System.CodeDom.CodeExpression originalExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clone (originalExpression As CodeExpression) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::CodeExpression ^ Clone(System::CodeDom::CodeExpression ^ originalExpression);" />
      <MemberSignature Language="F#" Value="static member Clone : System.CodeDom.CodeExpression -&gt; System.CodeDom.CodeExpression" Usage="System.Workflow.Activities.Rules.RuleExpressionWalker.Clone originalExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originalExpression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="originalExpression"><span data-ttu-id="8e488-111">作为克隆基础的表达式。</span><span class="sxs-lookup"><span data-stu-id="8e488-111">The expression that the clone is based on.</span></span></param>
        <summary><span data-ttu-id="8e488-112">创建当前 <see cref="T:System.CodeDom.CodeExpression" /> 的子节点的深层副本。</span><span class="sxs-lookup"><span data-stu-id="8e488-112">Creates a deep copy of the child nodes of the current <see cref="T:System.CodeDom.CodeExpression" />.</span></span></summary>
        <returns><span data-ttu-id="8e488-113">与此实例完全相同的 <see cref="T:System.CodeDom.CodeExpression" />。</span><span class="sxs-lookup"><span data-stu-id="8e488-113">A <see cref="T:System.CodeDom.CodeExpression" /> that is identical to this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Decompile">
      <MemberSignature Language="C#" Value="public static void Decompile (System.Text.StringBuilder stringBuilder, System.CodeDom.CodeExpression expression, System.CodeDom.CodeExpression parentExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Decompile(class System.Text.StringBuilder stringBuilder, class System.CodeDom.CodeExpression expression, class System.CodeDom.CodeExpression parentExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Decompile (stringBuilder As StringBuilder, expression As CodeExpression, parentExpression As CodeExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Decompile(System::Text::StringBuilder ^ stringBuilder, System::CodeDom::CodeExpression ^ expression, System::CodeDom::CodeExpression ^ parentExpression);" />
      <MemberSignature Language="F#" Value="static member Decompile : System.Text.StringBuilder * System.CodeDom.CodeExpression * System.CodeDom.CodeExpression -&gt; unit" Usage="System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile (stringBuilder, expression, parentExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720:AvoidTypeNamesInParameters", MessageId="0#")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720:AvoidTypeNamesInParameters", MessageId="0#")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringBuilder" Type="System.Text.StringBuilder" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="parentExpression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="stringBuilder"><span data-ttu-id="8e488-114">包含字符的可变字符串的 <see cref="T:System.Text.StringBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="8e488-114">The <see cref="T:System.Text.StringBuilder" /> that contains the mutable string of characters.</span></span></param>
        <param name="expression"><span data-ttu-id="8e488-115">当前的 <see cref="T:System.CodeDom.CodeExpression" />。</span><span class="sxs-lookup"><span data-stu-id="8e488-115">The current <see cref="T:System.CodeDom.CodeExpression" />.</span></span></param>
        <param name="parentExpression"><span data-ttu-id="8e488-116">父 <see cref="T:System.CodeDom.CodeExpression" />。</span><span class="sxs-lookup"><span data-stu-id="8e488-116">The parent <see cref="T:System.CodeDom.CodeExpression" />.</span></span></param>
        <summary><span data-ttu-id="8e488-117">将表达式的子节点反编译为字符串格式。</span><span class="sxs-lookup"><span data-stu-id="8e488-117">Decompiles the child nodes of the expression into string form.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public static System.Workflow.Activities.Rules.RuleExpressionResult Evaluate (System.Workflow.Activities.Rules.RuleExecution execution, System.CodeDom.CodeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Workflow.Activities.Rules.RuleExpressionResult Evaluate(class System.Workflow.Activities.Rules.RuleExecution execution, class System.CodeDom.CodeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Evaluate (execution As RuleExecution, expression As CodeExpression) As RuleExpressionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Workflow::Activities::Rules::RuleExpressionResult ^ Evaluate(System::Workflow::Activities::Rules::RuleExecution ^ execution, System::CodeDom::CodeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="static member Evaluate : System.Workflow.Activities.Rules.RuleExecution * System.CodeDom.CodeExpression -&gt; System.Workflow.Activities.Rules.RuleExpressionResult" Usage="System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate (execution, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.Rules.RuleExpressionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="execution" Type="System.Workflow.Activities.Rules.RuleExecution" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="execution"><span data-ttu-id="8e488-118">要执行表达式的 <see cref="T:System.Workflow.Activities.Rules.RuleExecution" />。</span><span class="sxs-lookup"><span data-stu-id="8e488-118">The <see cref="T:System.Workflow.Activities.Rules.RuleExecution" /> to execute the expression.</span></span></param>
        <param name="expression"><span data-ttu-id="8e488-119">要计算的 <see cref="T:System.CodeDom.CodeExpression" />。</span><span class="sxs-lookup"><span data-stu-id="8e488-119">The <see cref="T:System.CodeDom.CodeExpression" /> to evaluate.</span></span></param>
        <summary><span data-ttu-id="8e488-120">计算表达式和所有子表达式。</span><span class="sxs-lookup"><span data-stu-id="8e488-120">Evaluates the expression and all child expressions.</span></span></summary>
        <returns><span data-ttu-id="8e488-121">指示表达式计算结果的 <see cref="T:System.Workflow.Activities.Rules.RuleExpressionResult" />。</span><span class="sxs-lookup"><span data-stu-id="8e488-121">The <see cref="T:System.Workflow.Activities.Rules.RuleExpressionResult" /> that indicates the result of the expression evaluation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8e488-122"><paramref name="execution" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="8e488-122"><paramref name="execution" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public static bool Match (System.CodeDom.CodeExpression firstExpression, System.CodeDom.CodeExpression secondExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Match(class System.CodeDom.CodeExpression firstExpression, class System.CodeDom.CodeExpression secondExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Match (firstExpression As CodeExpression, secondExpression As CodeExpression) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Match(System::CodeDom::CodeExpression ^ firstExpression, System::CodeDom::CodeExpression ^ secondExpression);" />
      <MemberSignature Language="F#" Value="static member Match : System.CodeDom.CodeExpression * System.CodeDom.CodeExpression -&gt; bool" Usage="System.Workflow.Activities.Rules.RuleExpressionWalker.Match (firstExpression, secondExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:ValidateArgumentsOfPublicMethods")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1062:ValidateArgumentsOfPublicMethods")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstExpression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="secondExpression" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="firstExpression"><span data-ttu-id="8e488-123">进行比较的第一个 <see cref="T:System.CodeDom.CodeExpression" />。</span><span class="sxs-lookup"><span data-stu-id="8e488-123">The first <see cref="T:System.CodeDom.CodeExpression" /> in the comparison.</span></span></param>
        <param name="secondExpression"><span data-ttu-id="8e488-124">进行比较的第二个 <see cref="T:System.CodeDom.CodeExpression" />。</span><span class="sxs-lookup"><span data-stu-id="8e488-124">The second <see cref="T:System.CodeDom.CodeExpression" /> in the comparison.</span></span></param>
        <summary><span data-ttu-id="8e488-125">将当前表达式和子节点与另一个表达式相比较，以确定它们是否相等。</span><span class="sxs-lookup"><span data-stu-id="8e488-125">Compares the current expression and child nodes to another expression to determine whether they are equal.</span></span></summary>
        <returns><span data-ttu-id="8e488-126">如果表达式相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8e488-126"><see langword="true" /> if the expressions are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public static System.Workflow.Activities.Rules.RuleExpressionInfo Validate (System.Workflow.Activities.Rules.RuleValidation validation, System.CodeDom.CodeExpression expression, bool isWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Workflow.Activities.Rules.RuleExpressionInfo Validate(class System.Workflow.Activities.Rules.RuleValidation validation, class System.CodeDom.CodeExpression expression, bool isWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Validate (validation As RuleValidation, expression As CodeExpression, isWritten As Boolean) As RuleExpressionInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Workflow::Activities::Rules::RuleExpressionInfo ^ Validate(System::Workflow::Activities::Rules::RuleValidation ^ validation, System::CodeDom::CodeExpression ^ expression, bool isWritten);" />
      <MemberSignature Language="F#" Value="static member Validate : System.Workflow.Activities.Rules.RuleValidation * System.CodeDom.CodeExpression * bool -&gt; System.Workflow.Activities.Rules.RuleExpressionInfo" Usage="System.Workflow.Activities.Rules.RuleExpressionWalker.Validate (validation, expression, isWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.Rules.RuleExpressionInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validation" Type="System.Workflow.Activities.Rules.RuleValidation" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="isWritten" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validation"><span data-ttu-id="8e488-127">要管理验证过程的 <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />。</span><span class="sxs-lookup"><span data-stu-id="8e488-127">The <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> to manage the validation process.</span></span></param>
        <param name="expression"><span data-ttu-id="8e488-128">要计算的 <see cref="T:System.CodeDom.CodeExpression" />。</span><span class="sxs-lookup"><span data-stu-id="8e488-128">The <see cref="T:System.CodeDom.CodeExpression" /> to evaluate.</span></span></param>
        <param name="isWritten"><span data-ttu-id="8e488-129">如果由 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 写入的字段和属性存储在 <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /> 中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8e488-129"><see langword="true" /> if fields and properties written by a <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> are stored in by <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8e488-130">验证表达式和子节点是否配置正确且没有错误。</span><span class="sxs-lookup"><span data-stu-id="8e488-130">Verifies that the expression and child nodes are configured correctly and has no errors.</span></span></summary>
        <returns><span data-ttu-id="8e488-131"><see cref="T:System.Workflow.Activities.Rules.RuleExpressionInfo" /> 的 <see cref="T:System.CodeDom.CodeExpression" />。</span><span class="sxs-lookup"><span data-stu-id="8e488-131">The <see cref="T:System.Workflow.Activities.Rules.RuleExpressionInfo" /> for the <see cref="T:System.CodeDom.CodeExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8e488-132"><paramref name="validation" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="8e488-132"><paramref name="validation" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e488-133"><paramref name="expression" /> 为空且 <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> 对象上的错误集合为空引用 (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="8e488-133">The <paramref name="expression" /> is null and the errors collection on the <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> object is a null reference (<see langword="Nothing" />).</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
