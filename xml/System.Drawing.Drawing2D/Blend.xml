<Type Name="Blend" FullName="System.Drawing.Drawing2D.Blend">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ecb989128ea11ef3c4b350e3e8685bf3c2b1f93c" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89673957" /></Metadata><TypeSignature Language="C#" Value="public sealed class Blend" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Blend extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.Blend" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Blend" />
  <TypeSignature Language="C++ CLI" Value="public ref class Blend sealed" />
  <TypeSignature Language="F#" Value="type Blend = class" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>定义 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 对象的混合图案。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 渐变通常用于平滑形状内部。 混合模式由两个数组定义 (<xref:System.Drawing.Drawing2D.Blend.Factors%2A> 和 <xref:System.Drawing.Drawing2D.Blend.Positions%2A>) ，每个数组包含相同数量的元素。 数组的每个元素都 <xref:System.Drawing.Drawing2D.Blend.Positions%2A> 表示沿渐变线的距离的比例。 数组中的每个元素都 <xref:System.Drawing.Drawing2D.Blend.Factors%2A> 表示渐变 blend 中沿数组中相应元素表示的位置上的起始和结束颜色的比例 <xref:System.Drawing.Drawing2D.Blend.Positions%2A> 。  
  
 例如，如果和数组的对应元素 <xref:System.Drawing.Drawing2D.Blend.Positions%2A> <xref:System.Drawing.Drawing2D.Blend.Factors%2A> 分别为0.2 和0.3，则在100像素线上，对于从蓝到红色的线性渐变，该行的颜色为20个像素 (20% 的距离) 包含30% 的蓝色和70% 的红色。  
  
   
  
## Examples  
 下面的示例用于在 Windows 窗体环境中使用。 它演示了如何将 <xref:System.Drawing.Drawing2D.Blend> 类与类结合使用 <xref:System.Drawing.Drawing2D.LinearGradientBrush> 来将椭圆绘制到其颜色混合的屏幕上。 椭圆在左侧为蓝色，在中心处混合为红色，并在右侧混合回蓝色。 这是通过和属性中使用的 `myFactors` 和数组中的设置来实现的 `myPositions` <xref:System.Drawing.Drawing2D.Blend.Factors%2A> <xref:System.Drawing.Drawing2D.Blend.Positions%2A> 。 请注意， <xref:System.Drawing.Drawing2D.Blend> <xref:System.Drawing.Drawing2D.LinearGradientBrush> 名为的对象的属性 `lgBrush2` 必须等于 <xref:System.Drawing.Drawing2D.Blend> 对象 `myBlend` 。  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Drawing.Drawing2D.Blend" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Blend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Blend.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Blend();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Drawing.Drawing2D.Blend" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例用于在 Windows 窗体环境中使用。 它演示了如何将 <xref:System.Drawing.Drawing2D.Blend> 类与类结合使用 <xref:System.Drawing.Drawing2D.LinearGradientBrush> 来将椭圆绘制到其颜色混合的屏幕上。 椭圆在左侧为蓝色，在中心处混合为红色，并在右侧混合回蓝色。 这是通过和属性中使用的 `myFactors` 和数组中的设置来实现的 `myPositions` <xref:System.Drawing.Drawing2D.Blend.Factors%2A> <xref:System.Drawing.Drawing2D.Blend.Positions%2A> 。 请注意， <xref:System.Drawing.Drawing2D.Blend> <xref:System.Drawing.Drawing2D.LinearGradientBrush> 名为的对象的属性 `lgBrush2` 必须等于 <xref:System.Drawing.Drawing2D.Blend> 对象 `myBlend` 。  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Blend (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Blend.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Blend(int count);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Blend : int -&gt; System.Drawing.Drawing2D.Blend" Usage="new System.Drawing.Drawing2D.Blend count" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><see cref="P:System.Drawing.Drawing2D.Blend.Factors" /> 数组和 <see cref="P:System.Drawing.Drawing2D.Blend.Positions" /> 数组中的元素数。</param>
        <summary>用指定的因子和位置的数目初始化 <see cref="T:System.Drawing.Drawing2D.Blend" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 有关示例，请参见 <xref:System.Drawing.Drawing2D.Blend.%23ctor%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Factors">
      <MemberSignature Language="C#" Value="public float[] Factors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] Factors" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Blend.Factors" />
      <MemberSignature Language="VB.NET" Value="Public Property Factors As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ Factors { cli::array &lt;float&gt; ^ get(); void set(cli::array &lt;float&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Factors : single[] with get, set" Usage="System.Drawing.Drawing2D.Blend.Factors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于渐变的混合因子数组。</summary>
        <value>混合因子数组，这些因子指定在相应位置处使用的起始色和结束色的百分比。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常，此数组的元素是介于 0.0 f 到 1.0 f 之间的值。 这些元素指定结束颜色的百分比，以及要在相应 blend 位置使用的起始颜色。 例如，如果值为0.2，则指示在指定位置，混合颜色由开始渐变颜色的20% 和起始渐变颜色的80% 组成。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Drawing.Drawing2D.Blend> 通过设置和属性来使用类 <xref:System.Drawing.Drawing2D.Blend.Factors%2A> <xref:System.Drawing.Drawing2D.Blend.Positions%2A> 。 此示例旨在与 Windows 窗体一起使用。 将代码粘贴到导入命名空间的窗体中 <xref:System.Drawing.Drawing2D> 。 处理窗体的 <xref:System.Windows.Forms.Control.Paint> 事件并调用 `DemonstrateBlend` 方法，并将 `e` 作为传递 <xref:System.Windows.Forms.PaintEventArgs> 。  
  
 [!code-cpp[System.Drawing.Misc2#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Misc2/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Misc2#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc2/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Misc2#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc2/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Positions">
      <MemberSignature Language="C#" Value="public float[] Positions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] Positions" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Blend.Positions" />
      <MemberSignature Language="VB.NET" Value="Public Property Positions As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ Positions { cli::array &lt;float&gt; ^ get(); void set(cli::array &lt;float&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Positions : single[] with get, set" Usage="System.Drawing.Drawing2D.Blend.Positions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置渐变的混合位置的数组。</summary>
        <value>混合位置的数组，这些位置指定沿渐变线距离的百分比。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此数组的元素指定沿渐变线的距离百分比。 例如，如果元素值为 0.2 f，则指定该点是与起点的总距离的20%。 此数组中的元素由 0.0 f 和 1.0 f 之间的浮点值表示。 数组的第一个元素必须为 0.0 f，最后一个元素必须为 1.0 f。  
  
   
  
## Examples  
 下面的代码示例演示如何 <xref:System.Drawing.Drawing2D.Blend> 通过设置和属性来使用类 <xref:System.Drawing.Drawing2D.Blend.Factors%2A> <xref:System.Drawing.Drawing2D.Blend.Positions%2A> 。 此示例旨在与 Windows 窗体一起使用。 将代码粘贴到导入命名空间的窗体中 <xref:System.Drawing.Drawing2D> 。 处理窗体的 <xref:System.Windows.Forms.Control.Paint> 事件并调用 `DemonstrateBlend` 方法，并将 `e` 作为传递 <xref:System.Windows.Forms.PaintEventArgs> 。  
  
 [!code-cpp[System.Drawing.Misc2#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Misc2/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Misc2#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc2/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Misc2#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc2/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
