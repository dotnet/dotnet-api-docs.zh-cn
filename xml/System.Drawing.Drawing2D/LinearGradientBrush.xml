<Type Name="LinearGradientBrush" FullName="System.Drawing.Drawing2D.LinearGradientBrush">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5d1b9c20cbc2161f480bdb558500ec083e20357a" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86830807" /></Metadata><TypeSignature Language="C#" Value="public sealed class LinearGradientBrush : System.Drawing.Brush" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LinearGradientBrush extends System.Drawing.Brush" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.LinearGradientBrush" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LinearGradientBrush&#xA;Inherits Brush" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinearGradientBrush sealed : System::Drawing::Brush" />
  <TypeSignature Language="F#" Value="type LinearGradientBrush = class&#xA;    inherit Brush" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Brush</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="97554-101">使用线性渐变封装 <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="97554-101">Encapsulates a <see cref="T:System.Drawing.Brush" /> with a linear gradient.</span></span> <span data-ttu-id="97554-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="97554-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97554-103">此类封装双色渐变和自定义多色渐变。</span><span class="sxs-lookup"><span data-stu-id="97554-103">This class encapsulates both two-color gradients and custom multicolor gradients.</span></span>  
  
 <span data-ttu-id="97554-104">所有线性渐变按照矩形的宽度或两个点指定的直线定义。</span><span class="sxs-lookup"><span data-stu-id="97554-104">All linear gradients are defined along a line specified either by the width of a rectangle or by two points.</span></span>  
  
 <span data-ttu-id="97554-105">默认情况下，双色线性渐变是沿指定直线从起始色到结束颜色的水平线性混合。</span><span class="sxs-lookup"><span data-stu-id="97554-105">By default, a two-color linear gradient is an even horizontal linear blend from the starting color to the ending color along the specified line.</span></span> <span data-ttu-id="97554-106">使用 <xref:System.Drawing.Drawing2D.Blend> 类、 <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A> 方法或方法自定义混合模式 <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A> 。</span><span class="sxs-lookup"><span data-stu-id="97554-106">Customize the blend pattern using the <xref:System.Drawing.Drawing2D.Blend> class, the <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A> methods, or the <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A> methods.</span></span> <span data-ttu-id="97554-107">通过 <xref:System.Drawing.Drawing2D.LinearGradientMode> 在构造函数中指定枚举或角度，自定义渐变的方向。</span><span class="sxs-lookup"><span data-stu-id="97554-107">Customize the direction of the gradient by specifying the <xref:System.Drawing.Drawing2D.LinearGradientMode> enumeration or the angle in the constructor.</span></span>  
  
 <span data-ttu-id="97554-108">使用 <xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A> 属性创建多色渐变。</span><span class="sxs-lookup"><span data-stu-id="97554-108">Use the <xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A> property to create a multicolor gradient.</span></span>  
  
 <span data-ttu-id="97554-109"><xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A>属性指定应用到渐变的局部几何转换。</span><span class="sxs-lookup"><span data-stu-id="97554-109">The <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> property specifies a local geometric transform applied to the gradient.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97554-110">下面的示例创建一个水平 <xref:System.Drawing.Drawing2D.LinearGradientBrush> ; 当您从0的水平坐标移动到水平坐标为200时，颜色组件会线性变化。</span><span class="sxs-lookup"><span data-stu-id="97554-110">The following example creates a horizontal <xref:System.Drawing.Drawing2D.LinearGradientBrush>; the color components change linearly as you move from a horizontal coordinate of 0 to a horizontal coordinate of 200.</span></span> <span data-ttu-id="97554-111">例如，第一个坐标为介于0到200之间的点，其蓝色分量为介于0到255之间。</span><span class="sxs-lookup"><span data-stu-id="97554-111">For example, a point whose first coordinate is halfway between 0 and 200 will have a blue component that is halfway between 0 and 255.</span></span> <span data-ttu-id="97554-112">此示例旨在与 Windows 窗体一起使用。</span><span class="sxs-lookup"><span data-stu-id="97554-112">This example is designed for use with Windows Forms.</span></span> <span data-ttu-id="97554-113">下面的代码示例旨在与 Windows 窗体一起使用，并且它需要 <xref:System.Windows.Forms.PaintEventArgs> `e` （是的参数） <xref:System.Windows.Forms.PaintEventHandler> 。</span><span class="sxs-lookup"><span data-stu-id="97554-113">The following code example is designed for use with Windows Forms, and it requires the <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of <xref:System.Windows.Forms.PaintEventHandler>.</span></span>  
  
 [!code-csharp[System.Drawing.UsingaGradientBrush#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.UsingaGradientBrush/CS/Class1.cs#21)]
 [!code-vb[System.Drawing.UsingaGradientBrush#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.UsingaGradientBrush/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/framework/winforms/advanced/how-to-create-a-linear-gradient"><span data-ttu-id="97554-114">如何：创建线性渐变</span><span class="sxs-lookup"><span data-stu-id="97554-114">How To: Create a Linear Gradient</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97554-115">使用指定的点和颜色初始化 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="97554-115">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points and colors.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.Point point1, System.Drawing.Point point2, System.Drawing.Color color1, System.Drawing.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point point1, valuetype System.Drawing.Point point2, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As Point, point2 As Point, color1 As Color, color2 As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::Point point1, System::Drawing::Point point2, System::Drawing::Color color1, System::Drawing::Color color2);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.Point * System.Drawing.Point * System.Drawing.Color * System.Drawing.Color -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (point1, point2, color1, color2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Drawing.Point" />
        <Parameter Name="point2" Type="System.Drawing.Point" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="97554-116">表示线性渐变起点的 <see cref="T:System.Drawing.Point" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-116">A <see cref="T:System.Drawing.Point" /> structure that represents the starting point of the linear gradient.</span></span></param>
        <param name="point2"><span data-ttu-id="97554-117">表示线性渐变终点的 <see cref="T:System.Drawing.Point" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-117">A <see cref="T:System.Drawing.Point" /> structure that represents the endpoint of the linear gradient.</span></span></param>
        <param name="color1"><span data-ttu-id="97554-118">表示线性渐变起始色的 <see cref="T:System.Drawing.Color" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-118">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color of the linear gradient.</span></span></param>
        <param name="color2"><span data-ttu-id="97554-119">表示线性渐变结束色的 <see cref="T:System.Drawing.Color" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-119">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color of the linear gradient.</span></span></param>
        <summary><span data-ttu-id="97554-120">使用指定的点和颜色初始化 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="97554-120">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points and colors.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.PointF point1, System.Drawing.PointF point2, System.Drawing.Color color1, System.Drawing.Color color2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF point1, valuetype System.Drawing.PointF point2, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As PointF, point2 As PointF, color1 As Color, color2 As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::PointF point1, System::Drawing::PointF point2, System::Drawing::Color color1, System::Drawing::Color color2);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.PointF * System.Drawing.PointF * System.Drawing.Color * System.Drawing.Color -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (point1, point2, color1, color2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Drawing.PointF" />
        <Parameter Name="point2" Type="System.Drawing.PointF" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="97554-121">表示线性渐变起点的 <see cref="T:System.Drawing.PointF" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-121">A <see cref="T:System.Drawing.PointF" /> structure that represents the starting point of the linear gradient.</span></span></param>
        <param name="point2"><span data-ttu-id="97554-122">表示线性渐变终点的 <see cref="T:System.Drawing.PointF" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-122">A <see cref="T:System.Drawing.PointF" /> structure that represents the endpoint of the linear gradient.</span></span></param>
        <param name="color1"><span data-ttu-id="97554-123">表示线性渐变起始色的 <see cref="T:System.Drawing.Color" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-123">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color of the linear gradient.</span></span></param>
        <param name="color2"><span data-ttu-id="97554-124">表示线性渐变结束色的 <see cref="T:System.Drawing.Color" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-124">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color of the linear gradient.</span></span></param>
        <summary><span data-ttu-id="97554-125">使用指定的点和颜色初始化 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="97554-125">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points and colors.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, System.Drawing.Drawing2D.LinearGradientMode linearGradientMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, valuetype System.Drawing.Drawing2D.LinearGradientMode linearGradientMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As Rectangle, color1 As Color, color2 As Color, linearGradientMode As LinearGradientMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::Rectangle rect, System::Drawing::Color color1, System::Drawing::Color color2, System::Drawing::Drawing2D::LinearGradientMode linearGradientMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color * System.Drawing.Drawing2D.LinearGradientMode -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, linearGradientMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="linearGradientMode" Type="System.Drawing.Drawing2D.LinearGradientMode" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="97554-126">指定线性渐变边界的 <see cref="T:System.Drawing.Rectangle" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-126">A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the bounds of the linear gradient.</span></span></param>
        <param name="color1"><span data-ttu-id="97554-127">表示渐变起始色的 <see cref="T:System.Drawing.Color" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-127">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span></span></param>
        <param name="color2"><span data-ttu-id="97554-128">表示渐变结束色的 <see cref="T:System.Drawing.Color" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-128">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span></span></param>
        <param name="linearGradientMode"><span data-ttu-id="97554-129">指定渐变方向的 <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> 枚举元素。</span><span class="sxs-lookup"><span data-stu-id="97554-129">A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> enumeration element that specifies the orientation of the gradient.</span></span> <span data-ttu-id="97554-130">渐变方向决定渐变的起点和终点。</span><span class="sxs-lookup"><span data-stu-id="97554-130">The orientation determines the starting and ending points of the gradient.</span></span> <span data-ttu-id="97554-131">例如，<see langword="LinearGradientMode.ForwardDiagonal" /> 指定起点是矩形的左上角，而终点是矩形的右下角。</span><span class="sxs-lookup"><span data-stu-id="97554-131">For example, <see langword="LinearGradientMode.ForwardDiagonal" /> specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle.</span></span></param>
        <summary><span data-ttu-id="97554-132">根据一个矩形、起始颜色和结束颜色以及方向，创建 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="97554-132">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and orientation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As Rectangle, color1 As Color, color2 As Color, angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::Rectangle rect, System::Drawing::Color color1, System::Drawing::Color color2, float angle);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color * single -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, angle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="97554-133">指定线性渐变边界的 <see cref="T:System.Drawing.Rectangle" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-133">A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the bounds of the linear gradient.</span></span></param>
        <param name="color1"><span data-ttu-id="97554-134">表示渐变起始色的 <see cref="T:System.Drawing.Color" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-134">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span></span></param>
        <param name="color2"><span data-ttu-id="97554-135">表示渐变结束色的 <see cref="T:System.Drawing.Color" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-135">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span></span></param>
        <param name="angle"><span data-ttu-id="97554-136">渐变方向线的角度（以 X 轴的顺时针角度计算）。</span><span class="sxs-lookup"><span data-stu-id="97554-136">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</span></span></param>
        <summary><span data-ttu-id="97554-137">根据一个矩形、起始颜色和结束颜色以及方向角度，创建 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="97554-137">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97554-138">沿方向线垂直的任何直线上的所有点都是相同的颜色。</span><span class="sxs-lookup"><span data-stu-id="97554-138">All points along any line perpendicular to the orientation line are the same color.</span></span>  
  
 <span data-ttu-id="97554-139">起始线垂直于方向线，并经过矩形的一个角。</span><span class="sxs-lookup"><span data-stu-id="97554-139">The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="97554-140">起始行中的所有点都是开始颜色。</span><span class="sxs-lookup"><span data-stu-id="97554-140">All points on the starting line are the starting color.</span></span> <span data-ttu-id="97554-141">然后，结束行与方向线垂直，并经过矩形的一个角。</span><span class="sxs-lookup"><span data-stu-id="97554-141">Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="97554-142">结束行的所有点都是结束颜色。</span><span class="sxs-lookup"><span data-stu-id="97554-142">All points on the ending line are the ending color.</span></span>  
  
 <span data-ttu-id="97554-143">方向线的角度决定了起始和结束直线经过的角。</span><span class="sxs-lookup"><span data-stu-id="97554-143">The angle of the orientation line determines which corners the starting and ending lines pass through.</span></span> <span data-ttu-id="97554-144">例如，如果角度介于0到90度之间，则起始线会经过左上角，而结束行将穿过右下角。</span><span class="sxs-lookup"><span data-stu-id="97554-144">For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, System.Drawing.Drawing2D.LinearGradientMode linearGradientMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, valuetype System.Drawing.Drawing2D.LinearGradientMode linearGradientMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As RectangleF, color1 As Color, color2 As Color, linearGradientMode As LinearGradientMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::RectangleF rect, System::Drawing::Color color1, System::Drawing::Color color2, System::Drawing::Drawing2D::LinearGradientMode linearGradientMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.RectangleF * System.Drawing.Color * System.Drawing.Color * System.Drawing.Drawing2D.LinearGradientMode -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, linearGradientMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="linearGradientMode" Type="System.Drawing.Drawing2D.LinearGradientMode" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="97554-145">指定线性渐变边界的 <see cref="T:System.Drawing.RectangleF" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-145">A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the bounds of the linear gradient.</span></span></param>
        <param name="color1"><span data-ttu-id="97554-146">表示渐变起始色的 <see cref="T:System.Drawing.Color" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-146">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span></span></param>
        <param name="color2"><span data-ttu-id="97554-147">表示渐变结束色的 <see cref="T:System.Drawing.Color" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-147">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span></span></param>
        <param name="linearGradientMode"><span data-ttu-id="97554-148">指定渐变方向的 <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> 枚举元素。</span><span class="sxs-lookup"><span data-stu-id="97554-148">A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> enumeration element that specifies the orientation of the gradient.</span></span> <span data-ttu-id="97554-149">渐变方向决定渐变的起点和终点。</span><span class="sxs-lookup"><span data-stu-id="97554-149">The orientation determines the starting and ending points of the gradient.</span></span> <span data-ttu-id="97554-150">例如，<see langword="LinearGradientMode.ForwardDiagonal" /> 指定起点是矩形的左上角，而终点是矩形的右下角。</span><span class="sxs-lookup"><span data-stu-id="97554-150">For example, <see langword="LinearGradientMode.ForwardDiagonal" /> specifies that the starting point is the upper-left corner of the rectangle and the ending point is the lower-right corner of the rectangle.</span></span></param>
        <summary><span data-ttu-id="97554-151">根据一个矩形、起始颜色和结束颜色以及方向模式，创建 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="97554-151">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> based on a rectangle, starting and ending colors, and an orientation mode.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As RectangleF, color1 As Color, color2 As Color, angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::RectangleF rect, System::Drawing::Color color1, System::Drawing::Color color2, float angle);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.RectangleF * System.Drawing.Color * System.Drawing.Color * single -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, angle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="97554-152">指定线性渐变边界的 <see cref="T:System.Drawing.RectangleF" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-152">A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the bounds of the linear gradient.</span></span></param>
        <param name="color1"><span data-ttu-id="97554-153">表示渐变起始色的 <see cref="T:System.Drawing.Color" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-153">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span></span></param>
        <param name="color2"><span data-ttu-id="97554-154">表示渐变结束色的 <see cref="T:System.Drawing.Color" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-154">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span></span></param>
        <param name="angle"><span data-ttu-id="97554-155">渐变方向线的角度（以 X 轴的顺时针角度计算）。</span><span class="sxs-lookup"><span data-stu-id="97554-155">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</span></span></param>
        <summary><span data-ttu-id="97554-156">根据一个矩形、起始颜色和结束颜色以及方向角度，创建 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="97554-156">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97554-157">沿方向线垂直的任何直线上的所有点都是相同的颜色。</span><span class="sxs-lookup"><span data-stu-id="97554-157">All points along any line perpendicular to the orientation line are the same color.</span></span>  
  
 <span data-ttu-id="97554-158">起始线垂直于方向线，并经过矩形的一个角。</span><span class="sxs-lookup"><span data-stu-id="97554-158">The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="97554-159">起始行中的所有点都是开始颜色。</span><span class="sxs-lookup"><span data-stu-id="97554-159">All points on the starting line are the starting color.</span></span> <span data-ttu-id="97554-160">然后，结束行与方向线垂直，并经过矩形的一个角。</span><span class="sxs-lookup"><span data-stu-id="97554-160">Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="97554-161">结束行的所有点都是结束颜色。</span><span class="sxs-lookup"><span data-stu-id="97554-161">All points on the ending line are the ending color.</span></span>  
  
 <span data-ttu-id="97554-162">方向线的角度决定了起始和结束直线经过的角。</span><span class="sxs-lookup"><span data-stu-id="97554-162">The angle of the orientation line determines which corners the starting and ending lines pass through.</span></span> <span data-ttu-id="97554-163">例如，如果角度介于0到90度之间，则起始线会经过左上角，而结束行将穿过右下角。</span><span class="sxs-lookup"><span data-stu-id="97554-163">For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle, bool isAngleScaleable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, float32 angle, bool isAngleScaleable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As Rectangle, color1 As Color, color2 As Color, angle As Single, isAngleScaleable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::Rectangle rect, System::Drawing::Color color1, System::Drawing::Color color2, float angle, bool isAngleScaleable);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.Rectangle * System.Drawing.Color * System.Drawing.Color * single * bool -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, angle, isAngleScaleable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="isAngleScaleable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="97554-164">指定线性渐变边界的 <see cref="T:System.Drawing.Rectangle" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-164">A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the bounds of the linear gradient.</span></span></param>
        <param name="color1"><span data-ttu-id="97554-165">表示渐变起始色的 <see cref="T:System.Drawing.Color" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-165">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span></span></param>
        <param name="color2"><span data-ttu-id="97554-166">表示渐变结束色的 <see cref="T:System.Drawing.Color" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-166">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span></span></param>
        <param name="angle"><span data-ttu-id="97554-167">渐变方向线的角度（以 X 轴的顺时针角度计算）。</span><span class="sxs-lookup"><span data-stu-id="97554-167">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</span></span></param>
        <param name="isAngleScaleable"><span data-ttu-id="97554-168">设置为 <see langword="true" />，指定角度受与此 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 关联的转换所影响；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="97554-168">Set to <see langword="true" /> to specify that the angle is affected by the transform associated with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="97554-169">根据一个矩形、起始颜色和结束颜色以及方向角度，创建 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="97554-169">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97554-170">沿方向线垂直的任何直线上的所有点都是相同的颜色。</span><span class="sxs-lookup"><span data-stu-id="97554-170">All points along any line perpendicular to the orientation line are the same color.</span></span>  
  
 <span data-ttu-id="97554-171">起始线垂直于方向线，并经过矩形的一个角。</span><span class="sxs-lookup"><span data-stu-id="97554-171">The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="97554-172">起始行中的所有点都是开始颜色。</span><span class="sxs-lookup"><span data-stu-id="97554-172">All points on the starting line are the starting color.</span></span> <span data-ttu-id="97554-173">然后，结束行与方向线垂直，并经过矩形的一个角。</span><span class="sxs-lookup"><span data-stu-id="97554-173">Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="97554-174">结束行的所有点都是结束颜色。</span><span class="sxs-lookup"><span data-stu-id="97554-174">All points on the ending line are the ending color.</span></span>  
  
 <span data-ttu-id="97554-175">方向线的角度决定了起始和结束直线经过的角。</span><span class="sxs-lookup"><span data-stu-id="97554-175">The angle of the orientation line determines which corners the starting and ending lines pass through.</span></span> <span data-ttu-id="97554-176">例如，如果角度介于0到90度之间，则起始线会经过左上角，而结束行将穿过右下角。</span><span class="sxs-lookup"><span data-stu-id="97554-176">For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle, bool isAngleScaleable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Color color1, valuetype System.Drawing.Color color2, float32 angle, bool isAngleScaleable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As RectangleF, color1 As Color, color2 As Color, angle As Single, isAngleScaleable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinearGradientBrush(System::Drawing::RectangleF rect, System::Drawing::Color color1, System::Drawing::Color color2, float angle, bool isAngleScaleable);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.LinearGradientBrush : System.Drawing.RectangleF * System.Drawing.Color * System.Drawing.Color * single * bool -&gt; System.Drawing.Drawing2D.LinearGradientBrush" Usage="new System.Drawing.Drawing2D.LinearGradientBrush (rect, color1, color2, angle, isAngleScaleable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="color1" Type="System.Drawing.Color" />
        <Parameter Name="color2" Type="System.Drawing.Color" />
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="isAngleScaleable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="97554-177">指定线性渐变边界的 <see cref="T:System.Drawing.RectangleF" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-177">A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the bounds of the linear gradient.</span></span></param>
        <param name="color1"><span data-ttu-id="97554-178">表示渐变起始色的 <see cref="T:System.Drawing.Color" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-178">A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.</span></span></param>
        <param name="color2"><span data-ttu-id="97554-179">表示渐变结束色的 <see cref="T:System.Drawing.Color" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-179">A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.</span></span></param>
        <param name="angle"><span data-ttu-id="97554-180">渐变方向线的角度（以 X 轴的顺时针角度计算）。</span><span class="sxs-lookup"><span data-stu-id="97554-180">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</span></span></param>
        <param name="isAngleScaleable"><span data-ttu-id="97554-181">设置为 <see langword="true" />，指定角度受与此 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 关联的转换所影响；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="97554-181">Set to <see langword="true" /> to specify that the angle is affected by the transform associated with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="97554-182">根据一个矩形、起始颜色和结束颜色以及方向角度，创建 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="97554-182">Creates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97554-183">沿方向线垂直的任何直线上的所有点都是相同的颜色。</span><span class="sxs-lookup"><span data-stu-id="97554-183">All points along any line perpendicular to the orientation line are the same color.</span></span>  
  
 <span data-ttu-id="97554-184">起始线垂直于方向线，并经过矩形的一个角。</span><span class="sxs-lookup"><span data-stu-id="97554-184">The starting line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="97554-185">起始行中的所有点都是开始颜色。</span><span class="sxs-lookup"><span data-stu-id="97554-185">All points on the starting line are the starting color.</span></span> <span data-ttu-id="97554-186">然后，结束行与方向线垂直，并经过矩形的一个角。</span><span class="sxs-lookup"><span data-stu-id="97554-186">Then ending line is perpendicular to the orientation line and passes through one of the corners of the rectangle.</span></span> <span data-ttu-id="97554-187">结束行的所有点都是结束颜色。</span><span class="sxs-lookup"><span data-stu-id="97554-187">All points on the ending line are the ending color.</span></span>  
  
 <span data-ttu-id="97554-188">方向线的角度决定了起始和结束直线经过的角。</span><span class="sxs-lookup"><span data-stu-id="97554-188">The angle of the orientation line determines which corners the starting and ending lines pass through.</span></span> <span data-ttu-id="97554-189">例如，如果角度介于0到90度之间，则起始线会经过左上角，而结束行将穿过右下角。</span><span class="sxs-lookup"><span data-stu-id="97554-189">For example, if the angle is between 0 and 90 degrees, the starting line passes through the upper-left corner, and the ending line passes through the lower-right corner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Blend">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Blend Blend { get; set; }" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Blend Blend" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.Blend" />
      <MemberSignature Language="VB.NET" Value="Public Property Blend As Blend" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Blend ^ Blend { System::Drawing::Drawing2D::Blend ^ get(); void set(System::Drawing::Drawing2D::Blend ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Blend : System.Drawing.Drawing2D.Blend with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.Blend" />
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Blend? Blend { get; set; }" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Blend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="97554-190">获取或设置一个 <see cref="T:System.Drawing.Drawing2D.Blend" />，它指定定义渐变自定义过渡的位置和因素。</span><span class="sxs-lookup"><span data-stu-id="97554-190">Gets or sets a <see cref="T:System.Drawing.Drawing2D.Blend" /> that specifies positions and factors that define a custom falloff for the gradient.</span></span></summary>
        <value><span data-ttu-id="97554-191">一个 <see cref="T:System.Drawing.Drawing2D.Blend" />，表示渐变的自定义过渡。</span><span class="sxs-lookup"><span data-stu-id="97554-191">A <see cref="T:System.Drawing.Drawing2D.Blend" /> that represents a custom falloff for the gradient.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97554-192"><xref:System.Drawing.Drawing2D.Blend>包含混合系数和位置的相应数组。</span><span class="sxs-lookup"><span data-stu-id="97554-192">A <xref:System.Drawing.Drawing2D.Blend> contains corresponding arrays of blend factors and positions.</span></span> <span data-ttu-id="97554-193">混合系数指定要在相应位置处使用的起始颜色和结束颜色的百分比。</span><span class="sxs-lookup"><span data-stu-id="97554-193">The blend factors specify the percentages of the starting color and ending color to use at the corresponding position.</span></span> <span data-ttu-id="97554-194">位置的指定百分比为沿渐变线的距离。</span><span class="sxs-lookup"><span data-stu-id="97554-194">The positions are given as a percentage of distance along the gradient line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="linearGradientBrush.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97554-195">创建此 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 的一个精确副本。</span><span class="sxs-lookup"><span data-stu-id="97554-195">Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span></span></summary>
        <returns><span data-ttu-id="97554-196">该方法创建的、强制转换为对象的 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />。</span><span class="sxs-lookup"><span data-stu-id="97554-196">The <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> this method creates, cast as an object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="97554-197">下面的代码示例旨在与 Windows 窗体一起使用，并且它需要 <xref:System.Windows.Forms.PaintEventArgs> `e` 一个 <xref:System.Windows.Forms.Form.OnPaint%2A> 事件对象。</span><span class="sxs-lookup"><span data-stu-id="97554-197">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="97554-198">此代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="97554-198">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="97554-199">创建一个新的 <xref:System.Drawing.Drawing2D.LinearGradientBrush>。</span><span class="sxs-lookup"><span data-stu-id="97554-199">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="97554-200">使用此画笔在屏幕上绘制一个椭圆。</span><span class="sxs-lookup"><span data-stu-id="97554-200">Draws an ellipse to the screen using this brush.</span></span>  
  
-   <span data-ttu-id="97554-201">克隆 <xref:System.Drawing.Drawing2D.LinearGradientBrush> (`clonedLGBrush`) 。</span><span class="sxs-lookup"><span data-stu-id="97554-201">Clones the <xref:System.Drawing.Drawing2D.LinearGradientBrush> (`clonedLGBrush`).</span></span>  
  
-   <span data-ttu-id="97554-202">使用克隆的画笔在第一个椭圆下直接向屏幕绘制一个椭圆。</span><span class="sxs-lookup"><span data-stu-id="97554-202">Draws an ellipse to the screen directly below the first ellipse, using the cloned brush.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaCorrection">
      <MemberSignature Language="C#" Value="public bool GammaCorrection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GammaCorrection" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection" />
      <MemberSignature Language="VB.NET" Value="Public Property GammaCorrection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GammaCorrection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GammaCorrection : bool with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="97554-203">获取或设置一个值，该值指示是否为该 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 启用灰度校正。</span><span class="sxs-lookup"><span data-stu-id="97554-203">Gets or sets a value indicating whether gamma correction is enabled for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span></span></summary>
        <value><span data-ttu-id="97554-204">如果为该 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 启用灰度校正，该值为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="97554-204">The value is <see langword="true" /> if gamma correction is enabled for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterpolationColors">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.ColorBlend InterpolationColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.ColorBlend InterpolationColors" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors" />
      <MemberSignature Language="VB.NET" Value="Public Property InterpolationColors As ColorBlend" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::ColorBlend ^ InterpolationColors { System::Drawing::Drawing2D::ColorBlend ^ get(); void set(System::Drawing::Drawing2D::ColorBlend ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InterpolationColors : System.Drawing.Drawing2D.ColorBlend with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.ColorBlend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="97554-205">获取或设置一个定义多色线性渐变的 <see cref="T:System.Drawing.Drawing2D.ColorBlend" />。</span><span class="sxs-lookup"><span data-stu-id="97554-205">Gets or sets a <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> that defines a multicolor linear gradient.</span></span></summary>
        <value><span data-ttu-id="97554-206">一个 <see cref="T:System.Drawing.Drawing2D.ColorBlend" />，定义多色线性渐变。</span><span class="sxs-lookup"><span data-stu-id="97554-206">A <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> that defines a multicolor linear gradient.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97554-207"><xref:System.Drawing.Drawing2D.ColorBlend>包含颜色和位置的相应数组。</span><span class="sxs-lookup"><span data-stu-id="97554-207">A <xref:System.Drawing.Drawing2D.ColorBlend> contains corresponding arrays of colors and positions.</span></span> <span data-ttu-id="97554-208">位置是0到1之间的值，用于指定沿相对颜色所在的渐变线的距离的百分比。</span><span class="sxs-lookup"><span data-stu-id="97554-208">The positions are values from 0 through 1 that specify the percentage of the distance along the gradient line where the corresponding color is located.</span></span>  
  
 <span data-ttu-id="97554-209">设置此属性将在沿渐变线的每个位置上创建一个颜色的多色渐变。</span><span class="sxs-lookup"><span data-stu-id="97554-209">Setting this property creates a multicolor gradient with one color at each position along the gradient line.</span></span> <span data-ttu-id="97554-210">设置此属性将 nullifies 此的所有以前的颜色、位置和过渡设置 <xref:System.Drawing.Drawing2D.LinearGradientBrush> 。</span><span class="sxs-lookup"><span data-stu-id="97554-210">Setting this property nullifies all previous color, position, and falloff settings for this <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinearColors">
      <MemberSignature Language="C#" Value="public System.Drawing.Color[] LinearColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color[] LinearColors" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.LinearColors" />
      <MemberSignature Language="VB.NET" Value="Public Property LinearColors As Color()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::Color&gt; ^ LinearColors { cli::array &lt;System::Drawing::Color&gt; ^ get(); void set(cli::array &lt;System::Drawing::Color&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LinearColors : System.Drawing.Color[] with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.LinearColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="97554-211">获取或设置渐变的起始色和结束色。</span><span class="sxs-lookup"><span data-stu-id="97554-211">Gets or sets the starting and ending colors of the gradient.</span></span></summary>
        <value><span data-ttu-id="97554-212">一个由两个 <see cref="T:System.Drawing.Color" /> 结构组成的数组，表示渐变的起始色和结束色。</span><span class="sxs-lookup"><span data-stu-id="97554-212">An array of two <see cref="T:System.Drawing.Color" /> structures that represents the starting and ending colors of the gradient.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97554-213">通过预先计算指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" />，将表示此 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 的局部几何转换的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 与指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 相乘。</span><span class="sxs-lookup"><span data-stu-id="97554-213">Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the local geometric transform of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MultiplyTransform (matrix As Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="linearGradientBrush.MultiplyTransform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="97554-214">与几何转换相乘的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="97554-214">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to multiply the geometric transform.</span></span></param>
        <summary><span data-ttu-id="97554-215">通过预先计算指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" />，将表示此 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 的局部几何转换的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 与指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 相乘。</span><span class="sxs-lookup"><span data-stu-id="97554-215">Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the local geometric transform of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="97554-216">有关示例，请参见 <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A>。</span><span class="sxs-lookup"><span data-stu-id="97554-216">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MultiplyTransform (matrix As Matrix, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="linearGradientBrush.MultiplyTransform (matrix, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="97554-217">与几何转换相乘的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="97554-217">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to multiply the geometric transform.</span></span></param>
        <param name="order"><span data-ttu-id="97554-218">一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，它指定两个矩阵相乘的顺序。</span><span class="sxs-lookup"><span data-stu-id="97554-218">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies in which order to multiply the two matrices.</span></span></param>
        <summary><span data-ttu-id="97554-219">按指定的顺序，将表示此 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 的局部几何转换的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 与指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 相乘。</span><span class="sxs-lookup"><span data-stu-id="97554-219">Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the local geometric transform of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="97554-220">下面的代码示例旨在与 Windows 窗体一起使用，并且它需要 <xref:System.Windows.Forms.PaintEventArgs> `e` 一个 <xref:System.Windows.Forms.Form.OnPaint%2A> 事件对象。</span><span class="sxs-lookup"><span data-stu-id="97554-220">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="97554-221">此代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="97554-221">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="97554-222">创建一个新的 <xref:System.Drawing.Drawing2D.LinearGradientBrush>。</span><span class="sxs-lookup"><span data-stu-id="97554-222">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="97554-223">使用此画笔在屏幕上绘制一个椭圆。</span><span class="sxs-lookup"><span data-stu-id="97554-223">Draws an ellipse to the screen using this brush.</span></span>  
  
-   <span data-ttu-id="97554-224">调用 <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> 方法来转换 <xref:System.Drawing.Drawing2D.LinearGradientBrush> 。</span><span class="sxs-lookup"><span data-stu-id="97554-224">Calls the <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> method, to transform the <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="97554-225">使用变换后的画笔，在第一个椭圆下直接向屏幕绘制一个椭圆。</span><span class="sxs-lookup"><span data-stu-id="97554-225">Draws an ellipse to the screen directly below the first ellipse, using the transformed brush.</span></span>  
  
 <span data-ttu-id="97554-226">请注意，下半部椭圆沿水平方向拉伸，并拉伸渐变以匹配新形状。</span><span class="sxs-lookup"><span data-stu-id="97554-226">Notice that the lower ellipse is stretched in the horizontal direction, and that the gradient is stretched to match the new shape.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF Rectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF Rectangle" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.Rectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rectangle As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::RectangleF Rectangle { System::Drawing::RectangleF get(); };" />
      <MemberSignature Language="F#" Value="member this.Rectangle : System.Drawing.RectangleF" Usage="System.Drawing.Drawing2D.LinearGradientBrush.Rectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="97554-227">获取定义渐变的起点和终点的矩形区域。</span><span class="sxs-lookup"><span data-stu-id="97554-227">Gets a rectangular region that defines the starting and ending points of the gradient.</span></span></summary>
        <value><span data-ttu-id="97554-228">指定渐变的起始点和终结点的 <see cref="T:System.Drawing.RectangleF" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="97554-228">A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the starting and ending points of the gradient.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97554-229">矩形的左侧指定了线性渐变的起点，而矩形的右边指定了终结点。</span><span class="sxs-lookup"><span data-stu-id="97554-229">The left side of the rectangle specifies the starting point of the linear gradient, and the right side of the rectangle specifies the endpoint.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTransform">
      <MemberSignature Language="C#" Value="public void ResetTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetTransform() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTransform ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTransform();" />
      <MemberSignature Language="F#" Value="member this.ResetTransform : unit -&gt; unit" Usage="linearGradientBrush.ResetTransform " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97554-230">将 <see cref="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform" /> 属性重置为标识。</span><span class="sxs-lookup"><span data-stu-id="97554-230">Resets the <see cref="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform" /> property to identity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="97554-231">下面的代码示例旨在与 Windows 窗体一起使用，并且它需要 <xref:System.Windows.Forms.PaintEventArgs> `e` 一个 <xref:System.Windows.Forms.Form.OnPaint%2A> 事件对象。</span><span class="sxs-lookup"><span data-stu-id="97554-231">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="97554-232">此代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="97554-232">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="97554-233">创建一个新的 <xref:System.Drawing.Drawing2D.LinearGradientBrush>。</span><span class="sxs-lookup"><span data-stu-id="97554-233">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="97554-234">使用此画笔在屏幕上绘制一个椭圆。</span><span class="sxs-lookup"><span data-stu-id="97554-234">Draws an ellipse to the screen using this brush.</span></span>  
  
-   <span data-ttu-id="97554-235">调用 <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> 方法来转换 <xref:System.Drawing.Drawing2D.LinearGradientBrush> 。</span><span class="sxs-lookup"><span data-stu-id="97554-235">Calls the <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> method to transform the <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="97554-236">使用变换后的画笔，在第一个椭圆下直接向屏幕绘制一个椭圆。</span><span class="sxs-lookup"><span data-stu-id="97554-236">Draws an ellipse to the screen directly below the first ellipse, using the transformed brush.</span></span>  
  
-   <span data-ttu-id="97554-237">重置转换。</span><span class="sxs-lookup"><span data-stu-id="97554-237">Resets the transform.</span></span>  
  
-   <span data-ttu-id="97554-238">将第三个椭圆绘制到屏幕下方的前两个。</span><span class="sxs-lookup"><span data-stu-id="97554-238">Draws a third ellipse to the screen below the first two.</span></span>  
  
 <span data-ttu-id="97554-239">请注意，最小椭圆的绘制大小与第一个椭圆相同，因此，由于对方法的调用 <xref:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform%2A> ，渐变已缩小为匹配。</span><span class="sxs-lookup"><span data-stu-id="97554-239">Notice that the lowest ellipse is drawn the same size as the first, and that, due to the call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform%2A> method, the gradient has been reduced to match.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97554-240">将局部几何转换旋转指定大小。</span><span class="sxs-lookup"><span data-stu-id="97554-240">Rotates the local geometric transform by the specified amount.</span></span> <span data-ttu-id="97554-241">此方法预先计算对转换的旋转。</span><span class="sxs-lookup"><span data-stu-id="97554-241">This method prepends the rotation to the transform.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single -&gt; unit" Usage="linearGradientBrush.RotateTransform angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="97554-242">旋转角度。</span><span class="sxs-lookup"><span data-stu-id="97554-242">The angle of rotation.</span></span></param>
        <summary><span data-ttu-id="97554-243">将局部几何转换旋转指定大小。</span><span class="sxs-lookup"><span data-stu-id="97554-243">Rotates the local geometric transform by the specified amount.</span></span> <span data-ttu-id="97554-244">此方法预先计算对转换的旋转。</span><span class="sxs-lookup"><span data-stu-id="97554-244">This method prepends the rotation to the transform.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="97554-245">有关示例，请参见 <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A>。</span><span class="sxs-lookup"><span data-stu-id="97554-245">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="linearGradientBrush.RotateTransform (angle, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="97554-246">旋转角度。</span><span class="sxs-lookup"><span data-stu-id="97554-246">The angle of rotation.</span></span></param>
        <param name="order"><span data-ttu-id="97554-247">一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，它指定是在后面追加旋转矩阵还是在前面添加旋转矩阵。</span><span class="sxs-lookup"><span data-stu-id="97554-247">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the rotation matrix.</span></span></param>
        <summary><span data-ttu-id="97554-248">将局部几何转换以指定顺序旋转指定量。</span><span class="sxs-lookup"><span data-stu-id="97554-248">Rotates the local geometric transform by the specified amount in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="97554-249">下面的代码示例旨在与 Windows 窗体一起使用，并且它需要 <xref:System.Windows.Forms.PaintEventArgs> `e` 一个 <xref:System.Windows.Forms.Form.OnPaint%2A> 事件对象。</span><span class="sxs-lookup"><span data-stu-id="97554-249">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="97554-250">代码</span><span class="sxs-lookup"><span data-stu-id="97554-250">The code</span></span>  
  
-   <span data-ttu-id="97554-251">创建一个新的 <xref:System.Drawing.Drawing2D.LinearGradientBrush>。</span><span class="sxs-lookup"><span data-stu-id="97554-251">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="97554-252">使用此画笔在屏幕上绘制一个椭圆。</span><span class="sxs-lookup"><span data-stu-id="97554-252">Draws an ellipse to the screen using this brush.</span></span>  
  
-   <span data-ttu-id="97554-253"><xref:System.Drawing.Drawing2D.LinearGradientBrush>通过调用方法来旋转45度 <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A> 。</span><span class="sxs-lookup"><span data-stu-id="97554-253">Rotates the <xref:System.Drawing.Drawing2D.LinearGradientBrush> 45 degrees by calling the <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A> method.</span></span>  
  
-   <span data-ttu-id="97554-254">使用旋转画笔在第一个椭圆下直接向屏幕绘制一个椭圆。</span><span class="sxs-lookup"><span data-stu-id="97554-254">Draws an ellipse to the screen directly below the first ellipse, using the rotated brush.</span></span>  
  
 <span data-ttu-id="97554-255">请注意，下半椭圆的渐变与顶部椭圆的 x 轴的角度是45度。</span><span class="sxs-lookup"><span data-stu-id="97554-255">Notice that the gradient of the lower ellipse is at a 45 degree angle to the x-axis of the top ellipse.</span></span> <span data-ttu-id="97554-256">另请注意，对方法的调用 <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> 用于将渐变填充的左边缘与下椭圆的左边缘对齐。</span><span class="sxs-lookup"><span data-stu-id="97554-256">Also notice that a call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> method is used to justify the left edge of the gradient fill with the left edge of the lower ellipse.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScaleTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97554-257">将局部几何转换缩放指定的量。</span><span class="sxs-lookup"><span data-stu-id="97554-257">Scales the local geometric transform by the specified amounts.</span></span> <span data-ttu-id="97554-258">此方法预先计算转换的缩放矩阵。</span><span class="sxs-lookup"><span data-stu-id="97554-258">This method prepends the scaling matrix to the transform.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single -&gt; unit" Usage="linearGradientBrush.ScaleTransform (sx, sy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="sx"><span data-ttu-id="97554-259">转换在 X 轴方向的缩放量。</span><span class="sxs-lookup"><span data-stu-id="97554-259">The amount by which to scale the transform in the x-axis direction.</span></span></param>
        <param name="sy"><span data-ttu-id="97554-260">转换在 y 轴方向的缩放量。</span><span class="sxs-lookup"><span data-stu-id="97554-260">The amount by which to scale the transform in the y-axis direction.</span></span></param>
        <summary><span data-ttu-id="97554-261">将局部几何转换缩放指定的量。</span><span class="sxs-lookup"><span data-stu-id="97554-261">Scales the local geometric transform by the specified amounts.</span></span> <span data-ttu-id="97554-262">此方法预先计算转换的缩放矩阵。</span><span class="sxs-lookup"><span data-stu-id="97554-262">This method prepends the scaling matrix to the transform.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="97554-263">有关示例，请参见 <xref:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform%2A>。</span><span class="sxs-lookup"><span data-stu-id="97554-263">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="linearGradientBrush.ScaleTransform (sx, sy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="sx"><span data-ttu-id="97554-264">转换在 X 轴方向的缩放量。</span><span class="sxs-lookup"><span data-stu-id="97554-264">The amount by which to scale the transform in the x-axis direction.</span></span></param>
        <param name="sy"><span data-ttu-id="97554-265">转换在 y 轴方向的缩放量。</span><span class="sxs-lookup"><span data-stu-id="97554-265">The amount by which to scale the transform in the y-axis direction.</span></span></param>
        <param name="order"><span data-ttu-id="97554-266">一个 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定是在后面追加缩放矩阵还是在前面添加缩放矩阵。</span><span class="sxs-lookup"><span data-stu-id="97554-266">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the scaling matrix.</span></span></param>
        <summary><span data-ttu-id="97554-267">将局部几何转换以指定顺序缩放指定的量。</span><span class="sxs-lookup"><span data-stu-id="97554-267">Scales the local geometric transform by the specified amounts in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="97554-268">下面的代码示例旨在与 Windows 窗体一起使用，并且它需要 <xref:System.Windows.Forms.PaintEventArgs> `e` 一个 <xref:System.Windows.Forms.Form.OnPaint%2A> 事件对象。</span><span class="sxs-lookup"><span data-stu-id="97554-268">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="97554-269">此代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="97554-269">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="97554-270">创建一个新的 <xref:System.Drawing.Drawing2D.LinearGradientBrush>。</span><span class="sxs-lookup"><span data-stu-id="97554-270">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="97554-271">使用此画笔在屏幕上绘制一个椭圆。</span><span class="sxs-lookup"><span data-stu-id="97554-271">Draw an ellipse to the screen using this brush.</span></span>  
  
-   <span data-ttu-id="97554-272">在 <xref:System.Drawing.Drawing2D.LinearGradientBrush> x 轴中按2的比例缩放。</span><span class="sxs-lookup"><span data-stu-id="97554-272">Scales the <xref:System.Drawing.Drawing2D.LinearGradientBrush> by a factor of two in the x-axis.</span></span>  
  
-   <span data-ttu-id="97554-273">使用缩放画笔在第一个椭圆下直接向屏幕绘制一个椭圆。</span><span class="sxs-lookup"><span data-stu-id="97554-273">Draws an ellipse to the screen directly below the first ellipse, using the scaled brush.</span></span>  
  
 <span data-ttu-id="97554-274">请注意，下半椭圆的渐变由2的因子拉伸。</span><span class="sxs-lookup"><span data-stu-id="97554-274">Notice that the gradient of the lower ellipse is stretched by a factor of two.</span></span> <span data-ttu-id="97554-275">另请注意，对方法的调用 <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> 用于将渐变填充的左边缘与椭圆的左边缘对齐。</span><span class="sxs-lookup"><span data-stu-id="97554-275">Also notice that a call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> method is used to justify the left edge of the gradient fill with the left edge of ellipse.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBlendTriangularShape">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97554-276">创建一个从中心色向两端单一颜色线性过渡的线性渐变过程。</span><span class="sxs-lookup"><span data-stu-id="97554-276">Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBlendTriangularShape">
      <MemberSignature Language="C#" Value="public void SetBlendTriangularShape (float focus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBlendTriangularShape(float32 focus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBlendTriangularShape (focus As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBlendTriangularShape(float focus);" />
      <MemberSignature Language="F#" Value="member this.SetBlendTriangularShape : single -&gt; unit" Usage="linearGradientBrush.SetBlendTriangularShape focus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus"><span data-ttu-id="97554-277">介于 0 到 1 之间的一个值，它指定渐变中心（只由结束色构成渐变的点）。</span><span class="sxs-lookup"><span data-stu-id="97554-277">A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).</span></span></param>
        <summary><span data-ttu-id="97554-278">创建一个从中心色向两端单一颜色线性过渡的线性渐变过程。</span><span class="sxs-lookup"><span data-stu-id="97554-278">Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97554-279">此方法指定一个 `focus` ，即渐变只由结束颜色组成的点。</span><span class="sxs-lookup"><span data-stu-id="97554-279">This method specifies a `focus`, which is the point where the gradient is composed only of the ending color.</span></span> <span data-ttu-id="97554-280">`focus`参数表示一个位置，该位置的比例为沿渐变线的距离。</span><span class="sxs-lookup"><span data-stu-id="97554-280">The `focus` parameter represents a location as a proportion of the distance along the gradient line.</span></span> <span data-ttu-id="97554-281">渐变将从线性过渡到两侧。</span><span class="sxs-lookup"><span data-stu-id="97554-281">The gradient falls off to the starting color linearly to either side.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97554-282">有关示例，请参见 <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A>。</span><span class="sxs-lookup"><span data-stu-id="97554-282">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBlendTriangularShape">
      <MemberSignature Language="C#" Value="public void SetBlendTriangularShape (float focus, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBlendTriangularShape(float32 focus, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBlendTriangularShape (focus As Single, scale As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBlendTriangularShape(float focus, float scale);" />
      <MemberSignature Language="F#" Value="member this.SetBlendTriangularShape : single * single -&gt; unit" Usage="linearGradientBrush.SetBlendTriangularShape (focus, scale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus"><span data-ttu-id="97554-283">介于 0 到 1 之间的一个值，它指定渐变中心（只由结束色构成渐变的点）。</span><span class="sxs-lookup"><span data-stu-id="97554-283">A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).</span></span></param>
        <param name="scale"><span data-ttu-id="97554-284">介于 0 到 1 之间的一个值，它指定颜色从起始色过渡到 <paramref name="focus" />（结束色）的过渡速度。</span><span class="sxs-lookup"><span data-stu-id="97554-284">A value from 0 through1 that specifies how fast the colors falloff from the starting color to <paramref name="focus" /> (ending color)</span></span></param>
        <summary><span data-ttu-id="97554-285">创建一个从中心色向两端单一颜色线性过渡的线性渐变过程。</span><span class="sxs-lookup"><span data-stu-id="97554-285">Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97554-286">此方法指定一个 `focus` ，即渐变只由结束颜色组成的点。</span><span class="sxs-lookup"><span data-stu-id="97554-286">This method specifies a `focus`, which is the point where the gradient is composed only of the ending color.</span></span> <span data-ttu-id="97554-287">`focus`参数表示一个位置，该位置的比例为沿渐变线的距离。</span><span class="sxs-lookup"><span data-stu-id="97554-287">The `focus` parameter represents a location as a proportion of the distance along the gradient line.</span></span> <span data-ttu-id="97554-288">渐变将从线性过渡到两侧。</span><span class="sxs-lookup"><span data-stu-id="97554-288">The gradient falls off to the starting color linearly to either side.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97554-289">下面的代码示例旨在与 Windows 窗体一起使用，并且它需要 <xref:System.Windows.Forms.PaintEventArgs> `e` 一个 <xref:System.Windows.Forms.Form.OnPaint%2A> 事件对象。</span><span class="sxs-lookup"><span data-stu-id="97554-289">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="97554-290">此代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="97554-290">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="97554-291">创建一个新的 <xref:System.Drawing.Drawing2D.LinearGradientBrush>。</span><span class="sxs-lookup"><span data-stu-id="97554-291">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="97554-292">使用此画笔在屏幕上绘制具有从左向右的线性过渡的椭圆。</span><span class="sxs-lookup"><span data-stu-id="97554-292">Uses this brush to draw an ellipse to the screen that has a linear, left-to-right transition of colors.</span></span>  
  
-   <span data-ttu-id="97554-293">将转换 <xref:System.Drawing.Drawing2D.LinearGradientBrush> 为三角形状，使其在中心中的峰值。</span><span class="sxs-lookup"><span data-stu-id="97554-293">Transforms the <xref:System.Drawing.Drawing2D.LinearGradientBrush> into a triangular shape with its peak in the center.</span></span>  
  
-   <span data-ttu-id="97554-294">使用转换后的画笔在屏幕上绘制第二个椭圆。</span><span class="sxs-lookup"><span data-stu-id="97554-294">Draws a second ellipse to the screen using the transformed brush.</span></span>  
  
 <span data-ttu-id="97554-295">请注意，下半椭圆的渐变从蓝色转换为红色，然后转换回蓝色。</span><span class="sxs-lookup"><span data-stu-id="97554-295">Notice that the gradient of the lower ellipse transitions from blue to red and then back to blue.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSigmaBellShape">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97554-296">创建基于钟形曲线的渐变过渡过程。</span><span class="sxs-lookup"><span data-stu-id="97554-296">Creates a gradient falloff based on a bell-shaped curve.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSigmaBellShape">
      <MemberSignature Language="C#" Value="public void SetSigmaBellShape (float focus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSigmaBellShape(float32 focus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSigmaBellShape (focus As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSigmaBellShape(float focus);" />
      <MemberSignature Language="F#" Value="member this.SetSigmaBellShape : single -&gt; unit" Usage="linearGradientBrush.SetSigmaBellShape focus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus"><span data-ttu-id="97554-297">介于 0 到 1 之间的一个值，它指定渐变中心（起始色和结束色均匀混合的点）。</span><span class="sxs-lookup"><span data-stu-id="97554-297">A value from 0 through 1 that specifies the center of the gradient (the point where the starting color and ending color are blended equally).</span></span></param>
        <summary><span data-ttu-id="97554-298">创建基于钟形曲线的渐变过渡过程。</span><span class="sxs-lookup"><span data-stu-id="97554-298">Creates a gradient falloff based on a bell-shaped curve.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97554-299">此方法指定一个 `focus` ，即渐变只由结束颜色组成的点。</span><span class="sxs-lookup"><span data-stu-id="97554-299">This method specifies a `focus`, which is the point where the gradient is composed only of the ending color.</span></span> <span data-ttu-id="97554-300">`focus`参数表示一个位置，该位置的比例为沿渐变线的距离。</span><span class="sxs-lookup"><span data-stu-id="97554-300">The `focus` parameter represents a location as a proportion of the distance along the gradient line.</span></span> <span data-ttu-id="97554-301">渐变将基于一个钟形曲线形状， (正态分布) 到两侧。</span><span class="sxs-lookup"><span data-stu-id="97554-301">The gradient falls off to the starting color based on a bell curve shape (normal distribution) to either side.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97554-302">有关示例，请参阅<xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A>`.`</span><span class="sxs-lookup"><span data-stu-id="97554-302">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A>`.`</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSigmaBellShape">
      <MemberSignature Language="C#" Value="public void SetSigmaBellShape (float focus, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSigmaBellShape(float32 focus, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSigmaBellShape (focus As Single, scale As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSigmaBellShape(float focus, float scale);" />
      <MemberSignature Language="F#" Value="member this.SetSigmaBellShape : single * single -&gt; unit" Usage="linearGradientBrush.SetSigmaBellShape (focus, scale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus"><span data-ttu-id="97554-303">介于 0 到 1 之间的一个值，它指定渐变中心（只由结束色构成渐变的点）。</span><span class="sxs-lookup"><span data-stu-id="97554-303">A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).</span></span></param>
        <param name="scale"><span data-ttu-id="97554-304">介于 0 到 1 之间的一个值，它指定颜色从 <paramref name="focus" /> 过渡的过渡速度。</span><span class="sxs-lookup"><span data-stu-id="97554-304">A value from 0 through 1 that specifies how fast the colors falloff from the <paramref name="focus" />.</span></span></param>
        <summary><span data-ttu-id="97554-305">创建基于钟形曲线的渐变过渡过程。</span><span class="sxs-lookup"><span data-stu-id="97554-305">Creates a gradient falloff based on a bell-shaped curve.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97554-306">此方法指定一个 `focus` ，即渐变只由结束颜色组成的点。</span><span class="sxs-lookup"><span data-stu-id="97554-306">This method specifies a `focus`, which is the point where the gradient is composed only of the ending color.</span></span> <span data-ttu-id="97554-307">`focus`参数表示一个位置，该位置的比例为沿渐变线的距离。</span><span class="sxs-lookup"><span data-stu-id="97554-307">The `focus` parameter represents a location as a proportion of the distance along the gradient line.</span></span> <span data-ttu-id="97554-308">渐变将基于一个钟形曲线形状， (正态分布) 到两侧。</span><span class="sxs-lookup"><span data-stu-id="97554-308">The gradient falls off to the starting color based on a bell curve shape (normal distribution) to either side.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97554-309">下面的代码示例旨在与 Windows 窗体一起使用，并且它需要 <xref:System.Windows.Forms.PaintEventArgs> `e` 一个 <xref:System.Windows.Forms.Form.OnPaint%2A> 事件对象。</span><span class="sxs-lookup"><span data-stu-id="97554-309">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="97554-310">此代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="97554-310">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="97554-311">创建一个新的 <xref:System.Drawing.Drawing2D.LinearGradientBrush>。</span><span class="sxs-lookup"><span data-stu-id="97554-311">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="97554-312">使用此画笔在屏幕上绘制具有从左向右的线性过渡的椭圆。</span><span class="sxs-lookup"><span data-stu-id="97554-312">Uses this brush to draw an ellipse to the screen that has a linear, left-to-right transition of colors.</span></span>  
  
-   <span data-ttu-id="97554-313">转换 <xref:System.Drawing.Drawing2D.LinearGradientBrush> 以在中心产生一个钟形曲线的曲线。</span><span class="sxs-lookup"><span data-stu-id="97554-313">Transforms the <xref:System.Drawing.Drawing2D.LinearGradientBrush> to have a bell shaped curve with its peak in the center.</span></span>  
  
-   <span data-ttu-id="97554-314">使用钟形画笔在屏幕上绘制第二个椭圆。</span><span class="sxs-lookup"><span data-stu-id="97554-314">Draws a second ellipse to the screen using the bell-shaped brush.</span></span>  
  
 <span data-ttu-id="97554-315">请注意，下半椭圆的渐变从蓝色转换为红色，然后转换回蓝色。</span><span class="sxs-lookup"><span data-stu-id="97554-315">Notice that the gradient of the lower ellipse transitions from blue to red and then back to blue.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Matrix Transform" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Property Transform As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Matrix ^ Transform { System::Drawing::Drawing2D::Matrix ^ get(); void set(System::Drawing::Drawing2D::Matrix ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="97554-316">获取或设置一个副本 <see cref="T:System.Drawing.Drawing2D.Matrix" />，它定义此 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 的局部几何转换。</span><span class="sxs-lookup"><span data-stu-id="97554-316">Gets or sets a copy <see cref="T:System.Drawing.Drawing2D.Matrix" /> that defines a local geometric transform for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span></span></summary>
        <value><span data-ttu-id="97554-317">定义几何变换的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的副本，该变换仅适用于通过此 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 绘制的填充。</span><span class="sxs-lookup"><span data-stu-id="97554-317">A copy of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that defines a geometric transform that applies only to fills drawn with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97554-318">几何转换可用于平移、缩放、旋转或倾斜渐变填充。</span><span class="sxs-lookup"><span data-stu-id="97554-318">A geometric transform can be used to translate, scale, rotate, or skew the gradient fill.</span></span> <span data-ttu-id="97554-319">由于由属性返回的矩阵 <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> 是画笔几何转换的副本，因此，当您不再需要矩阵时，您应该释放它。</span><span class="sxs-lookup"><span data-stu-id="97554-319">Because the matrix returned and by the <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A> property is a copy of the brush's geometric transform, you should dispose of the matrix when you no longer need it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TranslateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97554-320">将局部几何转换平移指定的尺寸。</span><span class="sxs-lookup"><span data-stu-id="97554-320">Translates the local geometric transform by the specified dimensions.</span></span> <span data-ttu-id="97554-321">该方法将预先计算对转换的平移。</span><span class="sxs-lookup"><span data-stu-id="97554-321">This method prepends the translation to the transform.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single -&gt; unit" Usage="linearGradientBrush.TranslateTransform (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="97554-322">X 方向的转换值。</span><span class="sxs-lookup"><span data-stu-id="97554-322">The value of the translation in x.</span></span></param>
        <param name="dy"><span data-ttu-id="97554-323">Y 方向的转换值。</span><span class="sxs-lookup"><span data-stu-id="97554-323">The value of the translation in y.</span></span></param>
        <summary><span data-ttu-id="97554-324">将局部几何转换平移指定的尺寸。</span><span class="sxs-lookup"><span data-stu-id="97554-324">Translates the local geometric transform by the specified dimensions.</span></span> <span data-ttu-id="97554-325">该方法将预先计算对转换的平移。</span><span class="sxs-lookup"><span data-stu-id="97554-325">This method prepends the translation to the transform.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="97554-326">有关示例，请参见 <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A>。</span><span class="sxs-lookup"><span data-stu-id="97554-326">For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="linearGradientBrush.TranslateTransform (dx, dy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="97554-327">X 方向的转换值。</span><span class="sxs-lookup"><span data-stu-id="97554-327">The value of the translation in x.</span></span></param>
        <param name="dy"><span data-ttu-id="97554-328">Y 方向的转换值。</span><span class="sxs-lookup"><span data-stu-id="97554-328">The value of the translation in y.</span></span></param>
        <param name="order"><span data-ttu-id="97554-329">应用转换的顺序（在前面添加或在后面追加）。</span><span class="sxs-lookup"><span data-stu-id="97554-329">The order (prepend or append) in which to apply the translation.</span></span></param>
        <summary><span data-ttu-id="97554-330">按指定的顺序将局部几何转换平移指定的尺寸。</span><span class="sxs-lookup"><span data-stu-id="97554-330">Translates the local geometric transform by the specified dimensions in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="97554-331">下面的代码示例旨在与 Windows 窗体一起使用，并且它需要 <xref:System.Windows.Forms.PaintEventArgs> `e` 一个 <xref:System.Windows.Forms.Form.OnPaint%2A> 事件对象。</span><span class="sxs-lookup"><span data-stu-id="97554-331">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="97554-332">此代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="97554-332">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="97554-333">创建一个新的 <xref:System.Drawing.Drawing2D.LinearGradientBrush>。</span><span class="sxs-lookup"><span data-stu-id="97554-333">Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</span></span>  
  
-   <span data-ttu-id="97554-334">使用此画笔在屏幕上绘制一个矩形，该矩形具有从左向右的线性过渡。</span><span class="sxs-lookup"><span data-stu-id="97554-334">Uses this brush to draw a rectangle to the screen that has a linear, left-to-right transition of colors.</span></span>  
  
-   <span data-ttu-id="97554-335">旋转 <xref:System.Drawing.Drawing2D.LinearGradientBrush> 90 度并缩放渐变。</span><span class="sxs-lookup"><span data-stu-id="97554-335">Rotates the <xref:System.Drawing.Drawing2D.LinearGradientBrush> by 90 degrees and scales the gradient.</span></span>  
  
-   <span data-ttu-id="97554-336">在屏幕上绘制带有旋转和缩放渐变的矩形。</span><span class="sxs-lookup"><span data-stu-id="97554-336">Draws the rectangle, with the rotated and scaled gradient, to the screen.</span></span>  
  
-   <span data-ttu-id="97554-337">平移矩形，使其具有从上到下运行的线性渐变。</span><span class="sxs-lookup"><span data-stu-id="97554-337">Translates the rectangle so that it has a linear gradient running from top to bottom.</span></span>  
  
-   <span data-ttu-id="97554-338">将已转换的矩形绘制到屏幕上。</span><span class="sxs-lookup"><span data-stu-id="97554-338">Draws the translated rectangle to the screen.</span></span>  
  
 <span data-ttu-id="97554-339">请注意，会显示三个矩形，其中显示了从左到右的渐变，中间显示了旋转和缩放的渐变，下一个矩形显示了最终的平移渐变。</span><span class="sxs-lookup"><span data-stu-id="97554-339">Notice that there are three rectangles displayed the top one showing the left-to-right gradient, the middle one showing the rotated and scaled gradient, and the bottom one showing the final, translated gradient.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicLinearGradientBrush/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.WrapMode WrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.WrapMode WrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.LinearGradientBrush.WrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapMode As WrapMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::WrapMode WrapMode { System::Drawing::Drawing2D::WrapMode get(); void set(System::Drawing::Drawing2D::WrapMode value); };" />
      <MemberSignature Language="F#" Value="member this.WrapMode : System.Drawing.Drawing2D.WrapMode with get, set" Usage="System.Drawing.Drawing2D.LinearGradientBrush.WrapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.WrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="97554-340">获取或设置 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 枚举，它指示该 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 的环绕模式。</span><span class="sxs-lookup"><span data-stu-id="97554-340">Gets or sets a <see cref="T:System.Drawing.Drawing2D.WrapMode" /> enumeration that indicates the wrap mode for this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />.</span></span></summary>
        <value><span data-ttu-id="97554-341">一个 <see cref="T:System.Drawing.Drawing2D.WrapMode" />，指定使用此 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 绘制的填充的平铺方式。</span><span class="sxs-lookup"><span data-stu-id="97554-341">A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> that specifies how fills drawn with this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> are tiled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
