<Type Name="ArrangedElementCollection" FullName="System.Windows.Forms.Layout.ArrangedElementCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9b95472cb7d0a0cdd0fe40295f749f536661af6c" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86784475" /></Metadata><TypeSignature Language="C#" Value="public class ArrangedElementCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ArrangedElementCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Layout.ArrangedElementCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ArrangedElementCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArrangedElementCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ArrangedElementCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="54adc-101">表示对象集合。</span><span class="sxs-lookup"><span data-stu-id="54adc-101">Represents a collection of objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54adc-102"><xref:System.Windows.Forms.Layout.ArrangedElementCollection>类表示对象的集合，这些对象在设计图面上或在父项内排列 <xref:System.Windows.Forms.ContainerControl?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="54adc-102">The <xref:System.Windows.Forms.Layout.ArrangedElementCollection> class represents a collection of objects arranged on a design surface or inside a parent <xref:System.Windows.Forms.ContainerControl?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="54adc-103">中没有公开定义的构造函数， <xref:System.Windows.Forms.Layout.ArrangedElementCollection> 因为它设计为仅在内部使用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 。</span><span class="sxs-lookup"><span data-stu-id="54adc-103">There are no publicly defined constructors in <xref:System.Windows.Forms.Layout.ArrangedElementCollection> because it is designed to be used only internally within the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="54adc-104">但是，从派生的类（ <xref:System.Windows.Forms.Layout.ArrangedElementCollection> 如 <xref:System.Windows.Forms.Control.ControlCollection?displayProperty=nameWithType> ）可供开发人员使用。</span><span class="sxs-lookup"><span data-stu-id="54adc-104">However, classes derived from <xref:System.Windows.Forms.Layout.ArrangedElementCollection>, such as <xref:System.Windows.Forms.Control.ControlCollection?displayProperty=nameWithType>, are available to the developer.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="54adc-105"><see langword="static" /> <see langword="Shared" /> 此类型) 成员 Visual Basic 的公共 (是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="54adc-105">Public <see langword="static" /> (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="54adc-106">实例成员不一定是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="54adc-106">Instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="54adc-107"><see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />只要不修改集合，就可以同时支持多个读取器。</span><span class="sxs-lookup"><span data-stu-id="54adc-107">An <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> can support multiple readers concurrently, as long as the collection is not modified.</span></span> <span data-ttu-id="54adc-108"><see cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" />方法返回 <see cref="T:System.Collections.IEnumerator" /> 可用于访问元素的。</span><span class="sxs-lookup"><span data-stu-id="54adc-108">The <see cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" /> method returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to access elements.</span></span>  
  
<span data-ttu-id="54adc-109">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="54adc-109">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="54adc-110">即使集合是同步的，其他线程仍可以修改集合，这会导致枚举器引发异常。</span><span class="sxs-lookup"><span data-stu-id="54adc-110">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="54adc-111">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="54adc-111">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.Collections.ArrayList" />
    <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
    <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" />
  </Docs>
  <Members>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="arrangedElementCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="54adc-112">一维 <see cref="T:System.Array" />，用作从当前集合复制的元素的目标数组。</span><span class="sxs-lookup"><span data-stu-id="54adc-112">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the current collection.</span></span> <span data-ttu-id="54adc-113">该数组的索引必须从零开始。</span><span class="sxs-lookup"><span data-stu-id="54adc-113">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="54adc-114"><paramref name="array" /> 中从零开始的索引，从此处开始复制。</span><span class="sxs-lookup"><span data-stu-id="54adc-114">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="54adc-115">从目标数组的指定索引处开始将此集合的全部内容复制到兼容的一维 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="54adc-115">Copies the entire contents of this collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54adc-116">指定数组的类型必须与源集合兼容。</span><span class="sxs-lookup"><span data-stu-id="54adc-116">The type of the specified array must be compatible with the source collection.</span></span>  
  
 <span data-ttu-id="54adc-117">此方法使用 <xref:System.Array.Copy%2A?displayProperty=nameWithType> 方法复制元素。</span><span class="sxs-lookup"><span data-stu-id="54adc-117">This method uses the <xref:System.Array.Copy%2A?displayProperty=nameWithType> method to copy the elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="54adc-118"><paramref name="array" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="54adc-118"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="54adc-119"><paramref name="index" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="54adc-119"><paramref name="index" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="54adc-120"><paramref name="array" /> 是多维的。</span><span class="sxs-lookup"><span data-stu-id="54adc-120"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="54adc-121">- 或 -</span><span class="sxs-lookup"><span data-stu-id="54adc-121">-or-</span></span> 
<span data-ttu-id="54adc-122">源集合中的元素数目大于从 <paramref name="index" /> 到 <paramref name="array" /> 末尾的可用空间。</span><span class="sxs-lookup"><span data-stu-id="54adc-122">The number of elements in the source collection is greater than the available space from <paramref name="index" /> to the end of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="54adc-123">源元素的类型不能自动强制转换为 <paramref name="array" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="54adc-123">The type of the source element cannot be cast automatically to the type of <paramref name="array" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" />
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)" />
        <altmember cref="P:System.Windows.Forms.Layout.ArrangedElementCollection.Count" />
        <altmember cref="Overload:System.Collections.ArrayList.CopyTo" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.Layout.ArrangedElementCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54adc-124">获取集合中的元素数。</span><span class="sxs-lookup"><span data-stu-id="54adc-124">Gets the number of elements in the collection.</span></span></summary>
        <value><span data-ttu-id="54adc-125">集合中当前包含的元素数。</span><span class="sxs-lookup"><span data-stu-id="54adc-125">The number of elements currently contained in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54adc-126">需要时，集合的容量会动态增加以接受更多元素。</span><span class="sxs-lookup"><span data-stu-id="54adc-126">When required, the capacity of the collection will dynamically increase to accept more elements.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="arrangedElementCollection.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="54adc-127">要与当前的 <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> 进行比较的 <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />。</span><span class="sxs-lookup"><span data-stu-id="54adc-127">The <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> to compare with the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span></span></param>
        <summary><span data-ttu-id="54adc-128">确定两个 <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> 实例是否相等。</span><span class="sxs-lookup"><span data-stu-id="54adc-128">Determines whether two <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> instances are equal.</span></span></summary>
        <returns><span data-ttu-id="54adc-129">如果指定的 <see langword="true" /> 等于当前的 <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />，则为 <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="54adc-129"><see langword="true" /> if the specified <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> is equal to the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="arrangedElementCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54adc-130">返回一个用于访问整个集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="54adc-130">Returns an enumerator for the entire collection.</span></span></summary>
        <returns><span data-ttu-id="54adc-131">一个用于访问整个集合的 <see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="54adc-131">An <see cref="T:System.Collections.IEnumerator" /> for the entire collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54adc-132">通常，枚举器不具有对集合的独占访问权限;因此，枚举集合本质上不是线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="54adc-132">Typically the enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="54adc-133">即使集合是同步的，其他线程仍可以修改集合，这会导致枚举器引发异常。</span><span class="sxs-lookup"><span data-stu-id="54adc-133">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="54adc-134">若要保证枚举过程中的线程安全，可以遵循以下策略之一：</span><span class="sxs-lookup"><span data-stu-id="54adc-134">To guarantee thread safety during enumeration, you can follow one of the following strategies:</span></span>  
  
-   <span data-ttu-id="54adc-135">使用在整个枚举过程中锁定集合 <xref:System.Threading.Monitor> 。</span><span class="sxs-lookup"><span data-stu-id="54adc-135">Lock the collection during the entire enumeration using a <xref:System.Threading.Monitor>.</span></span>  
  
-   <span data-ttu-id="54adc-136">捕获并处理由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="54adc-136">Catch and handle the exceptions that result from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(System.Array,System.Int32)" />
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="Overload:System.Collections.ArrayList.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="arrangedElementCollection.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54adc-137">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="54adc-137">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="54adc-138">当前 <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> 的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="54adc-138">A hash code for the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54adc-139">获取一个值，该值指示集合是否为只读。</span><span class="sxs-lookup"><span data-stu-id="54adc-139">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="54adc-140">如果该集合为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="54adc-140"><see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="54adc-141">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="54adc-141">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54adc-142">在创建集合后，只读集合不允许添加、移除或修改元素。</span><span class="sxs-lookup"><span data-stu-id="54adc-142">A read-only collection does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="54adc-143">只读集合就是一个集合，其中包含阻止修改集合的包装器。</span><span class="sxs-lookup"><span data-stu-id="54adc-143">A read-only collection is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="54adc-144">如果对基础集合进行了更改，只读集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="54adc-144">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove(System.Object)" />
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.IsSynchronized : bool" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54adc-145">有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.IsSynchronized" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="54adc-145">For a description of this member, see the <see cref="P:System.Collections.ICollection.IsSynchronized" /> property.</span></span></summary>
        <value><span data-ttu-id="54adc-146">如果对 <see langword="true" /> 的访问是同步的（线程安全），则为 <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="54adc-146"><see langword="true" /> if access to the <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54adc-147">此方法是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="54adc-147">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="54adc-148">它只能在 <xref:System.Windows.Forms.Layout.ArrangedElementCollection> 实例被强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="54adc-148">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.SyncRoot : obj" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54adc-149">有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.SyncRoot" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="54adc-149">For a description of this member, see the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</span></span></summary>
        <value><span data-ttu-id="54adc-150">用于同步对 <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> 的访问的对象。</span><span class="sxs-lookup"><span data-stu-id="54adc-150">An object that can be used to synchronize access to the <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54adc-151">此方法是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="54adc-151">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="54adc-152">它只能在 <xref:System.Windows.Forms.Layout.ArrangedElementCollection> 实例被强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="54adc-152">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Add : obj -&gt; int&#xA;override this.System.Collections.IList.Add : obj -&gt; int" Usage="arrangedElementCollection.System.Collections.IList.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="54adc-153">要添加到 <see cref="T:System.Object" /> 的 <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="54adc-153">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="54adc-154">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Add(System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="54adc-154">For a description of this member, see the <see cref="M:System.Collections.IList.Add(System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="54adc-155">新元素的插入位置。</span><span class="sxs-lookup"><span data-stu-id="54adc-155">The position into which the new element was inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54adc-156">此方法是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="54adc-156">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="54adc-157">它只能在 <xref:System.Windows.Forms.Layout.ArrangedElementCollection> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="54adc-157">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Clear : unit -&gt; unit&#xA;override this.System.Collections.IList.Clear : unit -&gt; unit" Usage="arrangedElementCollection.System.Collections.IList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54adc-158">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Clear" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="54adc-158">For a description of this member, see the <see cref="M:System.Collections.IList.Clear" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54adc-159">此方法是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="54adc-159">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="54adc-160">它只能在 <xref:System.Windows.Forms.Layout.ArrangedElementCollection> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="54adc-160">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Contains : obj -&gt; bool&#xA;override this.System.Collections.IList.Contains : obj -&gt; bool" Usage="arrangedElementCollection.System.Collections.IList.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="54adc-161">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="54adc-161">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="54adc-162">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Contains(System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="54adc-162">For a description of this member, see the <see cref="M:System.Collections.IList.Contains(System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="54adc-163">如果在 <see cref="T:System.Collections.IList" /> 中找到了 <see cref="T:System.Object" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="54adc-163"><see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54adc-164">此方法是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="54adc-164">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="54adc-165">它只能在 <xref:System.Windows.Forms.Layout.ArrangedElementCollection> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="54adc-165">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.IndexOf : obj -&gt; int&#xA;override this.System.Collections.IList.IndexOf : obj -&gt; int" Usage="arrangedElementCollection.System.Collections.IList.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="54adc-166">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="54adc-166">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="54adc-167">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.IndexOf(System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="54adc-167">For a description of this member, see the <see cref="M:System.Collections.IList.IndexOf(System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="54adc-168">如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="54adc-168">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54adc-169">此方法是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="54adc-169">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="54adc-170">它只能在 <xref:System.Windows.Forms.Layout.ArrangedElementCollection> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="54adc-170">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Insert : int * obj -&gt; unit&#xA;override this.System.Collections.IList.Insert : int * obj -&gt; unit" Usage="arrangedElementCollection.System.Collections.IList.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="54adc-171">应插入 <paramref name="value" /> 的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="54adc-171">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="54adc-172">要插入到 <see cref="T:System.Collections.IList" /> 的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="54adc-172">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="54adc-173">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="54adc-173">For a description of this member, see the <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54adc-174">此方法是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="54adc-174">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="54adc-175">它只能在 <xref:System.Windows.Forms.Layout.ArrangedElementCollection> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="54adc-175">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.IsFixedSize : bool" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54adc-176">有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsFixedSize" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="54adc-176">For a description of this member, see the <see cref="P:System.Collections.IList.IsFixedSize" /> property.</span></span></summary>
        <value><span data-ttu-id="54adc-177">如果 <see langword="true" /> 具有固定大小，则为 <see cref="T:System.Collections.IList" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="54adc-177"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54adc-178">此方法是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="54adc-178">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="54adc-179">它只能在 <xref:System.Windows.Forms.Layout.ArrangedElementCollection> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="54adc-179">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.Item(int) : obj with get, set" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="54adc-180">要获取的元素的索引(索引从零开始)。</span><span class="sxs-lookup"><span data-stu-id="54adc-180">The zero-based index of the element to get.</span></span></param>
        <summary><span data-ttu-id="54adc-181">有关此成员的说明，请参见 <see cref="P:System.Collections.IList.Item(System.Int32)" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="54adc-181">For a description of this member, see the <see cref="P:System.Collections.IList.Item(System.Int32)" /> property.</span></span></summary>
        <value><span data-ttu-id="54adc-182">指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="54adc-182">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54adc-183">此方法是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="54adc-183">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="54adc-184">它只能在 <xref:System.Windows.Forms.Layout.ArrangedElementCollection> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="54adc-184">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Remove : obj -&gt; unit&#xA;override this.System.Collections.IList.Remove : obj -&gt; unit" Usage="arrangedElementCollection.System.Collections.IList.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="54adc-185">要从 <see cref="T:System.Object" /> 移除的 <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="54adc-185">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="54adc-186">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Remove(System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="54adc-186">For a description of this member, see the <see cref="M:System.Collections.IList.Remove(System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54adc-187">此方法是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="54adc-187">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="54adc-188">它只能在 <xref:System.Windows.Forms.Layout.ArrangedElementCollection> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="54adc-188">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.RemoveAt : int -&gt; unit&#xA;override this.System.Collections.IList.RemoveAt : int -&gt; unit" Usage="arrangedElementCollection.System.Collections.IList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="54adc-189">要移除的项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="54adc-189">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="54adc-190">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="54adc-190">For a description of this member, see the <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54adc-191">此方法是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="54adc-191">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="54adc-192">它只能在 <xref:System.Windows.Forms.Layout.ArrangedElementCollection> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="54adc-192">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
