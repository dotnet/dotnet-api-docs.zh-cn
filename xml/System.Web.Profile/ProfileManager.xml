<Type Name="ProfileManager" FullName="System.Web.Profile.ProfileManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dc585046106a506183693b6bda385f0f04c30726" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89919789" /></Metadata><TypeSignature Language="C#" Value="public static class ProfileManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ProfileManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileManager abstract sealed" />
  <TypeSignature Language="F#" Value="type ProfileManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>管理用户配置文件数据和设置。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 ASP.NET 配置文件用于存储和检索数据源（如数据库）中的用户设置。 使用当前的属性访问用户配置文件 <xref:System.Web.HttpContext.Profile%2A> <xref:System.Web.HttpContext> 。 配置文件信息和属性值使用配置文件提供程序进行管理。

 <xref:System.Web.Profile.ProfileManager>类用于管理配置文件设置，搜索用户配置文件，并删除不再使用的用户配置文件。 <xref:System.Web.Profile.ProfileManager>类提供可通过引用 <xref:System.Web.Profile.ProfileManager> 应用程序代码中的类来访问的静态方法和属性。 有关示例，请参阅本主题中的 "示例" 部分以及有关类成员的主题中的其他示例 <xref:System.Web.Profile.ProfileManager> 。

 默认情况下，将对所有 ASP.NET 应用程序禁用用户配置文件。 若要启用用户配置文件，请将 `enabled` [配置文件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) 配置元素的属性设置为 true，如以下示例中所示。

```
<configuration>
  <system.web>
    <profile enabled="true" />
  </system.web>
</configuration>
```

 有关用户配置文件的详细信息，请参阅 [ASP.NET Profile Properties 概述](https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100))。

 配置文件提供程序用于存储和检索用户配置文件中的属性。 .NET Framework 包含一个 <xref:System.Web.Profile.SqlProfileProvider> 类，用于在 SQL Server 数据库中存储用户配置文件属性。 名为的 <xref:System.Web.Profile.SqlProfileProvider> 实例 `AspNetSqlProvider` 在计算机配置中指定为默认配置文件提供程序。 `AspNetSqlProvider`实例连接到本地 Web 服务器上的 SQL Server 数据库。 您可以 <xref:System.Web.Profile.SqlProfileProvider> 通过使用[提供程序](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164654(v%3dvs.100))配置元素和配置文件配置元素的特性来指定连接到其他 SQL Server 作为默认配置文件提供程序的， `defaultProvider` 如下面的示例中所示。 [profile](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100))

```
<configuration>
  <connectionStrings>
    <add name="SqlServices" connectionString=
      "Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />
  </connectionStrings>
  <system.web>
    <profile defaultProvider="SqlProvider">
      <providers>
        <clear />
        <add name="SqlProvider"
          type="System.Web.Profile.SqlProfileProvider"
          connectionStringName="SqlServices"
          applicationName="MyApplication" />
      </providers>
    </profile>
  </system.web>
</configuration>
```



## Examples
 下面的代码示例演示了一个使用 <xref:System.Web.Profile.ProfileManager> 类管理非活动配置文件的 ASP.NET 页。

> [!IMPORTANT]
>  此示例包含一个文本框，该文本框接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]

 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
  </Docs>
  <Members>
    <Member MemberName="AddDynamicProfileProperty">
      <MemberSignature Language="C#" Value="public static void AddDynamicProfileProperty (System.Web.Configuration.ProfilePropertySettings property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddDynamicProfileProperty(class System.Web.Configuration.ProfilePropertySettings property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddDynamicProfileProperty (property As ProfilePropertySettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddDynamicProfileProperty(System::Web::Configuration::ProfilePropertySettings ^ property);" />
      <MemberSignature Language="F#" Value="static member AddDynamicProfileProperty : System.Web.Configuration.ProfilePropertySettings -&gt; unit" Usage="System.Web.Profile.ProfileManager.AddDynamicProfileProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Web.Configuration.ProfilePropertySettings" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="property">要添加的属性设置。</param>
        <summary>以编程方式添加配置文件属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法在功能上等效于将属性添加到 `profile` 配置文件的节中。 若要调用此方法以添加配置文件属性，必须在用特性标记的方法中进行调用 <xref:System.Web.PreApplicationStartMethodAttribute> 。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Profile.ProfileManager.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要存储和检索其配置文件信息的应用程序的名称。</summary>
        <value>要存储和检索其配置文件信息的应用程序的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Profile.ProfileManager>使用 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> 属性将配置文件信息与不同的应用程序相关联。 这使多个应用程序能够使用同一个数据库来存储用户信息，而不会在重复用户之间发生冲突。 多个 ASP.NET 应用程序可以通过在属性中指定相同的值，来使用相同的用户数据库 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> 。 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>可以通过编程方式设置该属性，也可以通过使用属性以声明方式在 Web 应用程序的配置文件中设置该属性 `applicationName` 。

 如果没有为 `applicationName` Web 应用程序的配置文件中的属性指定值，则 .NET Framework 中包含的配置文件提供程序使用 <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> ASP.NET 应用程序的属性值。 对于 non-ASP.NET 应用程序，默认值为 <xref:System.Diagnostics.ProcessModule.ModuleName%2A> 属性值，没有文件扩展名。

 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>属性公开 <xref:System.Configuration.SettingsProvider.ApplicationName%2A?displayProperty=nameWithType> 默认配置文件提供程序的属性。 默认配置文件提供程序是使用 `defaultProvider` [配置文件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) 配置元素的属性指定的。 如果用户配置文件包含由配置文件提供程序（而不是默认提供程序）管理的属性，则可以使用不同的应用程序名称来配置这些属性。 若要访问默认提供程序以外的配置文件提供程序的应用程序名称，请使用属性获取对配置文件提供程序的引用 <xref:System.Web.Profile.ProfileManager.Providers%2A> 并直接访问该 <xref:System.Configuration.SettingsProvider.ApplicationName%2A> 提供程序的属性。

> [!CAUTION]
>  由于单个默认配置文件提供程序实例用于某个对象提供的所有请求，因此 <xref:System.Web.HttpApplication> 您可以同时执行多个请求并尝试设置该 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> 属性值。 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>对于多个写入，属性不是线程安全的，并且更改 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> 属性值可能会导致应用程序的多个用户产生意外行为。 建议你避免编写允许用户设置属性的代码（ <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> 除非你需要这样做）。 可能需要设置属性的应用程序的一个示例 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> 是管理多个应用程序的配置文件数据的管理应用程序。 此类应用程序应为单用户应用程序，而不是 Web 应用程序。



## Examples
 下面的配置文件节选显示 ASP.NET 应用程序的 Web.config 文件的[system.web](/dotnet/framework/configure-apps/file-schema/web/system-web-element-web-settings)节中的[profile](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100))元素。 它将应用程序的默认配置文件提供程序设置为一个 <xref:System.Web.Profile.SqlProfileProvider> 实例，并将设置 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> 为 `MyApplication` 。

```
<profile enabled="true" defaultProvider="SqlProvider">
  <providers>
  <add name="SqlProvider"
    type="System.Web.Profile.SqlProfileProvider"
    connectionStringName="SqlServices"
    applicationName="MyApplication" />
  </providers>
</profile>
```

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="AutomaticSaveEnabled">
      <MemberSignature Language="C#" Value="public static bool AutomaticSaveEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutomaticSaveEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.AutomaticSaveEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AutomaticSaveEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutomaticSaveEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticSaveEnabled : bool" Usage="System.Web.Profile.ProfileManager.AutomaticSaveEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否将在 ASP.NET 页执行结束时自动保存用户配置文件。</summary>
        <value>如果在 ASP.NET 页执行结束时自动保存用户配置文件，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A>属性指示是否为应用程序启用自动保存用户配置文件。 如果启用了自动保存，则在 <xref:System.Web.Profile.ProfileModule> <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> <xref:System.Web.Profile.ProfileBase.Save%2A> <xref:System.Web.HttpApplication.EndRequest> ASP.NET 页执行结束时，对象将引发事件并调用方法。

 <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A>属性是使用 `automaticSaveEnabled` ASP.NET 应用程序的 Web.config 文件中的[profile](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100))元素的属性设置的。



## Examples
 下面的配置文件节选显示 ASP.NET 应用程序的 Web.config 文件的[system.web](/dotnet/framework/configure-apps/file-schema/web/system-web-element-web-settings)节中的[profile](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100))元素。 它将应用程序的默认配置文件提供程序指定给 <xref:System.Web.Profile.SqlProfileProvider> 实例，并将 `automaticSaveEnabled` 属性设置为 `true` 。

```
<profile enabled="true"
  automaticSaveEnabled="true"
  defaultProvider="SqlProvider">
  <providers>
    <add name="SqlProvider"
      type="System.Web.Profile.SqlProfileProvider"
      connectionStringName="SqlServices"
      applicationName="MyApplication" />
  </providers>
</profile>
```

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">在不具有起码的 <see cref="P:System.Web.Profile.ProfileManager.AutomaticSaveEnabled" /> 权限的情况下尝试获取 <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> 属性值。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteInactiveProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DeleteInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member DeleteInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime -&gt; int" Usage="System.Web.Profile.ProfileManager.DeleteInactiveProfiles (authenticationOption, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption"><see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 枚举值之一，指定是删除匿名配置文件、经过身份验证的配置文件还是同时删除这两种类型的配置文件。</param>
        <param name="userInactiveSinceDate">一个 <see cref="T:System.DateTime" />，确定将哪些用户配置文件视为处于不活动状态。 如果用户配置文件的 <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> 与此日期和时间相同，或在此日期和时间之前，则此配置文件被视为处于不活动状态。</param>
        <summary>删除上次活动日期和时间出现在指定日期和时间之前的用户配置文件数据。</summary>
        <returns>从数据源中删除的配置文件的数目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Profile.ProfileManager.DeleteInactiveProfiles%2A>方法用于从配置文件中的属性指定的应用程序的数据源中删除未使用的配置文件数据 `applicationName` 。 使用 `authenticationOption` 参数来指定是只想要搜索匿名配置文件、仅限经过身份验证的配置文件还是要搜索的所有配置文件。 在搜索的配置文件中，将 <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> 删除在指定参数值之前或之前出现的任何配置文件 `userInactiveSinceDate` 。

 <xref:System.Web.Profile.ProfileManager.DeleteInactiveProfiles%2A>方法调用 <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> 默认配置文件提供程序的方法。 默认配置文件提供程序是使用 `defaultProvider` [配置文件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) 配置元素的属性指定的。 如果用户配置文件包含由配置文件提供程序（而不是默认提供程序）管理的属性，则不会删除其他数据源中的配置文件信息。 若要删除由默认提供程序以外的配置文件提供程序管理的不活动配置文件，请使用属性获取对配置文件提供程序的引用， <xref:System.Web.Profile.ProfileManager.Providers%2A> 并 <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> 直接调用提供程序的方法。



## Examples
 下面的代码示例演示了管理不活动配置文件的 ASP.NET 页。 提供了一个按钮以删除指定天数内未使用的所有配置文件，因此这些配置文件被视为不活动。

> [!IMPORTANT]
>  此示例包含一个文本框，该文本框接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteProfile">
      <MemberSignature Language="C#" Value="public static bool DeleteProfile (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteProfile(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteProfile (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteProfile(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member DeleteProfile : string -&gt; bool" Usage="System.Web.Profile.ProfileManager.DeleteProfile username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要删除的配置文件的用户名。</param>
        <summary>从数据源中删除指定用户名的配置文件。</summary>
        <returns>如果找到并删除了用户配置文件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A>方法 `username` 从指定的数据源中删除指定的的用户配置文件的所有配置文件信息和属性 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> 。

 <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A>方法调用 <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> 默认配置文件提供程序的方法以执行删除操作。 默认配置文件提供程序是使用 `defaultProvider` [配置文件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) 配置元素的属性指定的。 如果用户配置文件包含由配置文件提供程序（而不是默认提供程序）管理的属性，则不会删除它们。 若要删除由配置文件提供程序（而不是默认提供程序）管理的配置文件属性，请使用属性获取对配置文件提供程序的引用， <xref:System.Web.Profile.ProfileManager.Providers%2A> 并 <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> 直接调用提供程序的方法。



## Examples
 下面的代码示例演示了管理不活动配置文件的 ASP.NET 页。 <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A>选择要删除的一个配置文件时，将调用方法。 配置文件是否被视为处于不活动状态基于为 `userInactiveSinceDate` 传递给方法的参数值指定的日期 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> 。

> [!IMPORTANT]
>  此示例包含一个文本框，该文本框接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.Profile.ProfileManager#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteProfilecs.aspx#10)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteProfilevb.aspx#10)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 为空字符串 ("") 或者包含一个逗号。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> 为 <see langword="null" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>从数据源中删除提供的一系列配置文件的配置文件属性和信息。</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteProfiles (string[] usernames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteProfiles(string[] usernames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteProfiles (usernames As String()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DeleteProfiles(cli::array &lt;System::String ^&gt; ^ usernames);" />
      <MemberSignature Language="F#" Value="static member DeleteProfiles : string[] -&gt; int" Usage="System.Web.Profile.ProfileManager.DeleteProfiles usernames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">要删除的配置文件的用户名字符串数组。</param>
        <summary>删除提供的一系列用户名的配置文件属性和信息。</summary>
        <returns>从数据源中删除的配置文件的数目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A>方法从属性指定的应用程序的数据源中删除指定配置文件的所有配置文件信息和属性 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> 。 要删除的配置文件列表指定为用户名的字符串数组。 如果参数中的用户名的配置文件属性和信息在数据源中存在 `usernames` ，则会将其删除。

 返回值可能不同于指定数组的长度 `usernames` 。 这表明指定数组中的某些配置文件 `usernames` 已从数据存储中删除。

 <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A>方法调用 <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> 默认配置文件提供程序的方法。 默认配置文件提供程序是使用 `defaultProvider` [配置文件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) 配置元素的属性指定的。 如果用户配置文件包含由配置文件提供程序（而不是默认提供程序）管理的属性，则不会删除它们。 若要删除由配置文件提供程序（而不是默认提供程序）管理的配置文件属性，请使用属性获取对配置文件提供程序的引用， <xref:System.Web.Profile.ProfileManager.Providers%2A> 并 <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> 直接调用提供程序的方法。



## Examples
 下面的代码示例演示了管理不活动配置文件的 ASP.NET 页。 <xref:System.Web.UI.WebControls.GridView>控件显示返回的不活动配置文件。 控件的每一行 <xref:System.Web.UI.WebControls.GridView> 都包含一个按钮，该按钮通过调用方法从数据源中删除该行的配置文件 <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> 。

> [!IMPORTANT]
>  此示例包含一个文本框，该文本框接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="usernames" /> 的长度为零。

- 或 -

<paramref name="usernames" /> 中的一个项目是空字符串 ("") 或包含逗号。

- 或 -

<paramref name="usernames" /> 中的两个或更多个项目具有相同的值。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernames" /> 为 <see langword="null" />。

- 或 -

<paramref name="usernames" /> 中的一个项目为 <see langword="null" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteProfiles (System.Web.Profile.ProfileInfoCollection profiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteProfiles(class System.Web.Profile.ProfileInfoCollection profiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteProfiles (profiles As ProfileInfoCollection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DeleteProfiles(System::Web::Profile::ProfileInfoCollection ^ profiles);" />
      <MemberSignature Language="F#" Value="static member DeleteProfiles : System.Web.Profile.ProfileInfoCollection -&gt; int" Usage="System.Web.Profile.ProfileManager.DeleteProfiles profiles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profiles" Type="System.Web.Profile.ProfileInfoCollection" />
      </Parameters>
      <Docs>
        <param name="profiles">一个 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，包含要删除的配置文件的配置文件信息。</param>
        <summary>从数据源中删除提供的一系列配置文件的配置文件属性和信息。</summary>
        <returns>从数据源中删除的配置文件的数目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A>方法从属性指定的应用程序的数据源中删除指定配置文件的所有配置文件信息和属性 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> 。 使用作为参数传递的来指定要删除的配置文件的列表 <xref:System.Web.Profile.ProfileInfoCollection> `profiles` 。 <xref:System.Web.Profile.ProfileInfoCollection>可以从 <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> 、 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> 、 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> 和 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> 方法返回。

 请注意，返回值可能与 <xref:System.Web.Profile.ProfileInfoCollection.Count%2A> 提供的的值不同 <xref:System.Web.Profile.ProfileInfoCollection> 。 这表明指定中的某些配置文件 <xref:System.Web.Profile.ProfileInfoCollection> 已从数据存储中删除。

 <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A>方法调用 <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A?displayProperty=nameWithType> 默认配置文件提供程序的方法。 默认配置文件提供程序是使用 `defaultProvider` [配置文件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) 配置元素的属性指定的。 如果用户配置文件包含由配置文件提供程序（而不是默认提供程序）管理的属性，则不会删除它们。 若要删除由配置文件提供程序（而不是默认提供程序）管理的配置文件属性，请使用属性获取对配置文件提供程序的引用， <xref:System.Web.Profile.ProfileManager.Providers%2A> 并 <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> 直接调用提供程序的方法。



## Examples
 下面的代码示例允许用户使用和方法搜索配置文件 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> 。 然后，用户可以通过调用方法删除返回的配置文件 <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> 。

> [!IMPORTANT]
>  此示例包含一个文本框，该文本框接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="profiles" /> 的 <see cref="P:System.Web.Profile.ProfileInfoCollection.Count" /> 值为零。

- 或 -

<paramref name="profiles" /> 中的一个 <see cref="T:System.Web.Profile.ProfileInfo" /> 对象具有一个为空字符串 ("") 或包含逗号的 <see cref="P:System.Web.Profile.ProfileInfo.UserName" />。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="profiles" /> 为 <see langword="null" />。

- 或 -

<paramref name="profiles" /> 中的一个 <see cref="T:System.Web.Profile.ProfileInfo" /> 对象具有一个为 <see langword="null" /> 的 <see cref="P:System.Web.Profile.ProfileInfo.UserName" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public static bool Enabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool Enabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool" Usage="System.Web.Profile.ProfileManager.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否为应用程序启用用户配置文件。</summary>
        <value>如果启用了用户配置文件，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 `enabled` [配置文件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) 配置元素的属性为应用程序启用用户配置文件。



## Examples
 下面的代码示例显示了 ASP.NET 应用程序的[system.web](/dotnet/framework/configure-apps/file-schema/web/system-web-element-web-settings) Web.config 节中的[profile](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100))元素，用户配置文件已启用。

```
<profile enabled="true" defaultProvider="SqlProvider">
  <providers>
    <add name="SqlProvider"
      type="System.Web.Profile.SqlProfileProvider"
      connectionStringName="SqlServices"
      applicationName="MyApplication" />
  </providers>
</profile>
```

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindInactiveProfilesByUserName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>检索配置文件的配置文件信息，在这些配置文件中，上次活动日期与指定的日期和时间相同或在其之前，并且配置文件的用户名与指定的名称匹配。</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindInactiveProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindInactiveProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, userInactiveSinceDate As DateTime) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindInactiveProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member FindInactiveProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string * DateTime -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName (authenticationOption, usernameToMatch, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption"><see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 枚举值之一，它指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回两者。</param>
        <param name="usernameToMatch">要搜索的用户名。</param>
        <param name="userInactiveSinceDate">一个 <see cref="T:System.DateTime" />，确定将哪些用户配置文件视为处于不活动状态。 如果用户配置文件的 <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> 与此日期和时间相同，或在此日期和时间之前，则此配置文件被视为处于不活动状态。</param>
        <summary>检索所有配置文件的配置文件信息，在这些配置文件中，上次活动日期与指定的日期和时间相同或在其之前，而且配置文件的用户名与指定的名称匹配。</summary>
        <returns>包含不活动配置文件的用户配置文件信息的 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，这些不活动配置文件中的用户名与提供的 <paramref name="usernameToMatch" /> 参数相匹配。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法用于为配置文件中的属性指定的应用程序检索所有未使用的用户配置文件的配置文件信息 `applicationName` 。 此方法将仅检索配置文件的用户名与提供的参数值匹配的配置文件 `usernameToMatch` 。 使用 `authenticationOption` 参数来指定是只想要搜索匿名配置文件、仅限经过身份验证的配置文件还是要搜索的所有配置文件。 在搜索配置文件中，将返回任何配置文件，该配置文件 <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> 在指定的参数值上或之前发生 `userInactiveSinceDate` 。

 可以使用 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%28System.Web.Profile.ProfileAuthenticationOption%2CSystem.String%2CSystem.DateTime%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%29> 采用附加 `pageIndex` 参数和参数的方法的重载在数据页中检索此信息 `pageSize` 。

> [!NOTE]
>  你的配置文件提供程序可能支持参数中的通配符 `usernameToMatch` 。 例如，类的 <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> 方法 <xref:System.Web.Profile.SqlProfileProvider> 支持参数中的通配符 `usernameToMatch` 。

 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法调用 <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A?displayProperty=nameWithType> 默认配置文件提供程序的方法。 默认配置文件提供程序是使用 `defaultProvider` [配置文件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) 配置元素的属性指定的。 如果用户配置文件包含由配置文件提供程序（而不是默认提供程序）管理的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供程序（而不是默认提供程序）管理的非活动配置文件，请使用属性获取对配置文件提供程序的引用， <xref:System.Web.Profile.ProfileManager.Providers%2A> 并 <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> 直接调用提供程序的方法。



## Examples
 下面的代码示例允许用户提供 `usernameToMatch` 值和 <xref:System.Web.Profile.ProfileAuthenticationOption> 枚举值，并检索任何匹配配置文件的配置文件信息。 该示例允许用户指定是否只返回非活动配置文件。 如果用户仅指定不活动的配置文件，则 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> 调用方法; 否则，将 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> 调用方法。

> [!IMPORTANT]
>  此示例包含一个文本框，该文本框接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.Profile.ProfileManager#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserName2cs.aspx#8)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserName2vb.aspx#8)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> 为空字符串 ("")。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="FindInactiveProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindInactiveProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, userInactiveSinceDate As DateTime, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindInactiveProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindInactiveProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string * DateTime * int * int * int -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName (authenticationOption, usernameToMatch, userInactiveSinceDate, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption"><see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 值之一，指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回这两种类型的配置文件。</param>
        <param name="usernameToMatch">要搜索的用户名。</param>
        <param name="userInactiveSinceDate">一个 <see cref="T:System.DateTime" />，确定将哪些用户配置文件视为处于不活动状态。 如果用户配置文件的 <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> 与此日期和时间相同，或在此日期和时间之前，则此配置文件被视为处于不活动状态。</param>
        <param name="pageIndex">要返回的结果页的索引。 <paramref name="pageIndex" /> 从零开始。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">此方法返回时，会包含一个表示配置文件总数的整数。 此参数未经初始化即被传递。</param>
        <summary>以分页数据的形式检索一些配置文件的配置文件信息，在这些配置文件中，上次活动日期与指定的日期和时间相同或在其之前，而且配置文件的用户名与指定的名称匹配。</summary>
        <returns>包含不活动配置文件的用户配置文件信息的 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，这些不活动配置文件中的用户名与提供的 <paramref name="usernameToMatch" /> 参数相匹配。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法用于为配置文件中的属性指定的应用程序检索未使用的用户配置文件的配置文件信息 `applicationName` 。 此方法将仅检索用户名与提供的参数值匹配的配置文件 `usernameToMatch` 。 使用 `authenticationOption` 参数来指定是只想要搜索匿名配置文件、仅限经过身份验证的配置文件还是要搜索的所有配置文件。 在搜索配置文件中，返回的任何配置文件都 <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> 在指定的参数值上或之前发生 `userInactiveSinceDate` 。

 返回的结果 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> 是由 `pageIndex` 和参数约束的 `pageSize` 。 `pageSize`参数标识 <xref:System.Web.Profile.ProfileInfo> 要在集合中返回的对象的最大数目 <xref:System.Web.Profile.ProfileInfoCollection> 。 `pageIndex`参数标识要返回的结果页; 0 标识第一页。 `totalRecords`参数是一个 `out` 参数，该参数设置为 `applicationName` 基于 `authenticationOption` 和参数配置的非活动用户配置文件的总数 `userInactiveSinceDate` 。 例如，如果配置了13个用户 `applicationName` ，并且 `pageIndex` 值为1且为 `pageSize` 5，则 <xref:System.Web.Profile.ProfileInfoCollection> 返回的将包含第六个到第10个非活动配置文件。 `totalRecords`参数将设置为13。

 请注意，您的配置文件提供程序可能支持参数中的通配符 `usernameToMatch` 。 例如，类的 <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> 方法 <xref:System.Web.Profile.SqlProfileProvider> 支持参数中的通配符 `usernameToMatch` 。

 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法调用 <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> 默认配置文件提供程序的方法。 默认配置文件提供程序是使用 `defaultProvider` [配置文件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) 配置元素的属性指定的。 如果用户配置文件包含由配置文件提供程序（而不是默认提供程序）管理的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供程序（而不是默认提供程序）管理的非活动配置文件，请使用属性获取对配置文件提供程序的引用， <xref:System.Web.Profile.ProfileManager.Providers%2A> 并 <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> 直接调用提供程序的方法。



## Examples
 下面的代码示例允许用户提供 `usernameToMatch` 值和 <xref:System.Web.Profile.ProfileAuthenticationOption> 值，并检索任何匹配配置文件的配置文件信息。 该示例允许用户指定是否以独占方式返回非活动配置文件。 如果用户仅指定不活动的配置文件，则 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> 调用方法; 否则，将 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> 调用方法。

> [!IMPORTANT]
>  此示例包含一个文本框，该文本框接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> 为空字符串 ("")。

- 或 -

 <paramref name="pageIndex" /> 小于零。

- 或 -

 <paramref name="pageSize" /> 小于 1。

- 或 -

 <paramref name="pageIndex" /> 和 <paramref name="pageSize" /> 的乘积大于 <see cref="F:System.Int32.MaxValue" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindProfilesByUserName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>检索用户名与指定名称匹配的配置文件的配置文件信息。</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="static member FindProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindProfilesByUserName (authenticationOption, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationOption"><see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 枚举值之一，它指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回两者。</param>
        <param name="usernameToMatch">要搜索的用户名。</param>
        <summary>检索用户名与指定名称匹配的配置文件的所有配置文件信息。</summary>
        <returns>包含配置文件中的用户配置文件信息的 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，其中的用户名与提供的 <paramref name="usernameToMatch" /> 参数相匹配。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>方法返回一个列表，其中的用户名与所配置的属性值的所提供的 `usernameToMatch` 参数值相匹配 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> 。 使用 `authenticationOption` 参数来指定是只想要搜索匿名配置文件、仅限经过身份验证的配置文件还是要搜索的所有配置文件。

 使用 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> 采用附加 `pageIndex` 参数和参数的方法的重载，可以在数据页中检索用户配置文件的配置文件信息 `pageSize` 。

 请注意，您的配置文件提供程序可能支持参数中的通配符 `usernameToMatch` 。 例如，类的 <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> 方法 <xref:System.Web.Profile.SqlProfileProvider> 支持参数中的通配符 `usernameToMatch` 。

 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>方法调用 <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> 默认配置文件提供程序的方法。 默认配置文件提供程序是使用 `defaultProvider` [配置文件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) 配置元素的属性指定的。 如果用户配置文件包含由配置文件提供程序（而不是默认提供程序）管理的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供程序（而不是默认提供程序）管理的配置文件，请使用属性获取对配置文件提供程序的引用， <xref:System.Web.Profile.ProfileManager.Providers%2A> 并 <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> 直接调用提供程序的方法。



## Examples
 下面的代码示例允许用户提供 `usernameToMatch` 值和 <xref:System.Web.Profile.ProfileAuthenticationOption> 枚举值，并检索任何匹配配置文件的配置文件信息。 该示例允许用户指定是否以独占方式返回非活动配置文件。 如果用户仅指定不活动的配置文件，则 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> 调用方法; 否则，将 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> 调用方法。

> [!IMPORTANT]
>  此示例包含一个文本框，该文本框接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.Profile.ProfileManager#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserName2cs.aspx#8)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserName2vb.aspx#8)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> 为空字符串 ("")。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="FindProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string * int * int * int -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindProfilesByUserName (authenticationOption, usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption"><see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 枚举值之一，它指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回两者。</param>
        <param name="usernameToMatch">要搜索的用户名。</param>
        <param name="pageIndex">要返回的结果页的索引。 <paramref name="pageIndex" /> 从零开始。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">此方法返回时，会包含一个表示配置文件总数的整数。 此参数未经初始化即被传递。</param>
        <summary>以分页数据的形式检索用户名与指定名称匹配的配置文件的配置文件信息。</summary>
        <returns>包含配置文件中的用户配置文件信息的 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，其中的用户名与提供的 <paramref name="usernameToMatch" /> 参数相匹配。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 方法返回配置文件的配置文件信息的列表，该配置 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> 文件的用户名与 `usernameToMatch` 所提供的的参数值相匹配 <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> 。 使用 `authenticationOption` 参数来指定是只想要搜索匿名配置文件、仅限经过身份验证的配置文件还是要搜索的所有配置文件。

 请注意，您的配置文件提供程序可能支持参数中的通配符 `usernameToMatch` 。 例如，类的 <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> 方法 <xref:System.Web.Profile.SqlProfileProvider> 支持参数中的通配符 `usernameToMatch` 。

 返回的结果 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> 是由 `pageIndex` 和参数约束的 `pageSize` 。 `pageSize`参数标识 <xref:System.Web.Profile.ProfileInfo> 要在中返回的对象的最大数目 <xref:System.Web.Profile.ProfileInfoCollection> 。 `pageIndex`参数标识要返回的结果页; 零标识第一页。 `totalRecords`参数是一个 `out` 参数，该参数设置为 `applicationName` 基于提供的配置文件中的属性指定的应用程序的非活动用户配置文件总数 `authenticationOption` 。 例如，如果配置了13个用户 `applicationName` ，并且 `pageIndex` 值为1且为 `pageSize` 5，则 <xref:System.Web.Profile.ProfileInfoCollection> 返回的将包含第六个到第10个配置文件。 `totalRecords`参数将设置为13。

 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A>方法调用 <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> 默认配置文件提供程序的方法。 默认配置文件提供程序是使用 `defaultProvider` [配置文件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) 配置元素的属性指定的。 如果用户配置文件包含由配置文件提供程序（而不是默认提供程序）管理的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供程序（而不是默认提供程序）管理的配置文件，请使用属性获取对配置文件提供程序的引用， <xref:System.Web.Profile.ProfileManager.Providers%2A> 并 <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> 直接调用提供程序的方法。



## Examples
 下面的代码示例允许用户提供 `usernameToMatch` 值和 <xref:System.Web.Profile.ProfileAuthenticationOption> 并检索任何匹配配置文件的配置文件信息。 该示例允许用户指定是否以独占方式返回非活动配置文件。 如果用户仅指定不活动的配置文件，则 <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> 调用方法; 否则，将 <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> 调用方法。

> [!IMPORTANT]
>  此示例包含一个文本框，该文本框接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> 为空字符串 ("")。

- 或 -

 <paramref name="pageIndex" /> 小于零。

- 或 -

 <paramref name="pageSize" /> 小于 1。

- 或 -

 <paramref name="pageIndex" /> 和 <paramref name="pageSize" /> 的乘积大于 <see cref="F:System.Int32.MaxValue" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllInactiveProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>检索配置文件的用户配置文件数据，在这些配置文件中，上次活动日期与指定的日期和时间相同或在其之前。</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllInactiveProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member GetAllInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllInactiveProfiles (authenticationOption, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption"><see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 枚举值之一，它指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回两者。</param>
        <param name="userInactiveSinceDate">一个 <see cref="T:System.DateTime" />，确定将哪些用户配置文件视为处于不活动状态。 如果用户配置文件的 <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> 与此日期和时间相同，或在此日期和时间之前，则此配置文件被视为处于不活动状态。</param>
        <summary>对于上次活动日期与指定的日期和时间相同或在其之前的配置文件，检索它们的所有用户配置文件数据。</summary>
        <returns>一个 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，包含有关不活动的配置文件的用户配置文件信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>方法用于从数据源 `applicationName` 中为配置文件中的属性指定的应用程序的所有未使用的用户配置文件检索配置文件信息。 使用 `authenticationOption` 参数来指定是只想要搜索匿名配置文件、仅限经过身份验证的配置文件还是要搜索的所有配置文件。 在搜索配置文件中，返回的任何配置文件都 <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> 在指定的参数值上或之前发生 `userInactiveSinceDate` 。

 使用 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> 采用附加 `pageIndex` 参数和参数的方法的重载，可以在数据页中检索非活动用户配置文件的配置文件信息 `pageSize` 。

 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>方法调用 <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> 默认配置文件提供程序的方法。 默认配置文件提供程序是使用 `defaultProvider` [配置文件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) 配置元素的属性指定的。 如果用户配置文件包含由配置文件提供程序（而不是默认提供程序）管理的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供程序（而不是默认提供程序）管理的未使用的配置文件，请使用属性获取对配置文件提供程序的引用， <xref:System.Web.Profile.ProfileManager.Providers%2A> 并 <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> 直接调用提供程序的方法。



## Examples
 下面的代码示例演示了管理不活动配置文件的 ASP.NET 页。 提供了一个用于删除所有不活动配置文件的按钮。 配置文件是否被视为不活动取决于为参数指定的日期 `userInactiveSinceDate` 。

> [!IMPORTANT]
>  此示例包含一个文本框，该文本框接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.Profile.ProfileManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfiles2cs.aspx#7)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfiles2vb.aspx#7)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllInactiveProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member GetAllInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime * int * int * int -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllInactiveProfiles (authenticationOption, userInactiveSinceDate, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption"><see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 枚举值之一，它指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回两者。</param>
        <param name="userInactiveSinceDate">一个 <see cref="T:System.DateTime" />，确定将哪些用户配置文件视为处于不活动状态。 如果用户配置文件的 <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> 与此日期和时间相同，或在此日期和时间之前，则此配置文件被视为处于不活动状态。</param>
        <param name="pageIndex">要返回的结果页的索引。 <paramref name="pageIndex" /> 从零开始。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">此方法返回时，会包含一个表示配置文件总数的整数。 此参数未经初始化即被传递。</param>
        <summary>对于上次活动日期与指定的日期和时间相同或在其之前的用户配置文件，检索它们的 <see cref="T:System.Web.Profile.ProfileInfo" /> 对象的页面。</summary>
        <returns>一个 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，包含有关不活动的配置文件的用户配置文件信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>方法用于从数据源 `applicationName` 中为配置文件中的属性指定的应用程序的未使用用户配置文件检索配置文件信息。 使用 `authenticationOption` 参数来指定是只想要搜索匿名配置文件、仅限经过身份验证的配置文件还是要搜索的所有配置文件。 在搜索配置文件中，返回的任何配置文件都在 <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> 指定 `userInactiveSinceDate` 参数值之前发生。

 返回的结果 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> 是由 `pageIndex` 和参数约束的 `pageSize` 。 `pageSize`参数标识 <xref:System.Web.Profile.ProfileInfo> 要在中返回的对象的最大数目 <xref:System.Web.Profile.ProfileInfoCollection> 。 `pageIndex`参数标识要返回的结果页; 零标识第一页。 `totalRecords`参数是一个 `out` 参数，该参数设置为 `applicationName` 基于 `authenticationOption` 和参数配置的非活动用户配置文件的总数 `userInactiveSinceDate` 。 例如，如果配置了13个用户 `applicationName` ，并且 `pageIndex` 值为 `pageSize` 5 个，则返回的 <xref:System.Web.Profile.ProfileInfoCollection> 将包含第六个非活动配置文件。 `totalRecords`参数将设置为13。

 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>方法调用 <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> 默认配置文件提供程序的方法。 默认配置文件提供程序是使用 `defaultProvider` [配置文件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) 配置元素的属性指定的。 如果用户配置文件包含由配置文件提供程序（而不是默认提供程序）管理的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供程序（而不是默认提供程序）管理的配置文件，请使用属性获取对配置文件提供程序的引用， <xref:System.Web.Profile.ProfileManager.Providers%2A> 并 <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> 直接调用提供程序的方法。



## Examples
 下面的代码示例演示了管理不活动配置文件的 ASP.NET 网页。 提供了一个用于删除所有不活动配置文件的按钮。 配置文件是否被视为不活动取决于为参数指定的日期 `userInactiveSinceDate` 。

> [!IMPORTANT]
>  此示例包含一个文本框，该文本框接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在数据源中检索配置文件的用户配置文件数据。</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllProfiles (authenticationOption As ProfileAuthenticationOption) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="F#" Value="static member GetAllProfiles : System.Web.Profile.ProfileAuthenticationOption -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllProfiles authenticationOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
      </Parameters>
      <Docs>
        <param name="authenticationOption"><see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 枚举值之一，它指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回两者。</param>
        <summary>在数据源中检索配置文件的用户配置文件数据。</summary>
        <returns>一个 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，包含数据源中所有配置文件的用户配置文件信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>方法用于从 `applicationName` 配置文件中的属性指定的应用程序的数据源检索配置文件信息。 使用 `authenticationOption` 参数来指定是只想要搜索匿名配置文件、仅限经过身份验证的配置文件还是要搜索的所有配置文件。

 可以 <xref:System.Web.Profile.ProfileInfo> 使用 <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> 采用附加 `pageIndex` 参数和参数的方法的重载来检索用户配置文件的对象页 `pageSize` 。

 <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>方法调用 <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> 默认配置文件提供程序的方法。 默认配置文件提供程序是使用 `defaultProvider` [配置文件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) 配置元素的属性指定的。 如果用户配置文件包含由配置文件提供程序（而不是默认提供程序）管理的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供程序（而不是默认提供程序）管理的配置文件，请使用属性获取对配置文件提供程序的引用， <xref:System.Web.Profile.ProfileManager.Providers%2A> 并 <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> 直接调用提供程序的方法。



## Examples
 下面的代码示例显示配置的所有配置文件的配置文件信息 `applicationName` 。

 [!code-aspx-csharp[System.Web.Profile.ProfileManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfiles2cs.aspx#6)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfiles2vb.aspx#6)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllProfiles (authenticationOption As ProfileAuthenticationOption, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member GetAllProfiles : System.Web.Profile.ProfileAuthenticationOption * int * int * int -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllProfiles (authenticationOption, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption"><see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 枚举值之一，它指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回两者。</param>
        <param name="pageIndex">要返回的结果页的索引。 <paramref name="pageIndex" /> 从零开始。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">此方法返回时，会包含一个表示配置文件总数的整数。 此参数未经初始化即被传递。</param>
        <summary>检索用户配置文件数据的页面。</summary>
        <returns>一个 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，包含数据源中所有配置文件的用户配置文件信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>方法用于从 `applicationName` 配置文件中的属性指定的应用程序的数据源检索配置文件信息。 使用 `authenticationOption` 参数来指定是只想要搜索匿名配置文件、仅限经过身份验证的配置文件还是要搜索的所有配置文件。

 返回的结果 <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> 是由 `pageIndex` 和参数约束的 `pageSize` 。 `pageSize`参数标识 <xref:System.Web.Profile.ProfileInfo> 要在中返回的对象的最大数目 <xref:System.Web.Profile.ProfileInfoCollection> 。 `pageIndex`参数标识要返回的结果页; 零标识第一页。 `totalRecords`参数是一个 `out` 参数，该参数设置为基于提供的配置的非活动用户配置文件的总数 `applicationName` `authenticationOption` 。 例如，如果配置了13个用户 `applicationName` ，并且 `pageIndex` 值为5的一个，则返回的 `pageSize` <xref:System.Web.Profile.ProfileInfoCollection> 将包含第六个到第10个配置文件。 `totalRecords`参数将设置为13。

 <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>方法调用 <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> 默认配置文件提供程序的方法。 默认配置文件提供程序是使用 `defaultProvider` [配置文件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) 配置元素的属性指定的。 如果用户配置文件包含由配置文件提供程序（而不是默认提供程序）管理的属性，则不会搜索其他配置文件提供程序的数据源。 若要查找由配置文件提供程序（而不是默认提供程序）管理的配置文件，请使用属性获取对配置文件提供程序的引用， <xref:System.Web.Profile.ProfileManager.Providers%2A> 并 <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> 直接调用提供程序的方法。



## Examples
 下面的代码示例显示在数据页中配置的所有配置文件的配置文件信息 `applicationName` 。

 [!code-aspx-csharp[System.Web.Profile.ProfileManager#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfilescs.aspx#3)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfilesvb.aspx#3)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfInactiveProfiles">
      <MemberSignature Language="C#" Value="public static int GetNumberOfInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member GetNumberOfInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime -&gt; int" Usage="System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles (authenticationOption, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption"><see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 枚举值之一，它指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回两者。</param>
        <param name="userInactiveSinceDate">一个 <see cref="T:System.DateTime" /> 对象，确定将哪些用户配置文件视为处于不活动状态。 如果用户配置文件的 <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> 与此日期和时间相同，或在此日期和时间之前，则此配置文件被视为处于不活动状态。</param>
        <summary>获取上次活动日期与指定日期相同或在其之前的配置文件的数目。</summary>
        <returns>数据源中上次活动日期出现在指定日期和时间之前的配置文件的数量。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles%2A>方法用于从配置文件中的属性指定的应用程序的数据源检索所有未使用的用户配置文件的计数 `applicationName` 。 使用 `authenticationOption` 参数来指定是只想要搜索匿名配置文件、仅限经过身份验证的配置文件还是要搜索的所有配置文件。 在搜索的配置文件中，所有配置文件都是 <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> 在指定的参数值之前或之前发生的计数 `userInactiveSinceDate` 。



## Examples
 下面的代码示例允许用户根据搜索条件查看和删除活动和非活动配置文件的信息。 使用方法的结果显示非活动配置文件的计数 <xref:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles%2A> 。

> [!IMPORTANT]
>  此示例包含一个文本框，该文本框接受用户输入，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfProfiles">
      <MemberSignature Language="C#" Value="public static int GetNumberOfProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfProfiles (authenticationOption As ProfileAuthenticationOption) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="F#" Value="static member GetNumberOfProfiles : System.Web.Profile.ProfileAuthenticationOption -&gt; int" Usage="System.Web.Profile.ProfileManager.GetNumberOfProfiles authenticationOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
      </Parameters>
      <Docs>
        <param name="authenticationOption"><see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 枚举值之一，它指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回两者。</param>
        <summary>获取数据源中的配置文件数量。</summary>
        <returns>数据源中的配置文件数量。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Profile.ProfileManager.GetNumberOfProfiles%2A>方法用于从配置文件中的属性指定的应用程序的数据源中检索所有用户配置文件的计数 `applicationName` 。 使用 `authenticationOption` 参数来指定是只想要搜索匿名配置文件、仅限经过身份验证的配置文件还是要搜索的所有配置文件。



## Examples
 下面的代码示例显示配置的所有配置文件的配置文件信息 `applicationName` ，并返回配置文件的数目。

 [!code-aspx-csharp[System.Web.Profile.ProfileManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfiles2cs.aspx#6)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfiles2vb.aspx#6)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Profile.ProfileProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Provider As ProfileProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Profile::ProfileProvider ^ Provider { System::Web::Profile::ProfileProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Profile.ProfileProvider" Usage="System.Web.Profile.ProfileManager.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对应用程序的默认配置文件提供程序的引用。</summary>
        <value>应用程序的默认配置文件提供程序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.Profile.ProfileManager.Provider%2A> 属性可以直接引用应用程序的默认配置文件提供程序。 这通常用于访问配置文件提供程序的自定义成员，这些成员不属于 <xref:System.Web.Profile.ProfileProvider> 抽象基类。



## Examples
 下面的代码示例列出了默认配置文件提供程序的属性。

 [!code-aspx-csharp[System.Web.Profile.ProfileManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/Providercs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/Providervb.aspx#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">在不具有起码的 <see cref="P:System.Web.Profile.ProfileManager.Provider" /> 权限的情况下尝试获取 <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> 属性值。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Profile.ProfileProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Providers As ProfileProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Profile::ProfileProviderCollection ^ Providers { System::Web::Profile::ProfileProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Web.Profile.ProfileProviderCollection" Usage="System.Web.Profile.ProfileManager.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 ASP.NET 应用程序的配置文件提供程序的集合。</summary>
        <value>为 ASP.NET 应用程序配置的配置文件提供程序的 <see cref="T:System.Web.Profile.ProfileProviderCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.Profile.ProfileManager.Providers%2A>属性引用为应用程序启用的所有配置文件提供程序，包括在计算机配置中添加的提供程序和在所有 Web.config 文件中添加的提供程序。 您可以使用配置文件中[配置](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100))文件部分的 "[提供](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164654(v%3dvs.100))程序" 元素控制哪些配置文件提供程序可用于应用程序。 例如，以下 Web.config 文件会删除在父配置文件中指定的配置文件提供程序，并添加 <xref:System.Web.Profile.SqlProfileProvider> 实例作为应用程序的配置文件提供程序。

```
<configuration>
  <connectionStrings>
    <add name="SqlServices" connectionString=
      "Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />
  </connectionStrings>
  <system.web>
    <profile enabled="true" defaultProvider="SqlProvider">
      <providers>
        <clear />
        <add name="SqlProvider"
          type="System.Web.Profile.SqlProfileProvider"
          connectionStringName="SqlServices"
          applicationName="MyApplication" />
      </providers>
    </profile>
  </system.web>
</configuration>
```

 指定 [配置文件](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) 部分时，必须通过设置属性来指定默认提供程序 `defaultProvider` 。 如果未在 Web.config 文件中指定节，则将使用计算机配置中的值，并将 <xref:System.Web.Profile.SqlProfileProvider> 名为 AspNetSqlProvider 的实例建立为默认提供程序。

 你可以从集合中获取对提供程序的强类型引用 <xref:System.Web.Profile.ProfileManager.Providers%2A> ，方法是按名称对配置文件提供程序进行索引，并将其强制转换为所需的类型。



## Examples
 下面的代码示例列出了为应用程序以及其各自的类型启用的提供程序。

 [!code-aspx-csharp[System.Web.Profile.ProfileManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/Providerscs.aspx#9)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/Providersvb.aspx#9)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">在不具有起码的 <see cref="P:System.Web.Profile.ProfileManager.Providers" /> 权限的情况下尝试获取 <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> 属性值。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
  </Members>
</Type>
