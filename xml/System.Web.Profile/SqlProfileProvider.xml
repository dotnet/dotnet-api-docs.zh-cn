<Type Name="SqlProfileProvider" FullName="System.Web.Profile.SqlProfileProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="79a4609fccbe2f9e918b51cfb871fa33ca093260" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86844705" /></Metadata><TypeSignature Language="C#" Value="public class SqlProfileProvider : System.Web.Profile.ProfileProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlProfileProvider extends System.Web.Profile.ProfileProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.SqlProfileProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlProfileProvider&#xA;Inherits ProfileProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlProfileProvider : System::Web::Profile::ProfileProvider" />
  <TypeSignature Language="F#" Value="type SqlProfileProvider = class&#xA;    inherit ProfileProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Profile.ProfileProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>对 ASP.NET 应用程序的配置文件信息在 SQL Server 数据库中的存储进行管理。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 配置文件用于存储和检索数据源（如数据库）中的用户设置。 使用当前的属性访问用户配置文件 <xref:System.Web.HttpContext.Profile%2A> <xref:System.Web.HttpContext> 。 配置文件信息和属性值使用配置文件提供程序进行管理。  
  
 <xref:System.Web.Profile.SqlProfileProvider>ASP.NET 使用类来存储和检索使用 SQL Server 数据库的 ASP.NET 应用程序的配置文件设置。 若要使用 <xref:System.Web.Profile.SqlProfileProvider> ，必须先创建所使用的 SQL Server 数据库 <xref:System.Web.Profile.SqlProfileProvider> 。 若要创建使用的数据库 <xref:System.Web.Profile.SqlProfileProvider> ，请运行在 [*drive*：] \WINDOWS\Microsoft.NET\Framework 文件夹中找到的 aspnet_regsql.exe 工具， \\ `2.0versionNumber` 并指定 **-A p**选项。 以下命令演示了如何使用 aspnet_regsql.exe 可执行文件：  
  
```  
aspnet_regsql.exe -A p  
```  
  
 上面的示例未指定创建的数据库的名称，因此将使用默认名称。 默认数据库名称为 Aspnetdb.mdf。  
  
 计算机配置包含一个 <xref:System.Web.Profile.SqlProfileProvider> 名为 AspNetSqlProvider 的默认实例，该实例连接到本地计算机上的 SQL Server。 您可以使用此提供程序的实例，或在 ASP.NET 应用程序的 Web.config 文件中指定自己的实例。  
  
> [!NOTE]
>  如果配置文件提供程序使用集成安全性的连接字符串进行配置，则 ASP.NET 应用程序的进程帐户必须具有连接到 SQL Server 数据库的权限。  
  
   
  
## Examples  
 下面的代码示例演示了配置为使用的 ASP.NET 应用程序的 Web.config 文件 <xref:System.Web.Profile.SqlProfileProvider> 。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx" name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
    </authorization>  
    <membership defaultProvider="SqlProvider"   
      userIsOnlineTimeWindow="15">  
      <providers>  
        <clear/>  
        <add name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          applicationName="SampleApplication"  
          enablePasswordRetrieval="true"  
          enablePasswordReset="true"  
          passwordFormat="Encrypted"  
          requiresQuestionAndAnswer="true" />  
      </providers>  
    </membership>  
  
    <profile defaultProvider="SqlProvider">  
      <providers>  
        <clear />  
        <add name="SqlProvider"  
          type="System.Web.Profile.SqlProfileProvider"  
          connectionStringName="SqlServices"  
          applicationName="SampleApplication"  
          description="SqlProfileProvider for SampleApplication" />  
      </providers>  
  
      <properties>  
        <add name="ZipCode" />  
        <add name="CityAndState" />  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlProfileProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlProfileProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.Web.Profile.SqlProfileProvider" /> 类的实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 调用 <xref:System.Web.Profile.SqlProfileProvider.%23ctor%2A> 构造函数，以 <xref:System.Web.Profile.SqlProfileProvider> 使用应用程序的配置文件中指定的值创建类的实例。 不应在代码中使用此构造函数。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.SqlProfileProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Profile.SqlProfileProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要存储和检索其配置文件信息的应用程序的名称。</summary>
        <value>要存储和检索其配置文件信息的应用程序的名称。 默认为 <see cref="P:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A>使用属性将 <xref:System.Web.Profile.SqlProfileProvider> 配置文件信息与不同的应用程序相关联。 这使多个应用程序能够使用同一个数据库来存储用户信息，而不会在重复用户之间发生冲突。 多个 ASP.NET 应用程序可以通过在属性中指定相同的值，来使用相同的用户数据库 <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> 。 <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A>可以通过编程方式设置该属性，也可以使用属性在 Web 应用程序的配置文件中以声明方式设置该属性 `applicationName` 。  
  
 如果没有为 `applicationName` Web 应用程序的配置文件中的属性指定值，则 <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> 该值将用于 ASP.NET 应用程序。 对于 non-ASP.NET 应用程序，默认值为 <xref:System.Diagnostics.ProcessModule.ModuleName%2A> 没有文件扩展名的值。  
  
> [!CAUTION]
>  由于单个默认配置文件提供程序实例用于某个对象提供的所有请求，因此 <xref:System.Web.HttpApplication> 您可以同时执行多个请求并尝试设置该 <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> 属性值。 <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A>对于多个写入，属性不是线程安全的，并且更改 <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> 属性值可能会导致应用程序的多个用户产生意外行为。 建议你避免编写允许用户设置属性的代码， <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> 除非你必须这样做。 可能需要设置属性的应用程序的一个示例 <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> 是管理多个应用程序的配置文件数据的管理应用程序。 此类应用程序应为单用户应用程序，而不是 Web 应用程序。  
  
   
  
## Examples  
 下面的代码示例演示 `system.web` ASP.NET 应用程序的 Web.config 文件部分中的元素。 它指定应用程序的 <xref:System.Web.Profile.SqlProfileProvider> 实例，并将 <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> 属性值设置为 `MyApplication` 。  
  
```  
<profile defaultProvider="SqlProvider">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Profile.SqlProfileProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
   </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">不具有 <see cref="P:System.Web.Profile.SqlProfileProvider.ApplicationName" /> ASP.NET 承载权限的调用方尝试设置 <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /> 属性。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">尝试将 <see cref="P:System.Web.Profile.SqlProfileProvider.ApplicationName" /> 属性设置为长于 256 个字符的字符串。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteInactiveProfiles">
      <MemberSignature Language="C#" Value="public override int DeleteInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 DeleteInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int DeleteInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="override this.DeleteInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime -&gt; int" Usage="sqlProfileProvider.DeleteInactiveProfiles (authenticationOption, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption"><see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 值之一，指定是删除匿名配置文件、已验证的配置文件还是同时删除这两种类型的配置文件。</param>
        <param name="userInactiveSinceDate">一个 <see cref="T:System.DateTime" />，确定将哪些用户配置文件视为处于不活动状态。 如果用户配置文件的 <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> 与此日期和时间相同，或在此日期和时间之前，则此配置文件被视为处于不活动状态。</param>
        <summary>删除上次活动日期出现在指定日期和时间之前的配置文件的用户配置文件数据。</summary>
        <returns>从数据源中删除的配置文件的数目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.SqlProfileProvider.DeleteInactiveProfiles%2A>方法用于从配置文件中的属性指定的应用程序的数据源中删除未使用的配置文件数据 `applicationName` 。 使用 `authenticationOption` 参数来指定是只想要搜索匿名配置文件、仅限经过身份验证的配置文件还是要搜索的所有配置文件。 在搜索的配置文件中，将 <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> 删除在指定参数值之前或之前出现的任何配置文件 `userInactiveSinceDate` 。  
  
 在对方法的调用过程中执行的数据库更新在 <xref:System.Web.Profile.SqlProfileProvider.DeleteInactiveProfiles%2A> 事务中进行。 如果遇到错误，则回滚事务，并且不执行任何更新。  
  
   
  
## Examples  
 下面的代码示例演示了管理不活动配置文件的 ASP.NET 页。 提供了一个按钮，用于删除自指定的日期以来未访问过的所有配置文件，以使配置文件处于非活动状态。  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>从数据源中删除配置文件属性和信息。</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public override int DeleteProfiles (string[] usernames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 DeleteProfiles(string[] usernames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.DeleteProfiles(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteProfiles (usernames As String()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int DeleteProfiles(cli::array &lt;System::String ^&gt; ^ usernames);" />
      <MemberSignature Language="F#" Value="override this.DeleteProfiles : string[] -&gt; int" Usage="sqlProfileProvider.DeleteProfiles usernames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">要删除的配置文件的用户名字符串数组。</param>
        <summary>从数据源中删除提供的一系列用户名的配置文件属性和信息。</summary>
        <returns>从数据源中删除的配置文件的数目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A>方法从 `applicationName` 配置文件中属性指定的应用程序的数据源中删除指定配置文件的所有配置文件信息和属性。 要删除的配置文件列表指定为用户名的字符串数组。 如果参数中的用户名的配置文件属性和信息在数据源中存在 `usernames` ，则会将其删除。  
  
 返回值可能不同于指定数组的长度 `usernames` 。 这表明指定数组中的某些配置文件 `usernames` 已从数据存储中删除。  
  
 在对方法的调用过程中执行的数据库更新在 <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> 事务中进行。 如果遇到错误，则回滚事务，并且不执行任何更新。  
  
   
  
## Examples  
 下面的代码示例演示了管理不活动配置文件的 ASP.NET 页。 <xref:System.Web.UI.WebControls.GridView>控件显示返回的不活动配置文件。 控件的每一行 <xref:System.Web.UI.WebControls.GridView> 都包含一个按钮，该按钮通过调用方法从数据源中删除该行的配置文件 <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> 。  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="usernames" /> 的长度为零。  
  
- 或 - 
<paramref name="usernames" /> 中的一个项目为空字符串 ("")、长度超过 256 个字符或包含逗号。  
  
- 或 - 
<paramref name="usernames" /> 中的两个或更多个项目具有相同的值。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernames" /> 为 <see langword="null" />。  
  
- 或 - 
<paramref name="usernames" /> 中的一个项目为 <see langword="null" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public override int DeleteProfiles (System.Web.Profile.ProfileInfoCollection profiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 DeleteProfiles(class System.Web.Profile.ProfileInfoCollection profiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteProfiles (profiles As ProfileInfoCollection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int DeleteProfiles(System::Web::Profile::ProfileInfoCollection ^ profiles);" />
      <MemberSignature Language="F#" Value="override this.DeleteProfiles : System.Web.Profile.ProfileInfoCollection -&gt; int" Usage="sqlProfileProvider.DeleteProfiles profiles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profiles" Type="System.Web.Profile.ProfileInfoCollection" />
      </Parameters>
      <Docs>
        <param name="profiles">一个 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，包含要删除的配置文件的配置文件信息。</param>
        <summary>从数据源中删除提供的一系列配置文件的配置文件属性和信息。</summary>
        <returns>从数据源中删除的配置文件的数目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A>方法从 `applicationName` 配置文件中属性指定的应用程序的数据源中删除指定配置文件的所有配置文件信息和属性。 使用作为参数传递的来指定要删除的配置文件的列表 <xref:System.Web.Profile.ProfileInfoCollection> `profiles` 。 <xref:System.Web.Profile.ProfileInfoCollection>可以从 <xref:System.Web.Profile.SqlProfileProvider.GetAllProfiles%2A> 、 <xref:System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles%2A> 、 <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> 和 <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> 方法返回。  
  
 返回值可能与 <xref:System.Web.Profile.ProfileInfoCollection.Count%2A> 提供的的值不同 <xref:System.Web.Profile.ProfileInfoCollection> 。 这表明在数据存储中找不到指定的中的某些配置文件 <xref:System.Web.Profile.ProfileInfoCollection> 。  
  
 在对方法的调用过程中执行的数据库更新在 <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> 事务中进行。 如果遇到错误，则回滚事务，并且不执行任何更新。  
  
   
  
## Examples  
 下面的代码示例允许用户使用和方法搜索配置文件 <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> 。 然后，用户可以通过调用方法删除返回的配置文件 <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> 。  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="profiles" /> 的 <see cref="P:System.Web.Profile.ProfileInfoCollection.Count" /> 值为零。  
  
- 或 - 
<paramref name="profiles" /> 中的一个 <see cref="T:System.Web.Profile.ProfileInfo" /> 对象具有一个为空字符串 ("")、长度超过 256 个字符或包含逗号的 <see cref="P:System.Web.Profile.ProfileInfo.UserName" />。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="profiles" /> 为 <see langword="null" />。  
  
- 或 - 
<paramref name="profiles" /> 中的一个 <see cref="T:System.Web.Profile.ProfileInfo" /> 对象具有一个为 <see langword="null" /> 的 <see cref="P:System.Web.Profile.ProfileInfo.UserName" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="FindInactiveProfilesByUserName">
      <MemberSignature Language="C#" Value="public override System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindInactiveProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, userInactiveSinceDate As DateTime, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Profile::ProfileInfoCollection ^ FindInactiveProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindInactiveProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string * DateTime * int * int * int -&gt; System.Web.Profile.ProfileInfoCollection" Usage="sqlProfileProvider.FindInactiveProfilesByUserName (authenticationOption, usernameToMatch, userInactiveSinceDate, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption"><see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 值之一，指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回这两种类型的配置文件。</param>
        <param name="usernameToMatch">要搜索的用户名。</param>
        <param name="userInactiveSinceDate">一个 <see cref="T:System.DateTime" />，确定将哪些用户配置文件视为处于不活动状态。 如果用户配置文件的 <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> 与此日期和时间相同，或在此日期和时间之前，则此配置文件被视为处于不活动状态。</param>
        <param name="pageIndex">要返回的结果页的索引。 <paramref name="pageIndex" /> 从零开始。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">此方法返回时，会包含一个表示配置文件总数的整数。 此参数未经初始化即被传递。</param>
        <summary>检索一些配置文件的配置文件信息，在这些配置文件中，上次活动日期与指定的日期和时间相同或在其之前，而且配置文件的用户名与指定的名称匹配。</summary>
        <returns>包含不活动配置文件的用户配置文件信息的 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，这些不活动配置文件中的用户名与提供的 <paramref name="usernameToMatch" /> 参数相匹配。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>方法用于为配置文件中的属性指定的应用程序检索未使用的用户配置文件的配置文件信息 `applicationName` 。 此方法将仅检索配置文件的用户名与提供的参数值匹配的配置文件 `usernameToMatch` 。 使用 `authenticationOption` 参数来指定是只想要搜索匿名配置文件、仅限经过身份验证的配置文件还是要搜索的所有配置文件。 在搜索的配置文件中，将 <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> 返回在指定参数值之前发生的任何配置文件 `userInactiveSinceDate` 。  
  
 <xref:System.Web.Profile.SqlProfileProvider>使用关键字搜索参数值的匹配项， `usernameToMatch` `LIKE` 并支持通配符，如百分比 (% ) 符号。 例如，如果将 `usernameToMatch` 参数设置为 "user1"，则会返回配置文件的用户名为 "user1" 的配置文件信息（如果存在）。 如果该 `usernameToMatch` 参数设置为 "user%"，则返回配置文件的配置文件信息，其中用户名为 "user1"、"用户 2"、"user_admin" 等。 按用户的配置文件添加到数据存储的顺序返回用户。  
  
 返回的结果 <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> 是由 `pageIndex` 和参数约束的 `pageSize` 。 `pageSize`参数标识 <xref:System.Web.Profile.ProfileInfo> 要在中返回的对象的最大数目 <xref:System.Web.Profile.ProfileInfoCollection> 。 `pageIndex`参数标识要返回的结果页; 0 标识第一页。 `totalRecords`参数是一个 `out` 参数，该参数设置为 `applicationName` 基于 `authenticationOption` 和参数配置的非活动用户配置文件的总数 `userInactiveSinceDate` 。 例如，如果配置了13个用户 `applicationName` ，并且 `pageIndex` 值为1且为 `pageSize` 5，则 <xref:System.Web.Profile.ProfileInfoCollection> 返回的将包含第六个到第10个非活动配置文件。 `totalRecords`参数将设置为13。  
  
   
  
## Examples  
 下面的代码示例允许用户提供 `usernameToMatch` 值和 <xref:System.Web.Profile.ProfileAuthenticationOption> 并检索任何匹配配置文件的配置文件信息。 该示例还允许用户指定是否以独占方式返回非活动配置文件。 如果用户仅指定不活动的配置文件，则 <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> 调用方法; 否则，将 <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> 调用方法。  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> 为空字符串 ("") 或超过 256 个字符。  
  
- 或 - 
 <paramref name="pageIndex" /> 小于零。  
  
- 或 - 
 <paramref name="pageSize" /> 小于一。  
  
- 或 - 
 <paramref name="pageIndex" /> 和 <paramref name="pageSize" /> 的乘积大于 <see cref="F:System.Int32.MaxValue" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="FindProfilesByUserName">
      <MemberSignature Language="C#" Value="public override System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Profile::ProfileInfoCollection ^ FindProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string * int * int * int -&gt; System.Web.Profile.ProfileInfoCollection" Usage="sqlProfileProvider.FindProfilesByUserName (authenticationOption, usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption"><see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 值之一，指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回这两种类型的配置文件。</param>
        <param name="usernameToMatch">要搜索的用户名。</param>
        <param name="pageIndex">要返回的结果页的索引。 <paramref name="pageIndex" /> 从零开始。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">此方法返回时，会包含一个表示配置文件总数的整数。 此参数未经初始化即被传递。</param>
        <summary>检索用户名与指定名称匹配的配置文件的配置文件信息。</summary>
        <returns>包含配置文件中的用户配置文件信息的 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，其中的用户名与提供的 <paramref name="usernameToMatch" /> 参数相匹配。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A>方法返回配置文件的用户名与为配置的提供的参数值匹配的配置文件信息的列表 `usernameToMatch` <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> 。 使用 `authenticationOption` 参数来指定是只想要搜索匿名配置文件、仅限经过身份验证的配置文件还是要搜索的所有配置文件。  
  
 <xref:System.Web.Profile.SqlProfileProvider>使用关键字搜索参数值的匹配项， `usernameToMatch` `LIKE` 并支持通配符，如百分比 (% ) 符号。 例如，如果将 `usernameToMatch` 参数设置为 "user1"，则会返回配置文件的用户名为 "user1" 的配置文件信息（如果存在）。 如果该 `usernameToMatch` 参数设置为 "user%"，则返回配置文件的配置文件信息，其中用户名为 "user1"、"用户 2"、"user_admin" 等。 按用户的配置文件添加到数据存储的顺序返回用户。  
  
 返回的结果 <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> 是由 `pageIndex` 和参数约束的 `pageSize` 。 `pageSize`参数标识 <xref:System.Web.Profile.ProfileInfo> 要在中返回的对象的最大数目 <xref:System.Web.Profile.ProfileInfoCollection> 。 `pageIndex`参数标识要返回的结果页; 0 标识第一页。 `totalRecords`参数是一个 `out` 参数，该参数设置为 `applicationName` 基于和参数由配置文件中的属性指定的应用程序的非活动用户配置文件总数 `authenticationOption` `userInactiveSinceDate` 。 例如，如果配置了13个用户 `applicationName` ，并且 `pageIndex` 值为1且为 `pageSize` 5，则 <xref:System.Web.Profile.ProfileInfoCollection> 返回的将包含第六个到第10个配置文件。 `totalRecords`参数将设置为13。  
  
   
  
## Examples  
 下面的代码示例允许用户提供 `usernameToMatch` 值和 <xref:System.Web.Profile.ProfileAuthenticationOption> 并检索任何匹配配置文件的配置文件信息。 该示例还允许用户指定是否以独占方式返回非活动配置文件。 如果用户仅指定不活动的配置文件，则 <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> 调用方法; 否则，将 <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> 调用方法。  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> 为空字符串 ("") 或超过 256 个字符。  
  
- 或 - 
 <paramref name="pageIndex" /> 小于零。  
  
- 或 - 
 <paramref name="pageSize" /> 小于一。  
  
- 或 - 
 <paramref name="pageIndex" /> 和 <paramref name="pageSize" /> 的乘积大于 <see cref="F:System.Int32.MaxValue" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllInactiveProfiles">
      <MemberSignature Language="C#" Value="public override System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Profile::ProfileInfoCollection ^ GetAllInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.GetAllInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime * int * int * int -&gt; System.Web.Profile.ProfileInfoCollection" Usage="sqlProfileProvider.GetAllInactiveProfiles (authenticationOption, userInactiveSinceDate, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption"><see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 值之一，指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回这两种类型的配置文件。</param>
        <param name="userInactiveSinceDate">一个 <see cref="T:System.DateTime" />，确定将哪些用户配置文件视为处于不活动状态。 如果用户配置文件的 <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> 与此日期和时间相同，或在此日期和时间之前，则此配置文件被视为处于不活动状态。</param>
        <param name="pageIndex">要返回的结果页的索引。 <paramref name="pageIndex" /> 从零开始。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">此方法返回时，会包含一个表示配置文件总数的整数。 此参数未经初始化即被传递。</param>
        <summary>对于上次活动日期与指定的日期和时间相同或在其之前的配置文件，检索它们的用户配置文件数据。</summary>
        <returns>一个 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，包含有关不活动的配置文件的用户配置文件信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles%2A>方法用于从数据源 `applicationName` 中为配置文件中的属性指定的应用程序的未使用用户配置文件检索配置文件信息。 使用 `authenticationOption` 参数来指定是只想要搜索匿名配置文件、仅限经过身份验证的配置文件还是要搜索的所有配置文件。 在搜索的配置文件中，将 <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> 返回在指定参数值之前发生的任何配置文件 `userInactiveSinceDate` 。  
  
 返回的结果 <xref:System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles%2A> 是由 `pageIndex` 和参数约束的 `pageSize` 。 `pageSize`参数标识 <xref:System.Web.Profile.ProfileInfo> 要在中返回的对象的最大数目 <xref:System.Web.Profile.ProfileInfoCollection> 。 `pageIndex`参数标识要返回的结果页; 0 标识第一页。 `totalRecords`参数是一个 `out` 参数，该参数设置为 `applicationName` 基于 `authenticationOption` 和参数配置的非活动用户配置文件的总数 `userInactiveSinceDate` 。 例如，如果配置了13个用户 `applicationName` ，并且 `pageIndex` 值为1且为 `pageSize` 5，则 <xref:System.Web.Profile.ProfileInfoCollection> 返回的将包含第六个到第10个非活动配置文件。 `totalRecords`参数将设置为13。  
  
   
  
## Examples  
 下面的代码示例演示了管理不活动配置文件的 ASP.NET 页。 提供了一个用于删除所有不活动配置文件的按钮。 配置文件是否被视为不活动取决于为参数指定的日期 `userInactiveSinceDate` 。  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="pageIndex" /> 小于零。  
  
- 或 - 
 <paramref name="pageSize" /> 小于一。  
  
- 或 - 
 <paramref name="pageIndex" /> 和 <paramref name="pageSize" /> 的乘积大于 <see cref="F:System.Int32.MaxValue" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllProfiles">
      <MemberSignature Language="C#" Value="public override System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Profile.ProfileInfoCollection GetAllProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllProfiles (authenticationOption As ProfileAuthenticationOption, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Profile::ProfileInfoCollection ^ GetAllProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.GetAllProfiles : System.Web.Profile.ProfileAuthenticationOption * int * int * int -&gt; System.Web.Profile.ProfileInfoCollection" Usage="sqlProfileProvider.GetAllProfiles (authenticationOption, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption"><see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 值之一，指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回这两种类型的配置文件。</param>
        <param name="pageIndex">要返回的结果页的索引。 <paramref name="pageIndex" /> 从零开始。</param>
        <param name="pageSize">要返回的结果页的大小。</param>
        <param name="totalRecords">此方法返回时，会包含一个表示配置文件总数的整数。 此参数未经初始化即被传递。</param>
        <summary>在数据源中检索配置文件的用户配置文件数据。</summary>
        <returns>一个 <see cref="T:System.Web.Profile.ProfileInfoCollection" />，包含数据源中所有配置文件的用户配置文件信息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.SqlProfileProvider.GetAllProfiles%2A>方法用于从 `applicationName` 配置文件中的属性指定的应用程序的数据源中检索配置文件的配置文件信息。 使用 `authenticationOption` 参数来指定是只想要搜索匿名配置文件、仅限经过身份验证的配置文件还是要搜索的所有配置文件。  
  
 返回的结果 <xref:System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles%2A> 是由 `pageIndex` 和参数约束的 `pageSize` 。 `pageSize`参数标识 <xref:System.Web.Profile.ProfileInfo> 要在中返回的对象的最大数目 <xref:System.Web.Profile.ProfileInfoCollection> 。 `pageIndex`参数标识要返回的结果页; 0 标识第一页。 `totalRecords`参数是一个 `out` 参数，该参数设置为 `applicationName` 基于 `authenticationOption` 和参数配置的非活动用户配置文件的总数 `userInactiveSinceDate` 。 例如，如果配置了13个用户 `applicationName` ，并且 `pageIndex` 值为1且为 `pageSize` 5，则 <xref:System.Web.Profile.ProfileInfoCollection> 返回的将包含第六个到第10个配置文件。 `totalRecords`参数将设置为13。  
  
   
  
## Examples  
 下面的代码示例显示在数据页中配置的所有配置文件的配置文件信息 `applicationName` 。  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/ShowProfilescs.aspx#3)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/ShowProfilesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="pageIndex" /> 小于零。  
  
- 或 - 
 <paramref name="pageSize" /> 小于一。  
  
- 或 - 
 <paramref name="pageIndex" /> 和 <paramref name="pageSize" /> 的乘积大于 <see cref="F:System.Int32.MaxValue" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfInactiveProfiles">
      <MemberSignature Language="C#" Value="public override int GetNumberOfInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetNumberOfInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNumberOfInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetNumberOfInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="override this.GetNumberOfInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime -&gt; int" Usage="sqlProfileProvider.GetNumberOfInactiveProfiles (authenticationOption, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption"><see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> 值之一，指定是返回匿名配置文件、经过身份验证的配置文件还是同时返回这两种类型的配置文件。</param>
        <param name="userInactiveSinceDate">一个 <see cref="T:System.DateTime" />，确定将哪些用户配置文件视为处于不活动状态。 如果用户配置文件的 <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> 与此日期和时间相同，或在此日期和时间之前，则此配置文件被视为处于不活动状态。</param>
        <summary>获取数据源中上次活动日期与指定的 <paramref name="userInactiveSinceDate" /> 相同或在其之前的配置文件的数量。</summary>
        <returns>数据源中上次活动日期出现在指定日期和时间之前的配置文件的数量。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.SqlProfileProvider.GetNumberOfInactiveProfiles%2A>方法用于从配置文件中的属性指定的应用程序的数据源检索所有未使用的用户配置文件的计数 `applicationName` 。 使用 `authenticationOption` 参数来指定是只想要搜索匿名配置文件、仅限经过身份验证的配置文件还是要搜索的所有配置文件。 在搜索配置文件中，将对所有配置文件（在 <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> 指定的参数值之前或之前）进行 `userInactiveSinceDate` 计数。  
  
   
  
## Examples  
 下面的代码示例允许用户根据搜索条件查看和删除活动和非活动配置文件信息。 使用方法的结果显示非活动配置文件的计数 <xref:System.Web.Profile.SqlProfileProvider.GetNumberOfInactiveProfiles%2A> 。  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext sc, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext sc, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertyValues (sc As SettingsContext, properties As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ sc, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="override this.GetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; System.Configuration.SettingsPropertyValueCollection" Usage="sqlProfileProvider.GetPropertyValues (sc, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sc" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="sc">包含用户配置文件信息的 <see cref="T:System.Configuration.SettingsContext" />。</param>
        <param name="properties">一个 <see cref="T:System.Configuration.SettingsPropertyCollection" />，包含要检索的属性的配置文件信息。</param>
        <summary>从 SQL Server 配置文件数据库检索配置文件属性信息和值。</summary>
        <returns>包含配置文件属性信息和值的 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.SqlProfileProvider.GetPropertyValues%2A>类使用方法 <xref:System.Web.Profile.ProfileBase> 来检索由管理的当前请求的配置文件属性 <xref:System.Web.Profile.SqlProfileProvider> 。 属性值从配置文件中的属性指定的应用程序的数据源返回 `applicationName` 。 属性值和附加属性信息作为对象的集合返回 <xref:System.Configuration.SettingsPropertyValue> 。  
  
   
  
## Examples  
 下面的代码示例列出了当前配置文件中标识的配置文件属性和值。  
  
 [!code-csharp[System.Web.Profile.SqlProfileProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/getpropertyvaluescs.aspx#1)]
 [!code-vb[System.Web.Profile.SqlProfileProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/getpropertyvaluesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="sqlProfileProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">要初始化的 <see cref="T:System.Web.Profile.SqlProfileProvider" /> 实例的名称。</param>
        <param name="config">一个 <see cref="T:System.Collections.Specialized.NameValueCollection" />，包含配置文件提供程序的配置选项的名称和值。</param>
        <summary>利用在 ASP.NET 应用程序的配置文件中指定的属性值初始化 SQL Server 配置文件提供程序。 此方法不能直接在代码中使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 使用此方法来初始化 <xref:System.Web.Profile.SqlProfileProvider> 具有 ASP.NET 应用程序配置文件中指定的属性值 ( # A0) 的。 此方法不能直接在代码中使用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException"><see langword="connectionStringName" /> 特性是一个空字符串 ("")，或者未在此 <see cref="T:System.Web.Profile.SqlProfileProvider" /> 实例的应用程序配置文件中指定。  
  
- 或 - 
在 <see langword="connectionStringName" /> 特性值中指定的连接字符串的值为空，或者指定的 <see langword="connectionStringName" /> 值在此 <see cref="T:System.Web.Profile.SqlProfileProvider" /> 实例的应用程序配置文件中不存在。  
  
- 或 - 
<see langword="applicationName" /> 特性值超过了 256 个字符。  
  
- 或 - 
该 <see cref="T:System.Web.Profile.SqlProfileProvider" /> 实例的应用程序配置文件包含无法识别的特性。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="config" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.Web.HttpException">当前信任级别低于 <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public override void SetPropertyValues (System.Configuration.SettingsContext sc, System.Configuration.SettingsPropertyValueCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetPropertyValues(class System.Configuration.SettingsContext sc, class System.Configuration.SettingsPropertyValueCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetPropertyValues (sc As SettingsContext, properties As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetPropertyValues(System::Configuration::SettingsContext ^ sc, System::Configuration::SettingsPropertyValueCollection ^ properties);" />
      <MemberSignature Language="F#" Value="override this.SetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyValueCollection -&gt; unit" Usage="sqlProfileProvider.SetPropertyValues (sc, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sc" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="sc">包含用户配置文件信息的 <see cref="T:System.Configuration.SettingsContext" />。</param>
        <param name="properties">一个 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />，包含要更新的属性的配置文件信息和值。</param>
        <summary>利用指定的属性值更新 SQL Server 配置文件数据库。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.SqlProfileProvider.SetPropertyValues%2A>当为当前请求设置属性值时，ASP.NET 配置文件服务使用方法更新 SQL Server 配置文件数据库。 属性值是在配置文件中由属性指定的应用程序的数据源中设置的 `applicationName` 。 要更新的配置文件属性信息和值 <xref:System.Web.Profile.SqlProfileProvider> 指定为对象的集合 <xref:System.Configuration.SettingsPropertyValue> 。  
  
   
  
## Examples  
 下面的代码示例使用 <xref:System.Web.Profile.SqlProfileProvider.SetPropertyValues%2A> 方法修改配置文件属性值。  
  
 [!code-csharp[System.Web.Profile.SqlProfileProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/setpropertyvaluescs.aspx#2)]
 [!code-vb[System.Web.Profile.SqlProfileProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/setpropertyvaluesvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">ASP.NET 配置文件属性概述</related>
      </Docs>
    </Member>
  </Members>
</Type>
