<Type Name="UnmanagedMarshal" FullName="System.Reflection.Emit.UnmanagedMarshal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8d458c7c3013bb9d69e0be0e7812ebc087b758fe" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86795408" /></Metadata><TypeSignature Language="C#" Value="public sealed class UnmanagedMarshal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit UnmanagedMarshal extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.UnmanagedMarshal" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UnmanagedMarshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnmanagedMarshal sealed" />
  <TypeSignature Language="F#" Value="type UnmanagedMarshal = class" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit UnmanagedMarshal extends System.Object" FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("An alternate API is available: Emit the MarshalAs custom attribute instead. http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("An alternate API is available: Emit the MarshalAs custom attribute instead. http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Obsolete("An alternate API is available: Emit the MarshalAs custom attribute instead.")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("An alternate API is available: Emit the MarshalAs custom attribute instead.")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="033c6-101">表示说明如何将字段从托管代码封送为非托管代码的类。</span><span class="sxs-lookup"><span data-stu-id="033c6-101">Represents the class that describes how to marshal a field from managed to unmanaged code.</span></span> <span data-ttu-id="033c6-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="033c6-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c6-103">此代码示例演示了此过时类型的解决方法。</span><span class="sxs-lookup"><span data-stu-id="033c6-103">The code example shows the workaround for this obsolete type.</span></span>  
  
 <span data-ttu-id="033c6-104">封送是打包和 unpackaging 参数的过程，以便可以执行远程过程调用。</span><span class="sxs-lookup"><span data-stu-id="033c6-104">Marshaling is the process of packaging and unpackaging parameters so remote procedure calls can occur.</span></span> <span data-ttu-id="033c6-105">在封送处理期间，当托管类型的格式不同于相应的非托管类型的格式时，字段可能会进行格式转换。</span><span class="sxs-lookup"><span data-stu-id="033c6-105">During marshaling, a field might undergo a format conversion when the format of the managed type is different from the format of the corresponding unmanaged type.</span></span> <span data-ttu-id="033c6-106">例如，你可能需要将类型封送 `String` 为非托管 BSTR。</span><span class="sxs-lookup"><span data-stu-id="033c6-106">For example, you might want to marshal a `String` type as an unmanaged BSTR.</span></span> <span data-ttu-id="033c6-107">某些格式转换由运行时自动处理。</span><span class="sxs-lookup"><span data-stu-id="033c6-107">Some format conversions are handled automatically by the runtime.</span></span> <span data-ttu-id="033c6-108">若要重写默认行为，必须使用 `UnmanagedMarshal` 类来定义格式转换。</span><span class="sxs-lookup"><span data-stu-id="033c6-108">To override the default behavior, you must use the `UnmanagedMarshal` class to define the format conversion.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="033c6-109">下面的代码示例显示过时类型的替换代码 <xref:System.Reflection.Emit.UnmanagedMarshal> 。</span><span class="sxs-lookup"><span data-stu-id="033c6-109">The following code example shows replacement code for the obsolete <xref:System.Reflection.Emit.UnmanagedMarshal> type.</span></span> <span data-ttu-id="033c6-110">该示例发出名为的单模块程序集 `EmitMarshalAs.dll` ，其中包含一个名为的类型 `Sample` 。</span><span class="sxs-lookup"><span data-stu-id="033c6-110">The example emits a single-module assembly named `EmitMarshalAs.dll`, containing a type named `Sample`.</span></span> <span data-ttu-id="033c6-111">该类型具有一个名为 `Test` 的方法，该方法具有一个类型为的参数 <xref:System.String> 。</span><span class="sxs-lookup"><span data-stu-id="033c6-111">The type has a method named `Test`, with one parameter of type <xref:System.String>.</span></span> <span data-ttu-id="033c6-112">此代码示例将和应用于 <xref:System.Runtime.InteropServices.MarshalAsAttribute> <xref:System.Runtime.InteropServices.UnmanagedType.BStr?displayProperty=nameWithType> 参数。</span><span class="sxs-lookup"><span data-stu-id="033c6-112">The code example applies the <xref:System.Runtime.InteropServices.MarshalAsAttribute> with <xref:System.Runtime.InteropServices.UnmanagedType.BStr?displayProperty=nameWithType> to the parameter.</span></span>  
  
 <span data-ttu-id="033c6-113">您可以使用 [Ildasm.exe (IL 拆装器) ](/dotnet/framework/tools/ildasm-exe-il-disassembler) 检查发出的程序集，并观察参数是否已标记 `marshal(bstr)` 。</span><span class="sxs-lookup"><span data-stu-id="033c6-113">You can use the [Ildasm.exe (IL Disassembler)](/dotnet/framework/tools/ildasm-exe-il-disassembler) to examine the emitted assembly and observe that the parameter is marked `marshal(bstr)`.</span></span>  
  
 [!code-cpp[UnmanagedMarshalObsolete#1](~/samples/snippets/cpp/VS_Snippets_CLR/UnmanagedMarshalObsolete/cpp/source.cpp#1)]
 [!code-csharp[UnmanagedMarshalObsolete#1](~/samples/snippets/csharp/VS_Snippets_CLR/UnmanagedMarshalObsolete/cs/source.cs#1)]
 [!code-vb[UnmanagedMarshalObsolete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UnmanagedMarshalObsolete/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Type" />
    <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
    <altmember cref="T:System.Guid" />
  </Docs>
  <Members>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.UnmanagedType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.UnmanagedType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As UnmanagedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::UnmanagedType BaseType { System::Runtime::InteropServices::UnmanagedType get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : System.Runtime.InteropServices.UnmanagedType" Usage="System.Reflection.Emit.UnmanagedMarshal.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.UnmanagedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="033c6-114">获取非托管基类型。</span><span class="sxs-lookup"><span data-stu-id="033c6-114">Gets an unmanaged base type.</span></span> <span data-ttu-id="033c6-115">此属性为只读。</span><span class="sxs-lookup"><span data-stu-id="033c6-115">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="033c6-116">一个 <see langword="UnmanagedType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="033c6-116">An <see langword="UnmanagedType" /> object.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="033c6-117">非托管类型不是 <see langword="LPArray" /> 或 <see langword="SafeArray" />。</span><span class="sxs-lookup"><span data-stu-id="033c6-117">The unmanaged type is not an <see langword="LPArray" /> or a <see langword="SafeArray" />.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineByValArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineByValArray (int elemCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineByValArray(int32 elemCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineByValArray(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineByValArray (elemCount As Integer) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineByValArray(int elemCount);" />
      <MemberSignature Language="F#" Value="static member DefineByValArray : int -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineByValArray elemCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elemCount"><span data-ttu-id="033c6-118">固定长度数组中的元素数目。</span><span class="sxs-lookup"><span data-stu-id="033c6-118">The number of elements in the fixed-length array.</span></span></param>
        <summary><span data-ttu-id="033c6-119">指定要封送为非托管代码的固定长度的数组 (ByValArray)。</span><span class="sxs-lookup"><span data-stu-id="033c6-119">Specifies a fixed-length array (ByValArray) to marshal to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="033c6-120">一个 <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="033c6-120">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c6-121">`DefineByValArray`方法不是简单的本机封送。</span><span class="sxs-lookup"><span data-stu-id="033c6-121">The `DefineByValArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="033c6-122">只有非托管封送构造才能使用这些静态构造函数。</span><span class="sxs-lookup"><span data-stu-id="033c6-122">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="033c6-123">与封送处理整数参数相比，封送数组是一个更复杂的过程。</span><span class="sxs-lookup"><span data-stu-id="033c6-123">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="033c6-124">数组成员按特定顺序进行复制，以便另一方可以完全重建数组。</span><span class="sxs-lookup"><span data-stu-id="033c6-124">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="033c6-125">该参数不是简单本机类型。</span><span class="sxs-lookup"><span data-stu-id="033c6-125">The argument is not a simple native type.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineByValTStr">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineByValTStr (int elemCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineByValTStr(int32 elemCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineByValTStr (elemCount As Integer) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineByValTStr(int elemCount);" />
      <MemberSignature Language="F#" Value="static member DefineByValTStr : int -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr elemCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elemCount"><span data-ttu-id="033c6-126">固定数组缓冲区中的元素数目。</span><span class="sxs-lookup"><span data-stu-id="033c6-126">The number of elements in the fixed array buffer.</span></span></param>
        <summary><span data-ttu-id="033c6-127">指定要封送为非托管代码的固定数组缓冲区 (ByValTStr) 中的字符串。</span><span class="sxs-lookup"><span data-stu-id="033c6-127">Specifies a string in a fixed array buffer (ByValTStr) to marshal to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="033c6-128">一个 <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="033c6-128">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c6-129">`DefineByValStr`方法不是简单的本机封送。</span><span class="sxs-lookup"><span data-stu-id="033c6-129">The `DefineByValStr` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="033c6-130">只有非托管封送构造才能使用这些静态构造函数。</span><span class="sxs-lookup"><span data-stu-id="033c6-130">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="033c6-131">与封送处理整数参数相比，封送数组是一个更复杂的过程。</span><span class="sxs-lookup"><span data-stu-id="033c6-131">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="033c6-132">数组成员按特定顺序进行复制，以便另一方可以完全重建数组。</span><span class="sxs-lookup"><span data-stu-id="033c6-132">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="033c6-133">该参数不是简单本机类型。</span><span class="sxs-lookup"><span data-stu-id="033c6-133">The argument is not a simple native type.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineLPArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineLPArray (System.Runtime.InteropServices.UnmanagedType elemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineLPArray(valuetype System.Runtime.InteropServices.UnmanagedType elemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineLPArray(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineLPArray (elemType As UnmanagedType) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineLPArray(System::Runtime::InteropServices::UnmanagedType elemType);" />
      <MemberSignature Language="F#" Value="static member DefineLPArray : System.Runtime.InteropServices.UnmanagedType -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineLPArray elemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="elemType"><span data-ttu-id="033c6-134">要将数组封送为的非托管类型。</span><span class="sxs-lookup"><span data-stu-id="033c6-134">The unmanaged type to which to marshal the array.</span></span></param>
        <summary><span data-ttu-id="033c6-135">指定要封送为非托管代码的 <see langword="LPArray" />。</span><span class="sxs-lookup"><span data-stu-id="033c6-135">Specifies an <see langword="LPArray" /> to marshal to unmanaged code.</span></span> <span data-ttu-id="033c6-136"><see langword="LPArray" /> 的长度在运行时由实际的已封送数组的大小确定。</span><span class="sxs-lookup"><span data-stu-id="033c6-136">The length of an <see langword="LPArray" /> is determined at runtime by the size of the actual marshaled array.</span></span></summary>
        <returns><span data-ttu-id="033c6-137">一个 <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="033c6-137">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c6-138">`DefineLPArray`方法不是简单的本机封送。</span><span class="sxs-lookup"><span data-stu-id="033c6-138">The `DefineLPArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="033c6-139">只有非托管封送构造才能使用这些静态构造函数。</span><span class="sxs-lookup"><span data-stu-id="033c6-139">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="033c6-140">与封送处理整数参数相比，封送数组是一个更复杂的过程。</span><span class="sxs-lookup"><span data-stu-id="033c6-140">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="033c6-141">数组成员按特定顺序进行复制，以便另一方可以完全重建数组。</span><span class="sxs-lookup"><span data-stu-id="033c6-141">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="033c6-142">该参数不是简单本机类型。</span><span class="sxs-lookup"><span data-stu-id="033c6-142">The argument is not a simple native type.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineSafeArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineSafeArray (System.Runtime.InteropServices.UnmanagedType elemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineSafeArray(valuetype System.Runtime.InteropServices.UnmanagedType elemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineSafeArray (elemType As UnmanagedType) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineSafeArray(System::Runtime::InteropServices::UnmanagedType elemType);" />
      <MemberSignature Language="F#" Value="static member DefineSafeArray : System.Runtime.InteropServices.UnmanagedType -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray elemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="elemType"><span data-ttu-id="033c6-143">数组的每个元素的基类型或 <see langword="UnmanagedType" />。</span><span class="sxs-lookup"><span data-stu-id="033c6-143">The base type or the <see langword="UnmanagedType" /> of each element of the array.</span></span></param>
        <summary><span data-ttu-id="033c6-144">指定要封送为非托管代码的 <see langword="SafeArray" />。</span><span class="sxs-lookup"><span data-stu-id="033c6-144">Specifies a <see langword="SafeArray" /> to marshal to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="033c6-145">一个 <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="033c6-145">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c6-146">`DefineSafeArray`方法不是简单的本机封送。</span><span class="sxs-lookup"><span data-stu-id="033c6-146">The `DefineSafeArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="033c6-147">只有非托管封送构造才能使用这些静态构造函数。</span><span class="sxs-lookup"><span data-stu-id="033c6-147">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="033c6-148">与封送处理整数参数相比，封送数组是一个更复杂的过程。</span><span class="sxs-lookup"><span data-stu-id="033c6-148">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="033c6-149">数组成员按特定顺序进行复制，以便另一方可以完全重建数组。</span><span class="sxs-lookup"><span data-stu-id="033c6-149">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="033c6-150">该参数不是简单本机类型。</span><span class="sxs-lookup"><span data-stu-id="033c6-150">The argument is not a simple native type.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineUnmanagedMarshal">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineUnmanagedMarshal (System.Runtime.InteropServices.UnmanagedType unmanagedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineUnmanagedMarshal(valuetype System.Runtime.InteropServices.UnmanagedType unmanagedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineUnmanagedMarshal (unmanagedType As UnmanagedType) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineUnmanagedMarshal(System::Runtime::InteropServices::UnmanagedType unmanagedType);" />
      <MemberSignature Language="F#" Value="static member DefineUnmanagedMarshal : System.Runtime.InteropServices.UnmanagedType -&gt; System.Reflection.Emit.UnmanagedMarshal" Usage="System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal unmanagedType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="unmanagedType"><span data-ttu-id="033c6-151">要将该类型封送到的非托管类型。</span><span class="sxs-lookup"><span data-stu-id="033c6-151">The unmanaged type to which the type is to be marshaled.</span></span></param>
        <summary><span data-ttu-id="033c6-152">指定要封送为非托管代码的给定类型。</span><span class="sxs-lookup"><span data-stu-id="033c6-152">Specifies a given type that is to be marshaled to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="033c6-153">一个 <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="033c6-153">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c6-154"><xref:System.Runtime.InteropServices.UnmanagedType>传递给此方法的必须是简单的本机类型。</span><span class="sxs-lookup"><span data-stu-id="033c6-154">The <xref:System.Runtime.InteropServices.UnmanagedType> passed to this method must be a simple native type.</span></span> <span data-ttu-id="033c6-155">不能使用以下任何值： <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr?displayProperty=nameWithType> 、 <xref:System.Runtime.InteropServices.UnmanagedType.SafeArray?displayProperty=nameWithType> 、 <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray?displayProperty=nameWithType> 、 <xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType> 或 <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="033c6-155">None of the following values may be used: <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.SafeArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="033c6-156">使用此方法只能进行非托管封送构造。</span><span class="sxs-lookup"><span data-stu-id="033c6-156">Only unmanaged marshal constructs can be made using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="033c6-157">该参数不是简单本机类型。</span><span class="sxs-lookup"><span data-stu-id="033c6-157">The argument is not a simple native type.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="ElementCount">
      <MemberSignature Language="C#" Value="public int ElementCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementCount" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.ElementCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementCount : int" Usage="System.Reflection.Emit.UnmanagedMarshal.ElementCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="033c6-158">获取数字元素。</span><span class="sxs-lookup"><span data-stu-id="033c6-158">Gets a number element.</span></span> <span data-ttu-id="033c6-159">此属性为只读。</span><span class="sxs-lookup"><span data-stu-id="033c6-159">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="033c6-160">指示元素计数的整数。</span><span class="sxs-lookup"><span data-stu-id="033c6-160">An integer indicating the element count.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c6-161">只有存在时才存在 `ElementCount` `NativeTypeFixedArray` 。</span><span class="sxs-lookup"><span data-stu-id="033c6-161">There is an `ElementCount` only if there is a `NativeTypeFixedArray`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="033c6-162">该参数不是非托管元素计数。</span><span class="sxs-lookup"><span data-stu-id="033c6-162">The argument is not an unmanaged element count.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnmanagedType">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.UnmanagedType GetUnmanagedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.UnmanagedType GetUnmanagedType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GetUnmanagedType As UnmanagedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::UnmanagedType GetUnmanagedType { System::Runtime::InteropServices::UnmanagedType get(); };" />
      <MemberSignature Language="F#" Value="member this.GetUnmanagedType : System.Runtime.InteropServices.UnmanagedType" Usage="System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.UnmanagedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="033c6-163">指示非托管类型。</span><span class="sxs-lookup"><span data-stu-id="033c6-163">Indicates an unmanaged type.</span></span> <span data-ttu-id="033c6-164">此属性为只读。</span><span class="sxs-lookup"><span data-stu-id="033c6-164">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="033c6-165">一个 <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="033c6-165">An <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c6-166">`GetUnmanagedType`属性是本机类型的访问器函数。</span><span class="sxs-lookup"><span data-stu-id="033c6-166">The `GetUnmanagedType` property is an accessor function for the native type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="IIDGuid">
      <MemberSignature Language="C#" Value="public Guid IIDGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid IIDGuid" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.IIDGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IIDGuid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid IIDGuid { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.IIDGuid : Guid" Usage="System.Reflection.Emit.UnmanagedMarshal.IIDGuid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="033c6-167">获取 GUID。</span><span class="sxs-lookup"><span data-stu-id="033c6-167">Gets a GUID.</span></span> <span data-ttu-id="033c6-168">此属性为只读。</span><span class="sxs-lookup"><span data-stu-id="033c6-168">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="033c6-169"><see cref="T:System.Guid" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="033c6-169">A <see cref="T:System.Guid" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="033c6-170">此属性始终返回 Guid.empty。</span><span class="sxs-lookup"><span data-stu-id="033c6-170">This property always returns Guid.Empty.</span></span> <span data-ttu-id="033c6-171">此属性可能会在将来的版本中删除。</span><span class="sxs-lookup"><span data-stu-id="033c6-171">This property might be removed in a future release.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="033c6-172">该参数不是自定义封送拆收器。</span><span class="sxs-lookup"><span data-stu-id="033c6-172">The argument is not a custom marshaler.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Guid" />
      </Docs>
    </Member>
  </Members>
</Type>
