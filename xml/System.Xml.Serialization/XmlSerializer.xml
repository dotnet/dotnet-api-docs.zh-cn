<Type Name="XmlSerializer" FullName="System.Xml.Serialization.XmlSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8445a24a7273f3d7abfaa8a9471611b93a2e9eb5" /><Meta Name="ms.sourcegitcommit" Value="57ccffdf8fe8e719b7e778b859bf1ca216879f31" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/28/2020" /><Meta Name="ms.locfileid" Value="87329415" /></Metadata><TypeSignature Language="C#" Value="public class XmlSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSerializer extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSerializer" />
  <TypeSignature Language="F#" Value="type XmlSerializer = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi XmlSerializer extends System.Object" FrameworkAlternate="netframework-1.1;xamarinandroid-7.1;xamarinios-10.8" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml" FromVersion="4.0.0.0" To="System.Xml.XmlSerializer" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="4.0.0.0" To="System.Xml.XmlSerializer" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.XmlSerializer" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="4.0.0.0" To="System.Xml" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="2.0.5.0" To="System.Xml" ToVersion="2.0.5.0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2a543-101">在对象和 XML 文档之间进行序列化和反序列化操作。</span><span class="sxs-lookup"><span data-stu-id="2a543-101">Serializes and deserializes objects into and from XML documents.</span></span> <span data-ttu-id="2a543-102"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 使您得以控制如何将对象编码到 XML 中。</span><span class="sxs-lookup"><span data-stu-id="2a543-102">The <see cref="T:System.Xml.Serialization.XmlSerializer" /> enables you to control how objects are encoded into XML.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-103">XML 序列化是将对象的公共属性和字段转换为序列格式（这里是指 XML）以便存储或传输的过程。</span><span class="sxs-lookup"><span data-stu-id="2a543-103">XML serialization is the process of converting an object's public properties and fields to a serial format (in this case, XML) for storage or transport.</span></span> <span data-ttu-id="2a543-104">反序列化通过 XML 输出在其原始状态中重新创建对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-104">Deserialization re-creates the object in its original state from the XML output.</span></span> <span data-ttu-id="2a543-105">可以将序列化视为一种将对象状态保存到流或缓冲区的方式。</span><span class="sxs-lookup"><span data-stu-id="2a543-105">You can think of serialization as a way of saving the state of an object into a stream or buffer.</span></span> <span data-ttu-id="2a543-106">例如，ASP.NET 使用 <xref:System.Xml.Serialization.XmlSerializer> 类对 XML Web service 消息进行编码。</span><span class="sxs-lookup"><span data-stu-id="2a543-106">For example, ASP.NET uses the <xref:System.Xml.Serialization.XmlSerializer> class to encode XML Web service messages.</span></span>  
  
 <span data-ttu-id="2a543-107">对象中的数据是用编程语言构造来描述的，如类、字段、属性、基元类型、数组，甚至 <xref:System.Xml.XmlElement> 或 <xref:System.Xml.XmlAttribute> 对象形式的嵌入 XML。</span><span class="sxs-lookup"><span data-stu-id="2a543-107">The data in your objects is described using programming language constructs like classes, fields, properties, primitive types, arrays, and even embedded XML in the form of <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlAttribute> objects.</span></span> <span data-ttu-id="2a543-108">您可以选择创建自己的类，用属性批注，也可以使用[XML 架构定义工具 ( # A0) ](/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe)基于现有的 XML 架构定义 (XSD) 文档生成类。</span><span class="sxs-lookup"><span data-stu-id="2a543-108">You have the option of creating your own classes, annotated with attributes, or using the [XML Schema Definition Tool (Xsd.exe)](/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe) to generate the classes based on an existing XML Schema definition (XSD) document.</span></span> <span data-ttu-id="2a543-109">如果你具有 XML 架构，则可以运行 Xsd.exe 来生成一组强类型化为架构的类，并在序列化时使用属性对其进行批注以遵循架构。</span><span class="sxs-lookup"><span data-stu-id="2a543-109">If you have an XML Schema, you can run the Xsd.exe to produce a set of classes that are strongly typed to the schema and annotated with attributes to adhere to the schema when serialized.</span></span>  
  
 <span data-ttu-id="2a543-110">若要在对象和 XML 之间传输数据，需要从编程语言构造到 XML 架构的映射，以及从 XML 架构到编程语言构造的映射。</span><span class="sxs-lookup"><span data-stu-id="2a543-110">To transfer data between objects and XML requires a mapping from the programming language constructs to XML schema and from the XML schema to the programming language constructs.</span></span> <span data-ttu-id="2a543-111"><xref:System.Xml.Serialization.XmlSerializer>和相关工具（如 Xsd.exe）在设计时和运行时提供这两种技术之间的桥梁。</span><span class="sxs-lookup"><span data-stu-id="2a543-111">The <xref:System.Xml.Serialization.XmlSerializer> and related tools like Xsd.exe provide the bridge between these two technologies at both design time and runtime.</span></span> <span data-ttu-id="2a543-112">在设计时，可以使用 Xsd.exe 从自定义类生成 XML 架构文档 ( .xsd) ，或者从给定的架构生成类。</span><span class="sxs-lookup"><span data-stu-id="2a543-112">At design time, use the Xsd.exe to produce an XML schema document (.xsd) from your custom classes or to produce classes from a given schema.</span></span> <span data-ttu-id="2a543-113">在任一情况下，都用自定义特性对类进行批注，以指示 <xref:System.Xml.Serialization.XmlSerializer> 如何映射 XML 架构系统和公共语言运行时。</span><span class="sxs-lookup"><span data-stu-id="2a543-113">In either case, the classes are annotated with custom attributes to instruct the <xref:System.Xml.Serialization.XmlSerializer> how to map between the XML schema system and the common language runtime.</span></span> <span data-ttu-id="2a543-114">在运行时，可以将类的实例序列化为遵循给定架构的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="2a543-114">At runtime, instances of the classes can be serialized into XML documents that follow the given schema.</span></span> <span data-ttu-id="2a543-115">同样，可以将这些 XML 文档反序列化为运行时对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-115">Likewise, these XML documents can be deserialized into runtime objects.</span></span> <span data-ttu-id="2a543-116">请注意，XML 架构是可选的，不是在设计时或运行时所必需的。</span><span class="sxs-lookup"><span data-stu-id="2a543-116">Note that the XML schema is optional, and not required at design time or runtime.</span></span>  
  
## <a name="controlling-generated-xml"></a><span data-ttu-id="2a543-117">控制生成的 XML</span><span class="sxs-lookup"><span data-stu-id="2a543-117">Controlling Generated XML</span></span>  
 <span data-ttu-id="2a543-118">若要控制生成的 XML，可以将特殊属性应用于类和成员。</span><span class="sxs-lookup"><span data-stu-id="2a543-118">To control the generated XML, you can apply special attributes to classes and members.</span></span> <span data-ttu-id="2a543-119">例如，若要指定不同的 XML 元素名称，请将应用于 <xref:System.Xml.Serialization.XmlElementAttribute> 公共字段或属性，并设置 <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="2a543-119">For example, to specify a different XML element name, apply an <xref:System.Xml.Serialization.XmlElementAttribute> to a public field or property, and set the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property.</span></span> <span data-ttu-id="2a543-120">有关类似属性的完整列表，请参阅[控制 XML 序列化的属性](/dotnet/standard/serialization/attributes-that-control-xml-serialization)。</span><span class="sxs-lookup"><span data-stu-id="2a543-120">For a complete list of similar attributes, see [Attributes That Control XML Serialization](/dotnet/standard/serialization/attributes-that-control-xml-serialization).</span></span> <span data-ttu-id="2a543-121">还可以实现 <xref:System.Xml.Serialization.IXmlSerializable> 接口来控制 XML 输出。</span><span class="sxs-lookup"><span data-stu-id="2a543-121">You can also implement the <xref:System.Xml.Serialization.IXmlSerializable> interface to control the XML output.</span></span>  
  
 <span data-ttu-id="2a543-122">如果生成的 XML 必须符合万维网联合会文档的第5节，简单的[对象访问协议 (SOAP) 1.1](https://www.w3.org/TR/2000/NOTE-SOAP-20000508/)，则必须 <xref:System.Xml.Serialization.XmlSerializer> 使用构造 <xref:System.Xml.Serialization.XmlTypeMapping> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-122">If the XML generated must conform to section 5 of the World Wide Consortium document, [Simple Object Access Protocol (SOAP) 1.1](https://www.w3.org/TR/2000/NOTE-SOAP-20000508/), you must construct the <xref:System.Xml.Serialization.XmlSerializer> with an <xref:System.Xml.Serialization.XmlTypeMapping>.</span></span> <span data-ttu-id="2a543-123">若要进一步控制编码的 SOAP XML，请使用[控制编码的 Soap 序列化的特性](/dotnet/standard/serialization/attributes-that-control-encoded-soap-serialization)中列出的属性。</span><span class="sxs-lookup"><span data-stu-id="2a543-123">To further control the encoded SOAP XML, use the attributes listed in [Attributes That Control Encoded SOAP Serialization](/dotnet/standard/serialization/attributes-that-control-encoded-soap-serialization).</span></span>  
  
 <span data-ttu-id="2a543-124">利用， <xref:System.Xml.Serialization.XmlSerializer> 你可以利用强类型化类，并且仍具有 XML 的灵活性。</span><span class="sxs-lookup"><span data-stu-id="2a543-124">With the <xref:System.Xml.Serialization.XmlSerializer> you can take advantage of working with strongly typed classes and still have the flexibility of XML.</span></span> <span data-ttu-id="2a543-125">使用类型或强类型类中的字段或属性， <xref:System.Xml.XmlElement> <xref:System.Xml.XmlAttribute> <xref:System.Xml.XmlNode> 可以直接将 xml 文档的某些部分直接读入 xml 对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-125">Using fields or properties of type <xref:System.Xml.XmlElement>, <xref:System.Xml.XmlAttribute> or <xref:System.Xml.XmlNode> in your strongly typed classes, you can read parts of the XML document directly into XML objects.</span></span>  
  
 <span data-ttu-id="2a543-126">如果使用可扩展的 XML 架构，则还可以使用 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 和 <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> 特性来序列化和反序列化在原始架构中找不到的元素或属性。</span><span class="sxs-lookup"><span data-stu-id="2a543-126">If you work with extensible XML schemas, you can also use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> and <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> attributes to serialize and deserialize elements or attributes that are not found in the original schema.</span></span> <span data-ttu-id="2a543-127">若要使用对象，请将应用 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 到返回对象数组的字段 <xref:System.Xml.XmlElement> ，或将应用 <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> 到返回对象数组的字段 <xref:System.Xml.XmlAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-127">To use the objects, apply an <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a field that returns an array of <xref:System.Xml.XmlElement> objects, or apply an <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> to a field that returns an array of <xref:System.Xml.XmlAttribute> objects.</span></span>  
  
 <span data-ttu-id="2a543-128">如果属性或字段返回一个复杂对象（如数组或类实例），则 <xref:System.Xml.Serialization.XmlSerializer> 将其转换为嵌套在主 XML 文档内的元素。</span><span class="sxs-lookup"><span data-stu-id="2a543-128">If a property or field returns a complex object (such as an array or a class instance), the <xref:System.Xml.Serialization.XmlSerializer> converts it to an element nested within the main XML document.</span></span> <span data-ttu-id="2a543-129">例如，以下代码中的第一个类将返回第二个类的实例。</span><span class="sxs-lookup"><span data-stu-id="2a543-129">For example, the first class in the following code returns an instance of the second class.</span></span>  
  
```vb  
Public Class MyClass  
    Public MyObjectProperty As MyObject  
End Class  
  
Public Class MyObject  
    Public ObjectName As String  
End Class  
```  
  
```csharp  
public class MyClass  
{  
    public MyObject MyObjectProperty;  
}  
public class MyObject  
{  
    public string ObjectName;  
}  
```  
  
 <span data-ttu-id="2a543-130">序列化的 XML 输出如下所示：</span><span class="sxs-lookup"><span data-stu-id="2a543-130">The serialized, XML output looks like this:</span></span>  
  
```  
<MyClass>  
  <MyObjectProperty>  
  <ObjectName>My String</ObjectName>  
  </MyObjectProperty>  
</MyClass>  
```  
  
 <span data-ttu-id="2a543-131">如果架构包含一个元素，该元素是可选项 (minOccurs = ' 0 ' ) ，或者架构包含默认值，则有两个选择。</span><span class="sxs-lookup"><span data-stu-id="2a543-131">If a schema includes an element that is optional (minOccurs = '0'), or if the schema includes a default value, you have two options.</span></span> <span data-ttu-id="2a543-132">一种选择是使用 <xref:System.ComponentModel.DefaultValueAttribute?displayProperty=nameWithType> 来指定默认值，如下面的代码所示。</span><span class="sxs-lookup"><span data-stu-id="2a543-132">One option is to use <xref:System.ComponentModel.DefaultValueAttribute?displayProperty=nameWithType> to specify the default value, as shown in the following code.</span></span>  
  
```vb  
Public Class PurchaseOrder  
    <System.ComponentModel.DefaultValueAttribute ("2002")> _  
    Public Year As String  
End Class  
```  
  
```csharp  
public class PurchaseOrder  
{  
    [System.ComponentModel.DefaultValueAttribute ("2002")]  
    public string Year;  
}  
```  
  
 <span data-ttu-id="2a543-133">另一种方法是使用特殊模式来创建由识别的布尔字段 <xref:System.Xml.Serialization.XmlSerializer> ，并将应用于 <xref:System.Xml.Serialization.XmlIgnoreAttribute> 该字段。</span><span class="sxs-lookup"><span data-stu-id="2a543-133">Another option is to use a special pattern to create a Boolean field recognized by the <xref:System.Xml.Serialization.XmlSerializer>, and to apply the <xref:System.Xml.Serialization.XmlIgnoreAttribute> to the field.</span></span> <span data-ttu-id="2a543-134">模式是以形式创建的 `propertyNameSpecified` 。</span><span class="sxs-lookup"><span data-stu-id="2a543-134">The pattern is created in the form of `propertyNameSpecified`.</span></span> <span data-ttu-id="2a543-135">例如，如果有一个名为 "MyFirstName" 的字段，还会创建一个名为 "MyFirstNameSpecified" 的字段，该字段指示 <xref:System.Xml.Serialization.XmlSerializer> 是否生成名为 "MyFirstName" 的 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="2a543-135">For example, if there is a field named "MyFirstName" you would also create a field named "MyFirstNameSpecified" that instructs the <xref:System.Xml.Serialization.XmlSerializer> whether to generate the XML element named "MyFirstName".</span></span> <span data-ttu-id="2a543-136">这在下面的示例中显示。</span><span class="sxs-lookup"><span data-stu-id="2a543-136">This is shown in the following example.</span></span>  
  
```vb  
Public Class OptionalOrder  
    ' This field's value should not be serialized   
    ' if it is uninitialized.  
    Public FirstOrder As String  
  
    ' Use the XmlIgnoreAttribute to ignore the   
    ' special field named "FirstOrderSpecified".  
    <System.Xml.Serialization.XmlIgnoreAttribute> _  
    Public FirstOrderSpecified As Boolean  
End Class  
```  
  
```csharp  
public class OptionalOrder  
{  
    // This field should not be serialized   
    // if it is uninitialized.  
    public string FirstOrder;  
  
    // Use the XmlIgnoreAttribute to ignore the   
    // special field named "FirstOrderSpecified".  
    [System.Xml.Serialization.XmlIgnoreAttribute]  
    public bool FirstOrderSpecified;  
}  
```  
  
## <a name="overriding-default-serialization"></a><span data-ttu-id="2a543-137">重写默认序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-137">Overriding Default Serialization</span></span>  
 <span data-ttu-id="2a543-138">您还可以通过创建一个适当的属性并将其添加到类的实例中，重写任何一组对象及其字段和属性的序列化 <xref:System.Xml.Serialization.XmlAttributes> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-138">You can also override the serialization of any set of objects and their fields and properties by creating one of the appropriate attributes, and adding it to an instance of the <xref:System.Xml.Serialization.XmlAttributes> class.</span></span> <span data-ttu-id="2a543-139">以这种方式重写序列化具有两个用途：首先，可以控制和增加 DLL 中找到的对象的序列化，即使您不具有对源的访问权限也是如此。其次，您可以创建一组可序列化类，但可以通过多种方式序列化这些对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-139">Overriding serialization in this way has two uses: first, you can control and augment the serialization of objects found in a DLL, even if you do not have access to the source; second, you can create one set of serializable classes, but serialize the objects in multiple ways.</span></span> <span data-ttu-id="2a543-140">有关更多详细信息，请参见 <xref:System.Xml.Serialization.XmlAttributeOverrides> 类和[如何：控制派生类的序列化](/dotnet/standard/serialization/how-to-control-serialization-of-derived-classes)。</span><span class="sxs-lookup"><span data-stu-id="2a543-140">For more details, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class and [How to: Control Serialization of Derived Classes](/dotnet/standard/serialization/how-to-control-serialization-of-derived-classes).</span></span>  
  
 <span data-ttu-id="2a543-141">若要序列化对象，请调用 <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="2a543-141">To serialize an object, call the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method.</span></span> <span data-ttu-id="2a543-142">若要反序列化对象，请调用 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="2a543-142">To deserialize an object, call the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method.</span></span>  
  
 <span data-ttu-id="2a543-143">若要向 XML 文档添加 XML 命名空间，请参阅 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-143">To add XML namespaces to an XML document, see <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2a543-144">为 <xref:System.Xml.Serialization.XmlSerializer> 实现或的类提供特殊处理 <xref:System.Collections.IEnumerable> <xref:System.Collections.ICollection> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-144">The <xref:System.Xml.Serialization.XmlSerializer> gives special treatment to classes that implement <xref:System.Collections.IEnumerable> or <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="2a543-145">实现 <xref:System.Collections.IEnumerable> 的类必须实现采用单个参数的公共 `Add` 方法。</span><span class="sxs-lookup"><span data-stu-id="2a543-145">A class that implements <xref:System.Collections.IEnumerable> must implement a public `Add` method that takes a single parameter.</span></span> <span data-ttu-id="2a543-146">此 `Add` 方法的参数必须与从返回的值的属性返回的类型相同 `Current` `GetEnumerator` ，或者是该类型的基中的一个。</span><span class="sxs-lookup"><span data-stu-id="2a543-146">The `Add` method's parameter must be of the same type as is returned from the `Current` property on the value returned from `GetEnumerator`, or one of that type's bases.</span></span> <span data-ttu-id="2a543-147">实现 <xref:System.Collections.ICollection> (（如) ）的类 <xref:System.Collections.CollectionBase> <xref:System.Collections.IEnumerable> 必须具有 `Item` 采用整数的 c # ) 中的 (索引器索引器，并且它必须具有 `Count` 整数类型的公共属性。</span><span class="sxs-lookup"><span data-stu-id="2a543-147">A class that implements <xref:System.Collections.ICollection> (such as <xref:System.Collections.CollectionBase>) in addition to <xref:System.Collections.IEnumerable> must have a public `Item` indexed property (indexer in C#) that takes an integer, and it must have a public `Count` property of type integer.</span></span> <span data-ttu-id="2a543-148">方法的参数 `Add` 必须与从属性返回的类型相同 `Item` ，或属于该类型的基类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-148">The parameter to the `Add` method must be the same type as is returned from the `Item` property, or one of that type's bases.</span></span> <span data-ttu-id="2a543-149">对于实现的类 <xref:System.Collections.ICollection> ，要序列化的值是从索引属性中检索的 `Item` ，而不是通过调用 `GetEnumerator` 。</span><span class="sxs-lookup"><span data-stu-id="2a543-149">For classes that implement <xref:System.Collections.ICollection>, values to be serialized are retrieved from the indexed `Item` property, not by calling `GetEnumerator`.</span></span>  
  
 <span data-ttu-id="2a543-150">您必须有权写入临时目录 (，如 TEMP 环境变量定义) 反序列化对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-150">You must have permission to write to the temporary directory (as defined by the TEMP environment variable) to deserialize an object.</span></span>  
  
## <a name="dynamically-generated-assemblies"></a><span data-ttu-id="2a543-151">动态生成的程序集</span><span class="sxs-lookup"><span data-stu-id="2a543-151">Dynamically Generated Assemblies</span></span>  
 <span data-ttu-id="2a543-152">为了提高性能，XML 序列化基础结构会动态生成程序集以序列化和反序列化指定的类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-152">To increase performance, the XML serialization infrastructure dynamically generates assemblies to serialize and deserialize specified types.</span></span> <span data-ttu-id="2a543-153">基础结构查找并重用这些程序集。</span><span class="sxs-lookup"><span data-stu-id="2a543-153">The infrastructure finds and reuses those assemblies.</span></span> <span data-ttu-id="2a543-154">仅当使用以下构造函数时，才会发生此行为：</span><span class="sxs-lookup"><span data-stu-id="2a543-154">This behavior occurs only when using the following constructors:</span></span>  
  
 <xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%29?displayProperty=nameWithType>  
  
 <xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.String%29?displayProperty=nameWithType>  
  
 <span data-ttu-id="2a543-155">如果使用其他任何构造函数，则将生成同一程序集的多个版本，并且永远不会卸载，这会导致内存泄漏和性能不佳。</span><span class="sxs-lookup"><span data-stu-id="2a543-155">If you use any of the other constructors, multiple versions of the same assembly are generated and never unloaded, which results in a memory leak and poor performance.</span></span> <span data-ttu-id="2a543-156">最简单的解决方案是使用前面提到的两个构造函数之一。</span><span class="sxs-lookup"><span data-stu-id="2a543-156">The easiest solution is to use one of the previously mentioned two constructors.</span></span> <span data-ttu-id="2a543-157">否则，你必须在中缓存程序集 <xref:System.Collections.Hashtable> ，如下面的示例中所示。</span><span class="sxs-lookup"><span data-stu-id="2a543-157">Otherwise, you must cache the assemblies in a <xref:System.Collections.Hashtable>, as shown in the following example.</span></span>  
  
```csharp  
Hashtable serializers = new Hashtable();  
  
// Use the constructor that takes a type and XmlRootAttribute.  
XmlSerializer s = new XmlSerializer(typeof(MyClass), myRoot);  
  
// Implement a method named GenerateKey that creates unique keys   
// for each instance of the XmlSerializer. The code should take   
// into account all parameters passed to the XmlSerializer   
// constructor.  
object key = GenerateKey(typeof(MyClass), myRoot);  
  
// Check the local cache for a matching serializer.  
XmlSerializer ser = (XmlSerializer)serializers[key];  
if (ser == null)   
{  
    ser = new XmlSerializer(typeof(MyClass), myRoot);  
    // Cache the serializer.  
    serializers[key] = ser;  
}

// Use the serializer to serialize or deserialize.
```  
  
```vb  
Dim serializers As New Hashtable()  
  
' Use the constructor that takes a type and XmlRootAttribute.  
Dim s As New XmlSerializer(GetType([MyClass]), myRoot)  
  
' Implement a method named GenerateKey that creates unique keys   
' for each instance of the XmlSerializer. The code should take   
' into account all parameters passed to the XmlSerializer   
' constructor.  
Dim key As Object = GenerateKey(GetType([MyClass]), myRoot)  
  
' Check the local cache for a matching serializer.  
Dim ser As XmlSerializer = CType(serializers(key), XmlSerializer)  
  
If ser Is Nothing Then  
    ser = New XmlSerializer(GetType([MyClass]), myRoot)  
    ' Cache the serializer.  
    serializers(key) = ser  
End If  

' Use the serializer to serialize or deserialize.
```  
  
## <a name="serialization-of-arraylist-and-generic-list"></a><span data-ttu-id="2a543-158">ArrayList 和泛型列表的序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-158">Serialization of ArrayList and Generic List</span></span>  
 <span data-ttu-id="2a543-159"><xref:System.Xml.Serialization.XmlSerializer>无法序列化或反序列化以下内容：</span><span class="sxs-lookup"><span data-stu-id="2a543-159">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize or deserialize the following:</span></span>  
  
-   <span data-ttu-id="2a543-160">的数组<xref:System.Collections.ArrayList></span><span class="sxs-lookup"><span data-stu-id="2a543-160">Arrays of <xref:System.Collections.ArrayList></span></span>  
  
-   <span data-ttu-id="2a543-161">的数组<xref:System.Collections.Generic.List%601></span><span class="sxs-lookup"><span data-stu-id="2a543-161">Arrays of <xref:System.Collections.Generic.List%601></span></span>  
  
## <a name="serialization-of-enumerations-of-unsigned-long"></a><span data-ttu-id="2a543-162">无符号 Long 的枚举的序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-162">Serialization of Enumerations of Unsigned Long</span></span>  
 <span data-ttu-id="2a543-163"><xref:System.Xml.Serialization.XmlSerializer>如果满足以下条件，则不能将实例化为序列化枚举：枚举的类型为无符号长 (（ `ulong` 在 c # 中） ) 并且枚举包含值大于9223372036854775807的任何成员。</span><span class="sxs-lookup"><span data-stu-id="2a543-163">The <xref:System.Xml.Serialization.XmlSerializer> cannot be instantiated to serialize an enumeration if the following conditions are true: The enumeration is of type unsigned long (`ulong` in C#) and the enumeration contains any member with a value larger than 9,223,372,036,854,775,807.</span></span> <span data-ttu-id="2a543-164">例如，无法对以下项进行序列化。</span><span class="sxs-lookup"><span data-stu-id="2a543-164">For example, the following cannot be serialized.</span></span>  
  
```  
public enum LargeNumbers: ulong  
{  
    a = 9223372036854775808  
}  
// At runtime, the following code will fail.  
xmlSerializer mySerializer=new XmlSerializer(typeof(LargeNumbers));  
```  
  
## <a name="objects-marked-with-the-obsolete-attribute-no-longer-serialized"></a><span data-ttu-id="2a543-165">已标记为已过时属性的对象不再序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-165">Objects marked with the Obsolete Attribute no longer serialized</span></span>  
 <span data-ttu-id="2a543-166">在类中， [!INCLUDE[netfx35_short](~/includes/netfx35-short-md.md)] <xref:System.Xml.Serialization.XmlSerializer> 不再序列化标记为的对象 `[Obsolete]` 。</span><span class="sxs-lookup"><span data-stu-id="2a543-166">In the [!INCLUDE[netfx35_short](~/includes/netfx35-short-md.md)] the <xref:System.Xml.Serialization.XmlSerializer> class no longer serializes objects that are marked as `[Obsolete]`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a543-167">下面的示例包含两个主要的类： `PurchaseOrder` 和 `Test` 。</span><span class="sxs-lookup"><span data-stu-id="2a543-167">The following example contains two main classes: `PurchaseOrder` and `Test`.</span></span> <span data-ttu-id="2a543-168">`PurchaseOrder`类包含有关单个购买的信息。</span><span class="sxs-lookup"><span data-stu-id="2a543-168">The `PurchaseOrder` class contains information about a single purchase.</span></span> <span data-ttu-id="2a543-169">`Test`类包含创建采购订单的方法，并读取创建的采购订单。</span><span class="sxs-lookup"><span data-stu-id="2a543-169">The `Test` class contains the methods that create the purchase order, and that read the created purchase order.</span></span>  
  
 [!code-cpp[Classic XmlSerializer Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="2a543-170">此类型是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="2a543-170">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlText" />
    <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-171">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-171">Introducing XML Serialization</span></span></related>
    <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-172">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-172">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
    <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-173">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-173">Controlling XML Serialization Using Attributes</span></span></related>
    <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-174">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-174">Examples of XML Serialization</span></span></related>
    <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-175">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-175">XML Schema Definition Tool (Xsd.exe)</span></span></related>
    <related type="Article" href="/dotnet/standard/serialization/how-to-control-serialization-of-derived-classes"><span data-ttu-id="2a543-176">如何：控制派生类的序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-176">How to: Control Serialization of Derived Classes</span></span></related>
    <related type="Article" href="/dotnet/standard/serialization/datetimeserialization-element"><span data-ttu-id="2a543-177">&lt;Datetimeserialization&amp;gt &gt; 元素</span><span class="sxs-lookup"><span data-stu-id="2a543-177">&lt;dateTimeSerialization&gt;Element</span></span></related>
    <related type="Article" href="/dotnet/standard/serialization/xmlserializer-element"><span data-ttu-id="2a543-178">&lt;xmlSerializer&gt; 元素</span><span class="sxs-lookup"><span data-stu-id="2a543-178">&lt;xmlSerializer&gt; Element</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a543-179">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2a543-179">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a543-180">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2a543-180">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2a543-181">此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-181">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</span></span></param>
        <summary><span data-ttu-id="2a543-182">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的新实例，该类可以将指定类型的对象序列化为 XML 文档，也可以将 XML 文档反序列化为指定类型的对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-182">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-183">通常情况下，应用程序定义多个 <xref:System.Xml.Serialization.XmlSerializer> 转换为单个 XML 实例文档的类。</span><span class="sxs-lookup"><span data-stu-id="2a543-183">Commonly, an application defines several classes that the <xref:System.Xml.Serialization.XmlSerializer> converts into a single XML-instance document.</span></span> <span data-ttu-id="2a543-184">但是， <xref:System.Xml.Serialization.XmlSerializer> 必须只知道一种类型，即表示 XML 根元素的类的类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-184">However, the <xref:System.Xml.Serialization.XmlSerializer> must know only one type--the type of the class that represents the XML root element.</span></span> <span data-ttu-id="2a543-185">将 <xref:System.Xml.Serialization.XmlSerializer> 自动序列化所有从属类实例。</span><span class="sxs-lookup"><span data-stu-id="2a543-185">The <xref:System.Xml.Serialization.XmlSerializer> automatically serializes all subordinate class instances.</span></span> <span data-ttu-id="2a543-186">同样，反序列化只需要 XML 根元素的类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-186">Similarly, only the type of the XML root element is required for deserialization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a543-187">下面的示例构造一个 <xref:System.Xml.Serialization.XmlSerializer> ，它对名为的对象进行序列化 `Widget` 。</span><span class="sxs-lookup"><span data-stu-id="2a543-187">The following example constructs an <xref:System.Xml.Serialization.XmlSerializer> that serializes an object named `Widget`.</span></span> <span data-ttu-id="2a543-188">该示例在调用方法之前设置对象的各种属性 <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-188">The example sets various properties of the object before calling the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer6 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer6 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer6 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer6 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer6 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer6 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-189">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-189">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-190">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-190">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-191">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-191">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-192">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-192">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-193">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-193">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (System.Xml.Serialization.XmlTypeMapping xmlTypeMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlTypeMapping xmlTypeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlTypeMapping As XmlTypeMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(System::Xml::Serialization::XmlTypeMapping ^ xmlTypeMapping);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : System.Xml.Serialization.XmlTypeMapping -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer xmlTypeMapping" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlTypeMapping" Type="System.Xml.Serialization.XmlTypeMapping" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="xmlTypeMapping"><span data-ttu-id="2a543-194">将一种类型映射到另一种类型的 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-194">An <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> that maps one type to another.</span></span></param>
        <summary><span data-ttu-id="2a543-195">使用将一个类型映射到另一个类型的对象来初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="2a543-195">Initializes an instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class using an object that maps one type to another.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-196">将 <xref:System.Xml.Serialization.XmlSerializer> 对象序列化为 SOAP 消息时，此构造函数用于创建。</span><span class="sxs-lookup"><span data-stu-id="2a543-196">This constructor is used to create an <xref:System.Xml.Serialization.XmlSerializer> when you serialize an object into a SOAP message.</span></span> <span data-ttu-id="2a543-197">若要控制生成的 SOAP 消息，请使用以命名空间中的 "Soap" ) 开头的特殊属性 (<xref:System.Xml.Serialization> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-197">To control the SOAP messages generated, use the special attributes (beginning with the word "Soap") found in the <xref:System.Xml.Serialization> namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a543-198">下面的示例对名为的类进行序列化 `Group` 。</span><span class="sxs-lookup"><span data-stu-id="2a543-198">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="2a543-199">`GroupName` `IgnoreThis` 重写、字段和枚举的成员的序列化 `GroupType` 。</span><span class="sxs-lookup"><span data-stu-id="2a543-199">The serialization of the `GroupName`, `IgnoreThis` fields, and the members of the `GroupType` enumeration are overridden.</span></span> <span data-ttu-id="2a543-200">在 `CreateOverrideSerializer` 方法中，将 <xref:System.Xml.Serialization.SoapAttributeOverrides> 创建一个对象，并为每个被重写的成员或枚举 <xref:System.Xml.Serialization.SoapAttributes> 创建一个对象，并将该对象设置为相应的属性集，并将其添加到 <xref:System.Xml.Serialization.SoapAttributeOverrides> 对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-200">In the `CreateOverrideSerializer` method, a <xref:System.Xml.Serialization.SoapAttributeOverrides> object is created, and for each overridden member or enumeration, a <xref:System.Xml.Serialization.SoapAttributes> object is created with the appropriate property set and added to the <xref:System.Xml.Serialization.SoapAttributeOverrides> object.</span></span> <span data-ttu-id="2a543-201"><xref:System.Xml.Serialization.XmlMapping>对象是使用对象创建的 <xref:System.Xml.Serialization.SoapAttributeOverrides> ，该 <xref:System.Xml.Serialization.XmlMapping> 对象用于创建 <xref:System.Xml.Serialization.XmlSerializer> 重写默认序列化的。</span><span class="sxs-lookup"><span data-stu-id="2a543-201">An <xref:System.Xml.Serialization.XmlMapping> object is created using the <xref:System.Xml.Serialization.SoapAttributeOverrides> object, and that <xref:System.Xml.Serialization.XmlMapping> object is used to create the <xref:System.Xml.Serialization.XmlSerializer> that overrides the default serialization.</span></span>  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-202">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-202">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-203">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-203">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-204">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-204">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-205">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-205">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-206">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-206">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As Type, defaultNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * string -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, defaultNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2a543-207">此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-207">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</span></span></param>
        <param name="defaultNamespace"><span data-ttu-id="2a543-208">用于所有 XML 元素的默认命名空间。</span><span class="sxs-lookup"><span data-stu-id="2a543-208">The default namespace to use for all the XML elements.</span></span></param>
        <summary><span data-ttu-id="2a543-209">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的新实例，该类可以将指定类型的对象序列化为 XML 文档，也可以将 XML 文档反序列化为指定类型的对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-209">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.</span></span> <span data-ttu-id="2a543-210">指定所有 XML 元素的默认命名空间。</span><span class="sxs-lookup"><span data-stu-id="2a543-210">Specifies the default namespace for all the XML elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2a543-211">下面的示例构造一个 <xref:System.Xml.Serialization.XmlSerializer> ，它对名为的对象进行序列化 `Widget` 。</span><span class="sxs-lookup"><span data-stu-id="2a543-211">The following example constructs an <xref:System.Xml.Serialization.XmlSerializer> that serializes an object named `Widget`.</span></span> <span data-ttu-id="2a543-212">该示例在调用方法之前设置对象的各种属性 <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-212">The example sets various properties of the object before calling the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-213">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-213">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-214">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-214">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-215">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-215">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-216">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-216">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-217">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-217">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, Type[] extraTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Type[] extraTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As Type, extraTypes As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, cli::array &lt;Type ^&gt; ^ extraTypes);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * Type[] -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, extraTypes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="extraTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2a543-218">此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-218">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</span></span></param>
        <param name="extraTypes"><span data-ttu-id="2a543-219">要序列化的其他对象类型的 <see cref="T:System.Type" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="2a543-219">A <see cref="T:System.Type" /> array of additional object types to serialize.</span></span></param>
        <summary><span data-ttu-id="2a543-220">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的新实例，该类可以将指定类型的对象序列化为 XML 文档，也可以将 XML 文档反序列化为指定类型的对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-220">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into object of a specified type.</span></span> <span data-ttu-id="2a543-221">如果属性或字段返回一个数组，则 <paramref name="extraTypes" /> 参数指定可插入到该数组的对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-221">If a property or field returns an array, the <paramref name="extraTypes" /> parameter specifies objects that can be inserted into the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-222">默认情况下，如果公共属性或字段返回对象或对象数组，则会自动序列化对象类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-222">By default, if a public property or field returns an object, or array of objects, the object types are automatically serialized.</span></span> <span data-ttu-id="2a543-223">但是，如果类包含的字段或属性返回类型的数组 <xref:System.Object> ，则可以将任何对象插入到该数组中。</span><span class="sxs-lookup"><span data-stu-id="2a543-223">However, if a class contains a field or property that returns an array of type <xref:System.Object>, any object can be inserted into that array.</span></span> <span data-ttu-id="2a543-224">在这种情况下， <xref:System.Xml.Serialization.XmlSerializer> 必须指示必须在数组中插入所有可能的对象类型 <xref:System.Object> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-224">In that case, the <xref:System.Xml.Serialization.XmlSerializer> must be instructed to expect all the possible object types that are inserted into the <xref:System.Object> array.</span></span> <span data-ttu-id="2a543-225">为此，请使用 `extraTypes` 参数来指定要序列化或反序列化的其他对象类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-225">To do this, use the `extraTypes` parameter to specify the extra object types to serialize or deserialize.</span></span>  
  
 <span data-ttu-id="2a543-226">你还可以使用 `extraTypes` 参数来指定派生自基类的类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-226">You can also use the `extraTypes` parameter to specify types derived from a base class.</span></span> <span data-ttu-id="2a543-227">例如，假设有一个名为的基类 `Phone` ，名为的类 `InternationalPhone` 派生自该类。</span><span class="sxs-lookup"><span data-stu-id="2a543-227">For example, suppose a base class named `Phone` exists, and a class named `InternationalPhone` derives from it.</span></span> <span data-ttu-id="2a543-228">使用 `extraTypes` 参数也可以指定派生类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-228">Use the `extraTypes` parameter to specify the derived type as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a543-229">下面的示例序列化一个类的实例，该类包含一个返回对象数组的公共字段。</span><span class="sxs-lookup"><span data-stu-id="2a543-229">The following example serializes an instance of a class that contains a public field that returns an array of objects.</span></span> <span data-ttu-id="2a543-230">`extraTypes`构造函数的参数 <xref:System.Xml.Serialization.XmlSerializer> 指定可以在数组中序列化的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-230">The `extraTypes` parameter of the <xref:System.Xml.Serialization.XmlSerializer> constructor specifies the types of the objects that can be serialized in the array.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer3 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-231">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-231">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-232">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-232">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-233">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-233">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-234">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-234">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-235">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-235">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As Type, overrides As XmlAttributeOverrides)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * System.Xml.Serialization.XmlAttributeOverrides -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, overrides)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2a543-236">要序列化的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-236">The type of the object to serialize.</span></span></param>
        <param name="overrides"><span data-ttu-id="2a543-237"><see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-237">An <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</span></span></param>
        <summary><span data-ttu-id="2a543-238">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的新实例，该类可以将指定类型的对象序列化为 XML 文档，也可以将 XML 文档反序列化为指定类型的对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-238">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.</span></span> <span data-ttu-id="2a543-239">要序列化的每个对象本身可包含类的实例，此重载可使用其他类重写这些实例。</span><span class="sxs-lookup"><span data-stu-id="2a543-239">Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-240">`overrides`参数可用于控制如何以 XML 编码字段和属性。</span><span class="sxs-lookup"><span data-stu-id="2a543-240">The `overrides` parameter can be used to control how fields and properties are encoded in XML.</span></span> <span data-ttu-id="2a543-241">这些设置将覆盖对象上已存在的任何属性。</span><span class="sxs-lookup"><span data-stu-id="2a543-241">These settings override any attributes that already exist on the objects.</span></span> <span data-ttu-id="2a543-242">当不能修改源代码或相同类需要多个编码时，这会很有用。</span><span class="sxs-lookup"><span data-stu-id="2a543-242">This can be useful when the source code cannot be modified or multiple encodings are required for the same classes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a543-243">下面的示例对 DLL 中定义的类的实例进行序列化并这样做，重写在 DLL 中找到的公共成员。</span><span class="sxs-lookup"><span data-stu-id="2a543-243">The following example serializes an instance of a class that is defined in a DLL and to do so, overrides the public members found in the DLL.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer4 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer4 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer4 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-244">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-244">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-245">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-245">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-246">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-246">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-247">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-247">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-248">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-248">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlRootAttribute root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlRootAttribute root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As Type, root As XmlRootAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlRootAttribute ^ root);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * System.Xml.Serialization.XmlRootAttribute -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, root)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2a543-249">此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-249">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</span></span></param>
        <param name="root"><span data-ttu-id="2a543-250">表示 XML 根元素的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-250">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> that represents the XML root element.</span></span></param>
        <summary><span data-ttu-id="2a543-251">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的新实例，该类可以将指定类型的对象序列化为 XML 文档，也可以将 XML 文档反序列化为指定类型的对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-251">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML documents, and deserialize an XML document into object of the specified type.</span></span> <span data-ttu-id="2a543-252">还可以指定作为 XML 根元素使用的类。</span><span class="sxs-lookup"><span data-stu-id="2a543-252">It also specifies the class to use as the XML root element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-253">XML 文档的根元素包含所有其他元素。</span><span class="sxs-lookup"><span data-stu-id="2a543-253">The root element of an XML document encloses all the other elements.</span></span> <span data-ttu-id="2a543-254">默认情况下，参数指定的对象 `type` 序列化为根元素。</span><span class="sxs-lookup"><span data-stu-id="2a543-254">By default, the object specified by the `type` parameter is serialized as the root element.</span></span> <span data-ttu-id="2a543-255">属性（如根元素的 XML 元素名称）是从对象获取的 `type` 。</span><span class="sxs-lookup"><span data-stu-id="2a543-255">Properties, such as the XML element name of the root element, are taken from the `type` object.</span></span> <span data-ttu-id="2a543-256">不过， `root` 参数允许您通过指定来替换默认对象的信息 <xref:System.Xml.Serialization.XmlRootAttribute> ; 该对象允许您设置不同的命名空间、元素名称等。</span><span class="sxs-lookup"><span data-stu-id="2a543-256">However, the `root` parameter allows you to replace the default object's information by specifying an <xref:System.Xml.Serialization.XmlRootAttribute>; the object allows you to set a different namespace, element name, and so on.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a543-257">下面的示例构造一个使用的，其中 <xref:System.Xml.Serialization.XmlSerializer> <xref:System.Xml.Serialization.XmlRootAttribute> 包含 XML 根元素的各种属性，如其命名空间和元素名称。</span><span class="sxs-lookup"><span data-stu-id="2a543-257">The following example constructs an <xref:System.Xml.Serialization.XmlSerializer> that uses an <xref:System.Xml.Serialization.XmlRootAttribute> that contains various properties of the XML root element, such as its namespace and element name.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-258">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-258">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-259">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-259">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-260">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-260">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-261">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-261">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-262">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-262">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides, class System.Type[] extraTypes, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As Type, overrides As XmlAttributeOverrides, extraTypes As Type(), root As XmlRootAttribute, defaultNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides, cli::array &lt;Type ^&gt; ^ extraTypes, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * System.Xml.Serialization.XmlAttributeOverrides * Type[] * System.Xml.Serialization.XmlRootAttribute * string -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, overrides, extraTypes, root, defaultNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
        <Parameter Name="extraTypes" Type="System.Type[]" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2a543-263">此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-263">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</span></span></param>
        <param name="overrides"><span data-ttu-id="2a543-264">一个 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />，它扩展或重写 <paramref name="type" /> 参数中指定类的行为。</span><span class="sxs-lookup"><span data-stu-id="2a543-264">An <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> that extends or overrides the behavior of the class specified in the <paramref name="type" /> parameter.</span></span></param>
        <param name="extraTypes"><span data-ttu-id="2a543-265">要序列化的其他对象类型的 <see cref="T:System.Type" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="2a543-265">A <see cref="T:System.Type" /> array of additional object types to serialize.</span></span></param>
        <param name="root"><span data-ttu-id="2a543-266">定义 XML 根元素属性的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-266">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> that defines the XML root element properties.</span></span></param>
        <param name="defaultNamespace"><span data-ttu-id="2a543-267">XML 文档中所有 XML 元素的默认命名空间。</span><span class="sxs-lookup"><span data-stu-id="2a543-267">The default namespace of all XML elements in the XML document.</span></span></param>
        <summary><span data-ttu-id="2a543-268">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的新实例，该类可将 <see cref="T:System.Object" /> 类型的对象序列化为 XML 文档实例，并可将 XML 文档实例反序列化为 <see cref="T:System.Object" /> 类型的对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-268">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of type <see cref="T:System.Object" /> into XML document instances, and deserialize XML document instances into objects of type <see cref="T:System.Object" />.</span></span> <span data-ttu-id="2a543-269">要序列化的每个对象本身可包含类的实例，此重载可使用其他类重写这些实例。</span><span class="sxs-lookup"><span data-stu-id="2a543-269">Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes.</span></span> <span data-ttu-id="2a543-270">此重载还指定所有 XML 元素的默认命名空间和用作 XML 根元素的类。</span><span class="sxs-lookup"><span data-stu-id="2a543-270">This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-271">`overrides`参数允许创建一个 <xref:System.Xml.Serialization.XmlSerializer> 序列化扩展或重写基类行为的类。</span><span class="sxs-lookup"><span data-stu-id="2a543-271">The `overrides` parameter allows for the creation of an <xref:System.Xml.Serialization.XmlSerializer> that serializes a class that extends or overrides the behavior of a base class.</span></span> <span data-ttu-id="2a543-272">例如，假设有一个 DLL，则可以创建继承或扩展 DLL 中包含的类的类。</span><span class="sxs-lookup"><span data-stu-id="2a543-272">For example, given a DLL, it is possible to create a class that inherits or extends a class contained in the DLL.</span></span> <span data-ttu-id="2a543-273">若要序列化此类，必须 <xref:System.Xml.Serialization.XmlAttributeOverrides> 在构造时使用类的实例 <xref:System.Xml.Serialization.XmlSerializer> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-273">To serialize such a class, you must use an instance of the <xref:System.Xml.Serialization.XmlAttributeOverrides> class when constructing the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="2a543-274">如需了解详情，请访问 <xref:System.Xml.Serialization.XmlAttributeOverrides>。</span><span class="sxs-lookup"><span data-stu-id="2a543-274">For more details, see <xref:System.Xml.Serialization.XmlAttributeOverrides>.</span></span>  
  
 <span data-ttu-id="2a543-275">默认情况下，如果公共属性或字段返回对象或对象数组，则会自动序列化对象类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-275">By default, if a public property or field returns an object, or array of objects, the object types are automatically serialized.</span></span> <span data-ttu-id="2a543-276">但是，如果类包含的字段或属性返回类型的数组 <xref:System.Object> ，则可以将任何对象插入到该数组中。</span><span class="sxs-lookup"><span data-stu-id="2a543-276">However, if a class contains a field or property that returns an array of type <xref:System.Object>, any object can be inserted into that array.</span></span> <span data-ttu-id="2a543-277">在这种情况下， <xref:System.Xml.Serialization.XmlSerializer> 必须指示必须在数组中插入所有可能的对象类型 <xref:System.Object> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-277">In that case, the <xref:System.Xml.Serialization.XmlSerializer> must be instructed to expect all the possible object types that are inserted into the <xref:System.Object> array.</span></span> <span data-ttu-id="2a543-278">为此，请使用 `extraTypes` 参数来指定要序列化或反序列化的其他对象类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-278">To do this, use the `extraTypes` parameter to specify the extra object types to serialize or deserialize.</span></span>  
  
 <span data-ttu-id="2a543-279">XML 文档的根元素包含所有其他元素。</span><span class="sxs-lookup"><span data-stu-id="2a543-279">The root element of an XML document encloses all the other elements.</span></span> <span data-ttu-id="2a543-280">默认情况下，参数指定的对象 `type` 序列化为根元素。</span><span class="sxs-lookup"><span data-stu-id="2a543-280">By default, the object specified by the `type` parameter is serialized as the root element.</span></span> <span data-ttu-id="2a543-281">属性（如根元素的 XML 元素名称）是从对象获取的 `type` 。</span><span class="sxs-lookup"><span data-stu-id="2a543-281">Properties, such as the XML element name of the root element are taken from the `type` object.</span></span> <span data-ttu-id="2a543-282">不过， `root` 参数允许您通过指定来替换默认对象的信息 <xref:System.Xml.Serialization.XmlRootAttribute> ; 该对象允许您设置不同的命名空间、元素名称等。</span><span class="sxs-lookup"><span data-stu-id="2a543-282">However, the `root` parameter allows you to replace the default object's information by specifying an <xref:System.Xml.Serialization.XmlRootAttribute>; the object allows you to set a different namespace, element name, and so on.</span></span>  
  
 <span data-ttu-id="2a543-283">使用 `defaultName` 参数指定由生成的所有 XML 元素的默认命名空间 <xref:System.Xml.Serialization.XmlSerializer> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-283">Use the `defaultName` parameter to specify the default namespace of all XML elements generated by the <xref:System.Xml.Serialization.XmlSerializer>.</span></span>
  
## Examples  
 <span data-ttu-id="2a543-284">下面的示例对 DLL 中定义的类的实例进行序列化并这样做，重写在类中找到的公共成员。</span><span class="sxs-lookup"><span data-stu-id="2a543-284">The following example serializes an instance of a class that is defined in a DLL and to do so, overrides the public members found in the class.</span></span> <span data-ttu-id="2a543-285">该示例还指定了一组附加类型、所有 XML 元素的默认命名空间，以及提供 XML 根元素信息的类。</span><span class="sxs-lookup"><span data-stu-id="2a543-285">The example also specifies an array of extra types, the default namespace for all XML elements, and the class to use that provides the XML root element information.</span></span> <span data-ttu-id="2a543-286">该示例假设开头的代码已编译到名为的 DLL 中 `HighSchool` 。</span><span class="sxs-lookup"><span data-stu-id="2a543-286">The example assumes that the code at the beginning has been compiled into a DLL named `HighSchool`.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
        <altmember cref="T:System.Xml.Serialization.XmlRootAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-287">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-287">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-288">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-288">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-289">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-289">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-290">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-290">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-291">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-291">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides, class System.Type[] extraTypes, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As Type, overrides As XmlAttributeOverrides, extraTypes As Type(), root As XmlRootAttribute, defaultNamespace As String, location As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides, cli::array &lt;Type ^&gt; ^ extraTypes, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace, System::String ^ location);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * System.Xml.Serialization.XmlAttributeOverrides * Type[] * System.Xml.Serialization.XmlRootAttribute * string * string -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, overrides, extraTypes, root, defaultNamespace, location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="extraTypes" Type="System.Type[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="defaultNamespace" Type="System.String" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="location" Type="System.String" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2a543-292">此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-292">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</span></span></param>
        <param name="overrides"><span data-ttu-id="2a543-293">一个 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />，它扩展或重写 <paramref name="type" /> 参数中指定类的行为。</span><span class="sxs-lookup"><span data-stu-id="2a543-293">An <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> that extends or overrides the behavior of the class specified in the <paramref name="type" /> parameter.</span></span></param>
        <param name="extraTypes"><span data-ttu-id="2a543-294">要序列化的其他对象类型的 <see cref="T:System.Type" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="2a543-294">A <see cref="T:System.Type" /> array of additional object types to serialize.</span></span></param>
        <param name="root"><span data-ttu-id="2a543-295">定义 XML 根元素属性的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-295">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> that defines the XML root element properties.</span></span></param>
        <param name="defaultNamespace"><span data-ttu-id="2a543-296">XML 文档中所有 XML 元素的默认命名空间。</span><span class="sxs-lookup"><span data-stu-id="2a543-296">The default namespace of all XML elements in the XML document.</span></span></param>
        <param name="location"><span data-ttu-id="2a543-297">该类型的位置。</span><span class="sxs-lookup"><span data-stu-id="2a543-297">The location of the types.</span></span></param>
        <summary><span data-ttu-id="2a543-298">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的新实例，该类可将 <see cref="T:System.Object" /> 类型的对象序列化为 XML 文档实例，并可将 XML 文档实例反序列化为 <see cref="T:System.Object" /> 类型的对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-298">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of type <see cref="T:System.Object" /> into XML document instances, and deserialize XML document instances into objects of type <see cref="T:System.Object" />.</span></span> <span data-ttu-id="2a543-299">要序列化的每个对象本身可包含类的实例，此重载可使用其他类重写这些实例。</span><span class="sxs-lookup"><span data-stu-id="2a543-299">Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes.</span></span> <span data-ttu-id="2a543-300">此重载还指定所有 XML 元素的默认命名空间和用作 XML 根元素的类。</span><span class="sxs-lookup"><span data-stu-id="2a543-300">This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides, class System.Type[] extraTypes, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As Type, overrides As XmlAttributeOverrides, extraTypes As Type(), root As XmlRootAttribute, defaultNamespace As String, location As String, evidence As Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides, cli::array &lt;Type ^&gt; ^ extraTypes, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace, System::String ^ location, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * System.Xml.Serialization.XmlAttributeOverrides * Type[] * System.Xml.Serialization.XmlRootAttribute * string * string * System.Security.Policy.Evidence -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, overrides, extraTypes, root, defaultNamespace, location, evidence)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("This method is obsolete and will be removed in a future release of the .NET Framework. Please use a XmlSerializer constructor overload which does not take an Evidence parameter. See http://go2.microsoft.com/fwlink/?LinkId=131738 for more information.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is obsolete and will be removed in a future release of the .NET Framework. Please use a XmlSerializer constructor overload which does not take an Evidence parameter. See http://go2.microsoft.com/fwlink/?LinkId=131738 for more information.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="extraTypes" Type="System.Type[]" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defaultNamespace" Type="System.String" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="location" Type="System.String" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2a543-301">此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可序列化的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-301">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</span></span></param>
        <param name="overrides"><span data-ttu-id="2a543-302">一个 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />，它扩展或重写 <paramref name="type" /> 参数中指定类的行为。</span><span class="sxs-lookup"><span data-stu-id="2a543-302">An <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> that extends or overrides the behavior of the class specified in the <paramref name="type" /> parameter.</span></span></param>
        <param name="extraTypes"><span data-ttu-id="2a543-303">要序列化的其他对象类型的 <see cref="T:System.Type" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="2a543-303">A <see cref="T:System.Type" /> array of additional object types to serialize.</span></span></param>
        <param name="root"><span data-ttu-id="2a543-304">定义 XML 根元素属性的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-304">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> that defines the XML root element properties.</span></span></param>
        <param name="defaultNamespace"><span data-ttu-id="2a543-305">XML 文档中所有 XML 元素的默认命名空间。</span><span class="sxs-lookup"><span data-stu-id="2a543-305">The default namespace of all XML elements in the XML document.</span></span></param>
        <param name="location"><span data-ttu-id="2a543-306">该类型的位置。</span><span class="sxs-lookup"><span data-stu-id="2a543-306">The location of the types.</span></span></param>
        <param name="evidence"><span data-ttu-id="2a543-307"><see cref="T:System.Security.Policy.Evidence" /> 类的实例，其中包含访问类型所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="2a543-307">An instance of the <see cref="T:System.Security.Policy.Evidence" /> class that contains credentials required to access types.</span></span></param>
        <summary><span data-ttu-id="2a543-308">初始化 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的新实例，该类可以将指定类型的对象序列化为 XML 文档，也可以将 XML 文档反序列化为指定类型的对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-308">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML document instances, and deserialize XML document instances into objects of the specified type.</span></span> <span data-ttu-id="2a543-309">此重载允许您提供在序列化或反序列化操作过程中可能遇到的其他类型；还允许您提供所有 XML 元素的默认命名空间，作为 XML 根元素使用的类，类的位置和访问所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="2a543-309">This overload allows you to supply other types that can be encountered during a serialization or deserialization operation, as well as a default namespace for all XML elements, the class to use as the XML root element, its location, and credentials required for access.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-310">允许对临时目录的访问进行更精确的控制，并防止代码注入和利用。</span><span class="sxs-lookup"><span data-stu-id="2a543-310">Allows more precise control over access to a temporary directory and prevents code injection and exploitation.</span></span> <span data-ttu-id="2a543-311">若要使用此方法，请指定一个位置并仅向特定用户授予访问权限。</span><span class="sxs-lookup"><span data-stu-id="2a543-311">To use this method, specify a location and give access only to specific users.</span></span> <span data-ttu-id="2a543-312">管理员可以设置策略，并将证据列表与权限进行匹配。</span><span class="sxs-lookup"><span data-stu-id="2a543-312">Administrators can set up policies with evidence lists that match evidence to permissions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDeserialize">
      <MemberSignature Language="C#" Value="public virtual bool CanDeserialize (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDeserialize(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanDeserialize (xmlReader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanDeserialize(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="abstract member CanDeserialize : System.Xml.XmlReader -&gt; bool&#xA;override this.CanDeserialize : System.Xml.XmlReader -&gt; bool" Usage="xmlSerializer.CanDeserialize xmlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="2a543-313">指向要反序列化的文档的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-313">An <see cref="T:System.Xml.XmlReader" /> that points to the document to deserialize.</span></span></param>
        <summary><span data-ttu-id="2a543-314">获取一个值，该值指示此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否可以反序列化指定的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="2a543-314">Gets a value that indicates whether this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can deserialize a specified XML document.</span></span></summary>
        <returns><span data-ttu-id="2a543-315">如果此 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可以反序列化 <see cref="T:System.Xml.XmlReader" /> 指向的对象，则为 <see langword="true" />，否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-315"><see langword="true" /> if this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can deserialize the object that the <see cref="T:System.Xml.XmlReader" /> points to; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2a543-316">下面的示例调用 <xref:System.Xml.Serialization.XmlSerializer.CanDeserialize%2A> 方法以检查 XML 文档是否可以反序列化。</span><span class="sxs-lookup"><span data-stu-id="2a543-316">The following example calls the <xref:System.Xml.Serialization.XmlSerializer.CanDeserialize%2A> method to check whether an XML document can be deserialized.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.CanDeserialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.CanDeserialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.CanDeserialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.CanDeserialize Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.CanDeserialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.CanDeserialize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="CreateReader">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Serialization.XmlSerializationReader CreateReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Serialization.XmlSerializationReader CreateReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.CreateReader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateReader () As XmlSerializationReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Serialization::XmlSerializationReader ^ CreateReader();" />
      <MemberSignature Language="F#" Value="abstract member CreateReader : unit -&gt; System.Xml.Serialization.XmlSerializationReader&#xA;override this.CreateReader : unit -&gt; System.Xml.Serialization.XmlSerializationReader" Usage="xmlSerializer.CreateReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializationReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a543-317">返回一个对象，该对象用于读取要进行序列化的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="2a543-317">Returns an object used to read the XML document to be serialized.</span></span></summary>
        <returns><span data-ttu-id="2a543-318">一个用于读取 XML 文档的 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-318">An <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> used to read the XML document.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2a543-319">当未在子类中重写该方法时，为访问该方法进行的任何尝试。</span><span class="sxs-lookup"><span data-stu-id="2a543-319">Any attempt is made to access the method when the method is not overridden in a descendant class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWriter">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Serialization.XmlSerializationWriter CreateWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Serialization.XmlSerializationWriter CreateWriter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.CreateWriter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateWriter () As XmlSerializationWriter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Serialization::XmlSerializationWriter ^ CreateWriter();" />
      <MemberSignature Language="F#" Value="abstract member CreateWriter : unit -&gt; System.Xml.Serialization.XmlSerializationWriter&#xA;override this.CreateWriter : unit -&gt; System.Xml.Serialization.XmlSerializationWriter" Usage="xmlSerializer.CreateWriter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializationWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a543-320">当在派生类中重写时，返回用于序列化对象的编写器。</span><span class="sxs-lookup"><span data-stu-id="2a543-320">When overridden in a derived class, returns a writer used to serialize the object.</span></span></summary>
        <returns><span data-ttu-id="2a543-321">实现 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="2a543-321">An instance that implements the <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2a543-322">当未在子类中重写该方法时，为访问该方法进行的任何尝试。</span><span class="sxs-lookup"><span data-stu-id="2a543-322">Any attempt is made to access the method when the method is not overridden in a descendant class.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Deserialize">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a543-323">反序列化 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="2a543-323">Deserializes an XML document.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (stream As Stream) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.IO.Stream -&gt; obj" Usage="xmlSerializer.Deserialize stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="2a543-324">包含要反序列化的 XML 文档的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-324">The <see cref="T:System.IO.Stream" /> that contains the XML document to deserialize.</span></span></param>
        <summary><span data-ttu-id="2a543-325">反序列化指定 <see cref="T:System.IO.Stream" /> 包含的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="2a543-325">Deserializes the XML document contained by the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <returns><span data-ttu-id="2a543-326">正被反序列化的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-326">The <see cref="T:System.Object" /> being deserialized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-327">反序列化是读取 XML 文档并构造强类型化到该文档 (XSD) 的对象的过程。</span><span class="sxs-lookup"><span data-stu-id="2a543-327">Deserialization is the process of reading an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.</span></span>  
  
 <span data-ttu-id="2a543-328">在反序列化之前， <xref:System.Xml.Serialization.XmlSerializer> 必须使用要反序列化的对象的类型来构造。</span><span class="sxs-lookup"><span data-stu-id="2a543-328">Before deserializing, an <xref:System.Xml.Serialization.XmlSerializer> must be constructed using the type of the object that is being deserialized.</span></span>  
  
 <span data-ttu-id="2a543-329">使用 `stream` 参数指定派生自类的对象 <xref:System.IO.Stream> ，该类旨在写入流。</span><span class="sxs-lookup"><span data-stu-id="2a543-329">Use the `stream` parameter to specify an object that derives from the <xref:System.IO.Stream> class, which is designed to write to streams.</span></span> <span data-ttu-id="2a543-330">派生自类的类 <xref:System.IO.Stream> 包括：</span><span class="sxs-lookup"><span data-stu-id="2a543-330">Classes that derive from the <xref:System.IO.Stream> class include:</span></span>  
  
-   <xref:System.IO.BufferedStream>  
  
-   <xref:System.IO.FileStream>  
  
-   <xref:System.IO.MemoryStream>  
  
-   <xref:System.Net.Sockets.NetworkStream>  
  
-   <xref:System.Security.Cryptography.CryptoStream>  
  
> [!NOTE]
>  <span data-ttu-id="2a543-331"><xref:System.Xml.Serialization.XmlSerializer>无法反序列化以下内容：的数组 <xref:System.Collections.ArrayList> 和数组 <xref:System.Collections.Generic.List%601> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-331">The <xref:System.Xml.Serialization.XmlSerializer> cannot deserialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a543-332">下面的示例使用对象对对象进行反序列化 <xref:System.IO.Stream> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-332">The following example deserializes an object using a <xref:System.IO.Stream> object.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-333">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-333">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-334">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-334">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-335">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-335">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-336">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-336">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-337">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-337">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.TextReader textReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.IO.TextReader textReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (textReader As TextReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::IO::TextReader ^ textReader);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.IO.TextReader -&gt; obj" Usage="xmlSerializer.Deserialize textReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="textReader"><span data-ttu-id="2a543-338">包含要反序列化的 XML 文档的 <see cref="T:System.IO.TextReader" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-338">The <see cref="T:System.IO.TextReader" /> that contains the XML document to deserialize.</span></span></param>
        <summary><span data-ttu-id="2a543-339">反序列化指定 <see cref="T:System.IO.TextReader" /> 包含的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="2a543-339">Deserializes the XML document contained by the specified <see cref="T:System.IO.TextReader" />.</span></span></summary>
        <returns><span data-ttu-id="2a543-340">正被反序列化的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-340">The <see cref="T:System.Object" /> being deserialized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-341">反序列化是读取 XML 文档实例，并构造强类型化为该文档 (XSD) 的对象的过程。</span><span class="sxs-lookup"><span data-stu-id="2a543-341">Deserialization is the process of reading an instance of an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.</span></span>  
  
 <span data-ttu-id="2a543-342">在反序列化之前， <xref:System.Xml.Serialization.XmlSerializer> 必须使用要反序列化的对象的类型来构造。</span><span class="sxs-lookup"><span data-stu-id="2a543-342">Before deserializing, an <xref:System.Xml.Serialization.XmlSerializer> must be constructed using the type of the object that is being deserialized.</span></span>  
  
 <span data-ttu-id="2a543-343">继承自的类 <xref:System.IO.TextReader> 包括 <xref:System.IO.StringReader> 和 <xref:System.IO.StreamReader> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-343">Classes that inherit from <xref:System.IO.TextReader> include <xref:System.IO.StringReader> and <xref:System.IO.StreamReader>.</span></span> <span data-ttu-id="2a543-344">如果使用 <xref:System.IO.StreamReader> 反序列化对象，则必须 <xref:System.IO.StreamReader> 使用适当的构造 <xref:System.Text.Encoding> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-344">If you are using a <xref:System.IO.StreamReader> to deserialize an object, you must construct the <xref:System.IO.StreamReader> with an appropriate <xref:System.Text.Encoding>.</span></span> <span data-ttu-id="2a543-345">XML 文档指定的编码将被忽略。</span><span class="sxs-lookup"><span data-stu-id="2a543-345">The encoding specified by the XML document is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2a543-346">若要使用 XML 文档指定的编码，请使用 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 采用的重载 <xref:System.Xml.XmlReader> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-346">To use the encoding specified by the XML document, use the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> overload that takes an <xref:System.Xml.XmlReader> instead.</span></span> <span data-ttu-id="2a543-347"><xref:System.Xml.XmlReader>自动检测并使用 XML 文档指定的编码。</span><span class="sxs-lookup"><span data-stu-id="2a543-347">The <xref:System.Xml.XmlReader> automatically detects and uses the encoding specified by the XML document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2a543-348"><xref:System.Xml.Serialization.XmlSerializer>无法反序列化以下内容：的数组 <xref:System.Collections.ArrayList> 和数组 <xref:System.Collections.Generic.List%601> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-348">The <xref:System.Xml.Serialization.XmlSerializer> cannot deserialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a543-349">下面的示例使用对象对对象进行反序列化 <xref:System.IO.TextReader> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-349">The following example deserializes an object using a <xref:System.IO.TextReader> object.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Deserialize1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Deserialize1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Deserialize1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2a543-350">反序列化期间发生错误。</span><span class="sxs-lookup"><span data-stu-id="2a543-350">An error occurred during deserialization.</span></span> <span data-ttu-id="2a543-351">使用 <see cref="P:System.Exception.InnerException" /> 属性时可使用原始异常。</span><span class="sxs-lookup"><span data-stu-id="2a543-351">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-352">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-352">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-353">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-353">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-354">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-354">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-355">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-355">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-356">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-356">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="protected virtual object Deserialize (System.Xml.Serialization.XmlSerializationReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object Deserialize(class System.Xml.Serialization.XmlSerializationReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Deserialize (reader As XmlSerializationReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ Deserialize(System::Xml::Serialization::XmlSerializationReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Xml.Serialization.XmlSerializationReader -&gt; obj&#xA;override this.Deserialize : System.Xml.Serialization.XmlSerializationReader -&gt; obj" Usage="xmlSerializer.Deserialize reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.Serialization.XmlSerializationReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="2a543-357">包含要反序列化的 XML 文档的 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-357">The <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> that contains the XML document to deserialize.</span></span></param>
        <summary><span data-ttu-id="2a543-358">反序列化指定 <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> 包含的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="2a543-358">Deserializes the XML document contained by the specified <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</span></span></summary>
        <returns><span data-ttu-id="2a543-359">已反序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-359">The deserialized object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2a543-360">当未在子类中重写该方法时，为访问该方法进行的任何尝试。</span><span class="sxs-lookup"><span data-stu-id="2a543-360">Any attempt is made to access the method when the method is not overridden in a descendant class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (xmlReader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.Xml.XmlReader -&gt; obj" Usage="xmlSerializer.Deserialize xmlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="2a543-361">包含要反序列化的 XML 文档的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-361">The <see cref="T:System.Xml.XmlReader" /> that contains the XML document to deserialize.</span></span></param>
        <summary><span data-ttu-id="2a543-362">反序列化指定 <see cref="T:System.Xml.XmlReader" /> 包含的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="2a543-362">Deserializes the XML document contained by the specified <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="2a543-363">正被反序列化的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-363">The <see cref="T:System.Object" /> being deserialized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-364">反序列化是读取 XML 文档实例，并构造强类型化为该文档 (XSD) 的对象的过程。</span><span class="sxs-lookup"><span data-stu-id="2a543-364">Deserialization is the process of reading an instance of an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.</span></span>  
  
 <span data-ttu-id="2a543-365">在反序列化之前， <xref:System.Xml.Serialization.XmlSerializer> 必须使用要反序列化的对象的类型来构造。</span><span class="sxs-lookup"><span data-stu-id="2a543-365">Before deserializing, an <xref:System.Xml.Serialization.XmlSerializer> must be constructed using the type of the object that is being deserialized.</span></span>  
  
 <span data-ttu-id="2a543-366"><xref:System.Xml.XmlReader>自动检测并使用 XML 文档指定的编码。</span><span class="sxs-lookup"><span data-stu-id="2a543-366">The <xref:System.Xml.XmlReader> automatically detects and uses the encoding specified by the XML document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2a543-367"><xref:System.Xml.Serialization.XmlSerializer>无法反序列化以下内容：的数组 <xref:System.Collections.ArrayList> 和数组 <xref:System.Collections.Generic.List%601> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-367">The <xref:System.Xml.Serialization.XmlSerializer> cannot deserialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a543-368">下面的示例使用对对象进行反序列化 <xref:System.Xml.XmlReader> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-368">The following example deserializes an object using an <xref:System.Xml.XmlReader>.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2a543-369">反序列化期间发生错误。</span><span class="sxs-lookup"><span data-stu-id="2a543-369">An error occurred during deserialization.</span></span> <span data-ttu-id="2a543-370">使用 <see cref="P:System.Exception.InnerException" /> 属性时可使用原始异常。</span><span class="sxs-lookup"><span data-stu-id="2a543-370">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-371">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-371">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-372">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-372">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-373">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-373">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-374">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-374">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-375">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-375">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader, string encodingStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader, string encodingStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (xmlReader As XmlReader, encodingStyle As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader, System::String ^ encodingStyle);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.Xml.XmlReader * string -&gt; obj" Usage="xmlSerializer.Deserialize (xmlReader, encodingStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="encodingStyle" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="2a543-376">包含要反序列化的 XML 文档的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-376">The <see cref="T:System.Xml.XmlReader" /> that contains the XML document to deserialize.</span></span></param>
        <param name="encodingStyle"><span data-ttu-id="2a543-377">序列化的 XML 的编码样式。</span><span class="sxs-lookup"><span data-stu-id="2a543-377">The encoding style of the serialized XML.</span></span></param>
        <summary><span data-ttu-id="2a543-378">反序列化指定 <see cref="T:System.Xml.XmlReader" /> 和编码样式包含的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="2a543-378">Deserializes the XML document contained by the specified <see cref="T:System.Xml.XmlReader" /> and encoding style.</span></span></summary>
        <returns><span data-ttu-id="2a543-379">已反序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-379">The deserialized object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-380">反序列化是读取 XML 文档实例，并构造强类型化为该文档 (XSD) 的对象的过程。</span><span class="sxs-lookup"><span data-stu-id="2a543-380">Deserialization is the process of reading an instance of an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.</span></span>  
  
 <span data-ttu-id="2a543-381">在反序列化之前， <xref:System.Xml.Serialization.XmlSerializer> 必须使用要反序列化的对象的类型来构造。</span><span class="sxs-lookup"><span data-stu-id="2a543-381">Before deserializing, an <xref:System.Xml.Serialization.XmlSerializer> must be constructed using the type of the object that is being deserialized.</span></span>  
  
 <span data-ttu-id="2a543-382">`encodingStyle` <http://schemas.xmlsoap.org/soap/encoding/> 对于 soap 版本1.1 编码，请将参数设置为 ""; 否则，请将其设置为 " <http://www.w3.org/2001/12/soap-encoding> " 进行 soap 版本1.2 编码。</span><span class="sxs-lookup"><span data-stu-id="2a543-382">Set the `encodingStyle` parameter to "<http://schemas.xmlsoap.org/soap/encoding/>" for SOAP version 1.1 encoding; otherwise, set it to "<http://www.w3.org/2001/12/soap-encoding>" for SOAP version 1.2 encoding.</span></span>  
  
 <span data-ttu-id="2a543-383">**注意**<xref:System.Xml.Serialization.XmlSerializer>无法反序列化以下内容：的数组 <xref:System.Collections.ArrayList> 和数组 <xref:System.Collections.Generic.List%601> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-383">**Note** The <xref:System.Xml.Serialization.XmlSerializer> cannot deserialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2a543-384">反序列化期间发生错误。</span><span class="sxs-lookup"><span data-stu-id="2a543-384">An error occurred during deserialization.</span></span> <span data-ttu-id="2a543-385">使用 <see cref="P:System.Exception.InnerException" /> 属性时可使用原始异常。</span><span class="sxs-lookup"><span data-stu-id="2a543-385">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-386">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-386">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-387">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-387">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-388">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-388">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-389">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-389">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-390">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-390">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader, System.Xml.Serialization.XmlDeserializationEvents events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader, valuetype System.Xml.Serialization.XmlDeserializationEvents events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (xmlReader As XmlReader, events As XmlDeserializationEvents) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader, System::Xml::Serialization::XmlDeserializationEvents events);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.Xml.XmlReader * System.Xml.Serialization.XmlDeserializationEvents -&gt; obj" Usage="xmlSerializer.Deserialize (xmlReader, events)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="events" Type="System.Xml.Serialization.XmlDeserializationEvents" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="2a543-391">包含要反序列化的文档的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-391">The <see cref="T:System.Xml.XmlReader" /> that contains the document to deserialize.</span></span></param>
        <param name="events"><span data-ttu-id="2a543-392"><see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="2a543-392">An instance of the <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> class.</span></span></param>
        <summary><span data-ttu-id="2a543-393">反序列化一个由指定的 <see cref="T:System.Xml.XmlReader" /> 包含的 XML 文档，并允许重写反序列化过程中发生的事件。</span><span class="sxs-lookup"><span data-stu-id="2a543-393">Deserializes an XML document contained by the specified <see cref="T:System.Xml.XmlReader" /> and allows the overriding of events that occur during deserialization.</span></span></summary>
        <returns><span data-ttu-id="2a543-394">正被反序列化的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-394">The <see cref="T:System.Object" /> being deserialized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-395">要反序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-395">The object being deserialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader, string encodingStyle, System.Xml.Serialization.XmlDeserializationEvents events);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader, string encodingStyle, valuetype System.Xml.Serialization.XmlDeserializationEvents events) cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (xmlReader As XmlReader, encodingStyle As String, events As XmlDeserializationEvents) As Object" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader, System::String ^ encodingStyle, System::Xml::Serialization::XmlDeserializationEvents events);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.Xml.XmlReader * string * System.Xml.Serialization.XmlDeserializationEvents -&gt; obj" Usage="xmlSerializer.Deserialize (xmlReader, encodingStyle, events)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="encodingStyle" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="events" Type="System.Xml.Serialization.XmlDeserializationEvents" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="2a543-396"><see cref="T:System.Xml.XmlReader" /> 类的实例，用于读取文档。</span><span class="sxs-lookup"><span data-stu-id="2a543-396">An instance of the <see cref="T:System.Xml.XmlReader" /> class used to read the document.</span></span></param>
        <param name="encodingStyle"><span data-ttu-id="2a543-397">使用的编码方式。</span><span class="sxs-lookup"><span data-stu-id="2a543-397">The encoding used.</span></span></param>
        <param name="events"><span data-ttu-id="2a543-398"><see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="2a543-398">An instance of the <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> class.</span></span></param>
        <summary><span data-ttu-id="2a543-399">使用指定的 <see cref="T:System.Xml.XmlReader" /> 包含的数据反序列化该对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-399">Deserializes the object using the data contained by the specified <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="2a543-400">要反序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-400">The object being deserialized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-401">仅对 Web 服务方案的未知标头进行反序列化时，此方法是必需的。</span><span class="sxs-lookup"><span data-stu-id="2a543-401">This method is required for deserialization of unknown headers for Web Service scenarios only.</span></span> <span data-ttu-id="2a543-402">此方法允许你在 Web 服务方法中避免事件同步。</span><span class="sxs-lookup"><span data-stu-id="2a543-402">This method allows you to avoid event synchronization in Web Service methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromMappings">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a543-403">从指定的映射返回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="2a543-403">Returns an instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class from the specified mappings.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromMappings">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromMappings (System.Xml.Serialization.XmlMapping[] mappings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromMappings(class System.Xml.Serialization.XmlMapping[] mappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromMappings (mappings As XmlMapping()) As XmlSerializer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromMappings(cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings);" />
      <MemberSignature Language="F#" Value="static member FromMappings : System.Xml.Serialization.XmlMapping[] -&gt; System.Xml.Serialization.XmlSerializer[]" Usage="System.Xml.Serialization.XmlSerializer.FromMappings mappings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="mappings"><span data-ttu-id="2a543-404">将一种类型映射到另一种类型的 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 的数组。</span><span class="sxs-lookup"><span data-stu-id="2a543-404">An array of <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> that maps one type to another.</span></span></param>
        <summary><span data-ttu-id="2a543-405">返回从 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 对象的数组创建的 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="2a543-405">Returns an array of <see cref="T:System.Xml.Serialization.XmlSerializer" /> objects created from an array of <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> objects.</span></span></summary>
        <returns><span data-ttu-id="2a543-406">一个 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="2a543-406">An array of <see cref="T:System.Xml.Serialization.XmlSerializer" /> objects.</span></span></returns>
        <remarks><span data-ttu-id="2a543-407">当有重复调用此方法时，建议调用方缓存返回的序列化程序。</span><span class="sxs-lookup"><span data-stu-id="2a543-407">It is recommended for callers to cache the returned serializer when there are repeated calls to this method.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMappings">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromMappings (System.Xml.Serialization.XmlMapping[] mappings, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromMappings(class System.Xml.Serialization.XmlMapping[] mappings, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromMappings (mappings As XmlMapping(), evidence As Evidence) As XmlSerializer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromMappings(cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="static member FromMappings : System.Xml.Serialization.XmlMapping[] * System.Security.Policy.Evidence -&gt; System.Xml.Serialization.XmlSerializer[]" Usage="System.Xml.Serialization.XmlSerializer.FromMappings (mappings, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("This method is obsolete and will be removed in a future release of the .NET Framework. Please use an overload of FromMappings which does not take an Evidence parameter. See http://go2.microsoft.com/fwlink/?LinkId=131738 for more information.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is obsolete and will be removed in a future release of the .NET Framework. Please use an overload of FromMappings which does not take an Evidence parameter. See http://go2.microsoft.com/fwlink/?LinkId=131738 for more information.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="mappings"><span data-ttu-id="2a543-408">一个 <see cref="T:System.Xml.Serialization.XmlMapping" /> 对象的数组，这些对象用于将一个类型映射到另一个类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-408">An array of <see cref="T:System.Xml.Serialization.XmlMapping" /> objects used to map one type to another.</span></span></param>
        <param name="evidence"><span data-ttu-id="2a543-409"><see cref="T:System.Security.Policy.Evidence" /> 类的实例，包含为公共语言运行时策略系统提供的主机数据和程序集数据。</span><span class="sxs-lookup"><span data-stu-id="2a543-409">An instance of the <see cref="T:System.Security.Policy.Evidence" /> class that contains host and assembly data presented to the common language runtime policy system.</span></span></param>
        <summary><span data-ttu-id="2a543-410">返回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的实例，该类通过一个 XML 类型到另一个 XML 类型的映射来创建。</span><span class="sxs-lookup"><span data-stu-id="2a543-410">Returns an instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class created from mappings of one XML type to another.</span></span></summary>
        <returns><span data-ttu-id="2a543-411"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="2a543-411">An instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMappings">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromMappings (System.Xml.Serialization.XmlMapping[] mappings, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromMappings(class System.Xml.Serialization.XmlMapping[] mappings, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromMappings (mappings As XmlMapping(), type As Type) As XmlSerializer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromMappings(cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member FromMappings : System.Xml.Serialization.XmlMapping[] * Type -&gt; System.Xml.Serialization.XmlSerializer[]" Usage="System.Xml.Serialization.XmlSerializer.FromMappings (mappings, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="mappings"><span data-ttu-id="2a543-412">一个 <see cref="T:System.Xml.Serialization.XmlMapping" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="2a543-412">An array of <see cref="T:System.Xml.Serialization.XmlMapping" /> objects.</span></span></param>
        <param name="type"><span data-ttu-id="2a543-413">反序列化的对象的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-413">The <see cref="T:System.Type" /> of the deserialized object.</span></span></param>
        <summary><span data-ttu-id="2a543-414">从指定的映射返回 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="2a543-414">Returns an instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class from the specified mappings.</span></span></summary>
        <returns><span data-ttu-id="2a543-415"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="2a543-415">An instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromTypes">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromTypes (Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromTypes(class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromTypes (types As Type()) As XmlSerializer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromTypes(cli::array &lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="static member FromTypes : Type[] -&gt; System.Xml.Serialization.XmlSerializer[]" Usage="System.Xml.Serialization.XmlSerializer.FromTypes types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="2a543-416">一个 <see cref="T:System.Type" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="2a543-416">An array of <see cref="T:System.Type" /> objects.</span></span></param>
        <summary><span data-ttu-id="2a543-417">返回从类型数组创建的 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="2a543-417">Returns an array of <see cref="T:System.Xml.Serialization.XmlSerializer" /> objects created from an array of types.</span></span></summary>
        <returns><span data-ttu-id="2a543-418">一个 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="2a543-418">An array of <see cref="T:System.Xml.Serialization.XmlSerializer" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-419"><xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A>方法允许您有效地创建一个 <xref:System.Xml.Serialization.XmlSerializer> 对象数组用于处理对象的数组 <xref:System.Type> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-419">The <xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A> method allows you to efficiently create an array of <xref:System.Xml.Serialization.XmlSerializer> objects for processing an array of <xref:System.Type> objects.</span></span> <span data-ttu-id="2a543-420">但是，当有重复调用此方法时，建议调用方缓存返回的序列化程序。</span><span class="sxs-lookup"><span data-stu-id="2a543-420">However, it is recommended for callers to cache the returned serializers when there are repeated calls to this method.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="2a543-421">下面的示例使用 <xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A> 方法返回对象的数组 <xref:System.Xml.Serialization.XmlSerializer> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-421">The following example uses the <xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A> method to return an array of <xref:System.Xml.Serialization.XmlSerializer> objects.</span></span> <span data-ttu-id="2a543-422">代码包括三个类定义，它们分别用于创建对象的数组 <xref:System.Type> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-422">The code includes three class definitions that are each used to create an array of <xref:System.Type> objects.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.FromTypes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.FromTypes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.FromTypes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.FromTypes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.FromTypes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.FromTypes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-423">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-423">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-424">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-424">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-425">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-425">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-426">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-426">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-427">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-427">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateSerializer">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a543-428">返回一个程序集，其中包含类型化的序列化程序。</span><span class="sxs-lookup"><span data-stu-id="2a543-428">Returns an assembly that contains typed serializers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-429">[XML 序列化程序生成器工具 ( # A0) ](/dotnet/standard/serialization/xml-serializer-generator-tool-sgen-exe)为指定程序集中的类型创建 XML 序列化程序集，以便 <xref:System.Xml.Serialization.XmlSerializer> 在序列化或反序列化指定类型的对象时提高的运行时性能。</span><span class="sxs-lookup"><span data-stu-id="2a543-429">The [XML Serializer Generator Tool (Sgen.exe)](/dotnet/standard/serialization/xml-serializer-generator-tool-sgen-exe) creates an XML serialization assembly for types in a specified assembly to improve the run-time performance of an <xref:System.Xml.Serialization.XmlSerializer> when it serializes or deserializes objects of the specified types.</span></span> <span data-ttu-id="2a543-430">使用 <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> 返回此类程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="2a543-430">Use the <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> to return the name of such an assembly.</span></span>  
  
 <span data-ttu-id="2a543-431">如果要将此类程序集作为调用 Web 服务的客户端应用程序的一部分进行分发，则可以将应用于 <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> 客户端类型以指定程序集的位置和名称。</span><span class="sxs-lookup"><span data-stu-id="2a543-431">If you are distributing such an assembly as part of a client application that calls a Web service, you can apply the <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> to the client type to specify the location and name of the assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateSerializer">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GenerateSerializer (Type[] types, System.Xml.Serialization.XmlMapping[] mappings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GenerateSerializer(class System.Type[] types, class System.Xml.Serialization.XmlMapping[] mappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateSerializer (types As Type(), mappings As XmlMapping()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GenerateSerializer(cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings);" />
      <MemberSignature Language="F#" Value="static member GenerateSerializer : Type[] * System.Xml.Serialization.XmlMapping[] -&gt; System.Reflection.Assembly" Usage="System.Xml.Serialization.XmlSerializer.GenerateSerializer (types, mappings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="2a543-432">类型集合。</span><span class="sxs-lookup"><span data-stu-id="2a543-432">A collection of types.</span></span></param>
        <param name="mappings"><span data-ttu-id="2a543-433">一个 <see cref="T:System.Xml.Serialization.XmlMapping" /> 对象的集合，用于将一个类型转换为另一个类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-433">A collection of <see cref="T:System.Xml.Serialization.XmlMapping" /> objects used to convert one type to another.</span></span></param>
        <summary><span data-ttu-id="2a543-434">使用指定映射返回一个程序集，该程序集包含的自定义序列化程序用于序列化或反序列化指定的一个或多个类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-434">Returns an assembly that contains custom-made serializers used to serialize or deserialize the specified type or types, using the specified mappings.</span></span></summary>
        <returns><span data-ttu-id="2a543-435">一个 <see cref="T:System.Reflection.Assembly" /> 对象，包含提供的类型和映射的序列化程序。</span><span class="sxs-lookup"><span data-stu-id="2a543-435">An <see cref="T:System.Reflection.Assembly" /> object that contains serializers for the supplied types and mappings.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSerializer">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GenerateSerializer (Type[] types, System.Xml.Serialization.XmlMapping[] mappings, System.CodeDom.Compiler.CompilerParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GenerateSerializer(class System.Type[] types, class System.Xml.Serialization.XmlMapping[] mappings, class System.CodeDom.Compiler.CompilerParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateSerializer (types As Type(), mappings As XmlMapping(), parameters As CompilerParameters) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GenerateSerializer(cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings, System::CodeDom::Compiler::CompilerParameters ^ parameters);" />
      <MemberSignature Language="F#" Value="static member GenerateSerializer : Type[] * System.Xml.Serialization.XmlMapping[] * System.CodeDom.Compiler.CompilerParameters -&gt; System.Reflection.Assembly" Usage="System.Xml.Serialization.XmlSerializer.GenerateSerializer (types, mappings, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.CodeDom.Compiler.CompilerParameters" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="2a543-436">一个 <see cref="T:System.Type" /> 类型的数组，其中包含的对象用于对数据进行序列化和反序列化。</span><span class="sxs-lookup"><span data-stu-id="2a543-436">An array of type <see cref="T:System.Type" /> that contains objects used to serialize and deserialize data.</span></span></param>
        <param name="mappings"><span data-ttu-id="2a543-437">一个 <see cref="T:System.Xml.Serialization.XmlMapping" /> 类型的数组，它将 XML 数据映射到类型数据。</span><span class="sxs-lookup"><span data-stu-id="2a543-437">An array of type <see cref="T:System.Xml.Serialization.XmlMapping" /> that maps the XML data to the type data.</span></span></param>
        <param name="parameters"><span data-ttu-id="2a543-438"><see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 类的实例，表示用于调用编译器的参数。</span><span class="sxs-lookup"><span data-stu-id="2a543-438">An instance of the <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> class that represents the parameters used to invoke a compiler.</span></span></param>
        <summary><span data-ttu-id="2a543-439">使用指定映射、编译器设置和选项返回一个程序集，该程序集包含的自定义序列化程序用于序列化或反序列化指定的一个或多个类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-439">Returns an assembly that contains custom-made serializers used to serialize or deserialize the specified type or types, using the specified mappings and compiler settings and options.</span></span></summary>
        <returns><span data-ttu-id="2a543-440"><see cref="T:System.Reflection.Assembly" /> 包含 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的专用版本。</span><span class="sxs-lookup"><span data-stu-id="2a543-440">An <see cref="T:System.Reflection.Assembly" /> that contains special versions of the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXmlSerializerAssemblyName">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a543-441">返回程序集的名称，该程序集包含专门为序列化或反序列化特定类型创建的 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的一个或多个版本。</span><span class="sxs-lookup"><span data-stu-id="2a543-441">Returns the name of the assembly that contains one or more versions of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> especially created to serialize or deserialize specific types.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-442">[XML 序列化程序生成器工具 ( # A0) ](/dotnet/standard/serialization/xml-serializer-generator-tool-sgen-exe)为指定程序集中的类型创建 XML 序列化程序集，以便 <xref:System.Xml.Serialization.XmlSerializer> 在序列化或反序列化指定类型的对象时提高的运行时性能。</span><span class="sxs-lookup"><span data-stu-id="2a543-442">The [XML Serializer Generator Tool (Sgen.exe)](/dotnet/standard/serialization/xml-serializer-generator-tool-sgen-exe) creates an XML serialization assembly for types in a specified assembly to improve the run-time performance of an <xref:System.Xml.Serialization.XmlSerializer> when it serializes or deserializes objects of the specified types.</span></span> <span data-ttu-id="2a543-443">使用 <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> 返回此类程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="2a543-443">Use the <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> to return the name of such an assembly.</span></span>  
  
 <span data-ttu-id="2a543-444">如果要将此类程序集作为调用 Web 服务的客户端应用程序的一部分进行分发，则可以将应用于 <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> 客户端类型以指定程序集的位置和名称。</span><span class="sxs-lookup"><span data-stu-id="2a543-444">If you are distributing such an assembly as part of a client application that calls a Web service, you can apply the <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> to the client type to specify the location and name of the assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXmlSerializerAssemblyName">
      <MemberSignature Language="C#" Value="public static string GetXmlSerializerAssemblyName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetXmlSerializerAssemblyName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetXmlSerializerAssemblyName (type As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetXmlSerializerAssemblyName(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetXmlSerializerAssemblyName : Type -&gt; string" Usage="System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2a543-445">正在进行反序列化的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-445">The <see cref="T:System.Type" /> you are deserializing.</span></span></param>
        <summary><span data-ttu-id="2a543-446">返回程序集的名称，该程序集包含专门为序列化或反序列化特定类型创建的 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的一个或多个版本。</span><span class="sxs-lookup"><span data-stu-id="2a543-446">Returns the name of the assembly that contains one or more versions of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> especially created to serialize or deserialize the specified type.</span></span></summary>
        <returns><span data-ttu-id="2a543-447">包含该类型的 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="2a543-447">The name of the assembly that contains an <see cref="T:System.Xml.Serialization.XmlSerializer" /> for the type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-448">[XML 序列化程序生成器工具 ( # A0) ](/dotnet/standard/serialization/xml-serializer-generator-tool-sgen-exe)为指定程序集中的类型创建 XML 序列化程序集，以便 <xref:System.Xml.Serialization.XmlSerializer> 在序列化或反序列化指定类型的对象时提高的运行时性能。</span><span class="sxs-lookup"><span data-stu-id="2a543-448">The [XML Serializer Generator Tool (Sgen.exe)](/dotnet/standard/serialization/xml-serializer-generator-tool-sgen-exe) creates an XML serialization assembly for types in a specified assembly to improve the run-time performance of an <xref:System.Xml.Serialization.XmlSerializer> when it serializes or deserializes objects of the specified types.</span></span> <span data-ttu-id="2a543-449">使用 <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> 返回此类程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="2a543-449">Use the <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> to return the name of such an assembly.</span></span>  
  
 <span data-ttu-id="2a543-450">如果要将此类程序集作为调用 Web 服务的客户端应用程序的一部分进行分发，则可以将应用于 <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> 客户端类型以指定程序集的位置和名称。</span><span class="sxs-lookup"><span data-stu-id="2a543-450">If you are distributing such an assembly as part of a client application that calls a Web service, you can apply the <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> to the client type to specify the location and name of the assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlSerializerAssemblyName">
      <MemberSignature Language="C#" Value="public static string GetXmlSerializerAssemblyName (Type type, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetXmlSerializerAssemblyName(class System.Type type, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetXmlSerializerAssemblyName (type As Type, defaultNamespace As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetXmlSerializerAssemblyName(Type ^ type, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="static member GetXmlSerializerAssemblyName : Type * string -&gt; string" Usage="System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName (type, defaultNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="defaultNamespace" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2a543-451">您关注的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-451">The <see cref="T:System.Type" /> you are interested in.</span></span></param>
        <param name="defaultNamespace"><span data-ttu-id="2a543-452">类型的命名空间。</span><span class="sxs-lookup"><span data-stu-id="2a543-452">The namespace of the type.</span></span></param>
        <summary><span data-ttu-id="2a543-453">返回程序集的名称，该程序集包含指定命名空间中指定类型的序列化程序。</span><span class="sxs-lookup"><span data-stu-id="2a543-453">Returns the name of the assembly that contains the serializer for the specified type in the specified namespace.</span></span></summary>
        <returns><span data-ttu-id="2a543-454">程序集的名称，该程序集包含专门生成的序列化程序。</span><span class="sxs-lookup"><span data-stu-id="2a543-454">The name of the assembly that contains specially built serializers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-455">[XML 序列化程序生成器工具 ( # A0) ](/dotnet/standard/serialization/xml-serializer-generator-tool-sgen-exe)为指定程序集中的类型创建 XML 序列化程序集，以便 <xref:System.Xml.Serialization.XmlSerializer> 在序列化或反序列化指定类型的对象时提高的运行时性能。</span><span class="sxs-lookup"><span data-stu-id="2a543-455">The [XML Serializer Generator Tool (Sgen.exe)](/dotnet/standard/serialization/xml-serializer-generator-tool-sgen-exe) creates an XML serialization assembly for types in a specified assembly to improve the run-time performance of an <xref:System.Xml.Serialization.XmlSerializer> when it serializes or deserializes objects of the specified types.</span></span> <span data-ttu-id="2a543-456">使用 <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> 返回此类程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="2a543-456">Use the <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> to return the name of such an assembly.</span></span>  
  
 <span data-ttu-id="2a543-457">如果要将此类程序集作为调用 Web 服务的客户端应用程序的一部分进行分发，则可以将应用于 <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> 客户端类型以指定程序集的位置和名称。</span><span class="sxs-lookup"><span data-stu-id="2a543-457">If you are distributing such an assembly as part of a client application that calls a Web service, you can apply the <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> to the client type to specify the location and name of the assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a543-458">将对象序列化到 XML 文档中。</span><span class="sxs-lookup"><span data-stu-id="2a543-458">Serializes an object into an XML document.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream stream, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.Stream stream, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (stream As Stream, o As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::Stream ^ stream, System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.IO.Stream * obj -&gt; unit" Usage="xmlSerializer.Serialize (stream, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="2a543-459">用于编写 XML 文档的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-459">The <see cref="T:System.IO.Stream" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="2a543-460">要序列化的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-460">The <see cref="T:System.Object" /> to serialize.</span></span></param>
        <summary><span data-ttu-id="2a543-461">使用指定的 <see cref="T:System.Object" /> 序列化指定的 <see cref="T:System.IO.Stream" /> 并将 XML 文档写入文件。</span><span class="sxs-lookup"><span data-stu-id="2a543-461">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-462"><xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>方法将对象的公共字段和读/写属性转换为 XML。</span><span class="sxs-lookup"><span data-stu-id="2a543-462">The <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method converts the public fields and read/write properties of an object into XML.</span></span> <span data-ttu-id="2a543-463">它不会转换方法、索引器、私有字段或只读属性。</span><span class="sxs-lookup"><span data-stu-id="2a543-463">It does not convert methods, indexers, private fields, or read-only properties.</span></span> <span data-ttu-id="2a543-464">若要序列化对象的所有字段和属性（公共和私有），请使用 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-464">To serialize all of an object's fields and properties, both public and private, use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="2a543-465">在 `stream` 参数中，指定从抽象类派生的对象 <xref:System.IO.Stream> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-465">In the `stream` parameter, specify an object that derives from the abstract <xref:System.IO.Stream> class.</span></span> <span data-ttu-id="2a543-466">派生自的类 <xref:System.IO.Stream> 包括：</span><span class="sxs-lookup"><span data-stu-id="2a543-466">Classes that derive from <xref:System.IO.Stream> include:</span></span>  
  
-   <xref:System.IO.BufferedStream>  
  
-   <xref:System.IO.FileStream>  
  
-   <xref:System.IO.MemoryStream>  
  
-   <xref:System.Net.Sockets.NetworkStream>  
  
-   <xref:System.Security.Cryptography.CryptoStream>  
  
> [!NOTE]
>  <span data-ttu-id="2a543-467"><xref:System.Xml.Serialization.XmlSerializer>无法序列化以下内容：的数组 <xref:System.Collections.ArrayList> 和数组 <xref:System.Collections.Generic.List%601> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-467">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a543-468">下面的示例使用对象对对象进行序列化 <xref:System.IO.Stream> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-468">The following example serializes an object using a <xref:System.IO.Stream> object.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2a543-469">序列化期间发生错误。</span><span class="sxs-lookup"><span data-stu-id="2a543-469">An error occurred during serialization.</span></span> <span data-ttu-id="2a543-470">使用 <see cref="P:System.Exception.InnerException" /> 属性时可使用原始异常。</span><span class="sxs-lookup"><span data-stu-id="2a543-470">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-471">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-471">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-472">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-472">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-473">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-473">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-474">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-474">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-475">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-475">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.TextWriter textWriter, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.TextWriter textWriter, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (textWriter As TextWriter, o As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::TextWriter ^ textWriter, System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.IO.TextWriter * obj -&gt; unit" Usage="xmlSerializer.Serialize (textWriter, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="textWriter"><span data-ttu-id="2a543-476">用于编写 XML 文档的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-476">The <see cref="T:System.IO.TextWriter" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="2a543-477">要序列化的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-477">The <see cref="T:System.Object" /> to serialize.</span></span></param>
        <summary><span data-ttu-id="2a543-478">使用指定的 <see cref="T:System.Object" /> 序列化指定的 <see cref="T:System.IO.TextWriter" /> 并将 XML 文档写入文件。</span><span class="sxs-lookup"><span data-stu-id="2a543-478">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-479"><xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>方法将对象的公共字段和读/写属性转换为 XML。</span><span class="sxs-lookup"><span data-stu-id="2a543-479">The <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method converts the public fields and read/write properties of an object into XML.</span></span> <span data-ttu-id="2a543-480">它不会转换方法、索引器、私有字段或只读属性。</span><span class="sxs-lookup"><span data-stu-id="2a543-480">It does not convert methods, indexers, private fields, or read-only properties.</span></span> <span data-ttu-id="2a543-481">若要序列化对象的所有字段和属性（公共和私有），请使用 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-481">To serialize all an object's fields and properties, both public and private, use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="2a543-482">在 `textWriter` 参数中，指定从抽象类派生的对象 <xref:System.IO.TextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-482">In the `textWriter` parameter, specify an object that derives from the abstract <xref:System.IO.TextWriter> class.</span></span> <span data-ttu-id="2a543-483">派生自的类 <xref:System.IO.TextWriter> 包括：</span><span class="sxs-lookup"><span data-stu-id="2a543-483">Classes that derive from <xref:System.IO.TextWriter> include:</span></span>  
  
-   <xref:System.IO.StreamWriter>  
  
-   <xref:System.IO.StringWriter>  
  
-   <xref:System.CodeDom.Compiler.IndentedTextWriter>  
  
> [!NOTE]
>  <span data-ttu-id="2a543-484"><xref:System.Xml.Serialization.XmlSerializer>无法序列化以下内容：的数组 <xref:System.Collections.ArrayList> 和数组 <xref:System.Collections.Generic.List%601> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-484">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a543-485">下面的示例使用对对象进行序列化 <xref:System.IO.TextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-485">The following example serializes an object using a <xref:System.IO.TextWriter>.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-486">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-486">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-487">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-487">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-488">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-488">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-489">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-489">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-490">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-490">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="protected virtual void Serialize (object o, System.Xml.Serialization.XmlSerializationWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Serialize(object o, class System.Xml.Serialization.XmlSerializationWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Serialize (o As Object, writer As XmlSerializationWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Serialize(System::Object ^ o, System::Xml::Serialization::XmlSerializationWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : obj * System.Xml.Serialization.XmlSerializationWriter -&gt; unit&#xA;override this.Serialize : obj * System.Xml.Serialization.XmlSerializationWriter -&gt; unit" Usage="xmlSerializer.Serialize (o, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="writer" Type="System.Xml.Serialization.XmlSerializationWriter" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="2a543-491">要序列化的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-491">The <see cref="T:System.Object" /> to serialize.</span></span></param>
        <param name="writer"><span data-ttu-id="2a543-492">用于编写 XML 文档的 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-492">The <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> used to write the XML document.</span></span></param>
        <summary><span data-ttu-id="2a543-493">使用指定的 <see cref="T:System.Object" /> 序列化指定的 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 并将 XML 文档写入文件。</span><span class="sxs-lookup"><span data-stu-id="2a543-493">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2a543-494">当未在子类中重写该方法时，为访问该方法进行的任何尝试。</span><span class="sxs-lookup"><span data-stu-id="2a543-494">Any attempt is made to access the method when the method is not overridden in a descendant class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (xmlWriter As XmlWriter, o As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.Xml.XmlWriter * obj -&gt; unit" Usage="xmlSerializer.Serialize (xmlWriter, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="xmlWriter"><span data-ttu-id="2a543-495">用于编写 XML 文档的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-495">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="2a543-496">要序列化的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-496">The <see cref="T:System.Object" /> to serialize.</span></span></param>
        <summary><span data-ttu-id="2a543-497">使用指定的 <see cref="T:System.Object" /> 序列化指定的 <see cref="T:System.Xml.XmlWriter" /> 并将 XML 文档写入文件。</span><span class="sxs-lookup"><span data-stu-id="2a543-497">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-498"><xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>方法将对象的公共字段和读/写属性转换为 XML。</span><span class="sxs-lookup"><span data-stu-id="2a543-498">The <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method converts the public fields and read/write properties of an object into XML.</span></span> <span data-ttu-id="2a543-499">它不会转换方法、索引器、私有字段或只读属性。</span><span class="sxs-lookup"><span data-stu-id="2a543-499">It does not convert methods, indexers, private fields, or read-only properties.</span></span> <span data-ttu-id="2a543-500">若要序列化对象的所有字段和属性（公共和私有），请使用 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-500">To serialize all an object's fields and properties, both public and private, use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="2a543-501">在 `xmlWriter` 参数中，指定从抽象类派生的对象 <xref:System.Xml.XmlWriter> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-501">In the `xmlWriter` parameter, specify an object that derives from the abstract <xref:System.Xml.XmlWriter> class.</span></span> <span data-ttu-id="2a543-502"><xref:System.Xml.XmlTextWriter>派生自 <xref:System.Xml.XmlWriter> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-502">The <xref:System.Xml.XmlTextWriter> derives from the <xref:System.Xml.XmlWriter>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2a543-503"><xref:System.Xml.Serialization.XmlSerializer>无法序列化以下内容：的数组 <xref:System.Collections.ArrayList> 和数组 <xref:System.Collections.Generic.List%601> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-503">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a543-504">下面的示例使用对对象进行序列化 <xref:System.Xml.XmlWriter> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-504">The following example serializes an object using an <xref:System.Xml.XmlWriter>.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2a543-505">序列化期间发生错误。</span><span class="sxs-lookup"><span data-stu-id="2a543-505">An error occurred during serialization.</span></span> <span data-ttu-id="2a543-506">使用 <see cref="P:System.Exception.InnerException" /> 属性时可使用原始异常。</span><span class="sxs-lookup"><span data-stu-id="2a543-506">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-507">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-507">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-508">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-508">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-509">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-509">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-510">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-510">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-511">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-511">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream stream, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.Stream stream, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (stream As Stream, o As Object, namespaces As XmlSerializerNamespaces)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::Stream ^ stream, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.IO.Stream * obj * System.Xml.Serialization.XmlSerializerNamespaces -&gt; unit" Usage="xmlSerializer.Serialize (stream, o, namespaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="2a543-512">用于编写 XML 文档的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-512">The <see cref="T:System.IO.Stream" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="2a543-513">要序列化的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-513">The <see cref="T:System.Object" /> to serialize.</span></span></param>
        <param name="namespaces"><span data-ttu-id="2a543-514">该对象所引用的 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-514">The <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> referenced by the object.</span></span></param>
        <summary><span data-ttu-id="2a543-515">使用引用指定命名空间的指定 <see cref="T:System.IO.Stream" /> 序列化指定的 <see cref="T:System.Object" /> 并将 XML 文档写入文件。</span><span class="sxs-lookup"><span data-stu-id="2a543-515">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.IO.Stream" /> that references the specified namespaces.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-516"><xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>调用方法时，对象的公共字段和读/写属性将转换为 XML。</span><span class="sxs-lookup"><span data-stu-id="2a543-516">When the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method is invoked, the public fields and read/write properties of an object are converted into XML.</span></span> <span data-ttu-id="2a543-517">不序列化方法、索引器、私有字段和只读属性。</span><span class="sxs-lookup"><span data-stu-id="2a543-517">Methods, indexers, private fields, and read-only properties are not serialized.</span></span> <span data-ttu-id="2a543-518">若要序列化所有字段和属性（无论是公共的还是私有的），请使用 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-518">To serialize all fields and properties, both public and private, use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="2a543-519">使用 `stream` 参数指定派生自抽象类的对象 <xref:System.IO.Stream> ，抽象类旨在写入流。</span><span class="sxs-lookup"><span data-stu-id="2a543-519">Use the `stream` parameter to specify an object that derives from the abstract <xref:System.IO.Stream> class, which is designed to write to streams.</span></span> <span data-ttu-id="2a543-520">派生自类的类 <xref:System.IO.Stream> 包括：</span><span class="sxs-lookup"><span data-stu-id="2a543-520">Classes that derive from the <xref:System.IO.Stream> class include:</span></span>  
  
-   <xref:System.IO.BufferedStream>  
  
-   <xref:System.IO.FileStream>  
  
-   <xref:System.IO.MemoryStream>  
  
-   <xref:System.Net.Sockets.NetworkStream>  
  
-   <xref:System.Security.Cryptography.CryptoStream>  
  
> [!NOTE]
>  <span data-ttu-id="2a543-521"><xref:System.Xml.Serialization.XmlSerializer>无法序列化以下内容：的数组 <xref:System.Collections.ArrayList> 和数组 <xref:System.Collections.Generic.List%601> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-521">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a543-522">下面的示例使用对象对对象进行序列化 <xref:System.IO.Stream> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-522">The following example serializes an object with a <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="2a543-523">该示例还将创建一个 <xref:System.Xml.Serialization.XmlSerializerNamespaces> ，并将两个命名空间添加到对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-523">The example also creates an <xref:System.Xml.Serialization.XmlSerializerNamespaces> and adds two namespaces to the object.</span></span> <span data-ttu-id="2a543-524">定义序列化对象的类也用 <xref:System.Xml.Serialization.XmlElementAttribute> 特性来指定每个元素的命名空间。</span><span class="sxs-lookup"><span data-stu-id="2a543-524">The class that defines the serialized object is also attributed with <xref:System.Xml.Serialization.XmlElementAttribute> attributes to specify the namespace for each element.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Serialize3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize3 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2a543-525">序列化期间发生错误。</span><span class="sxs-lookup"><span data-stu-id="2a543-525">An error occurred during serialization.</span></span> <span data-ttu-id="2a543-526">使用 <see cref="P:System.Exception.InnerException" /> 属性时可使用原始异常。</span><span class="sxs-lookup"><span data-stu-id="2a543-526">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-527">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-527">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-528">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-528">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-529">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-529">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-530">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-530">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-531">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-531">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.TextWriter textWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.TextWriter textWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (textWriter As TextWriter, o As Object, namespaces As XmlSerializerNamespaces)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::TextWriter ^ textWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.IO.TextWriter * obj * System.Xml.Serialization.XmlSerializerNamespaces -&gt; unit" Usage="xmlSerializer.Serialize (textWriter, o, namespaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" />
      </Parameters>
      <Docs>
        <param name="textWriter"><span data-ttu-id="2a543-532">用于编写 XML 文档的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-532">The <see cref="T:System.IO.TextWriter" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="2a543-533">要序列化的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-533">The <see cref="T:System.Object" /> to serialize.</span></span></param>
        <param name="namespaces"><span data-ttu-id="2a543-534">包含生成的 XML 文档的命名空间的 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-534">The <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> that contains namespaces for the generated XML document.</span></span></param>
        <summary><span data-ttu-id="2a543-535">使用指定的 <see cref="T:System.Object" /> 和指定命名空间序列化指定的 <see cref="T:System.IO.TextWriter" /> 并将 XML 文档写入文件。</span><span class="sxs-lookup"><span data-stu-id="2a543-535">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.IO.TextWriter" /> and references the specified namespaces.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-536"><xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>调用方法时，对象的公共字段和读/写属性将转换为 XML。</span><span class="sxs-lookup"><span data-stu-id="2a543-536">When the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method is invoked the public fields and read/write properties of an object are converted into XML.</span></span> <span data-ttu-id="2a543-537">不序列化方法、索引器、私有字段和只读属性。</span><span class="sxs-lookup"><span data-stu-id="2a543-537">Methods, indexers, private fields, and read-only properties are not serialized.</span></span> <span data-ttu-id="2a543-538">若要序列化所有字段和属性（无论是公共的还是私有的），请使用 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-538">To serialize all fields and properties, both public and private, use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="2a543-539">使用 `textWriter` 参数指定派生自抽象类的对象 <xref:System.IO.TextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-539">Use the `textWriter` parameter to specify an object that derives from the abstract <xref:System.IO.TextWriter> class.</span></span> <span data-ttu-id="2a543-540">派生自类的类 <xref:System.IO.TextWriter> 包括：</span><span class="sxs-lookup"><span data-stu-id="2a543-540">Classes that derive from <xref:System.IO.TextWriter> class include:</span></span>  
  
-   <xref:System.IO.StreamWriter>  
  
-   <xref:System.IO.StringWriter>  
  
-   <xref:System.CodeDom.Compiler.IndentedTextWriter>  
  
> [!NOTE]
>  <span data-ttu-id="2a543-541"><xref:System.Xml.Serialization.XmlSerializer>无法序列化以下内容：的数组 <xref:System.Collections.ArrayList> 和数组 <xref:System.Collections.Generic.List%601> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-541">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a543-542">下面的示例使用序列化对象 <xref:System.IO.TextWriter> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-542">The following example serializes an object with a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="2a543-543">该示例还将创建一个 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 对象，并将两个命名空间添加到该对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-543">The example also creates an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object and adds two namespaces to the object.</span></span> <span data-ttu-id="2a543-544">定义序列化对象的类也用 <xref:System.Xml.Serialization.XmlElementAttribute> 特性来指定每个元素的命名空间。</span><span class="sxs-lookup"><span data-stu-id="2a543-544">The class that defines the serialized object is also attributed with <xref:System.Xml.Serialization.XmlElementAttribute> attributes to specify the namespace for each element.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2a543-545">序列化期间发生错误。</span><span class="sxs-lookup"><span data-stu-id="2a543-545">An error occurred during serialization.</span></span> <span data-ttu-id="2a543-546">使用 <see cref="P:System.Exception.InnerException" /> 属性时可使用原始异常。</span><span class="sxs-lookup"><span data-stu-id="2a543-546">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-547">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-547">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-548">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-548">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-549">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-549">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-550">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-550">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-551">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-551">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (xmlWriter As XmlWriter, o As Object, namespaces As XmlSerializerNamespaces)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.Xml.XmlWriter * obj * System.Xml.Serialization.XmlSerializerNamespaces -&gt; unit" Usage="xmlSerializer.Serialize (xmlWriter, o, namespaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" />
      </Parameters>
      <Docs>
        <param name="xmlWriter"><span data-ttu-id="2a543-552">用于编写 XML 文档的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-552">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="2a543-553">要序列化的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-553">The <see cref="T:System.Object" /> to serialize.</span></span></param>
        <param name="namespaces"><span data-ttu-id="2a543-554">该对象所引用的 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-554">The <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> referenced by the object.</span></span></param>
        <summary><span data-ttu-id="2a543-555">使用指定的 <see cref="T:System.Object" /> 和指定命名空间序列化指定的 <see cref="T:System.Xml.XmlWriter" /> 并将 XML 文档写入文件。</span><span class="sxs-lookup"><span data-stu-id="2a543-555">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.Xml.XmlWriter" /> and references the specified namespaces.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-556"><xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>调用方法时，对象的公共字段和读/写属性将转换为 XML。</span><span class="sxs-lookup"><span data-stu-id="2a543-556">When the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method is invoked, the public fields and read/write properties of an object are converted into XML.</span></span> <span data-ttu-id="2a543-557">不序列化方法、索引器、私有字段和只读属性。</span><span class="sxs-lookup"><span data-stu-id="2a543-557">Methods, indexers, private fields, and read-only properties are not serialized.</span></span> <span data-ttu-id="2a543-558">若要序列化所有字段和属性（无论是公共的还是私有的），请使用 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-558">To serialize all fields and properties, both public and private, use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="2a543-559">使用 `xmlWriter` 参数来指定派生自抽象类的对象，抽象 <xref:System.Xml.XmlWriter> 类旨在写入 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="2a543-559">Use the `xmlWriter` parameter to specify an object that derives from the abstract <xref:System.Xml.XmlWriter> class, which is designed to write XML documents.</span></span> <span data-ttu-id="2a543-560"><xref:System.Xml.XmlTextWriter>派生自 <xref:System.Xml.XmlWriter> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-560">The <xref:System.Xml.XmlTextWriter> derives from the <xref:System.Xml.XmlWriter>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2a543-561"><xref:System.Xml.Serialization.XmlSerializer>无法序列化以下内容：的数组 <xref:System.Collections.ArrayList> 和数组 <xref:System.Collections.Generic.List%601> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-561">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a543-562">下面的示例使用序列化对象 <xref:System.Xml.XmlWriter> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-562">The following example serializes an object with an <xref:System.Xml.XmlWriter>.</span></span> <span data-ttu-id="2a543-563">该示例还将创建一个 <xref:System.Xml.Serialization.XmlSerializerNamespaces> ，并将两个命名空间添加到对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-563">The example also creates an <xref:System.Xml.Serialization.XmlSerializerNamespaces> and adds two namespaces to the object.</span></span> <span data-ttu-id="2a543-564">类的多个实例 <xref:System.Xml.Serialization.XmlElementAttribute> 应用于类成员，以指定每个元素的命名空间。</span><span class="sxs-lookup"><span data-stu-id="2a543-564">Several instances of the <xref:System.Xml.Serialization.XmlElementAttribute> class are applied to the class members to specify the namespace for each element.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2a543-565">序列化期间发生错误。</span><span class="sxs-lookup"><span data-stu-id="2a543-565">An error occurred during serialization.</span></span> <span data-ttu-id="2a543-566">使用 <see cref="P:System.Exception.InnerException" /> 属性时可使用原始异常。</span><span class="sxs-lookup"><span data-stu-id="2a543-566">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-567">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-567">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-568">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-568">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-569">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-569">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-570">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-570">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-571">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-571">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle) cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (xmlWriter As XmlWriter, o As Object, namespaces As XmlSerializerNamespaces, encodingStyle As String)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces, System::String ^ encodingStyle);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.Xml.XmlWriter * obj * System.Xml.Serialization.XmlSerializerNamespaces * string -&gt; unit" Usage="xmlSerializer.Serialize (xmlWriter, o, namespaces, encodingStyle)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="o" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="encodingStyle" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="xmlWriter"><span data-ttu-id="2a543-572">用于编写 XML 文档的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-572">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="2a543-573">要序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-573">The object to serialize.</span></span></param>
        <param name="namespaces"><span data-ttu-id="2a543-574">该对象所引用的 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-574">The <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> referenced by the object.</span></span></param>
        <param name="encodingStyle"><span data-ttu-id="2a543-575">序列化的 XML 的编码样式。</span><span class="sxs-lookup"><span data-stu-id="2a543-575">The encoding style of the serialized XML.</span></span></param>
        <summary><span data-ttu-id="2a543-576">使用指定的 <see cref="T:System.Xml.XmlWriter" /> 和指定命名空间及编码样式序列化指定对象并将 XML 文档写入文件。</span><span class="sxs-lookup"><span data-stu-id="2a543-576">Serializes the specified object and writes the XML document to a file using the specified <see cref="T:System.Xml.XmlWriter" /> and references the specified namespaces and encoding style.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-577"><xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>调用方法时，对象的公共字段和读/写属性将转换为 XML。</span><span class="sxs-lookup"><span data-stu-id="2a543-577">When the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method is invoked, the public fields and read/write properties of an object are converted into XML.</span></span> <span data-ttu-id="2a543-578">不序列化方法、索引器、私有字段和只读属性。</span><span class="sxs-lookup"><span data-stu-id="2a543-578">Methods, indexers, private fields, and read-only properties are not serialized.</span></span> <span data-ttu-id="2a543-579">若要序列化所有字段和属性（无论是公共的还是私有的），请使用 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-579">To serialize all fields and properties, both public and private, use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="2a543-580">使用 `xmlWriter` 参数来指定派生自抽象类的对象，抽象 <xref:System.Xml.XmlWriter> 类旨在写入 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="2a543-580">Use the `xmlWriter` parameter to specify an object that derives from the abstract <xref:System.Xml.XmlWriter> class, which is designed to write XML documents.</span></span> <span data-ttu-id="2a543-581"><xref:System.Xml.XmlTextWriter>派生自 <xref:System.Xml.XmlWriter> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-581">The <xref:System.Xml.XmlTextWriter> derives from the <xref:System.Xml.XmlWriter>.</span></span>  
  
 <span data-ttu-id="2a543-582">`encodingStyle` http://schemas.xmlsoap.org/soap/encoding/ 对于 soap 版本1.1 编码，请将参数设置为 ""; 否则，请将其设置为 " http://www.w3.org/2001/12/soap-encoding " 进行 soap 版本1.2 编码。</span><span class="sxs-lookup"><span data-stu-id="2a543-582">Set the `encodingStyle` parameter to "http://schemas.xmlsoap.org/soap/encoding/" for SOAP version 1.1 encoding; otherwise, set it to "http://www.w3.org/2001/12/soap-encoding" for SOAP version 1.2 encoding.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2a543-583"><xref:System.Xml.Serialization.XmlSerializer>无法序列化以下内容：的数组 <xref:System.Collections.ArrayList> 和数组 <xref:System.Collections.Generic.List%601> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-583">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2a543-584">序列化期间发生错误。</span><span class="sxs-lookup"><span data-stu-id="2a543-584">An error occurred during serialization.</span></span> <span data-ttu-id="2a543-585">使用 <see cref="P:System.Exception.InnerException" /> 属性时可使用原始异常。</span><span class="sxs-lookup"><span data-stu-id="2a543-585">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-586">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-586">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-587">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-587">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-588">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-588">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-589">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-589">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-590">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-590">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (xmlWriter As XmlWriter, o As Object, namespaces As XmlSerializerNamespaces, encodingStyle As String, id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces, System::String ^ encodingStyle, System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.Xml.XmlWriter * obj * System.Xml.Serialization.XmlSerializerNamespaces * string * string -&gt; unit" Usage="xmlSerializer.Serialize (xmlWriter, o, namespaces, encodingStyle, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="o" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="encodingStyle" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="id" Type="System.String" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="xmlWriter"><span data-ttu-id="2a543-591">用于编写 XML 文档的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="2a543-591">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="2a543-592">要序列化的对象。</span><span class="sxs-lookup"><span data-stu-id="2a543-592">The object to serialize.</span></span></param>
        <param name="namespaces"><span data-ttu-id="2a543-593"><see langword="XmlSerializerNamespaces" /> 的实例，其中包含要使用的命名空间和前缀。</span><span class="sxs-lookup"><span data-stu-id="2a543-593">An instance of the <see langword="XmlSerializerNamespaces" /> that contains namespaces and prefixes to use.</span></span></param>
        <param name="encodingStyle"><span data-ttu-id="2a543-594">该文档中使用的编码。</span><span class="sxs-lookup"><span data-stu-id="2a543-594">The encoding used in the document.</span></span></param>
        <param name="id"><span data-ttu-id="2a543-595">对于 SOAP 编码消息，这是用于生成 id 特性的基。</span><span class="sxs-lookup"><span data-stu-id="2a543-595">For SOAP encoded messages, the base used to generate id attributes.</span></span></param>
        <summary><span data-ttu-id="2a543-596">使用指定的 <see cref="T:System.Object" />、XML 命名空间和编码序列化指定的 <see cref="T:System.Xml.XmlWriter" /> 并将 XML 文档写入文件。</span><span class="sxs-lookup"><span data-stu-id="2a543-596">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.Xml.XmlWriter" />, XML namespaces, and encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-597">*Id*参数提供用于创建 SOAP id 的基字符串。</span><span class="sxs-lookup"><span data-stu-id="2a543-597">The *id* parameter supplies the base string used to create SOAP ids.</span></span> <span data-ttu-id="2a543-598">默认情况下，这些是 "id1"、"id2" 等。</span><span class="sxs-lookup"><span data-stu-id="2a543-598">By default, these are "id1", "id2" and so on.</span></span> <span data-ttu-id="2a543-599">但如果参数设置为 "myBase"，则生成的值为 "myBaseid1"、"myBaseid2" 等等。</span><span class="sxs-lookup"><span data-stu-id="2a543-599">But if the parameter is set to "myBase" the generated values are "myBaseid1", "myBaseid2" and so on.</span></span> <span data-ttu-id="2a543-600">此功能用于在整个 SOAP 消息中创建唯一的 id 值。</span><span class="sxs-lookup"><span data-stu-id="2a543-600">This functionality is used to create unique id values across the whole SOAP message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownAttribute">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.XmlAttributeEventHandler UnknownAttribute;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.XmlAttributeEventHandler UnknownAttribute" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnknownAttribute As XmlAttributeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::XmlAttributeEventHandler ^ UnknownAttribute;" />
      <MemberSignature Language="F#" Value="member this.UnknownAttribute : System.Xml.Serialization.XmlAttributeEventHandler " Usage="member this.UnknownAttribute : System.Xml.Serialization.XmlAttributeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a543-601">当 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 在反序列化过程中遇到未知类型的 XML 特性时发生。</span><span class="sxs-lookup"><span data-stu-id="2a543-601">Occurs when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> encounters an XML attribute of unknown type during deserialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-602">默认情况下，在调用 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 方法后，将 <xref:System.Xml.Serialization.XmlSerializer> 忽略未知类型的 XML 属性。</span><span class="sxs-lookup"><span data-stu-id="2a543-602">By default, after calling the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method, the <xref:System.Xml.Serialization.XmlSerializer> ignores XML attributes of unknown types.</span></span> <span data-ttu-id="2a543-603">但是，可以使用此事件来处理此类节点类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-603">However, you can use this event to handle such node types.</span></span>  
  
 <span data-ttu-id="2a543-604">如果正在反序列化的类的实例包含一个返回对象数组的字段， <xref:System.Xml.XmlAttribute> 并且已 <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> 应用于字段，则 <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> 不会发生该事件。</span><span class="sxs-lookup"><span data-stu-id="2a543-604">If the instance of the class being deserialized contains a field that returns an array of <xref:System.Xml.XmlAttribute> objects and an <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> has been applied to the field, the <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> event does not occur.</span></span> <span data-ttu-id="2a543-605">相反，所有未知 XML 特性都将收集到数组中。</span><span class="sxs-lookup"><span data-stu-id="2a543-605">Instead, all unknown XML attributes are collected into the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a543-606">下面的示例将打印有关反序列化 XML 文档时遇到的任何未知属性的信息。</span><span class="sxs-lookup"><span data-stu-id="2a543-606">The following example prints information about any unknown attributes encountered while deserializing an XML document.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-607">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-607">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-608">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-608">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-609">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-609">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-610">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-610">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-611">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-611">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnknownElement">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.XmlElementEventHandler UnknownElement;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.XmlElementEventHandler UnknownElement" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnknownElement As XmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::XmlElementEventHandler ^ UnknownElement;" />
      <MemberSignature Language="F#" Value="member this.UnknownElement : System.Xml.Serialization.XmlElementEventHandler " Usage="member this.UnknownElement : System.Xml.Serialization.XmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a543-612">当 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 在反序列化过程中遇到未知类型的 XML 元素时发生。</span><span class="sxs-lookup"><span data-stu-id="2a543-612">Occurs when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> encounters an XML element of unknown type during deserialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-613">默认情况下，在调用 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 方法后，将 <xref:System.Xml.Serialization.XmlSerializer> 忽略未知类型的 XML 属性。</span><span class="sxs-lookup"><span data-stu-id="2a543-613">By default, after calling the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method, the <xref:System.Xml.Serialization.XmlSerializer> ignores XML attributes of unknown types.</span></span> <span data-ttu-id="2a543-614">但是，可以使用此事件来处理此类节点类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-614">However, you can use this event to handle such node types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2a543-615">如果 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 应用于返回对象数组的字段 <xref:System.Xml.XmlElement> ，则在数组中收集所有未知元素。</span><span class="sxs-lookup"><span data-stu-id="2a543-615">If the <xref:System.Xml.Serialization.XmlAnyElementAttribute> is applied to a field that returns an array of <xref:System.Xml.XmlElement> objects, all unknown elements are collected in the array.</span></span> <span data-ttu-id="2a543-616">在这种情况下， <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> 事件不会发生。</span><span class="sxs-lookup"><span data-stu-id="2a543-616">In that case, the <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> event does not occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a543-617">下面的示例 `Group` 从名为 UnknownElements.xml 的文件中反序列化名为的类。</span><span class="sxs-lookup"><span data-stu-id="2a543-617">The following example deserializes a class named `Group` from a file named UnknownElements.xml.</span></span> <span data-ttu-id="2a543-618">只要在文件中找到了类中没有相应成员的元素， <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> 就会发生该事件。</span><span class="sxs-lookup"><span data-stu-id="2a543-618">Whenever an element is found in the file that has no corresponding member in the class, the <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> event occurs.</span></span> <span data-ttu-id="2a543-619">若要尝试该示例，请将以下 XML 代码粘贴到名为 UnknownElements.xml 的文件中。</span><span class="sxs-lookup"><span data-stu-id="2a543-619">To try the example, paste the following XML code into a file named UnknownElements.xml.</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <GroupName>MyGroup</GroupName>  
  <GroupSize>Large</GroupSize>  
  <GroupNumber>444</GroupNumber>  
  <GroupBase>West</GroupBase>  
</Group>  
```  
  
 [!code-cpp[XmlSerializer.UnknownElement Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/CPP/unknownelement.cpp#1)]
 [!code-csharp[XmlSerializer.UnknownElement Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/CS/unknownelement.cs#1)]
 [!code-vb[XmlSerializer.UnknownElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/VB/unknownelement.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-620">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-620">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-621">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-621">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-622">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-622">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-623">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-623">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-624">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-624">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnknownNode">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.XmlNodeEventHandler UnknownNode;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.XmlNodeEventHandler UnknownNode" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnknownNode As XmlNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::XmlNodeEventHandler ^ UnknownNode;" />
      <MemberSignature Language="F#" Value="member this.UnknownNode : System.Xml.Serialization.XmlNodeEventHandler " Usage="member this.UnknownNode : System.Xml.Serialization.XmlNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a543-625">当 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 在反序列化过程中遇到未知类型的 XML 节点时发生。</span><span class="sxs-lookup"><span data-stu-id="2a543-625">Occurs when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> encounters an XML node of unknown type during deserialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-626">默认情况下，在调用 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 方法后，将 <xref:System.Xml.Serialization.XmlSerializer> 忽略未知类型的 XML 节点。</span><span class="sxs-lookup"><span data-stu-id="2a543-626">By default, after calling the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method, the <xref:System.Xml.Serialization.XmlSerializer> ignores XML nodes of unknown types.</span></span> <span data-ttu-id="2a543-627">但是，可以使用此事件来处理此类节点类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-627">However, you can use this event to handle such node types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a543-628">下面的示例将打印任何遇到的未知节点的类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-628">The following example prints the type of any encountered unknown node.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.UnknownNode Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.UnknownNode Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownNode Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.UnknownNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.UnknownNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-629">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-629">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-630">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-630">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-631">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-631">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-632">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-632">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-633">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-633">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnreferencedObject">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.UnreferencedObjectEventHandler UnreferencedObject;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.UnreferencedObjectEventHandler UnreferencedObject" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnreferencedObject As UnreferencedObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::UnreferencedObjectEventHandler ^ UnreferencedObject;" />
      <MemberSignature Language="F#" Value="member this.UnreferencedObject : System.Xml.Serialization.UnreferencedObjectEventHandler " Usage="member this.UnreferencedObject : System.Xml.Serialization.UnreferencedObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.UnreferencedObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a543-634">在反序列化 SOAP 编码的 XML 流的过程中发生，此时 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 遇到未使用（或未引用）的识别类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-634">Occurs during deserialization of a SOAP-encoded XML stream, when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> encounters a recognized type that is not used or is unreferenced.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a543-635"><xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>仅当 <xref:System.Xml.Serialization.XmlSerializer> 使用来反序列化包含 soap 消息的 XML 文档时，才会发生此事件，该文档符合万维网联合会文档的第5节，[简单的对象访问协议 (SOAP) 1.1](https://www.w3.org/TR/2000/NOTE-SOAP-20000508/)。</span><span class="sxs-lookup"><span data-stu-id="2a543-635">The <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> event only occurs when the <xref:System.Xml.Serialization.XmlSerializer> is used to deserialize an XML document that contains a SOAP message that conforms to section 5 of the World Wide Web Consortium document, [Simple Object Access Protocol (SOAP) 1.1](https://www.w3.org/TR/2000/NOTE-SOAP-20000508/).</span></span>  
  
 <span data-ttu-id="2a543-636">符合第5部分的文档采用特殊格式。</span><span class="sxs-lookup"><span data-stu-id="2a543-636">Documents that conform to section 5 are in a special format.</span></span> <span data-ttu-id="2a543-637">此类文档至少包含 SOAP 消息的正文。</span><span class="sxs-lookup"><span data-stu-id="2a543-637">At the very least, such a document includes the main body of the SOAP message.</span></span> <span data-ttu-id="2a543-638">但是，可以将某些类型定义编码为文档中的顶级元素的引用，而不是在文档中以内联方式定义所有类型。</span><span class="sxs-lookup"><span data-stu-id="2a543-638">However, rather than having all types defined inline in the document, some type definitions can be encoded as references to top-level elements in the document.</span></span> <span data-ttu-id="2a543-639">因此，对于在正文中找到的每个引用，都必须有一个包含类型定义的对应元素。</span><span class="sxs-lookup"><span data-stu-id="2a543-639">Thus, for every element found in the main body that is a reference, there must be a corresponding element that contains the type definition.</span></span> <span data-ttu-id="2a543-640">为了使引用元素与类型定义关联，类型定义 `id` 将属性设置为唯一的字符串 ID，而引用元素具有 `href` 引用同一 ID 的属性。</span><span class="sxs-lookup"><span data-stu-id="2a543-640">To correlate the referencing element and the type definition, the type definition has an `id` attribute set to a unique string ID and the referencing element has an `href` attribute that references the same ID.</span></span>  
  
```  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="id1" n1:GroupName=".NET" GroupNumber="ZDI=" CreationDate="2002-05-02" xmlns:n1="http:'www.cpandl.com">  
    <PosInt xsi:type="xsd:nonNegativeInteger">10000</PosInt>  
    <GroupVehicle href="#id2" />  
  </Group>  
  <Vehicle id="id2" n1:type="Vehicle" xmlns:n1="http://www.w3.org/2001/XMLSchema-instance">  
    <licenseNumber xmlns:q1="http://www.w3.org/2001/XMLSchema" n1:type="q1:string">1234</licenseNumber>  
  </Vehicle>  
```  
  
 <span data-ttu-id="2a543-641"><xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>如果在文档中找到了类型定义，但主正文中没有引用它的参数，则会发生该事件。</span><span class="sxs-lookup"><span data-stu-id="2a543-641">The <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> event occur when there is a type definition found in the document, but no parameter in the main body references it.</span></span> <span data-ttu-id="2a543-642">事件发生时，可以通过检查类的属性来检索未引用对象的 XML 类型 <xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject%2A> <xref:System.Xml.Serialization.UnreferencedObjectEventArgs> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-642">When the event occurs, you can retrieve the XML type of the unreferenced object by examining the <xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject%2A> property of the <xref:System.Xml.Serialization.UnreferencedObjectEventArgs> class.</span></span> <span data-ttu-id="2a543-643">对象的 XML ID 由 <xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId%2A> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="2a543-643">The XML ID of the object is returned by the <xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId%2A> property.</span></span>  
  
 <span data-ttu-id="2a543-644"><xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject>不应将事件与 <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> 和 <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> 事件混淆，这在没有与 XML 节点或元素类型对应的类成员时出现。</span><span class="sxs-lookup"><span data-stu-id="2a543-644">The <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> event should not be confused with the <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> and <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> events, which occur when there is no class member that corresponds to the XML node or element type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2a543-645">下面的示例将添加 <xref:System.Xml.Serialization.UnreferencedObjectEventHandler> 到 <xref:System.Xml.Serialization.XmlSerializer> 。</span><span class="sxs-lookup"><span data-stu-id="2a543-645">The following example adds an <xref:System.Xml.Serialization.UnreferencedObjectEventHandler> to an <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="2a543-646">该事件由方法进行处理 `Serializer``_``UnreferencedObject` 。</span><span class="sxs-lookup"><span data-stu-id="2a543-646">The event is handled by the `Serializer``_``UnreferencedObject` method.</span></span> <span data-ttu-id="2a543-647">若要运行该示例，请将以下 XML 剪切并粘贴到名为 "UnrefObj.xml" 的文件中。</span><span class="sxs-lookup"><span data-stu-id="2a543-647">To run the example, cut and paste the following XML into a file named "UnrefObj.xml".</span></span>  
  
```  
<wrapper>  
  <Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="id1" n1:GroupName=".NET" xmlns:n1="http://www.cpandl.com">  
   </Group>  
<Vehicle id="id2" n1:type="Vehicle" xmlns:n1="http://www.w3.org/2001/XMLSchema-instance">  
    <licenseNumber xmlns:q1="http://www.w3.org/2001/XMLSchema" n1:type="q1:string">ABCD</licenseNumber>  
  </Vehicle>  
<Vehicle id="id3" n1:type="Vehicle" xmlns:n1="http://www.w3.org/2001/XMLSchema-instance">  
    <licenseNumber xmlns:q1="http://www.w3.org/2001/XMLSchema" n1:type="q1:string">1234</licenseNumber>  
  </Vehicle>  
</wrapper>  
```  
  
 [!code-cpp[UnreferencedObject Event Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/UnreferencedObject Event Example/CPP/unrefobj.cpp#1)]
 [!code-csharp[UnreferencedObject Event Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/UnreferencedObject Event Example/CS/unrefobj.cs#1)]
 [!code-vb[UnreferencedObject Event Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/UnreferencedObject Event Example/VB/unrefobj.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2a543-648">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2a543-648">Introducing XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="2a543-649">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="2a543-649">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="2a543-650">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="2a543-650">Controlling XML Serialization Using Attributes</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="2a543-651">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="2a543-651">Examples of XML Serialization</span></span></related>
        <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="2a543-652">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="2a543-652">XML Schema Definition Tool (Xsd.exe)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
