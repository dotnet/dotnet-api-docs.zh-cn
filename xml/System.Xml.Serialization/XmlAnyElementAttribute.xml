<Type Name="XmlAnyElementAttribute" FullName="System.Xml.Serialization.XmlAnyElementAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c248fa5f41fdbd11c2e9cc8727adeb726a34ffed" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83968306" /></Metadata><TypeSignature Language="C#" Value="public class XmlAnyElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAnyElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAnyElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAnyElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAnyElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlAnyElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml" FromVersion="4.0.0.0" To="System.Xml.XmlSerializer" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="4.0.0.0" To="System.Xml.XmlSerializer" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="5.0.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="4.1.0.0" To="System.Xml.ReaderWriter" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="4.1.1.0" To="System.Xml.ReaderWriter" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="4.1.2.0" To="System.Xml.ReaderWriter" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="4.0.0.0" To="System.Xml" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netstandard-2.1;netcore-1.0;netcore-1.1;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定成员（返回 <see cref="T:System.Xml.XmlElement" /> 或 <see cref="T:System.Xml.XmlNode" /> 对象的数组的字段）可以包含对象，该对象表示在序列化或反序列化的对象中没有相应成员的所有 XML 元素。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  在可移植类库（如 Silverlight、Windows Phone 或 Windows 应用商店应用程序项目）中工作时，如果使用 .NET Framework 4.0.3 和更高版本，请使用 <xref:System.Xml.Linq.XElement> 或 <xref:System.Xml.Linq.XNode> 代替 <xref:System.Xml.XmlElement> 和 <xref:System.Xml.XmlNode>。  
  
 使用 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 包含可作为 XML 文档的一部分发送的任意数据（作为 XML 元素），如作为文档的一部分发送的元数据。  
  
 将 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 应用到返回 <xref:System.Xml.XmlElement> 或 <xref:System.Xml.XmlNode> 对象数组的字段。 可以通过两种方式使用此类字段，具体取决于是否要序列化或反序列化对象。 序列化时，对象将作为 XML 元素或节点生成，即使它们在要序列化的对象中没有相应的成员（或成员）。 如果在应用属性时指定 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 属性值，则插入到数组中的所有 <xref:System.Xml.XmlElement> 或 <xref:System.Xml.XmlNode> 对象都必须具有相同的元素名称和默认命名空间，否则会引发异常。 如果设置 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 属性值，则还必须设置 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 属性，<xref:System.Xml.XmlElement> 或 <xref:System.Xml.XmlNode> 对象也必须具有相同的名称和命名空间值。 如果未指定 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 值，则 <xref:System.Xml.XmlElement> 或 <xref:System.Xml.XmlNode> 对象可以具有任何元素名称。  
  
 调用 <xref:System.Xml.Serialization.XmlSerializer> 类的 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 方法时，数组中将收集在要反序列化的对象中没有相应成员的所有元素。 反序列化后，循环访问 <xref:System.Xml.XmlElement> 项的集合以处理数据。 如果指定 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 值，则数组仅包含具有该名称的 XML 元素。 如果未指定 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 值，则数组将包含在类中没有相应成员的所有元素。 如果某个类包含多个应用该属性的字段，请使用 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>，或 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 和 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 属性以区分数组的内容。 如果这样的类（包含多个字段）还包含一个字段，该字段在反序列化过程中没有设置不同的属性值（换言之，<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 和 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>），则此数组包含其他数组中尚未包含的任何未知 XML 元素。 如果某个类包含多个不具有区分 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>的字段，或 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 和 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 值集，则不指定在反序列化过程中的行为。  
  
 您还可以将 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 应用于返回单个 <xref:System.Xml.XmlElement> 对象的字段。 如果这样做，则必须使用 <xref:System.Xml.XmlElement> 类的属性和方法以递归方式循环访问未知元素。  
  
 您可以将 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 的多个实例应用于一个类成员，但是每个实例都必须具有一个不同的 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 属性值。 或者，如果为每个实例设置相同的 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 属性，则必须为每个实例设置不同的 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 属性值。  
  
 如果将 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 应用于类的成员，则不会发生 <xref:System.Xml.Serialization.XmlSerializer> 的 <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> 和 <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> 事件。  
  
> [!NOTE]
>  您可以在代码中使用 word `XmlAnyElement` 而不是更长的 <xref:System.Xml.Serialization.XmlAnyElementAttribute>。  
  
 有关使用特性的详细信息，请参阅[特性](/dotnet/standard/attributes/)。  
  
   
  
## Examples  
 下面的示例将 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 应用于一个名为 `AllElements` 的字段，该字段返回 <xref:System.Xml.XmlElement> 对象的数组。  
  
 [!code-cpp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
    <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization">XML 序列化简介</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当要重写字段的序列化时，请使用 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 构造函数。 有关重写序列化的详细信息，请参阅 <xref:System.Xml.Serialization.XmlAttributeOverrides> 类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAnyElementAttribute : string -&gt; System.Xml.Serialization.XmlAnyElementAttribute" Usage="new System.Xml.Serialization.XmlAnyElementAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XML 元素的名称。</param>
        <summary>初始化 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 类的新实例并指定在 XML 文档中生成的 XML 元素名称。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当要重写字段的序列化时，请使用 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 构造函数。 有关重写序列化的详细信息，请参阅 <xref:System.Xml.Serialization.XmlAttributeOverrides> 类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAnyElementAttribute : string * string -&gt; System.Xml.Serialization.XmlAnyElementAttribute" Usage="new System.Xml.Serialization.XmlAnyElementAttribute (name, ns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XML 元素的名称。</param>
        <param name="ns">XML 元素的 XML 命名空间。</param>
        <summary>初始化 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 类的新实例并指定在 XML 文档中生成的 XML 元素名称及其 XML 命名空间。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当要重写字段的序列化时，请使用 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 构造函数。 有关重写序列化的详细信息，请参阅 <xref:System.Xml.Serialization.XmlAttributeOverrides> 类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 XML 元素名。</summary>
        <value>XML 元素的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果在应用属性时指定 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 属性值，则插入到数组中的所有 <xref:System.Xml.XmlElement> 或 <xref:System.Xml.XmlNode> 对象都必须具有相同的元素名称和默认命名空间，否则会引发异常。 如果设置 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 属性值，则还必须设置 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 属性，<xref:System.Xml.XmlElement> 或 <xref:System.Xml.XmlNode> 对象也必须具有相同的名称和命名空间值。 如果未指定 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 值，则 <xref:System.Xml.XmlElement> 或 <xref:System.Xml.XmlNode> 对象可以具有任何元素名称。  
  
 调用 <xref:System.Xml.Serialization.XmlSerializer> 类的 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 方法时，数组中将收集在要反序列化的对象中没有相应成员的所有属性。 如果指定 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 值，则数组仅包含具有该名称的 XML 元素。 如果未指定 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 值，则数组将包含在类中没有相应成员的所有元素。 如果某个类包含多个应用该属性的字段，请使用 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 和 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 属性来区分数组的内容。 如果这样的类（包含多个字段）还包含一个字段，该字段在反序列化过程中没有设置不同的属性值（即，<xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 和 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>），则数组包含其他数组中尚未包含的所有 XML 元素。 如果添加多个不具有区分 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 或 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 值集的字段，则类中的最后一个字段将包含其他数组中尚未包含的所有未知元素，并且任何其他字段将设置为 `null`。  
  
 您可以将 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 的多个实例应用于一个类成员，但是每个实例都必须具有一个不同的 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 属性值。 或者，如果为每个实例设置相同的 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 属性，则必须为每个实例设置不同的 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 属性值。  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">数组成员的元素名称与 <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" /> 属性指定的元素名称不匹配。</exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在 XML 文档中生成的 XML 命名空间。</summary>
        <value>一个 XML 命名空间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 属性允许您设置 XML 属性的唯一名称。 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 属性符合用于创建 XML 命名空间的规则，该规则是从万维网联合会的 XML 文档中的[命名空间](https://www.w3.org/TR/xml-names/)中找到的。
  
 若要将 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 属性设置为前缀名称，请创建一个包含 XML 文档中使用的命名空间和前缀的 <xref:System.Xml.Serialization.XmlSerializerNamespaces>。 将 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 属性设置为 <xref:System.Xml.Serialization.XmlSerializerNamespaces>中的某个命名空间。 生成 XML 时，属性名称将正确地以与指定命名空间关联的前缀作为前缀。  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Order : int with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置序列化或反序列化元素的显式顺序。</summary>
        <value>代码生成的顺序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> 枚举来指示 <xref:System.Web.Services.Description.ServiceDescriptionImporter> 生成设置 <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> 属性的代码。  
  
> [!IMPORTANT]
>  在类型中的一个公共属性或字段上使用 <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> 属性后，必须将该属性应用于该类型和所有继承的类型的所有公共属性和字段。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
