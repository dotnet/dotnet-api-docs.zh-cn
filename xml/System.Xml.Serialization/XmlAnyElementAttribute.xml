<Type Name="XmlAnyElementAttribute" FullName="System.Xml.Serialization.XmlAnyElementAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="190186c03a7eba0db396e4f19f260ed4c4abebed" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86691026" /></Metadata><TypeSignature Language="C#" Value="public class XmlAnyElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAnyElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAnyElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAnyElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAnyElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlAnyElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml" FromVersion="4.0.0.0" To="System.Xml.XmlSerializer" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="4.0.0.0" To="System.Xml.XmlSerializer" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="5.0.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="4.1.0.0" To="System.Xml.ReaderWriter" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="4.1.1.0" To="System.Xml.ReaderWriter" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="4.1.2.0" To="System.Xml.ReaderWriter" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="4.0.0.0" To="System.Xml" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2d0f6-101">指定成员（返回 <see cref="T:System.Xml.XmlElement" /> 或 <see cref="T:System.Xml.XmlNode" /> 对象的数组的字段）可以包含对象，该对象表示在序列化或反序列化的对象中没有相应成员的所有 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-101">Specifies that the member (a field that returns an array of <see cref="T:System.Xml.XmlElement" /> or <see cref="T:System.Xml.XmlNode" /> objects) contains objects that represent any XML element that has no corresponding member in the object being serialized or deserialized.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  <span data-ttu-id="2d0f6-102">在可移植类库（如 Silverlight、Windows Phone 或 Windows 应用商店应用项目）中工作时，如果使用的是 .NET Framework 4.0.3 和更高版本，请使用 <xref:System.Xml.Linq.XElement> 或 <xref:System.Xml.Linq.XNode> 替代 <xref:System.Xml.XmlElement> 和 <xref:System.Xml.XmlNode> 。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-102">When working in a portable class library, such as in Silverlight, Windows Phone or Windows Store App project, and you are using the .NET Framework 4.0.3 and above, use <xref:System.Xml.Linq.XElement> or <xref:System.Xml.Linq.XNode> in place of <xref:System.Xml.XmlElement> and <xref:System.Xml.XmlNode>.</span></span>  
  
 <span data-ttu-id="2d0f6-103">使用可将 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 任意数据作为 xml 元素 (包含) ，这些元素可作为 xml 文档的一部分发送，如作为文档的一部分发送的元数据。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-103">Use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to contain arbitrary data (as XML elements) that can be sent as part of an XML document, such as metadata sent as part of the document.</span></span>  
  
 <span data-ttu-id="2d0f6-104">将应用 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 到返回或对象的数组的字段 <xref:System.Xml.XmlElement> <xref:System.Xml.XmlNode> 。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-104">Apply the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a field that returns an array of <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects.</span></span> <span data-ttu-id="2d0f6-105">可以通过两种方式使用此类字段，具体取决于是否要序列化或反序列化对象。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-105">Such a field can be used in two ways, depending on whether an object is being serialized or deserialized.</span></span> <span data-ttu-id="2d0f6-106">序列化时，对象将作为 XML 元素或节点生成，即使它们在要序列化的对象中没有相应的成员 (或成员) 。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-106">When serialized, the object is generated as XML elements or nodes, even though they have no corresponding member (or members) in the object being serialized.</span></span> <span data-ttu-id="2d0f6-107">如果在 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 应用属性时指定属性值，则 <xref:System.Xml.XmlElement> <xref:System.Xml.XmlNode> 插入到数组中的所有或对象都必须具有相同的元素名称和默认命名空间，否则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-107">If you specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property value when applying the attribute, all <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects inserted into the array must have the same element name and default namespace, or an exception is thrown.</span></span> <span data-ttu-id="2d0f6-108">如果设置了 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 属性值，则还必须设置 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 属性，并且 <xref:System.Xml.XmlElement> 或 <xref:System.Xml.XmlNode> 对象也必须具有相同的名称和命名空间值。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-108">If you set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property value, you must set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property as well, and the <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects must also have the same name and namespace values.</span></span> <span data-ttu-id="2d0f6-109">如果未 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 指定任何值，则 <xref:System.Xml.XmlElement> 或 <xref:System.Xml.XmlNode> 对象可以具有任何元素名称。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-109">If no <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value is specified, the <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects can have any element name.</span></span>  
  
 <span data-ttu-id="2d0f6-110">调用 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 类的方法时 <xref:System.Xml.Serialization.XmlSerializer> ，数组中将收集在要反序列化的对象中没有相应成员的所有元素。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-110">When you call the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method of the <xref:System.Xml.Serialization.XmlSerializer> class, all elements that do not have a corresponding member in the object being deserialized are collected in the array.</span></span> <span data-ttu-id="2d0f6-111">反序列化后，循环访问项的集合 <xref:System.Xml.XmlElement> 以处理数据。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-111">After deserialization, iterate through the collection of <xref:System.Xml.XmlElement> items to process the data.</span></span> <span data-ttu-id="2d0f6-112">如果指定一个 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 值，则数组仅包含具有该名称的 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-112">If you specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value, the array contains only XML elements with that name.</span></span> <span data-ttu-id="2d0f6-113">如果未指定 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 值，则数组包含类中没有相应成员的所有元素。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-113">If you do not specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value, the array contains all elements that have no corresponding member in the class.</span></span> <span data-ttu-id="2d0f6-114">如果某个类包含多个应用该属性的字段，请使用 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 、或 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 和 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 属性区分数组的内容。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-114">If a class contains more than one field to which the attribute is applied, use the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>, or <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> properties to differentiate between the contents of the arrays.</span></span> <span data-ttu-id="2d0f6-115">如果此类 (具有多个字段的类) 也包含一个字段，该字段的属性值均未设置为 (换言之) ，在 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 反序列化期间，此数组包含其他数组中尚未包含的任何未知 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-115">If such a class (with multiple fields) also contains one field that has no differentiating property values set (in other words, <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) during deserialization, this array contains any unknown XML elements that are not already contained in the other arrays.</span></span> <span data-ttu-id="2d0f6-116">如果某个类包含多个未 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 设置区分、或和值的字段，则不 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 指定在 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 反序列化过程中的行为。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-116">If a class contains more than one field that does not have a differentiating <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>, or <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> value set, the behavior during deserialization is unspecified.</span></span>  
  
 <span data-ttu-id="2d0f6-117">您还可以将应用于 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 返回单个对象的字段 <xref:System.Xml.XmlElement> 。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-117">You can also apply the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a field that returns a single <xref:System.Xml.XmlElement> object.</span></span> <span data-ttu-id="2d0f6-118">如果这样做，则必须使用类的属性和方法 <xref:System.Xml.XmlElement> 以递归方式循环访问未知元素。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-118">If you do so, you must use the properties and methods of the <xref:System.Xml.XmlElement> class to recursively iterate through the unknown elements.</span></span>  
  
 <span data-ttu-id="2d0f6-119">您可以将多个实例应用于 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 一个类成员，但是每个实例都必须具有一个不同的 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 属性值。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-119">You can apply multiple instances of the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a class member, but each instance must have a distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property value.</span></span> <span data-ttu-id="2d0f6-120">或者，如果为 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 每个实例设置了相同的属性，则 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 必须为每个实例设置不同的属性值。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-120">Or, if the same <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property is set for each instance, a distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property value must be set for each instance.</span></span>  
  
 <span data-ttu-id="2d0f6-121"><xref:System.Xml.Serialization.XmlSerializer.UnknownNode>如果将应用于类的成员，则的和 <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> 事件 <xref:System.Xml.Serialization.XmlSerializer> 不会发生 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-121">The <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> and <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> events of the <xref:System.Xml.Serialization.XmlSerializer> do not occur if you apply the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a member of a class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2d0f6-122">您可以 `XmlAnyElement` 在代码中使用该单词而不是更长的时间 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-122">You can use the word `XmlAnyElement` in your code instead of the longer <xref:System.Xml.Serialization.XmlAnyElementAttribute>.</span></span>  
  
 <span data-ttu-id="2d0f6-123">有关使用特性的详细信息，请参阅 [特性](/dotnet/standard/attributes/)。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-123">For more information about using attributes, see [Attributes](/dotnet/standard/attributes/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d0f6-124">下面的示例将应用于 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 名为 `AllElements` 的字段，该字段返回 <xref:System.Xml.XmlElement> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-124">The following example applies the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a field named `AllElements` that returns an array of <xref:System.Xml.XmlElement> objects.</span></span>  
  
 [!code-cpp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
    <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="2d0f6-125">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="2d0f6-125">Introducing XML Serialization</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d0f6-126">初始化 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-126">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d0f6-127">初始化 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-127">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d0f6-128"><xref:System.Xml.Serialization.XmlAnyElementAttribute>当要重写字段的序列化时，请使用构造函数。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-128">Use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> constructor when you are overriding the serialization of a field.</span></span> <span data-ttu-id="2d0f6-129">有关重写序列化的详细信息，请参见 <xref:System.Xml.Serialization.XmlAttributeOverrides> 类。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-129">For more details about overriding serialization, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAnyElementAttribute : string -&gt; System.Xml.Serialization.XmlAnyElementAttribute" Usage="new System.Xml.Serialization.XmlAnyElementAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2d0f6-130"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XML 元素的名称。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-130">The name of the XML element that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates.</span></span></param>
        <summary><span data-ttu-id="2d0f6-131">初始化 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 类的新实例并指定在 XML 文档中生成的 XML 元素名称。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-131">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class and specifies the XML element name generated in the XML document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d0f6-132"><xref:System.Xml.Serialization.XmlAnyElementAttribute>当要重写字段的序列化时，请使用构造函数。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-132">Use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> constructor when you are overriding the serialization of a field.</span></span> <span data-ttu-id="2d0f6-133">有关重写序列化的详细信息，请参见 <xref:System.Xml.Serialization.XmlAttributeOverrides> 类。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-133">For more details about overriding serialization, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAnyElementAttribute : string * string -&gt; System.Xml.Serialization.XmlAnyElementAttribute" Usage="new System.Xml.Serialization.XmlAnyElementAttribute (name, ns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2d0f6-134"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XML 元素的名称。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-134">The name of the XML element that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates.</span></span></param>
        <param name="ns"><span data-ttu-id="2d0f6-135">XML 元素的 XML 命名空间。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-135">The XML namespace of the XML element.</span></span></param>
        <summary><span data-ttu-id="2d0f6-136">初始化 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 类的新实例并指定在 XML 文档中生成的 XML 元素名称及其 XML 命名空间。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-136">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> class and specifies the XML element name generated in the XML document and its XML namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d0f6-137"><xref:System.Xml.Serialization.XmlAnyElementAttribute>当要重写字段的序列化时，请使用构造函数。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-137">Use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> constructor when you are overriding the serialization of a field.</span></span> <span data-ttu-id="2d0f6-138">有关重写序列化的详细信息，请参见 <xref:System.Xml.Serialization.XmlAttributeOverrides> 类。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-138">For more details about overriding serialization, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d0f6-139">获取或设置 XML 元素名。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-139">Gets or sets the XML element name.</span></span></summary>
        <value><span data-ttu-id="2d0f6-140">XML 元素的名称。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-140">The name of the XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d0f6-141">如果在 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 应用属性时指定属性值，则 <xref:System.Xml.XmlElement> <xref:System.Xml.XmlNode> 插入到数组中的所有或对象都必须具有相同的元素名称和默认命名空间，否则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-141">If you specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property value when applying the attribute, all <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects inserted into the array must have the same element name and default namespace, or an exception is thrown.</span></span> <span data-ttu-id="2d0f6-142">如果设置了 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 属性值，则还必须设置 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 属性，并且 <xref:System.Xml.XmlElement> 或 <xref:System.Xml.XmlNode> 对象也必须具有相同的名称和命名空间值。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-142">If you set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property value, you must set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property as well, and the <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects must also have the same name and namespace values.</span></span> <span data-ttu-id="2d0f6-143">如果未 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 指定任何值，则 <xref:System.Xml.XmlElement> 或 <xref:System.Xml.XmlNode> 对象可以具有任何元素名称。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-143">If no <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value is specified, the <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlNode> objects can have any element name.</span></span>  
  
 <span data-ttu-id="2d0f6-144">调用 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 类的方法时 <xref:System.Xml.Serialization.XmlSerializer> ，数组中将收集在要反序列化的对象中没有相应成员的所有属性。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-144">When you call the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method of the <xref:System.Xml.Serialization.XmlSerializer> class, all attributes that do not have a corresponding member in the object being deserialized are collected in the array.</span></span> <span data-ttu-id="2d0f6-145">如果指定一个 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 值，则数组仅包含具有该名称的 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-145">If you specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value, the array contains only XML elements with that name.</span></span> <span data-ttu-id="2d0f6-146">如果未指定 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 值，则数组包含类中没有相应成员的所有元素。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-146">If you do not specify a <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> value, the array contains all elements that have no corresponding member in the class.</span></span> <span data-ttu-id="2d0f6-147">如果某个类包含多个应用该属性的字段，请使用 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 和 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 属性来区分数组的内容。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-147">If a class contains more than one field to which the attribute is applied, use the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> properties to differentiate between the contents of the arrays.</span></span> <span data-ttu-id="2d0f6-148">如果此类 (具有多个字段的类) 也包含一个字段，该字段未设置任何不同的属性值 (也就是说 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) ，在反序列化期间，该数组包含其他数组中尚未包含的所有 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-148">If such a class (with multiple fields) also contains one field that has no differentiating property values set (that is, <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> and <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) during deserialization, the array contains any XML elements that are not already contained in the other arrays.</span></span> <span data-ttu-id="2d0f6-149">如果添加多个不具有区分 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 或值集的字段，则 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 类中的最后一个字段将包含其他数组中尚未包含的所有未知元素，并且任何其他字段将设置为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-149">If you add more than one field that does not have a differentiating <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> or <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> value set, the last field in the class contains all unknown elements that are not already contained in the other arrays, and any other fields are set to `null`.</span></span>  
  
 <span data-ttu-id="2d0f6-150">您可以将多个实例应用于 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 一个类成员，但是每个实例都必须具有一个不同的 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 属性值。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-150">You can apply multiple instances of the <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a class member, but each instance must have a distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property value.</span></span> <span data-ttu-id="2d0f6-151">或者，如果为 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 每个实例设置了相同的属性，则 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 必须为每个实例设置不同的属性值。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-151">Or, if the same <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> property is set for each instance, a distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property value must be set for each instance.</span></span>  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2d0f6-152">数组成员的元素名称与 <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" /> 属性指定的元素名称不匹配。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-152">The element name of an array member does not match the element name specified by the <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" /> property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d0f6-153">获取或设置在 XML 文档中生成的 XML 命名空间。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-153">Gets or sets the XML namespace generated in the XML document.</span></span></summary>
        <value><span data-ttu-id="2d0f6-154">一个 XML 命名空间。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-154">An XML namespace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d0f6-155">使用 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 属性可以设置 XML 属性的唯一名称。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-155">The <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property allows you to set a unique name for the XML attribute.</span></span> <span data-ttu-id="2d0f6-156"><xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>属性符合创建 xml 命名空间的规则，该规则是从万维网联合会的 xml 文档中的[命名空间](https://www.w3.org/TR/xml-names/)中找到的。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-156">The <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property conforms to the rules for creating an XML namespace as found in the [Namespaces in XML](https://www.w3.org/TR/xml-names/) document from the World Wide Web Consortium.</span></span>
  
 <span data-ttu-id="2d0f6-157">若要将 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 属性设置为带前缀的名称，请创建一个 <xref:System.Xml.Serialization.XmlSerializerNamespaces> ，其中包含 XML 文档中使用的命名空间和前缀。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-157">To set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property to a prefixed name, create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> that contains the namespaces and prefixes used in the XML document.</span></span> <span data-ttu-id="2d0f6-158">将 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 属性设置为中的一个命名空间 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-158">Set the <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> property to one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span> <span data-ttu-id="2d0f6-159">生成 XML 时，属性名称将正确地以与指定命名空间关联的前缀作为前缀。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-159">When the XML is generated, the attribute name is correctly prefixed with the prefix associated with the specified namespace.</span></span>  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Order : int with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d0f6-160">获取或设置序列化或反序列化元素的显式顺序。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-160">Gets or sets the explicit order in which the elements are serialized or deserialized.</span></span></summary>
        <value><span data-ttu-id="2d0f6-161">代码生成的顺序。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-161">The order of the code generation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d0f6-162">使用 <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> 枚举来指示 <xref:System.Web.Services.Description.ServiceDescriptionImporter> 生成用于设置属性的代码 <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-162">Use the <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> enumeration to instruct the <xref:System.Web.Services.Description.ServiceDescriptionImporter> to generate code that sets the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2d0f6-163">在 <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> 类型中的一个公共属性或字段上使用该属性后，必须将该属性应用于该类型和所有继承类型的所有公共属性和字段。</span><span class="sxs-lookup"><span data-stu-id="2d0f6-163">Once the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
