<Type Name="XmlAttributeOverrides" FullName="System.Xml.Serialization.XmlAttributeOverrides">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ce5d567624d6dde328a51e35dd3de380f1aa3594" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83968233" /></Metadata><TypeSignature Language="C#" Value="public class XmlAttributeOverrides" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAttributeOverrides extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAttributeOverrides" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAttributeOverrides" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributeOverrides" />
  <TypeSignature Language="F#" Value="type XmlAttributeOverrides = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml" FromVersion="4.0.0.0" To="System.Xml.XmlSerializer" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="4.0.0.0" To="System.Xml.XmlSerializer" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.XmlSerializer" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="4.0.0.0" To="System.Xml" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="2.0.5.0" To="System.Xml" ToVersion="2.0.5.0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>允许在使用 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 串行化或反序列化对象时替代属性、字段和类特性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Xml.Serialization.XmlAttributeOverrides>，<xref:System.Xml.Serialization.XmlSerializer> 可以重写序列化一组对象的默认方式。 以这种方式重写序列化具有两个用途：首先，可以控制和增加在 DLL 中找到的对象的序列化（即使你无法访问源）;其次，您可以创建一组可序列化类，但可以通过多种方式序列化这些对象。 例如，可以将类实例的成员作为 xml 属性进行序列化，而不是将其序列化为 xml 元素，从而使传输的文档更有效。  
  
 创建 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象后，可以将其作为参数传递到 <xref:System.Xml.Serialization.XmlSerializer.%23ctor%2A> 构造函数。 生成的 <xref:System.Xml.Serialization.XmlSerializer> 使用 <xref:System.Xml.Serialization.XmlAttributeOverrides> 包含的数据重写控制如何序列化对象的特性。 为实现此目的，<xref:System.Xml.Serialization.XmlAttributeOverrides> 包含被重写的对象类型的集合，以及与每个被重写的对象类型相关联的 <xref:System.Xml.Serialization.XmlAttributes> 对象。 <xref:System.Xml.Serialization.XmlAttributes> 对象本身包含一组适当的属性对象，这些对象控制如何序列化每个字段、属性或类。  
  
 创建和使用 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象的过程如下所示：  
  
1.  创建 <xref:System.Xml.Serialization.XmlAttributes> 对象。  
  
2.  创建适合要重写的对象的属性对象。 例如，若要重写字段或属性，请使用新的派生类型创建 <xref:System.Xml.Serialization.XmlElementAttribute>。 您可以选择分配新的 <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A>或重写基类的属性名称或命名空间的 <xref:System.Xml.Serialization.XmlElementAttribute.Namespace%2A>。  
  
3.  将特性对象添加到相应的 <xref:System.Xml.Serialization.XmlAttributes> 属性或集合。 例如，你可以将 <xref:System.Xml.Serialization.XmlElementAttribute> 添加到 <xref:System.Xml.Serialization.XmlAttributes> 对象的 <xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A> 集合，并指定要重写的成员名称。  
  
4.  创建 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象。  
  
5.  使用 <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> 方法，将 <xref:System.Xml.Serialization.XmlAttributes> 对象添加到 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象。 如果要重写的对象是 <xref:System.Xml.Serialization.XmlRootAttribute> 或 <xref:System.Xml.Serialization.XmlTypeAttribute>，则只需指定重写的对象的类型。 但如果要重写字段或属性，还必须指定重写成员的名称。  
  
6.  构造 <xref:System.Xml.Serialization.XmlSerializer>时，将 <xref:System.Xml.Serialization.XmlAttributeOverrides> 传递到 <xref:System.Xml.Serialization.XmlSerializer.%23ctor%2A> 构造函数。  
  
7.  使用生成的 <xref:System.Xml.Serialization.XmlSerializer> 序列化或反序列化派生类对象。  
  
   
  
## Examples  
 下面的示例对名为 `Orchestra`的类进行序列化，该类包含一个名为 `Instruments` 的字段，该字段返回 `Instrument` 对象的数组。 名为 `Brass` 的第二个类继承自 `Instrument` 类。 该示例使用 <xref:System.Xml.Serialization.XmlAttributeOverrides> 类的实例重写 `Instrument` 字段，允许字段接受 `Brass` 对象。  
  
 [!code-cpp[Classic XmlAttributeOverrides Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeOverrides Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeOverrides Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeOverrides Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeOverrides Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeOverrides Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
    <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization">XML 序列化简介</related>
    <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream">如何：指定 XML 流的替代元素名称</related>
    <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes">使用属性控制 XML 序列化</related>
    <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization">XML 序列化示例</related>
    <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe">XML Schema Definition Tool (Xsd.exe)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeOverrides ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeOverrides();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象添加到 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象的集合中。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Type type, System.Xml.Serialization.XmlAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Type type, class System.Xml.Serialization.XmlAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (type As Type, attributes As XmlAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Type ^ type, System::Xml::Serialization::XmlAttributes ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.Add : Type * System.Xml.Serialization.XmlAttributes -&gt; unit" Usage="xmlAttributeOverrides.Add (type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Xml.Serialization.XmlAttributes" />
      </Parameters>
      <Docs>
        <param name="type">所替代的对象的 <see cref="T:System.Type" />。</param>
        <param name="attributes">表示替代属性的 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象。</param>
        <summary>将 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象添加到 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象的集合中。 <paramref name="type" /> 参数指定由 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象替代的对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAttributes> 对象包含特性对象的联合，这将导致 <xref:System.Xml.Serialization.XmlSerializer> 为一组对象重写其默认序列化行为。 根据要重写的特定行为，选择要放置在 <xref:System.Xml.Serialization.XmlAttributes> 对象中的属性对象。 例如，默认情况下，<xref:System.Xml.Serialization.XmlSerializer> 将类成员序列化为 XML 元素。 如果要改为将成员序列化为 XM 特性，请创建 <xref:System.Xml.Serialization.XmlAttributeAttribute>，将其分配给 <xref:System.Xml.Serialization.XmlAttributes>的 <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> 属性，并将 <xref:System.Xml.Serialization.XmlAttributes> 对象添加到 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象。  
  
 使用此重载重写 <xref:System.Xml.Serialization.XmlRootAttribute> 或 <xref:System.Xml.Serialization.XmlTypeAttribute>。  
  
   
  
## Examples  
 下面的示例从名为 `Orchestra`的类中序列化名为 `Band` 的类。 该示例创建一个 <xref:System.Xml.Serialization.XmlRootAttribute> 对象，并将其分配给 <xref:System.Xml.Serialization.XmlAttributes> 对象的 <xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A> 属性。 然后，该示例调用 <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> 方法，将 <xref:System.Xml.Serialization.XmlAttributes> 对象添加到 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象。  
  
 [!code-cpp[Classic XmlAttributeOverrides.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeOverrides.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.Add Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeOverrides.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeOverrides.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Type type, string member, System.Xml.Serialization.XmlAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Type type, string member, class System.Xml.Serialization.XmlAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (type As Type, member As String, attributes As XmlAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Type ^ type, System::String ^ member, System::Xml::Serialization::XmlAttributes ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.Add : Type * string * System.Xml.Serialization.XmlAttributes -&gt; unit" Usage="xmlAttributeOverrides.Add (type, member, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="member" Type="System.String" />
        <Parameter Name="attributes" Type="System.Xml.Serialization.XmlAttributes" />
      </Parameters>
      <Docs>
        <param name="type">要替代的对象的 <see cref="T:System.Type" />。</param>
        <param name="member">要替代的成员的名称。</param>
        <param name="attributes">表示替代属性的 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象。</param>
        <summary>将 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象添加到 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 对象的集合中。 <paramref name="type" /> 参数指定要替代的对象。 <paramref name="member" /> 参数指定所替代的成员名称。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAttributes> 对象包含特性对象的联合，这将导致 <xref:System.Xml.Serialization.XmlSerializer> 为一组对象重写其默认序列化行为。 根据要重写的特定行为，选择要放置在 <xref:System.Xml.Serialization.XmlAttributes> 对象中的属性对象。 例如，默认情况下，<xref:System.Xml.Serialization.XmlSerializer> 将类成员序列化为 XML 元素。 如果希望将成员作为 XML 特性序列化，请创建 <xref:System.Xml.Serialization.XmlAttributeAttribute>，将其分配给 <xref:System.Xml.Serialization.XmlAttributes>的 <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> 属性，并将 <xref:System.Xml.Serialization.XmlAttributes> 对象添加到 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象。  
  
 尝试重写 <xref:System.Xml.Serialization.XmlElementAttribute>、<xref:System.Xml.Serialization.XmlAttributeAttribute>、<xref:System.Xml.Serialization.XmlArrayAttribute>、<xref:System.Xml.Serialization.XmlArrayItemAttribute>或 <xref:System.Xml.Serialization.XmlIgnoreAttribute>时使用此方法。  
  
   
  
## Examples  
 下面的示例创建一个 <xref:System.Xml.Serialization.XmlAttributeAttribute> 对象，并将其分配给 <xref:System.Xml.Serialization.XmlAttributes> 对象的 <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> 属性。 然后，该示例在创建 <xref:System.Xml.Serialization.XmlSerializer>之前将 <xref:System.Xml.Serialization.XmlAttributes> 对象添加到 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象。  
  
 [!code-cpp[Classic XmlAttributeOverrides.Add1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.Add1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeOverrides.Add1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.Add1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeOverrides.Add1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeOverrides.Add1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取表示替代属性的集合的对象。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAttributes this[Type type] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAttributes Item(class System.Type)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(type As Type) As XmlAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAttributes ^ default[Type ^] { System::Xml::Serialization::XmlAttributes ^ get(Type ^ type); };" />
      <MemberSignature Language="F#" Value="member this.Item(Type) : System.Xml.Serialization.XmlAttributes" Usage="System.Xml.Serialization.XmlAttributeOverrides.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">与要检索的属性的集合相关联的基类 <see cref="T:System.Type" />。</param>
        <summary>获取与指定的基类类型相关联的对象。</summary>
        <value>表示重写属性集合的 <see cref="T:System.Xml.Serialization.XmlAttributes" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此重载返回 <xref:System.Xml.Serialization.XmlAttributes> 对象，该对象包含 <xref:System.Xml.Serialization.XmlRootAttribute> 或 <xref:System.Xml.Serialization.XmlTypeAttribute> 对象的特性。  
  
 如果 <xref:System.Xml.Serialization.XmlAttributes> 对象包含重写 <xref:System.Xml.Serialization.XmlArrayAttribute>、<xref:System.Xml.Serialization.XmlArrayItemAttribute>、<xref:System.Xml.Serialization.XmlElementAttribute>、<xref:System.Xml.Serialization.XmlEnumAttribute>或 <xref:System.Xml.Serialization.XmlAttributeAttribute>的对象，则必须使用指定重写成员的重载以及类型。  
  
   
  
## Examples  
 下面的示例创建一个 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象、一个 <xref:System.Xml.Serialization.XmlAttributes> 对象和一个 <xref:System.Xml.Serialization.XmlRootAttribute> 对象。 该示例将 <xref:System.Xml.Serialization.XmlRootAttribute> 分配给 <xref:System.Xml.Serialization.XmlAttributes> 对象的 <xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A> 属性，并将 <xref:System.Xml.Serialization.XmlAttributes> 对象添加到 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象。 最后，该示例通过将序列化类的 <xref:System.Type> 传递到 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象来获取 <xref:System.Xml.Serialization.XmlAttributes> 的对象。 在此示例中，<xref:System.Type> `Group`。  
  
 [!code-cpp[Classic XmlAttributeOverrides.this Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeOverrides.this Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.this Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeOverrides.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeOverrides.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAttributes this[Type type, string member] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAttributes Item(class System.Type, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(type As Type, member As String) As XmlAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAttributes ^ default[Type ^, System::String ^] { System::Xml::Serialization::XmlAttributes ^ get(Type ^ type, System::String ^ member); };" />
      <MemberSignature Language="F#" Value="member this.Item(Type * string) : System.Xml.Serialization.XmlAttributes" Usage="System.Xml.Serialization.XmlAttributeOverrides.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="member" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">与所需属性的集合相关联的基类 <see cref="T:System.Type" />。</param>
        <param name="member">指定要返回的 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 的替代成员名称。</param>
        <summary>获取与指定（基类）类型相关联的对象。 成员参数指定被替代的基类成员。</summary>
        <value>表示重写属性集合的 <see cref="T:System.Xml.Serialization.XmlAttributes" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此重载返回一个 <xref:System.Xml.Serialization.XmlAttributes> 对象，该对象包含重写 <xref:System.Xml.Serialization.XmlArrayAttribute>、<xref:System.Xml.Serialization.XmlArrayItemAttribute>、<xref:System.Xml.Serialization.XmlAttributeAttribute>、<xref:System.Xml.Serialization.XmlElementAttribute>或 <xref:System.Xml.Serialization.XmlEnumAttribute>的对象。 如果 <xref:System.Xml.Serialization.XmlAttributes> 对象包含 <xref:System.Xml.Serialization.XmlRootAttribute> 或 <xref:System.Xml.Serialization.XmlTypeAttribute>，则必须使用仅指定重写类型的重载。  
  
   
  
## Examples  
 下面的示例创建 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象、<xref:System.Xml.Serialization.XmlAttributes>和 <xref:System.Xml.Serialization.XmlAttributeAttribute> 对象。 该示例将 <xref:System.Xml.Serialization.XmlAttributeAttribute> 分配给 <xref:System.Xml.Serialization.XmlAttributes> 对象的 <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> 属性，并将 <xref:System.Xml.Serialization.XmlAttributes> 对象添加到 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象。 最后，该示例通过将序列化类和成员名称的 <xref:System.Type> 传递到 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象来获取 <xref:System.Xml.Serialization.XmlAttributes> 的对象。  
  
 [!code-cpp[Classic XmlAttributeOverrides.this1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.this1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeOverrides.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeOverrides.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeOverrides.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
  </Members>
</Type>
