<Type Name="XmlReflectionImporter" FullName="System.Xml.Serialization.XmlReflectionImporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="283d704f83adfa473dd0bfbef2da0610c05f8eb8" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86604641" /></Metadata><TypeSignature Language="C#" Value="public class XmlReflectionImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlReflectionImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlReflectionImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlReflectionImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlReflectionImporter" />
  <TypeSignature Language="F#" Value="type XmlReflectionImporter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.XmlSerializer" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="4.0.0.0" To="System.Xml" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e580e-101">为 .NET Framework 类型或 Web 服务方法信息生成到 XML 架构元素声明（包括 Web 服务描述语言 (WSDL) 文档中的文本 XML 架构定义 (XSD) 消息部分）的映射。</span><span class="sxs-lookup"><span data-stu-id="e580e-101">Generates mappings to XML schema element declarations, including literal XML Schema Definition (XSD) message parts in a Web Services Description Language (WSDL) document, for .NET Framework types or Web service method information.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e580e-102"><xref:System.Xml.Serialization.XmlReflectionImporter>不会直接使用类。</span><span class="sxs-lookup"><span data-stu-id="e580e-102">The <xref:System.Xml.Serialization.XmlReflectionImporter> class is not used directly.</span></span> <span data-ttu-id="e580e-103">相反，它的使用方式如下：</span><span class="sxs-lookup"><span data-stu-id="e580e-103">Instead, it is used as follows:</span></span>  
  
-   <span data-ttu-id="e580e-104">由 <xref:System.Web.Services.Description.ServiceDescriptionReflector> 类在 <xref:System.Web.Services.Description.ServiceDescription> 从标识为 Web 服务的类创建对象时使用。</span><span class="sxs-lookup"><span data-stu-id="e580e-104">By the <xref:System.Web.Services.Description.ServiceDescriptionReflector> class while it creates <xref:System.Web.Services.Description.ServiceDescription> objects from classes that are identified as Web services.</span></span>  
  
-   <span data-ttu-id="e580e-105">由 Web 服务或客户端（包括在初始化过程中）。</span><span class="sxs-lookup"><span data-stu-id="e580e-105">By a Web service or client, including during initialization.</span></span>  
  
-   <span data-ttu-id="e580e-106">初始化 <xref:System.Xml.Serialization.XmlSerializer> 对象。</span><span class="sxs-lookup"><span data-stu-id="e580e-106">To initialize an <xref:System.Xml.Serialization.XmlSerializer> object.</span></span>  
  
-   <span data-ttu-id="e580e-107">通过 XML 架构定义工具 ( # A0) ，而该工具从运行时程序集文件中的类型生成 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="e580e-107">By the XML Schema Definition tool (Xsd.exe) while the tool generates XML schemas from types in a run-time assembly file.</span></span>  
  
-   <span data-ttu-id="e580e-108">由 Web 服务描述语言工具 ( # A0) ，而该工具从 WSDL 文档生成客户端代理类或抽象服务器类。</span><span class="sxs-lookup"><span data-stu-id="e580e-108">By the Web Services Description Language tool (Wsdl.exe) while the tool generates client proxy classes or abstract server classes from a WSDL document.</span></span>  
  
 <span data-ttu-id="e580e-109"><xref:System.Xml.Serialization.XmlReflectionImporter>当服务或客户端指定时，类用于 Web 服务：</span><span class="sxs-lookup"><span data-stu-id="e580e-109">The <xref:System.Xml.Serialization.XmlReflectionImporter> class is used for Web services when a service or client specifies:</span></span>  
  
-   <span data-ttu-id="e580e-110">文本使用，它指示 (或请求和响应文档的 SOAP 消息参数和返回值的内容，并使用 XML 架构定义在字面上指定) 。</span><span class="sxs-lookup"><span data-stu-id="e580e-110">Literal use, which indicates that the contents of SOAP message parameters and return values (or request and response documents) are literally specified with XML schema definitions.</span></span>  
  
-   <span data-ttu-id="e580e-111">使用 HTTP GET 和 HTTP POST 操作的 Web 服务的非 SOAP 实现。</span><span class="sxs-lookup"><span data-stu-id="e580e-111">Non-SOAP implementations of Web services using the HTTP-GET and HTTP-POST operations.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e580e-112">初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e580e-112">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e580e-113">初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e580e-113">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e580e-114">不需要直接创建对象的实例 <xref:System.Xml.Serialization.XmlReflectionImporter> 。</span><span class="sxs-lookup"><span data-stu-id="e580e-114">You do not need to create an instance of an <xref:System.Xml.Serialization.XmlReflectionImporter> object directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter (string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (defaultNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter(System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlReflectionImporter : string -&gt; System.Xml.Serialization.XmlReflectionImporter" Usage="new System.Xml.Serialization.XmlReflectionImporter defaultNamespace" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="defaultNamespace"><span data-ttu-id="e580e-115">导入的类型映射要使用的默认 XML 命名空间。</span><span class="sxs-lookup"><span data-stu-id="e580e-115">The default XML namespace to use for imported type mappings.</span></span></param>
        <summary><span data-ttu-id="e580e-116">使用指定的默认 XML 命名空间，初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e580e-116">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class using the specified default XML namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e580e-117">不需要直接创建类的实例 <xref:System.Xml.Serialization.XmlReflectionImporter> 。</span><span class="sxs-lookup"><span data-stu-id="e580e-117">It is not necessary to create an instance of the <xref:System.Xml.Serialization.XmlReflectionImporter> class directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter (System.Xml.Serialization.XmlAttributeOverrides attributeOverrides);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlAttributeOverrides attributeOverrides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeOverrides As XmlAttributeOverrides)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter(System::Xml::Serialization::XmlAttributeOverrides ^ attributeOverrides);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlReflectionImporter : System.Xml.Serialization.XmlAttributeOverrides -&gt; System.Xml.Serialization.XmlReflectionImporter" Usage="new System.Xml.Serialization.XmlReflectionImporter attributeOverrides" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attributeOverrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
      </Parameters>
      <Docs>
        <param name="attributeOverrides"><span data-ttu-id="e580e-118">一个对象，该对象重写 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类序列化映射类型的方式。</span><span class="sxs-lookup"><span data-stu-id="e580e-118">An object that overrides how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class serializes mapped types.</span></span></param>
        <summary><span data-ttu-id="e580e-119">使用指定的 XML 序列化重写，初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e580e-119">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class using the specified XML serialization overrides.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e580e-120">不需要直接创建类的实例 <xref:System.Xml.Serialization.XmlReflectionImporter> 。</span><span class="sxs-lookup"><span data-stu-id="e580e-120">It is not necessary to create an instance of the <xref:System.Xml.Serialization.XmlReflectionImporter> class directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter (System.Xml.Serialization.XmlAttributeOverrides attributeOverrides, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlAttributeOverrides attributeOverrides, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeOverrides As XmlAttributeOverrides, defaultNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter(System::Xml::Serialization::XmlAttributeOverrides ^ attributeOverrides, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlReflectionImporter : System.Xml.Serialization.XmlAttributeOverrides * string -&gt; System.Xml.Serialization.XmlReflectionImporter" Usage="new System.Xml.Serialization.XmlReflectionImporter (attributeOverrides, defaultNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeOverrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeOverrides"><span data-ttu-id="e580e-121">一个对象，该对象重写 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 类序列化映射类型的方式。</span><span class="sxs-lookup"><span data-stu-id="e580e-121">An object that overrides how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class serializes mapped types.</span></span></param>
        <param name="defaultNamespace"><span data-ttu-id="e580e-122">导入的类型映射要使用的默认 XML 命名空间。</span><span class="sxs-lookup"><span data-stu-id="e580e-122">The default XML namespace to use for imported type mappings.</span></span></param>
        <summary><span data-ttu-id="e580e-123">使用指定的 XML 序列化重写和默认的 XML 命名空间，初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e580e-123">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class using the specified XML serialization overrides and default XML namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e580e-124">不需要直接创建类的实例 <xref:System.Xml.Serialization.XmlReflectionImporter> 。</span><span class="sxs-lookup"><span data-stu-id="e580e-124">It is not necessary to create an instance of the <xref:System.Xml.Serialization.XmlReflectionImporter> class directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportMembersMapping">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e580e-125">使用 Web 服务方法的信息返回内部类型映射。</span><span class="sxs-lookup"><span data-stu-id="e580e-125">Returns internal type mappings using information from a Web service method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement);" />
      <MemberSignature Language="F#" Value="member this.ImportMembersMapping : string * string * System.Xml.Serialization.XmlReflectionMember[] * bool -&gt; System.Xml.Serialization.XmlMembersMapping" Usage="xmlReflectionImporter.ImportMembersMapping (elementName, ns, members, hasWrapperElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="e580e-126">从 Web 服务方法生成的 XML 元素名称。</span><span class="sxs-lookup"><span data-stu-id="e580e-126">An XML element name produced from the Web service method.</span></span></param>
        <param name="ns"><span data-ttu-id="e580e-127">从 Web 服务方法生成的 XML 元素命名空间。</span><span class="sxs-lookup"><span data-stu-id="e580e-127">An XML element namespace produced from the Web service method.</span></span></param>
        <param name="members"><span data-ttu-id="e580e-128"><see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 对象的数组，这些对象包含属于 Web 服务方法的 .NET Framework 代码实体。</span><span class="sxs-lookup"><span data-stu-id="e580e-128">An array of <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> objects that contain .NET Framework code entities that belong to a Web service method.</span></span></param>
        <param name="hasWrapperElement"><span data-ttu-id="e580e-129">如果对应于 Web 服务描述语言 (WSDL) 消息部分的元素应包含在 SOAP 消息的额外包装元素中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e580e-129"><see langword="true" /> if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e580e-130">为 Web 服务方法的信息生成内部类型映射。</span><span class="sxs-lookup"><span data-stu-id="e580e-130">Generates internal type mappings for information from a Web service method.</span></span></summary>
        <returns><span data-ttu-id="e580e-131"><see cref="T:System.Xml.Serialization.XmlMembersMapping" />，其中具有到 WSDL 消息定义的元素部分的映射。</span><span class="sxs-lookup"><span data-stu-id="e580e-131">An <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> with mappings to the element parts of a WSDL message definition.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e580e-132"><xref:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping%2A>初始化 web 服务或客户端或反射 web 服务时，将调用方法。</span><span class="sxs-lookup"><span data-stu-id="e580e-132">The <xref:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping%2A> method is called while initializing a Web service or client, or reflecting a Web service.</span></span> <span data-ttu-id="e580e-133">不需要直接调用它。</span><span class="sxs-lookup"><span data-stu-id="e580e-133">It is not necessary to call it directly.</span></span>  
  
 <span data-ttu-id="e580e-134"><xref:System.Xml.Serialization.XmlReflectionMember>数组参数可以包含以下任一项：</span><span class="sxs-lookup"><span data-stu-id="e580e-134">The <xref:System.Xml.Serialization.XmlReflectionMember> array parameter can consist of any one of the following:</span></span>  
  
-   <span data-ttu-id="e580e-135">Web 服务方法输入参数。</span><span class="sxs-lookup"><span data-stu-id="e580e-135">Web service method input parameters.</span></span>  
  
-   <span data-ttu-id="e580e-136">Web 服务方法输出参数，加上索引0处的返回类型（如果不是 void）。</span><span class="sxs-lookup"><span data-stu-id="e580e-136">Web service method output parameters, plus the return type, if not void, at index 0.</span></span>  
  
-   <span data-ttu-id="e580e-137">SOAP 输入标头。</span><span class="sxs-lookup"><span data-stu-id="e580e-137">SOAP input headers.</span></span>  
  
-   <span data-ttu-id="e580e-138">SOAP 输出标头。</span><span class="sxs-lookup"><span data-stu-id="e580e-138">SOAP output headers.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean, rpc As Boolean) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement, bool rpc);" />
      <MemberSignature Language="F#" Value="member this.ImportMembersMapping : string * string * System.Xml.Serialization.XmlReflectionMember[] * bool * bool -&gt; System.Xml.Serialization.XmlMembersMapping" Usage="xmlReflectionImporter.ImportMembersMapping (elementName, ns, members, hasWrapperElement, rpc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" Index="3" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rpc" Type="System.Boolean" Index="4" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="e580e-139">从 Web 服务方法生成的 XML 元素名称。</span><span class="sxs-lookup"><span data-stu-id="e580e-139">An XML element name produced from the Web service method.</span></span></param>
        <param name="ns"><span data-ttu-id="e580e-140">从 Web 服务方法生成的 XML 元素命名空间。</span><span class="sxs-lookup"><span data-stu-id="e580e-140">An XML element namespace produced from the Web service method.</span></span></param>
        <param name="members"><span data-ttu-id="e580e-141"><see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 对象的数组，这些对象包含属于 Web 服务方法的 .NET Framework 代码实体。</span><span class="sxs-lookup"><span data-stu-id="e580e-141">An array of <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> objects that contain .NET Framework code entities that belong to a Web service method.</span></span></param>
        <param name="hasWrapperElement"><span data-ttu-id="e580e-142">如果对应于 Web 服务描述语言 (WSDL) 消息部分的元素应包含在 SOAP 消息的额外包装元素中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e580e-142"><see langword="true" /> if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, <see langword="false" />.</span></span></param>
        <param name="rpc"><span data-ttu-id="e580e-143">如果该方法是远程过程调用，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e580e-143"><see langword="true" /> if the method is a remote procedure call; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e580e-144">使用 Web 服务方法的信息返回内部类型映射，并允许指定 XML 元素名称、XML 命名空间和其他选项。</span><span class="sxs-lookup"><span data-stu-id="e580e-144">Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.</span></span></summary>
        <returns><span data-ttu-id="e580e-145">包含映射的 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</span><span class="sxs-lookup"><span data-stu-id="e580e-145">An <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> that contains the mappings.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean, rpc As Boolean, openModel As Boolean) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement, bool rpc, bool openModel);" />
      <MemberSignature Language="F#" Value="member this.ImportMembersMapping : string * string * System.Xml.Serialization.XmlReflectionMember[] * bool * bool * bool -&gt; System.Xml.Serialization.XmlMembersMapping" Usage="xmlReflectionImporter.ImportMembersMapping (elementName, ns, members, hasWrapperElement, rpc, openModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" Index="3" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rpc" Type="System.Boolean" Index="4" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="openModel" Type="System.Boolean" Index="5" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="e580e-146">从 Web 服务方法生成的 XML 元素名称。</span><span class="sxs-lookup"><span data-stu-id="e580e-146">An XML element name produced from the Web service method.</span></span></param>
        <param name="ns"><span data-ttu-id="e580e-147">从 Web 服务方法生成的 XML 元素命名空间。</span><span class="sxs-lookup"><span data-stu-id="e580e-147">An XML element namespace produced from the Web service method.</span></span></param>
        <param name="members"><span data-ttu-id="e580e-148"><see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 对象的数组，这些对象包含属于 Web 服务方法的 .NET Framework 代码实体。</span><span class="sxs-lookup"><span data-stu-id="e580e-148">An array of <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> objects that contain .NET Framework code entities that belong to a Web service method.</span></span></param>
        <param name="hasWrapperElement"><span data-ttu-id="e580e-149">如果对应于 Web 服务描述语言 (WSDL) 消息部分的元素应包含在 SOAP 消息的额外包装元素中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e580e-149"><see langword="true" /> if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, <see langword="false" />.</span></span></param>
        <param name="rpc"><span data-ttu-id="e580e-150">如果该方法是远程过程调用，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e580e-150"><see langword="true" /> if the method is a remote procedure call; otherwise, <see langword="false" />.</span></span></param>
        <param name="openModel"><span data-ttu-id="e580e-151">如果指定生成的架构类型用 <see langword="&lt;xs:anyAttribute&gt;" /> 元素标记，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e580e-151"><see langword="true" /> to specify that the generated schema type will be marked with the <see langword="&lt;xs:anyAttribute&gt;" /> element; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e580e-152">使用 Web 服务方法的信息返回内部类型映射，并允许指定 XML 元素名称、XML 命名空间和其他选项。</span><span class="sxs-lookup"><span data-stu-id="e580e-152">Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.</span></span></summary>
        <returns><span data-ttu-id="e580e-153">包含映射的 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</span><span class="sxs-lookup"><span data-stu-id="e580e-153">An <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> that contains the mappings.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel, System.Xml.Serialization.XmlMappingAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel, valuetype System.Xml.Serialization.XmlMappingAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean, rpc As Boolean, openModel As Boolean, access As XmlMappingAccess) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement, bool rpc, bool openModel, System::Xml::Serialization::XmlMappingAccess access);" />
      <MemberSignature Language="F#" Value="member this.ImportMembersMapping : string * string * System.Xml.Serialization.XmlReflectionMember[] * bool * bool * bool * System.Xml.Serialization.XmlMappingAccess -&gt; System.Xml.Serialization.XmlMembersMapping" Usage="xmlReflectionImporter.ImportMembersMapping (elementName, ns, members, hasWrapperElement, rpc, openModel, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" Index="3" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rpc" Type="System.Boolean" Index="4" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="openModel" Type="System.Boolean" Index="5" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.Xml.Serialization.XmlMappingAccess" Index="6" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="e580e-154">从 Web 服务方法生成的 XML 元素名称。</span><span class="sxs-lookup"><span data-stu-id="e580e-154">An XML element name produced from the Web service method.</span></span></param>
        <param name="ns"><span data-ttu-id="e580e-155">从 Web 服务方法生成的 XML 元素命名空间。</span><span class="sxs-lookup"><span data-stu-id="e580e-155">An XML element namespace produced from the Web service method.</span></span></param>
        <param name="members"><span data-ttu-id="e580e-156"><see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 对象的数组，这些对象包含属于 Web 服务方法的 .NET Framework 代码实体。</span><span class="sxs-lookup"><span data-stu-id="e580e-156">An array of <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> objects that contain .NET Framework code entities that belong to a Web service method.</span></span></param>
        <param name="hasWrapperElement"><span data-ttu-id="e580e-157">如果对应于 Web 服务描述语言 (WSDL) 消息部分的元素应包含在 SOAP 消息的额外包装元素中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e580e-157"><see langword="true" /> if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, <see langword="false" />.</span></span></param>
        <param name="rpc"><span data-ttu-id="e580e-158">如果该方法是远程过程调用，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e580e-158"><see langword="true" /> if the method is a remote procedure call; otherwise, <see langword="false" />.</span></span></param>
        <param name="openModel"><span data-ttu-id="e580e-159">如果指定生成的架构类型用 <see langword="&lt;xs:anyAttribute&gt;" /> 元素标记，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e580e-159"><see langword="true" /> to specify that the generated schema type will be marked with the <see langword="&lt;xs:anyAttribute&gt;" /> element; otherwise, <see langword="false" />.</span></span></param>
        <param name="access"><span data-ttu-id="e580e-160"><see cref="T:System.Xml.Serialization.XmlMappingAccess" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="e580e-160">One of the <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> values.</span></span> <span data-ttu-id="e580e-161">默认为 <see langword="None" />。</span><span class="sxs-lookup"><span data-stu-id="e580e-161">The default is <see langword="None" />.</span></span></param>
        <summary><span data-ttu-id="e580e-162">为 Web 服务方法的信息生成内部类型映射。</span><span class="sxs-lookup"><span data-stu-id="e580e-162">Generates internal type mappings for information from a Web service method.</span></span></summary>
        <returns><span data-ttu-id="e580e-163">包含映射的 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</span><span class="sxs-lookup"><span data-stu-id="e580e-163">An <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> that contains the mappings.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportTypeMapping">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e580e-164">为指定的 .NET Framework 类型生成到 XML 架构元素的映射。</span><span class="sxs-lookup"><span data-stu-id="e580e-164">Generates a mapping to an XML Schema element for a specified .NET Framework type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportTypeMapping (type As Type) As XmlTypeMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.ImportTypeMapping : Type -&gt; System.Xml.Serialization.XmlTypeMapping" Usage="xmlReflectionImporter.ImportTypeMapping type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e580e-165">将为其生成类型映射的 .NET Framework 类型。</span><span class="sxs-lookup"><span data-stu-id="e580e-165">The .NET Framework type for which to generate a type mapping.</span></span></param>
        <summary><span data-ttu-id="e580e-166">为指定的 .NET Framework 类型生成到 XML 架构元素的映射。</span><span class="sxs-lookup"><span data-stu-id="e580e-166">Generates a mapping to an XML Schema element for a specified .NET Framework type.</span></span></summary>
        <returns><span data-ttu-id="e580e-167">从一个类型到一个 XML 架构元素的 .NET Framework 内部映射。</span><span class="sxs-lookup"><span data-stu-id="e580e-167">Internal .NET Framework mapping of a type to an XML Schema element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e580e-168">不需要 <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> 直接调用方法。</span><span class="sxs-lookup"><span data-stu-id="e580e-168">It is not necessary to call the <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportTypeMapping (type As Type, defaultNamespace As String) As XmlTypeMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="member this.ImportTypeMapping : Type * string -&gt; System.Xml.Serialization.XmlTypeMapping" Usage="xmlReflectionImporter.ImportTypeMapping (type, defaultNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e580e-169">将为其生成类型映射的 .NET Framework 类型。</span><span class="sxs-lookup"><span data-stu-id="e580e-169">The .NET Framework type for which to generate a type mapping.</span></span></param>
        <param name="defaultNamespace"><span data-ttu-id="e580e-170">要使用的默认 XML 命名空间。</span><span class="sxs-lookup"><span data-stu-id="e580e-170">The default XML namespace to use.</span></span></param>
        <summary><span data-ttu-id="e580e-171">使用指定的类型和命名空间为 .NET Framework 类型生成到 XML 架构元素的映射。</span><span class="sxs-lookup"><span data-stu-id="e580e-171">Generates a mapping to an XML Schema element for a .NET Framework type, using the specified type and namespace.</span></span></summary>
        <returns><span data-ttu-id="e580e-172">从一个类型到一个 XML 架构元素的 .NET Framework 内部映射。</span><span class="sxs-lookup"><span data-stu-id="e580e-172">Internal .NET Framework mapping of a type to an XML Schema element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e580e-173">不需要 <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> 直接调用方法。</span><span class="sxs-lookup"><span data-stu-id="e580e-173">It is not necessary to call the <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, System.Xml.Serialization.XmlRootAttribute root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, class System.Xml.Serialization.XmlRootAttribute root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportTypeMapping (type As Type, root As XmlRootAttribute) As XmlTypeMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type, System::Xml::Serialization::XmlRootAttribute ^ root);" />
      <MemberSignature Language="F#" Value="member this.ImportTypeMapping : Type * System.Xml.Serialization.XmlRootAttribute -&gt; System.Xml.Serialization.XmlTypeMapping" Usage="xmlReflectionImporter.ImportTypeMapping (type, root)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e580e-174">将为其生成类型映射的 .NET Framework 类型。</span><span class="sxs-lookup"><span data-stu-id="e580e-174">The .NET Framework type for which to generate a type mapping.</span></span></param>
        <param name="root"><span data-ttu-id="e580e-175">应用于类型的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 特性。</span><span class="sxs-lookup"><span data-stu-id="e580e-175">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> attribute that is applied to the type.</span></span></param>
        <summary><span data-ttu-id="e580e-176">使用指定的类型和特性为 .NET Framework 类型生成到 XML 架构元素的映射。</span><span class="sxs-lookup"><span data-stu-id="e580e-176">Generates a mapping to an XML Schema element for a .NET Framework type, using the specified type and attribute.</span></span></summary>
        <returns><span data-ttu-id="e580e-177"><see cref="T:System.Xml.Serialization.XmlTypeMapping" />，表示 .NET Framework 类型到 XML 架构元素的映射。</span><span class="sxs-lookup"><span data-stu-id="e580e-177">An <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> that represents a mapping of a .NET Framework type to an XML Schema element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e580e-178">不需要 <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> 直接调用方法。</span><span class="sxs-lookup"><span data-stu-id="e580e-178">It is not necessary to call the <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportTypeMapping (type As Type, root As XmlRootAttribute, defaultNamespace As String) As XmlTypeMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="member this.ImportTypeMapping : Type * System.Xml.Serialization.XmlRootAttribute * string -&gt; System.Xml.Serialization.XmlTypeMapping" Usage="xmlReflectionImporter.ImportTypeMapping (type, root, defaultNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e580e-179">将为其生成类型映射的 .NET Framework 类型。</span><span class="sxs-lookup"><span data-stu-id="e580e-179">The .NET Framework type for which to generate a type mapping.</span></span></param>
        <param name="root"><span data-ttu-id="e580e-180">应用于类型的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 特性。</span><span class="sxs-lookup"><span data-stu-id="e580e-180">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> attribute that is applied to the type.</span></span></param>
        <param name="defaultNamespace"><span data-ttu-id="e580e-181">要使用的默认 XML 命名空间。</span><span class="sxs-lookup"><span data-stu-id="e580e-181">The default XML namespace to use.</span></span></param>
        <summary><span data-ttu-id="e580e-182">使用指定的类型、特性和命名空间为 .NET Framework 类型生成到 XML 架构元素的映射。</span><span class="sxs-lookup"><span data-stu-id="e580e-182">Generates a mapping to an XML Schema element for a .NET Framework type, using the specified type, attribute, and namespace.</span></span></summary>
        <returns><span data-ttu-id="e580e-183"><see cref="T:System.Xml.Serialization.XmlTypeMapping" />，其中包含一个类型到一个 XML 架构元素的 .NET Framework 内部映射。</span><span class="sxs-lookup"><span data-stu-id="e580e-183">An <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> that contains the internal .NET Framework mapping of a type to an XML Schema element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e580e-184">不需要 <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> 直接调用方法。</span><span class="sxs-lookup"><span data-stu-id="e580e-184">It is not necessary to call the <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IncludeType">
      <MemberSignature Language="C#" Value="public void IncludeType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IncludeType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncludeType (type As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncludeType(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.IncludeType : Type -&gt; unit" Usage="xmlReflectionImporter.IncludeType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e580e-185">要为其保存类型映射信息的 .NET Framework 类型。</span><span class="sxs-lookup"><span data-stu-id="e580e-185">The .NET Framework type for which to save type mapping information.</span></span></param>
        <summary><span data-ttu-id="e580e-186">包含类型的映射，这些映射在以后调用导入方法时使用。</span><span class="sxs-lookup"><span data-stu-id="e580e-186">Includes mappings for a type for later use when import methods are invoked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e580e-187">不需要 <xref:System.Xml.Serialization.XmlReflectionImporter.IncludeType%2A> 直接调用方法。</span><span class="sxs-lookup"><span data-stu-id="e580e-187">It is not necessary to call the <xref:System.Xml.Serialization.XmlReflectionImporter.IncludeType%2A> method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IncludeTypes">
      <MemberSignature Language="C#" Value="public void IncludeTypes (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IncludeTypes(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncludeTypes (provider As ICustomAttributeProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncludeTypes(System::Reflection::ICustomAttributeProvider ^ provider);" />
      <MemberSignature Language="F#" Value="member this.IncludeTypes : System.Reflection.ICustomAttributeProvider -&gt; unit" Usage="xmlReflectionImporter.IncludeTypes provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e580e-188"><see cref="T:System.Reflection.ICustomAttributeProvider" /> 类的实例，该类包含从 <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 特性派生的自定义特性。</span><span class="sxs-lookup"><span data-stu-id="e580e-188">An instance of the <see cref="T:System.Reflection.ICustomAttributeProvider" /> class that contains custom attributes derived from the <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> attribute.</span></span></param>
        <summary><span data-ttu-id="e580e-189">包含派生类型的映射，这些映射在以后调用导入方法时使用。</span><span class="sxs-lookup"><span data-stu-id="e580e-189">Includes mappings for derived types for later use when import methods are invoked.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
