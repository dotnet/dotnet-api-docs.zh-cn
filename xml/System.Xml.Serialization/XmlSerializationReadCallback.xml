<Type Name="XmlSerializationReadCallback" FullName="System.Xml.Serialization.XmlSerializationReadCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ff3372df9125c654d64d189ac01dcf063ebdad8c" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100291709" /></Metadata><TypeSignature Language="C#" Value="public delegate object? XmlSerializationReadCallback();" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlSerializationReadCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlSerializationReadCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function XmlSerializationReadCallback() As Object " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Object ^ XmlSerializationReadCallback();" />
  <TypeSignature Language="F#" Value="type XmlSerializationReadCallback = delegate of unit -&gt; obj" />
  <TypeSignature Language="C#" Value="public delegate object XmlSerializationReadCallback();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.XmlSerializer" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters />
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <summary><see cref="T:System.Xml.Serialization.XmlSerializer" /> 类为了对 SOAP 编码的非根 XML 数据的类型进行反序列化而使用的委托。</summary>
    <returns>由回叫返回的对象。</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在初始化过程中，.NET Framework 的 XML 序列化基础结构会动态生成和编译一个临时类，以便从 <xref:System.Xml.Serialization.XmlSerializationReader> 类派生。 在此过程中，.NET Framework 将生成实现委托的读取方法 <xref:System.Xml.Serialization.XmlSerializationReadCallback> 。 它用于在 .NET Framework 类型和 XML 数据类型之间进行某些映射，这些映射通过 SOAP 编码的 XML 进行序列化，而不是根元素。 然后，如有必要，在反序列化期间调用读取方法。  
  
 不要直接创建类的实例 <xref:System.Xml.Serialization.XmlSerializationReadCallback> 。  
  
 Soap 编码在 SOAP 1.1 规范的第5节中进行了介绍。  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
</Type>
