<Type Name="SoapElementAttribute" FullName="System.Xml.Serialization.SoapElementAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cacd43dc86da4663011c7fc2077a0f68da2418bc" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83952275" /></Metadata><TypeSignature Language="C#" Value="public class SoapElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.XmlSerializer" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netstandard-2.1;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定公共成员值由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化为经过编码的 SOAP XML 元素。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapElementAttribute> 类属于一系列属性，这些属性控制 <xref:System.Xml.Serialization.XmlSerializer> 如何将对象序列化或反序列化为编码的 SOAP XML。 生成的 XML 符合万维网联合会文档（[简单对象访问协议（SOAP）1.1）](https://www.w3.org/TR/2000/NOTE-SOAP-20000508/)的第5部分。 有关类似属性的完整列表，请参阅[控制编码的 SOAP 序列化的属性](/dotnet/standard/serialization/attributes-that-control-encoded-soap-serialization)。  
  
 若要将对象序列化为编码的 SOAP 消息，必须使用通过 <xref:System.Xml.Serialization.SoapReflectionImporter> 类的 <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> 方法创建的 <xref:System.Xml.Serialization.XmlTypeMapping> 构造 <xref:System.Xml.Serialization.XmlSerializer>。  
  
 将 <xref:System.Xml.Serialization.SoapElementAttribute> 应用于公共字段，以指示 <xref:System.Xml.Serialization.XmlSerializer> 将字段序列化为编码的 SOAP XML 元素。  
  
 有关使用特性的详细信息，请参阅[特性](/dotnet/standard/attributes/)。  
  
   
  
## Examples  
 下面的示例将名为 `Transportation` 的类的实例序列化，其中包含一个名为 `Vehicle`的字段。 将 <xref:System.Xml.Serialization.SoapElementAttribute> 应用于该字段。 如果对字段进行序列化，则 XML 元素名称为 "车轮" 而不是 "车辆"。 `SerializeOverride` 方法创建一个 <xref:System.Xml.Serialization.SoapElementAttribute> 并将 <xref:System.Xml.Serialization.SoapAttributes> 的 <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> 属性设置为 <xref:System.Xml.Serialization.SoapElementAttribute>。 <xref:System.Xml.Serialization.SoapAttributes> 将添加到用于创建 <xref:System.Xml.Serialization.XmlTypeMapping>的 <xref:System.Xml.Serialization.SoapAttributeOverrides>。 使用 <xref:System.Xml.Serialization.XmlTypeMapping>构造 <xref:System.Xml.Serialization.XmlSerializer>，并再次序列化 `Transportation` 类的实例。 由于 <xref:System.Xml.Serialization.SoapElementAttribute> 用于重写序列化，因此生成的 XML 元素名称现在为 "卡车" 而不是 "车轮"。  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例将名为 `Transportation` 的类的实例序列化，其中包含一个名为 `Vehicle`的字段。 将 <xref:System.Xml.Serialization.SoapElementAttribute> 应用于该字段。 如果对字段进行序列化，则 XML 元素名称为 "车轮" 而不是 "车辆"。 `SerializeOverride` 方法创建一个 <xref:System.Xml.Serialization.SoapElementAttribute> 并将 <xref:System.Xml.Serialization.SoapAttributes> 的 <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> 属性设置为 <xref:System.Xml.Serialization.SoapElementAttribute>。 <xref:System.Xml.Serialization.SoapAttributes> 将添加到用于创建 <xref:System.Xml.Serialization.XmlTypeMapping>的 <xref:System.Xml.Serialization.SoapAttributeOverrides>。 使用 <xref:System.Xml.Serialization.XmlTypeMapping>构造 <xref:System.Xml.Serialization.XmlSerializer>，并再次序列化 `Transportation` 类的实例。 由于 <xref:System.Xml.Serialization.SoapElementAttribute> 用于重写序列化，因此生成的 XML 元素名称现在为 "卡车" 而不是 "车轮"。  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapElementAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapElementAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapElementAttribute : string -&gt; System.Xml.Serialization.SoapElementAttribute" Usage="new System.Xml.Serialization.SoapElementAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">序列化成员的 XML 元素名。</param>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 类的新实例，并指定 XML 元素的名称。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例将名为 `Transportation` 的类的实例序列化，其中包含一个名为 `Vehicle`的字段。 将 <xref:System.Xml.Serialization.SoapElementAttribute> 应用于该字段。 如果对字段进行序列化，则 XML 元素名称为 "车轮" 而不是 "车辆"。 `SerializeOverride` 方法创建一个 <xref:System.Xml.Serialization.SoapElementAttribute> 并将 <xref:System.Xml.Serialization.SoapAttributes> 的 <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> 属性设置为 <xref:System.Xml.Serialization.SoapElementAttribute>。 <xref:System.Xml.Serialization.SoapAttributes> 将添加到用于创建 <xref:System.Xml.Serialization.XmlTypeMapping>的 <xref:System.Xml.Serialization.SoapAttributeOverrides>。 使用 <xref:System.Xml.Serialization.XmlTypeMapping>构造 <xref:System.Xml.Serialization.XmlSerializer>，并再次序列化 `Transportation` 类的实例。 由于 <xref:System.Xml.Serialization.SoapElementAttribute> 用于重写序列化，因此生成的 XML 元素名称现在为 "卡车" 而不是 "车轮"。  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置生成的 XML 元素的“XML 架构”定义语言 (XSD) 数据类型。</summary>
        <value>“XML 架构”数据类型之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表列出了具有 .NET 等效项的 XML 架构简单数据类型。  
  
 对于 XML 架构 `base64Binary` 和 `hexBinary` 数据类型，请使用 <xref:System.Byte> 结构的数组，并根据需要将 <xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A> 设置为 "base64Binary" 或 "hexBinary" 的 <xref:System.Xml.Serialization.SoapElementAttribute>。 对于 XML 架构 `time` 和 `date` 数据类型，请使用 <xref:System.DateTime> 类型，<xref:System.Xml.Serialization.SoapElementAttribute> 并将 "<xref:System.Xml.Serialization.SoapElementAttribute.DataType%2A>" 设置为 "日期" 或 "时间"。  
  
 对于映射到字符串的每个 XML 架构数据类型，将 <xref:System.Xml.Serialization.SoapElementAttribute>，并将其 <xref:System.Xml.Serialization.SoapElementAttribute.DataType%2A> 属性设置为 XML 架构类型。 请注意，这不会更改序列化格式，而只会更改成员的架构。  
  
> [!NOTE]
>  属性区分大小写，因此必须将其精确设置为 XML 架构数据类型之一。  
  
> [!NOTE]
>  将二进制数据作为 XML 元素传递比将其作为 XML 特性传递更为有效。  
  
 有关 XML 数据类型的详细信息，请参阅万维网联合会文档[Xml 架构第2部分：数据](https://www.w3.org/TR/xmlschema-2/)类型。  
  
|XSD 数据类型|.NET 数据类型|  
|-------------------|--------------------|  
|anyURI|<xref:System.String>|  
|base64Binary|<xref:System.Byte> 对象的数组|  
|boolean|<xref:System.Boolean>|  
|字节|<xref:System.SByte>|  
|date|<xref:System.DateTime>|  
|dateTime|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|ENTITY|<xref:System.String>|  
|条目|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|<xref:System.Byte> 对象的数组|  
|ID|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|integer|<xref:System.String>|  
|language|<xref:System.String>|  
|long|<xref:System.Int64>|  
|名称|<xref:System.String>|  
|NCName|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonPositiveInteger|<xref:System.String>|  
|NOTATION|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|duration|<xref:System.String>|  
|string|<xref:System.String>|  
|short|<xref:System.Int16>|  
|time|<xref:System.DateTime>|  
|token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 下面的示例将名为 `Transportation` 的类的实例序列化，其中包含一个名为 `Vehicle`的字段。 将 <xref:System.Xml.Serialization.SoapElementAttribute> 应用于该字段。 如果对字段进行序列化，则 XML 元素名称为 "车轮" 而不是 "车辆"。 `SerializeOverride` 方法创建一个 <xref:System.Xml.Serialization.SoapElementAttribute> 并将 <xref:System.Xml.Serialization.SoapAttributes> 的 <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> 属性设置为 <xref:System.Xml.Serialization.SoapElementAttribute>。 <xref:System.Xml.Serialization.SoapAttributes> 将添加到用于创建 <xref:System.Xml.Serialization.XmlTypeMapping>的 <xref:System.Xml.Serialization.SoapAttributeOverrides>。 使用 <xref:System.Xml.Serialization.XmlTypeMapping>构造 <xref:System.Xml.Serialization.XmlSerializer>，并再次序列化 `Transportation` 类的实例。 由于 <xref:System.Xml.Serialization.SoapElementAttribute> 用于重写序列化，因此生成的 XML 元素名称现在为 "卡车" 而不是 "车轮"。  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置生成的 XML 元素的名称。</summary>
        <value>生成的 XML 元素的名称。 默认值为成员标识符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例将名为 `Transportation` 的类的实例序列化，其中包含一个名为 `Vehicle`的字段。 将 <xref:System.Xml.Serialization.SoapElementAttribute> 应用于该字段。 如果对字段进行序列化，则 XML 元素名称为 "车轮" 而不是 "车辆"。 `SerializeOverride` 方法创建一个 <xref:System.Xml.Serialization.SoapElementAttribute> 并将 <xref:System.Xml.Serialization.SoapAttributes> 的 <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> 属性设置为 <xref:System.Xml.Serialization.SoapElementAttribute>。 <xref:System.Xml.Serialization.SoapAttributes> 将添加到用于创建 <xref:System.Xml.Serialization.XmlTypeMapping>的 <xref:System.Xml.Serialization.SoapAttributeOverrides>。 使用 <xref:System.Xml.Serialization.XmlTypeMapping>构造 <xref:System.Xml.Serialization.XmlSerializer>，并再次序列化 `Transportation` 类的实例。 由于 <xref:System.Xml.Serialization.SoapElementAttribute> 用于重写序列化，因此生成的 XML 元素名称现在为 "卡车" 而不是 "车轮"。  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或者设置一个值，该值指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否必须序列化一个 <see langword="xsi:null" /> 特性设置为“1”的成员。</summary>
        <value>如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成 <see langword="true" /> 属性，则为 <see langword="xsi:null" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 结构的 XML 架构规范允许 XML 文档显式通知缺少某个元素的内容。 此类元素包含属性 `xsi:null` 设置为 "1"。 有关详细信息，请参阅名为 " [XML 架构第1部分：结构](https://www.w3.org/TR/xmlschema-1/)" 的万维网联合会规范。  
  
 如果 <xref:System.Xml.Serialization.SoapElementAttribute.IsNullable%2A> 属性设置为 `true`，则为已设置为 `null`的类成员生成 `xsi:null` 特性。 例如，如果将名为 `MyStringArray` 的字段设置为 `null`，则 <xref:System.Xml.Serialization.XmlSerializer> 生成以下 XML 代码。  
  
```  
<MyStringArray xsi:null = "1" />  
```  
  
 如果 `false`<xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> 属性，则不会生成 XML 元素。  
  
> [!NOTE]
>  由于值类型不能包含 `null`，因此无法将 <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> 属性应用于类型为值类型的成员。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
