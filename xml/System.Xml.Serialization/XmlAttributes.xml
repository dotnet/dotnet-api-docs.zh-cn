<Type Name="XmlAttributes" FullName="System.Xml.Serialization.XmlAttributes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4847ee2e0a7d2390fbcabaa17447857101e9464" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83968260" /></Metadata><TypeSignature Language="C#" Value="public class XmlAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAttributes extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAttributes" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributes" />
  <TypeSignature Language="F#" Value="type XmlAttributes = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml" FromVersion="4.0.0.0" To="System.Xml.XmlSerializer" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="4.0.0.0" To="System.Xml.XmlSerializer" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.XmlSerializer" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="4.0.0.0" To="System.Xml" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="2.0.5.0" To="System.Xml" ToVersion="2.0.5.0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b68db-101">表示控制 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 串行化和反序列化对象方式的属性对象的集合。</span><span class="sxs-lookup"><span data-stu-id="b68db-101">Represents a collection of attribute objects that control how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes and deserializes an object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b68db-102">创建 <xref:System.Xml.Serialization.XmlAttributes> 是覆盖 <xref:System.Xml.Serialization.XmlSerializer> 序列化类实例的默认方式的过程的一部分。</span><span class="sxs-lookup"><span data-stu-id="b68db-102">Creating the <xref:System.Xml.Serialization.XmlAttributes> is part of a process that overrides the default way the <xref:System.Xml.Serialization.XmlSerializer> serializes class instances.</span></span> <span data-ttu-id="b68db-103">例如，假设您想要序列化从具有无法访问的源的 DLL 创建的对象。</span><span class="sxs-lookup"><span data-stu-id="b68db-103">For example, suppose you want to serialize an object that is created from a DLL which has an inaccessible source.</span></span> <span data-ttu-id="b68db-104">通过使用 <xref:System.Xml.Serialization.XmlAttributeOverrides>，可以增加或控制序列化对象的方式。</span><span class="sxs-lookup"><span data-stu-id="b68db-104">By using the <xref:System.Xml.Serialization.XmlAttributeOverrides>, you can augment or otherwise control how the object is serialized.</span></span>  
  
 <span data-ttu-id="b68db-105"><xref:System.Xml.Serialization.XmlAttributes> 类的成员直接对应于控制序列化的特性类的系列。</span><span class="sxs-lookup"><span data-stu-id="b68db-105">The members of the <xref:System.Xml.Serialization.XmlAttributes> class correspond directly to a family of attribute classes that control serialization.</span></span> <span data-ttu-id="b68db-106">例如，<xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> 属性必须设置为 <xref:System.Xml.Serialization.XmlTextAttribute>，这允许您通过指示 <xref:System.Xml.Serialization.XmlSerializer> 将属性值序列化为 XML 文本来重写字段或属性的序列化。</span><span class="sxs-lookup"><span data-stu-id="b68db-106">For example, the <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property must be set to an <xref:System.Xml.Serialization.XmlTextAttribute>, which allows you to override serialization of a field or property by instructing the <xref:System.Xml.Serialization.XmlSerializer> to serialize the property value as XML text.</span></span> <span data-ttu-id="b68db-107">有关控制序列化的属性的完整列表，请参阅 <xref:System.Xml.Serialization.XmlSerializer>。</span><span class="sxs-lookup"><span data-stu-id="b68db-107">For a complete list of attributes that control serialization, see the <xref:System.Xml.Serialization.XmlSerializer>.</span></span>  
  
 <span data-ttu-id="b68db-108">有关将 <xref:System.Xml.Serialization.XmlAttributeOverrides> 与 <xref:System.Xml.Serialization.XmlAttributes> 类结合使用的详细信息，请参阅[如何：指定 XML 流的替代元素名称](/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream)。</span><span class="sxs-lookup"><span data-stu-id="b68db-108">For more details on using the <xref:System.Xml.Serialization.XmlAttributeOverrides> with the <xref:System.Xml.Serialization.XmlAttributes> class, see [How to: Specify an Alternate Element Name for an XML Stream](/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b68db-109">下面的示例对名为 `Orchestra`的类的实例进行序列化，其中包含一个名为 `Instruments` 的字段，该字段返回 `Instrument` 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="b68db-109">The following example serializes an instance of a class named `Orchestra`, which contains a single field named `Instruments` that returns an array of `Instrument` objects.</span></span> <span data-ttu-id="b68db-110">名为 `Brass` 的第二个类继承自 `Instrument` 类。</span><span class="sxs-lookup"><span data-stu-id="b68db-110">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="b68db-111">该示例创建一个 <xref:System.Xml.Serialization.XmlAttributes> 对象用于重写 `Instrument` 字段（允许该字段接受 `Brass` 对象），并将 <xref:System.Xml.Serialization.XmlAttributes> 对象添加到 <xref:System.Xml.Serialization.XmlAttributeOverrides> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="b68db-111">The example creates an <xref:System.Xml.Serialization.XmlAttributes> object to override the `Instrument` field--allowing the field to accept `Brass` objects--and adds the <xref:System.Xml.Serialization.XmlAttributes> object to an instance of the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="b68db-112">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="b68db-112">Introducing XML Serialization</span></span></related>
    <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="b68db-113">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="b68db-113">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
    <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="b68db-114">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="b68db-114">Controlling XML Serialization Using Attributes</span></span></related>
    <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="b68db-115">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="b68db-115">Examples of XML Serialization</span></span></related>
    <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="b68db-116">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="b68db-116">XML Schema Definition Tool (Xsd.exe)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b68db-117">初始化 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b68db-117">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributes" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b68db-118">初始化 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b68db-118">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributes" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b68db-119">下面的示例对名为 `Orchestra`的类的实例进行序列化，其中包含一个名为 `Instruments` 的字段，该字段返回 `Instrument` 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="b68db-119">The following example serializes an instance of a class named `Orchestra`, which contains a single field named `Instruments` that returns an array of `Instrument` objects.</span></span> <span data-ttu-id="b68db-120">名为 `Brass` 的第二个类继承自 `Instrument` 类。</span><span class="sxs-lookup"><span data-stu-id="b68db-120">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="b68db-121">该示例创建一个 <xref:System.Xml.Serialization.XmlAttributes> 对象用于重写 `Instrument` 字段（允许该字段接受 `Brass` 对象），并将 <xref:System.Xml.Serialization.XmlAttributes> 对象添加到 <xref:System.Xml.Serialization.XmlAttributeOverrides> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="b68db-121">The example creates an <xref:System.Xml.Serialization.XmlAttributes> object to override the `Instrument` field--allowing the field to accept `Brass` objects--and adds the <xref:System.Xml.Serialization.XmlAttributes> object to an instance of the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributes (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As ICustomAttributeProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributes(System::Reflection::ICustomAttributeProvider ^ provider);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAttributes : System.Reflection.ICustomAttributeProvider -&gt; System.Xml.Serialization.XmlAttributes" Usage="new System.Xml.Serialization.XmlAttributes provider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b68db-122">可提供控制 XML 序列化的属性的其他实现的类。</span><span class="sxs-lookup"><span data-stu-id="b68db-122">A class that can provide alternative implementations of attributes that control XML serialization.</span></span></param>
        <summary><span data-ttu-id="b68db-123">初始化 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 类的新实例，并自定义 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 串行化和反序列化对象的方式。</span><span class="sxs-lookup"><span data-stu-id="b68db-123">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributes" /> class and customizes how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes and deserializes an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b68db-124">使用 <xref:System.Xml.Serialization.XmlAttributes> 类的无参数构造函数，而不是使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="b68db-124">Use the parameterless constructor for the <xref:System.Xml.Serialization.XmlAttributes> class, rather than using this constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAnyAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyAttributeAttribute XmlAnyAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyAttributeAttribute XmlAnyAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAnyAttribute As XmlAnyAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAnyAttributeAttribute ^ XmlAnyAttribute { System::Xml::Serialization::XmlAnyAttributeAttribute ^ get(); void set(System::Xml::Serialization::XmlAnyAttributeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlAnyAttribute : System.Xml.Serialization.XmlAnyAttributeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b68db-125">获取或设置要替代的 <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="b68db-125">Gets or sets the <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> to override.</span></span></summary>
        <value><span data-ttu-id="b68db-126">要重写的 <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="b68db-126">The <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> to override.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b68db-127"><xref:System.Xml.Serialization.XmlAnyAttributeAttribute> 可应用于在反序列化时返回 <xref:System.Xml.XmlAttribute> 对象的数组的成员。</span><span class="sxs-lookup"><span data-stu-id="b68db-127">The <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> can be applied to a member that returns an array of <xref:System.Xml.XmlAttribute> objects on deserialization.</span></span> <span data-ttu-id="b68db-128">这允许 <xref:System.Xml.Serialization.XmlSerializer> 反序列化在要反序列化的对象中没有相应成员的任何属性，因此这些元素对 <xref:System.Xml.Serialization.XmlSerializer>"未知"。</span><span class="sxs-lookup"><span data-stu-id="b68db-128">This allows the <xref:System.Xml.Serialization.XmlSerializer> to deserialize any attributes that do not have a corresponding member in the object being deserialized--thus those elements are "unknown" to the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="b68db-129">此方法在以下情况下很有用： XML Web service 中更改了 XML 流，或已知随机数据始终包含在 XML 流中。</span><span class="sxs-lookup"><span data-stu-id="b68db-129">This is useful when the XML stream has been altered by an XML Web service, or when it is known that random data is always included with the XML stream.</span></span>  
  
 <span data-ttu-id="b68db-130"><xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A> 属性允许你重写已应用 <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> 的成员的序列化。</span><span class="sxs-lookup"><span data-stu-id="b68db-130">The <xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A> property allows you to override the serialization of a member to which the <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> has been applied.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAnyElements">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyElementAttributes XmlAnyElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyElementAttributes XmlAnyElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlAnyElements As XmlAnyElementAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAnyElementAttributes ^ XmlAnyElements { System::Xml::Serialization::XmlAnyElementAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlAnyElements : System.Xml.Serialization.XmlAnyElementAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlAnyElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyElementAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b68db-131">获取要替代的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 对象集合。</span><span class="sxs-lookup"><span data-stu-id="b68db-131">Gets the collection of <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> objects to override.</span></span></summary>
        <value><span data-ttu-id="b68db-132">表示 <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> 对象集合的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b68db-132">An <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> object that represents the collection of <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b68db-133"><xref:System.Xml.Serialization.XmlAnyElementAttribute> 可应用于在反序列化时返回 <xref:System.Xml.XmlElement> 对象的数组的成员。</span><span class="sxs-lookup"><span data-stu-id="b68db-133">The <xref:System.Xml.Serialization.XmlAnyElementAttribute> can be applied to a member that returns an array of <xref:System.Xml.XmlElement> objects on deserialization.</span></span> <span data-ttu-id="b68db-134">这允许 <xref:System.Xml.Serialization.XmlSerializer> 反序列化在要反序列化的对象中没有相应成员的任何元素，因此这些元素对 <xref:System.Xml.Serialization.XmlSerializer>"未知"。</span><span class="sxs-lookup"><span data-stu-id="b68db-134">This allows the <xref:System.Xml.Serialization.XmlSerializer> to deserialize any elements that do not have a corresponding member in the object being deserialized--thus those elements are "unknown" to the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="b68db-135">此方法在以下情况下很有用： XML Web service 中更改了 XML 流，或已知随机数据始终包含在 XML 流中。</span><span class="sxs-lookup"><span data-stu-id="b68db-135">This is useful when the XML stream has been altered by an XML Web service, or when it is known that random data is always included with the XML stream.</span></span>  
  
 <span data-ttu-id="b68db-136"><xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> 属性允许你重写成员的序列化，使其作为 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 已应用到的成员。</span><span class="sxs-lookup"><span data-stu-id="b68db-136">The <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> property allows you to override the serialization of a member to function as a member to which the <xref:System.Xml.Serialization.XmlAnyElementAttribute> has been applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b68db-137">下面的示例创建一个新的 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 对象，并将其添加到通过 <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> 属性访问的对象的集合中。</span><span class="sxs-lookup"><span data-stu-id="b68db-137">The following example creates a new <xref:System.Xml.Serialization.XmlAnyElementAttribute> object and adds it to the collection of objects accessed through the <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> property.</span></span> <span data-ttu-id="b68db-138">然后，<xref:System.Xml.Serialization.XmlAttributes> 对象将添加到用于创建 <xref:System.Xml.Serialization.XmlSerializer> 对象的 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象中。</span><span class="sxs-lookup"><span data-stu-id="b68db-138">The <xref:System.Xml.Serialization.XmlAttributes> object is then added to a <xref:System.Xml.Serialization.XmlAttributeOverrides> object which is used to create an <xref:System.Xml.Serialization.XmlSerializer> object.</span></span> <span data-ttu-id="b68db-139"><xref:System.Xml.Serialization.XmlSerializer> 用于序列化或反序列化对象。</span><span class="sxs-lookup"><span data-stu-id="b68db-139">The <xref:System.Xml.Serialization.XmlSerializer> is used to serialize or deserialize an object.</span></span> <span data-ttu-id="b68db-140">若要查看使用 <xref:System.Xml.Serialization.XmlAnyElementAttributes> 属性的效果，请通过在 `Main` 方法中运行 `SerializeObject` 方法来创建一个名为 "UnknownElements" 的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="b68db-140">To see the effect of using the <xref:System.Xml.Serialization.XmlAnyElementAttributes> property, create an XML document named "UnknownElements.xml" by running the `SerializeObject` method in the `Main` method.</span></span> <span data-ttu-id="b68db-141">编辑生成的文档以包含其他（未知）元素。</span><span class="sxs-lookup"><span data-stu-id="b68db-141">Edit the resulting document to include other (unknown) elements.</span></span> <span data-ttu-id="b68db-142">注释掉 `Main` 方法中的 `SerializeObject` 调用，取消注释对 `DeserializeObject` 方法的调用，该方法输出任何未知 XML 元素的名称和值。</span><span class="sxs-lookup"><span data-stu-id="b68db-142">Comment out the `SerializeObject` call in the `Main` method, and uncomment the call to the `DeserializeObject` method, which prints out the name and value of any unknown XML element.</span></span>  
  
 [!code-cpp[XmlAttributes.XmlAnyElements#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/CPP/xmlanyover.cpp#1)]
 [!code-csharp[XmlAttributes.XmlAnyElements#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/CS/xmlanyover.cs#1)]
 [!code-vb[XmlAttributes.XmlAnyElements#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/VB/xmlanyover.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="XmlArray">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlArrayAttribute XmlArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlArrayAttribute XmlArray" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlArray" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlArray As XmlArrayAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlArrayAttribute ^ XmlArray { System::Xml::Serialization::XmlArrayAttribute ^ get(); void set(System::Xml::Serialization::XmlArrayAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlArray : System.Xml.Serialization.XmlArrayAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlArrayAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b68db-143">获取或设置一个对象，该对象指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 串行化返回数组的公共字段或读/写属性的方式。</span><span class="sxs-lookup"><span data-stu-id="b68db-143">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or read/write property that returns an array.</span></span></summary>
        <value><span data-ttu-id="b68db-144">一个 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化如何返回数组的公共字段或读/写属性。</span><span class="sxs-lookup"><span data-stu-id="b68db-144">An <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or read/write property that returns an array.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b68db-145">可通过两种方法将返回数组的公共字段或公共读/写属性序列化为 <xref:System.Xml.Serialization.XmlSerializer>：默认序列化和受控序列化。</span><span class="sxs-lookup"><span data-stu-id="b68db-145">There are two ways in which a public field or public read/write property that returns an array is serialized by the <xref:System.Xml.Serialization.XmlSerializer>: the default serialization, and the controlled serialization.</span></span>  
  
 <span data-ttu-id="b68db-146">在默认序列化中，无属性应用于成员。</span><span class="sxs-lookup"><span data-stu-id="b68db-146">In the default serialization, no attribute is applied to the member.</span></span> <span data-ttu-id="b68db-147">序列化时，将数组序列化为 XML 元素的嵌套序列，并使用从成员名称获取的嵌套序列的 XML 元素名称。</span><span class="sxs-lookup"><span data-stu-id="b68db-147">When serialized, the array is serialized as a nested sequence of XML elements with the XML element name of the nested sequence taken from the member name.</span></span>  
  
 <span data-ttu-id="b68db-148">若要更精确地控制序列化，请将 <xref:System.Xml.Serialization.XmlArrayAttribute> 应用于字段或属性。</span><span class="sxs-lookup"><span data-stu-id="b68db-148">To control the serialization more precisely, apply an <xref:System.Xml.Serialization.XmlArrayAttribute> to the field or property.</span></span> <span data-ttu-id="b68db-149">例如，可以通过将 <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> 属性设置为新值，将生成的 XML 元素名称从默认值更改为其他名称。</span><span class="sxs-lookup"><span data-stu-id="b68db-149">For example, you can change the generated XML element name from the default to a different name by setting the <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> property to a new value.</span></span>  
  
 <span data-ttu-id="b68db-150"><xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> 属性允许你重写默认序列化，以及通过将 <xref:System.Xml.Serialization.XmlArrayAttribute> 应用到成员来控制序列化。</span><span class="sxs-lookup"><span data-stu-id="b68db-150">The <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> property allows you to override the default serialization, as well as the serialization controlled by applying an <xref:System.Xml.Serialization.XmlArrayAttribute> to the member.</span></span> <span data-ttu-id="b68db-151">例如，可以将生成的 XML 元素名称从默认值（成员标识符）更改为新值。</span><span class="sxs-lookup"><span data-stu-id="b68db-151">For example, you can change the XML element name generated from the default (the member identifier) to a new value.</span></span> <span data-ttu-id="b68db-152">此外，如果将 <xref:System.Xml.Serialization.XmlArrayAttribute> 应用到成员，则会将其重写为分配给 <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> 属性的任何 <xref:System.Xml.Serialization.XmlArrayAttribute>。</span><span class="sxs-lookup"><span data-stu-id="b68db-152">In addition, if you apply an <xref:System.Xml.Serialization.XmlArrayAttribute> to a member, it is overridden by any <xref:System.Xml.Serialization.XmlArrayAttribute> that is assigned to the <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b68db-153">下面的示例序列化一个类，该类包含一个名为 `Members` 的字段，该字段返回对象的数组。</span><span class="sxs-lookup"><span data-stu-id="b68db-153">The following example serializes a class that contains a field named `Members` that returns an array of objects.</span></span> <span data-ttu-id="b68db-154"><xref:System.Xml.Serialization.XmlArrayAttribute> 用于重写字段的序列化，并将元素名称重命名为 `Staff`。</span><span class="sxs-lookup"><span data-stu-id="b68db-154">The <xref:System.Xml.Serialization.XmlArrayAttribute> is used to override the serialization of the field, and rename the element name to `Staff`.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlArrayItems">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlArrayItemAttributes XmlArrayItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlArrayItemAttributes XmlArrayItems" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlArrayItems As XmlArrayItemAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlArrayItemAttributes ^ XmlArrayItems { System::Xml::Serialization::XmlArrayItemAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlArrayItems : System.Xml.Serialization.XmlArrayItemAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlArrayItemAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b68db-155">获取或设置一个对象集合，该集合指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化插入数组（由公共字段或读/写属性返回）的项的方式。</span><span class="sxs-lookup"><span data-stu-id="b68db-155">Gets or sets a collection of objects that specify how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes items inserted into an array returned by a public field or read/write property.</span></span></summary>
        <value><span data-ttu-id="b68db-156"><see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> 对象，它包含 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="b68db-156">An <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> object that contains a collection of <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b68db-157"><xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> 属性允许你指定可插入到由公共字段或公共读/写属性返回的数组中的派生类型。</span><span class="sxs-lookup"><span data-stu-id="b68db-157">The <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> property allows you to specify the derived types that can be inserted into an array returned by a public field or public read/write property.</span></span> <span data-ttu-id="b68db-158">对于希望字段或属性接受的每个新类型，创建 <xref:System.Xml.Serialization.XmlArrayItemAttribute> 对象并将其 <xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A> 到 <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> 属性返回的 <xref:System.Xml.Serialization.XmlArrayItemAttributes>）。</span><span class="sxs-lookup"><span data-stu-id="b68db-158">For each new type you want the field or property to accept, create an <xref:System.Xml.Serialization.XmlArrayItemAttribute> object and <xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A> it to the <xref:System.Xml.Serialization.XmlArrayItemAttributes>) returned by the <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> property.</span></span> <span data-ttu-id="b68db-159">（新类型必须派生自字段或属性已接受的类型。）将 <xref:System.Xml.Serialization.XmlAttributes> 对象 <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> 到 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象，并指定包含该字段或属性的对象的类型，以及该字段或属性的名称。</span><span class="sxs-lookup"><span data-stu-id="b68db-159">(The new type must be derived from the type already accepted by the field or property.) <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> the <xref:System.Xml.Serialization.XmlAttributes> object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify the type of the object that contains the field or property, and the name of the field or property.</span></span> <span data-ttu-id="b68db-160">在调用 <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> 或 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 方法之前，构造具有 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象的 <xref:System.Xml.Serialization.XmlSerializer>。</span><span class="sxs-lookup"><span data-stu-id="b68db-160">Construct an <xref:System.Xml.Serialization.XmlSerializer> with the <xref:System.Xml.Serialization.XmlAttributeOverrides> object before calling <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> or <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b68db-161">下面的示例序列化一个类，该类包含一个名为 `Members` 的字段，该字段返回对象的数组。</span><span class="sxs-lookup"><span data-stu-id="b68db-161">The following example serializes a class that contains a field named `Members` that returns an array of objects.</span></span> <span data-ttu-id="b68db-162">创建了两个 <xref:System.Xml.Serialization.XmlArrayItemAttribute> 对象，以允许字段接受从名为 `Member`的基类派生的对象。</span><span class="sxs-lookup"><span data-stu-id="b68db-162">Two <xref:System.Xml.Serialization.XmlArrayItemAttribute> objects are created to allow the field to accept objects that derive from the base class named `Member`.</span></span> <span data-ttu-id="b68db-163">通过 <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> 属性将每个对象添加到 <xref:System.Xml.Serialization.XmlAttributes>。</span><span class="sxs-lookup"><span data-stu-id="b68db-163">Each object is added to the <xref:System.Xml.Serialization.XmlAttributes> through the <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAttributeAttribute XmlAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAttributeAttribute XmlAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAttribute As XmlAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAttributeAttribute ^ XmlAttribute { System::Xml::Serialization::XmlAttributeAttribute ^ get(); void set(System::Xml::Serialization::XmlAttributeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlAttribute : System.Xml.Serialization.XmlAttributeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b68db-164">获取或设置一个对象，该对象指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 将公共字段或公共读/写属性串行化为 XML 特性的方式。</span><span class="sxs-lookup"><span data-stu-id="b68db-164">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or public read/write property as an XML attribute.</span></span></summary>
        <value><span data-ttu-id="b68db-165">控制将公共字段或读/写属性序列化为 XML 特性的 <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="b68db-165">An <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> that controls the serialization of a public field or read/write property as an XML attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b68db-166">默认情况下，如果没有属性应用于公共字段或公共读/写属性，则会将其序列化为 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="b68db-166">By default, if no attribute is applied to a public field or public read/write property, it is serialized as an XML element.</span></span> <span data-ttu-id="b68db-167">还可以通过将 <xref:System.Xml.Serialization.XmlAttributeAttribute> 应用于字段或属性，指示 <xref:System.Xml.Serialization.XmlSerializer> 生成 XML 特性。</span><span class="sxs-lookup"><span data-stu-id="b68db-167">You can also instruct the <xref:System.Xml.Serialization.XmlSerializer> to generate an XML attribute by applying an <xref:System.Xml.Serialization.XmlAttributeAttribute> to the field or property.</span></span>  
  
 <span data-ttu-id="b68db-168"><xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> 属性允许你重写默认序列化，以及通过将 <xref:System.Xml.Serialization.XmlAttributeAttribute> 应用到成员来控制序列化。</span><span class="sxs-lookup"><span data-stu-id="b68db-168">The <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> property allows you to override the default serialization, as well as the serialization controlled by applying an <xref:System.Xml.Serialization.XmlAttributeAttribute> to the member.</span></span> <span data-ttu-id="b68db-169">为此，请创建 <xref:System.Xml.Serialization.XmlAttributeAttribute> 并设置其属性（如 <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>）。</span><span class="sxs-lookup"><span data-stu-id="b68db-169">To do this, create an <xref:System.Xml.Serialization.XmlAttributeAttribute> and set its properties (such as <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>).</span></span> <span data-ttu-id="b68db-170">将新对象分配给 <xref:System.Xml.Serialization.XmlAttributes> 对象的 <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="b68db-170">Assign the new object to the <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="b68db-171">将 <xref:System.Xml.Serialization.XmlAttributes> 对象添加到 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象，并指定包含该字段或属性的对象的类型，以及该字段或属性的名称。</span><span class="sxs-lookup"><span data-stu-id="b68db-171">Add the <xref:System.Xml.Serialization.XmlAttributes> object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify the type of the object that contains the field or property, and the name of the field or property.</span></span> <span data-ttu-id="b68db-172">最后，使用 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象创建 <xref:System.Xml.Serialization.XmlSerializer>，并调用 <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> 或 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="b68db-172">Lastly, create an <xref:System.Xml.Serialization.XmlSerializer> using the <xref:System.Xml.Serialization.XmlAttributeOverrides> object and call the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> or <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b68db-173">下面的示例序列化一个名为 `Group` 的类，该类包含一个名为 `GroupName`的属性;`GroupName` 属性序列化为 XML 特性。</span><span class="sxs-lookup"><span data-stu-id="b68db-173">The following example serializes a class named `Group` that contains a property named `GroupName`; the `GroupName` property is serialized as an XML attribute.</span></span> <span data-ttu-id="b68db-174">该示例创建一个 <xref:System.Xml.Serialization.XmlAttributeOverrides> 和一个 <xref:System.Xml.Serialization.XmlAttributes> 对象来重写字段的默认序列化。</span><span class="sxs-lookup"><span data-stu-id="b68db-174">The example creates an <xref:System.Xml.Serialization.XmlAttributeOverrides> and an <xref:System.Xml.Serialization.XmlAttributes> object to override the default serialization of the field.</span></span> <span data-ttu-id="b68db-175">然后，该示例创建一个 <xref:System.Xml.Serialization.XmlAttributeAttribute> 来专门重写属性，并将对象设置为 <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> 属性，<xref:System.Xml.Serialization.XmlAttributes> 对象添加到具有指定的重写成员名称的 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象。</span><span class="sxs-lookup"><span data-stu-id="b68db-175">The example then creates an <xref:System.Xml.Serialization.XmlAttributeAttribute> to specifically override the property, and the object is set to the <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> property The <xref:System.Xml.Serialization.XmlAttributes> object is added to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object with the name of the overridden member specified.</span></span> <span data-ttu-id="b68db-176">最后，使用 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象构造并返回 <xref:System.Xml.Serialization.XmlSerializer>。</span><span class="sxs-lookup"><span data-stu-id="b68db-176">Finally, an <xref:System.Xml.Serialization.XmlSerializer> is constructed and returned using the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlChoiceIdentifier">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlChoiceIdentifierAttribute XmlChoiceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlChoiceIdentifierAttribute XmlChoiceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlChoiceIdentifier As XmlChoiceIdentifierAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlChoiceIdentifierAttribute ^ XmlChoiceIdentifier { System::Xml::Serialization::XmlChoiceIdentifierAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlChoiceIdentifier : System.Xml.Serialization.XmlChoiceIdentifierAttribute" Usage="System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlChoiceIdentifierAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b68db-177">获取或设置一个对象，该对象允许你区分一组选择。</span><span class="sxs-lookup"><span data-stu-id="b68db-177">Gets or sets an object that allows you to distinguish between a set of choices.</span></span></summary>
        <value><span data-ttu-id="b68db-178">可应用到被序列化为 <see langword="xsi:choice" /> 元素的类成员的 <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="b68db-178">An <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> that can be applied to a class member that is serialized as an <see langword="xsi:choice" /> element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDefaultValue">
      <MemberSignature Language="C#" Value="public object XmlDefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object XmlDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ XmlDefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDefaultValue : obj with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlDefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b68db-179">获取或设置 XML 元素或属性的默认值。</span><span class="sxs-lookup"><span data-stu-id="b68db-179">Gets or sets the default value of an XML element or attribute.</span></span></summary>
        <value><span data-ttu-id="b68db-180">表示 XML 元素或属性的默认值的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b68db-180">An <see cref="T:System.Object" /> that represents the default value of an XML element or attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b68db-181">可以通过将 <xref:System.ComponentModel.DefaultValueAttribute> 应用到成员来指定 XML 元素或 XML 特性的默认值。</span><span class="sxs-lookup"><span data-stu-id="b68db-181">You can specify the default value of an XML element or XML attribute by applying a <xref:System.ComponentModel.DefaultValueAttribute> to a member.</span></span> <span data-ttu-id="b68db-182">若要检查应用该值的结果，请将应用程序编译为 DLL 或可执行文件，并将生成的文件作为参数传递给 XML 架构定义工具（XSD.EXE）。</span><span class="sxs-lookup"><span data-stu-id="b68db-182">To examine the result of applying the value, compile the application into a DLL or executable, and pass the resulting file as an argument to the XML Schema Definition tool (XSD.exe).</span></span> <span data-ttu-id="b68db-183">在 XML 架构文档中，将默认值分配给 `default` 特性。</span><span class="sxs-lookup"><span data-stu-id="b68db-183">In the XML schema document, a default value is assigned to the `default` attribute.</span></span> <span data-ttu-id="b68db-184">在下面的示例中，\<动物 > 元素的默认值为 "狗"。</span><span class="sxs-lookup"><span data-stu-id="b68db-184">In the following example, the default for the \<Animal> element is "Dogs."</span></span>  
  
```  
<?xml version="1.0"?>  
 <schema attributeFormDefault="qualified"   
 elementFormDefault="qualified" targetNamespace=""   
 xmlns="http://www.w3.org/2000/10/XMLSchema">  
   <element name="Pets" nullable="true" type="Pets"/>  
   <complexType name="Pets">  
     <sequence>  
       <element default="Dogs" name="Animal" nullable="true"   
        type="string" minOccurs="0"/>  
     </sequence>  
   </complexType>  
 </schema>  
```  
  
 <span data-ttu-id="b68db-185">若要重写默认值，请创建 <xref:System.Object>，并将其分配给 <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="b68db-185">To override the default value, create an <xref:System.Object> and assign it to the <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A>.</span></span>  
  
 <span data-ttu-id="b68db-186">如果分配给字段或属性的值等于该字段或属性的默认值，则 <xref:System.Xml.Serialization.XmlSerializer> 不会将值序列化为 XML 实例。</span><span class="sxs-lookup"><span data-stu-id="b68db-186">If the value assigned to a field or property is equal to the default value for that field or property, the <xref:System.Xml.Serialization.XmlSerializer> does not serialize the value to the XML-instance.</span></span> <span data-ttu-id="b68db-187">这是因为分配的值可以从 XML 架构中恢复。</span><span class="sxs-lookup"><span data-stu-id="b68db-187">This is because the assigned value can be recovered from the XML schema.</span></span> <span data-ttu-id="b68db-188">换句话说，将字段或属性设置为其自身的默认值相当于根本不设置。</span><span class="sxs-lookup"><span data-stu-id="b68db-188">In other words, setting a field or property to its own default value is equivalent of not setting it at all.</span></span> <span data-ttu-id="b68db-189">同样，如果未设置字段或属性的值，<xref:System.Xml.Serialization.XmlSerializer> 将使用在该架构中找到的默认值。</span><span class="sxs-lookup"><span data-stu-id="b68db-189">Likewise, if no value is set for the field or property, the <xref:System.Xml.Serialization.XmlSerializer> uses the default value found in the schema.</span></span> <span data-ttu-id="b68db-190">在这两种情况下（将属性设置为其默认值，或根本不设置它），XML 文档实例不包含属性的任何值。</span><span class="sxs-lookup"><span data-stu-id="b68db-190">In both cases, (setting the property to its default, or not setting it at all), the XML-document instance does not contain any value for the property.</span></span>  
  
 <span data-ttu-id="b68db-191">可以使用类构造函数而不是架构来分配默认值。</span><span class="sxs-lookup"><span data-stu-id="b68db-191">You can use the class constructors instead of the schema to assign the default values.</span></span> <span data-ttu-id="b68db-192">如果使用 Xsd.exe 从架构生成类，则可以注释掉或删除类文件中的所有 [DefaultValueAttribute （"myFieldName"）] 属性。</span><span class="sxs-lookup"><span data-stu-id="b68db-192">If you are using Xsd.exe to generate a classes from schemas, you can comment out or remove all of the [System.ComponentModel.DefaultValueAttribute("myFieldName")] attributes from the class files.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b68db-193">下面的示例演示一个名为 `Pet` 的类，该类包含一个默认值设置为 "Dog" 的字段。</span><span class="sxs-lookup"><span data-stu-id="b68db-193">The following example shows a class named `Pet` that contains a field that has a default value set to "Dog".</span></span> <span data-ttu-id="b68db-194">但是，该示例还创建 <xref:System.Xml.Serialization.XmlAttributes> 对象，并将其 <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A> 属性设置为新的默认值（"Cat"）。</span><span class="sxs-lookup"><span data-stu-id="b68db-194">However, the example also creates an <xref:System.Xml.Serialization.XmlAttributes> object, and sets its <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A> property to a new default value ("Cat").</span></span> <span data-ttu-id="b68db-195">这会覆盖原始默认值。</span><span class="sxs-lookup"><span data-stu-id="b68db-195">This overrides the original default value.</span></span> <span data-ttu-id="b68db-196">因此，如果字段值设置为 "Cat"，则 <xref:System.Xml.Serialization.XmlSerializer> 会将其视为默认值，而不会对其进行序列化。</span><span class="sxs-lookup"><span data-stu-id="b68db-196">Thus, if the field value is set to "Cat", the <xref:System.Xml.Serialization.XmlSerializer> treats it as the default value, and not serialize it.</span></span> <span data-ttu-id="b68db-197">如果将其设置为任何其他值，则 <xref:System.Xml.Serialization.XmlSerializer> 会序列化该值。</span><span class="sxs-lookup"><span data-stu-id="b68db-197">If it is set to any other value, the <xref:System.Xml.Serialization.XmlSerializer> serializes the value.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlElements">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlElementAttributes XmlElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlElementAttributes XmlElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlElements As XmlElementAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlElementAttributes ^ XmlElements { System::Xml::Serialization::XmlElementAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlElements : System.Xml.Serialization.XmlElementAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlElementAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b68db-198">获取一个对象集合，该集合指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 将公共字段或读/写属性串行化为 XML 元素的方式。</span><span class="sxs-lookup"><span data-stu-id="b68db-198">Gets a collection of objects that specify how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or read/write property as an XML element.</span></span></summary>
        <value><span data-ttu-id="b68db-199">包含一个 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 对象集合的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="b68db-199">An <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> that contains a collection of <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b68db-200">对于序列化为 XML 元素的每个重写成员，必须通过调用 <xref:System.Xml.Serialization.XmlElementAttributes.Add%2A> 方法向 <xref:System.Xml.Serialization.XmlElementAttributes> 添加新的 <xref:System.Xml.Serialization.XmlElementAttribute>。</span><span class="sxs-lookup"><span data-stu-id="b68db-200">For each overridden member that is serialized as an XML element, you must add a new <xref:System.Xml.Serialization.XmlElementAttribute> to an <xref:System.Xml.Serialization.XmlElementAttributes> by calling the <xref:System.Xml.Serialization.XmlElementAttributes.Add%2A> method.</span></span> <span data-ttu-id="b68db-201">默认情况下，将创建一个 <xref:System.Xml.Serialization.XmlElementAttributes> 对象并将其分配给 <xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="b68db-201">By default, an <xref:System.Xml.Serialization.XmlElementAttributes> object is created and assigned to the <xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b68db-202">下面的示例序列化 `Transportation` 类，该类包含一个名为 `Vehicles` 的字段，该字段返回 <xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="b68db-202">The following example serializes the `Transportation` class, which contains a single field named `Vehicles` that returns an <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="b68db-203">该示例将两个 <xref:System.Xml.Serialization.XmlElementAttribute> 特性应用于 `Vehicles` 字段。</span><span class="sxs-lookup"><span data-stu-id="b68db-203">The example applies two <xref:System.Xml.Serialization.XmlElementAttribute> attributes to the `Vehicles` field.</span></span> <span data-ttu-id="b68db-204">该示例创建两个 <xref:System.Xml.Serialization.XmlElementAttribute> 对象，并将它们添加到 <xref:System.Xml.Serialization.XmlAttributes> 对象的 <xref:System.Xml.Serialization.XmlElementAttributes> 集合。</span><span class="sxs-lookup"><span data-stu-id="b68db-204">The example creates two <xref:System.Xml.Serialization.XmlElementAttribute> objects and adds them to the <xref:System.Xml.Serialization.XmlElementAttributes> collection of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="b68db-205">若要允许数组接受不同的对象类型，<xref:System.Xml.Serialization.XmlAttributes> 对象将添加到 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象中。</span><span class="sxs-lookup"><span data-stu-id="b68db-205">To allow the array to accept different object types, the <xref:System.Xml.Serialization.XmlAttributes> object is added to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEnum">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlEnumAttribute XmlEnum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlEnumAttribute XmlEnum" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlEnum" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlEnum As XmlEnumAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlEnumAttribute ^ XmlEnum { System::Xml::Serialization::XmlEnumAttribute ^ get(); void set(System::Xml::Serialization::XmlEnumAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlEnum : System.Xml.Serialization.XmlEnumAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlEnum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlEnumAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b68db-206">获取或设置一个对象，该对象指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 串行化枚举成员的方式。</span><span class="sxs-lookup"><span data-stu-id="b68db-206">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes an enumeration member.</span></span></summary>
        <value><span data-ttu-id="b68db-207">指定 <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> 如何序列化枚举成员的 <see cref="T:System.Xml.Serialization.XmlSerializer" />。</span><span class="sxs-lookup"><span data-stu-id="b68db-207">An <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes an enumeration member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b68db-208">对于要重写的每个标识符，必须创建一个 <xref:System.Xml.Serialization.XmlAttributes> 对象，并将 <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> 属性设置为替代该标识符的 <xref:System.Xml.Serialization.XmlEnumAttribute>。</span><span class="sxs-lookup"><span data-stu-id="b68db-208">For each identifier you want to override, you must create an <xref:System.Xml.Serialization.XmlAttributes> object, and set the <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> property to an <xref:System.Xml.Serialization.XmlEnumAttribute> that overrides the identifier.</span></span> <span data-ttu-id="b68db-209">将 <xref:System.Xml.Serialization.XmlAttributes> 对象添加到 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象，并同时指定包含枚举的类的 <xref:System.Type> 和重写的成员名称。</span><span class="sxs-lookup"><span data-stu-id="b68db-209">Add the <xref:System.Xml.Serialization.XmlAttributes> object to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify both the <xref:System.Type> of the class that contains the enumeration, and the overridden member name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b68db-210">下面的示例将名为 `Food` 和 `FoodType`的两个类进行序列化。</span><span class="sxs-lookup"><span data-stu-id="b68db-210">The following example serializes two classes named `Food` and `FoodType`.</span></span> <span data-ttu-id="b68db-211">`FoodType` 类包含两个被重写的枚举，而对于每个枚举，该示例将创建一个 <xref:System.Xml.Serialization.XmlEnumAttribute> 对象，该对象将其分配给 <xref:System.Xml.Serialization.XmlAttributes> 对象的 <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="b68db-211">The `FoodType` class contains two enumerations that are overridden and, for each enumeration, the example creates an <xref:System.Xml.Serialization.XmlEnumAttribute> object that it assigns to the <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="b68db-212">然后，该示例将 <xref:System.Xml.Serialization.XmlAttributes> 对象添加到用于创建 <xref:System.Xml.Serialization.XmlSerializer>的 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象中。</span><span class="sxs-lookup"><span data-stu-id="b68db-212">The example then adds the <xref:System.Xml.Serialization.XmlAttributes> object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object, which is used to create an <xref:System.Xml.Serialization.XmlSerializer>.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlIgnore">
      <MemberSignature Language="C#" Value="public bool XmlIgnore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool XmlIgnore" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlIgnore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool XmlIgnore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.XmlIgnore : bool with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlIgnore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b68db-213">获取或设置一个值，该值指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否串行化公共字段或公共读/写属性。</span><span class="sxs-lookup"><span data-stu-id="b68db-213">Gets or sets a value that specifies whether or not the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or public read/write property.</span></span></summary>
        <value><span data-ttu-id="b68db-214">如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 不得序列化字段或属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b68db-214"><see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must not serialize the field or property; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b68db-215">默认情况下，所有公共字段和公共读/写属性都由 <xref:System.Xml.Serialization.XmlSerializer>序列化。</span><span class="sxs-lookup"><span data-stu-id="b68db-215">By default, all public fields and public read/write properties are serialized by the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="b68db-216">也就是说，每个公共字段或属性的值将作为 xml 元素或 xml 文档实例中的 xml 特性保存。</span><span class="sxs-lookup"><span data-stu-id="b68db-216">That is, the value of each public field or property is persisted as an XML element or XML attribute in an XML-document instance.</span></span>  
  
 <span data-ttu-id="b68db-217">若要重写字段或属性的默认序列化，请创建一个 <xref:System.Xml.Serialization.XmlAttributes> 对象，并将其 <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> 属性设置为 "`true`"。</span><span class="sxs-lookup"><span data-stu-id="b68db-217">To override the default serialization of a field or property, create an <xref:System.Xml.Serialization.XmlAttributes> object, and set its <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> property to `true`.</span></span> <span data-ttu-id="b68db-218">将对象 <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> 到 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象，并指定包含要忽略的字段或属性的对象的类型，以及要忽略的字段或属性的名称。</span><span class="sxs-lookup"><span data-stu-id="b68db-218"><xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> the object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify the type of the object that contains the field or property to ignore, and the name of the field or property to ignore.</span></span>  
  
 <span data-ttu-id="b68db-219">如果将 <xref:System.Xml.Serialization.XmlIgnoreAttribute> 应用于字段或属性，则忽略该字段或属性。</span><span class="sxs-lookup"><span data-stu-id="b68db-219">If an <xref:System.Xml.Serialization.XmlIgnoreAttribute> is applied to a field or property, the field or property is ignored.</span></span> <span data-ttu-id="b68db-220">不过，您可以通过创建 <xref:System.Xml.Serialization.XmlAttributes> 对象，将其 <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> 属性设置为 `false`，并将其添加到 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象（指定包含字段或属性的对象的类型以及字段或属性的名称）来重写该行为。</span><span class="sxs-lookup"><span data-stu-id="b68db-220">However you can override that behavior by creating an <xref:System.Xml.Serialization.XmlAttributes> object, setting its <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> property to `false`, adding it to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object specifying the type of the object that contains the field or property, and the name of the field or property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b68db-221">下面的示例对名为 `Group`的类进行序列化，该类包含一个名为 `Comment` 的成员，<xref:System.Xml.Serialization.XmlIgnoreAttribute> 应用于该成员。</span><span class="sxs-lookup"><span data-stu-id="b68db-221">The following example serializes a class named `Group`, which contains a member named `Comment` to which the <xref:System.Xml.Serialization.XmlIgnoreAttribute> is applied.</span></span> <span data-ttu-id="b68db-222">该示例创建一个 <xref:System.Xml.Serialization.XmlAttributes> 对象，并将 <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> 属性设置为 `false`，从而重写 <xref:System.Xml.Serialization.XmlIgnoreAttribute>。</span><span class="sxs-lookup"><span data-stu-id="b68db-222">The example creates an <xref:System.Xml.Serialization.XmlAttributes> object, and sets the <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> property to `false`, thereby overriding the <xref:System.Xml.Serialization.XmlIgnoreAttribute>.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Xmlns">
      <MemberSignature Language="C#" Value="public bool Xmlns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Xmlns" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.Xmlns" />
      <MemberSignature Language="VB.NET" Value="Public Property Xmlns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Xmlns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Xmlns : bool with get, set" Usage="System.Xml.Serialization.XmlAttributes.Xmlns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b68db-223">获取或设置一个值，该值指定当替代包含返回 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 对象的成员的对象时，是否保留所有的命名空间声明。</span><span class="sxs-lookup"><span data-stu-id="b68db-223">Gets or sets a value that specifies whether to keep all namespace declarations when an object containing a member that returns an <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> object is overridden.</span></span></summary>
        <value><span data-ttu-id="b68db-224">如果应保留命名空间声明，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b68db-224"><see langword="true" /> if the namespace declarations should be kept; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b68db-225">下面的示例包含一个名为 `Student`的类。</span><span class="sxs-lookup"><span data-stu-id="b68db-225">The following example contains a class named `Student`.</span></span> <span data-ttu-id="b68db-226">类包含一个名为 `MyNamespaces` 的成员，该成员返回一个 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 对象。</span><span class="sxs-lookup"><span data-stu-id="b68db-226">The class contains a member named `MyNamespaces` that returns an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object.</span></span> <span data-ttu-id="b68db-227">该示例创建一个添加到 <xref:System.Xml.Serialization.XmlAttributeOverrides> 类的实例的 <xref:System.Xml.Serialization.XmlAttributes> 对象。</span><span class="sxs-lookup"><span data-stu-id="b68db-227">The example creates an <xref:System.Xml.Serialization.XmlAttributes> object that is added to an instance of the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span> <span data-ttu-id="b68db-228"><xref:System.Xml.Serialization.XmlAttributes.Xmlns%2A> 属性设置为 `true`，这指示 <xref:System.Xml.Serialization.XmlSerializer> 当重写 `Student` 对象的序列化时保留这些命名空间。</span><span class="sxs-lookup"><span data-stu-id="b68db-228">The <xref:System.Xml.Serialization.XmlAttributes.Xmlns%2A> property is set to `true`, which instructs the <xref:System.Xml.Serialization.XmlSerializer> to preserve the namespaces when the serialization of the `Student` object is overridden.</span></span>  
  
 [!code-cpp[XmlAttributes.Xmlns property example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/CPP/xmlns.cpp#1)]
 [!code-csharp[XmlAttributes.Xmlns property example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/CS/xmlns.cs#1)]
 [!code-vb[XmlAttributes.Xmlns property example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/VB/xmlns.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlRoot">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlRootAttribute XmlRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlRootAttribute XmlRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlRoot As XmlRootAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlRootAttribute ^ XmlRoot { System::Xml::Serialization::XmlRootAttribute ^ get(); void set(System::Xml::Serialization::XmlRootAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlRoot : System.Xml.Serialization.XmlRootAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlRootAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b68db-229">获取或设置一个对象，该对象指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 将类串行化为 XML 根元素的方式。</span><span class="sxs-lookup"><span data-stu-id="b68db-229">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a class as an XML root element.</span></span></summary>
        <value><span data-ttu-id="b68db-230">重写特性化为 XML 根元素的类的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="b68db-230">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> that overrides a class attributed as an XML root element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b68db-231">下面的示例创建一个 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象、一个 <xref:System.Xml.Serialization.XmlAttributes> 对象和一个 <xref:System.Xml.Serialization.XmlRootAttribute> 对象。</span><span class="sxs-lookup"><span data-stu-id="b68db-231">The following example creates an <xref:System.Xml.Serialization.XmlAttributeOverrides> object, an <xref:System.Xml.Serialization.XmlAttributes> object, and an <xref:System.Xml.Serialization.XmlRootAttribute> object.</span></span> <span data-ttu-id="b68db-232">该示例将 <xref:System.Xml.Serialization.XmlRootAttribute> 分配给 <xref:System.Xml.Serialization.XmlAttributes> 对象的 <xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A> 属性，并将 <xref:System.Xml.Serialization.XmlAttributes> 对象添加到 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象。</span><span class="sxs-lookup"><span data-stu-id="b68db-232">The example assigns the <xref:System.Xml.Serialization.XmlRootAttribute> to the <xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A> property of the <xref:System.Xml.Serialization.XmlAttributes> object, and adds the <xref:System.Xml.Serialization.XmlAttributes> object to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span> <span data-ttu-id="b68db-233">最后，该示例通过将序列化类的 <xref:System.Type> 传递到 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象来获取 <xref:System.Xml.Serialization.XmlAttributes> 的对象。</span><span class="sxs-lookup"><span data-stu-id="b68db-233">Lastly, the example gets the <xref:System.Xml.Serialization.XmlAttributes> object by passing the <xref:System.Type> of the serialized class to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span> <span data-ttu-id="b68db-234">（在此示例中，<xref:System.Type> `Group`。）</span><span class="sxs-lookup"><span data-stu-id="b68db-234">(In this example, the <xref:System.Type> is `Group`.)</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlText">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTextAttribute XmlText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlTextAttribute XmlText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlText" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlText As XmlTextAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlTextAttribute ^ XmlText { System::Xml::Serialization::XmlTextAttribute ^ get(); void set(System::Xml::Serialization::XmlTextAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlText : System.Xml.Serialization.XmlTextAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTextAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b68db-235">获取或设置一个对象，该对象指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 将公共字段或公共读/写属性串行化为 XML 文本。</span><span class="sxs-lookup"><span data-stu-id="b68db-235">Gets or sets an object that instructs the <see cref="T:System.Xml.Serialization.XmlSerializer" /> to serialize a public field or public read/write property as XML text.</span></span></summary>
        <value><span data-ttu-id="b68db-236">重写公共属性或字段的默认序列化的 <see cref="T:System.Xml.Serialization.XmlTextAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="b68db-236">An <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> that overrides the default serialization of a public property or field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b68db-237">默认情况下，<xref:System.Xml.Serialization.XmlSerializer>会将公共字段或公共读/写属性序列化为 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="b68db-237">By default, a public field or public read/write property is serialized as an XML element by the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="b68db-238">不过，它可以通过将 <xref:System.Xml.Serialization.XmlTextAttribute> 应用于字段或属性，强制将字段或属性序列化为 XML 文本。</span><span class="sxs-lookup"><span data-stu-id="b68db-238">However, it can force the field or property to be serialized as XML text by applying an <xref:System.Xml.Serialization.XmlTextAttribute> to the field or property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b68db-239"><xref:System.Xml.Serialization.XmlTextAttribute> 不能应用于返回数组的字段或属性。</span><span class="sxs-lookup"><span data-stu-id="b68db-239">The <xref:System.Xml.Serialization.XmlTextAttribute> cannot be applied to a field or property that returns an array.</span></span>  
  
 <span data-ttu-id="b68db-240">若要重写字段或属性（不返回数组）的默认序列化，请创建一个 <xref:System.Xml.Serialization.XmlTextAttribute> 并将其分配给 <xref:System.Xml.Serialization.XmlAttributes> 对象的 <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="b68db-240">To override the default serialization of a field or property (that does not return an array), create an <xref:System.Xml.Serialization.XmlTextAttribute> and assign it to the <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="b68db-241">将 <xref:System.Xml.Serialization.XmlAttributes> 对象添加到 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象，并指定包含重写的字段或属性的对象的类型，以及重写的字段或属性的名称。</span><span class="sxs-lookup"><span data-stu-id="b68db-241">Add the <xref:System.Xml.Serialization.XmlAttributes> object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify the type of the object that contains the overridden field or property, and the name of the overridden field or property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b68db-242">下面的示例序列化名为 `Group`的类，该类包含一个名为 `Comment`的字段。</span><span class="sxs-lookup"><span data-stu-id="b68db-242">The following example serializes the class named `Group`, which contains a field named `Comment`.</span></span> <span data-ttu-id="b68db-243">若要重写 <xref:System.Xml.Serialization.XmlSerializer> 序列化字段的默认方式，该示例将创建一个 <xref:System.Xml.Serialization.XmlAttributeOverrides> 和一个 <xref:System.Xml.Serialization.XmlAttributes> 对象。</span><span class="sxs-lookup"><span data-stu-id="b68db-243">To override the default way the <xref:System.Xml.Serialization.XmlSerializer> serializes the field, the example creates an <xref:System.Xml.Serialization.XmlAttributeOverrides> and an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="b68db-244">然后，该示例创建一个 <xref:System.Xml.Serialization.XmlTextAttribute> 对象，该对象将其分配给 <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> 属性，并将 <xref:System.Xml.Serialization.XmlAttributes> 对象（其中包含要序列化为 XML 文本的字段的名称）添加到 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象。</span><span class="sxs-lookup"><span data-stu-id="b68db-244">The example then creates an <xref:System.Xml.Serialization.XmlTextAttribute> object, which it assigns to the <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property, and adds the <xref:System.Xml.Serialization.XmlAttributes> object (with the name of the field to be serialized as XML text) to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span> <span data-ttu-id="b68db-245">最后，该示例使用 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象创建 <xref:System.Xml.Serialization.XmlSerializer>。</span><span class="sxs-lookup"><span data-stu-id="b68db-245">Lastly the example creates an <xref:System.Xml.Serialization.XmlSerializer> using the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlType">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeAttribute XmlType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlTypeAttribute XmlType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlType" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlType As XmlTypeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlTypeAttribute ^ XmlType { System::Xml::Serialization::XmlTypeAttribute ^ get(); void set(System::Xml::Serialization::XmlTypeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlType : System.Xml.Serialization.XmlTypeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b68db-246">获取或设置一个对象，该对象指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 串行化已对其应用 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 的类的方式。</span><span class="sxs-lookup"><span data-stu-id="b68db-246">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a class to which the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> has been applied.</span></span></summary>
        <value><span data-ttu-id="b68db-247">重写应用于类声明的 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 的 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="b68db-247">An <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> that overrides an <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> applied to a class declaration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b68db-248"><xref:System.Xml.Serialization.XmlTypeAttribute> 可用于控制 <xref:System.Xml.Serialization.XmlSerializer>序列化类型的方式。</span><span class="sxs-lookup"><span data-stu-id="b68db-248">The <xref:System.Xml.Serialization.XmlTypeAttribute> can be used to control how a type is serialized by the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="b68db-249">例如，默认情况下，在序列化类型时，<xref:System.Xml.Serialization.XmlSerializer> 使用类名称作为 XML 元素名称。</span><span class="sxs-lookup"><span data-stu-id="b68db-249">For example, by default, when a type is serialized, the <xref:System.Xml.Serialization.XmlSerializer> uses the class name as the XML element name.</span></span> <span data-ttu-id="b68db-250">通过创建 <xref:System.Xml.Serialization.XmlTypeAttribute>，将 <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> 属性设置为它，并创建 <xref:System.Xml.Serialization.XmlAttributeOverrides> 对象，可以更改 XML 元素的名称。</span><span class="sxs-lookup"><span data-stu-id="b68db-250">By creating an <xref:System.Xml.Serialization.XmlTypeAttribute>, setting the <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> property to it, and creating an <xref:System.Xml.Serialization.XmlAttributeOverrides> object, you can change the XML element name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b68db-251">下面的示例创建一个 <xref:System.Xml.Serialization.XmlTypeAttribute> 对象，并将其分配给 <xref:System.Xml.Serialization.XmlAttributes> 对象的 <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="b68db-251">The following example creates an <xref:System.Xml.Serialization.XmlTypeAttribute> object, and assigns it to the <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
