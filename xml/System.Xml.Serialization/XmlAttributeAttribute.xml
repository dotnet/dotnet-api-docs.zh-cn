<Type Name="XmlAttributeAttribute" FullName="System.Xml.Serialization.XmlAttributeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="975d840d358d15af17a2141df0688e634f8e3b79" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89838801" /></Metadata><TypeSignature Language="C#" Value="public class XmlAttributeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAttributeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAttributeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAttributeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributeAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlAttributeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml" FromVersion="4.0.0.0" To="System.Xml.XmlSerializer" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="4.0.0.0" To="System.Xml.XmlSerializer" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="5.0.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="4.1.0.0" To="System.Xml.ReaderWriter" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="4.1.1.0" To="System.Xml.ReaderWriter" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="4.1.2.0" To="System.Xml.ReaderWriter" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="4.0.0.0" To="System.Xml" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="216e9-101">指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 必须将类成员序列化为 XML 属性。</span><span class="sxs-lookup"><span data-stu-id="216e9-101">Specifies that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize the class member as an XML attribute.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="216e9-102"><xref:System.Xml.Serialization.XmlAttributeAttribute>属于控制 <xref:System.Xml.Serialization.XmlSerializer> 序列化或反序列化对象的方式的一系列属性。</span><span class="sxs-lookup"><span data-stu-id="216e9-102">The <xref:System.Xml.Serialization.XmlAttributeAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes, or deserializes, an object.</span></span> <span data-ttu-id="216e9-103">有关类似属性的完整列表，请参阅 [控制 XML 序列化的属性](/dotnet/standard/serialization/attributes-that-control-xml-serialization)。</span><span class="sxs-lookup"><span data-stu-id="216e9-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](/dotnet/standard/serialization/attributes-that-control-xml-serialization).</span></span>  
  
 <span data-ttu-id="216e9-104">当应用于公共字段或属性时，会 <xref:System.Xml.Serialization.XmlAttributeAttribute> 通知将 <xref:System.Xml.Serialization.XmlSerializer> 成员序列化为 XML 特性。</span><span class="sxs-lookup"><span data-stu-id="216e9-104">When applied to a public field or property, the <xref:System.Xml.Serialization.XmlAttributeAttribute> informs the <xref:System.Xml.Serialization.XmlSerializer> to serialize the member as an XML attribute.</span></span> <span data-ttu-id="216e9-105">默认情况下，将 <xref:System.Xml.Serialization.XmlSerializer> 公共字段和属性序列化为 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="216e9-105">By default, the <xref:System.Xml.Serialization.XmlSerializer> serializes public fields and properties as XML elements.</span></span>  
  
 <span data-ttu-id="216e9-106">您可以将 <xref:System.Xml.Serialization.XmlAttributeAttribute> 仅分配给公共字段或公共属性，这些属性返回值 (或值数组) 这些值可以映射到 XML 架构定义语言 (xsd) 简单类型 (包括派生自 XSD 类型) 的所有内置数据类型 `anySimpleType` 。</span><span class="sxs-lookup"><span data-stu-id="216e9-106">You can assign the <xref:System.Xml.Serialization.XmlAttributeAttribute> only to public fields or public properties that return a value (or array of values) that can be mapped to one of the XML Schema definition language (XSD) simple types (including all built-in datatypes derived from the XSD `anySimpleType` type).</span></span> <span data-ttu-id="216e9-107">可能的类型包括可以映射到 XSD 简单类型的任何类型，包括 <xref:System.Guid> 、 <xref:System.Char> 和枚举。</span><span class="sxs-lookup"><span data-stu-id="216e9-107">The possible types include any that can be mapped to the XSD simple types, including <xref:System.Guid>, <xref:System.Char>, and enumerations.</span></span> <span data-ttu-id="216e9-108"><xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A>有关 XSD 类型的列表以及如何将它们映射到 to.NET 数据类型，请参阅属性。</span><span class="sxs-lookup"><span data-stu-id="216e9-108">See the <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> property for a list of XSD types and how they are mapped to.NET data types.</span></span>  
  
 <span data-ttu-id="216e9-109">可以通过设置两个特殊属性 <xref:System.Xml.Serialization.XmlAttributeAttribute> ： `xml:lang` (指定语言) 并 `xml:space` (指定如何处理空白) 特性。</span><span class="sxs-lookup"><span data-stu-id="216e9-109">There are two special attributes that can be set with the <xref:System.Xml.Serialization.XmlAttributeAttribute> : the `xml:lang` (specifies language) and `xml:space` (specifies how to handle white space) attributes.</span></span> <span data-ttu-id="216e9-110">这些特性旨在传达与处理 XML 的应用程序相关的信息。</span><span class="sxs-lookup"><span data-stu-id="216e9-110">These attributes are intended to convey information that is relevant only to an application processing the XML.</span></span> <span data-ttu-id="216e9-111">下面的代码演示了设置这些设置的示例。</span><span class="sxs-lookup"><span data-stu-id="216e9-111">Examples of setting these are shown in the following code.</span></span>  
  
```csharp  
[XmlAttribute("xml:lang")]  
 public string Lang;  
 // Set this to 'default' or 'preserve'.  
 [XmlAttribute("space",   
 Namespace = "http://www.w3.org/XML/1998/namespace")]  
 public string Space 
 ```

 ```vb 
 <XmlAttribute("xml:lang")> _  
 Public Lang As String   
 ' Set this to 'default' or 'preserve'.  
 <XmlAttribute("space", _  
 Namespace:= "http://www.w3.org/XML/1998/namespace")> _  
 Public Space As String  
```  
  
 <span data-ttu-id="216e9-112">有关使用特性的详细信息，请参阅 [特性](/dotnet/standard/attributes/)。</span><span class="sxs-lookup"><span data-stu-id="216e9-112">For more information about using attributes, see [Attributes](/dotnet/standard/attributes/).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="216e9-113">您可以 `XmlAttribute` 在代码中使用该单词而不是更长的时间 <xref:System.Xml.Serialization.XmlAttributeAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="216e9-113">You can use the word `XmlAttribute` in your code instead of the longer <xref:System.Xml.Serialization.XmlAttributeAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="216e9-114">下面的示例序列化一个类，其中包含要应用的多个字段 <xref:System.Xml.Serialization.XmlAttributeAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="216e9-114">The following example serializes a class that contains several fields to which the <xref:System.Xml.Serialization.XmlAttributeAttribute> is applied.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="216e9-115">初始化 <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="216e9-115">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="216e9-116">初始化 <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="216e9-116">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[XMLAttributeAttribute_ctr1_2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CPP/xmlAttributeAttribute_ctr1_2.cpp#1)]
 [!code-csharp[XMLAttributeAttribute_ctr1_2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CS/xmlattributeattribute_ctr1_2.cs#1)]
 [!code-vb[XMLAttributeAttribute_ctr1_2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/VB/xmlattributeattribute_ctr1_2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute (string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeAttribute(System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAttributeAttribute : string -&gt; System.Xml.Serialization.XmlAttributeAttribute" Usage="new System.Xml.Serialization.XmlAttributeAttribute attributeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeName"><span data-ttu-id="216e9-117"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XML 特性的名称。</span><span class="sxs-lookup"><span data-stu-id="216e9-117">The name of the XML attribute that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates.</span></span></param>
        <summary><span data-ttu-id="216e9-118">初始化 <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 类的新实例，并指定生成的 XML 属性的名称。</span><span class="sxs-lookup"><span data-stu-id="216e9-118">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class and specifies the name of the generated XML attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[XMLAttributeAttribute_ctr1_2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CPP/xmlAttributeAttribute_ctr1_2.cpp#2)]
 [!code-csharp[XMLAttributeAttribute_ctr1_2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/CS/xmlattributeattribute_ctr1_2.cs#2)]
 [!code-vb[XMLAttributeAttribute_ctr1_2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLAttributeAttribute_ctr1_2/VB/xmlattributeattribute_ctr1_2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAttributeAttribute : Type -&gt; System.Xml.Serialization.XmlAttributeAttribute" Usage="new System.Xml.Serialization.XmlAttributeAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="216e9-119">用来存储特性的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="216e9-119">The <see cref="T:System.Type" /> used to store the attribute.</span></span></param>
        <summary><span data-ttu-id="216e9-120">初始化 <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="216e9-120">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeAttribute (string attributeName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attributeName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeName As String, type As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeAttribute(System::String ^ attributeName, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAttributeAttribute : string * Type -&gt; System.Xml.Serialization.XmlAttributeAttribute" Usage="new System.Xml.Serialization.XmlAttributeAttribute (attributeName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="attributeName"><span data-ttu-id="216e9-121">生成的 XML 特性的名称。</span><span class="sxs-lookup"><span data-stu-id="216e9-121">The name of the XML attribute that is generated.</span></span></param>
        <param name="type"><span data-ttu-id="216e9-122">用来存储特性的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="216e9-122">The <see cref="T:System.Type" /> used to store the attribute.</span></span></param>
        <summary><span data-ttu-id="216e9-123">初始化 <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="216e9-123">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeName">
      <MemberSignature Language="C#" Value="public string AttributeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttributeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName" />
      <MemberSignature Language="VB.NET" Value="Public Property AttributeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AttributeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AttributeName : string with get, set" Usage="System.Xml.Serialization.XmlAttributeAttribute.AttributeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="216e9-124">获取或设置 XML 属性的名称。</span><span class="sxs-lookup"><span data-stu-id="216e9-124">Gets or sets the name of the XML attribute.</span></span></summary>
        <value><span data-ttu-id="216e9-125">XML 属性的名称。</span><span class="sxs-lookup"><span data-stu-id="216e9-125">The name of the XML attribute.</span></span> <span data-ttu-id="216e9-126">默认值为成员名称。</span><span class="sxs-lookup"><span data-stu-id="216e9-126">The default is the member name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="216e9-127"><xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>当不能使用默认值时，请使用属性指定 XML 特性名称。</span><span class="sxs-lookup"><span data-stu-id="216e9-127">Use the <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> property to specify an XML attribute name when the default value cannot be used.</span></span> <span data-ttu-id="216e9-128">例如，如果 XML 属性名称作为成员标识符无效，则可以在将设置为无效名称时使用标识符的有效名称 <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="216e9-128">For example, if the XML attribute name is invalid as a member identifier, you can use a valid name for the identifier while setting the <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> to an invalid name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="216e9-129">下面的示例设置的 <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> 属性 <xref:System.Xml.Serialization.XmlAttributeAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="216e9-129">The following example sets the <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A> property of an <xref:System.Xml.Serialization.XmlAttributeAttribute>.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute.AttributeName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.AttributeName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.AttributeName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.AttributeName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.AttributeName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.AttributeName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlElementAttribute.ElementName" />
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlAttributeAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="216e9-130">获取或设置 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XML 属性的 XSD 数据类型。</span><span class="sxs-lookup"><span data-stu-id="216e9-130">Gets or sets the XSD data type of the XML attribute generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span></span></summary>
        <value><span data-ttu-id="216e9-131">XSD (XML 架构文档) 数据类型。</span><span class="sxs-lookup"><span data-stu-id="216e9-131">An XSD (XML Schema Document) data type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="216e9-132">下表列出了具有 their.NET 等效项的 XSD 简单数据类型。</span><span class="sxs-lookup"><span data-stu-id="216e9-132">The following table lists the XSD simple data types with their.NET equivalents.</span></span>  
  
 <span data-ttu-id="216e9-133">对于 XSD `base64Binary` 和 `hexBinary` 数据类型，请使用 <xref:System.Byte> 结构数组，并 <xref:System.Xml.Serialization.XmlArrayItemAttribute> <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> 根据需要将属性设置为 "base64Binary" 或 "hexBinary" 的应用。</span><span class="sxs-lookup"><span data-stu-id="216e9-133">For the XSD `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.XmlArrayItemAttribute> with the <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> property set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="216e9-134">对于 XSD `time` 和 `date` 数据类型，请使用 <xref:System.DateTime> 类型，并将 <xref:System.Xml.Serialization.XmlAttributeAttribute> <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> 设置为 "日期" 或 "时间"。</span><span class="sxs-lookup"><span data-stu-id="216e9-134">For the XSD `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlAttributeAttribute> with the <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="216e9-135">对于映射到字符串的每个 XSD 类型，应用 <xref:System.Xml.Serialization.XmlAttributeAttribute> 其 <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> 属性设置为 XSD 类型的。</span><span class="sxs-lookup"><span data-stu-id="216e9-135">For every XSD type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlAttributeAttribute> with its <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> property set to the XSD type.</span></span> <span data-ttu-id="216e9-136">但是，这不会更改序列化格式，而只会更改成员的架构。</span><span class="sxs-lookup"><span data-stu-id="216e9-136">However, this does not change the serialization format, only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="216e9-137">属性区分大小写，因此必须将其精确设置为 XSD 数据类型之一。</span><span class="sxs-lookup"><span data-stu-id="216e9-137">The property is case-sensitive, so you must set it exactly to one of the XSD data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="216e9-138">将二进制数据作为 XML 元素传递比将其作为 XML 特性传递更为有效。</span><span class="sxs-lookup"><span data-stu-id="216e9-138">Passing binary data as an XML element is more efficient than passing it as an XML attribute.</span></span>  
  
 <span data-ttu-id="216e9-139">有关 XML 数据类型的详细信息，请参阅 " [Xml 架构第2部分：](https://www.w3.org/TR/xmlschema-2/) 来自万维网联合会的数据类型" 文档。</span><span class="sxs-lookup"><span data-stu-id="216e9-139">For more information about XML data types, see the [XML Schema Part 2: DataTypes](https://www.w3.org/TR/xmlschema-2/) document from the World Wide Web Consortium.</span></span>  
  
|<span data-ttu-id="216e9-140">XSD 数据类型</span><span class="sxs-lookup"><span data-stu-id="216e9-140">XSD data type</span></span>|<span data-ttu-id="216e9-141">.NET 数据类型</span><span class="sxs-lookup"><span data-stu-id="216e9-141">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="216e9-142">anyURI</span><span class="sxs-lookup"><span data-stu-id="216e9-142">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-143">base64Binary</span><span class="sxs-lookup"><span data-stu-id="216e9-143">base64Binary</span></span>|<span data-ttu-id="216e9-144">对象数组 <xref:System.Byte></span><span class="sxs-lookup"><span data-stu-id="216e9-144">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="216e9-145">boolean</span><span class="sxs-lookup"><span data-stu-id="216e9-145">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="216e9-146">字节</span><span class="sxs-lookup"><span data-stu-id="216e9-146">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="216e9-147">日期</span><span class="sxs-lookup"><span data-stu-id="216e9-147">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="216e9-148">dateTime</span><span class="sxs-lookup"><span data-stu-id="216e9-148">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="216e9-149">Decimal</span><span class="sxs-lookup"><span data-stu-id="216e9-149">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="216e9-150">Double</span><span class="sxs-lookup"><span data-stu-id="216e9-150">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="216e9-151">ENTITY</span><span class="sxs-lookup"><span data-stu-id="216e9-151">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-152">条目</span><span class="sxs-lookup"><span data-stu-id="216e9-152">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-153">FLOAT</span><span class="sxs-lookup"><span data-stu-id="216e9-153">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="216e9-154">gDay</span><span class="sxs-lookup"><span data-stu-id="216e9-154">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-155">gMonth</span><span class="sxs-lookup"><span data-stu-id="216e9-155">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-156">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="216e9-156">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-157">gYear</span><span class="sxs-lookup"><span data-stu-id="216e9-157">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-158">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="216e9-158">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-159">hexBinary</span><span class="sxs-lookup"><span data-stu-id="216e9-159">hexBinary</span></span>|<span data-ttu-id="216e9-160">对象数组 <xref:System.Byte></span><span class="sxs-lookup"><span data-stu-id="216e9-160">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="216e9-161">ID</span><span class="sxs-lookup"><span data-stu-id="216e9-161">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-162">IDREF</span><span class="sxs-lookup"><span data-stu-id="216e9-162">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-163">IDREFS</span><span class="sxs-lookup"><span data-stu-id="216e9-163">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-164">int</span><span class="sxs-lookup"><span data-stu-id="216e9-164">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="216e9-165">整型</span><span class="sxs-lookup"><span data-stu-id="216e9-165">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-166">语言</span><span class="sxs-lookup"><span data-stu-id="216e9-166">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-167">long</span><span class="sxs-lookup"><span data-stu-id="216e9-167">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="216e9-168">“属性”</span><span class="sxs-lookup"><span data-stu-id="216e9-168">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-169">NCName</span><span class="sxs-lookup"><span data-stu-id="216e9-169">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-170">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="216e9-170">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-171">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="216e9-171">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-172">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="216e9-172">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-173">normalizedString</span><span class="sxs-lookup"><span data-stu-id="216e9-173">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-174">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="216e9-174">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-175">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="216e9-175">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-176">NOTATION</span><span class="sxs-lookup"><span data-stu-id="216e9-176">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-177">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="216e9-177">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-178">QName</span><span class="sxs-lookup"><span data-stu-id="216e9-178">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="216e9-179">duration</span><span class="sxs-lookup"><span data-stu-id="216e9-179">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-180">字符串</span><span class="sxs-lookup"><span data-stu-id="216e9-180">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-181">short</span><span class="sxs-lookup"><span data-stu-id="216e9-181">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="216e9-182">time</span><span class="sxs-lookup"><span data-stu-id="216e9-182">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="216e9-183">令牌</span><span class="sxs-lookup"><span data-stu-id="216e9-183">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="216e9-184">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="216e9-184">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="216e9-185">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="216e9-185">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="216e9-186">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="216e9-186">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="216e9-187">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="216e9-187">unsignedShort</span></span>|<xref:System.UInt16>|  
  
   
  
## Examples  
 <span data-ttu-id="216e9-188">下面的示例将应用 <xref:System.Xml.Serialization.XmlAttributeAttribute> 到两个成员，并将 <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> 属性设置为不同的值。</span><span class="sxs-lookup"><span data-stu-id="216e9-188">The following example applies the <xref:System.Xml.Serialization.XmlAttributeAttribute> to two members, and sets the <xref:System.Xml.Serialization.XmlAttributeAttribute.DataType%2A> property set to different values.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute.DataType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.DataType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Xml.Schema.XmlSchemaForm with get, set" Usage="System.Xml.Serialization.XmlAttributeAttribute.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="216e9-189">获取或设置一个值，该值指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XML 属性名称是否是限定的。</span><span class="sxs-lookup"><span data-stu-id="216e9-189">Gets or sets a value that indicates whether the XML attribute name generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> is qualified.</span></span></summary>
        <value><span data-ttu-id="216e9-190"><see cref="T:System.Xml.Schema.XmlSchemaForm" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="216e9-190">One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values.</span></span> <span data-ttu-id="216e9-191">默认值为 <see langword="XmlForm.None" />。</span><span class="sxs-lookup"><span data-stu-id="216e9-191">The default is <see langword="XmlForm.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="216e9-192"><xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A>属性确定 XML 元素是否是限定的或非限定的。</span><span class="sxs-lookup"><span data-stu-id="216e9-192">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property determines whether an XML element is qualified or unqualified.</span></span> <span data-ttu-id="216e9-193"><xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A>属性符合 1999 http://www.w3.org 规范 `Namespaces in XML` 。</span><span class="sxs-lookup"><span data-stu-id="216e9-193">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property conforms to the 1999 http://www.w3.org specification `Namespaces in XML`.</span></span>  
  
 <span data-ttu-id="216e9-194">如果将 <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> 属性设置为任何值，尝试将 <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> 属性设置为会 `XmlSchemaForm.Unqualified` 引发异常。</span><span class="sxs-lookup"><span data-stu-id="216e9-194">If the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property is set to any value, attempting to set the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified` throws an exception.</span></span>  
  
 <span data-ttu-id="216e9-195">默认设置 `XmlSchemaForm.None` 指示 <xref:System.Xml.Serialization.XmlSerializer> 检查 XML 文档的架构，以确定命名空间是否是限定的。</span><span class="sxs-lookup"><span data-stu-id="216e9-195">The default setting, `XmlSchemaForm.None`, instructs the <xref:System.Xml.Serialization.XmlSerializer> to check the schema for the XML document to determine whether the namespace is qualified.</span></span> <span data-ttu-id="216e9-196">如果架构未指定单个元素或属性的值，则将 <xref:System.Xml.Serialization.XmlSerializer> 使用 `elementFormDefault` 和 `attributeFormDefault` 值来确定是否限定了某个元素或属性。</span><span class="sxs-lookup"><span data-stu-id="216e9-196">If the schema does not specify a value for an individual element or attribute, the <xref:System.Xml.Serialization.XmlSerializer> uses the `elementFormDefault` and `attributeFormDefault` values to determine whether an element or attribute is qualified.</span></span> <span data-ttu-id="216e9-197">以下 XML 代码显示了一个架构：</span><span class="sxs-lookup"><span data-stu-id="216e9-197">The following XML code shows a schema:</span></span>  
  
```xml  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified"... >  
   <element name="Name"/>  
   <attribute name="Number"/>  
</schema>  
```  
  
 <span data-ttu-id="216e9-198">当 <xref:System.Xml.Serialization.XmlSerializer> 读取架构时，和的 <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> 值 `Name` `Number` 为 `XmlSchemaForm.None` ，但 `Name` 元素是限定的，而元素 `Number` 是非限定的。</span><span class="sxs-lookup"><span data-stu-id="216e9-198">When the <xref:System.Xml.Serialization.XmlSerializer> reads the schema, the <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> value for both the `Name` and `Number` is `XmlSchemaForm.None`, but the `Name` element is qualified, while the `Number` element is unqualified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="216e9-199">下面的示例将应用于 <xref:System.Xml.Serialization.XmlAttributeAttribute> 类中包含的两个字段。</span><span class="sxs-lookup"><span data-stu-id="216e9-199">The following example applies the <xref:System.Xml.Serialization.XmlAttributeAttribute> to two fields contained in a class.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlAttributeAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="216e9-200">获取或设置 XML 属性的 XML 命名空间。</span><span class="sxs-lookup"><span data-stu-id="216e9-200">Gets or sets the XML namespace of the XML attribute.</span></span></summary>
        <value><span data-ttu-id="216e9-201">XML 属性的 XML 命名空间。</span><span class="sxs-lookup"><span data-stu-id="216e9-201">The XML namespace of the XML attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="216e9-202"><xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>属性符合 http://www.w3.org 规范 `Namespaces in XML` 。</span><span class="sxs-lookup"><span data-stu-id="216e9-202">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property conforms to the http://www.w3.org specification `Namespaces in XML`.</span></span>  
  
 <span data-ttu-id="216e9-203">若要创建与前缀关联的命名空间，则必须创建一个 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 对象，该对象包含 XML 文档中使用的命名空间和前缀。</span><span class="sxs-lookup"><span data-stu-id="216e9-203">To create namespaces that are associated with prefixes, you must create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object that contains the namespaces and prefixes used in the XML document.</span></span> <span data-ttu-id="216e9-204">为每个设置的命名空间 <xref:System.Xml.Serialization.XmlAttributeAttribute> 必须与对象中的一个命名空间匹配 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 。</span><span class="sxs-lookup"><span data-stu-id="216e9-204">The namespace you set for each <xref:System.Xml.Serialization.XmlAttributeAttribute> must match one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces> object.</span></span> <span data-ttu-id="216e9-205">当 <xref:System.Xml.Serialization.XmlSerializer> 生成 XML 代码时，它会对每个属性名称进行正确的前缀。</span><span class="sxs-lookup"><span data-stu-id="216e9-205">When the <xref:System.Xml.Serialization.XmlSerializer> generates the XML code, it correctly prefixes each attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="216e9-206">下面的示例将应用于 <xref:System.Xml.Serialization.XmlAttributeAttribute> 类中包含的两个字段。</span><span class="sxs-lookup"><span data-stu-id="216e9-206">The following example applies the <xref:System.Xml.Serialization.XmlAttributeAttribute> to two fields contained in a class.</span></span> <span data-ttu-id="216e9-207">该示例将 <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> 每个属性的属性设置为与成员标识符不同的值。</span><span class="sxs-lookup"><span data-stu-id="216e9-207">The example sets the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property for each attribute to a value different from the member identifier.</span></span>  
  
 [!code-cpp[Classic XmlAttributeAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlAttributeAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="216e9-208">获取或设置 XML 属性的复杂类型。</span><span class="sxs-lookup"><span data-stu-id="216e9-208">Gets or sets the complex type of the XML attribute.</span></span></summary>
        <value><span data-ttu-id="216e9-209">XML 属性的类型。</span><span class="sxs-lookup"><span data-stu-id="216e9-209">The type of the XML attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
