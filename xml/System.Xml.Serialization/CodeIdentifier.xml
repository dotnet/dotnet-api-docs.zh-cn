<Type Name="CodeIdentifier" FullName="System.Xml.Serialization.CodeIdentifier">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1f8820cd98bda64f2ef0ff7e05c5a17d9fd79e11" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86605070" /></Metadata><TypeSignature Language="C#" Value="public class CodeIdentifier" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CodeIdentifier extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.CodeIdentifier" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeIdentifier" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeIdentifier" />
  <TypeSignature Language="F#" Value="type CodeIdentifier = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.XmlSerializer" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="26a02-101">提供一些静态方法，用于将输入文本转换为代码实体的名称。</span><span class="sxs-lookup"><span data-stu-id="26a02-101">Provides static methods to convert input text into names for code entities.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26a02-102">类的方法 <xref:System.Xml.Serialization.CodeIdentifier> 由 xml 序列化基础结构使用，同时从 xml 元素和数据类型定义生成 .NET Framework 类型。</span><span class="sxs-lookup"><span data-stu-id="26a02-102">The methods of the <xref:System.Xml.Serialization.CodeIdentifier> class are used by the XML serialization infrastructure while producing .NET Framework types from XML element and data type definitions.</span></span> <span data-ttu-id="26a02-103">XML 元素或属性名称通常提供方法的输入文本。</span><span class="sxs-lookup"><span data-stu-id="26a02-103">XML element or attribute names typically provide the methods' input text.</span></span>  
  
 <span data-ttu-id="26a02-104">不需要 <xref:System.Xml.Serialization.CodeIdentifier> 直接从代码调用类的方法。</span><span class="sxs-lookup"><span data-stu-id="26a02-104">You do not need to call the methods of the <xref:System.Xml.Serialization.CodeIdentifier> class directly from your code.</span></span> <span data-ttu-id="26a02-105">相反，请使用 .NET Framework 提供的各种工具和 Api 来进行 XML 序列化，例如 <xref:System.Xml.Serialization.XmlSerializer> ，或使用 [Xml 架构定义工具 ( # A0) ](/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe) 工具。</span><span class="sxs-lookup"><span data-stu-id="26a02-105">Instead, use the various tools and APIs provided by the .NET Framework for XML serialization, such as the <xref:System.Xml.Serialization.XmlSerializer>, or the [XML Schema Definition Tool (Xsd.exe)](/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe) tool.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="26a02-106">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="26a02-106">XML Schema Definition Tool (Xsd.exe)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeIdentifier ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifier.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeIdentifier();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("This class should never get constructed as it contains only static methods.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This class should never get constructed as it contains only static methods.")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="26a02-107">初始化 <see cref="T:System.Xml.Serialization.CodeIdentifier" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="26a02-107">Initializes a new instance of the <see cref="T:System.Xml.Serialization.CodeIdentifier" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MakeCamel">
      <MemberSignature Language="C#" Value="public static string MakeCamel (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MakeCamel(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeCamel (identifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MakeCamel(System::String ^ identifier);" />
      <MemberSignature Language="F#" Value="static member MakeCamel : string -&gt; string" Usage="System.Xml.Serialization.CodeIdentifier.MakeCamel identifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier"><span data-ttu-id="26a02-108">代码实体的名称（如方法参数）通常取自 XML 元素或特性名称。</span><span class="sxs-lookup"><span data-stu-id="26a02-108">The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.</span></span></param>
        <summary><span data-ttu-id="26a02-109">从输入字符串生成 Camel 大小写格式的字符串。</span><span class="sxs-lookup"><span data-stu-id="26a02-109">Produces a camel-case string from an input string.</span></span></summary>
        <returns><span data-ttu-id="26a02-110">参数字符串的 Camel 大小写格式版本。</span><span class="sxs-lookup"><span data-stu-id="26a02-110">A camel-case version of the parameter string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26a02-111"><xref:System.Xml.Serialization.CodeIdentifier.MakeCamel%2A>如有必要，方法会将初始字符从大写转换为小写字母。</span><span class="sxs-lookup"><span data-stu-id="26a02-111">The <xref:System.Xml.Serialization.CodeIdentifier.MakeCamel%2A> method converts the initial character from an upper-case to lower-case letter, if necessary.</span></span>  
  
 <span data-ttu-id="26a02-112">不需要直接调用此方法。</span><span class="sxs-lookup"><span data-stu-id="26a02-112">You do not need to call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MakePascal">
      <MemberSignature Language="C#" Value="public static string MakePascal (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MakePascal(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakePascal (identifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MakePascal(System::String ^ identifier);" />
      <MemberSignature Language="F#" Value="static member MakePascal : string -&gt; string" Usage="System.Xml.Serialization.CodeIdentifier.MakePascal identifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier"><span data-ttu-id="26a02-113">代码实体的名称（如方法参数）通常取自 XML 元素或特性名称。</span><span class="sxs-lookup"><span data-stu-id="26a02-113">The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.</span></span></param>
        <summary><span data-ttu-id="26a02-114">从输入字符串生成 Pascal 大小写格式的字符串。</span><span class="sxs-lookup"><span data-stu-id="26a02-114">Produces a Pascal-case string from an input string.</span></span></summary>
        <returns><span data-ttu-id="26a02-115">参数字符串的 Pascal 大小写格式版本。</span><span class="sxs-lookup"><span data-stu-id="26a02-115">A Pascal-case version of the parameter string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26a02-116"><xref:System.Xml.Serialization.CodeIdentifier.MakePascal%2A>如有必要，方法会将初始字符从小写字母转换为大写字母。</span><span class="sxs-lookup"><span data-stu-id="26a02-116">The <xref:System.Xml.Serialization.CodeIdentifier.MakePascal%2A> method converts the initial character from a lower-case to upper-case letter, if necessary.</span></span>  
  
 <span data-ttu-id="26a02-117">不需要直接调用此方法。</span><span class="sxs-lookup"><span data-stu-id="26a02-117">You do not need to call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MakeValid">
      <MemberSignature Language="C#" Value="public static string MakeValid (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MakeValid(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeValid (identifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MakeValid(System::String ^ identifier);" />
      <MemberSignature Language="F#" Value="static member MakeValid : string -&gt; string" Usage="System.Xml.Serialization.CodeIdentifier.MakeValid identifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier"><span data-ttu-id="26a02-118">代码实体的名称（如方法参数）通常取自 XML 元素或特性名称。</span><span class="sxs-lookup"><span data-stu-id="26a02-118">The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.</span></span></param>
        <summary><span data-ttu-id="26a02-119">从输入字符串生成有效的代码实体名称。</span><span class="sxs-lookup"><span data-stu-id="26a02-119">Produces a valid code entity name from an input string.</span></span></summary>
        <returns><span data-ttu-id="26a02-120">可以用作代码标识符的字符串，如方法参数的名称。</span><span class="sxs-lookup"><span data-stu-id="26a02-120">A string that can be used as a code identifier, such as the name of a method parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26a02-121"><xref:System.Xml.Serialization.CodeIdentifier.MakeValid%2A>方法删除代码标识符中不能出现的任何字符。</span><span class="sxs-lookup"><span data-stu-id="26a02-121">The <xref:System.Xml.Serialization.CodeIdentifier.MakeValid%2A> method removes any characters that cannot appear in a code identifier.</span></span> <span data-ttu-id="26a02-122">如果没有任何字符有效，它将返回字符串 "Item"。</span><span class="sxs-lookup"><span data-stu-id="26a02-122">It returns the string "Item" if no characters are valid.</span></span> <span data-ttu-id="26a02-123">它将字符串 "Item" 的前缀为以无效开始字符开头的输入，例如，数字或货币符号。</span><span class="sxs-lookup"><span data-stu-id="26a02-123">It prefixes the string "Item" to an input that begins with an invalid start character, for example, a digit, or a currency symbol.</span></span>  
  
 <span data-ttu-id="26a02-124">不需要直接调用此方法。</span><span class="sxs-lookup"><span data-stu-id="26a02-124">You do not need to call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
