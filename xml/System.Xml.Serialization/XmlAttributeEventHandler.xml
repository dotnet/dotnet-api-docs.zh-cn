<Type Name="XmlAttributeEventHandler" FullName="System.Xml.Serialization.XmlAttributeEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f21f0a076d204bf0bcff42310db37e9616e57a90" /><Meta Name="ms.sourcegitcommit" Value="13a6cb6fba7e05947f15d8d6cc802703ae9c21d5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/18/2020" /><Meta Name="ms.locfileid" Value="90793349" /></Metadata><TypeSignature Language="C#" Value="public delegate void XmlAttributeEventHandler(object? sender, XmlAttributeEventArgs e);" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlAttributeEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAttributeEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub XmlAttributeEventHandler(sender As Object, e As XmlAttributeEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void XmlAttributeEventHandler(System::Object ^ sender, XmlAttributeEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type XmlAttributeEventHandler = delegate of obj * XmlAttributeEventArgs -&gt; unit" />
  <TypeSignature Language="C#" Value="public delegate void XmlAttributeEventHandler(object sender, XmlAttributeEventArgs e);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.XmlSerializer" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Xml.Serialization.XmlAttributeEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">事件源。</param>
    <param name="e">包含事件数据的 <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" />。</param>
    <summary>表示处理 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 的方法</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 创建 <xref:System.Xml.Serialization.XmlAttributeEventHandler> 委托时，需要标识用于处理事件的方法。 若要将事件与事件处理程序关联，请将该委托的一个实例添加到事件中。 除非移除了该委托，否则每当发生该事件时就会调用事件处理程序。 有关事件处理程序委托的详细信息，请参阅 [处理和引发事件](/dotnet/standard/events/)。  
  
 <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute>仅当使用方法反序列化对象时，才会发生此事件 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 。  
  
   
  
## Examples  
 下面的示例 `Group` 从名为 UnknownAttributes.xml 的文件中反序列化名为的类。 只要在文件中找到了类中没有相应成员的元素， <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> 就会发生该事件。 若要尝试该示例，请将以下 XML 代码粘贴到名为 UnknownAttributes.xml 的文件中。  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" GroupType = 'Technical' GroupNumber = '42' GroupBase = 'Red'>  
  <GroupName>MyGroup</GroupName>  
</Group>  
```  
  
 [!code-cpp[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlNodeEventHandler" />
    <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization">XML 序列化简介</related>
    <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream">如何：指定 XML 流的替代元素名称</related>
    <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes">使用属性控制 XML 序列化</related>
    <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization">XML 序列化示例</related>
    <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe">XML Schema Definition Tool (Xsd.exe)</related>
  </Docs>
</Type>
