<Type Name="XmlElementAttribute" FullName="System.Xml.Serialization.XmlElementAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0e803224fd781da49b5a927863066388dbb0b78a" /><Meta Name="ms.sourcegitcommit" Value="13a6cb6fba7e05947f15d8d6cc802703ae9c21d5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/18/2020" /><Meta Name="ms.locfileid" Value="90794269" /></Metadata><TypeSignature Language="C#" Value="public class XmlElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml" FromVersion="4.0.0.0" To="System.Xml.XmlSerializer" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="4.0.0.0" To="System.Xml.XmlSerializer" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="5.0.0.0" To="System.Xml.ReaderWriter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="4.1.0.0" To="System.Xml.ReaderWriter" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="4.1.1.0" To="System.Xml.ReaderWriter" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Xml.XmlSerializer" FromVersion="4.1.2.0" To="System.Xml.ReaderWriter" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
    <TypeForwarding From="System.Xml.Serialization" FromVersion="4.0.0.0" To="System.Xml" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="270b3-101">指示公共字段或属性在 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化或反序列化包含它们的对象时表示 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="270b3-101">Indicates that a public field or property represents an XML element when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes or deserializes the object that contains it.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="270b3-102"><xref:System.Xml.Serialization.XmlElementAttribute>属于一系列属性，这些属性控制 <xref:System.Xml.Serialization.XmlSerializer> 序列化或反序列化对象的方式。</span><span class="sxs-lookup"><span data-stu-id="270b3-102">The <xref:System.Xml.Serialization.XmlElementAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="270b3-103">有关类似属性的完整列表，请参阅 [控制 XML 序列化的属性](/dotnet/standard/serialization/attributes-that-control-xml-serialization)。</span><span class="sxs-lookup"><span data-stu-id="270b3-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](/dotnet/standard/serialization/attributes-that-control-xml-serialization).</span></span>  
  
 <span data-ttu-id="270b3-104">XML 文档通常包含 XML 元素，每个元素都由三个部分组成：一个开始标记，其中包含可能的属性、结束标记和标记之间的数据。</span><span class="sxs-lookup"><span data-stu-id="270b3-104">An XML document usually contains XML elements, each of which consists of three parts: an opening tag with possible attributes, a closing tag, and the data between the tags.</span></span> <span data-ttu-id="270b3-105">XML 标记可以嵌套，也就是说，标记之间的数据也可以是 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="270b3-105">XML tags can be nested--that is, the data between tags can also be XML elements.</span></span> <span data-ttu-id="270b3-106">其中一个元素要包含另一个元素的容量允许文档包含数据的层次结构。</span><span class="sxs-lookup"><span data-stu-id="270b3-106">This capacity of one element to enclose another allows the document to contain hierarchies of data.</span></span> <span data-ttu-id="270b3-107">XML 元素还可以包含特性。</span><span class="sxs-lookup"><span data-stu-id="270b3-107">An XML element can also include attributes.</span></span>  
  
 <span data-ttu-id="270b3-108">将应用于 <xref:System.Xml.Serialization.XmlElementAttribute> 公共字段或公共读/写属性，以控制 XML 元素的特性，例如元素名称和命名空间。</span><span class="sxs-lookup"><span data-stu-id="270b3-108">Apply the <xref:System.Xml.Serialization.XmlElementAttribute> to public fields or public read/write properties to control characteristics of the XML elements such as the element name and namespace.</span></span>  
  
 <span data-ttu-id="270b3-109"><xref:System.Xml.Serialization.XmlElementAttribute>可以多次应用于返回对象数组的字段。</span><span class="sxs-lookup"><span data-stu-id="270b3-109">The <xref:System.Xml.Serialization.XmlElementAttribute> can be applied multiple times to a field that returns an array of objects.</span></span> <span data-ttu-id="270b3-110">这样做的目的是通过属性指定 (<xref:System.Xml.Serialization.XmlElementAttribute.Type%2A>) 可以插入到数组中的不同类型。</span><span class="sxs-lookup"><span data-stu-id="270b3-110">The purpose of this is to specify (through the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property) different types that can be inserted into the array.</span></span> <span data-ttu-id="270b3-111">例如，以下 c # 代码中的数组接受字符串和整数。</span><span class="sxs-lookup"><span data-stu-id="270b3-111">For example, the array in the following C# code accepts both strings and integers.</span></span>  
  
```  
public class Things{  
   [XmlElement(Type = typeof(string)),  
   XmlElement(Type = typeof(int))]  
   public object[] StringsAndInts;  
}  
```  
  
 <span data-ttu-id="270b3-112">这会生成类似于以下内容的 XML。</span><span class="sxs-lookup"><span data-stu-id="270b3-112">This results in XML that might resemble the following.</span></span>  
  
```  
<Things>  
   <string>Hello</string>  
   <int>999</int>  
   <string>World</string>  
</Things>  
```  
  
 <span data-ttu-id="270b3-113">请注意，在不指定属性值的情况下应用多次时 <xref:System.Xml.Serialization.XmlElementAttribute> <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> ，元素将按可接受对象的类型命名。</span><span class="sxs-lookup"><span data-stu-id="270b3-113">Note that when you apply the <xref:System.Xml.Serialization.XmlElementAttribute> multiple times without specifying an <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property value, the elements are named after the type of the acceptable objects.</span></span>  
  
 <span data-ttu-id="270b3-114">如果将应用于 <xref:System.Xml.Serialization.XmlElementAttribute> 返回数组的字段或属性，则数组中的项将编码为 XML 元素的序列。</span><span class="sxs-lookup"><span data-stu-id="270b3-114">If you apply the <xref:System.Xml.Serialization.XmlElementAttribute> to a field or property that returns an array, the items in the array are encoded as a sequence of XML elements.</span></span>  
  
 <span data-ttu-id="270b3-115">相反 <xref:System.Xml.Serialization.XmlElementAttribute> ，如果未应用于这类字段或属性，则数组中的项将编码为一系列元素，这些元素嵌套在一个以字段或属性命名的元素下。</span><span class="sxs-lookup"><span data-stu-id="270b3-115">In contrast if an <xref:System.Xml.Serialization.XmlElementAttribute> is not applied to such a field or property, the items in the array are encoded as a sequence of elements, nested under an element named after the field or property.</span></span> <span data-ttu-id="270b3-116"> (使用 <xref:System.Xml.Serialization.XmlArrayAttribute> 和 <xref:System.Xml.Serialization.XmlArrayItemAttribute> 属性来控制序列化数组的方式。 ) </span><span class="sxs-lookup"><span data-stu-id="270b3-116">(Use the <xref:System.Xml.Serialization.XmlArrayAttribute> and <xref:System.Xml.Serialization.XmlArrayItemAttribute> attributes to control how an array is serialized.)</span></span>  
  
 <span data-ttu-id="270b3-117">您可以设置 <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> 属性，以指定派生自原始字段或属性的类型的类型，即您已应用的字段或属性 <xref:System.Xml.Serialization.XmlElementAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="270b3-117">You can set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a type that is derived from the type of the original field or property--that is, the field or property to which you have applied the <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span>  
  
 <span data-ttu-id="270b3-118">如果字段或属性返回 <xref:System.Collections.ArrayList> ，则可以将多个实例应用于 <xref:System.Xml.Serialization.XmlElementAttribute> 成员。</span><span class="sxs-lookup"><span data-stu-id="270b3-118">If a field or property returns an <xref:System.Collections.ArrayList>, you can apply multiple instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the member.</span></span> <span data-ttu-id="270b3-119">对于每个实例，将 <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> 属性设置为可插入到数组中的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="270b3-119">For each instance, set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to a type of object that can be inserted into the array.</span></span>  
  
 <span data-ttu-id="270b3-120">有关使用特性的详细信息，请参阅 [特性](/dotnet/standard/attributes/)。</span><span class="sxs-lookup"><span data-stu-id="270b3-120">For more information about using attributes, see [Attributes](/dotnet/standard/attributes/).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="270b3-121">您可以 `XmlElement` 在代码中使用该单词而不是更长的时间 <xref:System.Xml.Serialization.XmlElementAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="270b3-121">You can use the word `XmlElement` in your code instead of the longer <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="270b3-122">下面的示例对名为的类进行序列化 `Group` ，并将其应用于 <xref:System.Xml.Serialization.XmlElementAttribute> 其多个成员。</span><span class="sxs-lookup"><span data-stu-id="270b3-122">The following example serializes a class named `Group` and applies the <xref:System.Xml.Serialization.XmlElementAttribute> to several of its members.</span></span> <span data-ttu-id="270b3-123">名为的字段 `Employees` 返回对象的数组 `Employee` 。</span><span class="sxs-lookup"><span data-stu-id="270b3-123">The field named `Employees` returns an array of `Employee` objects.</span></span> <span data-ttu-id="270b3-124">在这种情况下，将 <xref:System.Xml.Serialization.XmlElementAttribute> 指定生成的 XML 将不会嵌套 (这是数组中项的默认行为) 。</span><span class="sxs-lookup"><span data-stu-id="270b3-124">In this case, the <xref:System.Xml.Serialization.XmlElementAttribute> specifies that the resulting XML will not be nested (which is the default behavior of items in an array).</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlArrayAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlElementAttributes" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlElements" />
    <altmember cref="T:System.Xml.Serialization.XmlRootAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <related type="Article" href="/dotnet/standard/serialization/introducing-xml-serialization"><span data-ttu-id="270b3-125">XML 序列化简介</span><span class="sxs-lookup"><span data-stu-id="270b3-125">Introducing XML Serialization</span></span></related>
    <related type="Article" href="/dotnet/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream"><span data-ttu-id="270b3-126">如何：指定 XML 流的替代元素名称</span><span class="sxs-lookup"><span data-stu-id="270b3-126">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
    <related type="Article" href="/dotnet/standard/serialization/controlling-xml-serialization-using-attributes"><span data-ttu-id="270b3-127">使用属性控制 XML 序列化</span><span class="sxs-lookup"><span data-stu-id="270b3-127">Controlling XML Serialization Using Attributes</span></span></related>
    <related type="Article" href="/dotnet/standard/serialization/examples-of-xml-serialization"><span data-ttu-id="270b3-128">XML 序列化示例</span><span class="sxs-lookup"><span data-stu-id="270b3-128">Examples of XML Serialization</span></span></related>
    <related type="Article" href="/dotnet/standard/serialization/xml-schema-definition-tool-xsd-exe"><span data-ttu-id="270b3-129">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="270b3-129">XML Schema Definition Tool (Xsd.exe)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="270b3-130">初始化 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="270b3-130">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="270b3-131">初始化 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="270b3-131">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="270b3-132">下面的示例将应用于 <xref:System.Xml.Serialization.XmlElementAttribute> 类。</span><span class="sxs-lookup"><span data-stu-id="270b3-132">The following example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to a class.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : string -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="270b3-133">序列化成员的 XML 元素名。</span><span class="sxs-lookup"><span data-stu-id="270b3-133">The XML element name of the serialized member.</span></span></param>
        <summary><span data-ttu-id="270b3-134">初始化 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 类的新实例，并指定 XML 元素的名称。</span><span class="sxs-lookup"><span data-stu-id="270b3-134">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class and specifies the name of the XML element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="270b3-135">默认情况下，在 <xref:System.Xml.Serialization.XmlSerializer> 序列化类实例时，使用成员名作为 XML 元素名称。</span><span class="sxs-lookup"><span data-stu-id="270b3-135">By default, the <xref:System.Xml.Serialization.XmlSerializer> uses the member name as the XML element name when serializing a class instance.</span></span> <span data-ttu-id="270b3-136">例如，名为的字段将 `Vehicle` 生成一个名为的 XML 元素 `Vehicle` 。</span><span class="sxs-lookup"><span data-stu-id="270b3-136">For example, a field named `Vehicle` generates an XML element named `Vehicle`.</span></span> <span data-ttu-id="270b3-137">但是，如果需要其他元素（如 `Cars` ），请将其传递到 `elementName` 参数中。</span><span class="sxs-lookup"><span data-stu-id="270b3-137">However if you need a different element, such as `Cars`, pass it in the `elementName` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="270b3-138">下面的示例演示一个简单的类，其中包含一个名为的字段 `Vehicles` 。</span><span class="sxs-lookup"><span data-stu-id="270b3-138">The following example shows a simple class that contains a single field named `Vehicles`.</span></span> <span data-ttu-id="270b3-139">该示例将应用 <xref:System.Xml.Serialization.XmlElementAttribute> 到字段并包括 `elementName` 参数，从而指示 <xref:System.Xml.Serialization.XmlSerializer> 生成名为 "汽车" 的 XML 元素，而不是 "车辆"。</span><span class="sxs-lookup"><span data-stu-id="270b3-139">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the field and includes the `elementName` parameter, thereby instructing the <xref:System.Xml.Serialization.XmlSerializer> to generate XML elements named "Cars" rather than "Vehicles".</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : Type -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="270b3-140">从该成员的类型派生的对象的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="270b3-140">The <see cref="T:System.Type" /> of an object derived from the member's type.</span></span></param>
        <summary><span data-ttu-id="270b3-141">初始化 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 类的新实例，并指定 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 所应用到的成员的类型。</span><span class="sxs-lookup"><span data-stu-id="270b3-141">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class and specifies a type for the member to which the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> is applied.</span></span> <span data-ttu-id="270b3-142">此类型在序列化或反序列化包含它的对象时由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 使用。</span><span class="sxs-lookup"><span data-stu-id="270b3-142">This type is used by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> when serializing or deserializing object that contains it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="270b3-143">使用 `type` 参数指定派生自基类的类型。</span><span class="sxs-lookup"><span data-stu-id="270b3-143">Use the `type` parameter to specify a type that is derived from a base class.</span></span> <span data-ttu-id="270b3-144">例如，假设名为的属性 `MyAnimal` 返回 `Animal` 对象。</span><span class="sxs-lookup"><span data-stu-id="270b3-144">For example, suppose a property named `MyAnimal` returns an `Animal` object.</span></span> <span data-ttu-id="270b3-145">你需要增强对象，以便创建一个从类继承的名为 `Mammal` 的新类 `Animal` 。</span><span class="sxs-lookup"><span data-stu-id="270b3-145">You want to enhance the object, so you create a new class named `Mammal` that inherits from the `Animal` class.</span></span> <span data-ttu-id="270b3-146">若要指示在 <xref:System.Xml.Serialization.XmlSerializer> `Mammal` 序列化属性时接受类 `MyAnimal` ，请将类的传递 <xref:System.Type> `Mammal` 给构造函数。</span><span class="sxs-lookup"><span data-stu-id="270b3-146">To instruct the <xref:System.Xml.Serialization.XmlSerializer> to accept the `Mammal` class when it serializes the `MyAnimal` property, pass the <xref:System.Type> of the `Mammal` class to the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="270b3-147">下面的示例序列化一个名为的类，该类 `Orchestra` 包含一个名为的字段 `Instruments` ，该字段返回一个 `Instrument` 对象数组。</span><span class="sxs-lookup"><span data-stu-id="270b3-147">The following example serializes a class named `Orchestra` that contains a single field named `Instruments`, which returns an array of `Instrument` objects.</span></span> <span data-ttu-id="270b3-148">名为的第二个类 `Brass` 从 `Instrument` 类继承。</span><span class="sxs-lookup"><span data-stu-id="270b3-148">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="270b3-149">该示例将应用 <xref:System.Xml.Serialization.XmlElementAttribute> 到 `Instruments` 字段，并指定 `Brass` 类型， `Instruments` 以允许字段接受 `Brass` 对象。</span><span class="sxs-lookup"><span data-stu-id="270b3-149">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the `Instruments` field, and specifies the `Brass` type, allowing the `Instruments` field to accept `Brass` objects.</span></span> <span data-ttu-id="270b3-150">该示例还通过设置属性来指定 XML 元素的名称 <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="270b3-150">The example also specifies the name of the XML element by setting the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (string elementName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String, type As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(System::String ^ elementName, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : string * Type -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute (elementName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="270b3-151">序列化成员的 XML 元素名。</span><span class="sxs-lookup"><span data-stu-id="270b3-151">The XML element name of the serialized member.</span></span></param>
        <param name="type"><span data-ttu-id="270b3-152">从该成员的类型派生的对象的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="270b3-152">The <see cref="T:System.Type" /> of an object derived from the member's type.</span></span></param>
        <summary><span data-ttu-id="270b3-153">初始化 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 的新实例，并指定 XML 元素的名称和 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 应用到的成员的派生类型。</span><span class="sxs-lookup"><span data-stu-id="270b3-153">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> and specifies the name of the XML element and a derived type for the member to which the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> is applied.</span></span> <span data-ttu-id="270b3-154">此成员类型在 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化包含它的对象时使用。</span><span class="sxs-lookup"><span data-stu-id="270b3-154">This member type is used when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes the object that contains it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="270b3-155">默认情况下，在 <xref:System.Xml.Serialization.XmlSerializer> 序列化类实例时，使用成员名作为 XML 元素名称。</span><span class="sxs-lookup"><span data-stu-id="270b3-155">By default, the <xref:System.Xml.Serialization.XmlSerializer> uses the member name as the XML element name when serializing a class instance.</span></span> <span data-ttu-id="270b3-156">例如，名为的字段将 `Vehicle` 生成一个名为的 XML 元素 `Vehicle` 。</span><span class="sxs-lookup"><span data-stu-id="270b3-156">For example, a field named `Vehicle` generates an XML element named `Vehicle`.</span></span> <span data-ttu-id="270b3-157">但是，如果需要其他元素（如 `Cars` ），请将其传递到 `elementName` 参数中。</span><span class="sxs-lookup"><span data-stu-id="270b3-157">However, if you need a different element, such as `Cars`, pass it in the `elementName` parameter.</span></span>  
  
 <span data-ttu-id="270b3-158">使用 `type` 参数指定派生自基类的类型。</span><span class="sxs-lookup"><span data-stu-id="270b3-158">Use the `type` parameter to specify a type that is derived from a base class.</span></span> <span data-ttu-id="270b3-159">例如，假设名为的属性 `MyAnimal` 返回 `Animal` 对象。</span><span class="sxs-lookup"><span data-stu-id="270b3-159">For example, suppose a property named `MyAnimal` returns an `Animal` object.</span></span> <span data-ttu-id="270b3-160">你需要增强对象，以便创建一个从类继承的名为 `Mammal` 的新类 `Animal` 。</span><span class="sxs-lookup"><span data-stu-id="270b3-160">You want to enhance the object, so you create a new class named `Mammal` that inherits from the `Animal` class.</span></span> <span data-ttu-id="270b3-161">若要指示在 <xref:System.Xml.Serialization.XmlSerializer> `Mammal` 序列化属性时接受类 `MyAnimal` ，请将类的传递 <xref:System.Type> `Mammal` 给构造函数。</span><span class="sxs-lookup"><span data-stu-id="270b3-161">To instruct the <xref:System.Xml.Serialization.XmlSerializer> to accept the `Mammal` class when it serializes the `MyAnimal` property, pass the <xref:System.Type> of the `Mammal` class to the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="270b3-162">下面的示例序列化一个名为的类，该类 `Orchestra` 包含一个名为的字段 `Instruments` ，该字段返回一个 `Instrument` 对象数组。</span><span class="sxs-lookup"><span data-stu-id="270b3-162">The following example serializes a class named `Orchestra` that contains a single field named `Instruments`, which returns an array of `Instrument` objects.</span></span> <span data-ttu-id="270b3-163">名为的第二个类 `Brass` 从 `Instrument` 类继承。</span><span class="sxs-lookup"><span data-stu-id="270b3-163">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="270b3-164">该示例将应用 <xref:System.Xml.Serialization.XmlElementAttribute> 到 `Instruments` 字段，并指定 `Brass` 类型， `Instruments` 以允许字段接受 `Brass` 对象。</span><span class="sxs-lookup"><span data-stu-id="270b3-164">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the `Instruments` field, and specifies the `Brass` type, allowing the `Instruments` field to accept `Brass` objects.</span></span> <span data-ttu-id="270b3-165">该示例还通过设置属性来指定 XML 元素的名称 <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="270b3-165">The example also specifies the name of the XML element by setting the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.DataType" />
      <MemberSignature Language="C#" Value="public string? DataType { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="270b3-166">获取或设置由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成的 XMl 元素的 XML 架构定义 (XSD) 数据类型。</span><span class="sxs-lookup"><span data-stu-id="270b3-166">Gets or sets the XML Schema definition (XSD) data type of the XML element generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span></span></summary>
        <value><span data-ttu-id="270b3-167">XML 架构数据类型。</span><span class="sxs-lookup"><span data-stu-id="270b3-167">An XML Schema data type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="270b3-168">下表列出了具有 their.NET 等效项的 XML 架构简单数据类型。</span><span class="sxs-lookup"><span data-stu-id="270b3-168">The following table lists the XML Schema simple data types with their.NET equivalents.</span></span>  
  
 <span data-ttu-id="270b3-169">对于 XML 架构 `base64Binary` 和 `hexBinary` 数据类型，请使用结构的数组 <xref:System.Byte> ，并 <xref:System.Xml.Serialization.XmlElementAttribute> <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> 根据需要将设置为 "base64Binary" 或 "hexBinary" 的。</span><span class="sxs-lookup"><span data-stu-id="270b3-169">For the XML Schema `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.XmlElementAttribute> with the <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="270b3-170">对于 XML 架构 `time` 和 `date` 数据类型，请使用 <xref:System.DateTime> 类型，并将 <xref:System.Xml.Serialization.XmlElementAttribute> <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> 设置为 "日期" 或 "时间"。</span><span class="sxs-lookup"><span data-stu-id="270b3-170">For the XML Schema `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlElementAttribute> with the <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="270b3-171">对于映射到字符串的每个 XML 架构类型，应用 <xref:System.Xml.Serialization.XmlElementAttribute> 其 <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> 属性设置为 XML 架构类型的。</span><span class="sxs-lookup"><span data-stu-id="270b3-171">For every XML Schema type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlElementAttribute> with its <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> property set to the XML Schema type.</span></span> <span data-ttu-id="270b3-172">这可能会更改序列化格式，而不仅是成员的架构。</span><span class="sxs-lookup"><span data-stu-id="270b3-172">It is possible that this can change the serialization format, not only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="270b3-173">属性区分大小写，因此必须将其精确设置为 XML 架构数据类型之一。</span><span class="sxs-lookup"><span data-stu-id="270b3-173">The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="270b3-174">将二进制数据作为 XML 元素传递比将其作为 XML 架构特性传递更为有效。</span><span class="sxs-lookup"><span data-stu-id="270b3-174">Passing binary data as an XML element is more efficient than passing it as an XML Schema attribute.</span></span>  
  
 <span data-ttu-id="270b3-175">有关 XML 数据类型的详细信息，请参阅名为 XML Schema 的万维网联合会文档 [第2部分：数据类型](https://www.w3.org/TR/xmlschema-2/)。</span><span class="sxs-lookup"><span data-stu-id="270b3-175">For more information about XML data types, see the World Wide Web Consortium document named [XML Schema Part 2: Datatypes](https://www.w3.org/TR/xmlschema-2/).</span></span>  
  
|<span data-ttu-id="270b3-176">XSD 数据类型</span><span class="sxs-lookup"><span data-stu-id="270b3-176">XSD data type</span></span>|<span data-ttu-id="270b3-177">.NET 数据类型</span><span class="sxs-lookup"><span data-stu-id="270b3-177">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="270b3-178">anyURI</span><span class="sxs-lookup"><span data-stu-id="270b3-178">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-179">base64Binary</span><span class="sxs-lookup"><span data-stu-id="270b3-179">base64Binary</span></span>|<span data-ttu-id="270b3-180">对象数组 <xref:System.Byte></span><span class="sxs-lookup"><span data-stu-id="270b3-180">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="270b3-181">boolean</span><span class="sxs-lookup"><span data-stu-id="270b3-181">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="270b3-182">字节</span><span class="sxs-lookup"><span data-stu-id="270b3-182">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="270b3-183">日期</span><span class="sxs-lookup"><span data-stu-id="270b3-183">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="270b3-184">dateTime</span><span class="sxs-lookup"><span data-stu-id="270b3-184">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="270b3-185">Decimal</span><span class="sxs-lookup"><span data-stu-id="270b3-185">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="270b3-186">Double</span><span class="sxs-lookup"><span data-stu-id="270b3-186">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="270b3-187">ENTITY</span><span class="sxs-lookup"><span data-stu-id="270b3-187">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-188">条目</span><span class="sxs-lookup"><span data-stu-id="270b3-188">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-189">FLOAT</span><span class="sxs-lookup"><span data-stu-id="270b3-189">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="270b3-190">gDay</span><span class="sxs-lookup"><span data-stu-id="270b3-190">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-191">gMonth</span><span class="sxs-lookup"><span data-stu-id="270b3-191">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-192">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="270b3-192">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-193">gYear</span><span class="sxs-lookup"><span data-stu-id="270b3-193">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-194">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="270b3-194">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-195">hexBinary</span><span class="sxs-lookup"><span data-stu-id="270b3-195">hexBinary</span></span>|<span data-ttu-id="270b3-196">对象数组 <xref:System.Byte></span><span class="sxs-lookup"><span data-stu-id="270b3-196">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="270b3-197">ID</span><span class="sxs-lookup"><span data-stu-id="270b3-197">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-198">IDREF</span><span class="sxs-lookup"><span data-stu-id="270b3-198">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-199">IDREFS</span><span class="sxs-lookup"><span data-stu-id="270b3-199">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-200">int</span><span class="sxs-lookup"><span data-stu-id="270b3-200">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="270b3-201">整型</span><span class="sxs-lookup"><span data-stu-id="270b3-201">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-202">语言</span><span class="sxs-lookup"><span data-stu-id="270b3-202">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-203">long</span><span class="sxs-lookup"><span data-stu-id="270b3-203">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="270b3-204">“属性”</span><span class="sxs-lookup"><span data-stu-id="270b3-204">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-205">NCName</span><span class="sxs-lookup"><span data-stu-id="270b3-205">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-206">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="270b3-206">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-207">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="270b3-207">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-208">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="270b3-208">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-209">normalizedString</span><span class="sxs-lookup"><span data-stu-id="270b3-209">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-210">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="270b3-210">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-211">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="270b3-211">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-212">NOTATION</span><span class="sxs-lookup"><span data-stu-id="270b3-212">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-213">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="270b3-213">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-214">QName</span><span class="sxs-lookup"><span data-stu-id="270b3-214">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="270b3-215">duration</span><span class="sxs-lookup"><span data-stu-id="270b3-215">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-216">字符串</span><span class="sxs-lookup"><span data-stu-id="270b3-216">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-217">short</span><span class="sxs-lookup"><span data-stu-id="270b3-217">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="270b3-218">time</span><span class="sxs-lookup"><span data-stu-id="270b3-218">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="270b3-219">令牌</span><span class="sxs-lookup"><span data-stu-id="270b3-219">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="270b3-220">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="270b3-220">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="270b3-221">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="270b3-221">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="270b3-222">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="270b3-222">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="270b3-223">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="270b3-223">unsignedShort</span></span>|<xref:System.UInt16>|  
  
   
  
## Examples  
 <span data-ttu-id="270b3-224">下面的示例序列化一个名为的类，该类 `Group` 包含一个名为的字段 `ExtraInfo` ，该字段返回 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="270b3-224">The following example serializes a class named `Group` that contains a field named `ExtraInfo`, which returns an <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="270b3-225">该示例将的两个实例应用于 <xref:System.Xml.Serialization.XmlElementAttribute> 字段，并 <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> 为每个实例指定不同的值。</span><span class="sxs-lookup"><span data-stu-id="270b3-225">The example applies two instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the field and specifies different <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> values for each instance.</span></span> <span data-ttu-id="270b3-226">每个实例都允许 <xref:System.Xml.Serialization.XmlSerializer> 对插入到数组中的指定类型进行序列化。</span><span class="sxs-lookup"><span data-stu-id="270b3-226">Each instance enables the <xref:System.Xml.Serialization.XmlSerializer> to serialize the specified types inserted into the array.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="270b3-227">已指定的 XML 架构数据类型无法映射到 .NET 数据类型。</span><span class="sxs-lookup"><span data-stu-id="270b3-227">The XML Schema data type you have specified cannot be mapped to the.NET data type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.ElementName" />
      <MemberSignature Language="C#" Value="public string? ElementName { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="270b3-228">获取或设置生成的 XML 元素的名称。</span><span class="sxs-lookup"><span data-stu-id="270b3-228">Gets or sets the name of the generated XML element.</span></span></summary>
        <value><span data-ttu-id="270b3-229">生成的 XML 元素的名称。</span><span class="sxs-lookup"><span data-stu-id="270b3-229">The name of the generated XML element.</span></span> <span data-ttu-id="270b3-230">默认值为成员标识符。</span><span class="sxs-lookup"><span data-stu-id="270b3-230">The default is the member identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="270b3-231"><xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>如果希望生成的 XML 元素的名称与成员的标识符不同，请指定。</span><span class="sxs-lookup"><span data-stu-id="270b3-231">Specify an <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="270b3-232"><xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A>如果生成的 xml 文档使用 XML 命名空间来区分名称相同的成员，则可以将相同的值设置为多个类成员。</span><span class="sxs-lookup"><span data-stu-id="270b3-232">You can set the same <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> value to more than one class member if the generated XML document uses XML namespaces to distinguish between the identically named members.</span></span> <span data-ttu-id="270b3-233">有关如何在 XML 文档中使用命名空间和带前缀名称的详细信息，请参见 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 类。</span><span class="sxs-lookup"><span data-stu-id="270b3-233">For details on how to use namespaces and prefixed names in the XML document, see the <xref:System.Xml.Serialization.XmlSerializerNamespaces> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="270b3-234">下面的示例将的 <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> 属性设置 <xref:System.Xml.Serialization.XmlElementAttribute> 为新值。</span><span class="sxs-lookup"><span data-stu-id="270b3-234">The following example sets the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property of an <xref:System.Xml.Serialization.XmlElementAttribute> to a new value.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName" />
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Xml.Schema.XmlSchemaForm with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="270b3-235">获取或设置一个值，该值指示元素是否是限定的。</span><span class="sxs-lookup"><span data-stu-id="270b3-235">Gets or sets a value that indicates whether the element is qualified.</span></span></summary>
        <value><span data-ttu-id="270b3-236"><see cref="T:System.Xml.Schema.XmlSchemaForm" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="270b3-236">One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values.</span></span> <span data-ttu-id="270b3-237">默认值为 <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />。</span><span class="sxs-lookup"><span data-stu-id="270b3-237">The default is <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="270b3-238"><xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A>属性确定 XML 元素是否是限定的或非限定的。</span><span class="sxs-lookup"><span data-stu-id="270b3-238">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property determines whether an XML element is qualified or unqualified.</span></span> <span data-ttu-id="270b3-239"><xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A>属性符合万维网联合会1999规范，即[XML 中的命名空间](https://www.w3.org/TR/1999/REC-xml-names-19990114/)。</span><span class="sxs-lookup"><span data-stu-id="270b3-239">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property conforms to the World Wide Web Consortium 1999 specification, [Namespaces in XML](https://www.w3.org/TR/1999/REC-xml-names-19990114/).</span></span>  
  
 <span data-ttu-id="270b3-240">如果将 <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> 属性设置为任何值，尝试将 <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> 属性设置为会 `XmlSchemaForm.Unqualified` 引发异常。</span><span class="sxs-lookup"><span data-stu-id="270b3-240">If the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property is set to any value, attempting to set the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified` throws an exception.</span></span> <span data-ttu-id="270b3-241">默认设置 `XmlSchemaForm.None` 指示 <xref:System.Xml.Serialization.XmlSerializer> 检查 XML 文档的架构，以确定命名空间是否是限定的。</span><span class="sxs-lookup"><span data-stu-id="270b3-241">The default setting, `XmlSchemaForm.None`, instructs the <xref:System.Xml.Serialization.XmlSerializer> to check the schema for the XML document to determine whether the namespace is qualified.</span></span> <span data-ttu-id="270b3-242">如果架构未指定单个元素或属性的值，则将 <xref:System.Xml.Serialization.XmlSerializer> 使用 `elementFormDefault` 和 `attributeFormDefault` 值来确定是否限定了某个元素或属性。</span><span class="sxs-lookup"><span data-stu-id="270b3-242">If the schema does not specify a value for an individual element or attribute, the <xref:System.Xml.Serialization.XmlSerializer> uses the `elementFormDefault` and `attributeFormDefault` values to determine whether an element or attribute is qualified.</span></span> <span data-ttu-id="270b3-243">以下 XML 代码显示了一个架构：</span><span class="sxs-lookup"><span data-stu-id="270b3-243">The following XML code shows a schema:</span></span>  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified"... >  
 <element name="Name"/>  
 <attribute name="Number"/>  
</schema>  
```  
  
 <span data-ttu-id="270b3-244">当 <xref:System.Xml.Serialization.XmlSerializer> 读取架构时，和的 <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> 值 `Name` `Number` 为 `XmlSchemaForm.None` ，但 `Name` 元素是限定的，而元素 `Number` 是非限定的。</span><span class="sxs-lookup"><span data-stu-id="270b3-244">When the <xref:System.Xml.Serialization.XmlSerializer> reads the schema, the <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> value for both the `Name` and `Number` is `XmlSchemaForm.None`, but the `Name` element is qualified, while the `Number` element is unqualified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="270b3-245">下面的示例将 <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> 属性设置为 `XmlSchemaForm.Unqualified` 。</span><span class="sxs-lookup"><span data-stu-id="270b3-245">The following example sets the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified`.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="270b3-246">获取或设置一个值，该值指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否必须将设置为 <see langword="null" /> 的成员序列化为 <see langword="xsi:nil" /> 属性设置为 <see langword="true" /> 的空标记。</span><span class="sxs-lookup"><span data-stu-id="270b3-246">Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a member that is set to <see langword="null" /> as an empty tag with the <see langword="xsi:nil" /> attribute set to <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="270b3-247">如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 生成 <see langword="true" /> 属性，则为 <see langword="xsi:nil" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="270b3-247"><see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates the <see langword="xsi:nil" /> attribute; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="270b3-248">结构的 XML 架构规范允许 XML 文档显式通知缺少某个元素的内容。</span><span class="sxs-lookup"><span data-stu-id="270b3-248">The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</span></span> <span data-ttu-id="270b3-249">此类元素包含将特性 `xsi:nil` 设置为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="270b3-249">Such an element contains the attribute `xsi:nil` set to `true`.</span></span> <span data-ttu-id="270b3-250">有关详细信息，请参阅万维网联合会规范 [XML 架构第1部分：结构](https://www.w3.org/TR/xmlschema-1/)。</span><span class="sxs-lookup"><span data-stu-id="270b3-250">For more information, see the World Wide Web Consortium specification, [XML Schema Part 1: Structures](https://www.w3.org/TR/xmlschema-1/).</span></span>
  
 <span data-ttu-id="270b3-251">如果将 <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> 属性设置为 `true` ，则 `xsi:nil` 为已设置为的类成员生成属性 `null` 。</span><span class="sxs-lookup"><span data-stu-id="270b3-251">If the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property is set to `true`, the `xsi:nil` attribute is generated for class members that have been set to `null`.</span></span> <span data-ttu-id="270b3-252">例如，如果将名为的字段设置 `MyStringArray` 为 `null` ，则会 <xref:System.Xml.Serialization.XmlSerializer> 生成以下 XML 代码。</span><span class="sxs-lookup"><span data-stu-id="270b3-252">For example if you set a field named `MyStringArray` to `null`, the <xref:System.Xml.Serialization.XmlSerializer> generates the following XML code.</span></span>  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 <span data-ttu-id="270b3-253">如果 <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> 属性为 `false` ，则不会为已设置为的类成员生成 XML 元素 `null` 。</span><span class="sxs-lookup"><span data-stu-id="270b3-253">If the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property is `false`, no XML element is generated for class members that have been set to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="270b3-254">不能将属性应用于 <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> 类型为值类型的成员，因为值类型不能包含 `null` 。</span><span class="sxs-lookup"><span data-stu-id="270b3-254">You cannot apply the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property to a member typed as a value type because a value type cannot contain `null`.</span></span> <span data-ttu-id="270b3-255">此外，不能将此属性设置为可 `false` 为 null 的值类型。</span><span class="sxs-lookup"><span data-stu-id="270b3-255">Additionally, you cannot set this property to `false` for nullable value types.</span></span> <span data-ttu-id="270b3-256">当这样的类型为时 `null` ，将通过将设置 `xsi:nil` 为来序列化这些类型 `true` 。</span><span class="sxs-lookup"><span data-stu-id="270b3-256">When such types are `null`, they will be serialized by setting `xsi:nil` to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="270b3-257">下面的示例演示了一个应用了的字段 <xref:System.Xml.Serialization.XmlElementAttribute> ，并将 <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> 属性设置为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="270b3-257">The following example shows a field with the <xref:System.Xml.Serialization.XmlElementAttribute> applied to it, and the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property set to `false`.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="270b3-258">获取或设置分配给 XML 元素的命名空间，这些 XML 元素是在序列化类时得到的。</span><span class="sxs-lookup"><span data-stu-id="270b3-258">Gets or sets the namespace assigned to the XML element that results when the class is serialized.</span></span></summary>
        <value><span data-ttu-id="270b3-259">XML 元素的命名空间。</span><span class="sxs-lookup"><span data-stu-id="270b3-259">The namespace of the XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="270b3-260"><xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A>属性符合万维网联合会规范，即[XML 中的命名空间](https://www.w3.org/TR/1999/REC-xml-names-19990114/)。</span><span class="sxs-lookup"><span data-stu-id="270b3-260">The <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> property conforms to the World Wide Web Consortium specification, [Namespaces in XML](https://www.w3.org/TR/1999/REC-xml-names-19990114/).</span></span>  
  
 <span data-ttu-id="270b3-261">若要创建与前缀关联的命名空间，必须创建一个 <xref:System.Xml.Serialization.XmlSerializerNamespaces> ，其中包含 XML 文档中使用的命名空间和前缀。</span><span class="sxs-lookup"><span data-stu-id="270b3-261">To create namespaces that are associated with a prefix, you must create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> that contains the namespaces and prefixes used in the XML document.</span></span> <span data-ttu-id="270b3-262">当你为每个设置命名空间时 <xref:System.Xml.Serialization.XmlArrayAttribute> ，它必须匹配中的一个命名空间 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 。</span><span class="sxs-lookup"><span data-stu-id="270b3-262">As you set the namespace for each <xref:System.Xml.Serialization.XmlArrayAttribute>, it must match one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span> <span data-ttu-id="270b3-263">生成 XML 时，每个数组都以与指定命名空间关联的前缀正确地加上前缀。</span><span class="sxs-lookup"><span data-stu-id="270b3-263">When the XML is generated, each array is correctly prefixed with the prefix associated with the specified namespace.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Order : int with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="270b3-264">获取或设置序列化或反序列化元素的显式顺序。</span><span class="sxs-lookup"><span data-stu-id="270b3-264">Gets or sets the explicit order in which the elements are serialized or deserialized.</span></span></summary>
        <value><span data-ttu-id="270b3-265">代码生成的顺序。</span><span class="sxs-lookup"><span data-stu-id="270b3-265">The order of the code generation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="270b3-266">使用 <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> 枚举来指示 <xref:System.Web.Services.Description.ServiceDescriptionImporter> 生成用于设置属性的代码 <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> 。</span><span class="sxs-lookup"><span data-stu-id="270b3-266">Use the <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> enumeration to instruct the <xref:System.Web.Services.Description.ServiceDescriptionImporter> to generate code that sets the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="270b3-267">在 <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> 类型中的一个公共属性或字段上使用该属性后，必须将该属性应用于该类型和所有继承类型的所有公共属性和字段。</span><span class="sxs-lookup"><span data-stu-id="270b3-267">Once the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="270b3-268">获取或设置用于表示 XML 元素的对象类型。</span><span class="sxs-lookup"><span data-stu-id="270b3-268">Gets or sets the object type used to represent the XML element.</span></span></summary>
        <value><span data-ttu-id="270b3-269">成员的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="270b3-269">The <see cref="T:System.Type" /> of the member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="270b3-270">使用 <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> 属性指定字段或属性的派生类型。</span><span class="sxs-lookup"><span data-stu-id="270b3-270">Use the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a derived type for a field or property.</span></span>  
  
 <span data-ttu-id="270b3-271">如果字段或属性返回 <xref:System.Collections.ArrayList> ，则可以将多个实例应用于 <xref:System.Xml.Serialization.XmlElementAttribute> 成员。</span><span class="sxs-lookup"><span data-stu-id="270b3-271">If a field or property returns an <xref:System.Collections.ArrayList>, you can apply multiple instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the member.</span></span> <span data-ttu-id="270b3-272">对于每个实例，将 <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> 属性设置为可插入到数组中的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="270b3-272">For each instance, set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to a type of object that can be inserted into the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="270b3-273">下面的示例使用 <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> 属性指定的派生对象 <xref:System.Xml.Serialization.XmlElementAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="270b3-273">The following example uses the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a derived object for an <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span> <span data-ttu-id="270b3-274">该示例还将的三个实例应用于 <xref:System.Xml.Serialization.XmlElementAttribute> 一个返回的字段 <xref:System.Collections.ArrayList> 。</span><span class="sxs-lookup"><span data-stu-id="270b3-274">The example also applies three instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to a field that returns an <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="270b3-275">每个实例指定字段中允许的类型。</span><span class="sxs-lookup"><span data-stu-id="270b3-275">Each instance specifies a type allowed in the field.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
