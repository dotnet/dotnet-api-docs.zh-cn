<Type Name="XmlCodeExporter" FullName="System.Xml.Serialization.XmlCodeExporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b0c53748b310033ef4fc6b1f78c6521545543430" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86604735" /></Metadata><TypeSignature Language="C#" Value="public class XmlCodeExporter" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlCodeExporter extends System.Object" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlCodeExporter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlCodeExporter" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlCodeExporter" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type XmlCodeExporter = class" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C#" Value="public class XmlCodeExporter : System.Xml.Serialization.CodeExporter" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlCodeExporter extends System.Xml.Serialization.CodeExporter" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlCodeExporter&#xA;Inherits CodeExporter" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlCodeExporter : System::Xml::Serialization::CodeExporter" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type XmlCodeExporter = class&#xA;    inherit CodeExporter" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">System.Xml.Serialization.CodeExporter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>从 XML 架构元素声明的内部类型映射信息生成类型和特性声明。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlCodeExporter>类从内部映射到 .NET Framework 类型生成 .NET Framework 类型或属性声明。 <xref:System.Xml.Serialization.XmlSchemaImporter>对于 XSD 文档中定义的元素，或以 Web Services 描述语言 (WSDL) 文档中的部分，这些内部映射由类生成。 <xref:System.Xml.Serialization.XmlCodeExporter>不会直接使用;它与 Web 服务描述语言工具一起使用 ( # A0) 或 ( # A1) 的 XML 架构定义工具。  
  
 Wsdl.exe 使用由生成的类型或特性声明以及由 <xref:System.Xml.Serialization.XmlCodeExporter> 类生成的内部映射， <xref:System.Xml.Serialization.XmlSchemaImporter> 从 WSDL 文档生成客户端代理类或抽象服务器类。 <xref:System.Xml.Serialization.XmlCodeExporter> <xref:System.Web.Services.Description.ServiceDescriptionImporter> 当 WSDL 文档指定时，Wsdl.exe 使用和类：  
  
-   文本使用，指示 SOAP 消息参数和返回值 (或请求和响应文档的内容) 按原义使用 XML 架构定义进行指定。  
  
-   使用 HTTP GET 和 HTTP POST 操作的 Web 服务的非 SOAP 实现。  
  
-   Xsd.exe 使用 <xref:System.Xml.Serialization.XmlCodeExporter> 从 XML 架构定义生成类 (XSD) 文档。  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Xml.Serialization.CodeGenerationOptions" />
    <altmember cref="T:System.Xml.Serialization.XmlSchemaImporter" />
    <altmember cref="T:System.Xml.Serialization.SoapCodeExporter" />
    <altmember cref="T:System.Web.Services.Description.ServiceDescriptionImporter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlCodeExporter (System.CodeDom.CodeNamespace codeNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (codeNamespace As CodeNamespace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlCodeExporter : System.CodeDom.CodeNamespace -&gt; System.Xml.Serialization.XmlCodeExporter" Usage="new System.Xml.Serialization.XmlCodeExporter codeNamespace" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">要生成的类型的命名空间。</param>
        <summary>使用指定命名空间初始化 <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请不要直接创建类的实例 <xref:System.Xml.Serialization.XmlCodeExporter> ，而是使用 Web 服务描述语言工具 ( # A0) 或 ( # A1) 的 XML 架构定义工具。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlCodeExporter (System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.CodeCompileUnit codeCompileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.CodeCompileUnit codeCompileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (codeNamespace As CodeNamespace, codeCompileUnit As CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::CodeCompileUnit ^ codeCompileUnit);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlCodeExporter : System.CodeDom.CodeNamespace * System.CodeDom.CodeCompileUnit -&gt; System.Xml.Serialization.XmlCodeExporter" Usage="new System.Xml.Serialization.XmlCodeExporter (codeNamespace, codeCompileUnit)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">要生成的类型的命名空间。</param>
        <param name="codeCompileUnit">CodeDOM 图容器，用到的程序集引用会自动添加到其中。</param>
        <summary>使用指定命名空间和代码编译单元初始化 <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请不要直接创建类的实例 <xref:System.Xml.Serialization.XmlCodeExporter> ，而是使用 Web 服务描述语言工具 ( # A0) 或 ( # A1) 的 XML 架构定义工具。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlCodeExporter (System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.CodeCompileUnit codeCompileUnit, System.Xml.Serialization.CodeGenerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.CodeCompileUnit codeCompileUnit, valuetype System.Xml.Serialization.CodeGenerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (codeNamespace As CodeNamespace, codeCompileUnit As CodeCompileUnit, options As CodeGenerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::Xml::Serialization::CodeGenerationOptions options);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlCodeExporter : System.CodeDom.CodeNamespace * System.CodeDom.CodeCompileUnit * System.Xml.Serialization.CodeGenerationOptions -&gt; System.Xml.Serialization.XmlCodeExporter" Usage="new System.Xml.Serialization.XmlCodeExporter (codeNamespace, codeCompileUnit, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">要生成的类型的命名空间。</param>
        <param name="codeCompileUnit"><see cref="T:System.CodeDom.CodeCompileUnit" /> 程序图容器，用到的程序集引用会自动添加到其中。</param>
        <param name="options">提供选项的枚举值，这些选项用于从 XML 架构自定义数据类型生成 .NET Framework 类型。</param>
        <summary>使用指定命名空间、代码编译单元和代码生成选项初始化 <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 请不要直接创建类的实例 <xref:System.Xml.Serialization.XmlCodeExporter> ，而是使用 Web 服务描述语言工具 ( # A0) 或 ( # A1) 的 XML 架构定义工具。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlCodeExporter (System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.CodeCompileUnit codeCompileUnit, System.Xml.Serialization.CodeGenerationOptions options, System.Collections.Hashtable mappings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.CodeCompileUnit codeCompileUnit, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.Collections.Hashtable mappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (codeNamespace As CodeNamespace, codeCompileUnit As CodeCompileUnit, options As CodeGenerationOptions, mappings As Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::Xml::Serialization::CodeGenerationOptions options, System::Collections::Hashtable ^ mappings);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlCodeExporter : System.CodeDom.CodeNamespace * System.CodeDom.CodeCompileUnit * System.Xml.Serialization.CodeGenerationOptions * System.Collections.Hashtable -&gt; System.Xml.Serialization.XmlCodeExporter" Usage="new System.Xml.Serialization.XmlCodeExporter (codeNamespace, codeCompileUnit, options, mappings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="mappings" Type="System.Collections.Hashtable" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">要生成的类型的命名空间。</param>
        <param name="codeCompileUnit"><see cref="T:System.CodeDom.CodeCompileUnit" /> 程序图容器，用到的程序集引用会自动添加到其中。</param>
        <param name="options">提供选项的枚举值，这些选项用于从 XML 架构自定义数据类型生成 .NET Framework 类型。</param>
        <param name="mappings">一个包含 <see cref="T:System.Collections.Hashtable" /> 对象的 <see cref="T:System.Xml.Serialization.XmlMapping" />。</param>
        <summary>使用指定的 .NET Framework 命名空间、包含对象图的代码编译单元、表示代码生成选项的对象和映射对象的集合，初始化 <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlCodeExporter (System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.CodeCompileUnit codeCompileUnit, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.Xml.Serialization.CodeGenerationOptions options, System.Collections.Hashtable mappings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.CodeCompileUnit codeCompileUnit, class System.CodeDom.Compiler.CodeDomProvider codeProvider, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.Collections.Hashtable mappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (codeNamespace As CodeNamespace, codeCompileUnit As CodeCompileUnit, codeProvider As CodeDomProvider, options As CodeGenerationOptions, mappings As Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, System::Xml::Serialization::CodeGenerationOptions options, System::Collections::Hashtable ^ mappings);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlCodeExporter : System.CodeDom.CodeNamespace * System.CodeDom.CodeCompileUnit * System.CodeDom.Compiler.CodeDomProvider * System.Xml.Serialization.CodeGenerationOptions * System.Collections.Hashtable -&gt; System.Xml.Serialization.XmlCodeExporter" Usage="new System.Xml.Serialization.XmlCodeExporter (codeNamespace, codeCompileUnit, codeProvider, options, mappings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="mappings" Type="System.Collections.Hashtable" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">要生成的类型的命名空间。</param>
        <param name="codeCompileUnit"><see cref="T:System.CodeDom.CodeCompileUnit" /> 程序图容器，用到的程序集引用会自动添加到其中。</param>
        <param name="codeProvider">提供选项的枚举值，这些选项用于从 XML 架构自定义数据类型生成 .NET Framework 类型。</param>
        <param name="options"><see cref="T:System.Xml.Serialization.CodeGenerationOptions" />，包含代码创建的特别说明。</param>
        <param name="mappings">一个包含 <see cref="T:System.Collections.Hashtable" /> 对象的 <see cref="T:System.Xml.Serialization.XmlMapping" />。</param>
        <summary>使用指定的 .NET Framework 命名空间、包含对象图的代码编译单元、指定代码选项的枚举和映射对象的集合，初始化 <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddMappingMetadata">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 声明添加到对应于 Web 服务描述语言 (WSDL) 文档中 SOAP 消息定义的 <see langword="&amp;lt;part&amp;gt;" /> 元素的方法参数或返回值。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddMappingMetadata">
      <MemberSignature Language="C#" Value="public void AddMappingMetadata (System.CodeDom.CodeAttributeDeclarationCollection metadata, System.Xml.Serialization.XmlMemberMapping member, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingMetadata(class System.CodeDom.CodeAttributeDeclarationCollection metadata, class System.Xml.Serialization.XmlMemberMapping member, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingMetadata (metadata As CodeAttributeDeclarationCollection, member As XmlMemberMapping, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingMetadata(System::CodeDom::CodeAttributeDeclarationCollection ^ metadata, System::Xml::Serialization::XmlMemberMapping ^ member, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="member this.AddMappingMetadata : System.CodeDom.CodeAttributeDeclarationCollection * System.Xml.Serialization.XmlMemberMapping * string -&gt; unit" Usage="xmlCodeExporter.AddMappingMetadata (metadata, member, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
        <Parameter Name="member" Type="System.Xml.Serialization.XmlMemberMapping" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="metadata">生成类型的 <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> 对象的集合，方法向该集合添加特性声明。</param>
        <param name="member">WSDL 消息定义中单个元素部分的内部 .NET Framework 类型映射。</param>
        <param name="ns">SOAP 消息部分的 XML 命名空间，已为其生成成员参数中的类型映射信息。</param>
        <summary>将 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 声明添加到对应于 Web 服务描述语言 (WSDL) 文档中 SOAP 消息定义的 <see langword="&lt;part&gt;" /> 元素的方法参数或返回值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法由 Web 服务描述语言工具 ( # A0) 在 WSDL 文档指定文字使用时，指示 SOAP 消息参数的内容和返回值 (或请求和响应文档) 按原义使用 XML 架构定义来指定。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddMappingMetadata">
      <MemberSignature Language="C#" Value="public void AddMappingMetadata (System.CodeDom.CodeAttributeDeclarationCollection metadata, System.Xml.Serialization.XmlTypeMapping mapping, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingMetadata(class System.CodeDom.CodeAttributeDeclarationCollection metadata, class System.Xml.Serialization.XmlTypeMapping mapping, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlTypeMapping,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingMetadata (metadata As CodeAttributeDeclarationCollection, mapping As XmlTypeMapping, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingMetadata(System::CodeDom::CodeAttributeDeclarationCollection ^ metadata, System::Xml::Serialization::XmlTypeMapping ^ mapping, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="member this.AddMappingMetadata : System.CodeDom.CodeAttributeDeclarationCollection * System.Xml.Serialization.XmlTypeMapping * string -&gt; unit" Usage="xmlCodeExporter.AddMappingMetadata (metadata, mapping, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
        <Parameter Name="mapping" Type="System.Xml.Serialization.XmlTypeMapping" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="metadata">生成类型的 <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> 对象的集合，方法向该集合添加特性声明。</param>
        <param name="mapping">XML 架构元素的内部 .NET Framework 类型映射信息。</param>
        <param name="ns">SOAP 消息部分的 XML 命名空间，已为其生成成员参数中的类型映射信息。</param>
        <summary>将 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 声明添加到对应于 Web 服务描述语言 (WSDL) 文档中非 SOAP 消息定义的 <see langword="&lt;part&gt;" /> 元素的方法返回值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服务描述语言工具 ( # A0) 在 WSDL 文档使用 HTTP GET 和 HTTP POST 操作指定 Web 服务的 .NET Framework 非 SOAP 实现时使用此方法。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddMappingMetadata">
      <MemberSignature Language="C#" Value="public void AddMappingMetadata (System.CodeDom.CodeAttributeDeclarationCollection metadata, System.Xml.Serialization.XmlMemberMapping member, string ns, bool forceUseMemberName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingMetadata(class System.CodeDom.CodeAttributeDeclarationCollection metadata, class System.Xml.Serialization.XmlMemberMapping member, string ns, bool forceUseMemberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingMetadata (metadata As CodeAttributeDeclarationCollection, member As XmlMemberMapping, ns As String, forceUseMemberName As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingMetadata(System::CodeDom::CodeAttributeDeclarationCollection ^ metadata, System::Xml::Serialization::XmlMemberMapping ^ member, System::String ^ ns, bool forceUseMemberName);" />
      <MemberSignature Language="F#" Value="member this.AddMappingMetadata : System.CodeDom.CodeAttributeDeclarationCollection * System.Xml.Serialization.XmlMemberMapping * string * bool -&gt; unit" Usage="xmlCodeExporter.AddMappingMetadata (metadata, member, ns, forceUseMemberName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
        <Parameter Name="member" Type="System.Xml.Serialization.XmlMemberMapping" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="forceUseMemberName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadata">生成类型的 <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> 对象的集合，方法向该集合添加特性声明。</param>
        <param name="member">WSDL 消息定义中单个元素部分的内部 .NET Framework 类型映射。</param>
        <param name="ns">SOAP 消息部分的 XML 命名空间，已为其生成成员参数中的类型映射信息。</param>
        <param name="forceUseMemberName">帮助确定是否添加初始参数的标志，其中初始参数包含要生成的特性声明的 XML 元素名称。</param>
        <summary>将 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 声明添加到对应于 Web 服务描述语言 (WSDL) 文档中 SOAP 消息定义的 <see langword="&lt;part&gt;" /> 元素的方法参数或返回值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服务描述语言工具 ( # A0) 使用此方法，当 WSDL 文档指定了文本用途时，指示 SOAP 消息参数和返回值的内容 (或请求和响应) 文档使用 XML 架构定义按原义指定。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExportMembersMapping">
      <MemberSignature Language="C#" Value="public void ExportMembersMapping (System.Xml.Serialization.XmlMembersMapping xmlMembersMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportMembersMapping(class System.Xml.Serialization.XmlMembersMapping xmlMembersMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportMembersMapping (xmlMembersMapping As XmlMembersMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportMembersMapping(System::Xml::Serialization::XmlMembersMapping ^ xmlMembersMapping);" />
      <MemberSignature Language="F#" Value="member this.ExportMembersMapping : System.Xml.Serialization.XmlMembersMapping -&gt; unit" Usage="xmlCodeExporter.ExportMembersMapping xmlMembersMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlMembersMapping" Type="System.Xml.Serialization.XmlMembersMapping" />
      </Parameters>
      <Docs>
        <param name="xmlMembersMapping">WSDL 消息定义中元素部分的内部 .NET Framework 类型映射。</param>
        <summary>为属于 Web 服务描述语言 (WSDL) 文档中的 SOAP 消息定义的每个部分生成 .NET Framework 类型和特性声明。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服务描述语言工具 ( # A0) 使用此方法，当 WSDL 文档指定了文本用途时，指示 SOAP 消息参数和返回值的内容 (或请求和响应) 文档使用 XML 架构定义按原义指定。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExportTypeMapping">
      <MemberSignature Language="C#" Value="public void ExportTypeMapping (System.Xml.Serialization.XmlTypeMapping xmlTypeMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportTypeMapping(class System.Xml.Serialization.XmlTypeMapping xmlTypeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportTypeMapping (xmlTypeMapping As XmlTypeMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportTypeMapping(System::Xml::Serialization::XmlTypeMapping ^ xmlTypeMapping);" />
      <MemberSignature Language="F#" Value="member this.ExportTypeMapping : System.Xml.Serialization.XmlTypeMapping -&gt; unit" Usage="xmlCodeExporter.ExportTypeMapping xmlTypeMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlTypeMapping" Type="System.Xml.Serialization.XmlTypeMapping" />
      </Parameters>
      <Docs>
        <param name="xmlTypeMapping">XML 架构元素的内部 .NET Framework 类型映射信息。</param>
        <summary>为 XMl 架构元素生成 .NET Framework 类型和特性声明。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服务描述语言工具 ( # A0) 使用此方法在以下情况下生成 SOAP 消息头和返回类型： Web 服务描述语言 (WSDL) 文档使用 HTTP GET 和 HTTP POST 操作指定 Web 服务的非 SOAP 实现。 XML 架构定义工具 ( # A0) 使用此方法生成 XML 架构定义中的每个 XML 架构元素声明 (XSD) 文档。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IncludeMetadata">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeAttributeDeclarationCollection IncludeMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeAttributeDeclarationCollection IncludeMetadata" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlCodeExporter.IncludeMetadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludeMetadata As CodeAttributeDeclarationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeAttributeDeclarationCollection ^ IncludeMetadata { System::CodeDom::CodeAttributeDeclarationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncludeMetadata : System.CodeDom.CodeAttributeDeclarationCollection" Usage="System.Xml.Serialization.XmlCodeExporter.IncludeMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeAttributeDeclarationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
