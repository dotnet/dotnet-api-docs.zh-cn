<Type Name="SoapAttributes" FullName="System.Xml.Serialization.SoapAttributes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cdd84c1e0cac52e1e888811120fa4ef869e5a652" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86691130" /></Metadata><TypeSignature Language="C#" Value="public class SoapAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapAttributes extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapAttributes" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapAttributes" />
  <TypeSignature Language="F#" Value="type SoapAttributes = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.XmlSerializer" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示特性对象的集合，这些对象控制 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化和反序列化 SOAP 方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 创建 <xref:System.Xml.Serialization.SoapAttributes> 是替代 <xref:System.Xml.Serialization.XmlSerializer> 序列化类实例的默认方式的过程的一部分。 例如，假设您想要序列化从具有无法访问的源的 DLL 创建的对象。 通过使用 <xref:System.Xml.Serialization.SoapAttributeOverrides> 类，您可以增加或控制序列化对象的方式。  
  
 类的成员 <xref:System.Xml.Serialization.SoapAttributes> 直接对应于控制序列化的特性类的系列。 例如，必须将 <xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A> 属性设置为 <xref:System.Xml.Serialization.SoapAttributeAttribute> ，这允许您通过指示将 <xref:System.Xml.Serialization.XmlSerializer> 属性值序列化为编码的 SOAP 特性来重写字段或属性的序列化。 有关控制编码的 SOAP 序列化的属性的完整列表，请参阅 [控制编码的 Soap 序列化的属性](/dotnet/standard/serialization/attributes-that-control-encoded-soap-serialization)。  
  
 有关将类的实例添加到类的实例的更多详细信息 <xref:System.Xml.Serialization.SoapAttributes> <xref:System.Xml.Serialization.SoapAttributeOverrides> ，请参阅 <xref:System.Xml.Serialization.SoapAttributeOverrides> 类概述。  
  
   
  
## Examples  
 下面的示例对名为的类进行序列化 `Group` 。 `GroupName`重写和字段的序列化 `IgnoreThis` 和枚举的成员 `GroupType` 。 在方法中， `CreateOverrideSerializer` <xref:System.Xml.Serialization.SoapAttributeOverrides> 创建一个，对于每个重写的成员或枚举，将 <xref:System.Xml.Serialization.SoapAttributes> 使用适当的属性集创建，并将其添加到中 <xref:System.Xml.Serialization.SoapAttributeOverrides> 。 <xref:System.Xml.Serialization.XmlTypeMapping>是使用创建的 <xref:System.Xml.Serialization.SoapAttributeOverrides> ，并且 <xref:System.Xml.Serialization.XmlTypeMapping> 用于创建 <xref:System.Xml.Serialization.XmlSerializer> 重写默认序列化的。  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <related type="Article" href="/dotnet/standard/serialization/attributes-that-control-encoded-soap-serialization">用来控制编码的 SOAP 序列化的属性</related>
    <related type="Article" href="/dotnet/standard/serialization/how-to-serialize-an-object-as-a-soap-encoded-xml-stream">如何：将对象序列化为 SOAP 编码的 XML 流</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对于要重写其序列化的每个成员或类实例，你必须创建一个新的 <xref:System.Xml.Serialization.SoapAttributes> 。 根据需要将的属性设置为 <xref:System.Xml.Serialization.SoapAttributes> 适当的，然后将添加 <xref:System.Xml.Serialization.SoapAttributes> 到类的实例 <xref:System.Xml.Serialization.SoapAttributeOverrides> 。  
  
   
  
## Examples  
 下面的示例对名为的类进行序列化 `Group` 。 `GroupName`重写和字段的序列化 `IgnoreThis` 和枚举的成员 `GroupType` 。 在方法中， `CreateOverrideSerializer` <xref:System.Xml.Serialization.SoapAttributeOverrides> 创建一个，对于每个重写的成员或枚举，将 <xref:System.Xml.Serialization.SoapAttributes> 使用适当的属性集创建，并将其添加到中 <xref:System.Xml.Serialization.SoapAttributeOverrides> 。 <xref:System.Xml.Serialization.XmlTypeMapping>是使用创建的 <xref:System.Xml.Serialization.SoapAttributeOverrides> ，并且 <xref:System.Xml.Serialization.XmlTypeMapping> 用于创建 <xref:System.Xml.Serialization.XmlSerializer> 重写默认序列化的。  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="/dotnet/standard/serialization/attributes-that-control-encoded-soap-serialization">用来控制编码的 SOAP 序列化的属性</related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-serialize-an-object-as-a-soap-encoded-xml-stream">如何：将对象序列化为 SOAP 编码的 XML 流</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapAttributes (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As ICustomAttributeProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapAttributes(System::Reflection::ICustomAttributeProvider ^ provider);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapAttributes : System.Reflection.ICustomAttributeProvider -&gt; System.Xml.Serialization.SoapAttributes" Usage="new System.Xml.Serialization.SoapAttributes provider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" />
      </Parameters>
      <Docs>
        <param name="provider">实现 <see cref="T:System.Reflection.ICustomAttributeProvider" /> 接口的任何一个对象，如 <see cref="T:System.Type" /> 类。</param>
        <summary>使用指定的自定义类型初始化 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapAttributeAttribute SoapAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapAttributeAttribute SoapAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributes.SoapAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapAttribute As SoapAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapAttributeAttribute ^ SoapAttribute { System::Xml::Serialization::SoapAttributeAttribute ^ get(); void set(System::Xml::Serialization::SoapAttributeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SoapAttribute : System.Xml.Serialization.SoapAttributeAttribute with get, set" Usage="System.Xml.Serialization.SoapAttributes.SoapAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要替代的 <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />。</summary>
        <value><see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />，在序列化成员时重写 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的行为。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，如果没有属性应用于公共字段或公共读/写属性，则会将其序列化为 XML 元素。 还可以 <xref:System.Xml.Serialization.XmlSerializer> 通过 <xref:System.Xml.Serialization.SoapAttributeAttribute> 将应用于字段或属性，指示将成员序列化为编码的 SOAP XML 特性。  (<xref:System.Xml.Serialization.XmlSerializer> 必须使用创建，以便 <xref:System.Xml.Serialization.XmlTypeMapping> 将对象序列化为编码的 SOAP XML 流。 )   
  
 <xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A>属性允许您通过将应用到成员来重写控制的序列化 <xref:System.Xml.Serialization.SoapAttributeAttribute> 。 有关此过程的更多详细信息，请参阅 <xref:System.Xml.Serialization.SoapAttributeOverrides> 类概述。  
  
   
  
## Examples  
 下面的示例对名为的类进行序列化 `Group` 。 `GroupName`重写和字段的序列化 `IgnoreThis` 和枚举的成员 `GroupType` 。 在方法中， `CreateOverrideSerializer` <xref:System.Xml.Serialization.SoapAttributeOverrides> 创建一个，对于每个重写的成员或枚举，将 <xref:System.Xml.Serialization.SoapAttributes> 使用适当的属性集创建，并将其添加到中 <xref:System.Xml.Serialization.SoapAttributeOverrides> 。 <xref:System.Xml.Serialization.XmlTypeMapping>是使用创建的 <xref:System.Xml.Serialization.SoapAttributeOverrides> ，并且 <xref:System.Xml.Serialization.XmlTypeMapping> 用于创建 <xref:System.Xml.Serialization.XmlSerializer> 重写默认序列化的。  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="/dotnet/standard/serialization/attributes-that-control-encoded-soap-serialization">用来控制编码的 SOAP 序列化的属性</related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-serialize-an-object-as-a-soap-encoded-xml-stream">如何：将对象序列化为 SOAP 编码的 XML 流</related>
      </Docs>
    </Member>
    <Member MemberName="SoapDefaultValue">
      <MemberSignature Language="C#" Value="public object SoapDefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SoapDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapDefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SoapDefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SoapDefaultValue : obj with get, set" Usage="System.Xml.Serialization.SoapAttributes.SoapDefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 XML 元素或属性的默认值。</summary>
        <value>表示 XML 元素或特性的默认值的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以通过将属性应用到成员来设置成员的默认值 <xref:System.ComponentModel.DefaultValueAttribute> 。 如果将成员序列化为编码的 SOAP 消息，则可以通过创建一个新的 <xref:System.ComponentModel.DefaultValueAttribute> ，设置其 <xref:System.ComponentModel.DefaultValueAttribute.Value%2A> 属性，并将 <xref:System.Xml.Serialization.SoapAttributes.SoapDefaultValue%2A> 属性设置为对象来更改默认值。 将添加 <xref:System.Xml.Serialization.SoapAttributes> 到 <xref:System.Xml.Serialization.SoapAttributeOverrides> 。 有关更多详细信息，请参阅 <xref:System.Xml.Serialization.SoapAttributeOverrides> 类概述。  
  
   
  
## Examples  
 下面的示例序列化一个名为 `Group` 的类，其中包含一个名为的字段 `GroupName` 。 默认值设置 <xref:System.ComponentModel.DefaultValueAttribute> 为 ".net"。 如果未设置字段或将其设置为 ".NET"，则不会序列化该值 (因为默认值已) 。 该示例还重写方法中的默认值，该方法由 `CreateOverrideSerializer` 方法调用 `SerializeOverride` 。 该示例调用这两个方法 `SerializeOriginal` 和 `SerializeOverride` ，并为字段设置与 ".net" )  ( 相同的值 `GroupName` 。 由于重写，仅在调用方法时才会序列化该值 `SerializeOverride` 。  
  
 [!code-cpp[SoapAttribues.SoapDefaultValue#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttribues.SoapDefaultValue/CPP/defvalue.cpp#1)]
 [!code-csharp[SoapAttribues.SoapDefaultValue#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttribues.SoapDefaultValue/CS/defvalue.cs#1)]
 [!code-vb[SoapAttribues.SoapDefaultValue#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttribues.SoapDefaultValue/VB/defvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="/dotnet/standard/serialization/attributes-that-control-encoded-soap-serialization">用来控制编码的 SOAP 序列化的属性</related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-serialize-an-object-as-a-soap-encoded-xml-stream">如何：将对象序列化为 SOAP 编码的 XML 流</related>
      </Docs>
    </Member>
    <Member MemberName="SoapElement">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapElementAttribute SoapElement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapElementAttribute SoapElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributes.SoapElement" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapElement As SoapElementAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapElementAttribute ^ SoapElement { System::Xml::Serialization::SoapElementAttribute ^ get(); void set(System::Xml::Serialization::SoapElementAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SoapElement : System.Xml.Serialization.SoapElementAttribute with get, set" Usage="System.Xml.Serialization.SoapAttributes.SoapElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapElementAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要重写的 <see cref="T:System.Xml.Serialization.SoapElementAttribute" />。</summary>
        <value>要重写的 <see cref="T:System.Xml.Serialization.SoapElementAttribute" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapElementAttribute>用于控制将类成员序列化为 XML 元素的。 <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A>通过创建新的并将其分配给属性，将属性设置为新的 <xref:System.Xml.Serialization.SoapElementAttribute> ，以覆盖作为 XML 元素的类成员的序列化 <xref:System.Xml.Serialization.SoapElementAttribute> 。 然后，将添加 <xref:System.Xml.Serialization.SoapAttributes> 到 <xref:System.Xml.Serialization.SoapAttributeOverrides> 。 使用创建 <xref:System.Xml.Serialization.XmlTypeMapping> <xref:System.Xml.Serialization.SoapAttributeOverrides> ，然后 <xref:System.Xml.Serialization.XmlSerializer> 使用构造 <xref:System.Xml.Serialization.XmlTypeMapping> 。  
  
 有关详细信息，请参阅 <xref:System.Xml.Serialization.SoapAttributeOverrides> 类概述。  
  
   
  
## Examples  
 下面的示例对名为的类进行序列化 `Transportation` 。 字段的序列化 `Vehicle` 被重写。 在方法中， `CreateOverrideSerializer` <xref:System.Xml.Serialization.SoapAttributeOverrides> 创建一个，对于每个重写的成员或枚举，将 <xref:System.Xml.Serialization.SoapAttributes> 使用适当的属性集创建，并将其添加到中 <xref:System.Xml.Serialization.SoapAttributeOverrides> 。 <xref:System.Xml.Serialization.XmlTypeMapping>是使用创建的 <xref:System.Xml.Serialization.SoapAttributeOverrides> ，并且 <xref:System.Xml.Serialization.XmlTypeMapping> 用于创建 <xref:System.Xml.Serialization.XmlSerializer> 重写默认序列化的。  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="/dotnet/standard/serialization/attributes-that-control-encoded-soap-serialization">用来控制编码的 SOAP 序列化的属性</related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-serialize-an-object-as-a-soap-encoded-xml-stream">如何：将对象序列化为 SOAP 编码的 XML 流</related>
      </Docs>
    </Member>
    <Member MemberName="SoapEnum">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapEnumAttribute SoapEnum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapEnumAttribute SoapEnum" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributes.SoapEnum" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapEnum As SoapEnumAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapEnumAttribute ^ SoapEnum { System::Xml::Serialization::SoapEnumAttribute ^ get(); void set(System::Xml::Serialization::SoapEnumAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SoapEnum : System.Xml.Serialization.SoapEnumAttribute with get, set" Usage="System.Xml.Serialization.SoapAttributes.SoapEnum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapEnumAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个对象，该对象指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化 SOAP 枚举。</summary>
        <value>一个对象，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化一个枚举成员。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapEnumAttribute>用于控制枚举成员的序列化。 将 <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> 属性设置为新的 <xref:System.Xml.Serialization.SoapEnumAttribute> ，以重写此类成员的序列化。  
  
 有关详细信息，请参阅 <xref:System.Xml.Serialization.SoapAttributeOverrides> 类概述。  
  
   
  
## Examples  
 下面的示例序列化两个名为 `Food` 和 `FoodType` 的类。 `FoodType`类包含两个被重写的枚举，而对于每个枚举，该示例创建一个 <xref:System.Xml.Serialization.SoapEnumAttribute> 分配给的 <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> 属性的 <xref:System.Xml.Serialization.SoapAttributes> 。 然后，该示例将添加 <xref:System.Xml.Serialization.SoapAttributes> 到 <xref:System.Xml.Serialization.SoapAttributeOverrides> 用于创建的 <xref:System.Xml.Serialization.XmlSerializer> 。  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="/dotnet/standard/serialization/attributes-that-control-encoded-soap-serialization">用来控制编码的 SOAP 序列化的属性</related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-serialize-an-object-as-a-soap-encoded-xml-stream">如何：将对象序列化为 SOAP 编码的 XML 流</related>
      </Docs>
    </Member>
    <Member MemberName="SoapIgnore">
      <MemberSignature Language="C#" Value="public bool SoapIgnore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SoapIgnore" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributes.SoapIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapIgnore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SoapIgnore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SoapIgnore : bool with get, set" Usage="System.Xml.Serialization.SoapAttributes.SoapIgnore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否将公共字段或属性序列化为经过编码的 SOAP XML。</summary>
        <value>如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 不得序列化字段或属性，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，会通过序列化所有公共字段和公共读/写属性 <xref:System.Xml.Serialization.XmlSerializer> 。 也就是说，每个公共字段或属性的值将作为 xml 元素或 xml 文档中的 xml 特性保存。  
  
 若要重写字段或属性的默认序列化，请创建一个 <xref:System.Xml.Serialization.SoapAttributes> ，并将其 <xref:System.Xml.Serialization.SoapAttributes.SoapIgnore%2A> 属性设置为 `true` 。 使用 <xref:System.Xml.Serialization.SoapAttributeOverrides.Add%2A> 方法将对象添加到 <xref:System.Xml.Serialization.SoapAttributeOverrides> ，并指定包含要忽略的字段或属性的对象的类型，以及要忽略的字段或属性的名称。  
  
 如果对某个 <xref:System.Xml.Serialization.SoapIgnoreAttribute> 字段或属性应用了，则忽略该字段或属性。 不过，您可以通过创建 <xref:System.Xml.Serialization.SoapAttributes> ，将其 <xref:System.Xml.Serialization.SoapAttributes.SoapIgnore%2A> 属性设置为 `false` ，并将其添加到来重写此行为 <xref:System.Xml.Serialization.SoapAttributeOverrides> ，同时指定包含字段或属性的对象的类型以及字段或属性的名称。  
  
   
  
## Examples  
 下面的示例对名为的类进行序列化 `Group` 。 `GroupName`重写和字段的序列化 `IgnoreThis` 和枚举的成员 `GroupType` 。 在方法中， `CreateOverrideSerializer` <xref:System.Xml.Serialization.SoapAttributeOverrides> 创建一个，对于每个重写的成员或枚举，将 <xref:System.Xml.Serialization.SoapAttributes> 使用适当的属性集创建，并将其添加到中 <xref:System.Xml.Serialization.SoapAttributeOverrides> 。 <xref:System.Xml.Serialization.XmlTypeMapping>是使用创建的 <xref:System.Xml.Serialization.SoapAttributeOverrides> ，并且 <xref:System.Xml.Serialization.XmlTypeMapping> 用于创建 <xref:System.Xml.Serialization.XmlSerializer> 重写默认序列化的。  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="/dotnet/standard/serialization/attributes-that-control-encoded-soap-serialization">用来控制编码的 SOAP 序列化的属性</related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-serialize-an-object-as-a-soap-encoded-xml-stream">如何：将对象序列化为 SOAP 编码的 XML 流</related>
      </Docs>
    </Member>
    <Member MemberName="SoapType">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapTypeAttribute SoapType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapTypeAttribute SoapType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributes.SoapType" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapType As SoapTypeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapTypeAttribute ^ SoapType { System::Xml::Serialization::SoapTypeAttribute ^ get(); void set(System::Xml::Serialization::SoapTypeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SoapType : System.Xml.Serialization.SoapTypeAttribute with get, set" Usage="System.Xml.Serialization.SoapAttributes.SoapType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapTypeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何将对象类型序列化为经过编码的 SOAP XML 的对象。</summary>
        <value><see cref="T:System.Xml.Serialization.SoapTypeAttribute" />，它或者重写应用到类声明的 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />，或者应用到类声明。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapTypeAttribute>可用于控制生成的 XML 流 <xref:System.Xml.Serialization.XmlSerializer> 。 将 <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> 属性设置为新的 <xref:System.Xml.Serialization.SoapTypeAttribute> ，以控制序列化类时生成的 XML 的架构。  
  
   
  
## Examples  
 下面的示例对名为的类进行序列化 `Group` 。 `GroupName`重写和字段的序列化 `IgnoreThis` 和枚举的成员 `GroupType` 。 在方法中， `CreateOverrideSerializer` <xref:System.Xml.Serialization.SoapAttributeOverrides> 创建一个，对于每个重写的成员或枚举，将 <xref:System.Xml.Serialization.SoapAttributes> 使用适当的属性集创建，并将其添加到中 <xref:System.Xml.Serialization.SoapAttributeOverrides> 。 <xref:System.Xml.Serialization.XmlTypeMapping>是使用创建的 <xref:System.Xml.Serialization.SoapAttributeOverrides> ，并且 <xref:System.Xml.Serialization.XmlTypeMapping> 用于创建 <xref:System.Xml.Serialization.XmlSerializer> 重写默认序列化的。  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="/dotnet/standard/serialization/attributes-that-control-encoded-soap-serialization">用来控制编码的 SOAP 序列化的属性</related>
        <related type="Article" href="/dotnet/standard/serialization/how-to-serialize-an-object-as-a-soap-encoded-xml-stream">如何：将对象序列化为 SOAP 编码的 XML 流</related>
      </Docs>
    </Member>
  </Members>
</Type>
