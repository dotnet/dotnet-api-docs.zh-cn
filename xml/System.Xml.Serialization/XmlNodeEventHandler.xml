<Type Name="XmlNodeEventHandler" FullName="System.Xml.Serialization.XmlNodeEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="72c8ddcea953496616848148aae33824e0832406" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83521098" /></Metadata><TypeSignature Language="C#" Value="public delegate void XmlNodeEventHandler(object sender, XmlNodeEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlNodeEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlNodeEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub XmlNodeEventHandler(sender As Object, e As XmlNodeEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void XmlNodeEventHandler(System::Object ^ sender, XmlNodeEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type XmlNodeEventHandler = delegate of obj * XmlNodeEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.XmlSerializer" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Xml.Serialization.XmlNodeEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">事件的源。</param>
    <param name="e">包含事件数据的 <see cref="T:System.Xml.Serialization.XmlNodeEventArgs" />。</param>
    <summary>表示处理 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的 <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 事件的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 创建 <xref:System.Xml.Serialization.XmlNodeEventHandler> 委托时，将标识处理事件的方法。 若要将事件与事件处理程序关联，请将该委托的一个实例添加到事件中。 除非移除了该委托，否则每当发生该事件时就会调用事件处理程序。 有关事件处理程序委托的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 仅当调用 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 方法时，才会发生 <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> 事件。  
  
   
  
## Examples  
 下面的示例创建一个 <xref:System.Xml.Serialization.XmlSerializer>，为 <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> 事件添加一个事件处理程序，并反序列化一个对象。  
  
 [!code-cpp[Classic XmlNodeEventHandler Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlNodeEventHandler Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlNodeEventHandler Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlNodeEventHandler Example/CS/source.cs#1)]
 [!code-vb[Classic XmlNodeEventHandler Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlNodeEventHandler Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
  </Docs>
</Type>
