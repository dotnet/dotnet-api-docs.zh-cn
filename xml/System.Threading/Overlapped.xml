<Type Name="Overlapped" FullName="System.Threading.Overlapped">
  <Metadata><Meta Name="ms.openlocfilehash" Value="99fe601c89351d7fc2ef438cf474d5bf64ce1a42" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89738844" /></Metadata><TypeSignature Language="C#" Value="public class Overlapped" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Overlapped extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Overlapped" />
  <TypeSignature Language="VB.NET" Value="Public Class Overlapped" />
  <TypeSignature Language="C++ CLI" Value="public ref class Overlapped" />
  <TypeSignature Language="F#" Value="type Overlapped = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Overlapped</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Threading.Overlapped" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9762b-101">提供 Win32 <c>OVERLAPPED</c> 结构的托管表现形式，包括从 <see cref="T:System.Threading.Overlapped" /> 实例向 <see cref="T:System.Threading.NativeOverlapped" /> 结构传输信息的方法。</span><span class="sxs-lookup"><span data-stu-id="9762b-101">Provides a managed representation of a Win32 <c>OVERLAPPED</c> structure, including methods to transfer information from an <see cref="T:System.Threading.Overlapped" /> instance to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9762b-102"><xref:System.Threading.Overlapped.Pack%2A>和 <xref:System.Threading.Overlapped.UnsafePack%2A> 方法将信息从对象传输 <xref:System.Threading.Overlapped> 到 <xref:System.Threading.NativeOverlapped> 可传递给 Windows API 函数以进行异步文件 i/o 的结构。</span><span class="sxs-lookup"><span data-stu-id="9762b-102">The <xref:System.Threading.Overlapped.Pack%2A> and <xref:System.Threading.Overlapped.UnsafePack%2A> methods transfer information from an <xref:System.Threading.Overlapped> object to a <xref:System.Threading.NativeOverlapped> structure that can be passed to Windows API functions for asynchronous file I/O.</span></span> <span data-ttu-id="9762b-103"><xref:System.Threading.Overlapped.Unpack%2A>方法将信息从结构传输 <xref:System.Threading.NativeOverlapped> 到类的实例 <xref:System.Threading.Overlapped> 。</span><span class="sxs-lookup"><span data-stu-id="9762b-103">The <xref:System.Threading.Overlapped.Unpack%2A> method transfers information from a <xref:System.Threading.NativeOverlapped> structure to an instance of the <xref:System.Threading.Overlapped> class.</span></span>  
  
 <span data-ttu-id="9762b-104">对对象的属性所做的更改将 <xref:System.Threading.Overlapped> 影响其关联的 <xref:System.Threading.NativeOverlapped> 结构，反之亦然。</span><span class="sxs-lookup"><span data-stu-id="9762b-104">Changes to the properties of an <xref:System.Threading.Overlapped> object affect its associated <xref:System.Threading.NativeOverlapped> structure, and vice versa.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9762b-105">初始化 <see cref="T:System.Threading.Overlapped" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9762b-105">Initializes a new instance of the <see cref="T:System.Threading.Overlapped" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Overlapped ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Overlapped();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9762b-106">初始化 <see cref="T:System.Threading.Overlapped" /> 类的新的空实例。</span><span class="sxs-lookup"><span data-stu-id="9762b-106">Initializes a new, empty instance of the <see cref="T:System.Threading.Overlapped" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Overlapped (int offsetLo, int offsetHi, int hEvent, IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 offsetLo, int32 offsetHi, int32 hEvent, class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (offsetLo As Integer, offsetHi As Integer, hEvent As Integer, ar As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Overlapped(int offsetLo, int offsetHi, int hEvent, IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="new System.Threading.Overlapped : int * int * int * IAsyncResult -&gt; System.Threading.Overlapped" Usage="new System.Threading.Overlapped (offsetLo, offsetHi, hEvent, ar)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName Language="C#">[System.Obsolete("This constructor is not 64-bit compatible.  Use the constructor that takes an IntPtr for the event handle.  http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constructor is not 64-bit compatible.  Use the constructor that takes an IntPtr for the event handle.  http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Obsolete("This constructor is not 64-bit compatible.  Use the constructor that takes an IntPtr for the event handle.  https://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constructor is not 64-bit compatible.  Use the constructor that takes an IntPtr for the event handle.  https://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("Not 64bit compatible.  Please use the constructor that takes IntPtr for the event handle")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Not 64bit compatible.  Please use the constructor that takes IntPtr for the event handle")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="offsetLo" Type="System.Int32" />
        <Parameter Name="offsetHi" Type="System.Int32" />
        <Parameter Name="hEvent" Type="System.Int32" />
        <Parameter Name="ar" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="offsetLo"><span data-ttu-id="9762b-107">启动传输的文件位置的低位字。</span><span class="sxs-lookup"><span data-stu-id="9762b-107">The low word of the file position at which to start the transfer.</span></span></param>
        <param name="offsetHi"><span data-ttu-id="9762b-108">启动传输的文件位置的高位字。</span><span class="sxs-lookup"><span data-stu-id="9762b-108">The high word of the file position at which to start the transfer.</span></span></param>
        <param name="hEvent"><span data-ttu-id="9762b-109">当 I/O 操作完成时终止的事件的句柄。</span><span class="sxs-lookup"><span data-stu-id="9762b-109">The handle to an event that is signaled when the I/O operation is complete.</span></span></param>
        <param name="ar"><span data-ttu-id="9762b-110">一个实现 <see cref="T:System.IAsyncResult" /> 接口并提供 I/O 操作的状态信息的对象。</span><span class="sxs-lookup"><span data-stu-id="9762b-110">An object that implements the <see cref="T:System.IAsyncResult" /> interface and provides status information on the I/O operation.</span></span></param>
        <summary><span data-ttu-id="9762b-111">用指定的文件位置、当 I/O 操作完成时终止的事件的 32 位整型句柄、以及一个用来返回操作结果的接口初始化 <see cref="T:System.Threading.Overlapped" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9762b-111">Initializes a new instance of the <see cref="T:System.Threading.Overlapped" /> class with the specified file position, the 32-bit integer handle to an event that is signaled when the I/O operation is complete, and an interface through which to return the results of the operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9762b-112">使用 <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=nameWithType> 属性可获取从类派生的任何托管同步事件的句柄 <xref:System.Threading.WaitHandle> 。</span><span class="sxs-lookup"><span data-stu-id="9762b-112">Use the <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=nameWithType> property to get the handle of any managed synchronization event that derives from the <xref:System.Threading.WaitHandle> class.</span></span>  
  
 <span data-ttu-id="9762b-113">的实现 <xref:System.IAsyncResult> 提供有关 i/o 操作的状态信息。</span><span class="sxs-lookup"><span data-stu-id="9762b-113">Your implementation of <xref:System.IAsyncResult> provides status information on the I/O operation.</span></span> <span data-ttu-id="9762b-114">将其传递到参数中的构造函数 `ar` ，稍后用属性进行检索 <xref:System.Threading.Overlapped.AsyncResult%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9762b-114">Pass it to the constructor in the `ar` parameter, and retrieve it later with the <xref:System.Threading.Overlapped.AsyncResult%2A> property.</span></span> <span data-ttu-id="9762b-115">如果为或方法指定了回调方法 <xref:System.Threading.Overlapped.Pack%2A> <xref:System.Threading.Overlapped.UnsafePack%2A> ，则回调可以 <xref:System.IAsyncResult> 通过解包接收的结构来检索 <xref:System.Threading.NativeOverlapped> 。</span><span class="sxs-lookup"><span data-stu-id="9762b-115">If a callback method is specified for the <xref:System.Threading.Overlapped.Pack%2A> or <xref:System.Threading.Overlapped.UnsafePack%2A> method, the callback can retrieve your <xref:System.IAsyncResult> by unpacking the <xref:System.Threading.NativeOverlapped> structure it receives.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Overlapped (int offsetLo, int offsetHi, IntPtr hEvent, IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 offsetLo, int32 offsetHi, native int hEvent, class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (offsetLo As Integer, offsetHi As Integer, hEvent As IntPtr, ar As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Overlapped(int offsetLo, int offsetHi, IntPtr hEvent, IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="new System.Threading.Overlapped : int * int * nativeint * IAsyncResult -&gt; System.Threading.Overlapped" Usage="new System.Threading.Overlapped (offsetLo, offsetHi, hEvent, ar)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="offsetLo" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offsetHi" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hEvent" Type="System.IntPtr" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ar" Type="System.IAsyncResult" Index="3" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="offsetLo"><span data-ttu-id="9762b-116">启动传输的文件位置的低位字。</span><span class="sxs-lookup"><span data-stu-id="9762b-116">The low word of the file position at which to start the transfer.</span></span></param>
        <param name="offsetHi"><span data-ttu-id="9762b-117">启动传输的文件位置的高位字。</span><span class="sxs-lookup"><span data-stu-id="9762b-117">The high word of the file position at which to start the transfer.</span></span></param>
        <param name="hEvent"><span data-ttu-id="9762b-118">当 I/O 操作完成时终止的事件的句柄。</span><span class="sxs-lookup"><span data-stu-id="9762b-118">The handle to an event that is signaled when the I/O operation is complete.</span></span></param>
        <param name="ar"><span data-ttu-id="9762b-119">一个实现 <see cref="T:System.IAsyncResult" /> 接口并提供 I/O 操作的状态信息的对象。</span><span class="sxs-lookup"><span data-stu-id="9762b-119">An object that implements the <see cref="T:System.IAsyncResult" /> interface and provides status information on the I/O operation.</span></span></param>
        <summary><span data-ttu-id="9762b-120">用指定的文件位置、当 I/O 操作完成时终止的事件的句柄、以及一个用来返回操作结果的接口初始化 <see cref="T:System.Threading.Overlapped" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9762b-120">Initializes a new instance of the <see cref="T:System.Threading.Overlapped" /> class with the specified file position, the handle to an event that is signaled when the I/O operation is complete, and an interface through which to return the results of the operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9762b-121">若要获取从类派生的托管同步对象的句柄 <xref:System.Threading.WaitHandle> ，请使用 <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=nameWithType> 属性获取 <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> 对象，然后调用 <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="9762b-121">To get the handle of a managed synchronization object that derives from the <xref:System.Threading.WaitHandle> class, use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=nameWithType> property to get a <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> object, and then call the <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> method.</span></span>  
  
 <span data-ttu-id="9762b-122">的实现 <xref:System.IAsyncResult> 提供有关 i/o 操作的状态信息。</span><span class="sxs-lookup"><span data-stu-id="9762b-122">Your implementation of <xref:System.IAsyncResult> provides status information on the I/O operation.</span></span> <span data-ttu-id="9762b-123">将其传递到参数中的构造函数 `ar` ，稍后用属性进行检索 <xref:System.Threading.Overlapped.AsyncResult%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9762b-123">Pass it to the constructor in the `ar` parameter, and retrieve it later with the <xref:System.Threading.Overlapped.AsyncResult%2A> property.</span></span> <span data-ttu-id="9762b-124">如果为或方法指定了回调方法 <xref:System.Threading.Overlapped.Pack%2A> <xref:System.Threading.Overlapped.UnsafePack%2A> ，则回调可以 <xref:System.IAsyncResult> 通过解包接收的结构来检索 <xref:System.Threading.NativeOverlapped> 。</span><span class="sxs-lookup"><span data-stu-id="9762b-124">If a callback method is specified for the <xref:System.Threading.Overlapped.Pack%2A> or <xref:System.Threading.Overlapped.UnsafePack%2A> method, the callback can retrieve your <xref:System.IAsyncResult> by unpacking the <xref:System.Threading.NativeOverlapped> structure it receives.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncResult">
      <MemberSignature Language="C#" Value="public IAsyncResult AsyncResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IAsyncResult AsyncResult" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Overlapped.AsyncResult" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncResult As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IAsyncResult ^ AsyncResult { IAsyncResult ^ get(); void set(IAsyncResult ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncResult : IAsyncResult with get, set" Usage="System.Threading.Overlapped.AsyncResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9762b-125">获取或设置提供 I/O 操作的状态信息的对象。</span><span class="sxs-lookup"><span data-stu-id="9762b-125">Gets or sets the object that provides status information on the I/O operation.</span></span></summary>
        <value><span data-ttu-id="9762b-126">一个实现 <see cref="T:System.IAsyncResult" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="9762b-126">An object that implements the <see cref="T:System.IAsyncResult" /> interface.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventHandle">
      <MemberSignature Language="C#" Value="public int EventHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EventHandle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Overlapped.EventHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property EventHandle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EventHandle { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EventHandle : int with get, set" Usage="System.Threading.Overlapped.EventHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName Language="C#">[System.Obsolete("This property is not 64-bit compatible.  Use EventHandleIntPtr instead.  http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This property is not 64-bit compatible.  Use EventHandleIntPtr instead.  http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Obsolete("This property is not 64-bit compatible.  Use EventHandleIntPtr instead.  https://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This property is not 64-bit compatible.  Use EventHandleIntPtr instead.  https://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("Not 64bit compatible.  Use EventHandleIntPtr instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Not 64bit compatible.  Use EventHandleIntPtr instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9762b-127">获取或设置当 I/O 操作完成时终止的同步事件的 32 位整型句柄。</span><span class="sxs-lookup"><span data-stu-id="9762b-127">Gets or sets the 32-bit integer handle to a synchronization event that is signaled when the I/O operation is complete.</span></span></summary>
        <value><span data-ttu-id="9762b-128">表示同步事件句柄的 <see cref="T:System.Int32" /> 值。</span><span class="sxs-lookup"><span data-stu-id="9762b-128">An <see cref="T:System.Int32" /> value representing the handle of the synchronization event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9762b-129">此属性不能用于64位平台。</span><span class="sxs-lookup"><span data-stu-id="9762b-129">This property cannot be used on 64-bit platforms.</span></span> <span data-ttu-id="9762b-130">改用 <xref:System.Threading.Overlapped.EventHandleIntPtr%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="9762b-130">Use the <xref:System.Threading.Overlapped.EventHandleIntPtr%2A> property instead.</span></span>  
  
 <span data-ttu-id="9762b-131">使用 <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=nameWithType> 属性可获取从类派生的任何托管同步事件的句柄 <xref:System.Threading.WaitHandle> 。</span><span class="sxs-lookup"><span data-stu-id="9762b-131">Use the <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=nameWithType> property to get the handle of any managed synchronization event that derives from the <xref:System.Threading.WaitHandle> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventHandleIntPtr">
      <MemberSignature Language="C#" Value="public IntPtr EventHandleIntPtr { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int EventHandleIntPtr" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Overlapped.EventHandleIntPtr" />
      <MemberSignature Language="VB.NET" Value="Public Property EventHandleIntPtr As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr EventHandleIntPtr { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.EventHandleIntPtr : nativeint with get, set" Usage="System.Threading.Overlapped.EventHandleIntPtr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9762b-132">获取或设置当 I/O 操作完成时终止的同步事件的句柄。</span><span class="sxs-lookup"><span data-stu-id="9762b-132">Gets or sets the handle to the synchronization event that is signaled when the I/O operation is complete.</span></span></summary>
        <value><span data-ttu-id="9762b-133">表示事件句柄的 <see cref="T:System.IntPtr" />。</span><span class="sxs-lookup"><span data-stu-id="9762b-133">An <see cref="T:System.IntPtr" /> representing the handle of the event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9762b-134">若要获取从类派生的托管同步对象的句柄 <xref:System.Threading.WaitHandle> ，请使用 <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=nameWithType> 属性获取 <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> 对象，然后调用 <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="9762b-134">To get the handle of a managed synchronization object that derives from the <xref:System.Threading.WaitHandle> class, use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=nameWithType> property to get a <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> object, and then call the <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Free">
      <MemberSignature Language="C#" Value="public static void Free (System.Threading.NativeOverlapped* nativeOverlappedPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Free(valuetype System.Threading.NativeOverlapped* nativeOverlappedPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Free(System::Threading::NativeOverlapped* nativeOverlappedPtr);" />
      <MemberSignature Language="F#" Value="static member Free : nativeptr&lt;System.Threading.NativeOverlapped&gt; -&gt; unit" Usage="System.Threading.Overlapped.Free nativeOverlappedPtr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeOverlappedPtr" Type="System.Threading.NativeOverlapped*" />
      </Parameters>
      <Docs>
        <param name="nativeOverlappedPtr"><span data-ttu-id="9762b-135">指向要释放的 <see cref="T:System.Threading.NativeOverlapped" /> 结构的指针。</span><span class="sxs-lookup"><span data-stu-id="9762b-135">A pointer to the <see cref="T:System.Threading.NativeOverlapped" /> structure to be freed.</span></span></param>
        <summary><span data-ttu-id="9762b-136">释放与 <see cref="Overload:System.Threading.Overlapped.Pack" /> 方法分配的本机重叠结构关联的非托管内存。</span><span class="sxs-lookup"><span data-stu-id="9762b-136">Frees the unmanaged memory associated with a native overlapped structure allocated by the <see cref="Overload:System.Threading.Overlapped.Pack" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9762b-137">在 <xref:System.Threading.Overlapped.Free%2A> 从方法收到的每个指针上，必须只调用一次此方法 <xref:System.Threading.NativeOverlapped> <xref:System.Threading.Overlapped.Pack%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9762b-137">You must call the <xref:System.Threading.Overlapped.Free%2A> method exactly once on every <xref:System.Threading.NativeOverlapped> pointer you receive from the <xref:System.Threading.Overlapped.Pack%2A> method.</span></span> <span data-ttu-id="9762b-138">如果未调用 <xref:System.Threading.Overlapped.Free%2A> 方法，则会泄漏内存。</span><span class="sxs-lookup"><span data-stu-id="9762b-138">If you don't call the <xref:System.Threading.Overlapped.Free%2A> method, you will leak memory.</span></span> <span data-ttu-id="9762b-139">如果多次调用此 <xref:System.Threading.Overlapped.Free%2A> 方法，内存将损坏。</span><span class="sxs-lookup"><span data-stu-id="9762b-139">If you call the <xref:System.Threading.Overlapped.Free%2A> method more than once, memory will be corrupted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9762b-140"><paramref name="nativeOverlappedPtr" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9762b-140"><paramref name="nativeOverlappedPtr" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OffsetHigh">
      <MemberSignature Language="C#" Value="public int OffsetHigh { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OffsetHigh" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Overlapped.OffsetHigh" />
      <MemberSignature Language="VB.NET" Value="Public Property OffsetHigh As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OffsetHigh { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.OffsetHigh : int with get, set" Usage="System.Threading.Overlapped.OffsetHigh" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9762b-141">获取或设置启动传输的文件位置的高序位字。</span><span class="sxs-lookup"><span data-stu-id="9762b-141">Gets or sets the high-order word of the file position at which to start the transfer.</span></span> <span data-ttu-id="9762b-142">文件位置是距文件起始处的字节偏移量。</span><span class="sxs-lookup"><span data-stu-id="9762b-142">The file position is a byte offset from the start of the file.</span></span></summary>
        <value><span data-ttu-id="9762b-143">表示文件位置高位字的 <see cref="T:System.Int32" /> 值。</span><span class="sxs-lookup"><span data-stu-id="9762b-143">An <see cref="T:System.Int32" /> value representing the high word of the file position.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetLow">
      <MemberSignature Language="C#" Value="public int OffsetLow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OffsetLow" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Overlapped.OffsetLow" />
      <MemberSignature Language="VB.NET" Value="Public Property OffsetLow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OffsetLow { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.OffsetLow : int with get, set" Usage="System.Threading.Overlapped.OffsetLow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9762b-144">获取或设置启动传输的文件位置的低序位字。</span><span class="sxs-lookup"><span data-stu-id="9762b-144">Gets or sets the low-order word of the file position at which to start the transfer.</span></span> <span data-ttu-id="9762b-145">文件位置是距文件起始处的字节偏移量。</span><span class="sxs-lookup"><span data-stu-id="9762b-145">The file position is a byte offset from the start of the file.</span></span></summary>
        <value><span data-ttu-id="9762b-146">表示文件位置低位字的 <see cref="T:System.Int32" /> 值。</span><span class="sxs-lookup"><span data-stu-id="9762b-146">An <see cref="T:System.Int32" /> value representing the low word of the file position.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Pack">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9762b-147">将当前实例打包为一个 <see cref="T:System.Threading.NativeOverlapped" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="9762b-147">Packs the current instance into a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Pack">
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback? iocb);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.NativeOverlapped* Pack(class System.Threading.IOCompletionCallback iocb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::NativeOverlapped* Pack(System::Threading::IOCompletionCallback ^ iocb);" />
      <MemberSignature Language="F#" Value="member this.Pack : System.Threading.IOCompletionCallback -&gt; nativeptr&lt;System.Threading.NativeOverlapped&gt;" Usage="overlapped.Pack iocb" />
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName Language="C#">[System.Obsolete("This method is not safe.  Use Pack (iocb, userData) instead.  http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is not safe.  Use Pack (iocb, userData) instead.  http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Obsolete("This method is not safe.  Use Pack (iocb, userData) instead.  https://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is not safe.  Use Pack (iocb, userData) instead.  https://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("Use Pack(iocb, userData) instead")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use Pack(iocb, userData) instead")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.NativeOverlapped*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iocb" Type="System.Threading.IOCompletionCallback" />
      </Parameters>
      <Docs>
        <param name="iocb"><span data-ttu-id="9762b-148">一个 <see cref="T:System.Threading.IOCompletionCallback" /> 委托，表示在异步 I/O 操作完成时调用的回调方法。</span><span class="sxs-lookup"><span data-stu-id="9762b-148">An <see cref="T:System.Threading.IOCompletionCallback" /> delegate that represents the callback method invoked when the asynchronous I/O operation completes.</span></span></param>
        <summary><span data-ttu-id="9762b-149">将当前实例打包为一个 <see cref="T:System.Threading.NativeOverlapped" /> 结构，并指定当异步 I/O 操作完成时调用的委托。</span><span class="sxs-lookup"><span data-stu-id="9762b-149">Packs the current instance into a <see cref="T:System.Threading.NativeOverlapped" /> structure, specifying the delegate to be invoked when the asynchronous I/O operation is complete.</span></span></summary>
        <returns><span data-ttu-id="9762b-150">一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</span><span class="sxs-lookup"><span data-stu-id="9762b-150">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9762b-151">此方法返回的非托管指针可以在重叠 i/o 操作中传递到操作系统。</span><span class="sxs-lookup"><span data-stu-id="9762b-151">The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations.</span></span> <span data-ttu-id="9762b-152"><xref:System.Threading.NativeOverlapped>在调用之前，结构在物理内存中是固定的 <xref:System.Threading.Overlapped.Unpack%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9762b-152">The <xref:System.Threading.NativeOverlapped> structure is fixed in physical memory until <xref:System.Threading.Overlapped.Unpack%2A> is called.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9762b-153">调用方负责固定缓冲区。</span><span class="sxs-lookup"><span data-stu-id="9762b-153">The caller is responsible for pinning the buffer.</span></span> <span data-ttu-id="9762b-154">但是，如果卸载了应用程序域，则会销毁固定缓冲区的句柄，并释放缓冲区，以使 i/o 操作写入已释放的地址。</span><span class="sxs-lookup"><span data-stu-id="9762b-154">If the application domain is unloaded, however, the handle to the pinned buffer is destroyed and the buffer is released, leaving the I/O operation to write to the freed address.</span></span> <span data-ttu-id="9762b-155">出于此原因，更好的方法是使用 <xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29> 方法重载，其中运行时固定缓冲区。</span><span class="sxs-lookup"><span data-stu-id="9762b-155">For this reason, it is better to use the <xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29> method overload, in which the runtime pins the buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9762b-156">已对当前的 <see cref="T:System.Threading.Overlapped" /> 打包。</span><span class="sxs-lookup"><span data-stu-id="9762b-156">The current <see cref="T:System.Threading.Overlapped" /> has already been packed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Pack">
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped*? Pack (System.Threading.IOCompletionCallback iocb, object userData);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.NativeOverlapped* Pack(class System.Threading.IOCompletionCallback iocb, object userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::NativeOverlapped* Pack(System::Threading::IOCompletionCallback ^ iocb, System::Object ^ userData);" />
      <MemberSignature Language="F#" Value="member this.Pack : System.Threading.IOCompletionCallback * obj -&gt; nativeptr&lt;System.Threading.NativeOverlapped&gt;" Usage="overlapped.Pack (iocb, userData)" />
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb, object userData);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.NativeOverlapped*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iocb" Type="System.Threading.IOCompletionCallback" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userData" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="iocb"><span data-ttu-id="9762b-157">一个 <see cref="T:System.Threading.IOCompletionCallback" /> 委托，表示在异步 I/O 操作完成时调用的回调方法。</span><span class="sxs-lookup"><span data-stu-id="9762b-157">An <see cref="T:System.Threading.IOCompletionCallback" /> delegate that represents the callback method invoked when the asynchronous I/O operation completes.</span></span></param>
        <param name="userData"><span data-ttu-id="9762b-158">对象或对象的数组，表示用于操作的输入或输出缓冲区。</span><span class="sxs-lookup"><span data-stu-id="9762b-158">An object or array of objects representing the input or output buffer for the operation.</span></span> <span data-ttu-id="9762b-159">每个对象都表示一个缓冲区，例如字节数组。</span><span class="sxs-lookup"><span data-stu-id="9762b-159">Each object represents a buffer, for example an array of bytes.</span></span></param>
        <summary><span data-ttu-id="9762b-160">将当前实例打包为一个 <see cref="T:System.Threading.NativeOverlapped" /> 结构，并指定当异步 I/O 操作完成时调用的委托，以及作为缓冲区的托管对象。</span><span class="sxs-lookup"><span data-stu-id="9762b-160">Packs the current instance into a <see cref="T:System.Threading.NativeOverlapped" /> structure, specifying a delegate that is invoked when the asynchronous I/O operation is complete and a managed object that serves as a buffer.</span></span></summary>
        <returns><span data-ttu-id="9762b-161">一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</span><span class="sxs-lookup"><span data-stu-id="9762b-161">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9762b-162">此方法返回的非托管指针可以在重叠 i/o 操作中传递到操作系统。</span><span class="sxs-lookup"><span data-stu-id="9762b-162">The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations.</span></span> <span data-ttu-id="9762b-163"><xref:System.Threading.NativeOverlapped>在调用之前，结构在物理内存中是固定的 <xref:System.Threading.Overlapped.Unpack%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9762b-163">The <xref:System.Threading.NativeOverlapped> structure is fixed in physical memory until <xref:System.Threading.Overlapped.Unpack%2A> is called.</span></span>  
  
 <span data-ttu-id="9762b-164">在中指定的缓冲区 `userData` 必须与传递到执行异步 i/o 的非托管操作系统函数的缓冲区相同。</span><span class="sxs-lookup"><span data-stu-id="9762b-164">The buffer or buffers specified in `userData` must be the same as those passed to the unmanaged operating system function that performs the asynchronous I/O.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9762b-165">运行时在 i/o 操作的持续时间内固定指定的缓冲区 `userData` 。</span><span class="sxs-lookup"><span data-stu-id="9762b-165">The runtime pins the buffer or buffers specified in `userData` for the duration of the I/O operation.</span></span> <span data-ttu-id="9762b-166">如果卸载了应用程序域，则运行时会将内存保持固定状态，直到 i/o 操作完成。</span><span class="sxs-lookup"><span data-stu-id="9762b-166">If the application domain is unloaded, the runtime keeps the memory pinned until the I/O operation completes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9762b-167">已对当前的 <see cref="T:System.Threading.Overlapped" /> 打包。</span><span class="sxs-lookup"><span data-stu-id="9762b-167">The current <see cref="T:System.Threading.Overlapped" /> has already been packed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Unpack">
      <MemberSignature Language="C#" Value="public static System.Threading.Overlapped? Unpack (System.Threading.NativeOverlapped* nativeOverlappedPtr);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Overlapped Unpack(valuetype System.Threading.NativeOverlapped* nativeOverlappedPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Overlapped ^ Unpack(System::Threading::NativeOverlapped* nativeOverlappedPtr);" />
      <MemberSignature Language="F#" Value="static member Unpack : nativeptr&lt;System.Threading.NativeOverlapped&gt; -&gt; System.Threading.Overlapped" Usage="System.Threading.Overlapped.Unpack nativeOverlappedPtr" />
      <MemberSignature Language="C#" Value="public static System.Threading.Overlapped Unpack (System.Threading.NativeOverlapped* nativeOverlappedPtr);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Overlapped</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeOverlappedPtr" Type="System.Threading.NativeOverlapped*" />
      </Parameters>
      <Docs>
        <param name="nativeOverlappedPtr"><span data-ttu-id="9762b-168">一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</span><span class="sxs-lookup"><span data-stu-id="9762b-168">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></param>
        <summary><span data-ttu-id="9762b-169">将指定的非托管 <see cref="T:System.Threading.NativeOverlapped" /> 结构解压缩为 <see cref="T:System.Threading.Overlapped" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="9762b-169">Unpacks the specified unmanaged <see cref="T:System.Threading.NativeOverlapped" /> structure into a managed <see cref="T:System.Threading.Overlapped" /> object.</span></span></summary>
        <returns><span data-ttu-id="9762b-170">一个 <see cref="T:System.Threading.Overlapped" /> 对象，包含从本机结构解压缩的信息。</span><span class="sxs-lookup"><span data-stu-id="9762b-170">An <see cref="T:System.Threading.Overlapped" /> object containing the information unpacked from the native structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9762b-171">在 <xref:System.Threading.NativeOverlapped> 调用方法之前，不会从物理内存释放结构 <xref:System.Threading.Overlapped.Free%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9762b-171">The <xref:System.Threading.NativeOverlapped> structure is not freed from physical memory until you call the <xref:System.Threading.Overlapped.Free%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9762b-172"><paramref name="nativeOverlappedPtr" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9762b-172"><paramref name="nativeOverlappedPtr" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UnsafePack">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9762b-173">将当前实例打包为一个 <see cref="T:System.Threading.NativeOverlapped" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="9762b-173">Packs the current instance into a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span> <span data-ttu-id="9762b-174">不传播该调用堆栈。</span><span class="sxs-lookup"><span data-stu-id="9762b-174">Does not propagate the calling stack.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UnsafePack">
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback? iocb);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.NativeOverlapped* UnsafePack(class System.Threading.IOCompletionCallback iocb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::NativeOverlapped* UnsafePack(System::Threading::IOCompletionCallback ^ iocb);" />
      <MemberSignature Language="F#" Value="member this.UnsafePack : System.Threading.IOCompletionCallback -&gt; nativeptr&lt;System.Threading.NativeOverlapped&gt;" Usage="overlapped.UnsafePack iocb" />
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName Language="C#">[System.Obsolete("This method is not safe.  Use UnsafePack (iocb, userData) instead.  http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is not safe.  Use UnsafePack (iocb, userData) instead.  http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-3.1;netstandard-2.1">
          <AttributeName Language="C#">[System.Obsolete("This method is not safe.  Use UnsafePack (iocb, userData) instead.  https://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is not safe.  Use UnsafePack (iocb, userData) instead.  https://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("Use UnsafePack(iocb, userData) instead")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use UnsafePack(iocb, userData) instead")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.NativeOverlapped*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iocb" Type="System.Threading.IOCompletionCallback" />
      </Parameters>
      <Docs>
        <param name="iocb"><span data-ttu-id="9762b-175">一个 <see cref="T:System.Threading.IOCompletionCallback" /> 委托，表示在异步 I/O 操作完成时调用的回调方法。</span><span class="sxs-lookup"><span data-stu-id="9762b-175">An <see cref="T:System.Threading.IOCompletionCallback" /> delegate that represents the callback method invoked when the asynchronous I/O operation completes.</span></span></param>
        <summary><span data-ttu-id="9762b-176">将当前实例打包为一个 <see cref="T:System.Threading.NativeOverlapped" /> 结构，并指定当异步 I/O 操作完成时调用的委托。</span><span class="sxs-lookup"><span data-stu-id="9762b-176">Packs the current instance into a <see cref="T:System.Threading.NativeOverlapped" /> structure specifying the delegate to invoke when the asynchronous I/O operation is complete.</span></span> <span data-ttu-id="9762b-177">不传播该调用堆栈。</span><span class="sxs-lookup"><span data-stu-id="9762b-177">Does not propagate the calling stack.</span></span></summary>
        <returns><span data-ttu-id="9762b-178">一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</span><span class="sxs-lookup"><span data-stu-id="9762b-178">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9762b-179">此方法返回的非托管指针可以在重叠 i/o 操作中传递到操作系统。</span><span class="sxs-lookup"><span data-stu-id="9762b-179">The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations.</span></span> <span data-ttu-id="9762b-180"><xref:System.Threading.NativeOverlapped>在调用之前，结构在物理内存中是固定的 <xref:System.Threading.Overlapped.Unpack%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9762b-180">The <xref:System.Threading.NativeOverlapped> structure is fixed in physical memory until <xref:System.Threading.Overlapped.Unpack%2A> is called.</span></span>  
  
 <span data-ttu-id="9762b-181">调用方负责固定缓冲区。</span><span class="sxs-lookup"><span data-stu-id="9762b-181">The caller is responsible for pinning the buffer.</span></span> <span data-ttu-id="9762b-182">但是，如果卸载了应用程序域，则会销毁固定缓冲区的句柄，并释放缓冲区，以使 i/o 操作写入已释放的地址。</span><span class="sxs-lookup"><span data-stu-id="9762b-182">If the application domain is unloaded, however, the handle to the pinned buffer is destroyed and the buffer is released, leaving the I/O operation to write to the freed address.</span></span> <span data-ttu-id="9762b-183">出于此原因，更好的方法是使用 <xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29> 方法重载，其中运行时固定缓冲区。</span><span class="sxs-lookup"><span data-stu-id="9762b-183">For this reason, it is better to use the <xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29> method overload, in which the runtime pins the buffer.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9762b-184">使用 <xref:System.Threading.Overlapped.UnsafePack%2A> 方法可能会无意中打开安全漏洞。</span><span class="sxs-lookup"><span data-stu-id="9762b-184">Using the <xref:System.Threading.Overlapped.UnsafePack%2A> method could inadvertently open up a security hole.</span></span> <span data-ttu-id="9762b-185">代码访问安全性根据堆栈上所有调用方的权限检查其权限。</span><span class="sxs-lookup"><span data-stu-id="9762b-185">Code access security bases its permission checks on the permissions of all the callers on the stack.</span></span> <span data-ttu-id="9762b-186"><xref:System.Threading.Overlapped.UnsafePack%2A>方法不传播调用堆栈。</span><span class="sxs-lookup"><span data-stu-id="9762b-186">The <xref:System.Threading.Overlapped.UnsafePack%2A> method does not propagate the calling stack.</span></span> <span data-ttu-id="9762b-187">恶意代码可以利用此漏洞来避免权限检查。</span><span class="sxs-lookup"><span data-stu-id="9762b-187">Malicious code might be able to exploit this to avoid permission checks.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9762b-188">已对当前的 <see cref="T:System.Threading.Overlapped" /> 打包。</span><span class="sxs-lookup"><span data-stu-id="9762b-188">The current <see cref="T:System.Threading.Overlapped" /> has already been packed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnsafePack">
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped*? UnsafePack (System.Threading.IOCompletionCallback iocb, object userData);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.NativeOverlapped* UnsafePack(class System.Threading.IOCompletionCallback iocb, object userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::NativeOverlapped* UnsafePack(System::Threading::IOCompletionCallback ^ iocb, System::Object ^ userData);" />
      <MemberSignature Language="F#" Value="member this.UnsafePack : System.Threading.IOCompletionCallback * obj -&gt; nativeptr&lt;System.Threading.NativeOverlapped&gt;" Usage="overlapped.UnsafePack (iocb, userData)" />
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb, object userData);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.NativeOverlapped*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iocb" Type="System.Threading.IOCompletionCallback" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userData" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="iocb"><span data-ttu-id="9762b-189">一个 <see cref="T:System.Threading.IOCompletionCallback" /> 委托，表示在异步 I/O 操作完成时调用的回调方法。</span><span class="sxs-lookup"><span data-stu-id="9762b-189">An <see cref="T:System.Threading.IOCompletionCallback" /> delegate that represents the callback method invoked when the asynchronous I/O operation completes.</span></span></param>
        <param name="userData"><span data-ttu-id="9762b-190">对象或对象的数组，表示用于操作的输入或输出缓冲区。</span><span class="sxs-lookup"><span data-stu-id="9762b-190">An object or array of objects representing the input or output buffer for the operation.</span></span> <span data-ttu-id="9762b-191">每个对象都表示一个缓冲区，例如字节数组。</span><span class="sxs-lookup"><span data-stu-id="9762b-191">Each object represents a buffer, for example an array of bytes.</span></span></param>
        <summary><span data-ttu-id="9762b-192">将当前实例打包为一个 <see cref="T:System.Threading.NativeOverlapped" /> 结构，并指定当异步 I/O 操作完成时调用的委托，以及作为缓冲区的托管对象。</span><span class="sxs-lookup"><span data-stu-id="9762b-192">Packs the current instance into a <see cref="T:System.Threading.NativeOverlapped" /> structure, specifying the delegate to invoke when the asynchronous I/O operation is complete and the managed object that serves as a buffer.</span></span> <span data-ttu-id="9762b-193">不传播该调用堆栈。</span><span class="sxs-lookup"><span data-stu-id="9762b-193">Does not propagate the calling stack.</span></span></summary>
        <returns><span data-ttu-id="9762b-194">一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</span><span class="sxs-lookup"><span data-stu-id="9762b-194">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9762b-195">此方法返回的非托管指针可以在重叠 i/o 操作中传递到操作系统。</span><span class="sxs-lookup"><span data-stu-id="9762b-195">The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations.</span></span> <span data-ttu-id="9762b-196"><xref:System.Threading.NativeOverlapped>在调用之前，结构在物理内存中是固定的 <xref:System.Threading.Overlapped.Unpack%2A> 。</span><span class="sxs-lookup"><span data-stu-id="9762b-196">The <xref:System.Threading.NativeOverlapped> structure is fixed in physical memory until <xref:System.Threading.Overlapped.Unpack%2A> is called.</span></span>  
  
 <span data-ttu-id="9762b-197">在中指定的缓冲区 `userData` 必须与传递到执行异步 i/o 的非托管操作系统函数的缓冲区相同。</span><span class="sxs-lookup"><span data-stu-id="9762b-197">The buffer or buffers specified in `userData` must be the same as those passed to the unmanaged operating system function that performs the asynchronous I/O.</span></span>  
  
 <span data-ttu-id="9762b-198">运行时在 i/o 操作的持续时间内固定指定的缓冲区 `userData` 。</span><span class="sxs-lookup"><span data-stu-id="9762b-198">The runtime pins the buffer or buffers specified in`userData` for the duration of the I/O operation.</span></span> <span data-ttu-id="9762b-199">如果卸载了应用程序域，则运行时会将内存保持固定状态，直到 i/o 操作完成。</span><span class="sxs-lookup"><span data-stu-id="9762b-199">If the application domain is unloaded, the runtime keeps the memory pinned until the I/O operation completes.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9762b-200">使用 <xref:System.Threading.Overlapped.UnsafePack%2A> 方法可能会无意中打开安全漏洞。</span><span class="sxs-lookup"><span data-stu-id="9762b-200">Using the <xref:System.Threading.Overlapped.UnsafePack%2A> method could inadvertently open up a security hole.</span></span> <span data-ttu-id="9762b-201">代码访问安全性根据堆栈上所有调用方的权限检查其权限。</span><span class="sxs-lookup"><span data-stu-id="9762b-201">Code access security bases its permission checks on the permissions of all the callers on the stack.</span></span> <span data-ttu-id="9762b-202"><xref:System.Threading.Overlapped.UnsafePack%2A>方法不传播调用堆栈。</span><span class="sxs-lookup"><span data-stu-id="9762b-202">The <xref:System.Threading.Overlapped.UnsafePack%2A> method does not propagate the calling stack.</span></span> <span data-ttu-id="9762b-203">恶意代码可以利用此漏洞来避免权限检查。</span><span class="sxs-lookup"><span data-stu-id="9762b-203">Malicious code might be able to exploit this to avoid permission checks.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9762b-204">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="9762b-204">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9762b-205">已对当前的 <see cref="T:System.Threading.Overlapped" /> 打包。</span><span class="sxs-lookup"><span data-stu-id="9762b-205">The current <see cref="T:System.Threading.Overlapped" /> is already packed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
