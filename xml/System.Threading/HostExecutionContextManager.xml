<Type Name="HostExecutionContextManager" FullName="System.Threading.HostExecutionContextManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d837ebd04129c40a23d1ba1994a7f7cb680fd423" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89705717" /></Metadata><TypeSignature Language="C#" Value="public class HostExecutionContextManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HostExecutionContextManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.HostExecutionContextManager" />
  <TypeSignature Language="VB.NET" Value="Public Class HostExecutionContextManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostExecutionContextManager" />
  <TypeSignature Language="F#" Value="type HostExecutionContextManager = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Threading" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="afe4f-101">提供使公共语言运行时宿主可以参与执行上下文的流动（或移植）的功能。</span><span class="sxs-lookup"><span data-stu-id="afe4f-101">Provides the functionality that allows a common language runtime host to participate in the flow, or migration, of the execution context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afe4f-102">如果当前 <xref:System.AppDomainManager> <xref:System.Threading.HostExecutionContextManager> 在其属性中引用了 <xref:System.AppDomainManager.HostExecutionContextManager%2A> ，则在每次调用方法时，公共语言运行时都会调用该管理器 <xref:System.Threading.ExecutionContext.Run%2A?displayProperty=nameWithType> ，以允许主机参与到执行上下文流中。</span><span class="sxs-lookup"><span data-stu-id="afe4f-102">If the current <xref:System.AppDomainManager> has a reference to a <xref:System.Threading.HostExecutionContextManager> in its <xref:System.AppDomainManager.HostExecutionContextManager%2A> property, then the common language runtime calls the manager every time a call to the <xref:System.Threading.ExecutionContext.Run%2A?displayProperty=nameWithType> method occurs, to allow the host to participate in the flow of the execution context.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostExecutionContextManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.HostExecutionContextManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostExecutionContextManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="afe4f-103">初始化 <see cref="T:System.Threading.HostExecutionContextManager" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="afe4f-103">Initializes a new instance of the <see cref="T:System.Threading.HostExecutionContextManager" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public virtual System.Threading.HostExecutionContext Capture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.HostExecutionContext Capture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.HostExecutionContextManager.Capture" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Capture () As HostExecutionContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::HostExecutionContext ^ Capture();" />
      <MemberSignature Language="F#" Value="abstract member Capture : unit -&gt; System.Threading.HostExecutionContext&#xA;override this.Capture : unit -&gt; System.Threading.HostExecutionContext" Usage="hostExecutionContextManager.Capture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.HostExecutionContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="afe4f-104">从当前线程捕获宿主执行上下文。</span><span class="sxs-lookup"><span data-stu-id="afe4f-104">Captures the host execution context from the current thread.</span></span></summary>
        <returns><span data-ttu-id="afe4f-105">一个 <see cref="T:System.Threading.HostExecutionContext" /> 对象，表示当前线程的宿主执行上下文。</span><span class="sxs-lookup"><span data-stu-id="afe4f-105">A <see cref="T:System.Threading.HostExecutionContext" /> object representing the host execution context of the current thread.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afe4f-106"><xref:System.Threading.HostExecutionContext>是使用安全句柄创建的，该句柄包含 `IUnknown` 用于执行当前线程的主机的指针。</span><span class="sxs-lookup"><span data-stu-id="afe4f-106">The <xref:System.Threading.HostExecutionContext> is created using a safe handle containing the `IUnknown` pointer for the host executing the current thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Revert">
      <MemberSignature Language="C#" Value="public virtual void Revert (object previousState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Revert(object previousState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.HostExecutionContextManager.Revert(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Revert (previousState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Revert(System::Object ^ previousState);" />
      <MemberSignature Language="F#" Value="abstract member Revert : obj -&gt; unit&#xA;override this.Revert : obj -&gt; unit" Usage="hostExecutionContextManager.Revert previousState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previousState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="previousState"><span data-ttu-id="afe4f-107">要恢复为的以前的上下文状态。</span><span class="sxs-lookup"><span data-stu-id="afe4f-107">The previous context state to revert to.</span></span></param>
        <summary><span data-ttu-id="afe4f-108">将宿主执行上下文还原为其以前的状态。</span><span class="sxs-lookup"><span data-stu-id="afe4f-108">Restores the host execution context to its prior state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afe4f-109">`previousState` 必须是方法返回的对象 <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> 。</span><span class="sxs-lookup"><span data-stu-id="afe4f-109">`previousState` must be the object returned by the <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afe4f-110"><paramref name="previousState" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="afe4f-110"><paramref name="previousState" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="afe4f-111">- 或 -</span><span class="sxs-lookup"><span data-stu-id="afe4f-111">-or-</span></span> 
 <span data-ttu-id="afe4f-112">未对当前线程创建 <paramref name="previousState" />。</span><span class="sxs-lookup"><span data-stu-id="afe4f-112"><paramref name="previousState" /> was not created on the current thread.</span></span>  
  
<span data-ttu-id="afe4f-113">- 或 -</span><span class="sxs-lookup"><span data-stu-id="afe4f-113">-or-</span></span> 
 <span data-ttu-id="afe4f-114"><paramref name="previousState" /> 不是 <see cref="T:System.Threading.HostExecutionContext" /> 的最后的状态。</span><span class="sxs-lookup"><span data-stu-id="afe4f-114"><paramref name="previousState" /> is not the last state for the <see cref="T:System.Threading.HostExecutionContext" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetHostExecutionContext">
      <MemberSignature Language="C#" Value="public virtual object SetHostExecutionContext (System.Threading.HostExecutionContext hostExecutionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SetHostExecutionContext(class System.Threading.HostExecutionContext hostExecutionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetHostExecutionContext (hostExecutionContext As HostExecutionContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ SetHostExecutionContext(System::Threading::HostExecutionContext ^ hostExecutionContext);" />
      <MemberSignature Language="F#" Value="abstract member SetHostExecutionContext : System.Threading.HostExecutionContext -&gt; obj&#xA;override this.SetHostExecutionContext : System.Threading.HostExecutionContext -&gt; obj" Usage="hostExecutionContextManager.SetHostExecutionContext hostExecutionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostExecutionContext" Type="System.Threading.HostExecutionContext" />
      </Parameters>
      <Docs>
        <param name="hostExecutionContext"><span data-ttu-id="afe4f-115">要设置的 <see cref="T:System.Threading.HostExecutionContext" />。</span><span class="sxs-lookup"><span data-stu-id="afe4f-115">The <see cref="T:System.Threading.HostExecutionContext" /> to be set.</span></span></param>
        <summary><span data-ttu-id="afe4f-116">将当前宿主执行上下文设置为指定的宿主执行上下文。</span><span class="sxs-lookup"><span data-stu-id="afe4f-116">Sets the current host execution context to the specified host execution context.</span></span></summary>
        <returns><span data-ttu-id="afe4f-117">一个对象，用于将 <see cref="T:System.Threading.HostExecutionContext" /> 还原为其以前的状态。</span><span class="sxs-lookup"><span data-stu-id="afe4f-117">An object for restoring the <see cref="T:System.Threading.HostExecutionContext" /> to its previous state.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afe4f-118"><xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A>方法设置当前的宿主执行上下文 <xref:System.Threading.HostExecutionContext> 。</span><span class="sxs-lookup"><span data-stu-id="afe4f-118">The <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> method sets the host execution context for the current <xref:System.Threading.HostExecutionContext>.</span></span>  <span data-ttu-id="afe4f-119"><xref:System.Threading.HostExecutionContext>作为另一个方法调用的参数使用的 <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> 不能作为此方法的参数传入。</span><span class="sxs-lookup"><span data-stu-id="afe4f-119">A <xref:System.Threading.HostExecutionContext> that has been used as the argument to another <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> method call cannot be passed in as the parameter for this method.</span></span> <span data-ttu-id="afe4f-120">相反，请使用 <xref:System.Threading.HostExecutionContext.CreateCopy%2A?displayProperty=nameWithType> 方法创建对象的副本 <xref:System.Threading.HostExecutionContext> ，然后使用副本设置宿主执行上下文。</span><span class="sxs-lookup"><span data-stu-id="afe4f-120">Instead, use the <xref:System.Threading.HostExecutionContext.CreateCopy%2A?displayProperty=nameWithType> method to create a copy of a <xref:System.Threading.HostExecutionContext> object and then use the copy to set the host execution context.</span></span>  
  
 <span data-ttu-id="afe4f-121"><xref:System.Threading.HostExecutionContextManager.Revert%2A>使用此方法返回的对象调用方法，将还原 <xref:System.Threading.HostExecutionContext> 到其以前的状态。</span><span class="sxs-lookup"><span data-stu-id="afe4f-121">Call the <xref:System.Threading.HostExecutionContextManager.Revert%2A> method using the object returned by this method to restore the <xref:System.Threading.HostExecutionContext> to its previous state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="afe4f-122"><paramref name="hostExecutionContext" /> 不是通过捕获操作获取的。</span><span class="sxs-lookup"><span data-stu-id="afe4f-122"><paramref name="hostExecutionContext" /> was not acquired through a capture operation.</span></span>  
  
<span data-ttu-id="afe4f-123">- 或 -</span><span class="sxs-lookup"><span data-stu-id="afe4f-123">-or-</span></span> 
 <span data-ttu-id="afe4f-124"><paramref name="hostExecutionContext" /> 已作为上一次 <see cref="M:System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)" /> 方法调用的参数。</span><span class="sxs-lookup"><span data-stu-id="afe4f-124"><paramref name="hostExecutionContext" /> has been the argument to a previous <see cref="M:System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)" /> method call.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
