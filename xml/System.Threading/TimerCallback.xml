<Type Name="TimerCallback" FullName="System.Threading.TimerCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="74e8bd022bfdb5870424457a52777e33840f58bf" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100321514" /></Metadata><TypeSignature Language="C#" Value="public delegate void TimerCallback(object state);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TimerCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.TimerCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub TimerCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void TimerCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type TimerCallback = delegate of obj -&gt; unit" />
  <TypeSignature Language="C#" Value="public delegate void TimerCallback(object? state);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Timer</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Threading.Timer" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Threading.Timer" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state"><span data-ttu-id="c2798-101">一个对象（包含与该委托所调用的方法相关的特定于应用程序的信息）或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c2798-101">An object containing application-specific information relevant to the method invoked by this delegate, or <see langword="null" />.</span></span></param>
    <summary><span data-ttu-id="c2798-102">表示处理来自 <see cref="T:System.Threading.Timer" /> 的调用的方法。</span><span class="sxs-lookup"><span data-stu-id="c2798-102">Represents the method that handles calls from a <see cref="T:System.Threading.Timer" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c2798-103">使用 `TimerCallback` 委托指定由调用的方法 <xref:System.Threading.Timer> 。</span><span class="sxs-lookup"><span data-stu-id="c2798-103">Use a `TimerCallback` delegate to specify the method that is called by a <xref:System.Threading.Timer>.</span></span> <span data-ttu-id="c2798-104">此方法不会在创建计时器的线程中执行;它在系统提供的单独线程池线程中执行。</span><span class="sxs-lookup"><span data-stu-id="c2798-104">This method does not execute in the thread that created the timer; it executes in a separate thread pool thread that is provided by the system.</span></span> <span data-ttu-id="c2798-105">`TimerCallback`委托在开始时间结束后调用方法一次，并在调用方法之前继续对每个计时器间隔调用此方法 <xref:System.Threading.Timer.Dispose%2A> ，或者在 <xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType> 通过间隔值调用方法之前继续调用 <xref:System.Threading.Timeout.Infinite> 。</span><span class="sxs-lookup"><span data-stu-id="c2798-105">The `TimerCallback` delegate invokes the method once after the start time elapses, and continues to invoke it once per timer interval until the <xref:System.Threading.Timer.Dispose%2A> method is called, or until the <xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType> method is called with the interval value <xref:System.Threading.Timeout.Infinite>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c2798-106">调用方法重载后，可能会发生回调 <xref:System.Threading.Timer.Dispose> ，因为计时器会将回调排队等待线程池线程执行。</span><span class="sxs-lookup"><span data-stu-id="c2798-106">Callbacks can occur after the <xref:System.Threading.Timer.Dispose> method overload has been called, because the timer queues callbacks for execution by thread pool threads.</span></span> <span data-ttu-id="c2798-107">您可以使用 <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> 方法重载来等待所有回调都已完成。</span><span class="sxs-lookup"><span data-stu-id="c2798-107">You can use the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload to wait until all callbacks have completed.</span></span>  
  
 <span data-ttu-id="c2798-108">计时器委托在构造计时器时指定，无法更改。</span><span class="sxs-lookup"><span data-stu-id="c2798-108">The timer delegate is specified when the timer is constructed, and cannot be changed.</span></span> <span data-ttu-id="c2798-109">在 `Timer` 构造函数的参数中传递的开始时间 `dueTime` `Timer` ，并在参数中传递句点 `period` 。</span><span class="sxs-lookup"><span data-stu-id="c2798-109">The start time for a `Timer` is passed in the `dueTime` parameter of the `Timer` constructors, and the period is passed in the `period` parameter.</span></span> <span data-ttu-id="c2798-110">有关演示如何创建和使用委托的示例 `TimerCallback` ，请参见 <xref:System.Threading.Timer?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="c2798-110">For an example that demonstrates creating and using a `TimerCallback` delegate, see <xref:System.Threading.Timer?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c2798-111">下面的代码示例演示如何创建与类一起使用的委托 `Timer` 。</span><span class="sxs-lookup"><span data-stu-id="c2798-111">The following code example shows how to create the delegate used with the `Timer` class.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Timer" />
    <altmember cref="T:System.Threading.ThreadPool" />
    <related type="Article" href="/dotnet/standard/threading/timers"><span data-ttu-id="c2798-112">计时器</span><span class="sxs-lookup"><span data-stu-id="c2798-112">Timers</span></span></related>
  </Docs>
</Type>
