<Type Name="SpinWait" FullName="System.Threading.SpinWait">
  <Metadata><Meta Name="ms.openlocfilehash" Value="704116572bf3a00d59cc51baf787f97713f0947d" /><Meta Name="ms.sourcegitcommit" Value="a8ca33e500a87229bed50d12e09b1347df519648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/09/2020" /><Meta Name="ms.locfileid" Value="91906263" /></Metadata><TypeSignature Language="C#" Value="public struct SpinWait" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SpinWait extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Threading.SpinWait" />
  <TypeSignature Language="VB.NET" Value="Public Structure SpinWait" />
  <TypeSignature Language="C++ CLI" Value="public value class SpinWait" />
  <TypeSignature Language="F#" Value="type SpinWait = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Threading" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Threading" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="eed39-101">为基于自旋的等待提供支持。</span><span class="sxs-lookup"><span data-stu-id="eed39-101">Provides support for spin-based waiting.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eed39-102"><xref:System.Threading.SpinWait> 封装常见旋转逻辑。</span><span class="sxs-lookup"><span data-stu-id="eed39-102"><xref:System.Threading.SpinWait> encapsulates common spinning logic.</span></span> <span data-ttu-id="eed39-103">在单处理器计算机上，始终使用 "生成" 而不是 "忙" 等待，在装有使用 Hyper-Threading 技术的 Intel 处理器的计算机上，这有助于防止硬件线程不足。</span><span class="sxs-lookup"><span data-stu-id="eed39-103">On single-processor machines, yields are always used instead of busy waits, and on computers with Intel processors employing Hyper-Threading technology, it helps to prevent hardware thread starvation.</span></span> <span data-ttu-id="eed39-104">SpinWait 封装了一种很好的旋转和真正的生成。</span><span class="sxs-lookup"><span data-stu-id="eed39-104">SpinWait encapsulates a good mixture of spinning and true yielding.</span></span>  
  
 <span data-ttu-id="eed39-105"><xref:System.Threading.SpinWait> 是一个值类型，这意味着低级别代码可以使用 SpinWait，而不必担心不必要的分配开销。</span><span class="sxs-lookup"><span data-stu-id="eed39-105"><xref:System.Threading.SpinWait> is a value type, which means that low-level code can utilize SpinWait without fear of unnecessary allocation overheads.</span></span> <span data-ttu-id="eed39-106">SpinWait 对于普通应用程序通常不起作用。</span><span class="sxs-lookup"><span data-stu-id="eed39-106">SpinWait is not generally useful for ordinary applications.</span></span> <span data-ttu-id="eed39-107">在大多数情况下，应使用由 .NET Framework 提供的同步类，如 <xref:System.Threading.Monitor> 。</span><span class="sxs-lookup"><span data-stu-id="eed39-107">In most cases, you should use the synchronization classes provided by the .NET Framework, such as <xref:System.Threading.Monitor>.</span></span> <span data-ttu-id="eed39-108">但在需要自旋等待的大多数情况下， <xref:System.Threading.SpinWait> 类型应优先于 <xref:System.Threading.Thread.SpinWait%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="eed39-108">For most purposes where spin waiting is required, however, the <xref:System.Threading.SpinWait> type should be preferred over the <xref:System.Threading.Thread.SpinWait%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed39-109">下面的示例演示如何使用 <xref:System.Threading.SpinWait> ：</span><span class="sxs-lookup"><span data-stu-id="eed39-109">The following example shows how to use a <xref:System.Threading.SpinWait>:</span></span>  
  
 [!code-csharp[System.Threading.SpinWait#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.spinwait/cs/spinwait.cs#01)]
 [!code-vb[System.Threading.SpinWait#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.spinwait/vb/spinwait.vb#01)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="eed39-110">虽然 <see cref="T:System.Threading.SpinWait" /> 设计为在并发应用程序中使用，但其设计目的不是从多个线程同时使用。</span><span class="sxs-lookup"><span data-stu-id="eed39-110">While <see cref="T:System.Threading.SpinWait" /> is designed to be used in concurrent applications, it is not designed to be used from multiple threads concurrently.</span></span> <span data-ttu-id="eed39-111"><see cref="T:System.Threading.SpinWait" /> 成员不是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="eed39-111"><see cref="T:System.Threading.SpinWait" /> members are not thread-safe.</span></span> <span data-ttu-id="eed39-112">如果多个线程必须旋转，则每个线程都应使用自己的实例 <see cref="T:System.Threading.SpinWait" /> 。</span><span class="sxs-lookup"><span data-stu-id="eed39-112">If multiple threads must spin, each should use its own instance of <see cref="T:System.Threading.SpinWait" />.</span></span></threadsafe>
    <related type="Article" href="/dotnet/standard/threading/spinwait"><span data-ttu-id="eed39-113">SpinWait</span><span class="sxs-lookup"><span data-stu-id="eed39-113">SpinWait</span></span></related>
    <related type="Article" href="/dotnet/standard/threading/how-to-use-spinwait-to-implement-a-two-phase-wait-operation"><span data-ttu-id="eed39-114">如何：使用 SpinWait 实现两阶段等待操作</span><span class="sxs-lookup"><span data-stu-id="eed39-114">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Threading.SpinWait.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Threading.SpinWait.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed39-115">获取已对此实例调用 <see cref="M:System.Threading.SpinWait.SpinOnce" /> 的次数。</span><span class="sxs-lookup"><span data-stu-id="eed39-115">Gets the number of times <see cref="M:System.Threading.SpinWait.SpinOnce" /> has been called on this instance.</span></span></summary>
        <value><span data-ttu-id="eed39-116">返回一个整数，该整数表示已对此实例调用 <see cref="M:System.Threading.SpinWait.SpinOnce" /> 的次数。</span><span class="sxs-lookup"><span data-stu-id="eed39-116">Returns an integer that represents the number of times <see cref="M:System.Threading.SpinWait.SpinOnce" /> has been called on this instance.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/standard/threading/spinwait"><span data-ttu-id="eed39-117">SpinWait</span><span class="sxs-lookup"><span data-stu-id="eed39-117">SpinWait</span></span></related>
        <related type="Article" href="/dotnet/standard/threading/how-to-use-spinwait-to-implement-a-two-phase-wait-operation"><span data-ttu-id="eed39-118">如何：使用 SpinWait 实现两阶段等待操作</span><span class="sxs-lookup"><span data-stu-id="eed39-118">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NextSpinWillYield">
      <MemberSignature Language="C#" Value="public bool NextSpinWillYield { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NextSpinWillYield" />
      <MemberSignature Language="DocId" Value="P:System.Threading.SpinWait.NextSpinWillYield" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextSpinWillYield As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NextSpinWillYield { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSpinWillYield : bool" Usage="System.Threading.SpinWait.NextSpinWillYield" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eed39-119">获取对 <see cref="M:System.Threading.SpinWait.SpinOnce" /> 的下一次调用是否将产生处理器，同时触发强制上下文切换。</span><span class="sxs-lookup"><span data-stu-id="eed39-119">Gets whether the next call to <see cref="M:System.Threading.SpinWait.SpinOnce" /> will yield the processor, triggering a forced context switch.</span></span></summary>
        <value><span data-ttu-id="eed39-120">对 <see cref="M:System.Threading.SpinWait.SpinOnce" /> 的下一次调用是否将产生处理器，同时触发强制上下文切换。</span><span class="sxs-lookup"><span data-stu-id="eed39-120">Whether the next call to <see cref="M:System.Threading.SpinWait.SpinOnce" /> will yield the processor, triggering a forced context switch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eed39-121">在单 CPU 计算机上， <xref:System.Threading.SpinWait.SpinOnce%2A> 始终产生处理器。</span><span class="sxs-lookup"><span data-stu-id="eed39-121">On a single-CPU machine, <xref:System.Threading.SpinWait.SpinOnce%2A> always yields the processor.</span></span> <span data-ttu-id="eed39-122">在具有多个 Cpu 的计算机上， <xref:System.Threading.SpinWait.SpinOnce%2A> 可能会在调用次数未指定的情况下生成。</span><span class="sxs-lookup"><span data-stu-id="eed39-122">On machines with multiple CPUs, <xref:System.Threading.SpinWait.SpinOnce%2A> may yield after an unspecified number of calls.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/threading/spinwait"><span data-ttu-id="eed39-123">SpinWait</span><span class="sxs-lookup"><span data-stu-id="eed39-123">SpinWait</span></span></related>
        <related type="Article" href="/dotnet/standard/threading/how-to-use-spinwait-to-implement-a-two-phase-wait-operation"><span data-ttu-id="eed39-124">如何：使用 SpinWait 实现两阶段等待操作</span><span class="sxs-lookup"><span data-stu-id="eed39-124">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="spinWait.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eed39-125">重置自旋计数器。</span><span class="sxs-lookup"><span data-stu-id="eed39-125">Resets the spin counter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eed39-126">这使得 <xref:System.Threading.SpinWait.SpinOnce%2A> 和 <xref:System.Threading.SpinWait.NextSpinWillYield%2A> 的行为如同 <xref:System.Threading.SpinWait.SpinOnce%2A> 此实例上未发出对的调用。</span><span class="sxs-lookup"><span data-stu-id="eed39-126">This makes <xref:System.Threading.SpinWait.SpinOnce%2A> and <xref:System.Threading.SpinWait.NextSpinWillYield%2A> behave as though no calls to <xref:System.Threading.SpinWait.SpinOnce%2A> had been issued on this instance.</span></span> <span data-ttu-id="eed39-127">如果 <xref:System.Threading.SpinWait> 多次重复使用某个实例，则可能会将其重置为 "尽快"。</span><span class="sxs-lookup"><span data-stu-id="eed39-127">If a <xref:System.Threading.SpinWait> instance is reused many times, it may be useful to reset it to avoid yielding too soon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eed39-128">下面是在简单的无锁定堆栈实现中使用 SpinWait 的示例。</span><span class="sxs-lookup"><span data-stu-id="eed39-128">The following is an example of using SpinWait in a simple lock-free stack implementation.</span></span> <span data-ttu-id="eed39-129"> (这只是一个示例。</span><span class="sxs-lookup"><span data-stu-id="eed39-129">(This is just an example.</span></span> <span data-ttu-id="eed39-130">如果需要有效的线程安全堆栈，请考虑使用 System.collections.concurrent.concurrentstack。 ) </span><span class="sxs-lookup"><span data-stu-id="eed39-130">If an efficient, thread-safe stack is needed, consider using ConcurrentStack.)</span></span>  
  
 [!code-csharp[System.Threading.SpinWait.Reset#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.spinwait/cs/reset.cs#01)]
 [!code-vb[System.Threading.SpinWait.Reset#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.spinwait/vb/reset.vb#01)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/threading/spinwait"><span data-ttu-id="eed39-131">SpinWait</span><span class="sxs-lookup"><span data-stu-id="eed39-131">SpinWait</span></span></related>
        <related type="Article" href="/dotnet/standard/threading/how-to-use-spinwait-to-implement-a-two-phase-wait-operation"><span data-ttu-id="eed39-132">如何：使用 SpinWait 实现两阶段等待操作</span><span class="sxs-lookup"><span data-stu-id="eed39-132">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SpinOnce">
      <MemberSignature Language="C#" Value="public void SpinOnce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpinOnce() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.SpinOnce" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpinOnce ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpinOnce();" />
      <MemberSignature Language="F#" Value="member this.SpinOnce : unit -&gt; unit" Usage="spinWait.SpinOnce " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eed39-133">执行单一自旋。</span><span class="sxs-lookup"><span data-stu-id="eed39-133">Performs a single spin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eed39-134">此方法通常在循环中调用，并且可能会根据在 <xref:System.Threading.SpinWait.SpinOnce%2A> 此实例上迄今为止已调用的次数而发生变化。</span><span class="sxs-lookup"><span data-stu-id="eed39-134">This method is typically called in a loop and may change in behavior based on the number of times <xref:System.Threading.SpinWait.SpinOnce%2A> has been called so far on this instance.</span></span> <span data-ttu-id="eed39-135">每个自旋都将导致 <xref:System.Threading.Thread.SpinWait%2A> 调用方法中的。</span><span class="sxs-lookup"><span data-stu-id="eed39-135">Each spin results in the <xref:System.Threading.Thread.SpinWait%2A> method being called.</span></span> <span data-ttu-id="eed39-136">计数保留 <xref:System.Threading.SpinWait.SpinOnce%2A> 调用次数，并且在达到阈值计数后，将 <xref:System.Threading.Thread.Yield%2A> 调用方法。</span><span class="sxs-lookup"><span data-stu-id="eed39-136">A count is kept of the number of times <xref:System.Threading.SpinWait.SpinOnce%2A> is called, and after a threshold count is reached, the <xref:System.Threading.Thread.Yield%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/threading/spinwait"><span data-ttu-id="eed39-137">SpinWait</span><span class="sxs-lookup"><span data-stu-id="eed39-137">SpinWait</span></span></related>
        <related type="Article" href="/dotnet/standard/threading/how-to-use-spinwait-to-implement-a-two-phase-wait-operation"><span data-ttu-id="eed39-138">如何：使用 SpinWait 实现两阶段等待操作</span><span class="sxs-lookup"><span data-stu-id="eed39-138">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SpinOnce">
      <MemberSignature Language="C#" Value="public void SpinOnce (int sleep1Threshold);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpinOnce(int32 sleep1Threshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.SpinOnce(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpinOnce (sleep1Threshold As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpinOnce(int sleep1Threshold);" />
      <MemberSignature Language="F#" Value="member this.SpinOnce : int -&gt; unit" Usage="spinWait.SpinOnce sleep1Threshold" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sleep1Threshold" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="sleep1Threshold"><span data-ttu-id="eed39-139">将在其后使用 <see langword="Thread.Sleep(1)" /> 的最小旋转计数。</span><span class="sxs-lookup"><span data-stu-id="eed39-139">A minimum spin count after which <see langword="Thread.Sleep(1)" /> may be used.</span></span> <span data-ttu-id="eed39-140">值为 -1 将禁用 <see langword="Thread.Sleep(1)" />。</span><span class="sxs-lookup"><span data-stu-id="eed39-140">A value of -1 disables the use of <see langword="Thread.Sleep(1)" />.</span></span></param>
        <summary><span data-ttu-id="eed39-141">执行单一自旋，并在达到最小旋转计数后调用 <see cref="M:System.Threading.Thread.Sleep(System.Int32)" />。</span><span class="sxs-lookup"><span data-stu-id="eed39-141">Performs a single spin and calls <see cref="M:System.Threading.Thread.Sleep(System.Int32)" /> after a minimum spin count.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="eed39-142">此方法通常在循环中调用，并且可能会根据在 <xref:System.Threading.SpinWait.SpinOnce> 此实例上迄今为止已调用的次数而发生变化。</span><span class="sxs-lookup"><span data-stu-id="eed39-142">This method is typically called in a loop and may change in behavior based on the number of times <xref:System.Threading.SpinWait.SpinOnce> has been called so far on this instance.</span></span>

        ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eed39-143"><paramref name="sleep1Threshold" /> 小于 -1。</span><span class="sxs-lookup"><span data-stu-id="eed39-143"><paramref name="sleep1Threshold" /> is less than -1.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SpinUntil">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eed39-144">在指定条件得到满足之前自旋。</span><span class="sxs-lookup"><span data-stu-id="eed39-144">Spins until the specified condition is satisfied.</span></span></summary>
        <related type="Article" href="/dotnet/standard/threading/spinwait"><span data-ttu-id="eed39-145">SpinWait</span><span class="sxs-lookup"><span data-stu-id="eed39-145">SpinWait</span></span></related>
        <related type="Article" href="/dotnet/standard/threading/how-to-use-spinwait-to-implement-a-two-phase-wait-operation"><span data-ttu-id="eed39-146">如何：使用 SpinWait 实现两阶段等待操作</span><span class="sxs-lookup"><span data-stu-id="eed39-146">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="SpinUntil">
      <MemberSignature Language="C#" Value="public static void SpinUntil (Func&lt;bool&gt; condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SpinUntil(class System.Func`1&lt;bool&gt; condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SpinUntil (condition As Func(Of Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SpinUntil(Func&lt;bool&gt; ^ condition);" />
      <MemberSignature Language="F#" Value="static member SpinUntil : Func&lt;bool&gt; -&gt; unit" Usage="System.Threading.SpinWait.SpinUntil condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Func&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="eed39-147">在返回 true 之前重复执行的委托。</span><span class="sxs-lookup"><span data-stu-id="eed39-147">A delegate to be executed over and over until it returns true.</span></span></param>
        <summary><span data-ttu-id="eed39-148">在指定条件得到满足之前自旋。</span><span class="sxs-lookup"><span data-stu-id="eed39-148">Spins until the specified condition is satisfied.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eed39-149"><paramref name="condition" /> 参数为 null。</span><span class="sxs-lookup"><span data-stu-id="eed39-149">The <paramref name="condition" /> argument is null.</span></span></exception>
        <related type="Article" href="/dotnet/standard/threading/spinwait"><span data-ttu-id="eed39-150">SpinWait</span><span class="sxs-lookup"><span data-stu-id="eed39-150">SpinWait</span></span></related>
        <related type="Article" href="/dotnet/standard/threading/how-to-use-spinwait-to-implement-a-two-phase-wait-operation"><span data-ttu-id="eed39-151">如何：使用 SpinWait 实现两阶段等待操作</span><span class="sxs-lookup"><span data-stu-id="eed39-151">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SpinUntil">
      <MemberSignature Language="C#" Value="public static bool SpinUntil (Func&lt;bool&gt; condition, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SpinUntil(class System.Func`1&lt;bool&gt; condition, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SpinUntil (condition As Func(Of Boolean), millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SpinUntil(Func&lt;bool&gt; ^ condition, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member SpinUntil : Func&lt;bool&gt; * int -&gt; bool" Usage="System.Threading.SpinWait.SpinUntil (condition, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Func&lt;System.Boolean&gt;" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="eed39-152">在返回 true 之前重复执行的委托。</span><span class="sxs-lookup"><span data-stu-id="eed39-152">A delegate to be executed over and over until it returns true.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="eed39-153">等待的毫秒数，或为 <see cref="F:System.Threading.Timeout.Infinite" /> (-1)，表示无限期等待。</span><span class="sxs-lookup"><span data-stu-id="eed39-153">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="eed39-154">在指定条件得到满足或指定超时过期之前自旋。</span><span class="sxs-lookup"><span data-stu-id="eed39-154">Spins until the specified condition is satisfied or until the specified timeout is expired.</span></span></summary>
        <returns><span data-ttu-id="eed39-155">如果条件在超时时间内得到满足，则为 <see langword="true" />；否则为 false</span><span class="sxs-lookup"><span data-stu-id="eed39-155"><see langword="true" /> if the condition is satisfied within the timeout; otherwise, false</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eed39-156"><paramref name="condition" /> 参数为 null。</span><span class="sxs-lookup"><span data-stu-id="eed39-156">The <paramref name="condition" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eed39-157"><paramref name="millisecondsTimeout" /> 是一个非 -1 的负数，而 -1 表示无限期超时。</span><span class="sxs-lookup"><span data-stu-id="eed39-157"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <related type="Article" href="/dotnet/standard/threading/spinwait"><span data-ttu-id="eed39-158">SpinWait</span><span class="sxs-lookup"><span data-stu-id="eed39-158">SpinWait</span></span></related>
        <related type="Article" href="/dotnet/standard/threading/how-to-use-spinwait-to-implement-a-two-phase-wait-operation"><span data-ttu-id="eed39-159">如何：使用 SpinWait 实现两阶段等待操作</span><span class="sxs-lookup"><span data-stu-id="eed39-159">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SpinUntil">
      <MemberSignature Language="C#" Value="public static bool SpinUntil (Func&lt;bool&gt; condition, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SpinUntil(class System.Func`1&lt;bool&gt; condition, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SpinUntil (condition As Func(Of Boolean), timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SpinUntil(Func&lt;bool&gt; ^ condition, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member SpinUntil : Func&lt;bool&gt; * TimeSpan -&gt; bool" Usage="System.Threading.SpinWait.SpinUntil (condition, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Func&lt;System.Boolean&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="eed39-160">在返回 true 之前重复执行的委托。</span><span class="sxs-lookup"><span data-stu-id="eed39-160">A delegate to be executed over and over until it returns true.</span></span></param>
        <param name="timeout"><span data-ttu-id="eed39-161">一个 <see cref="T:System.TimeSpan" />，表示等待的毫秒数；或者一个 TimeSpan，表示 -1 毫秒（无限期等待）。</span><span class="sxs-lookup"><span data-stu-id="eed39-161">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="eed39-162">在指定条件得到满足或指定超时过期之前自旋。</span><span class="sxs-lookup"><span data-stu-id="eed39-162">Spins until the specified condition is satisfied or until the specified timeout is expired.</span></span></summary>
        <returns><span data-ttu-id="eed39-163">如果条件在超时时间内得到满足，则为 <see langword="true" />；否则为 false</span><span class="sxs-lookup"><span data-stu-id="eed39-163"><see langword="true" /> if the condition is satisfied within the timeout; otherwise, false</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eed39-164"><paramref name="condition" /> 参数为 null。</span><span class="sxs-lookup"><span data-stu-id="eed39-164">The <paramref name="condition" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eed39-165"><paramref name="timeout" /> 是 -1 毫秒之外的负数，表示无限超时或者超时大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="eed39-165"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <related type="Article" href="/dotnet/standard/threading/spinwait"><span data-ttu-id="eed39-166">SpinWait</span><span class="sxs-lookup"><span data-stu-id="eed39-166">SpinWait</span></span></related>
        <related type="Article" href="/dotnet/standard/threading/how-to-use-spinwait-to-implement-a-two-phase-wait-operation"><span data-ttu-id="eed39-167">如何：使用 SpinWait 实现两阶段等待操作</span><span class="sxs-lookup"><span data-stu-id="eed39-167">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
