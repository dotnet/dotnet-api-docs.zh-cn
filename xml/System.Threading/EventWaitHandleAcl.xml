<Type Name="EventWaitHandleAcl" FullName="System.Threading.EventWaitHandleAcl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b3521ce221b335fdd7f79d81956fb50386073d0" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100284769" /></Metadata><TypeSignature Language="C#" Value="public static class EventWaitHandleAcl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EventWaitHandleAcl extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.EventWaitHandleAcl" />
  <TypeSignature Language="VB.NET" Value="Public Class EventWaitHandleAcl" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventWaitHandleAcl abstract sealed" />
  <TypeSignature Language="F#" Value="type EventWaitHandleAcl = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供了一种特定于 Windows 的扩展方法，用于通过特定的访问控制列表 (ACL) 安全性来创建 <see cref="T:System.Threading.EventWaitHandle" /> 对象。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Threading.EventWaitHandle Create (bool initialState, System.Threading.EventResetMode mode, string? name, out bool? createdNew, System.Security.AccessControl.EventWaitHandleSecurity? eventSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.EventWaitHandle Create(bool initialState, valuetype System.Threading.EventResetMode mode, string name, [out] bool&amp; createdNew, class System.Security.AccessControl.EventWaitHandleSecurity eventSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.EventWaitHandleAcl.Create(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@,System.Security.AccessControl.EventWaitHandleSecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (initialState As Boolean, mode As EventResetMode, name As String, ByRef createdNew As Boolean, eventSecurity As EventWaitHandleSecurity) As EventWaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::EventWaitHandle ^ Create(bool initialState, System::Threading::EventResetMode mode, System::String ^ name, [Runtime::InteropServices::Out] bool % createdNew, System::Security::AccessControl::EventWaitHandleSecurity ^ eventSecurity);" />
      <MemberSignature Language="F#" Value="static member Create : bool * System.Threading.EventResetMode * string * bool * System.Security.AccessControl.EventWaitHandleSecurity -&gt; System.Threading.EventWaitHandle" Usage="System.Threading.EventWaitHandleAcl.Create (initialState, mode, name, createdNew, eventSecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.EventWaitHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initialState" Type="System.Boolean" />
        <Parameter Name="mode" Type="System.Threading.EventResetMode" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="createdNew" Type="System.Boolean" RefType="out" />
        <Parameter Name="eventSecurity" Type="System.Security.AccessControl.EventWaitHandleSecurity" />
      </Parameters>
      <Docs>
        <param name="initialState">如果将命名事件作为此调用的结果创建时，将初始状态设置为通过信号通知，则为 <see langword="true" />；如果将其设置为不通过信号通知，则为 <see langword="false" />。</param>
        <param name="mode">其中一个枚举值，它确定是自动还是手动重置事件。</param>
        <param name="name">如果要与其他进程共享同步对象，则为名称；否则为 <see langword="null" /> 或空字符串。 该名称区分大小写。</param>
        <param name="createdNew">当此方法返回时，如果创建了本地事件（即，当 <paramref name="name" /> 为 <see langword="null" /> 或 <see cref="F:System.String.Empty" /> 时），则此参数始终设置为 <see langword="true" />。 如果 <paramref name="name" /> 具有有效的非空值，则在创建系统事件时，此参数设置为 <see langword="true" />；如果找到具有该名称的现有系统事件，则此参数设置为 <see langword="false" />。</param>
        <param name="eventSecurity">要应用的可选 Windows 访问控制安全性。</param>
        <summary>获取或创建 <see cref="T:System.Threading.EventWaitHandle" /> 实例，允许在事件创建期间选择性地指定 <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> 实例来设置该实例。</summary>
        <returns>一个对象，它表示请求的事件等待句柄。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 `name`可以使用 `Global\` 或前缀 `Local\` 来指定命名空间。 如果 `Global` 指定了命名空间，则同步对象可能与系统上的任何进程共享。 `Local`指定命名空间后，如果未指定命名空间，这也是默认命名空间，则同步对象可能与同一会话中的进程共享。 在 Windows 上，会话是一个登录会话，服务通常在不同的非交互式会话中运行。 在类似 Unix 的操作系统上，每个 shell 都有自己的会话。 会话本地同步对象可能适用于具有父/子关系的进程之间的同步，它们全都在同一会话中运行。 有关 Windows 上的 synchornization 对象名称的详细信息，请参阅 [对象名称](https://docs.microsoft.com/windows/win32/sync/object-names)。

 如果提供了， `name` 并且命名空间中已存在请求类型的同步对象，则会打开现有的同步对象。 如果命名空间中已存在另一个类型的同步对象， `WaitHandleCannotBeOpenedException` 则会引发。 否则，将创建一个新的同步对象。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="mode" /> 枚举值超出了合法范围。

或

仅限 .NET Framework：<paramref name="name" /> 的长度超过 MAX_PATH（260 个字符）。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> 枚举值超出了合法范围。 在某些情况下，将改为引发 <see cref="T:System.ArgumentException" />。</exception>
        <exception cref="T:System.IO.IOException"><paramref name="name" /> 无效。 导致这种情况的原因有很多，包括操作系统可能会施加的一些限制，例如未知前缀或无效字符。 请注意，名称和常见前缀 "Global\" 和 "Local\" 区分大小写。

或

存在其他错误。 `HResult` 属性可能提供更多信息。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">仅限 Windows：<paramref name="name" /> 指定了未知命名空间。 有关详细信息，请参阅[对象名称](https://docs.microsoft.com/windows/win32/sync/object-names)。</exception>
        <exception cref="T:System.IO.PathTooLongException"><paramref name="name" /> 太长。 长度限制可能取决于操作系统或配置。</exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">无法创建具有提供的 <paramref name="name" /> 的同步对象。 不同类型的同步对象可能具有相同的名称。</exception>
        <exception cref="T:System.UnauthorizedAccessException">命名事件存在，但用户不具有所需的安全访问权限。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
