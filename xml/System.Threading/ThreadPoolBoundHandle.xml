<Type Name="ThreadPoolBoundHandle" FullName="System.Threading.ThreadPoolBoundHandle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="db65951dab5bb67bb300f03c05f44de49ac0e302" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86848825" /></Metadata><TypeSignature Language="C#" Value="public sealed class ThreadPoolBoundHandle : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ThreadPoolBoundHandle extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadPoolBoundHandle" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ThreadPoolBoundHandle&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThreadPoolBoundHandle sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type ThreadPoolBoundHandle = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Overlapped</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Threading.Overlapped" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netstandard-2.0">
      <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2455c-101">表示已绑定到系统线程池的 I/O 句柄，并使低级别组件能够接收异步 I/O 操作的通知。</span><span class="sxs-lookup"><span data-stu-id="2455c-101">Represents an I/O handle that is bound to the system thread pool and enables low-level components to receive notifications for asynchronous I/O operations.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AllocateNativeOverlapped">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2455c-102">返回一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</span><span class="sxs-lookup"><span data-stu-id="2455c-102">Returns an unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AllocateNativeOverlapped">
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* AllocateNativeOverlapped (System.Threading.PreAllocatedOverlapped preAllocated);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.NativeOverlapped* AllocateNativeOverlapped(class System.Threading.PreAllocatedOverlapped preAllocated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.PreAllocatedOverlapped)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::NativeOverlapped* AllocateNativeOverlapped(System::Threading::PreAllocatedOverlapped ^ preAllocated);" />
      <MemberSignature Language="F#" Value="member this.AllocateNativeOverlapped : System.Threading.PreAllocatedOverlapped -&gt; nativeptr&lt;System.Threading.NativeOverlapped&gt;" Usage="threadPoolBoundHandle.AllocateNativeOverlapped preAllocated" />
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* AllocateNativeOverlapped (System.Threading.PreAllocatedOverlapped? preAllocated);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.NativeOverlapped*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preAllocated" Type="System.Threading.PreAllocatedOverlapped" />
      </Parameters>
      <Docs>
        <param name="preAllocated"><span data-ttu-id="2455c-103">要从其中创建 <see cref="T:System.Threading.NativeOverlapped" /> 指针的对象。</span><span class="sxs-lookup"><span data-stu-id="2455c-103">An object from which to create the <see cref="T:System.Threading.NativeOverlapped" /> pointer.</span></span></param>
        <summary><span data-ttu-id="2455c-104">返回指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针，该结构使用与指定 <see cref="T:System.Threading.PreAllocatedOverlapped" /> 对象关联的回调状态和缓冲区。</span><span class="sxs-lookup"><span data-stu-id="2455c-104">Returns an unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure using the callback state and buffers associated with the specified <see cref="T:System.Threading.PreAllocatedOverlapped" /> object.</span></span></summary>
        <returns><span data-ttu-id="2455c-105">一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</span><span class="sxs-lookup"><span data-stu-id="2455c-105">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2455c-106">此方法返回的非托管指针可以在重叠 i/o 操作中传递到操作系统。</span><span class="sxs-lookup"><span data-stu-id="2455c-106">The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations.</span></span> <span data-ttu-id="2455c-107">在  <xref:System.Threading.NativeOverlapped> 调用方法之前，结构在物理内存中是固定的 <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2455c-107">The  <xref:System.Threading.NativeOverlapped> structure is fixed in physical memory until the <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2455c-108"><paramref name="preAllocated" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2455c-108"><paramref name="preAllocated" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2455c-109">另一 I/O 操作当前正在使用 <paramref name="preAllocated" />。</span><span class="sxs-lookup"><span data-stu-id="2455c-109"><paramref name="preAllocated" /> is currently in use for another I/O operation.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2455c-110">此释放 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 后调用此方法。</span><span class="sxs-lookup"><span data-stu-id="2455c-110">This method was called after the <see cref="T:System.Threading.ThreadPoolBoundHandle" /> was disposed.</span></span>  
  
<span data-ttu-id="2455c-111">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2455c-111">-or-</span></span> 
<span data-ttu-id="2455c-112">在释放 <paramref name="preAllocated" /> 后调用此方法。</span><span class="sxs-lookup"><span data-stu-id="2455c-112">This method was called after <paramref name="preAllocated" /> was disposed.</span></span></exception>
        <altmember cref="T:System.Threading.PreAllocatedOverlapped" />
      </Docs>
    </Member>
    <Member MemberName="AllocateNativeOverlapped">
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* AllocateNativeOverlapped (System.Threading.IOCompletionCallback callback, object state, object pinData);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.NativeOverlapped* AllocateNativeOverlapped(class System.Threading.IOCompletionCallback callback, object state, object pinData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::NativeOverlapped* AllocateNativeOverlapped(System::Threading::IOCompletionCallback ^ callback, System::Object ^ state, System::Object ^ pinData);" />
      <MemberSignature Language="F#" Value="member this.AllocateNativeOverlapped : System.Threading.IOCompletionCallback * obj * obj -&gt; nativeptr&lt;System.Threading.NativeOverlapped&gt;" Usage="threadPoolBoundHandle.AllocateNativeOverlapped (callback, state, pinData)" />
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped*? AllocateNativeOverlapped (System.Threading.IOCompletionCallback? callback, object state, object pinData);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.NativeOverlapped*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.IOCompletionCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="pinData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="2455c-113">一个委托，表示在异步 I/O 操作完成时调用的回调方法。</span><span class="sxs-lookup"><span data-stu-id="2455c-113">A delegate that represents the callback method to invoke when the asynchronous I/O operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="2455c-114">用户提供的对象，用于区分此 <see cref="T:System.Threading.NativeOverlapped" /> 实例与其他 <see cref="T:System.Threading.NativeOverlapped" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="2455c-114">A user-provided object that distinguishes this <see cref="T:System.Threading.NativeOverlapped" /> instance from other <see cref="T:System.Threading.NativeOverlapped" /> instances.</span></span></param>
        <param name="pinData"><span data-ttu-id="2455c-115">一个对象或对象数组，用于表示操作的输入和输出缓冲区，或者表示 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2455c-115">An object or array of objects that represent the input or output buffer for the operation, or <see langword="null" />.</span></span> <span data-ttu-id="2455c-116">每个对象（如字节数组）表示一个缓冲区。</span><span class="sxs-lookup"><span data-stu-id="2455c-116">Each object represents a buffer, such an array of bytes.</span></span></param>
        <summary><span data-ttu-id="2455c-117">向 <see cref="T:System.Threading.NativeOverlapped" /> 结构返回一个非托管指针，指定在异步 I/O 操作完成时调用的委托、可提供上下文的用户提供的对象，以及充当缓冲区的托管对象。</span><span class="sxs-lookup"><span data-stu-id="2455c-117">Returns an unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure, specifying a delegate that is invoked when the asynchronous I/O operation is complete, a user-provided object that supplies context, and managed objects that serve as buffers.</span></span></summary>
        <returns><span data-ttu-id="2455c-118">一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</span><span class="sxs-lookup"><span data-stu-id="2455c-118">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="2455c-119">此方法返回的非托管指针可以在重叠 i/o 操作中传递到操作系统。</span><span class="sxs-lookup"><span data-stu-id="2455c-119">The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations.</span></span> <span data-ttu-id="2455c-120"><xref:System.Threading.NativeOverlapped>在调用之前，结构在物理内存中是固定的 <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="2455c-120">The <xref:System.Threading.NativeOverlapped> structure is fixed in physical memory until <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A?displayProperty=nameWithType> is called.</span></span>

> [!NOTE]
> <span data-ttu-id="2455c-121">在 <paramref name="pinData" /> i/o 操作期间将固定中指定的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="2455c-121">The buffers specified in <paramref name="pinData" /> are pinned for the duration of the I/O operation.</span></span>

<span data-ttu-id="2455c-122">在中指定的缓冲区 <paramref name="pinData" /> 必须与传递到执行异步 i/o 的非托管操作系统函数的缓冲区相同。</span><span class="sxs-lookup"><span data-stu-id="2455c-122">The buffer or buffers specified in <paramref name="pinData" /> must be the same as those passed to the unmanaged operating system function that performs the asynchronous I/O.</span></span> 

        ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2455c-123"><paramref name="callback" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2455c-123"><paramref name="callback" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2455c-124">在释放 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 对象后调用此方法。</span><span class="sxs-lookup"><span data-stu-id="2455c-124">This method was called after the <see cref="T:System.Threading.ThreadPoolBoundHandle" /> object was disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BindHandle">
      <MemberSignature Language="C#" Value="public static System.Threading.ThreadPoolBoundHandle BindHandle (System.Runtime.InteropServices.SafeHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.ThreadPoolBoundHandle BindHandle(class System.Runtime.InteropServices.SafeHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.BindHandle(System.Runtime.InteropServices.SafeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BindHandle (handle As SafeHandle) As ThreadPoolBoundHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::ThreadPoolBoundHandle ^ BindHandle(System::Runtime::InteropServices::SafeHandle ^ handle);" />
      <MemberSignature Language="F#" Value="static member BindHandle : System.Runtime.InteropServices.SafeHandle -&gt; System.Threading.ThreadPoolBoundHandle" Usage="System.Threading.ThreadPoolBoundHandle.BindHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadPoolBoundHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.InteropServices.SafeHandle" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="2455c-125">保存操作系统句柄的对象。</span><span class="sxs-lookup"><span data-stu-id="2455c-125">An object that holds the operating system handle.</span></span> <span data-ttu-id="2455c-126">必须在非托管代码中为重叠 I/O 打开句柄。</span><span class="sxs-lookup"><span data-stu-id="2455c-126">The handle must have been opened for overlapped I/O in unmanaged code.</span></span></param>
        <summary><span data-ttu-id="2455c-127">为指定句柄返回 <see cref="T:System.Threading.ThreadPoolBoundHandle" />，后者已绑定到系统线程池。</span><span class="sxs-lookup"><span data-stu-id="2455c-127">Returns a <see cref="T:System.Threading.ThreadPoolBoundHandle" /> for the specified handle, which is bound to the system thread pool.</span></span></summary>
        <returns><span data-ttu-id="2455c-128"><paramref name="handle" /> 的 <see cref="T:System.Threading.ThreadPoolBoundHandle" />，后者已绑定到系统线程池。</span><span class="sxs-lookup"><span data-stu-id="2455c-128">A <see cref="T:System.Threading.ThreadPoolBoundHandle" /> for <paramref name="handle" />, which is bound to the system thread pool.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2455c-129">应为每个句柄调用此方法一次。</span><span class="sxs-lookup"><span data-stu-id="2455c-129">This method should be called once per handle.</span></span>  
  
 <span data-ttu-id="2455c-130"><xref:System.Threading.ThreadPoolBoundHandle>对象不具有所有权 `handle` ; 它仍是调用方的责任 <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2455c-130">The <xref:System.Threading.ThreadPoolBoundHandle> object does not take ownership of `handle`; it remains the responsibility of the caller to call <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2455c-131"><paramref name="handle" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2455c-131"><paramref name="handle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2455c-132">已释放 <paramref name="handle" />。</span><span class="sxs-lookup"><span data-stu-id="2455c-132"><paramref name="handle" /> has been disposed.</span></span>  
  
<span data-ttu-id="2455c-133">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2455c-133">-or-</span></span> 
 <span data-ttu-id="2455c-134"><paramref name="handle" /> 未引用有效的 I/O 句柄。</span><span class="sxs-lookup"><span data-stu-id="2455c-134"><paramref name="handle" /> does not refer to a valid I/O handle.</span></span>  
  
<span data-ttu-id="2455c-135">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2455c-135">-or-</span></span> 
 <span data-ttu-id="2455c-136"><paramref name="handle" /> 引用的句柄没有为重叠 I/O 打开。</span><span class="sxs-lookup"><span data-stu-id="2455c-136"><paramref name="handle" /> refers to a handle that has not been opened for overlapped I/O.</span></span>  
  
<span data-ttu-id="2455c-137">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2455c-137">-or-</span></span> 
 <span data-ttu-id="2455c-138"><paramref name="handle" /> 引用了已绑定的句柄。</span><span class="sxs-lookup"><span data-stu-id="2455c-138"><paramref name="handle" /> refers to a handle that has already been bound.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="threadPoolBoundHandle.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2455c-139">释放 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 实例使用的所有非托管资源。</span><span class="sxs-lookup"><span data-stu-id="2455c-139">Releases all unmanaged resources used by the <see cref="T:System.Threading.ThreadPoolBoundHandle" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreeNativeOverlapped">
      <MemberSignature Language="C#" Value="public void FreeNativeOverlapped (System.Threading.NativeOverlapped* overlapped);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FreeNativeOverlapped(valuetype System.Threading.NativeOverlapped* overlapped) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped(System.Threading.NativeOverlapped*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FreeNativeOverlapped(System::Threading::NativeOverlapped* overlapped);" />
      <MemberSignature Language="F#" Value="member this.FreeNativeOverlapped : nativeptr&lt;System.Threading.NativeOverlapped&gt; -&gt; unit" Usage="threadPoolBoundHandle.FreeNativeOverlapped overlapped" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="overlapped" Type="System.Threading.NativeOverlapped*" />
      </Parameters>
      <Docs>
        <param name="overlapped"><span data-ttu-id="2455c-140">一个非托管指针，指向要释放的 <see cref="T:System.Threading.NativeOverlapped" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="2455c-140">An unmanaged pointer to the <see cref="T:System.Threading.NativeOverlapped" /> structure to be freed.</span></span></param>
        <summary><span data-ttu-id="2455c-141">释放与 <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" /> 方法分配的 <see cref="T:System.Threading.NativeOverlapped" /> 结构关联的内存。</span><span class="sxs-lookup"><span data-stu-id="2455c-141">Frees the memory associated with a <see cref="T:System.Threading.NativeOverlapped" /> structure allocated by the <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="2455c-142"><xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A>在 <xref:System.Threading.NativeOverlapped> 使用方法分配的每个非托管指针上，只能调用一次该方法 <xref:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped%2A> 。</span><span class="sxs-lookup"><span data-stu-id="2455c-142">You must call the <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> method exactly once on every <xref:System.Threading.NativeOverlapped> unmanaged pointer allocated by using the <xref:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped%2A> method.</span></span> <span data-ttu-id="2455c-143">如果未调用 <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> 方法，则会泄漏内存。</span><span class="sxs-lookup"><span data-stu-id="2455c-143">If you do not call the <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> method, you will leak memory.</span></span> <span data-ttu-id="2455c-144">如果 <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> 对同一非托管指针多次调用此方法 <xref:System.Threading.NativeOverlapped> ，内存将损坏。</span><span class="sxs-lookup"><span data-stu-id="2455c-144">If you call the <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> method more than once on the same <xref:System.Threading.NativeOverlapped> unmanaged pointer, memory will be corrupted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2455c-145"><paramref name="overlapped" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2455c-145"><paramref name="overlapped" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="2455c-146">在释放 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 对象后调用此方法。</span><span class="sxs-lookup"><span data-stu-id="2455c-146">This method was called after the <see cref="T:System.Threading.ThreadPoolBoundHandle" /> object was disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNativeOverlappedState">
      <MemberSignature Language="C#" Value="public static object GetNativeOverlappedState (System.Threading.NativeOverlapped* overlapped);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetNativeOverlappedState(valuetype System.Threading.NativeOverlapped* overlapped) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.GetNativeOverlappedState(System.Threading.NativeOverlapped*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetNativeOverlappedState(System::Threading::NativeOverlapped* overlapped);" />
      <MemberSignature Language="F#" Value="static member GetNativeOverlappedState : nativeptr&lt;System.Threading.NativeOverlapped&gt; -&gt; obj" Usage="System.Threading.ThreadPoolBoundHandle.GetNativeOverlappedState overlapped" />
      <MemberSignature Language="C#" Value="public static object? GetNativeOverlappedState (System.Threading.NativeOverlapped* overlapped);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="overlapped" Type="System.Threading.NativeOverlapped*" />
      </Parameters>
      <Docs>
        <param name="overlapped"><span data-ttu-id="2455c-147">指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针，将从该结构中返回用户提供的关联对象。</span><span class="sxs-lookup"><span data-stu-id="2455c-147">An unmanaged pointer to the <see cref="T:System.Threading.NativeOverlapped" /> structure from which to return the associated user-provided object.</span></span></param>
        <summary><span data-ttu-id="2455c-148">返回用户提供的对象，该对象在通过调用 <see cref="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" /> 方法分配 <see cref="T:System.Threading.NativeOverlapped" /> 实例时指定。</span><span class="sxs-lookup"><span data-stu-id="2455c-148">Returns the user-provided object that was specified when the <see cref="T:System.Threading.NativeOverlapped" /> instance was allocated by calling the <see cref="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="2455c-149">用户提供的对象，用于区分此 <see cref="T:System.Threading.NativeOverlapped" /> 实例与其他 <see cref="T:System.Threading.NativeOverlapped" /> 实例，或者，如果在通过调用 <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" /> 方法分配实例时未进行指定，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2455c-149">A user-provided object that distinguishes this <see cref="T:System.Threading.NativeOverlapped" /> instance from other <see cref="T:System.Threading.NativeOverlapped" /> instances, or <see langword="null" /> if one was not specified when the instance was allocated by calling the <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" /> method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2455c-150"><paramref name="overlapped" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2455c-150"><paramref name="overlapped" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.SafeHandle Handle { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.InteropServices.SafeHandle Handle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadPoolBoundHandle.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As SafeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::SafeHandle ^ Handle { System::Runtime::InteropServices::SafeHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : System.Runtime.InteropServices.SafeHandle" Usage="System.Threading.ThreadPoolBoundHandle.Handle" />
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.SafeHandle? Handle { get; }" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.SafeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2455c-151">获取绑定的操作系统句柄。</span><span class="sxs-lookup"><span data-stu-id="2455c-151">Gets the bound operating system handle.</span></span></summary>
        <value><span data-ttu-id="2455c-152">一个对象，保存绑定的操作系统句柄。</span><span class="sxs-lookup"><span data-stu-id="2455c-152">An object that holds the bound operating system handle.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
