<Type Name="ArgumentToExpressionModelItemConverter" FullName="System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3f5bd917acc97954361208c48606795578e47d80" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89731984" /></Metadata><TypeSignature Language="C#" Value="public class ArgumentToExpressionModelItemConverter : System.Windows.Data.IMultiValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ArgumentToExpressionModelItemConverter extends System.Object implements class System.Windows.Data.IMultiValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ArgumentToExpressionModelItemConverter&#xA;Implements IMultiValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArgumentToExpressionModelItemConverter : System::Windows::Data::IMultiValueConverter" />
  <TypeSignature Language="F#" Value="type ArgumentToExpressionModelItemConverter = class&#xA;    interface IMultiValueConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Data.IMultiValueConverter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="34fd5-101">定义参数和表达式模型项之间的映射，并提供在这些对象之间进行转换的功能。</span><span class="sxs-lookup"><span data-stu-id="34fd5-101">Defines the mapping between arguments and expression model items and provides the functionality to convert between these objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="34fd5-102">此转换器可用于将数据绑定到 <xref:System.Activities.Presentation.View.ExpressionTextBox> 或其他 WPF 控件。</span><span class="sxs-lookup"><span data-stu-id="34fd5-102">This converter can be used to bind data to an <xref:System.Activities.Presentation.View.ExpressionTextBox> or other WPF control.</span></span> <span data-ttu-id="34fd5-103">有关详细信息，请参阅 [使用自定义属性编辑器中的 ExpressionTextBox](https://go.microsoft.com/fwlink/?LinkID=224791)。</span><span class="sxs-lookup"><span data-stu-id="34fd5-103">For more information, see [Using an ExpressionTextBox in a custom property editor](https://go.microsoft.com/fwlink/?LinkID=224791).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentToExpressionModelItemConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentToExpressionModelItemConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="34fd5-104">初始化 <see cref="T:System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="34fd5-104">Initializes a new instance of the <see cref="T:System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object[] values, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object[] values, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (values As Object(), targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Convert(cli::array &lt;System::Object ^&gt; ^ values, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj[] * Type * obj * System.Globalization.CultureInfo -&gt; obj&#xA;override this.Convert : obj[] * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="argumentToExpressionModelItemConverter.Convert (values, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="34fd5-105">一个数组，其中包含要转换的参数。</span><span class="sxs-lookup"><span data-stu-id="34fd5-105">An array that contains the argument to convert.</span></span> <span data-ttu-id="34fd5-106">仅使用位于索引 1 处的数组项。</span><span class="sxs-lookup"><span data-stu-id="34fd5-106">Only the array item at index 1 is used.</span></span></param>
        <param name="targetType"><span data-ttu-id="34fd5-107">未在此实现中使用。</span><span class="sxs-lookup"><span data-stu-id="34fd5-107">Not used in this implementation.</span></span></param>
        <param name="parameter"><span data-ttu-id="34fd5-108">未在此实现中使用。</span><span class="sxs-lookup"><span data-stu-id="34fd5-108">Not used in this implementation.</span></span></param>
        <param name="culture"><span data-ttu-id="34fd5-109">未在此实现中使用。</span><span class="sxs-lookup"><span data-stu-id="34fd5-109">Not used in this implementation.</span></span></param>
        <summary><span data-ttu-id="34fd5-110">将指定自变量转换为表达式模型项。</span><span class="sxs-lookup"><span data-stu-id="34fd5-110">Converts the specified argument to an expression model item.</span></span></summary>
        <returns><span data-ttu-id="34fd5-111">包含表达式模型项的对象。</span><span class="sxs-lookup"><span data-stu-id="34fd5-111">An object that contains the expression model item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object[] ConvertBack (object value, Type[] targetTypes, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ConvertBack(object value, class System.Type[] targetTypes, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (value As Object, targetTypes As Type(), parameter As Object, culture As CultureInfo) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ ConvertBack(System::Object ^ value, cli::array &lt;Type ^&gt; ^ targetTypes, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type[] * obj * System.Globalization.CultureInfo -&gt; obj[]&#xA;override this.ConvertBack : obj * Type[] * obj * System.Globalization.CultureInfo -&gt; obj[]" Usage="argumentToExpressionModelItemConverter.ConvertBack (value, targetTypes, parameter, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetTypes" Type="System.Type[]" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="34fd5-112">要转换的模型项。</span><span class="sxs-lookup"><span data-stu-id="34fd5-112">The model item to convert.</span></span></param>
        <param name="targetTypes"><span data-ttu-id="34fd5-113">未在此实现中使用。</span><span class="sxs-lookup"><span data-stu-id="34fd5-113">Not used in this implementation.</span></span></param>
        <param name="parameter"><span data-ttu-id="34fd5-114">未在此实现中使用。</span><span class="sxs-lookup"><span data-stu-id="34fd5-114">Not used in this implementation.</span></span></param>
        <param name="culture"><span data-ttu-id="34fd5-115">未在此实现中使用。</span><span class="sxs-lookup"><span data-stu-id="34fd5-115">Not used in this implementation.</span></span></param>
        <summary><span data-ttu-id="34fd5-116">将指定表达式模型项转换为自变量。</span><span class="sxs-lookup"><span data-stu-id="34fd5-116">Converts the specified expression model item to an argument.</span></span></summary>
        <returns><span data-ttu-id="34fd5-117">包含参数的对象。</span><span class="sxs-lookup"><span data-stu-id="34fd5-117">An object that contains the argument.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
