<Type Name="ObjectToModelValueConverter" FullName="System.Activities.Presentation.Converters.ObjectToModelValueConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="033f17eee5d655885cf6a22858abcd5f3fd8b6a2" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86838581" /></Metadata><TypeSignature Language="C#" Value="public class ObjectToModelValueConverter : System.Windows.Data.IMultiValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectToModelValueConverter extends System.Object implements class System.Windows.Data.IMultiValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Converters.ObjectToModelValueConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectToModelValueConverter&#xA;Implements IMultiValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectToModelValueConverter : System::Windows::Data::IMultiValueConverter" />
  <TypeSignature Language="F#" Value="type ObjectToModelValueConverter = class&#xA;    interface IMultiValueConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Data.IMultiValueConverter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5f2d7-101">将对象转换为模型值。</span><span class="sxs-lookup"><span data-stu-id="5f2d7-101">Converts objects to model values.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f2d7-102">在方案中，此类用于 `PropertyGrid` 将对象转换为 `ModelItem` 。</span><span class="sxs-lookup"><span data-stu-id="5f2d7-102">This class is used in `PropertyGrid` scenarios to convert an object into a `ModelItem`.</span></span> <span data-ttu-id="5f2d7-103">它从转换 `ModelPropertyEntry` 为 `ModelItem` 拥有属性的。</span><span class="sxs-lookup"><span data-stu-id="5f2d7-103">It converts from a `ModelPropertyEntry` to the `ModelItem` that owns the property.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectToModelValueConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Converters.ObjectToModelValueConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectToModelValueConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f2d7-104">创建 <see cref="T:System.Activities.Presentation.Converters.ObjectToModelValueConverter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="5f2d7-104">Creates a new instance of the <see cref="T:System.Activities.Presentation.Converters.ObjectToModelValueConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object[] values, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object[] values, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Converters.ObjectToModelValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (values As Object(), targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Convert(cli::array &lt;System::Object ^&gt; ^ values, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj[] * Type * obj * System.Globalization.CultureInfo -&gt; obj&#xA;override this.Convert : obj[] * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="objectToModelValueConverter.Convert (values, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="5f2d7-105">要转换的 <see langword="ModelPropertyEntry" />。</span><span class="sxs-lookup"><span data-stu-id="5f2d7-105">The <see langword="ModelPropertyEntry" /> to convert.</span></span></param>
        <param name="targetType"><span data-ttu-id="5f2d7-106">未在此实现中使用。</span><span class="sxs-lookup"><span data-stu-id="5f2d7-106">Not used in this implementation.</span></span></param>
        <param name="parameter"><span data-ttu-id="5f2d7-107">未在此实现中使用。</span><span class="sxs-lookup"><span data-stu-id="5f2d7-107">Not used in this implementation.</span></span></param>
        <param name="culture"><span data-ttu-id="5f2d7-108">未在此实现中使用。</span><span class="sxs-lookup"><span data-stu-id="5f2d7-108">Not used in this implementation.</span></span></param>
        <summary><span data-ttu-id="5f2d7-109">将指定的 <see langword="ModelPropertyEntry" /> 转换为包含原始条目的 <see langword="ModelItem" />。</span><span class="sxs-lookup"><span data-stu-id="5f2d7-109">Converts the specified <see langword="ModelPropertyEntry" /> to a <see langword="ModelItem" /> that contains the original entry.</span></span></summary>
        <returns><span data-ttu-id="5f2d7-110">返回 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="5f2d7-110">Returns <see cref="T:System.Object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f2d7-111">此方法是与对象的双向绑定 `PropertyValue` 。</span><span class="sxs-lookup"><span data-stu-id="5f2d7-111">This method is a two-way binding with the `PropertyValue` object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object[] ConvertBack (object value, Type[] targetTypes, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ConvertBack(object value, class System.Type[] targetTypes, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Converters.ObjectToModelValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (value As Object, targetTypes As Type(), parameter As Object, culture As CultureInfo) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ ConvertBack(System::Object ^ value, cli::array &lt;Type ^&gt; ^ targetTypes, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type[] * obj * System.Globalization.CultureInfo -&gt; obj[]&#xA;override this.ConvertBack : obj * Type[] * obj * System.Globalization.CultureInfo -&gt; obj[]" Usage="objectToModelValueConverter.ConvertBack (value, targetTypes, parameter, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetTypes" Type="System.Type[]" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5f2d7-112">要转换的 <see langword="ModelItem" />。</span><span class="sxs-lookup"><span data-stu-id="5f2d7-112">The <see langword="ModelItem" /> to convert.</span></span></param>
        <param name="targetTypes"><span data-ttu-id="5f2d7-113">未在此实现中使用。</span><span class="sxs-lookup"><span data-stu-id="5f2d7-113">Not used in this implementation.</span></span></param>
        <param name="parameter"><span data-ttu-id="5f2d7-114">未在此实现中使用。</span><span class="sxs-lookup"><span data-stu-id="5f2d7-114">Not used in this implementation.</span></span></param>
        <param name="culture"><span data-ttu-id="5f2d7-115">未在此实现中使用。</span><span class="sxs-lookup"><span data-stu-id="5f2d7-115">Not used in this implementation.</span></span></param>
        <summary><span data-ttu-id="5f2d7-116">将指定的 <see langword="ModelItem" /> 转换为 <see langword="ModelPropertyEntry" />。</span><span class="sxs-lookup"><span data-stu-id="5f2d7-116">Converts the specified <see langword="ModelItem" /> to a <see langword="ModelPropertyEntry" />.</span></span></summary>
        <returns><span data-ttu-id="5f2d7-117">一个对象，其中包含转换的 <see langword="ModelPropertyEntry" />。</span><span class="sxs-lookup"><span data-stu-id="5f2d7-117">An object that contains the converted <see langword="ModelPropertyEntry" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f2d7-118">此方法是与结合使用的单向绑定 `ModelPropertyEntry` 。</span><span class="sxs-lookup"><span data-stu-id="5f2d7-118">This method is a one-way binding with the `ModelPropertyEntry`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
