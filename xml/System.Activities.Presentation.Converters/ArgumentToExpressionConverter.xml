<Type Name="ArgumentToExpressionConverter" FullName="System.Activities.Presentation.Converters.ArgumentToExpressionConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="25cb7daa77ebca17d0cd9216b9404752c53b806d" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86838815" /></Metadata><TypeSignature Language="C#" Value="public class ArgumentToExpressionConverter : System.Windows.Data.IValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ArgumentToExpressionConverter extends System.Object implements class System.Windows.Data.IValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Converters.ArgumentToExpressionConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ArgumentToExpressionConverter&#xA;Implements IValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArgumentToExpressionConverter : System::Windows::Data::IValueConverter" />
  <TypeSignature Language="F#" Value="type ArgumentToExpressionConverter = class&#xA;    interface IValueConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Data.IValueConverter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2cdaa-101">定义参数和表达式之间的映射，并提供在这些对象之间进行转换的功能。</span><span class="sxs-lookup"><span data-stu-id="2cdaa-101">Defines the mapping between arguments and expressions and provides the functionality to convert between these objects.</span></span> <span data-ttu-id="2cdaa-102">通常，在自定义活动设计器中使用 <see cref="T:System.Activities.Presentation.View.ExpressionTextBox" /> 时，将以声明方式使用此转换器。</span><span class="sxs-lookup"><span data-stu-id="2cdaa-102">Typically, this converter is used declaratively when using an <see cref="T:System.Activities.Presentation.View.ExpressionTextBox" /> in a custom activity designer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdaa-103">也可以强制性使用此转换器；但不推荐这种用法。</span><span class="sxs-lookup"><span data-stu-id="2cdaa-103">This converter can also be used imperatively; however, this usage is not recommended.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2cdaa-104">下面的 XAML 代码段演示如何在使用 ExpressionTextBox 的自定义活动设计器中使用 ArgumentToExpressionConverter。</span><span class="sxs-lookup"><span data-stu-id="2cdaa-104">The following XAML snippet shows how to use the ArgumentToExpressionConverter in a custom activity designer that uses an ExpressionTextBox.</span></span>  
  
```  
<sapv:ExpressionTextBox   
    Expression="{Binding Path=ModelItem.SampleValue,   
                         Mode=TwoWay,   
                         Converter={StaticResource ArgumentToExpressionConverter},   
                         ConverterParameter=In }"  
    ExpressionType="s:String"  
    OwnerActivity="{Binding Path=ModelItem}"  
   />  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentToExpressionConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Converters.ArgumentToExpressionConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentToExpressionConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2cdaa-105">初始化 <see cref="T:System.Activities.Presentation.Converters.ArgumentToExpressionConverter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2cdaa-105">Initializes a new instance of the <see cref="T:System.Activities.Presentation.Converters.ArgumentToExpressionConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object value, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Convert(System::Object ^ value, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj&#xA;override this.Convert : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="argumentToExpressionConverter.Convert (value, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2cdaa-106">绑定源生成的值。</span><span class="sxs-lookup"><span data-stu-id="2cdaa-106">The value produced by the binding source.</span></span></param>
        <param name="targetType"><span data-ttu-id="2cdaa-107">绑定目标属性的类型。</span><span class="sxs-lookup"><span data-stu-id="2cdaa-107">The type of the binding target property.</span></span></param>
        <param name="parameter"><span data-ttu-id="2cdaa-108">要使用的转换器参数。</span><span class="sxs-lookup"><span data-stu-id="2cdaa-108">The converter parameter to use.</span></span></param>
        <param name="culture"><span data-ttu-id="2cdaa-109">要用在转换器中的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="2cdaa-109">The <see cref="T:System.Globalization.CultureInfo" /> to use in the converter.</span></span></param>
        <summary><span data-ttu-id="2cdaa-110">将指定参数转换为表达式。</span><span class="sxs-lookup"><span data-stu-id="2cdaa-110">Converts the specified argument into an expression.</span></span></summary>
        <returns><span data-ttu-id="2cdaa-111"><see cref="T:System.Object" /> 的一个实例，其中包含转换的 Argument.Expression。</span><span class="sxs-lookup"><span data-stu-id="2cdaa-111">An instance of <see cref="T:System.Object" /> that contains the converted Argument.Expression.</span></span>  
  
<span data-ttu-id="2cdaa-112">包含转换为 Argument.Expression。</span><span class="sxs-lookup"><span data-stu-id="2cdaa-112">Contains the converted Argument.Expression.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdaa-113">`parameter`。</span><span class="sxs-lookup"><span data-stu-id="2cdaa-113">The `parameter`,</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object ConvertBack (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertBack(object value, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertBack(System::Object ^ value, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj&#xA;override this.ConvertBack : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="argumentToExpressionConverter.ConvertBack (value, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2cdaa-114">要转换的 Argument.Expression。</span><span class="sxs-lookup"><span data-stu-id="2cdaa-114">The Argument.Expression to convert.</span></span></param>
        <param name="targetType"><span data-ttu-id="2cdaa-115">未实现。</span><span class="sxs-lookup"><span data-stu-id="2cdaa-115">Not implemented.</span></span></param>
        <param name="parameter"><span data-ttu-id="2cdaa-116">未实现。</span><span class="sxs-lookup"><span data-stu-id="2cdaa-116">Not implemented.</span></span></param>
        <param name="culture"><span data-ttu-id="2cdaa-117">未实现。</span><span class="sxs-lookup"><span data-stu-id="2cdaa-117">Not implemented.</span></span></param>
        <summary><span data-ttu-id="2cdaa-118">将指定 Argument.Expression 转换为自变量。</span><span class="sxs-lookup"><span data-stu-id="2cdaa-118">Converts the specified Argument.Expression into an argument.</span></span></summary>
        <returns><span data-ttu-id="2cdaa-119">返回 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="2cdaa-119">Returns <see cref="T:System.Object" />.</span></span>  
  
<span data-ttu-id="2cdaa-120">包含转换的自变量。</span><span class="sxs-lookup"><span data-stu-id="2cdaa-120">Contains the converted argument.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
