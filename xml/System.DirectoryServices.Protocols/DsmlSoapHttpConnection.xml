<Type Name="DsmlSoapHttpConnection" FullName="System.DirectoryServices.Protocols.DsmlSoapHttpConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c0432df8a9df14f741228ca2d2a2787d5edc0b01" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89944055" /></Metadata><TypeSignature Language="C#" Value="public class DsmlSoapHttpConnection : System.DirectoryServices.Protocols.DsmlSoapConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DsmlSoapHttpConnection extends System.DirectoryServices.Protocols.DsmlSoapConnection" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" />
  <TypeSignature Language="VB.NET" Value="Public Class DsmlSoapHttpConnection&#xA;Inherits DsmlSoapConnection" />
  <TypeSignature Language="C++ CLI" Value="public ref class DsmlSoapHttpConnection : System::DirectoryServices::Protocols::DsmlSoapConnection" />
  <TypeSignature Language="F#" Value="type DsmlSoapHttpConnection = class&#xA;    inherit DsmlSoapConnection" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.Protocols.DsmlSoapConnection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> 类表示使用 SOAP over HTTP 与 DSML 网关的连接。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DsmlSoapHttpConnection (System.DirectoryServices.Protocols.DsmlDirectoryIdentifier identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.Protocols.DsmlDirectoryIdentifier identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identifier As DsmlDirectoryIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DsmlSoapHttpConnection(System::DirectoryServices::Protocols::DsmlDirectoryIdentifier ^ identifier);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection : System.DirectoryServices.Protocols.DsmlDirectoryIdentifier -&gt; System.DirectoryServices.Protocols.DsmlSoapHttpConnection" Usage="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection identifier" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identifier" Type="System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" />
      </Parameters>
      <Docs>
        <param name="identifier">一个 <see cref="T:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" /> 对象，指定用于连接的服务器。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier)" /> 构造函数初始化 <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identifier" /> 为 null（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DsmlSoapHttpConnection (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DsmlSoapHttpConnection(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection : Uri -&gt; System.DirectoryServices.Protocols.DsmlSoapHttpConnection" Usage="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection uri" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">一个 <see cref="T:System.Uri" /> 对象，指定用于连接的服务器。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.Uri)" /> 构造函数初始化 <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="uri" /> 为 null（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DsmlSoapHttpConnection (System.DirectoryServices.Protocols.DsmlDirectoryIdentifier identifier, System.Net.NetworkCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.Protocols.DsmlDirectoryIdentifier identifier, class System.Net.NetworkCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier,System.Net.NetworkCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identifier As DsmlDirectoryIdentifier, credential As NetworkCredential)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DsmlSoapHttpConnection(System::DirectoryServices::Protocols::DsmlDirectoryIdentifier ^ identifier, System::Net::NetworkCredential ^ credential);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection : System.DirectoryServices.Protocols.DsmlDirectoryIdentifier * System.Net.NetworkCredential -&gt; System.DirectoryServices.Protocols.DsmlSoapHttpConnection" Usage="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection (identifier, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identifier" Type="System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="identifier">一个 <see cref="T:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" /> 对象，指定用于连接的服务器。</param>
        <param name="credential">一个 <see cref="T:System.Net.NetworkCredential" /> 对象，其中包含网络凭据。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier,System.Net.NetworkCredential)" /> 构造函数初始化 <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identifier" /> 为 null（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DsmlSoapHttpConnection (System.DirectoryServices.Protocols.DsmlDirectoryIdentifier identifier, System.Net.NetworkCredential credential, System.DirectoryServices.Protocols.AuthType authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.Protocols.DsmlDirectoryIdentifier identifier, class System.Net.NetworkCredential credential, valuetype System.DirectoryServices.Protocols.AuthType authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identifier As DsmlDirectoryIdentifier, credential As NetworkCredential, authType As AuthType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DsmlSoapHttpConnection(System::DirectoryServices::Protocols::DsmlDirectoryIdentifier ^ identifier, System::Net::NetworkCredential ^ credential, System::DirectoryServices::Protocols::AuthType authType);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection : System.DirectoryServices.Protocols.DsmlDirectoryIdentifier * System.Net.NetworkCredential * System.DirectoryServices.Protocols.AuthType -&gt; System.DirectoryServices.Protocols.DsmlSoapHttpConnection" Usage="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection (identifier, credential, authType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identifier" Type="System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="authType" Type="System.DirectoryServices.Protocols.AuthType" />
      </Parameters>
      <Docs>
        <param name="identifier">一个 <see cref="T:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" /> 对象，指定用于连接的服务器。</param>
        <param name="credential">一个 <see cref="T:System.Net.NetworkCredential" /> 对象，其中包含网络凭据。</param>
        <param name="authType">指定用于此连接的身份验证类型的 <see cref="T:System.DirectoryServices.Protocols.AuthType" /> 值。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)" /> 构造函数使用指定的标识符、网络凭据以及身份验证类型创建并初始化 <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identifier" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
        <exception cref="T:System.ArgumentException">DSML 不支持 <paramref name="authType" /> 值。 DSML 仅支持 Anonymous、Ntlm、Basic、Negotiate 和 digest。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="authType" /> 值不属于 <see cref="T:System.DirectoryServices.Protocols.AuthType" /> 枚举中定义的常数。</exception>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Abort(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.Abort : IAsyncResult -&gt; unit" Usage="dsmlSoapHttpConnection.Abort asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">从 <see cref="T:System.IAsyncResult" /> 派生的对象，该对象引用异步请求。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Abort(System.IAsyncResult)" /> 方法取消异步请求。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="asyncResult" /> 为 null（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="asyncResult" /> 不是由 <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument,System.AsyncCallback,System.Object)" /> 的对应调用返回的。</exception>
      </Docs>
    </Member>
    <Member MemberName="AuthType">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.AuthType AuthType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.Protocols.AuthType AuthType" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.AuthType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthType As AuthType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::Protocols::AuthType AuthType { System::DirectoryServices::Protocols::AuthType get(); void set(System::DirectoryServices::Protocols::AuthType value); };" />
      <MemberSignature Language="F#" Value="member this.AuthType : System.DirectoryServices.Protocols.AuthType with get, set" Usage="System.DirectoryServices.Protocols.DsmlSoapHttpConnection.AuthType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.AuthType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.AuthType" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.AuthType" /> 枚举的一个值，该值指定身份验证类型。</summary>
        <value><see cref="T:System.DirectoryServices.Protocols.AuthType" /> 枚举的一个值，该值指定身份验证类型。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSendRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendRequest (System.DirectoryServices.Protocols.DsmlRequestDocument request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendRequest(class System.DirectoryServices.Protocols.DsmlRequestDocument request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendRequest (request As DsmlRequestDocument, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendRequest(System::DirectoryServices::Protocols::DsmlRequestDocument ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendRequest : System.DirectoryServices.Protocols.DsmlRequestDocument * AsyncCallback * obj -&gt; IAsyncResult" Usage="dsmlSoapHttpConnection.BeginSendRequest (request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DsmlRequestDocument" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">要发送的 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 对象。</param>
        <param name="callback"><see cref="T:System.AsyncCallback" /> 函数。</param>
        <param name="state">包含此请求的状态数据的 <see cref="T:System.Object" />。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument,System.AsyncCallback,System.Object)" /> 方法开始以异步方式将指定的 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 对象发送到服务器。</summary>
        <returns>从 <see cref="T:System.IAsyncResult" /> 派生的对象，该对象引用异步发送。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> 为 null（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSession">
      <MemberSignature Language="C#" Value="public override void BeginSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void BeginSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSession" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub BeginSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void BeginSession();" />
      <MemberSignature Language="F#" Value="override this.BeginSession : unit -&gt; unit" Usage="dsmlSoapHttpConnection.BeginSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSession" /> 方法指示 DSML 服务器启动新会话。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 方法将在等待 DSML 服务器的响应时阻止，并将根据 <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> 属性超时。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">如果已在连接上打开会话，则引发该异常。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException">如果从响应 <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSession" /> 的服务器返回的 XML 不是格式良好的，则引发该异常。</exception>
        <exception cref="T:System.Net.WebException">如果与 DSML 服务器的通信发生故障或者该服务器无可用会话，则引发该异常。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendRequest">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.DsmlResponseDocument EndSendRequest (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.Protocols.DsmlResponseDocument EndSendRequest(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.EndSendRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSendRequest (asyncResult As IAsyncResult) As DsmlResponseDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::Protocols::DsmlResponseDocument ^ EndSendRequest(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndSendRequest : IAsyncResult -&gt; System.DirectoryServices.Protocols.DsmlResponseDocument" Usage="dsmlSoapHttpConnection.EndSendRequest asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DsmlResponseDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">从 <see cref="T:System.IAsyncResult" /> 派生的包含此请求的状态数据的对象。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.EndSendRequest(System.IAsyncResult)" /> 方法将完成异步发送请求。</summary>
        <returns>一个 <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> 对象，它包含该请求的结果。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">当 <paramref name="asyncResult" /> 为 <see langword="null" /> 时，将引发此异常。</exception>
        <exception cref="T:System.ArgumentException">如果当前实例没有从 <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument,System.AsyncCallback,System.Object)" /> 调用返回 <paramref name="asyncResult" />，则引发该异常。</exception>
        <exception cref="T:System.IO.IOException">请求未完成。 无可用的流。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException">如果服务器返回的响应无效，则引发该异常。</exception>
        <exception cref="T:System.Net.WebException">如果以前调用过中止操作或在处理请求时出错，则引发该异常。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSession">
      <MemberSignature Language="C#" Value="public override void EndSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.EndSession" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndSession();" />
      <MemberSignature Language="F#" Value="override this.EndSession : unit -&gt; unit" Usage="dsmlSoapHttpConnection.EndSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.EndSession" /> 方法结束与 DSML 服务器的会话并清除 <see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SessionId" /> 属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 方法将在等待 DSML 服务器的响应时阻止，并将根据 <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> 属性超时。  
  
 如果 DSML 服务器已自行终止会话，则 <xref:System.Net.WebException> 将引发。  如果在 <xref:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SessionId%2A> 引发异常后仍然有效，则请求决不会到达服务器，并且连接仍被视为有效。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.WebException">如果与 DSML 服务器的通信发生故障，则引发该异常。</exception>
        <exception cref="T:System.InvalidOperationException">如果没有打开的会话，则引发该异常。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendRequest">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>向 DSML 服务器发送一个对象。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendRequest">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.Protocols.DirectoryResponse SendRequest (System.DirectoryServices.Protocols.DirectoryRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.Protocols.DirectoryResponse SendRequest(class System.DirectoryServices.Protocols.DirectoryRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SendRequest (request As DirectoryRequest) As DirectoryResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::DirectoryServices::Protocols::DirectoryResponse ^ SendRequest(System::DirectoryServices::Protocols::DirectoryRequest ^ request);" />
      <MemberSignature Language="F#" Value="override this.SendRequest : System.DirectoryServices.Protocols.DirectoryRequest -&gt; System.DirectoryServices.Protocols.DirectoryResponse" Usage="dsmlSoapHttpConnection.SendRequest request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DirectoryResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DirectoryRequest" />
      </Parameters>
      <Docs>
        <param name="request">一个包含该请求的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> 方法发送单个 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</summary>
        <returns>一个 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象，它包含该请求的结果。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> 为 null（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.ErrorResponseException">DSML 服务器返回了错误响应。</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">该操作返回了失败代码。</exception>
      </Docs>
    </Member>
    <Member MemberName="SendRequest">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.DsmlResponseDocument SendRequest (System.DirectoryServices.Protocols.DsmlRequestDocument request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.Protocols.DsmlResponseDocument SendRequest(class System.DirectoryServices.Protocols.DsmlRequestDocument request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendRequest (request As DsmlRequestDocument) As DsmlResponseDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::Protocols::DsmlResponseDocument ^ SendRequest(System::DirectoryServices::Protocols::DsmlRequestDocument ^ request);" />
      <MemberSignature Language="F#" Value="override this.SendRequest : System.DirectoryServices.Protocols.DsmlRequestDocument -&gt; System.DirectoryServices.Protocols.DsmlResponseDocument" Usage="dsmlSoapHttpConnection.SendRequest request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DsmlResponseDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DsmlRequestDocument" />
      </Parameters>
      <Docs>
        <param name="request">发送到服务器的 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 对象。</param>
        <summary><see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument)" /> 方法向 DSML 服务器发送 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 对象。</summary>
        <returns>一个 <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> 对象，它包含该请求的结果。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="request" /> 为 null（在 Visual Basic 中为 <see langword="Nothing" />）。</exception>
      </Docs>
    </Member>
    <Member MemberName="SessionId">
      <MemberSignature Language="C#" Value="public override string SessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionId" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SessionId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SessionId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SessionId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionId : string" Usage="System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SessionId" /> 属性包含活动会话 ID。</summary>
        <value>活动会话 ID。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapActionHeader">
      <MemberSignature Language="C#" Value="public string SoapActionHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SoapActionHeader" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SoapActionHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapActionHeader As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SoapActionHeader { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SoapActionHeader : string with get, set" Usage="System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SoapActionHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SoapActionHeader" /> 属性包含与其他 HTTP 头一起发送的 SOAP Action 头。</summary>
        <value>与其他 HTTP 头一起发送的 SOAP Action 头。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的默认值为 "#batchRequest"。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public override TimeSpan Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property TimeSpan Timeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : TimeSpan with get, set" Usage="System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Timeout" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> 超时前的时间长度（以秒为单位）。</summary>
        <value><see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> 超时前的时间长度（以秒为单位）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
