<Type Name="UnhandledExceptionAction" FullName="System.Activities.UnhandledExceptionAction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eb5bf38c7ceaf3497674d9c7512dd5e4aea25746" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="73376256" /></Metadata><TypeSignature Language="C#" Value="public enum UnhandledExceptionAction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UnhandledExceptionAction extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Activities.UnhandledExceptionAction" />
  <TypeSignature Language="VB.NET" Value="Public Enum UnhandledExceptionAction" />
  <TypeSignature Language="C++ CLI" Value="public enum class UnhandledExceptionAction" />
  <TypeSignature Language="F#" Value="type UnhandledExceptionAction = " />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="3b232-101">指定当异常转义工作流的根时发生的操作。</span><span class="sxs-lookup"><span data-stu-id="3b232-101">Specifies the action that occurs when an exception escapes the root of a workflow.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b232-102">如果异常转义工作流的根，则将调用 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 函数。</span><span class="sxs-lookup"><span data-stu-id="3b232-102">The <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> function is invoked if an exception escapes the root of the workflow.</span></span> <span data-ttu-id="3b232-103"><xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> 提供对异常以及指向生成异常的 <xref:System.Activities.Activity> 的指针的访问。</span><span class="sxs-lookup"><span data-stu-id="3b232-103">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> provides access to the exception as well as a pointer to the <xref:System.Activities.Activity> that generated the exception.</span></span> <span data-ttu-id="3b232-104">如果未指定任何处理程序，则终止是默认操作 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3b232-104">Terminate is the default action if no <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is specified.</span></span>  
  
   
  
## Examples

<span data-ttu-id="3b232-105">下面的示例调用了引发异常的工作流。</span><span class="sxs-lookup"><span data-stu-id="3b232-105">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="3b232-106">工作流未处理异常，并且 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 处理程序已被调用。</span><span class="sxs-lookup"><span data-stu-id="3b232-106">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="3b232-107">将检查 <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> 以提供有关异常的信息，且终止工作流。</span><span class="sxs-lookup"><span data-stu-id="3b232-107">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
[!code-csharp[CFX_WorkflowApplicationExample#6](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#6)]  

<span data-ttu-id="3b232-108">下面的示例调用了引发异常的工作流。</span><span class="sxs-lookup"><span data-stu-id="3b232-108">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="3b232-109">工作流未处理异常，并且 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 处理程序已被调用。</span><span class="sxs-lookup"><span data-stu-id="3b232-109">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="3b232-110">将检查 <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> 以提供有关异常的信息，且终止工作流。</span><span class="sxs-lookup"><span data-stu-id="3b232-110">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is aborted.</span></span>  
  
[!code-csharp[CFX_WorkflowApplicationExample#7](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#7)]  

<span data-ttu-id="3b232-111">下面的示例调用了引发异常的工作流。</span><span class="sxs-lookup"><span data-stu-id="3b232-111">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="3b232-112">工作流未处理异常，并且 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 处理程序已被调用。</span><span class="sxs-lookup"><span data-stu-id="3b232-112">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="3b232-113">将检查 <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> 以提供有关异常的信息，且取消工作流。</span><span class="sxs-lookup"><span data-stu-id="3b232-113">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is cancelled.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#8](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#8)]  

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="Abort" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Activities.UnhandledExceptionAction Abort = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Activities.UnhandledExceptionAction.Abort" />
      <MemberSignature Language="VB.NET" Value="Abort" />
      <MemberSignature Language="C++ CLI" Value="Abort" />
      <MemberSignature Language="F#" Value="Abort = 0" Usage="System.Activities.UnhandledExceptionAction.Abort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.UnhandledExceptionAction</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3b232-114">指定 <see cref="T:System.Activities.WorkflowApplication" /> 应中止工作流。</span><span class="sxs-lookup"><span data-stu-id="3b232-114">Specifies that the <see cref="T:System.Activities.WorkflowApplication" /> should abort the workflow.</span></span> <span data-ttu-id="3b232-115">这会导致调用在中止进程完成时由 <see cref="P:System.Activities.WorkflowApplication.Aborted" /> 返回的委托。</span><span class="sxs-lookup"><span data-stu-id="3b232-115">This results in the calling the delegate returned by the <see cref="P:System.Activities.WorkflowApplication.Aborted" /> bwhen the abort process is complete.</span></span> <span data-ttu-id="3b232-116">未处理的异常将用作中止原因。</span><span class="sxs-lookup"><span data-stu-id="3b232-116">The unhandled exception is used as the abort reason.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="Cancel" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Activities.UnhandledExceptionAction Cancel = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Activities.UnhandledExceptionAction.Cancel" />
      <MemberSignature Language="VB.NET" Value="Cancel" />
      <MemberSignature Language="C++ CLI" Value="Cancel" />
      <MemberSignature Language="F#" Value="Cancel = 1" Usage="System.Activities.UnhandledExceptionAction.Cancel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.UnhandledExceptionAction</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3b232-117">指定 <see cref="T:System.Activities.WorkflowApplication" /> 应安排取消根活动并恢复执行。</span><span class="sxs-lookup"><span data-stu-id="3b232-117">Specifies that the <see cref="T:System.Activities.WorkflowApplication" /> should schedule the cancellation of the root activity and resume execution.</span></span> <span data-ttu-id="3b232-118">这会导致调用在取消进程完成时由 <see cref="P:System.Activities.WorkflowApplication.Completed" /> 属性返回的委托。</span><span class="sxs-lookup"><span data-stu-id="3b232-118">This results in a call to the delegate returned by the <see cref="P:System.Activities.WorkflowApplication.Completed" /> property when the cancellation process is complete.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="Terminate" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Activities.UnhandledExceptionAction Terminate = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Activities.UnhandledExceptionAction.Terminate" />
      <MemberSignature Language="VB.NET" Value="Terminate" />
      <MemberSignature Language="C++ CLI" Value="Terminate" />
      <MemberSignature Language="F#" Value="Terminate = 2" Usage="System.Activities.UnhandledExceptionAction.Terminate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.UnhandledExceptionAction</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3b232-119">指定 <see cref="T:System.Activities.WorkflowApplication" /> 应安排终止根活动并恢复执行。</span><span class="sxs-lookup"><span data-stu-id="3b232-119">Specifies that the <see cref="T:System.Activities.WorkflowApplication" /> should schedule termination of the root activity and resume execution.</span></span> <span data-ttu-id="3b232-120">这会导致调用在终止进程完成时分配给 <see cref="P:System.Activities.WorkflowApplication.Completed" /> 属性的委托。</span><span class="sxs-lookup"><span data-stu-id="3b232-120">This results in a call to the delegate assigned to the <see cref="P:System.Activities.WorkflowApplication.Completed" />property when the termination process is complete.</span></span> <span data-ttu-id="3b232-121">未处理的异常将用作终止原因。</span><span class="sxs-lookup"><span data-stu-id="3b232-121">The unhandled exception is used as the termination reason.</span></span> <span data-ttu-id="3b232-122">如果未指定 <see cref="P:System.Activities.WorkflowApplication.OnUnhandledException" /> 处理程序，默认操作为 <see langword="Terminate" />。</span><span class="sxs-lookup"><span data-stu-id="3b232-122"><see langword="Terminate" /> is the default action if no <see cref="P:System.Activities.WorkflowApplication.OnUnhandledException" /> handler is specified.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
