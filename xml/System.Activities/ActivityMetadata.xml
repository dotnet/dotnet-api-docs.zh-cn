<Type Name="ActivityMetadata" FullName="System.Activities.ActivityMetadata">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1262d8c5ed0ccbf6e67412a248f474a936666ed8" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86832742" /></Metadata><TypeSignature Language="C#" Value="public struct ActivityMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ActivityMetadata extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Activities.ActivityMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Structure ActivityMetadata" />
  <TypeSignature Language="C++ CLI" Value="public value class ActivityMetadata" />
  <TypeSignature Language="F#" Value="type ActivityMetadata = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f31b8-101">代表参数、子活动、变量和委托的集合，通过一个已配置的 <see cref="T:System.Activities.Activity" /> 引入执行环境。</span><span class="sxs-lookup"><span data-stu-id="f31b8-101">Represents the set of arguments, child activities, variables, and delegates that a configured <see cref="T:System.Activities.Activity" /> introduces to the execution environment.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (System.Activities.RuntimeArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Activities.RuntimeArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (argument As RuntimeArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(System::Activities::RuntimeArgument ^ argument);" />
      <MemberSignature Language="F#" Value="member this.AddArgument : System.Activities.RuntimeArgument -&gt; unit" Usage="activityMetadata.AddArgument argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Activities.RuntimeArgument" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="f31b8-102">要添加到集合中的自变量。</span><span class="sxs-lookup"><span data-stu-id="f31b8-102">The argument to add to the collection.</span></span></param>
        <summary><span data-ttu-id="f31b8-103">将一个自变量添加到某个活动的自变量集合中。</span><span class="sxs-lookup"><span data-stu-id="f31b8-103">Adds an argument to the collection of arguments of an activity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDefaultExtensionProvider&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void AddDefaultExtensionProvider&lt;T&gt; (Func&lt;T&gt; extensionProvider) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDefaultExtensionProvider&lt;class T&gt;(class System.Func`1&lt;!!T&gt; extensionProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddDefaultExtensionProvider(Of T As Class) (extensionProvider As Func(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class void AddDefaultExtensionProvider(Func&lt;T&gt; ^ extensionProvider);" />
      <MemberSignature Language="F#" Value="member this.AddDefaultExtensionProvider : Func&lt;'T (requires 'T : null)&gt; -&gt; unit (requires 'T : null)" Usage="activityMetadata.AddDefaultExtensionProvider extensionProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="extensionProvider" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="f31b8-104">扩展提供程序的类型。</span><span class="sxs-lookup"><span data-stu-id="f31b8-104">The type of the extension provider.</span></span></typeparam>
        <param name="extensionProvider"><span data-ttu-id="f31b8-105">返回扩展的函数。</span><span class="sxs-lookup"><span data-stu-id="f31b8-105">The function that returns the extension.</span></span></param>
        <summary><span data-ttu-id="f31b8-106">将指定的扩展提供程序添加到活动的默认扩展提供程序的集合中。</span><span class="sxs-lookup"><span data-stu-id="f31b8-106">Adds the specified extension provider to the collection of default extension providers for the activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f31b8-107">如果主机未提供 `T` 类型的扩展，则系统会对此扩展提供程序进行计算以提供一个此类型的扩展。</span><span class="sxs-lookup"><span data-stu-id="f31b8-107">If the host does not provide an extension of type `T`, then this extension provider is evaluated to provide one.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddImportedChild">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f31b8-108">将指定的活动添加到导入的子活动的元数据列表中。</span><span class="sxs-lookup"><span data-stu-id="f31b8-108">Adds the specified activity to the metadata's list of imported child activities.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddImportedChild">
      <MemberSignature Language="C#" Value="public void AddImportedChild (System.Activities.Activity importedChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImportedChild(class System.Activities.Activity importedChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImportedChild (importedChild As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImportedChild(System::Activities::Activity ^ importedChild);" />
      <MemberSignature Language="F#" Value="member this.AddImportedChild : System.Activities.Activity -&gt; unit" Usage="activityMetadata.AddImportedChild importedChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedChild" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="importedChild"><span data-ttu-id="f31b8-109">要添加的活动。</span><span class="sxs-lookup"><span data-stu-id="f31b8-109">The activity to add.</span></span></param>
        <summary><span data-ttu-id="f31b8-110">将指定的活动添加到导入的子活动的元数据列表中。</span><span class="sxs-lookup"><span data-stu-id="f31b8-110">Adds the specified activity to the metadata's list of imported child activities.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f31b8-111">导入的子活动是父活动不能直接安排的子活动。</span><span class="sxs-lookup"><span data-stu-id="f31b8-111">An imported child activity is a child activity that the parent activity does not schedule directly.</span></span> <span data-ttu-id="f31b8-112">相反，之后父活动可以使用此活动配置一些其他子活动。</span><span class="sxs-lookup"><span data-stu-id="f31b8-112">Rather, then parent uses this activity to configure some other child activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImportedChild">
      <MemberSignature Language="C#" Value="public void AddImportedChild (System.Activities.Activity importedChild, object origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImportedChild(class System.Activities.Activity importedChild, object origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImportedChild (importedChild As Activity, origin As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImportedChild(System::Activities::Activity ^ importedChild, System::Object ^ origin);" />
      <MemberSignature Language="F#" Value="member this.AddImportedChild : System.Activities.Activity * obj -&gt; unit" Usage="activityMetadata.AddImportedChild (importedChild, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedChild" Type="System.Activities.Activity" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="origin" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="importedChild"><span data-ttu-id="f31b8-113">要添加的活动。</span><span class="sxs-lookup"><span data-stu-id="f31b8-113">The activity to add.</span></span></param>
        <param name="origin"><span data-ttu-id="f31b8-114">源 。</span><span class="sxs-lookup"><span data-stu-id="f31b8-114">The origin.</span></span></param>
        <summary><span data-ttu-id="f31b8-115">将指定的活动添加到导入的子活动的元数据列表中。</span><span class="sxs-lookup"><span data-stu-id="f31b8-115">Adds the specified activity to the metadata's list of imported child activities.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddImportedDelegate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f31b8-116">将指定的委托添加到导入的委托的元数据列表中。</span><span class="sxs-lookup"><span data-stu-id="f31b8-116">Adds the specified delegate to the metadata's list of imported delegates.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddImportedDelegate">
      <MemberSignature Language="C#" Value="public void AddImportedDelegate (System.Activities.ActivityDelegate importedDelegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImportedDelegate(class System.Activities.ActivityDelegate importedDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImportedDelegate (importedDelegate As ActivityDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImportedDelegate(System::Activities::ActivityDelegate ^ importedDelegate);" />
      <MemberSignature Language="F#" Value="member this.AddImportedDelegate : System.Activities.ActivityDelegate -&gt; unit" Usage="activityMetadata.AddImportedDelegate importedDelegate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedDelegate" Type="System.Activities.ActivityDelegate" />
      </Parameters>
      <Docs>
        <param name="importedDelegate"><span data-ttu-id="f31b8-117">要添加的委托。</span><span class="sxs-lookup"><span data-stu-id="f31b8-117">The delegate to add.</span></span></param>
        <summary><span data-ttu-id="f31b8-118">将指定的委托添加到导入的委托的元数据列表中。</span><span class="sxs-lookup"><span data-stu-id="f31b8-118">Adds the specified delegate to the metadata's list of imported delegates.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f31b8-119">导入的 <xref:System.Activities.ActivityDelegate> 是父活动未直接调用的 <xref:System.Activities.ActivityDelegate>。</span><span class="sxs-lookup"><span data-stu-id="f31b8-119">An imported <xref:System.Activities.ActivityDelegate> is an <xref:System.Activities.ActivityDelegate> that the parent activity does not invoke directly.</span></span> <span data-ttu-id="f31b8-120">相反，父活动会使用此 <xref:System.Activities.ActivityDelegate> 配置一些其他子活动。</span><span class="sxs-lookup"><span data-stu-id="f31b8-120">Rather, the parent uses this <xref:System.Activities.ActivityDelegate> to configure some other child activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImportedDelegate">
      <MemberSignature Language="C#" Value="public void AddImportedDelegate (System.Activities.ActivityDelegate importedDelegate, object origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImportedDelegate(class System.Activities.ActivityDelegate importedDelegate, object origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImportedDelegate (importedDelegate As ActivityDelegate, origin As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImportedDelegate(System::Activities::ActivityDelegate ^ importedDelegate, System::Object ^ origin);" />
      <MemberSignature Language="F#" Value="member this.AddImportedDelegate : System.Activities.ActivityDelegate * obj -&gt; unit" Usage="activityMetadata.AddImportedDelegate (importedDelegate, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedDelegate" Type="System.Activities.ActivityDelegate" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="origin" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="importedDelegate"><span data-ttu-id="f31b8-121">要添加的委托。</span><span class="sxs-lookup"><span data-stu-id="f31b8-121">The delegate to add.</span></span></param>
        <param name="origin"><span data-ttu-id="f31b8-122">源 。</span><span class="sxs-lookup"><span data-stu-id="f31b8-122">The origin.</span></span></param>
        <summary><span data-ttu-id="f31b8-123">将指定的委托添加到导入的委托的元数据列表中。</span><span class="sxs-lookup"><span data-stu-id="f31b8-123">Adds the specified delegate to the metadata's list of imported delegates.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddValidationError">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f31b8-124">将一个验证错误添加到验证错误的元数据集合中。</span><span class="sxs-lookup"><span data-stu-id="f31b8-124">Adds a validation error to the metadata's collection of validation errors.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="f31b8-125">有关详细信息，请参阅 [基于命令性代码的验证](/dotnet/framework/windows-workflow-foundation/imperative-code-based-validation)。</span><span class="sxs-lookup"><span data-stu-id="f31b8-125">For more information, see [Imperative Code-Based Validation](/dotnet/framework/windows-workflow-foundation/imperative-code-based-validation).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddValidationError">
      <MemberSignature Language="C#" Value="public void AddValidationError (System.Activities.Validation.ValidationError validationError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValidationError(class System.Activities.Validation.ValidationError validationError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValidationError (validationError As ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValidationError(System::Activities::Validation::ValidationError ^ validationError);" />
      <MemberSignature Language="F#" Value="member this.AddValidationError : System.Activities.Validation.ValidationError -&gt; unit" Usage="activityMetadata.AddValidationError validationError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationError" Type="System.Activities.Validation.ValidationError" />
      </Parameters>
      <Docs>
        <param name="validationError"><span data-ttu-id="f31b8-126">要添加的验证错误。</span><span class="sxs-lookup"><span data-stu-id="f31b8-126">The validation error to add.</span></span></param>
        <summary><span data-ttu-id="f31b8-127">将指定的验证错误添加到验证错误的元数据集合中。</span><span class="sxs-lookup"><span data-stu-id="f31b8-127">Adds the specified validation error to the metadata's collection of validation errors.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="f31b8-128">有关详细信息，请参阅 [基于命令性代码的验证](/dotnet/framework/windows-workflow-foundation/imperative-code-based-validation)。</span><span class="sxs-lookup"><span data-stu-id="f31b8-128">For more information, see [Imperative Code-Based Validation](/dotnet/framework/windows-workflow-foundation/imperative-code-based-validation).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddValidationError">
      <MemberSignature Language="C#" Value="public void AddValidationError (string validationErrorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValidationError(string validationErrorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.AddValidationError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValidationError (validationErrorMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValidationError(System::String ^ validationErrorMessage);" />
      <MemberSignature Language="F#" Value="member this.AddValidationError : string -&gt; unit" Usage="activityMetadata.AddValidationError validationErrorMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationErrorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="validationErrorMessage"><span data-ttu-id="f31b8-129">描述验证错误的消息。</span><span class="sxs-lookup"><span data-stu-id="f31b8-129">A message that describes the validation error.</span></span></param>
        <summary><span data-ttu-id="f31b8-130">使用指定的说明将一个验证错误添加到验证错误的元数据集合中。</span><span class="sxs-lookup"><span data-stu-id="f31b8-130">Adds a validation error to the metadata's collection of validation errors using the specified description.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="f31b8-131">有关详细信息，请参阅 [基于命令性代码的验证](/dotnet/framework/windows-workflow-foundation/imperative-code-based-validation)。</span><span class="sxs-lookup"><span data-stu-id="f31b8-131">For more information, see [Imperative Code-Based Validation](/dotnet/framework/windows-workflow-foundation/imperative-code-based-validation).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddVariable">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f31b8-132">将指定的变量添加到变量的元数据集合中。</span><span class="sxs-lookup"><span data-stu-id="f31b8-132">Adds the specified variable to the metadata's collection of variables.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddVariable">
      <MemberSignature Language="C#" Value="public void AddVariable (System.Activities.Variable variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddVariable(class System.Activities.Variable variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddVariable (variable As Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddVariable(System::Activities::Variable ^ variable);" />
      <MemberSignature Language="F#" Value="member this.AddVariable : System.Activities.Variable -&gt; unit" Usage="activityMetadata.AddVariable variable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="f31b8-133">要添加的变量。</span><span class="sxs-lookup"><span data-stu-id="f31b8-133">The variable to add.</span></span></param>
        <summary><span data-ttu-id="f31b8-134">将指定的变量添加到变量的元数据集合中。</span><span class="sxs-lookup"><span data-stu-id="f31b8-134">Adds the specified variable to the metadata's collection of variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f31b8-135">使用此方法添加的变量被视为活动的可公开配置的表面的一部分，也就是说，它们将由活动的使用者提供。</span><span class="sxs-lookup"><span data-stu-id="f31b8-135">Variables added using this method are considered part of the activity's publicly configurable surface, that is, they are to be provided by the consumer of the activity.</span></span> <span data-ttu-id="f31b8-136">例如，<xref:System.Activities.Statements.Sequence> 会使用此方法在它的 <xref:System.Activities.Statements.Sequence.Variables%2A> 集合中添加变量。</span><span class="sxs-lookup"><span data-stu-id="f31b8-136">For example, <xref:System.Activities.Statements.Sequence> adds the variables in its <xref:System.Activities.Statements.Sequence.Variables%2A> collection using this method.</span></span> <span data-ttu-id="f31b8-137">活动的实现无法访问使用此方法添加的变量。</span><span class="sxs-lookup"><span data-stu-id="f31b8-137">An activity's implementation cannot access variables added using this method.</span></span> <span data-ttu-id="f31b8-138">通过 <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> 添加的活动（及它们的任何未实现子活动）可以访问使用此方法添加的变量。</span><span class="sxs-lookup"><span data-stu-id="f31b8-138">Activities added through <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> (and any of their non-implementation child activities) can access variables added using this method.</span></span> <span data-ttu-id="f31b8-139">例如，<xref:System.Activities.Statements.Sequence> 会使用此方法添加它的 <xref:System.Activities.Statements.Sequence.Activities%2A> 集合。</span><span class="sxs-lookup"><span data-stu-id="f31b8-139">For example, <xref:System.Activities.Statements.Sequence> adds its <xref:System.Activities.Statements.Sequence.Activities%2A> collection in this manner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddVariable">
      <MemberSignature Language="C#" Value="public void AddVariable (System.Activities.Variable variable, object origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddVariable(class System.Activities.Variable variable, object origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddVariable (variable As Variable, origin As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddVariable(System::Activities::Variable ^ variable, System::Object ^ origin);" />
      <MemberSignature Language="F#" Value="member this.AddVariable : System.Activities.Variable * obj -&gt; unit" Usage="activityMetadata.AddVariable (variable, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="origin" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="f31b8-140">要添加的变量。</span><span class="sxs-lookup"><span data-stu-id="f31b8-140">The variable to add.</span></span></param>
        <param name="origin"><span data-ttu-id="f31b8-141">源 。</span><span class="sxs-lookup"><span data-stu-id="f31b8-141">The origin.</span></span></param>
        <summary><span data-ttu-id="f31b8-142">将指定的变量添加到变量的元数据集合中。</span><span class="sxs-lookup"><span data-stu-id="f31b8-142">Adds the specified variable to the metadata's collection of variables.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public void Bind (System.Activities.Argument binding, System.Activities.RuntimeArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Bind(class System.Activities.Argument binding, class System.Activities.RuntimeArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Bind (binding As Argument, argument As RuntimeArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Bind(System::Activities::Argument ^ binding, System::Activities::RuntimeArgument ^ argument);" />
      <MemberSignature Language="F#" Value="member this.Bind : System.Activities.Argument * System.Activities.RuntimeArgument -&gt; unit" Usage="activityMetadata.Bind (binding, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Activities.Argument" />
        <Parameter Name="argument" Type="System.Activities.RuntimeArgument" />
      </Parameters>
      <Docs>
        <param name="binding"><span data-ttu-id="f31b8-143">要绑定的 <see cref="T:System.Activities.Argument" />。</span><span class="sxs-lookup"><span data-stu-id="f31b8-143">The <see cref="T:System.Activities.Argument" /> to bind.</span></span></param>
        <param name="argument"><span data-ttu-id="f31b8-144">要绑定的 <see cref="T:System.Activities.RuntimeArgument" />。</span><span class="sxs-lookup"><span data-stu-id="f31b8-144">The <see cref="T:System.Activities.RuntimeArgument" /> to bind.</span></span></param>
        <summary><span data-ttu-id="f31b8-145">将指定的 <see cref="T:System.Activities.Argument" /> 绑定到指定的 <see cref="T:System.Activities.RuntimeArgument" />。</span><span class="sxs-lookup"><span data-stu-id="f31b8-145">Binds the specified <see cref="T:System.Activities.Argument" /> to the specified <see cref="T:System.Activities.RuntimeArgument" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Environment">
      <MemberSignature Language="C#" Value="public System.Activities.LocationReferenceEnvironment Environment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.LocationReferenceEnvironment Environment" />
      <MemberSignature Language="DocId" Value="P:System.Activities.ActivityMetadata.Environment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Environment As LocationReferenceEnvironment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::LocationReferenceEnvironment ^ Environment { System::Activities::LocationReferenceEnvironment ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Environment : System.Activities.LocationReferenceEnvironment" Usage="System.Activities.ActivityMetadata.Environment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.LocationReferenceEnvironment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f31b8-146">获取活动的由 <see cref="T:System.Activities.Hosting.SymbolResolver" /> 引入的自变量、变量、委托自变量或符号的 <see cref="T:System.Activities.LocationReferenceEnvironment" />。</span><span class="sxs-lookup"><span data-stu-id="f31b8-146">Gets the activity's <see cref="T:System.Activities.LocationReferenceEnvironment" /> of arguments, variables, delegate arguments, or symbols introduced by a <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span></span></summary>
        <value><span data-ttu-id="f31b8-147">活动的由引入的自变量、变量、委托参数或符号的位置引用环境 <see cref="T:System.Activities.Hosting.SymbolResolver" /> 。</span><span class="sxs-lookup"><span data-stu-id="f31b8-147">The activity's location reference environment of arguments, variables, delegate arguments, or symbols introduced by a <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="activityMetadata.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="f31b8-148">要比较的对象。</span><span class="sxs-lookup"><span data-stu-id="f31b8-148">The object to compare.</span></span></param>
        <summary><span data-ttu-id="f31b8-149">确定指定的对象是否等于此元数据实例。</span><span class="sxs-lookup"><span data-stu-id="f31b8-149">Determines whether the specified object is equal to this metadata instance.</span></span></summary>
        <returns><span data-ttu-id="f31b8-150">如果指定的对象等于此元数据实例，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f31b8-150"><see langword="true" /> if the specified object is equal to this metadata instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArgumentsWithReflection">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt; GetArgumentsWithReflection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.RuntimeArgument&gt; GetArgumentsWithReflection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.GetArgumentsWithReflection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArgumentsWithReflection () As Collection(Of RuntimeArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::Activities::RuntimeArgument ^&gt; ^ GetArgumentsWithReflection();" />
      <MemberSignature Language="F#" Value="member this.GetArgumentsWithReflection : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt;" Usage="activityMetadata.GetArgumentsWithReflection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f31b8-151">返回通过使用反射获取的参数的集合。</span><span class="sxs-lookup"><span data-stu-id="f31b8-151">Returns a collection of arguments obtained by using reflection.</span></span></summary>
        <returns><span data-ttu-id="f31b8-152">参数的集合。</span><span class="sxs-lookup"><span data-stu-id="f31b8-152">A collection of arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f31b8-153">此方法使用活动的 <xref:System.ComponentModel.TypeDescriptor> 来检查类型的所有公共属性 <xref:System.Activities.Argument> ，并将其返回到集合中。</span><span class="sxs-lookup"><span data-stu-id="f31b8-153">This method uses an activity's <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Argument> and returns them in a collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="activityMetadata.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f31b8-154">返回此元数据实例的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="f31b8-154">Returns a unique identifier for this metadata instance.</span></span></summary>
        <returns><span data-ttu-id="f31b8-155">一个整数，唯一标识此元数据实例。</span><span class="sxs-lookup"><span data-stu-id="f31b8-155">An integer that uniquely identifies this metadata instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImportedChildrenWithReflection">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; GetImportedChildrenWithReflection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Activity&gt; GetImportedChildrenWithReflection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.GetImportedChildrenWithReflection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetImportedChildrenWithReflection () As Collection(Of Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::Activities::Activity ^&gt; ^ GetImportedChildrenWithReflection();" />
      <MemberSignature Language="F#" Value="member this.GetImportedChildrenWithReflection : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt;" Usage="activityMetadata.GetImportedChildrenWithReflection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f31b8-156">使用反射返回导入的子活动的集合。</span><span class="sxs-lookup"><span data-stu-id="f31b8-156">Returns a collection of imported child activities using reflection.</span></span></summary>
        <returns><span data-ttu-id="f31b8-157">导入的子活动的集合。</span><span class="sxs-lookup"><span data-stu-id="f31b8-157">A collection of imported child activities.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f31b8-158">此方法使用活动的 <xref:System.ComponentModel.TypeDescriptor> 来检查类型的所有公共属性，或从派生的所有公共属性， <xref:System.Activities.Activity> `IList<T>` `ICollection<T>` `T` <xref:System.Activities.Activity> 并将它们返回到集合中。</span><span class="sxs-lookup"><span data-stu-id="f31b8-158">This method uses an activity's <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Activity>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.Activity>, and returns them in a collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImportedDelegatesWithReflection">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; GetImportedDelegatesWithReflection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.ActivityDelegate&gt; GetImportedDelegatesWithReflection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetImportedDelegatesWithReflection () As Collection(Of ActivityDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::Activities::ActivityDelegate ^&gt; ^ GetImportedDelegatesWithReflection();" />
      <MemberSignature Language="F#" Value="member this.GetImportedDelegatesWithReflection : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt;" Usage="activityMetadata.GetImportedDelegatesWithReflection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f31b8-159">使用反射返回委托的集合。</span><span class="sxs-lookup"><span data-stu-id="f31b8-159">Returns a collection of delegates using reflection.</span></span></summary>
        <returns><span data-ttu-id="f31b8-160">委托的集合。</span><span class="sxs-lookup"><span data-stu-id="f31b8-160">A collection of delegates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f31b8-161">此方法使用活动的 <xref:System.ComponentModel.TypeDescriptor> 来检查类型的所有公共属性，或从派生的所有公共属性， <xref:System.Activities.ActivityDelegate> `IList<T>` `ICollection<T>` `T` <xref:System.Activities.ActivityDelegate> 并将它们返回到集合中。</span><span class="sxs-lookup"><span data-stu-id="f31b8-161">This method uses an activity's <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.ActivityDelegate>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.ActivityDelegate>, and returns them in a collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVariablesWithReflection">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; GetVariablesWithReflection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Variable&gt; GetVariablesWithReflection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.GetVariablesWithReflection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVariablesWithReflection () As Collection(Of Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ GetVariablesWithReflection();" />
      <MemberSignature Language="F#" Value="member this.GetVariablesWithReflection : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt;" Usage="activityMetadata.GetVariablesWithReflection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f31b8-162">使用反射返回变量的集合。</span><span class="sxs-lookup"><span data-stu-id="f31b8-162">Returns a collection of variables using reflection.</span></span></summary>
        <returns><span data-ttu-id="f31b8-163">变量的集合。</span><span class="sxs-lookup"><span data-stu-id="f31b8-163">A collection of variables.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f31b8-164">此方法使用活动的 <xref:System.ComponentModel.TypeDescriptor> 来检查类型的所有公共属性，或从派生的所有公共属性， <xref:System.Activities.Variable> `IList<T>` `ICollection<T>` `T` <xref:System.Activities.Variable> 并将它们返回到集合中。</span><span class="sxs-lookup"><span data-stu-id="f31b8-164">This method uses an activity's <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Variable>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.Variable>, and returns them in a collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasViolations">
      <MemberSignature Language="C#" Value="public bool HasViolations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasViolations" />
      <MemberSignature Language="DocId" Value="P:System.Activities.ActivityMetadata.HasViolations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasViolations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasViolations { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasViolations : bool" Usage="System.Activities.ActivityMetadata.HasViolations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f31b8-165">获取指示元数据中是否存在任何验证错误的值。</span><span class="sxs-lookup"><span data-stu-id="f31b8-165">Gets a value that indicates whether there are any validation errors in the metadata.</span></span></summary>
        <value><span data-ttu-id="f31b8-166">如果存在验证错误，则返回的值为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f31b8-166"><see langword="true" /> if validation errors are present; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Activities.ActivityMetadata left, System.Activities.ActivityMetadata right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Activities.ActivityMetadata left, valuetype System.Activities.ActivityMetadata right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ActivityMetadata, right As ActivityMetadata) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Activities::ActivityMetadata left, System::Activities::ActivityMetadata right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Activities.ActivityMetadata * System.Activities.ActivityMetadata -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Activities.ActivityMetadata" />
        <Parameter Name="right" Type="System.Activities.ActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f31b8-167">要比较的第一项。</span><span class="sxs-lookup"><span data-stu-id="f31b8-167">The first item to compare.</span></span></param>
        <param name="right"><span data-ttu-id="f31b8-168">要比较的第二项。</span><span class="sxs-lookup"><span data-stu-id="f31b8-168">The second item to compare.</span></span></param>
        <summary><span data-ttu-id="f31b8-169">返回一个值，该值指示两个指定的元数据实例是否相等。</span><span class="sxs-lookup"><span data-stu-id="f31b8-169">Returns a value that indicates whether the two specified metadata instances are equal.</span></span></summary>
        <returns><span data-ttu-id="f31b8-170">如果两个项相等，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f31b8-170"><see langword="true" /> if the two items are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Activities.ActivityMetadata left, System.Activities.ActivityMetadata right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Activities.ActivityMetadata left, valuetype System.Activities.ActivityMetadata right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ActivityMetadata, right As ActivityMetadata) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Activities::ActivityMetadata left, System::Activities::ActivityMetadata right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Activities.ActivityMetadata * System.Activities.ActivityMetadata -&gt; bool" Usage="System.Activities.ActivityMetadata.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Activities.ActivityMetadata" />
        <Parameter Name="right" Type="System.Activities.ActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f31b8-171">要比较的第一项。</span><span class="sxs-lookup"><span data-stu-id="f31b8-171">The first item to compare.</span></span></param>
        <param name="right"><span data-ttu-id="f31b8-172">要比较的第二项。</span><span class="sxs-lookup"><span data-stu-id="f31b8-172">The second item to compare.</span></span></param>
        <summary><span data-ttu-id="f31b8-173">返回一个值，该值指示两个指定的元数据实例是否不相等。</span><span class="sxs-lookup"><span data-stu-id="f31b8-173">Returns a value that indicates whether the two specified metadata instances are not equal.</span></span></summary>
        <returns><span data-ttu-id="f31b8-174">如果两个项不相等，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f31b8-174"><see langword="true" /> if the two items are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireExtension">
      <MemberSignature Language="C#" Value="public void RequireExtension (Type extensionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequireExtension(class System.Type extensionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.RequireExtension(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequireExtension (extensionType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RequireExtension(Type ^ extensionType);" />
      <MemberSignature Language="F#" Value="member this.RequireExtension : Type -&gt; unit" Usage="activityMetadata.RequireExtension extensionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extensionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="extensionType"><span data-ttu-id="f31b8-175">扩展的类型。</span><span class="sxs-lookup"><span data-stu-id="f31b8-175">The type of the extension.</span></span></param>
        <summary><span data-ttu-id="f31b8-176">指定活动在运行时需要一个指定类型的扩展。</span><span class="sxs-lookup"><span data-stu-id="f31b8-176">Specifies that the activity requires an extension of the specified type at runtime.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f31b8-177">如果主机无法提供指定类型的扩展，验证将失败。</span><span class="sxs-lookup"><span data-stu-id="f31b8-177">If the host fails to provide an extension of the specified type, validation fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireExtension&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void RequireExtension&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequireExtension&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.RequireExtension``1" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequireExtension(Of T As Class) ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class void RequireExtension();" />
      <MemberSignature Language="F#" Value="member this.RequireExtension : unit -&gt; unit (requires 'T : null)" Usage="activityMetadata.RequireExtension " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="f31b8-178">扩展的类型。</span><span class="sxs-lookup"><span data-stu-id="f31b8-178">The type of the extension.</span></span></typeparam>
        <summary><span data-ttu-id="f31b8-179">指定活动在运行时需要一个指定泛型类型的扩展。</span><span class="sxs-lookup"><span data-stu-id="f31b8-179">Specifies that the activity requires an extension of the specified generic type at runtime.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f31b8-180">如果主机无法提供指定类型的扩展，验证将失败。</span><span class="sxs-lookup"><span data-stu-id="f31b8-180">If the host fails to provide an extension of the specified type, validation fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetArgumentsCollection">
      <MemberSignature Language="C#" Value="public void SetArgumentsCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetArgumentsCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.RuntimeArgument&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetArgumentsCollection (arguments As Collection(Of RuntimeArgument))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetArgumentsCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::RuntimeArgument ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="member this.SetArgumentsCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt; -&gt; unit" Usage="activityMetadata.SetArgumentsCollection arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt;" />
      </Parameters>
      <Docs>
        <param name="arguments"><span data-ttu-id="f31b8-181">要添加的参数。</span><span class="sxs-lookup"><span data-stu-id="f31b8-181">The arguments to add.</span></span></param>
        <summary><span data-ttu-id="f31b8-182">将指定的自变量集合添加到活动的自变量中。</span><span class="sxs-lookup"><span data-stu-id="f31b8-182">Adds the specified collection of arguments to the activity's arguments.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImportedChildrenCollection">
      <MemberSignature Language="C#" Value="public void SetImportedChildrenCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; importedChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImportedChildrenCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Activity&gt; importedChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImportedChildrenCollection (importedChildren As Collection(Of Activity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImportedChildrenCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Activity ^&gt; ^ importedChildren);" />
      <MemberSignature Language="F#" Value="member this.SetImportedChildrenCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; -&gt; unit" Usage="activityMetadata.SetImportedChildrenCollection importedChildren" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedChildren" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="importedChildren"><span data-ttu-id="f31b8-183">要添加的活动。</span><span class="sxs-lookup"><span data-stu-id="f31b8-183">The activities to add.</span></span></param>
        <summary><span data-ttu-id="f31b8-184">将指定的集合添加为活动的导入子活动。</span><span class="sxs-lookup"><span data-stu-id="f31b8-184">Adds the specified collection as imported child activities of the activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f31b8-185">这等同于为集合中的每个项调用 <xref:System.Activities.ActivityMetadata.AddImportedChild%2A>。</span><span class="sxs-lookup"><span data-stu-id="f31b8-185">This is the equivalent of calling <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> for each item in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImportedDelegatesCollection">
      <MemberSignature Language="C#" Value="public void SetImportedDelegatesCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; importedDelegates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImportedDelegatesCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.ActivityDelegate&gt; importedDelegates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImportedDelegatesCollection (importedDelegates As Collection(Of ActivityDelegate))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImportedDelegatesCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::ActivityDelegate ^&gt; ^ importedDelegates);" />
      <MemberSignature Language="F#" Value="member this.SetImportedDelegatesCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; -&gt; unit" Usage="activityMetadata.SetImportedDelegatesCollection importedDelegates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedDelegates" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt;" />
      </Parameters>
      <Docs>
        <param name="importedDelegates"><span data-ttu-id="f31b8-186">要添加的委托。</span><span class="sxs-lookup"><span data-stu-id="f31b8-186">The delegates to add.</span></span></param>
        <summary><span data-ttu-id="f31b8-187">将指定的集合添加为活动的导入委托。</span><span class="sxs-lookup"><span data-stu-id="f31b8-187">Adds the specified collection as imported delegates of the activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f31b8-188">这等同于为集合中的每个项调用 <xref:System.Activities.ActivityMetadata.AddImportedDelegate%2A>。</span><span class="sxs-lookup"><span data-stu-id="f31b8-188">This is the equivalent of calling <xref:System.Activities.ActivityMetadata.AddImportedDelegate%2A> for each item in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValidationErrorsCollection">
      <MemberSignature Language="C#" Value="public void SetValidationErrorsCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Validation.ValidationError&gt; validationErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValidationErrorsCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Validation.ValidationError&gt; validationErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValidationErrorsCollection (validationErrors As Collection(Of ValidationError))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValidationErrorsCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Validation::ValidationError ^&gt; ^ validationErrors);" />
      <MemberSignature Language="F#" Value="member this.SetValidationErrorsCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.Validation.ValidationError&gt; -&gt; unit" Usage="activityMetadata.SetValidationErrorsCollection validationErrors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationErrors" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Validation.ValidationError&gt;" />
      </Parameters>
      <Docs>
        <param name="validationErrors"><span data-ttu-id="f31b8-189">要添加的验证错误。</span><span class="sxs-lookup"><span data-stu-id="f31b8-189">The validation errors to add.</span></span></param>
        <summary><span data-ttu-id="f31b8-190">将指定的验证错误集合添加到验证错误的元数据集合中。</span><span class="sxs-lookup"><span data-stu-id="f31b8-190">Adds the specified collection of validation errors to the metadata's collection of validation errors.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVariablesCollection">
      <MemberSignature Language="C#" Value="public void SetVariablesCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; variables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVariablesCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Variable&gt; variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVariablesCollection (variables As Collection(Of Variable))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetVariablesCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ variables);" />
      <MemberSignature Language="F#" Value="member this.SetVariablesCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; -&gt; unit" Usage="activityMetadata.SetVariablesCollection variables" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variables" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt;" />
      </Parameters>
      <Docs>
        <param name="variables"><span data-ttu-id="f31b8-191">要添加的变量。</span><span class="sxs-lookup"><span data-stu-id="f31b8-191">The variables to add.</span></span></param>
        <summary><span data-ttu-id="f31b8-192">将指定的变量集合添加到活动的变量中。</span><span class="sxs-lookup"><span data-stu-id="f31b8-192">Adds the specified collection of variables to the activity's variables.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
