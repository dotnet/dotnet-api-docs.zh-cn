<Type Name="DynamicActivity" FullName="System.Activities.DynamicActivity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bdaafc93106ed8aec527e0bf71fc1e56b2c558ca" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89912169" /></Metadata><TypeSignature Language="C#" Value="public sealed class DynamicActivity : System.Activities.Activity, System.ComponentModel.ICustomTypeDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DynamicActivity extends System.Activities.Activity implements class System.ComponentModel.ICustomTypeDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DynamicActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DynamicActivity&#xA;Inherits Activity&#xA;Implements ICustomTypeDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicActivity sealed : System::Activities::Activity, System::ComponentModel::ICustomTypeDescriptor" />
  <TypeSignature Language="F#" Value="type DynamicActivity = class&#xA;    inherit Activity&#xA;    interface ICustomTypeDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Activity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ICustomTypeDescriptor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Markup.ContentProperty("Implementation")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Markup.ContentProperty("Implementation")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ded7d-101">提供一个对象模型，该模型允许您使用 <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> 以动态方式构造与 WF 设计器和运行时交互的活动。</span><span class="sxs-lookup"><span data-stu-id="ded7d-101">Provides an object model that allows you to construct activities dynamically that interface with the WF designer and runtime using <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ded7d-102">下面的示例演示如何创建一个 <xref:System.Activities.DynamicActivity>。</span><span class="sxs-lookup"><span data-stu-id="ded7d-102">The following example shows how to create a <xref:System.Activities.DynamicActivity>.</span></span>  
  
 [!code-csharp[DynamicActivityCreation#0](~/samples/snippets/csharp/VS_Snippets_CFX/dynamicactivitycreation/cs/program.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ded7d-103">创建 <see cref="T:System.Activities.DynamicActivity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ded7d-103">Creates a new instance of the <see cref="T:System.Activities.DynamicActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded7d-104">使用 <xref:System.Activities.DynamicActivity>，您无需创建新类型即可创建新活动。</span><span class="sxs-lookup"><span data-stu-id="ded7d-104">With <xref:System.Activities.DynamicActivity> you can create new activities without creating new types.</span></span> <span data-ttu-id="ded7d-105"><xref:System.Activities.DynamicActivity> 及 <xref:System.Activities.XamlIntegration.ActivityXamlServices> 中与其关联的 XAML 支持，允许在 XAML 中定义新的参数并且无需编译 XAML 即可实现与主机的绑定。</span><span class="sxs-lookup"><span data-stu-id="ded7d-105"><xref:System.Activities.DynamicActivity> with its associated XAML support in <xref:System.Activities.XamlIntegration.ActivityXamlServices> allows new arguments to be defined in XAML and bound by the host without requiring XAML to be compiled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Attribute&gt; Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Attribute&gt; Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicActivity.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As Collection(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;Attribute ^&gt; ^ Attributes { System::Collections::ObjectModel::Collection&lt;Attribute ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.ObjectModel.Collection&lt;Attribute&gt;" Usage="System.Activities.DynamicActivity.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Windows.Markup.DependsOn("Name")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Windows.Markup.DependsOn("Name")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ded7d-106">获取动态生成的活动的特性的集合。</span><span class="sxs-lookup"><span data-stu-id="ded7d-106">Gets the collection of attributes of the dynamically generated activity.</span></span></summary>
        <value><span data-ttu-id="ded7d-107">特性的集合。</span><span class="sxs-lookup"><span data-stu-id="ded7d-107">The collection of attributes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constraints">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Validation.Constraint&gt; Constraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Validation.Constraint&gt; Constraints" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicActivity.Constraints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Constraints As Collection(Of Constraint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Activities::Validation::Constraint ^&gt; ^ Constraints { System::Collections::ObjectModel::Collection&lt;System::Activities::Validation::Constraint ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Constraints : System.Collections.ObjectModel.Collection&lt;System.Activities.Validation.Constraint&gt;" Usage="System.Activities.DynamicActivity.Constraints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Windows.Markup.DependsOn("Properties")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Windows.Markup.DependsOn("Properties")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Validation.Constraint&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ded7d-108">返回配置为用于验证 <see cref="T:System.Activities.Validation.Constraint" /> 的 <see cref="T:System.Activities.DynamicActivity" /> 活动的集合。</span><span class="sxs-lookup"><span data-stu-id="ded7d-108">Returns a collection of <see cref="T:System.Activities.Validation.Constraint" /> activities that are configured to provide validation for the <see cref="T:System.Activities.DynamicActivity" />.</span></span></summary>
        <value><span data-ttu-id="ded7d-109">约束集合。</span><span class="sxs-lookup"><span data-stu-id="ded7d-109">The constraint collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Implementation">
      <MemberSignature Language="C#" Value="public Func&lt;System.Activities.Activity&gt; Implementation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`1&lt;class System.Activities.Activity&gt; Implementation" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicActivity.Implementation" />
      <MemberSignature Language="VB.NET" Value="Public Property Implementation As Func(Of Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Activities::Activity ^&gt; ^ Implementation { Func&lt;System::Activities::Activity ^&gt; ^ get(); void set(Func&lt;System::Activities::Activity ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Implementation : Func&lt;System.Activities.Activity&gt; with get, set" Usage="System.Activities.DynamicActivity.Implementation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Windows.Markup.Ambient]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Windows.Markup.Ambient&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Windows.Markup.XamlDeferLoad(typeof(System.Activities.XamlIntegration.FuncDeferringLoader), typeof(System.Activities.Activity))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Windows.Markup.XamlDeferLoad(typeof(System.Activities.XamlIntegration.FuncDeferringLoader), typeof(System.Activities.Activity))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.Activity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ded7d-110">获取或设置活动的执行逻辑。</span><span class="sxs-lookup"><span data-stu-id="ded7d-110">Gets or sets the execution logic of the activity.</span></span></summary>
        <value><span data-ttu-id="ded7d-111">执行逻辑。</span><span class="sxs-lookup"><span data-stu-id="ded7d-111">The execution logic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ded7d-112">下面的示例演示如何指定动态活动的实现。</span><span class="sxs-lookup"><span data-stu-id="ded7d-112">The following example shows how to specify the implementation for a dynamic activity.</span></span>  
  
 [!code-csharp[DynamicActivityCreation#0](~/samples/snippets/csharp/VS_Snippets_CFX/dynamicactivitycreation/cs/program.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementationVersion">
      <MemberSignature Language="C#" Value="public Version ImplementationVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ImplementationVersion" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicActivity.ImplementationVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property ImplementationVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ImplementationVersion { Version ^ get(); void set(Version ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImplementationVersion : Version with get, set" Usage="System.Activities.DynamicActivity.ImplementationVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Activities.XamlIntegration.ImplementationVersionConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Activities.XamlIntegration.ImplementationVersionConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ded7d-113">获取或设置活动的实现版本。</span><span class="sxs-lookup"><span data-stu-id="ded7d-113">Gets or sets the implementation version of the activity.</span></span></summary>
        <value><span data-ttu-id="ded7d-114">活动的实现版本。</span><span class="sxs-lookup"><span data-stu-id="ded7d-114">The implementation version of the activity.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicActivity.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Activities.DynamicActivity.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ded7d-115">在工作流设计器中显示的活动的名称。</span><span class="sxs-lookup"><span data-stu-id="ded7d-115">The name to be displayed for the activity in the workflow designer.</span></span></summary>
        <value><span data-ttu-id="ded7d-116">活动名称。</span><span class="sxs-lookup"><span data-stu-id="ded7d-116">The activity name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.KeyedCollection&lt;string,System.Activities.DynamicActivityProperty&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.KeyedCollection`2&lt;string, class System.Activities.DynamicActivityProperty&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DynamicActivity.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As KeyedCollection(Of String, DynamicActivityProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::KeyedCollection&lt;System::String ^, System::Activities::DynamicActivityProperty ^&gt; ^ Properties { System::Collections::ObjectModel::KeyedCollection&lt;System::String ^, System::Activities::DynamicActivityProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.ObjectModel.KeyedCollection&lt;string, System.Activities.DynamicActivityProperty&gt;" Usage="System.Activities.DynamicActivity.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Windows.Markup.DependsOn("Attributes")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Windows.Markup.DependsOn("Attributes")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.KeyedCollection&lt;System.String,System.Activities.DynamicActivityProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ded7d-117">获取映射到动态生成的活动的自变量的属性的集合。</span><span class="sxs-lookup"><span data-stu-id="ded7d-117">Gets the collection of properties that map to the arguments of the dynamically generated activity.</span></span></summary>
        <value><span data-ttu-id="ded7d-118">属性集合。</span><span class="sxs-lookup"><span data-stu-id="ded7d-118">The collection of properties.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetAttributes">
      <MemberSignature Language="C#" Value="System.ComponentModel.AttributeCollection ICustomTypeDescriptor.GetAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.AttributeCollection System.ComponentModel.ICustomTypeDescriptor.GetAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetAttributes" />
      <MemberSignature Language="VB.NET" Value="Function GetAttributes () As AttributeCollection Implements ICustomTypeDescriptor.GetAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::AttributeCollection ^ System.ComponentModel.ICustomTypeDescriptor.GetAttributes() = System::ComponentModel::ICustomTypeDescriptor::GetAttributes;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.ICustomTypeDescriptor.GetAttributes : unit -&gt; System.ComponentModel.AttributeCollection&#xA;override this.System.ComponentModel.ICustomTypeDescriptor.GetAttributes : unit -&gt; System.ComponentModel.AttributeCollection" Usage="dynamicActivity.System.ComponentModel.ICustomTypeDescriptor.GetAttributes " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ded7d-119">返回动态活动的特性集合。</span><span class="sxs-lookup"><span data-stu-id="ded7d-119">Returns a collection of attributes of the dynamic activity.</span></span></summary>
        <returns><span data-ttu-id="ded7d-120">动态活动的特性。</span><span class="sxs-lookup"><span data-stu-id="ded7d-120">The attributes of the dynamic activity.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded7d-121">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ded7d-121">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ded7d-122">它只能在 <xref:System.Activities.DynamicActivity> 实例被强制转换为 <xref:System.ComponentModel.ICustomTypeDescriptor> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ded7d-122">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetClassName">
      <MemberSignature Language="C#" Value="string ICustomTypeDescriptor.GetClassName ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.ICustomTypeDescriptor.GetClassName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetClassName" />
      <MemberSignature Language="VB.NET" Value="Function GetClassName () As String Implements ICustomTypeDescriptor.GetClassName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.ICustomTypeDescriptor.GetClassName() = System::ComponentModel::ICustomTypeDescriptor::GetClassName;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.ICustomTypeDescriptor.GetClassName : unit -&gt; string&#xA;override this.System.ComponentModel.ICustomTypeDescriptor.GetClassName : unit -&gt; string" Usage="dynamicActivity.System.ComponentModel.ICustomTypeDescriptor.GetClassName " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetClassName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ded7d-123">返回动态活动的类名称。</span><span class="sxs-lookup"><span data-stu-id="ded7d-123">Returns the class name of the dynamic activity.</span></span></summary>
        <returns><span data-ttu-id="ded7d-124">类名。</span><span class="sxs-lookup"><span data-stu-id="ded7d-124">The class name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded7d-125">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ded7d-125">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ded7d-126">它只能在 <xref:System.Activities.DynamicActivity> 实例被强制转换为 <xref:System.ComponentModel.ICustomTypeDescriptor> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ded7d-126">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetComponentName">
      <MemberSignature Language="C#" Value="string ICustomTypeDescriptor.GetComponentName ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.ICustomTypeDescriptor.GetComponentName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetComponentName" />
      <MemberSignature Language="VB.NET" Value="Function GetComponentName () As String Implements ICustomTypeDescriptor.GetComponentName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.ICustomTypeDescriptor.GetComponentName() = System::ComponentModel::ICustomTypeDescriptor::GetComponentName;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.ICustomTypeDescriptor.GetComponentName : unit -&gt; string&#xA;override this.System.ComponentModel.ICustomTypeDescriptor.GetComponentName : unit -&gt; string" Usage="dynamicActivity.System.ComponentModel.ICustomTypeDescriptor.GetComponentName " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ded7d-127">返回动态活动的组件名称。</span><span class="sxs-lookup"><span data-stu-id="ded7d-127">Returns the component name of the dynamic activity.</span></span></summary>
        <returns><span data-ttu-id="ded7d-128">组件名称。</span><span class="sxs-lookup"><span data-stu-id="ded7d-128">The component name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded7d-129">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ded7d-129">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ded7d-130">它只能在 <xref:System.Activities.DynamicActivity> 实例被强制转换为 <xref:System.ComponentModel.ICustomTypeDescriptor> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ded7d-130">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetConverter">
      <MemberSignature Language="C#" Value="System.ComponentModel.TypeConverter ICustomTypeDescriptor.GetConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.TypeConverter System.ComponentModel.ICustomTypeDescriptor.GetConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetConverter" />
      <MemberSignature Language="VB.NET" Value="Function GetConverter () As TypeConverter Implements ICustomTypeDescriptor.GetConverter" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::TypeConverter ^ System.ComponentModel.ICustomTypeDescriptor.GetConverter() = System::ComponentModel::ICustomTypeDescriptor::GetConverter;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.ICustomTypeDescriptor.GetConverter : unit -&gt; System.ComponentModel.TypeConverter&#xA;override this.System.ComponentModel.ICustomTypeDescriptor.GetConverter : unit -&gt; System.ComponentModel.TypeConverter" Usage="dynamicActivity.System.ComponentModel.ICustomTypeDescriptor.GetConverter " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetConverter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ded7d-131">返回动态活动的类型转换器。</span><span class="sxs-lookup"><span data-stu-id="ded7d-131">Returns a type converter for the dynamic activity.</span></span></summary>
        <returns><span data-ttu-id="ded7d-132">此动态活动实例的类型转换器。</span><span class="sxs-lookup"><span data-stu-id="ded7d-132">A type converter for this dynamic activity instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded7d-133">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ded7d-133">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ded7d-134">它只能在 <xref:System.Activities.DynamicActivity> 实例被强制转换为 <xref:System.ComponentModel.ICustomTypeDescriptor> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ded7d-134">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent">
      <MemberSignature Language="C#" Value="System.ComponentModel.EventDescriptor ICustomTypeDescriptor.GetDefaultEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.EventDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent" />
      <MemberSignature Language="VB.NET" Value="Function GetDefaultEvent () As EventDescriptor Implements ICustomTypeDescriptor.GetDefaultEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::EventDescriptor ^ System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent() = System::ComponentModel::ICustomTypeDescriptor::GetDefaultEvent;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent : unit -&gt; System.ComponentModel.EventDescriptor&#xA;override this.System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent : unit -&gt; System.ComponentModel.EventDescriptor" Usage="dynamicActivity.System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ded7d-135">返回动态活动的默认事件。</span><span class="sxs-lookup"><span data-stu-id="ded7d-135">Returns the default event for the dynamic activity.</span></span></summary>
        <returns><span data-ttu-id="ded7d-136">默认事件。</span><span class="sxs-lookup"><span data-stu-id="ded7d-136">The default event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded7d-137">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ded7d-137">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ded7d-138">它只能在 <xref:System.Activities.DynamicActivity> 实例被强制转换为 <xref:System.ComponentModel.ICustomTypeDescriptor> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ded7d-138">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptor ICustomTypeDescriptor.GetDefaultProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty" />
      <MemberSignature Language="VB.NET" Value="Function GetDefaultProperty () As PropertyDescriptor Implements ICustomTypeDescriptor.GetDefaultProperty" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::PropertyDescriptor ^ System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty() = System::ComponentModel::ICustomTypeDescriptor::GetDefaultProperty;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty : unit -&gt; System.ComponentModel.PropertyDescriptor&#xA;override this.System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty : unit -&gt; System.ComponentModel.PropertyDescriptor" Usage="dynamicActivity.System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ded7d-139">返回动态活动的默认属性。</span><span class="sxs-lookup"><span data-stu-id="ded7d-139">Returns the default property for the dynamic activity.</span></span></summary>
        <returns><span data-ttu-id="ded7d-140">默认属性。</span><span class="sxs-lookup"><span data-stu-id="ded7d-140">The default property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded7d-141">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ded7d-141">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ded7d-142">它只能在 <xref:System.Activities.DynamicActivity> 实例被强制转换为 <xref:System.ComponentModel.ICustomTypeDescriptor> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ded7d-142">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetEditor">
      <MemberSignature Language="C#" Value="object ICustomTypeDescriptor.GetEditor (Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.ICustomTypeDescriptor.GetEditor(class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetEditor (editorBaseType As Type) As Object Implements ICustomTypeDescriptor.GetEditor" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.ICustomTypeDescriptor.GetEditor(Type ^ editorBaseType) = System::ComponentModel::ICustomTypeDescriptor::GetEditor;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.ICustomTypeDescriptor.GetEditor : Type -&gt; obj&#xA;override this.System.ComponentModel.ICustomTypeDescriptor.GetEditor : Type -&gt; obj" Usage="dynamicActivity.System.ComponentModel.ICustomTypeDescriptor.GetEditor editorBaseType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="editorBaseType"><span data-ttu-id="ded7d-143">要查找的编辑器的基类型。</span><span class="sxs-lookup"><span data-stu-id="ded7d-143">The base type of the editor you want to find.</span></span></param>
        <summary><span data-ttu-id="ded7d-144">使用指定的基类型返回编辑器。</span><span class="sxs-lookup"><span data-stu-id="ded7d-144">Returns an editor with the specified base type.</span></span></summary>
        <returns><span data-ttu-id="ded7d-145">可被强制转换为指定编辑器类型的编辑器的一个实例，如果找不到请求类型的编辑器，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ded7d-145">An instance of the editor that can be cast to the specified editor type or <see langword="null" /> if no editor of the requested type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded7d-146">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ded7d-146">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ded7d-147">它只能在 <xref:System.Activities.DynamicActivity> 实例被强制转换为 <xref:System.ComponentModel.ICustomTypeDescriptor> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ded7d-147">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="System.ComponentModel.ICustomTypeDescriptor.GetEvents">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ded7d-148">返回动态活动的事件集合。</span><span class="sxs-lookup"><span data-stu-id="ded7d-148">Returns the collection of events of the dynamic activity.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetEvents">
      <MemberSignature Language="C#" Value="System.ComponentModel.EventDescriptorCollection ICustomTypeDescriptor.GetEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
      <MemberSignature Language="VB.NET" Value="Function GetEvents () As EventDescriptorCollection Implements ICustomTypeDescriptor.GetEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::EventDescriptorCollection ^ System.ComponentModel.ICustomTypeDescriptor.GetEvents() = System::ComponentModel::ICustomTypeDescriptor::GetEvents;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.ICustomTypeDescriptor.GetEvents : unit -&gt; System.ComponentModel.EventDescriptorCollection&#xA;override this.System.ComponentModel.ICustomTypeDescriptor.GetEvents : unit -&gt; System.ComponentModel.EventDescriptorCollection" Usage="dynamicActivity.System.ComponentModel.ICustomTypeDescriptor.GetEvents " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetEvents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ded7d-149">返回动态活动的事件集合。</span><span class="sxs-lookup"><span data-stu-id="ded7d-149">Returns the collection of events of the dynamic activity.</span></span></summary>
        <returns><span data-ttu-id="ded7d-150">事件的集合。</span><span class="sxs-lookup"><span data-stu-id="ded7d-150">The collection of events.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded7d-151">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ded7d-151">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ded7d-152">它只能在 <xref:System.Activities.DynamicActivity> 实例被强制转换为 <xref:System.ComponentModel.ICustomTypeDescriptor> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ded7d-152">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetEvents">
      <MemberSignature Language="C#" Value="System.ComponentModel.EventDescriptorCollection ICustomTypeDescriptor.GetEvents (Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Function GetEvents (attributes As Attribute()) As EventDescriptorCollection Implements ICustomTypeDescriptor.GetEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::EventDescriptorCollection ^ System.ComponentModel.ICustomTypeDescriptor.GetEvents(cli::array &lt;Attribute ^&gt; ^ attributes) = System::ComponentModel::ICustomTypeDescriptor::GetEvents;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.ICustomTypeDescriptor.GetEvents : Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection&#xA;override this.System.ComponentModel.ICustomTypeDescriptor.GetEvents : Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="dynamicActivity.System.ComponentModel.ICustomTypeDescriptor.GetEvents attributes" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="ded7d-153">可以用作筛选器的数组。</span><span class="sxs-lookup"><span data-stu-id="ded7d-153">An array that you can use as a filter.</span></span></param>
        <summary><span data-ttu-id="ded7d-154">通过将指定的特性数组用作筛选器来返回动态活动的事件的集合。</span><span class="sxs-lookup"><span data-stu-id="ded7d-154">Returns the collection of events of the dynamic activity using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="ded7d-155">与指定特性匹配的事件的集合。</span><span class="sxs-lookup"><span data-stu-id="ded7d-155">The collection of events that match the specified attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded7d-156">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ded7d-156">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ded7d-157">它只能在 <xref:System.Activities.DynamicActivity> 实例被强制转换为 <xref:System.ComponentModel.ICustomTypeDescriptor> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ded7d-157">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="System.ComponentModel.ICustomTypeDescriptor.GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ded7d-158">返回动态活动的属性集合。</span><span class="sxs-lookup"><span data-stu-id="ded7d-158">Returns the collection of properties of the dynamic activity.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetProperties">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptorCollection ICustomTypeDescriptor.GetProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
      <MemberSignature Language="VB.NET" Value="Function GetProperties () As PropertyDescriptorCollection Implements ICustomTypeDescriptor.GetProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::PropertyDescriptorCollection ^ System.ComponentModel.ICustomTypeDescriptor.GetProperties() = System::ComponentModel::ICustomTypeDescriptor::GetProperties;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.ICustomTypeDescriptor.GetProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.System.ComponentModel.ICustomTypeDescriptor.GetProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="dynamicActivity.System.ComponentModel.ICustomTypeDescriptor.GetProperties " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ded7d-159">返回动态活动的属性集合。</span><span class="sxs-lookup"><span data-stu-id="ded7d-159">Returns the collection of properties of the dynamic activity.</span></span></summary>
        <returns><span data-ttu-id="ded7d-160">属性集合。</span><span class="sxs-lookup"><span data-stu-id="ded7d-160">The collection of properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded7d-161">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ded7d-161">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ded7d-162">它只能在 <xref:System.Activities.DynamicActivity> 实例被强制转换为 <xref:System.ComponentModel.ICustomTypeDescriptor> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ded7d-162">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetProperties">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptorCollection ICustomTypeDescriptor.GetProperties (Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Function GetProperties (attributes As Attribute()) As PropertyDescriptorCollection Implements ICustomTypeDescriptor.GetProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::ComponentModel::PropertyDescriptorCollection ^ System.ComponentModel.ICustomTypeDescriptor.GetProperties(cli::array &lt;Attribute ^&gt; ^ attributes) = System::ComponentModel::ICustomTypeDescriptor::GetProperties;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.ICustomTypeDescriptor.GetProperties : Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.System.ComponentModel.ICustomTypeDescriptor.GetProperties : Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="dynamicActivity.System.ComponentModel.ICustomTypeDescriptor.GetProperties attributes" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="ded7d-163">可以用作筛选器的数组。</span><span class="sxs-lookup"><span data-stu-id="ded7d-163">An array that you can use as a filter.</span></span></param>
        <summary><span data-ttu-id="ded7d-164">通过将指定的特性数组用作筛选器来返回动态活动的属性的集合。</span><span class="sxs-lookup"><span data-stu-id="ded7d-164">Returns the collection of properties of the dynamic activity using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="ded7d-165">与指定特性匹配的属性的集合。</span><span class="sxs-lookup"><span data-stu-id="ded7d-165">The collection of properties that match the specified attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded7d-166">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ded7d-166">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ded7d-167">它只能在 <xref:System.Activities.DynamicActivity> 实例被强制转换为 <xref:System.ComponentModel.ICustomTypeDescriptor> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ded7d-167">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner">
      <MemberSignature Language="C#" Value="object ICustomTypeDescriptor.GetPropertyOwner (System.ComponentModel.PropertyDescriptor pd);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(class System.ComponentModel.PropertyDescriptor pd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Function GetPropertyOwner (pd As PropertyDescriptor) As Object Implements ICustomTypeDescriptor.GetPropertyOwner" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System::ComponentModel::PropertyDescriptor ^ pd) = System::ComponentModel::ICustomTypeDescriptor::GetPropertyOwner;" />
      <MemberSignature Language="F#" Value="abstract member System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner : System.ComponentModel.PropertyDescriptor -&gt; obj&#xA;override this.System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner : System.ComponentModel.PropertyDescriptor -&gt; obj" Usage="dynamicActivity.System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner pd" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pd" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="pd"><span data-ttu-id="ded7d-168">要查找其所有者的属性。</span><span class="sxs-lookup"><span data-stu-id="ded7d-168">The property whose owner is to be found.</span></span></param>
        <summary><span data-ttu-id="ded7d-169">返回 <see cref="T:System.Activities.DynamicActivity" /> 类的此实例。</span><span class="sxs-lookup"><span data-stu-id="ded7d-169">Returns this instance of the <see cref="T:System.Activities.DynamicActivity" /> class.</span></span></summary>
        <returns><span data-ttu-id="ded7d-170">此 <see cref="T:System.Activities.DynamicActivity" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ded7d-170">This instance of <see cref="T:System.Activities.DynamicActivity" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ded7d-171">此方法将忽略 `pd` 参数。</span><span class="sxs-lookup"><span data-stu-id="ded7d-171">The `pd` parameter is ignored by this method.</span></span> <span data-ttu-id="ded7d-172">此参数为实现 <xref:System.ComponentModel.ICustomTypeDescriptor> 接口而存在。</span><span class="sxs-lookup"><span data-stu-id="ded7d-172">This parameter is present to implement the <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 <span data-ttu-id="ded7d-173">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ded7d-173">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ded7d-174">它只能在 <xref:System.Activities.DynamicActivity> 实例被强制转换为 <xref:System.ComponentModel.ICustomTypeDescriptor> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ded7d-174">It can be used only when the <xref:System.Activities.DynamicActivity> instance is cast to an <xref:System.ComponentModel.ICustomTypeDescriptor> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
