<Type Name="WorkflowInspectionServices" FullName="System.Activities.WorkflowInspectionServices">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cdc18278e59d0d41868f6d7888178c2d58f8debf" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86587741" /></Metadata><TypeSignature Language="C#" Value="public static class WorkflowInspectionServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WorkflowInspectionServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.WorkflowInspectionServices" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowInspectionServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowInspectionServices abstract sealed" />
  <TypeSignature Language="F#" Value="type WorkflowInspectionServices = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供用于处理活动树的运行时元数据的方法。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CacheMetadata">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>缓存活动树的运行时元数据。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="public static void CacheMetadata (System.Activities.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CacheMetadata(class System.Activities.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CacheMetadata (rootActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CacheMetadata(System::Activities::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="static member CacheMetadata : System.Activities.Activity -&gt; unit" Usage="System.Activities.WorkflowInspectionServices.CacheMetadata rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">活动树的根活动。</param>
        <summary>缓存指定活动树的运行时元数据。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="public static void CacheMetadata (System.Activities.Activity rootActivity, System.Activities.LocationReferenceEnvironment hostEnvironment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CacheMetadata(class System.Activities.Activity rootActivity, class System.Activities.LocationReferenceEnvironment hostEnvironment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CacheMetadata (rootActivity As Activity, hostEnvironment As LocationReferenceEnvironment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CacheMetadata(System::Activities::Activity ^ rootActivity, System::Activities::LocationReferenceEnvironment ^ hostEnvironment);" />
      <MemberSignature Language="F#" Value="static member CacheMetadata : System.Activities.Activity * System.Activities.LocationReferenceEnvironment -&gt; unit" Usage="System.Activities.WorkflowInspectionServices.CacheMetadata (rootActivity, hostEnvironment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Activities.Activity" />
        <Parameter Name="hostEnvironment" Type="System.Activities.LocationReferenceEnvironment" />
      </Parameters>
      <Docs>
        <param name="rootActivity">活动树的根活动。</param>
        <param name="hostEnvironment">与活动树关联的环境。</param>
        <summary>使用指定的环境缓存指定活动树的运行时元数据。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInduceIdle">
      <MemberSignature Language="C#" Value="public static bool CanInduceIdle (System.Activities.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanInduceIdle(class System.Activities.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowInspectionServices.CanInduceIdle(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CanInduceIdle (activity As Activity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CanInduceIdle(System::Activities::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="static member CanInduceIdle : System.Activities.Activity -&gt; bool" Usage="System.Activities.WorkflowInspectionServices.CanInduceIdle activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="activity">活动。</param>
        <summary>指定是否服务可包含空闲活动。</summary>
        <returns>如果此项服务可包含空闲活动，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActivities">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Activities.Activity&gt; GetActivities (System.Activities.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Activity&gt; GetActivities(class System.Activities.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowInspectionServices.GetActivities(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActivities (activity As Activity) As IEnumerable(Of Activity)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::Activities::Activity ^&gt; ^ GetActivities(System::Activities::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="static member GetActivities : System.Activities.Activity -&gt; seq&lt;System.Activities.Activity&gt;" Usage="System.Activities.WorkflowInspectionServices.GetActivities activity" />
      <MemberSignature Language="VB.NET" Value="Public Shared Iterator Function GetActivities (activity As Activity) As IEnumerable(Of Activity)" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Activities.WorkflowInspectionServices/&lt;GetActivities&gt;d__1))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Activities.WorkflowInspectionServices/&lt;GetActivities&gt;d__1))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Activities.WorkflowInspectionServices/&lt;GetActivities&gt;d__3))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Activities.WorkflowInspectionServices/&lt;GetActivities&gt;d__3))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Activity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">根活动。</param>
        <summary>返回一个 <see cref="T:System.Collections.Generic.IEnumerable`1" />，它表示与输入活动关联的所有活动。</summary>
        <returns>一个表示与输入活动关联的所有活动的枚举。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 该枚举包含所有子活动、委托处理程序、变量默认值和自变量表达式。 如果输入活动为 `null` ， <xref:System.ArgumentNullException> 则会引发。 在枚举活动树时，不得修改该树且不得调用 <xref:System.Activities.WorkflowInspectionServices.CacheMetadata%2A>，否则在调用 <xref:System.InvalidOperationException> 时会引发 <xref:System.Collections.IEnumerator.MoveNext%2A>。  
  
 调用此方法会导致完全缓存元数据。 如果在调用此方法后对工作流进行更改，则必须 <xref:System.Activities.Validation.ActivityValidationServices> <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> 在进行更改后调用方法才能重新缓存元数据。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImplementationVersion">
      <MemberSignature Language="C#" Value="public static Version GetImplementationVersion (System.Activities.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Version GetImplementationVersion(class System.Activities.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowInspectionServices.GetImplementationVersion(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetImplementationVersion (activity As Activity) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Version ^ GetImplementationVersion(System::Activities::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="static member GetImplementationVersion : System.Activities.Activity -&gt; Version" Usage="System.Activities.WorkflowInspectionServices.GetImplementationVersion activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="activity">活动。</param>
        <summary>检索活动的实现版本。</summary>
        <returns>活动的实现版本。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.Activities.Activity Resolve (System.Activities.Activity root, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.Activity Resolve(class System.Activities.Activity root, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowInspectionServices.Resolve(System.Activities.Activity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (root As Activity, id As String) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::Activity ^ Resolve(System::Activities::Activity ^ root, System::String ^ id);" />
      <MemberSignature Language="F#" Value="static member Resolve : System.Activities.Activity * string -&gt; System.Activities.Activity" Usage="System.Activities.WorkflowInspectionServices.Resolve (root, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Activities.Activity" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="root">要搜索的活动树。</param>
        <param name="id">要查找的活动的标识符。</param>
        <summary>从指定的活动树返回具有指定 <paramref name="id" /> 的活动。</summary>
        <returns>指定的活动（若找到）；否则将引发 <see cref="T:System.ArgumentException" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
