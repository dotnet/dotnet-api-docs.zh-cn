<Type Name="WorkflowApplication" FullName="System.Activities.WorkflowApplication">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8d365849843a8211b22f552c9ef08e98e51a88bf" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89958765" /></Metadata><TypeSignature Language="C#" Value="public sealed class WorkflowApplication : System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowApplication extends System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="DocId" Value="T:System.Activities.WorkflowApplication" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowApplication&#xA;Inherits WorkflowInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowApplication sealed : System::Activities::Hosting::WorkflowInstance" />
  <TypeSignature Language="F#" Value="type WorkflowApplication = class&#xA;    inherit WorkflowInstance" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Hosting.WorkflowInstance</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ff685-101">为工作流的单个实例提供宿主。</span><span class="sxs-lookup"><span data-stu-id="ff685-101">Provides a host for a single instance of a workflow.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-102"><xref:System.Activities.WorkflowApplication> 类为单个工作流实例提供宿主。</span><span class="sxs-lookup"><span data-stu-id="ff685-102">The <xref:System.Activities.WorkflowApplication> class provides a host for a single workflow instance.</span></span> <span data-ttu-id="ff685-103">它是由工作流运行时管理的实际工作流实例的代理。</span><span class="sxs-lookup"><span data-stu-id="ff685-103">It is a proxy to the actual workflow instance that is managed by the workflow runtime.</span></span> <span data-ttu-id="ff685-104"><xref:System.Activities.WorkflowApplication> 的用户可以通过调用 <xref:System.Activities.WorkflowApplication> 对象中的适当方法，指示工作流运行时在工作流实例上执行操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-104">Users of <xref:System.Activities.WorkflowApplication> can instruct the workflow runtime to perform actions on a workflow instance by calling the appropriate methods on a <xref:System.Activities.WorkflowApplication> object.</span></span> <span data-ttu-id="ff685-105">如果请求的操作无效，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="ff685-105">If a requested action is not valid, an exception is thrown.</span></span>  
  
 <span data-ttu-id="ff685-106">使用 <xref:System.Activities.WorkflowApplication>，可以执行以下任务：</span><span class="sxs-lookup"><span data-stu-id="ff685-106">Using <xref:System.Activities.WorkflowApplication> you can perform the following tasks:</span></span>  
  
1.  <span data-ttu-id="ff685-107">创建新的工作流实例，或从实例存储区中加载工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-107">Create a new workflow instance, or load a workflow instance from an instance store.</span></span>  
  
2.  <span data-ttu-id="ff685-108">提供扩展以供工作流实例内的活动使用。</span><span class="sxs-lookup"><span data-stu-id="ff685-108">Provide extensions to be used by activities within a workflow instance.</span></span>  
  
3.  <span data-ttu-id="ff685-109">控制工作流实例的执行。</span><span class="sxs-lookup"><span data-stu-id="ff685-109">Control the execution of a workflow instance.</span></span>  
  
4.  <span data-ttu-id="ff685-110">恢复由工作流实例内的活动创建的书签。</span><span class="sxs-lookup"><span data-stu-id="ff685-110">Resume a bookmark created by an activity within a workflow instance.</span></span>  
  
5.  <span data-ttu-id="ff685-111">保留或卸载工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-111">Persist or unload a workflow instance.</span></span>  
  
6.  <span data-ttu-id="ff685-112">接收工作流实例生命周期事件通知。</span><span class="sxs-lookup"><span data-stu-id="ff685-112">Be notified of workflow instance lifecycle events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-113">下面的示例使用 <xref:System.Activities.WorkflowApplication> 承载一个工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-113">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ff685-114">该示例使用指定的工作流定义构造 <xref:System.Activities.WorkflowApplication>，处理所需的工作流生命周期事件，并通过调用 <xref:System.Activities.WorkflowApplication.Run%2A> 来调用工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-114">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ff685-115">完成工作流时，会向控制台显示以下输出。</span><span class="sxs-lookup"><span data-stu-id="ff685-115">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-116">创建 <see cref="T:System.Activities.WorkflowApplication" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-116">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition);" />
      <MemberSignature Language="F#" Value="new System.Activities.WorkflowApplication : System.Activities.Activity -&gt; System.Activities.WorkflowApplication" Usage="new System.Activities.WorkflowApplication workflowDefinition" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><span data-ttu-id="ff685-117">工作流定义。</span><span class="sxs-lookup"><span data-stu-id="ff685-117">The workflow definition.</span></span></param>
        <summary><span data-ttu-id="ff685-118">使用指定的工作流定义创建 <see cref="T:System.Activities.WorkflowApplication" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-118">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class with the specified workflow definition.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ff685-119">下面的示例使用 <xref:System.Activities.WorkflowApplication> 承载一个工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-119">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ff685-120"><xref:System.Activities.WorkflowApplication>实例是使用由单个活动组成的工作流定义构造的 `DiceRoll` 。</span><span class="sxs-lookup"><span data-stu-id="ff685-120">A <xref:System.Activities.WorkflowApplication> instance is constructed using a workflow definition consisting of a single `DiceRoll` activity.</span></span> <span data-ttu-id="ff685-121">`DiceRoll` 活动包含两个表示掷骰子操作结果的输出自变量。</span><span class="sxs-lookup"><span data-stu-id="ff685-121">The `DiceRoll` activity has two output arguments that represent the results of the dice roll operation.</span></span> <span data-ttu-id="ff685-122">工作流完成时，将在 <xref:System.Activities.WorkflowApplication.Completed%2A> 处理程序中检索输出，并向控制台显示以下输出。</span><span class="sxs-lookup"><span data-stu-id="ff685-122">When the workflow completes, the outputs are retrieved in the <xref:System.Activities.WorkflowApplication.Completed%2A> handler, and the following output is displayed to the console.</span></span>  
  
```Output  
Workflow aae3fb48-7229-4737-b969-d63e131b96b3 Completed.   
The two dice are 1 and 5.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#130](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#130)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#21](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberSignature Language="F#" Value="new System.Activities.WorkflowApplication : System.Activities.Activity * System.Activities.WorkflowIdentity -&gt; System.Activities.WorkflowApplication" Usage="new System.Activities.WorkflowApplication (workflowDefinition, definitionIdentity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><span data-ttu-id="ff685-123">工作流定义。</span><span class="sxs-lookup"><span data-stu-id="ff685-123">The workflow definition.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="ff685-124">定义标识。</span><span class="sxs-lookup"><span data-stu-id="ff685-124">The definition identity.</span></span></param>
        <summary><span data-ttu-id="ff685-125">使用指定的工作流定义和定义标识创建 <see cref="T:System.Activities.WorkflowApplication" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-125">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class with the specified workflow definition and definition identity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Collections.Generic.IDictionary&lt;string,object&gt; inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, inputs As IDictionary(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ inputs);" />
      <MemberSignature Language="F#" Value="new System.Activities.WorkflowApplication : System.Activities.Activity * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Activities.WorkflowApplication" Usage="new System.Activities.WorkflowApplication (workflowDefinition, inputs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><span data-ttu-id="ff685-126">工作流定义。</span><span class="sxs-lookup"><span data-stu-id="ff685-126">The workflow definition.</span></span></param>
        <param name="inputs"><span data-ttu-id="ff685-127">在工作流定义的根活动上定义的自变量的值，由自变量名称键控。</span><span class="sxs-lookup"><span data-stu-id="ff685-127">The values for arguments defined on the root activity of the workflow definition, keyed by argument name.</span></span></param>
        <summary><span data-ttu-id="ff685-128">创建 <see cref="T:System.Activities.WorkflowApplication" /> 类的新实例，该实例使用指定的工作流定义和自变量值。</span><span class="sxs-lookup"><span data-stu-id="ff685-128">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class that uses the specified workflow definition and argument values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ff685-129">下面的示例使用 <xref:System.Activities.WorkflowApplication> 承载一个工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-129">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ff685-130"><xref:System.Activities.WorkflowApplication>使用工作流定义构造实例，该工作流定义 `Divide` 包含采用两个输入参数的单个活动，以及一个包含两个要传递的值的输入参数字典（由参数名键控）。</span><span class="sxs-lookup"><span data-stu-id="ff685-130">A <xref:System.Activities.WorkflowApplication> instance is constructed using a workflow definition consisting of a single `Divide` activity that takes two input arguments, and a dictionary of input arguments containing the two values to be passed, keyed by argument name.</span></span> <span data-ttu-id="ff685-131">将处理所需的工作流生命周期事件，并通过调用 <xref:System.Activities.WorkflowApplication.Run%2A> 来调用工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-131">The desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ff685-132">完成工作流时，会向控制台显示以下输出。</span><span class="sxs-lookup"><span data-stu-id="ff685-132">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Workflow 8dc844c1-bbf8-4b21-a9a2-05f89e416055 Completed  
500 / 36 = 13 Remainder 32  
Workflow 8dc844c1-bbf8-4b21-a9a2-05f89e416055 Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#120](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#120)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#10](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Collections.Generic.IDictionary&lt;string,object&gt; inputs, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputs, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, inputs As IDictionary(Of String, Object), definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ inputs, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberSignature Language="F#" Value="new System.Activities.WorkflowApplication : System.Activities.Activity * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Activities.WorkflowIdentity -&gt; System.Activities.WorkflowApplication" Usage="new System.Activities.WorkflowApplication (workflowDefinition, inputs, definitionIdentity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><span data-ttu-id="ff685-133">工作流定义。</span><span class="sxs-lookup"><span data-stu-id="ff685-133">The workflow definition.</span></span></param>
        <param name="inputs"><span data-ttu-id="ff685-134">定义标识。</span><span class="sxs-lookup"><span data-stu-id="ff685-134">The definition identity.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="ff685-135">在工作流定义的根活动上定义的自变量的值，由自变量名称键控。</span><span class="sxs-lookup"><span data-stu-id="ff685-135">The values for arguments defined on the root activity of the workflow definition, keyed by argument name.</span></span></param>
        <summary><span data-ttu-id="ff685-136">使用指定的工作流定义、参数值以及定义标识创建 <see cref="T:System.Activities.WorkflowApplication" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-136">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class that uses the specified workflow definition and argument values, and definition identity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Abort">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-137">通知工作流运行时应中止此工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-137">Notifies the workflow runtime that this workflow instance should abort.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-138">当由 <xref:System.Activities.WorkflowApplication> 承载的工作流中止时，将调用 <xref:System.Activities.WorkflowApplication.Aborted%2A> 处理程序，而不调用 <xref:System.Activities.WorkflowApplication.Completed%2A> 处理程序。</span><span class="sxs-lookup"><span data-stu-id="ff685-138">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="override this.Abort : unit -&gt; unit" Usage="workflowApplication.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ff685-139">通知工作流运行时应中止此工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-139">Notifies the workflow runtime that this workflow instance should abort.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-140">当由 <xref:System.Activities.WorkflowApplication> 承载的工作流中止时，将调用 <xref:System.Activities.WorkflowApplication.Aborted%2A> 处理程序，而不调用 <xref:System.Activities.WorkflowApplication.Completed%2A> 处理程序。</span><span class="sxs-lookup"><span data-stu-id="ff685-140">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-141">下面的示例使用 <xref:System.Activities.WorkflowApplication> 承载一个工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-141">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ff685-142">该示例使用指定的工作流定义构造 <xref:System.Activities.WorkflowApplication>，处理所需的工作流生命周期事件，并通过调用 <xref:System.Activities.WorkflowApplication.Run%2A> 来调用工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-142">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ff685-143">启动工作流之后，将调用 <xref:System.Activities.WorkflowApplication.Abort%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-143">After the workflow is started, <xref:System.Activities.WorkflowApplication.Abort%2A> is called.</span></span> <span data-ttu-id="ff685-144">中止工作流时，会向控制台显示以下输出。</span><span class="sxs-lookup"><span data-stu-id="ff685-144">When the workflow is aborted, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 3b76d562-516a-4a52-b17c-0f2ce531ad93 Idle.   
Workflow 3b76d562-516a-4a52-b17c-0f2ce531ad93 Aborted  
Exception: System.Activities.WorkflowApplicationAbortedException  
The workflow has been aborted.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#11](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort (string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Abort(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort (reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort(System::String ^ reason);" />
      <MemberSignature Language="F#" Value="override this.Abort : string -&gt; unit" Usage="workflowApplication.Abort reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="ff685-145">请求中止的原因。</span><span class="sxs-lookup"><span data-stu-id="ff685-145">The reason for the request to abort.</span></span></param>
        <summary><span data-ttu-id="ff685-146">通知工作流运行时由于特定原因应中止此工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-146">Notifies the workflow runtime that this workflow instance should abort for the specified reason.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-147">当由 <xref:System.Activities.WorkflowApplication> 承载的工作流中止时，将调用 <xref:System.Activities.WorkflowApplication.Aborted%2A> 处理程序，而不调用 <xref:System.Activities.WorkflowApplication.Completed%2A> 处理程序。</span><span class="sxs-lookup"><span data-stu-id="ff685-147">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-148">下面的示例使用 <xref:System.Activities.WorkflowApplication> 承载一个工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-148">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ff685-149">该示例使用指定的工作流定义构造 <xref:System.Activities.WorkflowApplication>，处理所需的工作流生命周期事件，并通过调用 <xref:System.Activities.WorkflowApplication.Run%2A> 来调用工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-149">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ff685-150">启动工作流之后，将调用 <xref:System.Activities.WorkflowApplication.Abort%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-150">After the workflow is started, <xref:System.Activities.WorkflowApplication.Abort%2A> is called.</span></span> <span data-ttu-id="ff685-151">中止工作流时，会向控制台显示以下输出。</span><span class="sxs-lookup"><span data-stu-id="ff685-151">When the workflow is aborted, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 607b042e-98db-4bbe-abe8-f4d750feec41 Idle.   
Workflow 607b042e-98db-4bbe-abe8-f4d750feec41 Aborted  
Exception: System.Activities.WorkflowApplicationAbortedException  
The reason for aborting the workflow.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#11](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aborted">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationAbortedEventArgs&gt; Aborted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationAbortedEventArgs&gt; Aborted" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Aborted" />
      <MemberSignature Language="VB.NET" Value="Public Property Aborted As Action(Of WorkflowApplicationAbortedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ Aborted { Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Aborted : Action&lt;System.Activities.WorkflowApplicationAbortedEventArgs&gt; with get, set" Usage="System.Activities.WorkflowApplication.Aborted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationAbortedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff685-152">获取或设置中止工作流实例时调用的 <see cref="T:System.Action`1" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-152">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the workflow instance is aborted.</span></span></summary>
        <value><span data-ttu-id="ff685-153">中止工作流实例时调用的操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-153">The action that is invoked when the workflow instance is aborted.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-154">当由 <xref:System.Activities.WorkflowApplication> 承载的工作流中止时，将调用 <xref:System.Activities.WorkflowApplication.Aborted%2A> 处理程序，而不调用 <xref:System.Activities.WorkflowApplication.Completed%2A> 处理程序。</span><span class="sxs-lookup"><span data-stu-id="ff685-154">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-155">下面的代码示例检查传递给 <xref:System.Activities.WorkflowApplicationAbortedEventArgs> 实例的 <xref:System.Activities.WorkflowApplication.Aborted%2A> 处理程序的 <xref:System.Activities.WorkflowApplication>，并显示有关工作流中止原因的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-155">The following code example inspects the <xref:System.Activities.WorkflowApplicationAbortedEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays information about why workflow was aborted.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#5](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInitialInstanceValues">
      <MemberSignature Language="C#" Value="public void AddInitialInstanceValues (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddInitialInstanceValues(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; writeOnlyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddInitialInstanceValues (writeOnlyValues As IDictionary(Of XName, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddInitialInstanceValues(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ writeOnlyValues);" />
      <MemberSignature Language="F#" Value="member this.AddInitialInstanceValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; unit" Usage="workflowApplication.AddInitialInstanceValues writeOnlyValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="writeOnlyValues"><span data-ttu-id="ff685-156">要与首个保留内容一起包含的元数据值。</span><span class="sxs-lookup"><span data-stu-id="ff685-156">The metadata values to be included with the first persistence.</span></span></param>
        <summary><span data-ttu-id="ff685-157">指定与新实例的首个保留内容一起包含的实例元数据值。</span><span class="sxs-lookup"><span data-stu-id="ff685-157">Specifies instance metadata values that are included with the first persistence of a new instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCancel">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-158">使用 <see cref="T:System.IAsyncResult" /> 异步设计模式以异步方式取消工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-158">Cancels a workflow asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-159">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-159">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancel (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancel(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCancel (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCancel(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginCancel : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginCancel (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="ff685-160">要在取消操作完成时调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-160">The method to be called when the cancel operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-161">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-161">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-162">使用指定的 <see cref="T:System.AsyncCallback" /> 和用户提供的状态以异步方式取消工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-162">Cancels a workflow instance asynchronously using the specified <see cref="T:System.AsyncCallback" /> and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ff685-163">对异步取消操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-163">A reference to the asynchronous cancel operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-164">若要确定取消操作是否成功，请调用 <xref:System.Activities.WorkflowApplication.EndCancel%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-164">To determine whether the cancel operation was successful, call <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span> <span data-ttu-id="ff685-165">可以从 <xref:System.Activities.WorkflowApplication.EndCancel%2A> 方法的内部或外部调用 `callback`。</span><span class="sxs-lookup"><span data-stu-id="ff685-165"><xref:System.Activities.WorkflowApplication.EndCancel%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="ff685-166">如果在取消操作完成前调用 <xref:System.Activities.WorkflowApplication.EndCancel%2A>，则此调用将会被阻止，直至取消操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-166">If <xref:System.Activities.WorkflowApplication.EndCancel%2A> is called before the cancel operation completes, it blocks until the cancel operation completes.</span></span> <span data-ttu-id="ff685-167">默认情况下，取消操作必须在 30 秒内完成，否则将在 <xref:System.TimeoutException> 中引发 <xref:System.Activities.WorkflowApplication.EndCancel%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-167">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span>  
  
 <span data-ttu-id="ff685-168">此方法使用 <xref:System.IAsyncResult> 异步设计模式以异步方式取消工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-168">This method cancels a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-169">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-169">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCancel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCancel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginCancel : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginCancel (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ff685-170">必须在此时间内完成取消操作的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-170">The interval in which the cancel operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-171">要在取消操作完成时调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-171">The method to be called when the cancel operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-172">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-172">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-173">使用指定的超时间隔、<see cref="T:System.AsyncCallback" /> 和用户提供的状态以异步方式取消工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-173">Cancels a workflow instance asynchronously using the specified time-out interval, <see cref="T:System.AsyncCallback" />, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ff685-174">对异步取消操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-174">A reference to the asynchronous cancel operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-175">若要确定取消操作是否成功，请调用 <xref:System.Activities.WorkflowApplication.EndCancel%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-175">To determine whether the cancel operation was successful, call <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span> <span data-ttu-id="ff685-176"><xref:System.Activities.WorkflowApplication.EndCancel%2A> 可以从参数中指定的方法的内部或外部调用 `callback` 。</span><span class="sxs-lookup"><span data-stu-id="ff685-176"><xref:System.Activities.WorkflowApplication.EndCancel%2A> can be called from inside or outside of the method specified in the `callback` parameter.</span></span> <span data-ttu-id="ff685-177">如果在取消操作完成前调用 <xref:System.Activities.WorkflowApplication.EndCancel%2A>，则此调用将会被阻止，直至取消操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-177">If <xref:System.Activities.WorkflowApplication.EndCancel%2A> is called before the cancel operation completes, it blocks until the cancel operation completes.</span></span> <span data-ttu-id="ff685-178">如果在 `timeOut` 参数指定的时间间隔内未完成取消操作，则将在 <xref:System.TimeoutException> 中引发 <xref:System.Activities.WorkflowApplication.EndCancel%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-178">If the cancel operation does not complete in the interval specified by the `timeOut` parameter, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span>  
  
 <span data-ttu-id="ff685-179">此方法使用 <xref:System.IAsyncResult> 异步设计模式以异步方式取消工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-179">This method cancels a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-180">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-180">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCreateDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-181">异步使用 <see cref="T:System.IAsyncResult" /> 异步设计模式创建默认实例所有者。</span><span class="sxs-lookup"><span data-stu-id="ff685-181">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginCreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginCreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginCreateDefaultInstanceOwner (instanceStore As InstanceStore, definitionIdentity As WorkflowIdentity, identityFilter As WorkflowIdentityFilter, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginCreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginCreateDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * System.Activities.WorkflowIdentity * System.Activities.WorkflowIdentityFilter * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner (instanceStore, definitionIdentity, identityFilter, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ff685-182">对工作流应用程序的当前实例保留状态的访问。</span><span class="sxs-lookup"><span data-stu-id="ff685-182">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="ff685-183">定义标识。</span><span class="sxs-lookup"><span data-stu-id="ff685-183">The definition identity.</span></span></param>
        <param name="identityFilter"><span data-ttu-id="ff685-184">标识筛选器。</span><span class="sxs-lookup"><span data-stu-id="ff685-184">The identity filter.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-185">要在开始加载操作完成后调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-185">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-186">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-186">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-187">异步使用带指定实例存储、定义标识、标识筛选器、回拨和状态的 <see cref="T:System.IAsyncResult" /> 异步设计模型创建默认实例所有者。</span><span class="sxs-lookup"><span data-stu-id="ff685-187">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, definition identity, identity filter, callback and state.</span></span></summary>
        <returns><span data-ttu-id="ff685-188">对异步操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-188">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginCreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginCreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginCreateDefaultInstanceOwner (instanceStore As InstanceStore, definitionIdentity As WorkflowIdentity, identityFilter As WorkflowIdentityFilter, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginCreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginCreateDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * System.Activities.WorkflowIdentity * System.Activities.WorkflowIdentityFilter * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner (instanceStore, definitionIdentity, identityFilter, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ff685-189">对工作流应用程序的当前实例保留状态的访问。</span><span class="sxs-lookup"><span data-stu-id="ff685-189">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="ff685-190">定义标识。</span><span class="sxs-lookup"><span data-stu-id="ff685-190">The definition identity.</span></span></param>
        <param name="identityFilter"><span data-ttu-id="ff685-191">标识筛选器。</span><span class="sxs-lookup"><span data-stu-id="ff685-191">The identity filter.</span></span></param>
        <param name="timeout"><span data-ttu-id="ff685-192">必须在此时间内完成开始加载操作的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-192">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-193">要在开始加载操作完成后调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-193">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-194">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-194">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-195">异步使用带指定实例存储、定义标识、标识筛选器、超时间隔、回拨和状态的 <see cref="T:System.IAsyncResult" /> 异步设计模型创建默认实例所有者。</span><span class="sxs-lookup"><span data-stu-id="ff685-195">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, definition identity, identity filter, timeout interval, callback and state.</span></span></summary>
        <returns><span data-ttu-id="ff685-196">对异步操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-196">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginDeleteDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-197">异步删除一个默认实例所有者，通过使用 <see cref="T:System.IAsyncResult" /> 异步设计模式。</span><span class="sxs-lookup"><span data-stu-id="ff685-197">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginDeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginDeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginDeleteDefaultInstanceOwner (instanceStore As InstanceStore, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginDeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginDeleteDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner (instanceStore, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ff685-198">对工作流应用程序的当前实例保留状态的访问。</span><span class="sxs-lookup"><span data-stu-id="ff685-198">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-199">要在开始加载操作完成后调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-199">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-200">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-200">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-201">异步使用带指定实例存储区、回调和状态的 <see cref="T:System.IAsyncResult" /> 异步设计模型检索可运行的实例所有者。</span><span class="sxs-lookup"><span data-stu-id="ff685-201">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="ff685-202">对异步操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-202">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginDeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginDeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginDeleteDefaultInstanceOwner (instanceStore As InstanceStore, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginDeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginDeleteDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner (instanceStore, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ff685-203">对工作流应用程序的当前实例保留状态的访问。</span><span class="sxs-lookup"><span data-stu-id="ff685-203">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="timeout"><span data-ttu-id="ff685-204">必须在此时间内完成开始加载操作的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-204">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-205">要在开始加载操作完成后调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-205">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-206">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-206">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-207">异步使用带指定实例存储区、超时间隔、回调和状态的 <see cref="T:System.IAsyncResult" /> 异步设计模型删除默认实例的所有者。</span><span class="sxs-lookup"><span data-stu-id="ff685-207">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, timeout interval, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="ff685-208">对异步操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-208">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-209">使用 <see cref="T:System.IAsyncResult" /> 异步设计模式异步检索实例所有者。</span><span class="sxs-lookup"><span data-stu-id="ff685-209">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetInstance (instanceId As Guid, instanceStore As InstanceStore, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetInstance : Guid * System.Runtime.DurableInstancing.InstanceStore * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginGetInstance (instanceId, instanceStore, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="ff685-210">实例标识符。</span><span class="sxs-lookup"><span data-stu-id="ff685-210">The instance identifier.</span></span></param>
        <param name="instanceStore"><span data-ttu-id="ff685-211">对工作流应用程序的当前实例保留状态的访问。</span><span class="sxs-lookup"><span data-stu-id="ff685-211">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-212">要在开始加载操作完成后调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-212">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-213">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-213">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-214">使用带指定的实例标识符、实例存储区、回调和状态的 <see cref="T:System.IAsyncResult" /> 异步设计模式异步检索实例所有者。</span><span class="sxs-lookup"><span data-stu-id="ff685-214">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance identifier, instance store, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="ff685-215">对异步操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-215">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetInstance (instanceId As Guid, instanceStore As InstanceStore, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetInstance : Guid * System.Runtime.DurableInstancing.InstanceStore * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginGetInstance (instanceId, instanceStore, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="ff685-216">实例标识符。</span><span class="sxs-lookup"><span data-stu-id="ff685-216">The instance identifier.</span></span></param>
        <param name="instanceStore"><span data-ttu-id="ff685-217">对工作流应用程序的当前实例保留状态的访问。</span><span class="sxs-lookup"><span data-stu-id="ff685-217">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="timeout"><span data-ttu-id="ff685-218">必须在此时间内完成开始加载操作的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-218">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-219">要在开始加载操作完成后调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-219">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-220">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-220">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-221">使用带指定的实例标识符、实例存储区、超时间隔、回调和状态的 <see cref="T:System.IAsyncResult" /> 异步设计模式异步检索实例所有者。</span><span class="sxs-lookup"><span data-stu-id="ff685-221">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance identifier, instance store, timeout interval, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="ff685-222">对异步操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-222">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-223">异步使用 <see cref="T:System.IAsyncResult" /> 异步设计模型检索可运行的实例所有者。</span><span class="sxs-lookup"><span data-stu-id="ff685-223">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetRunnableInstance (instanceStore As InstanceStore, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetRunnableInstance : System.Runtime.DurableInstancing.InstanceStore * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginGetRunnableInstance (instanceStore, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ff685-224">对工作流应用程序的当前实例保留状态的访问。</span><span class="sxs-lookup"><span data-stu-id="ff685-224">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-225">要在开始加载操作完成后调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-225">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-226">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-226">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-227">异步使用带指定实例存储区、回调和状态的 <see cref="T:System.IAsyncResult" /> 异步设计模型检索可运行的实例所有者。</span><span class="sxs-lookup"><span data-stu-id="ff685-227">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="ff685-228">对异步操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-228">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetRunnableInstance (instanceStore As InstanceStore, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetRunnableInstance : System.Runtime.DurableInstancing.InstanceStore * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Activities.WorkflowApplication.BeginGetRunnableInstance (instanceStore, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ff685-229">对工作流应用程序的当前实例保留状态的访问。</span><span class="sxs-lookup"><span data-stu-id="ff685-229">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="timeout"><span data-ttu-id="ff685-230">必须在此时间内完成开始加载操作的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-230">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-231">要在开始加载操作完成后调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-231">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-232">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-232">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-233">异步使用带指定实例存储区、超时间隔、回调和状态的 <see cref="T:System.IAsyncResult" /> 异步设计模型检索可运行的实例所有者。</span><span class="sxs-lookup"><span data-stu-id="ff685-233">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, timeout interval, callback, and state.</span></span></summary>
        <returns><span data-ttu-id="ff685-234">对异步操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-234">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoad">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-235">使用 <see cref="T:System.IAsyncResult" /> 异步设计模式以异步方式从实例存储区中加载工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-235">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-236">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-236">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : System.Activities.WorkflowApplicationInstance * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instance, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="ff685-237">实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-237">The instance.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-238">要在开始加载操作完成后调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-238">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-239">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-239">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-240">使用带指定实例、回调和状态的 <see cref="T:System.IAsyncResult" /> 异步设计模型从实例存储区中异步加载工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-240">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, callback and state.</span></span></summary>
        <returns><span data-ttu-id="ff685-241">对异步操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-241">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (Guid instanceId, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(valuetype System.Guid instanceId, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instanceId As Guid, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(Guid instanceId, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : Guid * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instanceId, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="ff685-242">工作流实例的全局唯一标识符（128 位）。</span><span class="sxs-lookup"><span data-stu-id="ff685-242">A globally unique 128-bit identifier for the workflow instance.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-243">要在开始加载操作完成后调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-243">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-244">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-244">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-245">使用指定的实例标识符、回调方法和用户提供的状态以异步方式从实例存储区中加载工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-245">Loads a workflow asynchronously from an instance store using the specified instance identifier, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ff685-246">异步操作的状态。</span><span class="sxs-lookup"><span data-stu-id="ff685-246">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : System.Activities.WorkflowApplicationInstance * System.Activities.DynamicUpdate.DynamicUpdateMap * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instance, updateMap, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="ff685-247">实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-247">The instance.</span></span></param>
        <param name="updateMap"><span data-ttu-id="ff685-248">更新映射。</span><span class="sxs-lookup"><span data-stu-id="ff685-248">The update map.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-249">要在开始加载操作完成后调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-249">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-250">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-250">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-251">使用带指定实例、更新映射、回调和状态的 <see cref="T:System.IAsyncResult" /> 异步设计模型从实例存储区中异步加载工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-251">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, update map, callback and state.</span></span></summary>
        <returns><span data-ttu-id="ff685-252">对异步操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-252">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : System.Activities.WorkflowApplicationInstance * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="ff685-253">实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-253">The instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="ff685-254">必须在此时间内完成开始加载操作的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-254">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-255">要在开始加载操作完成后调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-255">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-256">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-256">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-257">使用带指定实例、超时间隔、回调和状态的 <see cref="T:System.IAsyncResult" /> 异步设计模型从实例存储区中异步加载工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-257">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, timeout interval, callback and state.</span></span></summary>
        <returns><span data-ttu-id="ff685-258">对异步操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-258">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (Guid instanceId, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(valuetype System.Guid instanceId, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instanceId As Guid, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(Guid instanceId, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : Guid * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instanceId, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="ff685-259">工作流实例的全局唯一标识符（128 位）。</span><span class="sxs-lookup"><span data-stu-id="ff685-259">A globally unique 128-bit identifier for the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="ff685-260">必须在此时间内完成开始加载操作的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-260">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-261">要在开始加载操作完成后调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-261">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-262">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-262">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-263">使用指定的实例标识符、超时期限、回调方法和用户提供的状态以异步方式从实例存储区中加载工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-263">Loads a workflow asynchronously from an instance store using the specified instance identifier, timeout period, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ff685-264">异步操作的状态。</span><span class="sxs-lookup"><span data-stu-id="ff685-264">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : System.Activities.WorkflowApplicationInstance * System.Activities.DynamicUpdate.DynamicUpdateMap * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoad (instance, updateMap, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="ff685-265">实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-265">The instance.</span></span></param>
        <param name="updateMap"><span data-ttu-id="ff685-266">更新映射。</span><span class="sxs-lookup"><span data-stu-id="ff685-266">The update map.</span></span></param>
        <param name="timeout"><span data-ttu-id="ff685-267">必须在此时间内完成开始加载操作的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-267">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-268">要在开始加载操作完成后调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-268">The method to be called when the begin load operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-269">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-269">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-270">使用带指定实例、更新映射、超时间隔、回调和状态的 <see cref="T:System.IAsyncResult" /> 异步设计模型从实例存储区中异步加载工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-270">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, update map, timeout interval, callback and state.</span></span></summary>
        <returns><span data-ttu-id="ff685-271">对异步操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-271">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoadRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-272">启动从 <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> 中加载可运行工作流实例的异步进程。</span><span class="sxs-lookup"><span data-stu-id="ff685-272">Initiates the asynchronous process of loading a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-273">可运行实例是指计时器或实例锁已过期的实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-273">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadRunnableInstance (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadRunnableInstance(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadRunnableInstance (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadRunnableInstance(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadRunnableInstance : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoadRunnableInstance (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="ff685-274">操作完成后要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-274">The method to be called when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-275">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-275">An optional application-specific object containing information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-276">启动一项操作，从 <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> 中加载可运行工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-276">Initiates an operation to load a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span></span></summary>
        <returns><span data-ttu-id="ff685-277">对异步操作的引用</span><span class="sxs-lookup"><span data-stu-id="ff685-277">A reference to the asynchronous operation</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-278">可运行实例是指计时器或实例锁已过期的实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-278">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="ff685-279">若要确定加载操作是否成功，请调用 <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-279">To determine if the load operation was successful, call <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span> <span data-ttu-id="ff685-280">可以从 <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> 方法的内部或外部调用 `callback`。</span><span class="sxs-lookup"><span data-stu-id="ff685-280"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="ff685-281">如果在恢复操作完成前调用 <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>，则此调用将会被阻止，直至恢复操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-281">If <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="ff685-282">默认情况下，恢复操作必须在 30 秒内完成，否则将在 <xref:System.TimeoutException> 中引发 <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-282">By default, the resume operation must complete in 30 seconds or else a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span>  
  
 <span data-ttu-id="ff685-283">此方法使用 <xref:System.IAsyncResult> 异步设计模式以异步方式加载工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-283">This method loads a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-284">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-284">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadRunnableInstance (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadRunnableInstance(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadRunnableInstance (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadRunnableInstance(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadRunnableInstance : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginLoadRunnableInstance (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ff685-285">必须在此时间内完成加载操作的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-285">The interval in which the load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-286">操作完成后要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-286">The method to be called when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-287">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-287">An optional application-specific object containing information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-288">使用指定的超时间隔启动操作，以从 <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> 加载可运行的工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-288">Initiates an operation to load a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> using the specified time-out interval.</span></span></summary>
        <returns><span data-ttu-id="ff685-289">对异步操作的引用</span><span class="sxs-lookup"><span data-stu-id="ff685-289">A reference to the asynchronous operation</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-290">可运行实例是指计时器或实例锁已过期的实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-290">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="ff685-291">若要确定加载操作是否成功，请调用 <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-291">To determine if the load operation was successful, call <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span> <span data-ttu-id="ff685-292">可以从 <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> 方法的内部或外部调用 `callback`。</span><span class="sxs-lookup"><span data-stu-id="ff685-292"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="ff685-293">如果在恢复操作完成前调用 <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>，则此调用将会被阻止，直至恢复操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-293">If <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="ff685-294">如果加载操作未在指定的超时间隔内完成，则将在 <xref:System.TimeoutException> 中引发 <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-294">If the load operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span>  
  
 <span data-ttu-id="ff685-295">此方法使用 <xref:System.IAsyncResult> 异步设计模式以异步方式加载工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-295">This method loads a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-296">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-296">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginPersist">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-297">使用 <see cref="T:System.IAsyncResult" /> 异步设计模式将工作流实例以异步方式保留到实例存储区中。</span><span class="sxs-lookup"><span data-stu-id="ff685-297">Persists a workflow instance to an instance store asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-298">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-298">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 <span data-ttu-id="ff685-299">如果工作流实例以前是从保留结果加载的，则用于加载工作流的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 将用于保留结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-299">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ff685-300">如果工作流已创建但未保留，则在调用此方法之前必须配置 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否则，在调用此方法时将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-300">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginPersist">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginPersist : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginPersist (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="ff685-301">要在保留操作完成时调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-301">The method to be called when the persist operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-302">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-302">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-303">使用指定的回调方法和用户提供的状态将工作流实例以异步方式保留到实例存储区中。</span><span class="sxs-lookup"><span data-stu-id="ff685-303">Persists a workflow instance to an instance store asynchronously using the specified callback method and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ff685-304">对异步保留操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-304">A reference to the asynchronous persist operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-305">若要确定保留操作是否成功，请调用 <xref:System.Activities.WorkflowApplication.EndPersist%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-305">To determine whether the persist operation was successful, call <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span> <span data-ttu-id="ff685-306">可以从 <xref:System.Activities.WorkflowApplication.EndPersist%2A> 参数中引用的方法的内部或外部调用 `callback`。</span><span class="sxs-lookup"><span data-stu-id="ff685-306"><xref:System.Activities.WorkflowApplication.EndPersist%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="ff685-307">如果在保留操作完成前调用 <xref:System.Activities.WorkflowApplication.EndPersist%2A>，则此调用将会被阻止，直至保留操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-307">If <xref:System.Activities.WorkflowApplication.EndPersist%2A> is called before the persist operation completes, it blocks until the persist operation completes.</span></span> <span data-ttu-id="ff685-308">如果保留操作未在 30 秒内完成，则将在 <xref:System.TimeoutException> 中引发 <xref:System.Activities.WorkflowApplication.EndPersist%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-308">If the persist operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span>  
  
 <span data-ttu-id="ff685-309">如果工作流实例以前是从保留结果加载的，则用于加载工作流的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 将用于保留结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-309">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ff685-310">如果工作流已创建但未保留，则在调用此方法之前必须配置 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否则，在调用此方法时将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-310">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="ff685-311">此方法使用 <xref:System.IAsyncResult> 异步设计模式以异步方式保留工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-311">This method persists a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-312">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-312">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPersist">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPersist (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPersist(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPersist (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPersist(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginPersist : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginPersist (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ff685-313">必须在此时间内完成保留操作的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-313">The interval in which the persist operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-314">要在保留操作完成时调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-314">The method to be called when the persist operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-315">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-315">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-316">使用指定的超时间隔、回调方法和用户提供的状态将工作流实例以异步方式保留到实例存储区中。</span><span class="sxs-lookup"><span data-stu-id="ff685-316">Persists a workflow instance to an instance store asynchronously using the specified time-out interval, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ff685-317">对异步保留操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-317">A reference to the asynchronous persist operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-318">若要确定保留操作是否成功，请调用 <xref:System.Activities.WorkflowApplication.EndPersist%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-318">To determine whether the persist operation was successful, call <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span> <span data-ttu-id="ff685-319">可以从 <xref:System.Activities.WorkflowApplication.EndPersist%2A> 参数中引用的方法的内部或外部调用 `callback`。</span><span class="sxs-lookup"><span data-stu-id="ff685-319"><xref:System.Activities.WorkflowApplication.EndPersist%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="ff685-320">如果在保留操作完成前调用 <xref:System.Activities.WorkflowApplication.EndPersist%2A>，则此调用将会被阻止，直至保留操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-320">If <xref:System.Activities.WorkflowApplication.EndPersist%2A> is called before the persist operation completes, it blocks until the persist operation completes.</span></span> <span data-ttu-id="ff685-321">如果保留操作未在指定的超时间隔内完成，则将在 <xref:System.TimeoutException> 中引发 <xref:System.Activities.WorkflowApplication.EndPersist%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-321">If the persist operation does not complete within the specified time-out interval, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span>  
  
 <span data-ttu-id="ff685-322">如果工作流实例以前是从保留结果加载的，则用于加载工作流的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 将用于保留结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-322">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ff685-323">如果工作流已创建但未保留，则在调用此方法之前必须配置 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否则，在调用此方法时将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-323">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="ff685-324">此方法使用 <xref:System.IAsyncResult> 异步设计模式以异步方式保留工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-324">This method persists a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-325">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-325">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginResumeBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-326">启动异步操作以恢复书签。</span><span class="sxs-lookup"><span data-stu-id="ff685-326">Initiates an asynchronous operation to resume a bookmark.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (System.Activities.Bookmark bookmark, object value, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginResumeBookmark (bookmark As Bookmark, value As Object, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginResumeBookmark : System.Activities.Bookmark * obj * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginResumeBookmark (bookmark, value, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark"><span data-ttu-id="ff685-327">要恢复的书签。</span><span class="sxs-lookup"><span data-stu-id="ff685-327">The bookmark to resume.</span></span></param>
        <param name="value"><span data-ttu-id="ff685-328">作为参数传递给书签恢复时所调用的方法的对象。</span><span class="sxs-lookup"><span data-stu-id="ff685-328">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-329">要在恢复操作完成后调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-329">The method to be called when the resume operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-330">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-330">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-331">使用指定的值、回调方法和状态启动操作以恢复书签。</span><span class="sxs-lookup"><span data-stu-id="ff685-331">Initiates an operation to resume a bookmark using the specified value, callback method, and state.</span></span></summary>
        <returns><span data-ttu-id="ff685-332">对异步书签恢复操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-332">A reference to the asynchronous bookmark resume operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-333">若要确定恢复操作是否成功，请调用 <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-333">To determine if the resume operation was successful, call <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span> <span data-ttu-id="ff685-334">可以从 <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> 方法的内部或外部调用 `callback`。</span><span class="sxs-lookup"><span data-stu-id="ff685-334"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="ff685-335">如果在恢复操作完成前调用 <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>，则此调用将会被阻止，直至恢复操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-335">If <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="ff685-336">默认情况下，恢复操作必须在 30 秒内完成，否则将在 <xref:System.TimeoutException> 中引发 <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-336">By default, the resume operation must complete in 30 seconds or else a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span>  
  
 <span data-ttu-id="ff685-337">此方法使用 <xref:System.IAsyncResult> 异步设计模式以异步方式恢复书签。</span><span class="sxs-lookup"><span data-stu-id="ff685-337">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-338">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-338">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (string bookmarkName, object value, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(string bookmarkName, object value, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginResumeBookmark (bookmarkName As String, value As Object, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginResumeBookmark : string * obj * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginResumeBookmark (bookmarkName, value, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName"><span data-ttu-id="ff685-339">要恢复的书签的名称。</span><span class="sxs-lookup"><span data-stu-id="ff685-339">The name of the bookmark to be resumed.</span></span></param>
        <param name="value"><span data-ttu-id="ff685-340">作为参数传递给书签恢复时所调用的方法的对象。</span><span class="sxs-lookup"><span data-stu-id="ff685-340">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-341">异步操作完成后调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-341">The method that is called when the asynchronous operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-342">异步操作开始前由调用线程保留的工作流的执行状态。</span><span class="sxs-lookup"><span data-stu-id="ff685-342">The state of execution of a workflow that was preserved by the calling thread before an asynchronous operation began.</span></span></param>
        <summary><span data-ttu-id="ff685-343">使用指定的值、回调方法和状态启动异步操作以恢复具有指定名称的书签。</span><span class="sxs-lookup"><span data-stu-id="ff685-343">Initiates an asynchronous operation to resume the bookmark with the specified name, using the specified value, callback method, and state.</span></span> <span data-ttu-id="ff685-344">要恢复的书签是此前由工作流实例内的活动创建的。</span><span class="sxs-lookup"><span data-stu-id="ff685-344">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="ff685-345">书签恢复操作的结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-345">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-346">书签结果指示恢复操作是成功还是失败。</span><span class="sxs-lookup"><span data-stu-id="ff685-346">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginResumeBookmark (bookmark As Bookmark, value As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginResumeBookmark : System.Activities.Bookmark * obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginResumeBookmark (bookmark, value, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark"><span data-ttu-id="ff685-347">要恢复的书签。</span><span class="sxs-lookup"><span data-stu-id="ff685-347">The bookmark to resume.</span></span></param>
        <param name="value"><span data-ttu-id="ff685-348">作为参数传递给书签恢复时所调用的方法的对象。</span><span class="sxs-lookup"><span data-stu-id="ff685-348">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="timeout"><span data-ttu-id="ff685-349">必须在此时间内完成恢复操作的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-349">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-350">要在恢复操作完成后调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-350">The method to be called when the resume operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-351">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-351">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-352">使用指定的值、超时间隔、回调方法和状态启动操作以恢复书签。</span><span class="sxs-lookup"><span data-stu-id="ff685-352">Initiates an operation to resume a bookmark using the specified value, time-out interval, callback method, and state.</span></span></summary>
        <returns><span data-ttu-id="ff685-353">对异步书签恢复操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-353">A reference to the asynchronous bookmark resume operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-354">若要确定恢复操作是否成功，请调用 <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-354">To determine if the resume operation was successful, call <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span> <span data-ttu-id="ff685-355">可以从 <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> 方法的内部或外部调用 `callback`。</span><span class="sxs-lookup"><span data-stu-id="ff685-355"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="ff685-356">如果在恢复操作完成前调用 <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>，则此调用将会被阻止，直至恢复操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-356">If <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="ff685-357">如果恢复操作未在指定的超时间隔内完成，则将在 <xref:System.TimeoutException> 中引发 <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-357">If the resume operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span>  
  
 <span data-ttu-id="ff685-358">此方法使用 <xref:System.IAsyncResult> 异步设计模式以异步方式恢复书签。</span><span class="sxs-lookup"><span data-stu-id="ff685-358">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-359">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-359">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (string bookmarkName, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(string bookmarkName, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginResumeBookmark (bookmarkName As String, value As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginResumeBookmark : string * obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginResumeBookmark (bookmarkName, value, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName"><span data-ttu-id="ff685-360">要恢复的书签的名称。</span><span class="sxs-lookup"><span data-stu-id="ff685-360">The name of the bookmark to be resumed.</span></span></param>
        <param name="value"><span data-ttu-id="ff685-361">作为参数传递给书签恢复时所调用的方法的对象。</span><span class="sxs-lookup"><span data-stu-id="ff685-361">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="timeout"><span data-ttu-id="ff685-362">必须在此期间恢复书签的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="ff685-362">The time interval during which the bookmark must be resumed.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-363">异步操作完成后调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-363">The method that is called when the asynchronous operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-364">异步操作开始前由调用线程保存的工作流的执行状态。</span><span class="sxs-lookup"><span data-stu-id="ff685-364">The state of execution of a workflow that was saved by the calling thread before an asynchronous operation began.</span></span></param>
        <summary><span data-ttu-id="ff685-365">使用指定的值、超时间隔、回调方法和状态启动异步操作以恢复具有指定名称的书签。</span><span class="sxs-lookup"><span data-stu-id="ff685-365">Initiates an asynchronous operation to resume the bookmark with the specified name, using the specified value, time-out interval, callback method, and state.</span></span> <span data-ttu-id="ff685-366">要恢复的书签是此前由工作流实例内的活动创建的。</span><span class="sxs-lookup"><span data-stu-id="ff685-366">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="ff685-367">书签恢复操作的结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-367">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-368">书签结果指示恢复操作是成功还是失败。</span><span class="sxs-lookup"><span data-stu-id="ff685-368">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginRun">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-369">使用 <see cref="T:System.IAsyncResult" /> 异步设计模式以异步方式启动或恢复工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-369">Starts or resumes a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-370">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-370">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginRun">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRun (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRun(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRun (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRun(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginRun : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginRun (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="ff685-371">要在恢复操作完成后调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-371">The method to be called when the resume operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-372">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-372">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-373">使用指定的回调方法和用户提供的状态以异步方式启动或恢复工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-373">Starts or resumes a workflow instance asynchronously using the specified callback method and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ff685-374">对异步运行操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-374">A reference to the asynchronous run operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-375">若要确定运行操作是否成功，请调用 <xref:System.Activities.WorkflowApplication.EndRun%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-375">To determine whether the run operation was successful, call <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span> <span data-ttu-id="ff685-376">可以从 <xref:System.Activities.WorkflowApplication.EndRun%2A> 参数中引用的方法的内部或外部调用 `callback`。</span><span class="sxs-lookup"><span data-stu-id="ff685-376"><xref:System.Activities.WorkflowApplication.EndRun%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="ff685-377">如果在恢复操作完成前调用 <xref:System.Activities.WorkflowApplication.EndRun%2A>，则此调用将会被阻止，直至恢复操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-377">If <xref:System.Activities.WorkflowApplication.EndRun%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="ff685-378">默认情况下，恢复操作必须在 30 秒内完成，否则将在 <xref:System.TimeoutException> 中引发 <xref:System.Activities.WorkflowApplication.EndRun%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-378">By default, the resume operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span>  
  
 <span data-ttu-id="ff685-379">此方法使用 <xref:System.IAsyncResult> 异步设计模式以异步方式启动或恢复工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-379">This method starts or resumes a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-380">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-380">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRun">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRun (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRun(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRun (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRun(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginRun : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginRun (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ff685-381">必须在此时间内完成恢复操作的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-381">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-382">要在恢复操作完成后调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-382">The method to be called when the resume operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-383">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-383">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-384">使用指定的超时间隔、回调方法和用户提供的状态以异步方式启动或恢复工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-384">Starts or resumes a workflow instance asynchronously using the specified time-out interval, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ff685-385">对异步运行操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-385">A reference to the asynchronous run operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-386">若要确定运行操作是否成功，请调用 <xref:System.Activities.WorkflowApplication.EndRun%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-386">To determine whether the run operation was successful, call <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span> <span data-ttu-id="ff685-387"><xref:System.Activities.WorkflowApplication.EndRun%2A> 可以从参数中的方法引用的内部或外部调用 `callback` 。</span><span class="sxs-lookup"><span data-stu-id="ff685-387"><xref:System.Activities.WorkflowApplication.EndRun%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="ff685-388">如果在恢复操作完成前调用 <xref:System.Activities.WorkflowApplication.EndRun%2A>，则此调用将会被阻止，直至恢复操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-388">If <xref:System.Activities.WorkflowApplication.EndRun%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="ff685-389">如果恢复操作未在指定的超时间隔内完成，则将在 <xref:System.TimeoutException> 中引发 <xref:System.Activities.WorkflowApplication.EndRun%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-389">If the resume operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span>  
  
 <span data-ttu-id="ff685-390">此方法使用 <xref:System.IAsyncResult> 异步设计模式以异步方式启动或恢复工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-390">This method starts or resumes a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-391">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-391">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTerminate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-392">使用 <see cref="T:System.IAsyncResult" /> 异步设计模式以异步方式终止工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-392">Terminates a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-393">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-393">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (Exception reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(class System.Exception reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As Exception, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(Exception ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginTerminate : Exception * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginTerminate (reason, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="ff685-394">终止工作流实例的原因。</span><span class="sxs-lookup"><span data-stu-id="ff685-394">The reason the workflow instance is terminated.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-395">当 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 操作完成后要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-395">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-396">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-396">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-397">使用指定的异常、回调方法和用户提供的状态以异步方式终止工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-397">Terminates a workflow instance asynchronously using the specified exception, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ff685-398">对当前 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-398">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-399">此方法会安排对工作流实例的终止操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-399">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="ff685-400">若要在终止完成后得到通知，请使用 <xref:System.Activities.WorkflowApplication.Completed%2A> 处理程序。</span><span class="sxs-lookup"><span data-stu-id="ff685-400">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="ff685-401">若要确定 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作是否成功，请调用 <xref:System.Activities.WorkflowApplication.EndTerminate%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-401">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="ff685-402">可以从 <xref:System.Activities.WorkflowApplication.EndTerminate%2A> 参数中引用的方法的内部或外部调用 `callback`。</span><span class="sxs-lookup"><span data-stu-id="ff685-402"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="ff685-403">如果在 <xref:System.Activities.WorkflowApplication.EndTerminate%2A> 操作完成前调用 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>，此调用将会被阻止，直至 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-403">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="ff685-404">默认情况下，<xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作必须在 30 秒内完成，否则将在 <xref:System.TimeoutException> 中引发 <xref:System.Activities.WorkflowApplication.EndTerminate%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-404">By default, the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="ff685-405">此方法使用 <xref:System.IAsyncResult> 异步设计模式以异步方式终止工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-405">This method terminates a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-406">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-406">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (string reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(string reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(System::String ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginTerminate : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginTerminate (reason, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="ff685-407">终止工作流实例的原因。</span><span class="sxs-lookup"><span data-stu-id="ff685-407">The reason for terminating the workflow instance.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-408">当 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 操作完成后要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-408">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-409">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-409">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-410">使用指定的错误消息、回调方法和用户提供的状态以异步方式终止工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-410">Terminates a workflow instance asynchronously using the specified error message, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ff685-411">对当前 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-411">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-412">此方法会安排对工作流实例的终止操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-412">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="ff685-413">若要在终止完成后得到通知，请使用 <xref:System.Activities.WorkflowApplication.Completed%2A> 处理程序。</span><span class="sxs-lookup"><span data-stu-id="ff685-413">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="ff685-414">若要确定 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作是否成功，请调用 <xref:System.Activities.WorkflowApplication.EndTerminate%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-414">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="ff685-415"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> 可以从参数中的方法引用的内部或外部调用 `callback` 。</span><span class="sxs-lookup"><span data-stu-id="ff685-415"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="ff685-416">如果在 <xref:System.Activities.WorkflowApplication.EndTerminate%2A> 操作完成前调用 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>，此调用将会被阻止，直至 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-416">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="ff685-417">默认情况下，<xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作必须在 30 秒内完成，否则将在 <xref:System.TimeoutException> 中引发 <xref:System.Activities.WorkflowApplication.EndTerminate%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-417">By default, the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="ff685-418">此方法使用 <xref:System.IAsyncResult> 异步设计模式以异步方式终止工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-418">This method terminates a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-419">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-419">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (Exception reason, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(class System.Exception reason, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As Exception, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(Exception ^ reason, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginTerminate : Exception * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginTerminate (reason, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="ff685-420">终止工作流实例的原因。</span><span class="sxs-lookup"><span data-stu-id="ff685-420">The reason for terminating the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="ff685-421">必须在此时间内完成 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 操作的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-421">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-422">当 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 操作完成后要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-422">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-423">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-423">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-424">使用指定的异常、超时间隔、回调方法和用户提供的状态以异步方式终止工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-424">Terminates a workflow instance asynchronously using the specified exception, time-out interval, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ff685-425">对当前 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-425">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-426">此方法会安排对工作流实例的终止操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-426">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="ff685-427">若要在终止完成后得到通知，请使用 <xref:System.Activities.WorkflowApplication.Completed%2A> 处理程序。</span><span class="sxs-lookup"><span data-stu-id="ff685-427">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="ff685-428">若要确定 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作是否成功，请调用 <xref:System.Activities.WorkflowApplication.EndTerminate%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-428">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="ff685-429">可以从 <xref:System.Activities.WorkflowApplication.EndTerminate%2A> 方法的内部或外部调用 `callback`。</span><span class="sxs-lookup"><span data-stu-id="ff685-429"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="ff685-430">如果在 <xref:System.Activities.WorkflowApplication.EndTerminate%2A> 操作完成前调用 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>，此调用将会被阻止，直至 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-430">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="ff685-431">如果 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作未在指定的超时间隔内完成，则将引发 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-431">If the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown.</span></span> <span data-ttu-id="ff685-432">对于在 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 过程中发生的这一异常或任何其他异常，都将在 <xref:System.Activities.WorkflowApplication.EndTerminate%2A> 中引发。</span><span class="sxs-lookup"><span data-stu-id="ff685-432">This or any other exceptions that occur during the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> process is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="ff685-433">此方法使用 <xref:System.IAsyncResult> 异步设计模式以异步方式终止工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-433">This method terminates a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-434">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-434">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (string reason, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(string reason, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As String, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(System::String ^ reason, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginTerminate : string * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginTerminate (reason, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="ff685-435">终止工作流实例的原因。</span><span class="sxs-lookup"><span data-stu-id="ff685-435">The reason for terminating the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="ff685-436">必须在此时间内完成 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 操作的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-436">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-437">当 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 操作完成后要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-437">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-438">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-438">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-439">使用指定的错误消息、超时间隔、回调方法和用户提供的状态以异步方式终止工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-439">Terminates a workflow instance asynchronously using the specified error message, time-out interval, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ff685-440">对异步 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-440">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-441">此方法会安排对工作流实例的终止操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-441">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="ff685-442">若要在终止完成后得到通知，请使用 <xref:System.Activities.WorkflowApplication.Completed%2A> 处理程序。</span><span class="sxs-lookup"><span data-stu-id="ff685-442">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="ff685-443">若要确定 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作是否成功，请调用 <xref:System.Activities.WorkflowApplication.EndTerminate%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-443">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="ff685-444"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> 可以从参数中的方法引用的内部或外部调用 `callback` 。</span><span class="sxs-lookup"><span data-stu-id="ff685-444"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="ff685-445">如果在 <xref:System.Activities.WorkflowApplication.EndTerminate%2A> 操作完成前调用 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A>，此调用将会被阻止，直至 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-445">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="ff685-446">如果 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作未在指定的超时间隔内完成，则将在 <xref:System.TimeoutException> 中引发 <xref:System.Activities.WorkflowApplication.EndTerminate%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-446">If the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="ff685-447">此方法使用 <xref:System.IAsyncResult> 异步设计模式以异步方式终止工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-447">This method terminates a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-448">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-448">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginUnload">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-449">使用 <see cref="T:System.IAsyncResult" /> 异步设计模式以异步方式保留和释放工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-449">Persists and disposes a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-450">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-450">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 <span data-ttu-id="ff685-451">如果工作流实例以前是从保留结果加载的，则用于加载工作流的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 将用于保留结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-451">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ff685-452">如果工作流已创建但未保留，则在调用此方法之前必须配置 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否则，在调用此方法时将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-452">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginUnload">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginUnload (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginUnload(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginUnload (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginUnload(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginUnload : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginUnload (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="ff685-453">当 <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> 操作完成后要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-453">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-454">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-454">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-455">使用指定的回调方法和用户提供的状态以异步方式保留和释放工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-455">Persists and disposes a workflow instance asynchronously using the specified callback method and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ff685-456">对异步 <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> 操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-456">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-457">若要确定 <xref:System.Activities.WorkflowApplication.BeginUnload%2A> 操作是否成功，请调用 <xref:System.Activities.WorkflowApplication.EndUnload%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-457">To determine whether the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span> <span data-ttu-id="ff685-458"><xref:System.Activities.WorkflowApplication.EndUnload%2A> 可以从参数中的方法引用的内部或外部调用 `callback` 。</span><span class="sxs-lookup"><span data-stu-id="ff685-458"><xref:System.Activities.WorkflowApplication.EndUnload%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="ff685-459">如果在 <xref:System.Activities.WorkflowApplication.EndUnload%2A> 操作完成前调用 <xref:System.Activities.WorkflowApplication.BeginUnload%2A>，此调用将会被阻止，直至 <xref:System.Activities.WorkflowApplication.BeginUnload%2A> 操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-459">If <xref:System.Activities.WorkflowApplication.EndUnload%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes.</span></span> <span data-ttu-id="ff685-460">默认情况下，<xref:System.Activities.WorkflowApplication.BeginUnload%2A> 操作必须在 30 秒内完成，否则将在 <xref:System.TimeoutException> 中引发 <xref:System.Activities.WorkflowApplication.EndUnload%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-460">By default, the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span>  
  
 <span data-ttu-id="ff685-461">如果工作流实例以前是从保留结果加载的，则用于加载工作流的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 将用于保留结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-461">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ff685-462">如果工作流已创建但未保留，则在调用此方法之前必须配置 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否则，在调用此方法时将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-462">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="ff685-463">此方法使用 <xref:System.IAsyncResult> 异步设计模式以异步方式保留和释放工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-463">This method persists and disposes a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-464">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-464">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUnload">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginUnload (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginUnload(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginUnload (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginUnload(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginUnload : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.BeginUnload (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ff685-465">必须在此时间内完成 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 操作的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-465">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="ff685-466">当 <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> 操作完成后要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-466">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="ff685-467">一个特定于应用程序的可选对象，其中包含有关异步操作的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-467">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ff685-468">使用指定的超时间隔、回调方法和用户提供的状态以异步方式保留和释放工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-468">Persists and disposes a workflow instance asynchronously using the specified time-out interval, callback method, and user-provided state.</span></span></summary>
        <returns><span data-ttu-id="ff685-469">对异步 <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> 操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-469">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-470">若要确定 <xref:System.Activities.WorkflowApplication.BeginUnload%2A> 操作是否成功，请调用 <xref:System.Activities.WorkflowApplication.EndUnload%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-470">To determine whether the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span> <span data-ttu-id="ff685-471"><xref:System.Activities.WorkflowApplication.EndUnload%2A> 可以从参数中的方法引用的内部或外部调用 `callback` 。</span><span class="sxs-lookup"><span data-stu-id="ff685-471"><xref:System.Activities.WorkflowApplication.EndUnload%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="ff685-472">如果在 <xref:System.Activities.WorkflowApplication.EndUnload%2A> 操作完成前调用 <xref:System.Activities.WorkflowApplication.BeginUnload%2A>，此调用将会被阻止，直至 <xref:System.Activities.WorkflowApplication.BeginUnload%2A> 操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-472">If <xref:System.Activities.WorkflowApplication.EndUnload%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes.</span></span> <span data-ttu-id="ff685-473">如果 <xref:System.Activities.WorkflowApplication.BeginUnload%2A> 操作未在指定的超时间隔内完成，则将在 <xref:System.TimeoutException> 中引发 <xref:System.Activities.WorkflowApplication.EndUnload%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-473">If the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span>  
  
 <span data-ttu-id="ff685-474">如果工作流实例以前是从保留结果加载的，则用于加载工作流的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 将用于保留结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-474">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ff685-475">如果工作流已创建但未保留，则在调用此方法之前必须配置 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否则，在调用此方法时将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-475">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="ff685-476">此方法使用 <xref:System.IAsyncResult> 异步设计模式以异步方式保留和卸载工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-476">This method persists and unloads a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-477">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-477">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Cancel">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-478">取消工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-478">Cancels the workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-479">此方法会安排对工作流实例的取消操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-479">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="ff685-480">若要在取消完成后得到通知，请使用 <xref:System.Activities.WorkflowApplication.Completed%2A> 处理程序。</span><span class="sxs-lookup"><span data-stu-id="ff685-480">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="ff685-481">默认情况下，取消操作必须在 30 秒内完成，否则将引发 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-481">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; unit" Usage="workflowApplication.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ff685-482">取消工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-482">Cancels the workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-483">此方法会安排对工作流实例的取消操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-483">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="ff685-484">若要在取消完成后得到通知，请使用 <xref:System.Activities.WorkflowApplication.Completed%2A> 处理程序。</span><span class="sxs-lookup"><span data-stu-id="ff685-484">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handler.</span></span>  
  
 <span data-ttu-id="ff685-485">默认情况下，取消操作必须在 30 秒内完成，否则将引发 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-485">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-486">下面的示例使用 <xref:System.Activities.WorkflowApplication> 承载一个工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-486">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ff685-487">该示例使用指定的工作流定义构造 <xref:System.Activities.WorkflowApplication>，处理所需的工作流生命周期事件，并通过调用 <xref:System.Activities.WorkflowApplication.Run%2A> 来调用工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-487">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ff685-488">启动工作流之后，将调用 <xref:System.Activities.WorkflowApplication.Cancel%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-488">After the workflow is started, <xref:System.Activities.WorkflowApplication.Cancel%2A> is called.</span></span> <span data-ttu-id="ff685-489">取消工作流时，会向控制台显示以下输出。</span><span class="sxs-lookup"><span data-stu-id="ff685-489">When the workflow is cancelled, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Idle.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Canceled  
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#13](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Cancel : TimeSpan -&gt; unit" Usage="workflowApplication.Cancel timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ff685-490">必须在此时间内完成取消操作的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-490">The interval in which the cancel operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="ff685-491">使用指定的超时间隔取消工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-491">Cancels the workflow instance using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-492">此方法会安排对工作流实例的取消操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-492">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="ff685-493">若要在取消完成后得到通知，请使用 <xref:System.Activities.WorkflowApplication.Completed%2A> 处理程序。</span><span class="sxs-lookup"><span data-stu-id="ff685-493">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-494">下面的示例使用 <xref:System.Activities.WorkflowApplication> 承载一个工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-494">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ff685-495">该示例使用指定的工作流定义构造 <xref:System.Activities.WorkflowApplication>，处理所需的工作流生命周期事件，并通过调用 <xref:System.Activities.WorkflowApplication.Run%2A> 来调用工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-495">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ff685-496">启动工作流之后，将调用 <xref:System.Activities.WorkflowApplication.Cancel%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-496">After the workflow is started, <xref:System.Activities.WorkflowApplication.Cancel%2A> is called.</span></span> <span data-ttu-id="ff685-497">取消工作流时，会向控制台显示以下输出。</span><span class="sxs-lookup"><span data-stu-id="ff685-497">When the workflow is cancelled, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Idle.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Canceled  
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#13](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationCompletedEventArgs&gt; Completed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationCompletedEventArgs&gt; Completed" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Property Completed As Action(Of WorkflowApplicationCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ Completed { Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Completed : Action&lt;System.Activities.WorkflowApplicationCompletedEventArgs&gt; with get, set" Usage="System.Activities.WorkflowApplication.Completed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff685-498">获取或设置工作流实例完成时调用的 <see cref="T:System.Action`1" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-498">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the workflow instance completes.</span></span></summary>
        <value><span data-ttu-id="ff685-499">工作流实例完成时调用的操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-499">The action that is invoked when the workflow instance is complete.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ff685-500">下面的代码示例检查传递给 <xref:System.Activities.WorkflowApplicationCompletedEventArgs> 实例的 <xref:System.Activities.WorkflowApplication.Completed%2A> 处理程序的 <xref:System.Activities.WorkflowApplication>，并显示有关工作流完成情况的信息。</span><span class="sxs-lookup"><span data-stu-id="ff685-500">The following code example inspects the <xref:System.Activities.WorkflowApplicationCompletedEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Completed%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays information about how the workflow completed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#4](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-501">创建工作流的默认实例所有者。</span><span class="sxs-lookup"><span data-stu-id="ff685-501">Creates a default instance owner for the workflow.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void CreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateDefaultInstanceOwner (instanceStore As InstanceStore, definitionIdentity As WorkflowIdentity, identityFilter As WorkflowIdentityFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter);" />
      <MemberSignature Language="F#" Value="static member CreateDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * System.Activities.WorkflowIdentity * System.Activities.WorkflowIdentityFilter -&gt; unit" Usage="System.Activities.WorkflowApplication.CreateDefaultInstanceOwner (instanceStore, definitionIdentity, identityFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ff685-502">对工作流应用程序的当前实例保留状态的访问。</span><span class="sxs-lookup"><span data-stu-id="ff685-502">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="ff685-503">工作流的定义标识。</span><span class="sxs-lookup"><span data-stu-id="ff685-503">The definition identity of the workflow.</span></span></param>
        <param name="identityFilter"><span data-ttu-id="ff685-504">标识筛选器。</span><span class="sxs-lookup"><span data-stu-id="ff685-504">The identity filter.</span></span></param>
        <summary><span data-ttu-id="ff685-505">使用指定实例存储、定义标识和标识筛选器和超时间隔，创建工作流的默认实例所有者。</span><span class="sxs-lookup"><span data-stu-id="ff685-505">Creates a default instance owner for the workflow using specified instance store, definition identity, and identity filter.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void CreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateDefaultInstanceOwner (instanceStore As InstanceStore, definitionIdentity As WorkflowIdentity, identityFilter As WorkflowIdentityFilter, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member CreateDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * System.Activities.WorkflowIdentity * System.Activities.WorkflowIdentityFilter * TimeSpan -&gt; unit" Usage="System.Activities.WorkflowApplication.CreateDefaultInstanceOwner (instanceStore, definitionIdentity, identityFilter, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ff685-506">对工作流应用程序的当前实例保留状态的访问。</span><span class="sxs-lookup"><span data-stu-id="ff685-506">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="ff685-507">工作流的定义标识。</span><span class="sxs-lookup"><span data-stu-id="ff685-507">The definition identity of the workflow.</span></span></param>
        <param name="identityFilter"><span data-ttu-id="ff685-508">标识筛选器。</span><span class="sxs-lookup"><span data-stu-id="ff685-508">The identity filter.</span></span></param>
        <param name="timeout"><span data-ttu-id="ff685-509">开始加载操作必须在取消操作前的间隔。</span><span class="sxs-lookup"><span data-stu-id="ff685-509">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="ff685-510">使用指定实例存储、定义标识和标识筛选器和超时间隔，创建工作流的默认实例所有者。</span><span class="sxs-lookup"><span data-stu-id="ff685-510">Creates a default instance owner for the workflow using specified instance store, definition identity, and identity filter and timeout interval.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-511">删除工作流的默认实例所有者。</span><span class="sxs-lookup"><span data-stu-id="ff685-511">Deletes a default instance owner for the workflow.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void DeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteDefaultInstanceOwner (instanceStore As InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberSignature Language="F#" Value="static member DeleteDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore -&gt; unit" Usage="System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner instanceStore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ff685-512">对工作流应用程序的当前实例保留状态的访问。</span><span class="sxs-lookup"><span data-stu-id="ff685-512">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <summary><span data-ttu-id="ff685-513">使用指定的实例存储区和检索工作流的可运行实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-513">Deletes a default instance owner for the workflow with specified instance store.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void DeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteDefaultInstanceOwner (instanceStore As InstanceStore, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member DeleteDefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceStore * TimeSpan -&gt; unit" Usage="System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner (instanceStore, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ff685-514">对工作流应用程序的当前实例保留状态的访问。</span><span class="sxs-lookup"><span data-stu-id="ff685-514">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="timeout"><span data-ttu-id="ff685-515">开始加载操作必须在取消操作前的间隔。</span><span class="sxs-lookup"><span data-stu-id="ff685-515">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="ff685-516">使用指定的实例存储区和超时间隔检索工作流的可运行实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-516">Deletes a default instance owner for the workflow with specified instance store and timeout interval.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCancel">
      <MemberSignature Language="C#" Value="public void EndCancel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCancel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCancel (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCancel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndCancel : IAsyncResult -&gt; unit" Usage="workflowApplication.EndCancel result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ff685-517">异步取消操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-517">The asynchronous cancel operation.</span></span></param>
        <summary><span data-ttu-id="ff685-518">等待挂起的异步取消操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-518">Waits for the pending asynchronous cancel operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-519">此方法确定 <xref:System.Activities.WorkflowApplication.BeginCancel%2A> 操作是否成功。</span><span class="sxs-lookup"><span data-stu-id="ff685-519">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginCancel%2A> operation was successful.</span></span> <span data-ttu-id="ff685-520">如果在取消操作完成前调用此方法，则此调用将会被阻止，直至取消操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-520">If called before the cancel operation completes, it blocks until the cancel operation is complete.</span></span>  
  
 <span data-ttu-id="ff685-521">此方法使用 <xref:System.IAsyncResult> 异步设计模式完成异步取消操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-521">This method completes the asynchronous cancel operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-522">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-522">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void EndCreateDefaultInstanceOwner (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndCreateDefaultInstanceOwner(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndCreateDefaultInstanceOwner (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndCreateDefaultInstanceOwner(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndCreateDefaultInstanceOwner : IAsyncResult -&gt; unit" Usage="System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ff685-523">异步结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-523">The asynchronous result.</span></span></param>
        <summary><span data-ttu-id="ff685-524">等待完成对默认实例所有者的创建。</span><span class="sxs-lookup"><span data-stu-id="ff685-524">Waits for the creation of default instance owner to complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void EndDeleteDefaultInstanceOwner (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndDeleteDefaultInstanceOwner(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndDeleteDefaultInstanceOwner (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndDeleteDefaultInstanceOwner(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndDeleteDefaultInstanceOwner : IAsyncResult -&gt; unit" Usage="System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ff685-525">异步结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-525">The asynchronous result.</span></span></param>
        <summary><span data-ttu-id="ff685-526">等待完成对默认实例所有者的删除。</span><span class="sxs-lookup"><span data-stu-id="ff685-526">Waits for the deletion of default instance owner to complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance EndGetInstance (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance EndGetInstance(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetInstance (asyncResult As IAsyncResult) As WorkflowApplicationInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ EndGetInstance(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetInstance : IAsyncResult -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.EndGetInstance asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ff685-527">异步结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-527">The asynchronous result.</span></span></param>
        <summary><span data-ttu-id="ff685-528">等待完成实例检索。</span><span class="sxs-lookup"><span data-stu-id="ff685-528">Waits for the instance retrieval to complete.</span></span></summary>
        <returns><span data-ttu-id="ff685-529">操作的结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-529">The result of the operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance EndGetRunnableInstance (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance EndGetRunnableInstance(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetRunnableInstance (asyncResult As IAsyncResult) As WorkflowApplicationInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ EndGetRunnableInstance(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetRunnableInstance : IAsyncResult -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.EndGetRunnableInstance asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ff685-530">异步结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-530">The asynchronous result.</span></span></param>
        <summary><span data-ttu-id="ff685-531">等待异步检索可运行实例操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-531">Waits for the asynchronous retrieval of runnable instance operation to complete.</span></span></summary>
        <returns><span data-ttu-id="ff685-532">操作的结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-532">The result of the operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoad">
      <MemberSignature Language="C#" Value="public void EndLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoad (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoad(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndLoad : IAsyncResult -&gt; unit" Usage="workflowApplication.EndLoad result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ff685-533">异步加载操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-533">The asynchronous load operation.</span></span></param>
        <summary><span data-ttu-id="ff685-534">等待挂起的异步加载操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-534">Waits for the pending asynchronous load operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-535">如果在加载操作完成前调用此方法，则此调用将会被阻止，直至加载操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-535">If this method is called before the loading operation completes, it blocks until the loading operation is complete.</span></span>  
  
 <span data-ttu-id="ff685-536">此方法使用 <xref:System.IAsyncResult> 异步设计模式完成异步加载操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-536">This method completes the asynchronous load operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-537">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-537">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void EndLoadRunnableInstance (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoadRunnableInstance(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoadRunnableInstance (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoadRunnableInstance(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndLoadRunnableInstance : IAsyncResult -&gt; unit" Usage="workflowApplication.EndLoadRunnableInstance result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ff685-538">对异步加载操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-538">A reference to the asynchronous load operation.</span></span></param>
        <summary><span data-ttu-id="ff685-539">等待异步加载可运行实例操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-539">Waits for the asynchronous load runnable instance operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-540">此方法确定 <xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A> 操作是否成功。</span><span class="sxs-lookup"><span data-stu-id="ff685-540">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A> operation was successful.</span></span> <span data-ttu-id="ff685-541">如果在加载操作完成前调用此方法，则此调用将会被阻止，直至加载操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-541">If called before the load operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="ff685-542">此方法使用 <xref:System.IAsyncResult> 异步设计模式以异步方式加载工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-542">This method loads workflows asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-543">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-543">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndPersist">
      <MemberSignature Language="C#" Value="public void EndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndPersist(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndPersist : IAsyncResult -&gt; unit" Usage="workflowApplication.EndPersist result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ff685-544">异步保留操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-544">The asynchronous persist operation.</span></span></param>
        <summary><span data-ttu-id="ff685-545">等待挂起的异步保留操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-545">Waits for the pending asynchronous persist operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-546">此方法确定 <xref:System.Activities.WorkflowApplication.BeginPersist%2A> 操作是否成功。</span><span class="sxs-lookup"><span data-stu-id="ff685-546">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginPersist%2A> operation was successful.</span></span> <span data-ttu-id="ff685-547">如果在保留操作完成前调用此方法，则此调用将会被阻止，直至保留操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-547">If called before the persist operation completes, it blocks until the persist operation is complete.</span></span>  
  
 <span data-ttu-id="ff685-548">此方法使用 <xref:System.IAsyncResult> 异步设计模式完成异步保留操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-548">This method completes the asynchronous persist operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-549">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-549">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult EndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult EndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult EndResumeBookmark(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndResumeBookmark : IAsyncResult -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.EndResumeBookmark result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ff685-550">对异步书签恢复操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-550">A reference to the asynchronous bookmark resume operation.</span></span></param>
        <summary><span data-ttu-id="ff685-551">等待书签恢复操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-551">Waits for a bookmark resume operation to complete.</span></span></summary>
        <returns><span data-ttu-id="ff685-552">一个枚举值，指示书签恢复操作的结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-552">One of the enumeration values that indicates the results of a bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-553">此方法确定 <xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A> 操作是否成功。</span><span class="sxs-lookup"><span data-stu-id="ff685-553">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A> operation was successful.</span></span> <span data-ttu-id="ff685-554">如果在加载操作完成前调用此方法，则此调用将会被阻止，直至加载操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-554">If called before the load operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="ff685-555">此方法使用 <xref:System.IAsyncResult> 异步设计模式以异步方式恢复书签。</span><span class="sxs-lookup"><span data-stu-id="ff685-555">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-556">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-556">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRun">
      <MemberSignature Language="C#" Value="public void EndRun (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndRun(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndRun (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndRun(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndRun : IAsyncResult -&gt; unit" Usage="workflowApplication.EndRun result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ff685-557">异步运行操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-557">The asynchronous run operation.</span></span></param>
        <summary><span data-ttu-id="ff685-558">等待挂起的异步运行操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-558">Waits for the pending asynchronous run operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-559">此方法确定 <xref:System.Activities.WorkflowApplication.BeginRun%2A> 操作是否成功。</span><span class="sxs-lookup"><span data-stu-id="ff685-559">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginRun%2A> operation was successful.</span></span> <span data-ttu-id="ff685-560">如果在恢复操作完成前调用此方法，则此调用将会被阻止，直至恢复操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-560">If called before the resume operation completes, it blocks until the resume operation is complete.</span></span>  
  
 <span data-ttu-id="ff685-561">此方法使用 <xref:System.IAsyncResult> 异步设计模式完成异步运行操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-561">This method completes an asynchronous run operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-562">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-562">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTerminate">
      <MemberSignature Language="C#" Value="public void EndTerminate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndTerminate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndTerminate (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndTerminate(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndTerminate : IAsyncResult -&gt; unit" Usage="workflowApplication.EndTerminate result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ff685-563">异步终止操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-563">The asynchronous terminate operation.</span></span></param>
        <summary><span data-ttu-id="ff685-564">等待挂起的异步终止操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-564">Waits for the pending asynchronous terminate operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-565">可以调用此方法来确定 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作是否成功。</span><span class="sxs-lookup"><span data-stu-id="ff685-565">This method can be called to determine whether a <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful.</span></span> <span data-ttu-id="ff685-566">如果在终止操作完成前调用此方法，则此调用将会被阻止，直至终止操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-566">If called before the terminate operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="ff685-567">此方法使用 <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 异步设计模式完成异步 <xref:System.IAsyncResult> 操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-567">This method completes an asynchronous <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-568">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-568">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUnload">
      <MemberSignature Language="C#" Value="public void EndUnload (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUnload(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUnload (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUnload(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndUnload : IAsyncResult -&gt; unit" Usage="workflowApplication.EndUnload result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ff685-569">异步卸载操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-569">The asynchronous unload operation.</span></span></param>
        <summary><span data-ttu-id="ff685-570">等待挂起的异步卸载操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-570">Waits for the pending asynchronous unload operation to complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-571">可以调用此方法来确定 <xref:System.Activities.WorkflowApplication.BeginUnload%2A> 操作是否成功。</span><span class="sxs-lookup"><span data-stu-id="ff685-571">This method can be called to determine whether a <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful.</span></span> <span data-ttu-id="ff685-572">如果在卸载操作完成前调用此方法，则此调用将会被阻止，直至卸载操作完成。</span><span class="sxs-lookup"><span data-stu-id="ff685-572">If called before the unload operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="ff685-573">此方法使用 <xref:System.Activities.WorkflowApplication.BeginUnload%2A> 异步设计模式完成异步 <xref:System.IAsyncResult> 操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-573">This method completes an asynchronous <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> <span data-ttu-id="ff685-574">有关详细信息，请参阅 [异步编程概述](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm)。</span><span class="sxs-lookup"><span data-stu-id="ff685-574">For more information, see [Asynchronous Programming Overview](/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-model-apm).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.Activities.Hosting.WorkflowInstanceExtensionManager Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Hosting.WorkflowInstanceExtensionManager Extensions" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As WorkflowInstanceExtensionManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Hosting::WorkflowInstanceExtensionManager ^ Extensions { System::Activities::Hosting::WorkflowInstanceExtensionManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Extensions : System.Activities.Hosting.WorkflowInstanceExtensionManager" Usage="System.Activities.WorkflowApplication.Extensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Hosting.WorkflowInstanceExtensionManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff685-575">获取当前工作流实例的扩展的集合。</span><span class="sxs-lookup"><span data-stu-id="ff685-575">Gets the collection of extensions for the current workflow instance.</span></span></summary>
        <value><span data-ttu-id="ff685-576">对象的集合。</span><span class="sxs-lookup"><span data-stu-id="ff685-576">A collection of objects.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBookmarks">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-577">返回工作流实例的书签的集合。</span><span class="sxs-lookup"><span data-stu-id="ff685-577">Returns the collection of bookmarks for the workflow instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetBookmarks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBookmarks () As ReadOnlyCollection(Of BookmarkInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::Hosting::BookmarkInfo ^&gt; ^ GetBookmarks();" />
      <MemberSignature Language="F#" Value="member this.GetBookmarks : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;" Usage="workflowApplication.GetBookmarks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ff685-578">返回工作流实例的书签的集合。</span><span class="sxs-lookup"><span data-stu-id="ff685-578">Returns the collection of bookmarks for the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="ff685-579">工作流实例的书签的只读集合。</span><span class="sxs-lookup"><span data-stu-id="ff685-579">A read-only collection of bookmarks for the workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-580">如果此操作未在 30 秒内完成，则将引发 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-580">If this operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-581">下面的示例创建一个使用 `ReadLine` 活动的工作流，该活动创建一个 <xref:System.Activities.Bookmark>。</span><span class="sxs-lookup"><span data-stu-id="ff685-581">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="ff685-582">该示例启动工作流，一旦创建了 <xref:System.Activities.Bookmark> 并且工作流进入空闲状态，就调用 <xref:System.Activities.WorkflowApplication.GetBookmarks%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-582">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, <xref:System.Activities.WorkflowApplication.GetBookmarks%2A> is called.</span></span> <span data-ttu-id="ff685-583">完成工作流时，会向控制台显示以下输出。</span><span class="sxs-lookup"><span data-stu-id="ff685-583">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
What is your name?   
BookmarkName: UserName - OwnerDisplayName: ReadLine  
Steve  
Hello, Steve  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#14](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBookmarks (timeout As TimeSpan) As ReadOnlyCollection(Of BookmarkInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::Hosting::BookmarkInfo ^&gt; ^ GetBookmarks(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.GetBookmarks : TimeSpan -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;" Usage="workflowApplication.GetBookmarks timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ff685-584">必须在此时间内完成此方法的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-584">The interval in which this method must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="ff685-585">使用指定的超时间隔返回工作流实例的书签的集合。</span><span class="sxs-lookup"><span data-stu-id="ff685-585">Returns the collection of bookmarks for the workflow instance using the specified time-out interval.</span></span></summary>
        <returns><span data-ttu-id="ff685-586">工作流实例的书签的只读集合。</span><span class="sxs-lookup"><span data-stu-id="ff685-586">A read-only collection of bookmarks for the workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ff685-587">下面的示例创建一个使用 `ReadLine` 活动的工作流，该活动创建一个 <xref:System.Activities.Bookmark>。</span><span class="sxs-lookup"><span data-stu-id="ff685-587">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="ff685-588">该示例启动工作流，一旦创建了 <xref:System.Activities.Bookmark> 并且工作流进入空闲状态，就调用 <xref:System.Activities.WorkflowApplication.GetBookmarks%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-588">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, <xref:System.Activities.WorkflowApplication.GetBookmarks%2A> is called.</span></span> <span data-ttu-id="ff685-589">完成工作流时，会向控制台显示以下输出。</span><span class="sxs-lookup"><span data-stu-id="ff685-589">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
What is your name?   
BookmarkName: UserName - OwnerDisplayName: ReadLine  
Steve  
Hello, Steve  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#14](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-590">检索工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-590">Retrieves the workflow instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (instanceId As Guid, instanceStore As InstanceStore) As WorkflowApplicationInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberSignature Language="F#" Value="static member GetInstance : Guid * System.Runtime.DurableInstancing.InstanceStore -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.GetInstance (instanceId, instanceStore)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="ff685-591">实例标识符。</span><span class="sxs-lookup"><span data-stu-id="ff685-591">The instance identifier.</span></span></param>
        <param name="instanceStore"><span data-ttu-id="ff685-592">对工作流应用程序的当前实例保留状态的访问。</span><span class="sxs-lookup"><span data-stu-id="ff685-592">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <summary><span data-ttu-id="ff685-593">使用指定的实例标识符和实例存储区检索工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-593">Retrieves the workflow instance using specified instance identifier and instance store.</span></span></summary>
        <returns><span data-ttu-id="ff685-594">检索到的实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-594">The retrieved instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (instanceId As Guid, instanceStore As InstanceStore, timeout As TimeSpan) As WorkflowApplicationInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member GetInstance : Guid * System.Runtime.DurableInstancing.InstanceStore * TimeSpan -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.GetInstance (instanceId, instanceStore, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="ff685-595">实例标识符。</span><span class="sxs-lookup"><span data-stu-id="ff685-595">The instance identifier.</span></span></param>
        <param name="instanceStore"><span data-ttu-id="ff685-596">对工作流应用程序的当前实例保留状态的访问。</span><span class="sxs-lookup"><span data-stu-id="ff685-596">The access to the persisted state of the current instance of the workflow application.</span></span></param>
        <param name="timeout"><span data-ttu-id="ff685-597">开始加载操作必须在取消操作前的间隔。</span><span class="sxs-lookup"><span data-stu-id="ff685-597">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="ff685-598">使用指定的实例标识符、实例存储区和超时间隔检索工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-598">Retrieves the workflow instance using specified instance identifier, instance store and timeout interval.</span></span></summary>
        <returns><span data-ttu-id="ff685-599">对异步操作的引用。</span><span class="sxs-lookup"><span data-stu-id="ff685-599">A reference to the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-600">检索工作流的可运行实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-600">Retrieves the runnable instance of the workflow.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRunnableInstance (instanceStore As InstanceStore) As WorkflowApplicationInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberSignature Language="F#" Value="static member GetRunnableInstance : System.Runtime.DurableInstancing.InstanceStore -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.GetRunnableInstance instanceStore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ff685-601">工作流应用程序的当前实例保留状态的访问。</span><span class="sxs-lookup"><span data-stu-id="ff685-601">The access to the persisted state of the current instance of the workflow application</span></span></param>
        <summary><span data-ttu-id="ff685-602">使用指定的实例存储区检索工作流的可运行实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-602">Retrieves the runnable instance of the workflow with specified instance store.</span></span></summary>
        <returns><span data-ttu-id="ff685-603">“可运行”实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-603">The runnable instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRunnableInstance (instanceStore As InstanceStore, timeout As TimeSpan) As WorkflowApplicationInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member GetRunnableInstance : System.Runtime.DurableInstancing.InstanceStore * TimeSpan -&gt; System.Activities.WorkflowApplicationInstance" Usage="System.Activities.WorkflowApplication.GetRunnableInstance (instanceStore, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceStore"><span data-ttu-id="ff685-604">工作流应用程序的当前实例保留状态的访问。</span><span class="sxs-lookup"><span data-stu-id="ff685-604">The access to the persisted state of the current instance of the workflow application</span></span></param>
        <param name="timeout"><span data-ttu-id="ff685-605">开始加载操作必须在取消操作前的间隔。</span><span class="sxs-lookup"><span data-stu-id="ff685-605">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="ff685-606">使用指定的实例存储区和超时间隔检索工作流的可运行实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-606">Retrieves the runnable instance of the workflow with specified instance store and timeout interval.</span></span></summary>
        <returns><span data-ttu-id="ff685-607">“可运行”实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-607">The runnable instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid Id { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : Guid" Usage="System.Activities.WorkflowApplication.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff685-608">获取当前工作流应用程序实例的 128 位 GUID 标识符。</span><span class="sxs-lookup"><span data-stu-id="ff685-608">Gets the 128-bit GUID identifier of the current workflow application instance.</span></span></summary>
        <value><span data-ttu-id="ff685-609">128 位 GUID 标识符。</span><span class="sxs-lookup"><span data-stu-id="ff685-609">A 128-bit GUID identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ff685-610">下面的示例创建 <xref:System.Activities.WorkflowApplication> 实例，然后向控制台显示 <xref:System.Activities.WorkflowApplication.Id%2A> 值。</span><span class="sxs-lookup"><span data-stu-id="ff685-610">The following example creates a <xref:System.Activities.WorkflowApplication> instance and then displays the <xref:System.Activities.WorkflowApplication.Id%2A> value to the console.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#28](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Idle">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationIdleEventArgs&gt; Idle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationIdleEventArgs&gt; Idle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Idle" />
      <MemberSignature Language="VB.NET" Value="Public Property Idle As Action(Of WorkflowApplicationIdleEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ Idle { Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Idle : Action&lt;System.Activities.WorkflowApplicationIdleEventArgs&gt; with get, set" Usage="System.Activities.WorkflowApplication.Idle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationIdleEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff685-611">获取或设置当前工作流实例进入空闲状态时调用的 <see cref="T:System.Action`1" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-611">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the current workflow instance becomes idle.</span></span></summary>
        <value><span data-ttu-id="ff685-612">工作流实例进入空闲状态时执行的操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-612">An action that executes when a workflow instance becomes idle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ff685-613">下面的代码示例检查传递给 <xref:System.Activities.WorkflowApplicationIdleEventArgs> 实例的 <xref:System.Activities.WorkflowApplication.Idle%2A>  处理程序的 <xref:System.Activities.WorkflowApplication>。</span><span class="sxs-lookup"><span data-stu-id="ff685-613">The following code example inspects the <xref:System.Activities.WorkflowApplicationIdleEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Idle%2A> handler of a <xref:System.Activities.WorkflowApplication> instance.</span></span> <span data-ttu-id="ff685-614">在此示例中，进入空闲状态的工作流包含一个由名为 <xref:System.Activities.Bookmark> 的活动所拥有的名为 `EnterGuess` 的 `ReadInt`。</span><span class="sxs-lookup"><span data-stu-id="ff685-614">In this example the workflow going idle has one <xref:System.Activities.Bookmark> with a name of `EnterGuess`, owned by an activity named `ReadInt`.</span></span> <span data-ttu-id="ff685-615">此代码示例基于 [如何：运行工作流，该工作流](/dotnet/framework/windows-workflow-foundation/how-to-run-a-workflow)是 [入门教程 &#91; .NET Framework 4.5&#93;](/dotnet/framework/windows-workflow-foundation/getting-started-tutorial)中的一部分。</span><span class="sxs-lookup"><span data-stu-id="ff685-615">This code example is based off of [How to: Run a Workflow](/dotnet/framework/windows-workflow-foundation/how-to-run-a-workflow), which is part of the [Getting Started Tutorial &#91;.NET Framework 4.5&#93;](/dotnet/framework/windows-workflow-foundation/getting-started-tutorial).</span></span> <span data-ttu-id="ff685-616">如果修改了该阶段中的 <xref:System.Activities.WorkflowApplication.Idle%2A> 处理程序以包含此示例中的代码，则将显示以下输出。</span><span class="sxs-lookup"><span data-stu-id="ff685-616">If the <xref:System.Activities.WorkflowApplication.Idle%2A> handler in that step is modified to contain the code from this example, the following output is displayed.</span></span>  
  
```Output  
BookmarkName: EnterGuess - OwnerDisplayName: ReadInt  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#2](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceStore">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceStore InstanceStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceStore InstanceStore" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.InstanceStore" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceStore As InstanceStore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceStore ^ InstanceStore { System::Runtime::DurableInstancing::InstanceStore ^ get(); void set(System::Runtime::DurableInstancing::InstanceStore ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceStore : System.Runtime.DurableInstancing.InstanceStore with get, set" Usage="System.Activities.WorkflowApplication.InstanceStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff685-617">获取或设置一个对象，该对象提供对工作流应用程序的当前实例保留状态的访问。</span><span class="sxs-lookup"><span data-stu-id="ff685-617">Gets or sets an object that provides access to the persisted state of the current instance of the workflow application.</span></span></summary>
        <value><span data-ttu-id="ff685-618">实例存储区。</span><span class="sxs-lookup"><span data-stu-id="ff685-618">An instance store.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ff685-619">下面的示例创建 WorkflowApplication 实例，然后使用 <xref:System.Activities.WorkflowApplication.InstanceStore%2A> 配置 <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>。</span><span class="sxs-lookup"><span data-stu-id="ff685-619">The following example creates a WorkflowApplication instance and then configures the <xref:System.Activities.WorkflowApplication.InstanceStore%2A> using a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="ff685-620">此代码示例是 [如何：创建和运行长时间运行的工作流](/dotnet/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow)的一部分，该工作流是 [入门教程 &#91; .NET Framework 4.5&#93;](/dotnet/framework/windows-workflow-foundation/getting-started-tutorial)的一部分。</span><span class="sxs-lookup"><span data-stu-id="ff685-620">This code example is part of [How to: Create and Run a Long Running Workflow](/dotnet/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow), which is part of the [Getting Started Tutorial &#91;.NET Framework 4.5&#93;](/dotnet/framework/windows-workflow-foundation/getting-started-tutorial).</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#28](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-621">从实例存储区加载工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-621">Loads a workflow instance from an instance store.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Activities.WorkflowApplicationInstance -&gt; unit" Usage="workflowApplication.Load instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="ff685-622">实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-622">The instance.</span></span></param>
        <summary><span data-ttu-id="ff685-623">从带指定实例的实例存储区加载工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-623">Loads a workflow instance from an instance store with specified instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.Load : Guid -&gt; unit" Usage="workflowApplication.Load instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="ff685-624">工作流实例的全局唯一标识符（128 位）。</span><span class="sxs-lookup"><span data-stu-id="ff685-624">A globally unique 128-bit identifier for the workflow instance.</span></span></param>
        <summary><span data-ttu-id="ff685-625">将指定的工作流实例从实例存储区加载到内存中。</span><span class="sxs-lookup"><span data-stu-id="ff685-625">Loads the specified workflow instance into memory from an instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ff685-626">下面的示例调用 <xref:System.Activities.WorkflowApplication.Load%2A> 以从 <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore> 加载保留的工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-626">The following example calls <xref:System.Activities.WorkflowApplication.Load%2A> to load persisted workflow instance from a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="ff685-627">此示例来自 `LoadAndCompleteInstance` [持久性工作流应用程序](/dotnet/framework/windows-workflow-foundation/samples/persisting-a-workflow-application) 示例中的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-627">This example is from the `LoadAndCompleteInstance` method in the [Persisting a Workflow Application](/dotnet/framework/windows-workflow-foundation/samples/persisting-a-workflow-application) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#27](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Activities.WorkflowApplicationInstance * System.Activities.DynamicUpdate.DynamicUpdateMap -&gt; unit" Usage="workflowApplication.Load (instance, updateMap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="ff685-628">实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-628">The instance.</span></span></param>
        <param name="updateMap"><span data-ttu-id="ff685-629">更新映射。</span><span class="sxs-lookup"><span data-stu-id="ff685-629">The update map.</span></span></param>
        <summary><span data-ttu-id="ff685-630">从带指定实例和更新映射的实例存储区加载工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-630">Loads a workflow instance from an instance store with specified instance and update map.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Activities.WorkflowApplicationInstance * TimeSpan -&gt; unit" Usage="workflowApplication.Load (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="ff685-631">实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-631">The instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="ff685-632">开始加载操作必须在取消操作前的间隔。</span><span class="sxs-lookup"><span data-stu-id="ff685-632">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="ff685-633">从带指定实例和超时间隔的实例存储区加载工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-633">Loads a workflow instance from an instance store with specified instance and timeout interval.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Guid instanceId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(valuetype System.Guid instanceId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instanceId As Guid, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Guid instanceId, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Load : Guid * TimeSpan -&gt; unit" Usage="workflowApplication.Load (instanceId, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="ff685-634">工作流实例的全局唯一标识符（128 位）。</span><span class="sxs-lookup"><span data-stu-id="ff685-634">A globally unique 128-bit identifier for the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="ff685-635">必须在此时间内完成加载操作的时间间隔，否则，将取消加载操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-635">The interval in which the load operation must complete before the load operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="ff685-636">使用指定的超时间隔将指定的工作流实例从实例存储区加载到内存中。</span><span class="sxs-lookup"><span data-stu-id="ff685-636">Loads the specified workflow instance into memory from an instance store using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ff685-637">下面的示例调用 <xref:System.Activities.WorkflowApplication.Load%2A> 以从 <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore> 加载保留的工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-637">The following example calls <xref:System.Activities.WorkflowApplication.Load%2A> to load persisted workflow instance from a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="ff685-638">此示例来自 `LoadAndCompleteInstance` [持久性工作流应用程序](/dotnet/framework/windows-workflow-foundation/samples/persisting-a-workflow-application) 示例中的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-638">This example is from the `LoadAndCompleteInstance` method in the [Persisting a Workflow Application](/dotnet/framework/windows-workflow-foundation/samples/persisting-a-workflow-application) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#27](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Activities.WorkflowApplicationInstance * System.Activities.DynamicUpdate.DynamicUpdateMap * TimeSpan -&gt; unit" Usage="workflowApplication.Load (instance, updateMap, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.TimeSpan" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="ff685-639">实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-639">The instance.</span></span></param>
        <param name="updateMap"><span data-ttu-id="ff685-640">更新映射。</span><span class="sxs-lookup"><span data-stu-id="ff685-640">The update map.</span></span></param>
        <param name="timeout"><span data-ttu-id="ff685-641">开始加载操作必须在取消操作前的间隔。</span><span class="sxs-lookup"><span data-stu-id="ff685-641">The interval in which the begin load operation must complete before the operation is canceled.</span></span></param>
        <summary><span data-ttu-id="ff685-642">从带指定实例、更新映射和超时间隔的实例存储区加载工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-642">Loads a workflow instance from an instance store with specified instance, update map and timeout interval.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-643">从 <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> 加载可运行的工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-643">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-644">可运行实例是指计时器或实例锁已过期的实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-644">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void LoadRunnableInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadRunnableInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.LoadRunnableInstance" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadRunnableInstance ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadRunnableInstance();" />
      <MemberSignature Language="F#" Value="member this.LoadRunnableInstance : unit -&gt; unit" Usage="workflowApplication.LoadRunnableInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ff685-645">从 <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> 加载可运行的工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-645">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-646">可运行实例是指计时器或实例锁已过期的实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-646">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="ff685-647">默认情况下，加载操作必须在 30 秒内完成，否则将引发 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-647">By default, the load operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void LoadRunnableInstance (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadRunnableInstance(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadRunnableInstance (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadRunnableInstance(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.LoadRunnableInstance : TimeSpan -&gt; unit" Usage="workflowApplication.LoadRunnableInstance timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ff685-648">必须在此时间内完成加载操作的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-648">The interval in which the load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="ff685-649">使用指定的超时间隔从 <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> 加载可运行的工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-649">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-650">可运行实例是指计时器或实例锁已过期的实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-650">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginAssociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginAssociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnBeginAssociateKeys (keys As ICollection(Of InstanceKey), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginAssociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginAssociateKeys : System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.OnBeginAssociateKeys (keys, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keys">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginPersist">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnBeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginPersist : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.OnBeginPersist (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnBeginResumeBookmark (bookmark As Bookmark, value As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginResumeBookmark : System.Activities.Bookmark * obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplication.OnBeginResumeBookmark (bookmark, value, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">To be added.</param>
        <param name="value">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisassociateKeys">
      <MemberSignature Language="C#" Value="protected internal override void OnDisassociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnDisassociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnDisassociateKeys (keys As ICollection(Of InstanceKey))" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnDisassociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys);" />
      <MemberSignature Language="F#" Value="override this.OnDisassociateKeys : System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; -&gt; unit" Usage="workflowApplication.OnDisassociateKeys keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
      </Parameters>
      <Docs>
        <param name="keys">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal override void OnEndAssociateKeys (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnEndAssociateKeys(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndAssociateKeys(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnEndAssociateKeys (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnEndAssociateKeys(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndAssociateKeys : IAsyncResult -&gt; unit" Usage="workflowApplication.OnEndAssociateKeys result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndPersist">
      <MemberSignature Language="C#" Value="protected internal override void OnEndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnEndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnEndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnEndPersist(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndPersist : IAsyncResult -&gt; unit" Usage="workflowApplication.OnEndPersist result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal override System.Activities.BookmarkResumptionResult OnEndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance valuetype System.Activities.BookmarkResumptionResult OnEndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnEndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Activities::BookmarkResumptionResult OnEndResumeBookmark(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndResumeBookmark : IAsyncResult -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.OnEndResumeBookmark result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyPaused">
      <MemberSignature Language="C#" Value="protected override void OnNotifyPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnNotifyPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnNotifyPaused" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnNotifyPaused ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnNotifyPaused();" />
      <MemberSignature Language="F#" Value="override this.OnNotifyPaused : unit -&gt; unit" Usage="workflowApplication.OnNotifyPaused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyUnhandledException">
      <MemberSignature Language="C#" Value="protected override void OnNotifyUnhandledException (Exception exception, System.Activities.Activity exceptionSource, string exceptionSourceInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnNotifyUnhandledException(class System.Exception exception, class System.Activities.Activity exceptionSource, string exceptionSourceInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnNotifyUnhandledException (exception As Exception, exceptionSource As Activity, exceptionSourceInstanceId As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnNotifyUnhandledException(Exception ^ exception, System::Activities::Activity ^ exceptionSource, System::String ^ exceptionSourceInstanceId);" />
      <MemberSignature Language="F#" Value="override this.OnNotifyUnhandledException : Exception * System.Activities.Activity * string -&gt; unit" Usage="workflowApplication.OnNotifyUnhandledException (exception, exceptionSource, exceptionSourceInstanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="exceptionSource" Type="System.Activities.Activity" />
        <Parameter Name="exceptionSourceInstanceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exception">To be added.</param>
        <param name="exceptionSource">To be added.</param>
        <param name="exceptionSourceInstanceId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRequestAbort">
      <MemberSignature Language="C#" Value="protected internal override void OnRequestAbort (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnRequestAbort(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnRequestAbort(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnRequestAbort (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnRequestAbort(Exception ^ reason);" />
      <MemberSignature Language="F#" Value="override this.OnRequestAbort : Exception -&gt; unit" Usage="workflowApplication.OnRequestAbort reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnhandledException">
      <MemberSignature Language="C#" Value="public Func&lt;System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction&gt; OnUnhandledException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Activities.WorkflowApplicationUnhandledExceptionEventArgs, valuetype System.Activities.UnhandledExceptionAction&gt; OnUnhandledException" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.OnUnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Property OnUnhandledException As Func(Of WorkflowApplicationUnhandledExceptionEventArgs, UnhandledExceptionAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ OnUnhandledException { Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ get(); void set(Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnUnhandledException : Func&lt;System.Activities.WorkflowApplicationUnhandledExceptionEventArgs, System.Activities.UnhandledExceptionAction&gt; with get, set" Usage="System.Activities.WorkflowApplication.OnUnhandledException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff685-651">获取或设置当前工作流实例遇到未处理的异常时调用的 <see cref="T:System.Func`2" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-651">Gets or sets the <see cref="T:System.Func`2" /> that is invoked when the current workflow instance encounters an unhandled exception.</span></span></summary>
        <value><span data-ttu-id="ff685-652">工作流实例遇到未处理的异常时调用的委托。</span><span class="sxs-lookup"><span data-stu-id="ff685-652">The delegate that is invoked when a workflow instance encounters an unhandled exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-653">当未在工作流中处理异常时，<xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 和 <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> 都将指示运行时的行为；但 <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> 可以选择将已挂起的工作流保留在持久性存储区中，而 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 无法做到这一点。</span><span class="sxs-lookup"><span data-stu-id="ff685-653">Both <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> and <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> dictate the behavior of the runtime when an exception is not handled in the workflow; however, <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> has the option of leaving a suspended workflow in the persistence store, while <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> does not.</span></span> <span data-ttu-id="ff685-654">原因在于，对已挂起的工作流执行的操作是特定于宿主的，而 <xref:System.Activities.WorkflowApplication> 则相反。</span><span class="sxs-lookup"><span data-stu-id="ff685-654">The reason for this is that what happens to a suspended workflow is host-specific, and <xref:System.Activities.WorkflowApplication> is not.</span></span> <span data-ttu-id="ff685-655">若要使用 <xref:System.Activities.WorkflowApplication> 实现此功能，请创建一个具有此行为的自定义 <xref:System.Activities.Persistence.PersistenceParticipant>。</span><span class="sxs-lookup"><span data-stu-id="ff685-655">To implement this functionality using <xref:System.Activities.WorkflowApplication>, create a custom <xref:System.Activities.Persistence.PersistenceParticipant> that has this behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-656">下面的示例调用了引发异常的工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-656">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="ff685-657">工作流未处理异常，并且 <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> 处理程序已被调用。</span><span class="sxs-lookup"><span data-stu-id="ff685-657">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="ff685-658">将检查 <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> 以提供有关异常的信息，且终止工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-658">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Persist">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-659">将工作流实例保留到实例存储区。</span><span class="sxs-lookup"><span data-stu-id="ff685-659">Persists a workflow instance to an instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-660">如果工作流实例以前是从保留结果加载的，则用于加载工作流的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 将用于保留结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-660">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ff685-661">如果工作流已创建但未保留，则在调用此方法之前必须配置 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否则，在调用此方法时将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-661">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="public void Persist ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Persist() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Persist" />
      <MemberSignature Language="VB.NET" Value="Public Sub Persist ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Persist();" />
      <MemberSignature Language="F#" Value="member this.Persist : unit -&gt; unit" Usage="workflowApplication.Persist " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ff685-662">将工作流实例保留到实例存储区。</span><span class="sxs-lookup"><span data-stu-id="ff685-662">Persists a workflow instance to an instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-663">如果保留操作未在 30 秒内完成，则将引发 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-663">If the persist operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="ff685-664">如果工作流实例以前是从保留结果加载的，则用于加载工作流的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 将用于保留结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-664">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ff685-665">如果工作流已创建但未保留，则在调用此方法之前必须配置 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否则，在调用此方法时将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-665">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-666">下面的示例调用 <xref:System.Activities.WorkflowApplication.Persist%2A>，以便在启动工作流之前保留工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-666">The following example calls <xref:System.Activities.WorkflowApplication.Persist%2A> to persist a workflow instance before the workflow is started.</span></span> <span data-ttu-id="ff685-667">此示例是 `StartAndUnloadInstance` [持久性工作流应用程序](/dotnet/framework/windows-workflow-foundation/samples/persisting-a-workflow-application) 示例中的方法的一部分。</span><span class="sxs-lookup"><span data-stu-id="ff685-667">This example is part of the `StartAndUnloadInstance` method in the [Persisting a Workflow Application](/dotnet/framework/windows-workflow-foundation/samples/persisting-a-workflow-application) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#34](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="public void Persist (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Persist(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Persist (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Persist(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Persist : TimeSpan -&gt; unit" Usage="workflowApplication.Persist timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ff685-668">必须在此时间内完成保留操作的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-668">The interval in which the persist operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="ff685-669">使用指定的超时间隔将工作流实例保留到实例存储区。</span><span class="sxs-lookup"><span data-stu-id="ff685-669">Persists a workflow instance to an instance store using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-670">如果工作流实例以前是从保留结果加载的，则用于加载工作流的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 将用于保留结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-670">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ff685-671">如果工作流已创建但未保留，则在调用此方法之前必须配置 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否则，在调用此方法时将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-671">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-672">下面的示例调用 <xref:System.Activities.WorkflowApplication.Persist%2A>，以便在启动工作流之前保留工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-672">The following example calls <xref:System.Activities.WorkflowApplication.Persist%2A> to persist a workflow instance before the workflow is started.</span></span> <span data-ttu-id="ff685-673">此示例来自 `StartAndUnloadInstance` [持久性工作流应用程序](/dotnet/framework/windows-workflow-foundation/samples/persisting-a-workflow-application) 示例中的方法。</span><span class="sxs-lookup"><span data-stu-id="ff685-673">This example is from the `StartAndUnloadInstance` method in the [Persisting a Workflow Application](/dotnet/framework/windows-workflow-foundation/samples/persisting-a-workflow-application) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#34](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistableIdle">
      <MemberSignature Language="C#" Value="public Func&lt;System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction&gt; PersistableIdle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Activities.WorkflowApplicationIdleEventArgs, valuetype System.Activities.PersistableIdleAction&gt; PersistableIdle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.PersistableIdle" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistableIdle As Func(Of WorkflowApplicationIdleEventArgs, PersistableIdleAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ PersistableIdle { Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ get(); void set(Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PersistableIdle : Func&lt;System.Activities.WorkflowApplicationIdleEventArgs, System.Activities.PersistableIdleAction&gt; with get, set" Usage="System.Activities.WorkflowApplication.PersistableIdle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff685-674">获取或设置当前工作流实例处于空闲状态并可被保留时调用的代理。</span><span class="sxs-lookup"><span data-stu-id="ff685-674">Gets or sets the delegate that is invoked when the current workflow instance is idle and can be persisted.</span></span></summary>
        <value><span data-ttu-id="ff685-675">当前工作流实例处于空闲状态并可被保留时调用的委托。</span><span class="sxs-lookup"><span data-stu-id="ff685-675">The delegate that is invoked when the current workflow instance is idle and can be persisted.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-676">工作流进入空闲状态并可以保留时，将依次调用 <xref:System.Activities.WorkflowApplication.Idle%2A> 和 <xref:System.Activities.WorkflowApplication.PersistableIdle%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-676">When a workflow becomes idle and can be persisted, both <xref:System.Activities.WorkflowApplication.Idle%2A> and <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> are invoked, in that order.</span></span> <span data-ttu-id="ff685-677"><xref:System.Activities.WorkflowApplication.PersistableIdle%2A> 处理程序返回以下 <xref:System.Activities.PersistableIdleAction> 枚举值之一：<xref:System.Activities.PersistableIdleAction.None>、<xref:System.Activities.PersistableIdleAction.Persist> 或 <xref:System.Activities.PersistableIdleAction.Unload>。</span><span class="sxs-lookup"><span data-stu-id="ff685-677">The <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> handler returns one of the <xref:System.Activities.PersistableIdleAction> enumeration values of <xref:System.Activities.PersistableIdleAction.None>, <xref:System.Activities.PersistableIdleAction.Persist>, or <xref:System.Activities.PersistableIdleAction.Unload>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-678">下面的示例处理 <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> 处理程序并指示运行时保留并卸载工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-678">The following example handles the <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> handler and instructs the runtime to persist and unload the workflow.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#26](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResumeBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-679">启动操作以恢复书签。</span><span class="sxs-lookup"><span data-stu-id="ff685-679">Initiates an operation to resume a bookmark.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(class System.Activities.Bookmark bookmark, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResumeBookmark (bookmark As Bookmark, value As Object) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ResumeBookmark : System.Activities.Bookmark * obj -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.ResumeBookmark (bookmark, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark"><span data-ttu-id="ff685-680">要恢复的书签。</span><span class="sxs-lookup"><span data-stu-id="ff685-680">The bookmark to resume.</span></span></param>
        <param name="value"><span data-ttu-id="ff685-681">作为参数传递给书签恢复时所调用的方法的对象。</span><span class="sxs-lookup"><span data-stu-id="ff685-681">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <summary><span data-ttu-id="ff685-682">使用指定的值启动操作以恢复指定的书签。</span><span class="sxs-lookup"><span data-stu-id="ff685-682">Initiates an operation to resume the specified bookmark, using the specified value.</span></span> <span data-ttu-id="ff685-683">要恢复的书签是此前由工作流实例内的活动创建的。</span><span class="sxs-lookup"><span data-stu-id="ff685-683">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="ff685-684">书签恢复操作的结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-684">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-685">书签结果指示恢复操作是成功还是失败。</span><span class="sxs-lookup"><span data-stu-id="ff685-685">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-686">下面的示例创建一个使用 `ReadLine` 活动的工作流，该活动创建一个 <xref:System.Activities.Bookmark>。</span><span class="sxs-lookup"><span data-stu-id="ff685-686">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="ff685-687">该示例启动工作流，一旦创建了 <xref:System.Activities.Bookmark> 并且工作流进入空闲状态，就收集用户输入并恢复书签。</span><span class="sxs-lookup"><span data-stu-id="ff685-687">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#24](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (string bookmarkName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(string bookmarkName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResumeBookmark (bookmarkName As String, value As Object) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::String ^ bookmarkName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ResumeBookmark : string * obj -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.ResumeBookmark (bookmarkName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName"><span data-ttu-id="ff685-688">要恢复的书签的名称。</span><span class="sxs-lookup"><span data-stu-id="ff685-688">The name of the bookmark to be resumed.</span></span></param>
        <param name="value"><span data-ttu-id="ff685-689">作为参数传递给书签恢复时所调用的方法的对象。</span><span class="sxs-lookup"><span data-stu-id="ff685-689">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <summary><span data-ttu-id="ff685-690">使用指定的值启动操作以恢复具有指定名称的书签。</span><span class="sxs-lookup"><span data-stu-id="ff685-690">Initiates an operation to resume the bookmark with the specified name, using the specified value.</span></span> <span data-ttu-id="ff685-691">要恢复的书签是此前由工作流实例内的活动创建的。</span><span class="sxs-lookup"><span data-stu-id="ff685-691">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="ff685-692">书签恢复操作的结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-692">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-693">书签结果指示恢复操作是成功还是失败。</span><span class="sxs-lookup"><span data-stu-id="ff685-693">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-694">下面的示例创建一个使用 `ReadLine` 活动的工作流，该活动创建一个 <xref:System.Activities.Bookmark>。</span><span class="sxs-lookup"><span data-stu-id="ff685-694">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="ff685-695">该示例启动工作流，一旦创建了 <xref:System.Activities.Bookmark> 并且工作流进入空闲状态，就收集用户输入并恢复书签。</span><span class="sxs-lookup"><span data-stu-id="ff685-695">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#22](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResumeBookmark (bookmark As Bookmark, value As Object, timeout As TimeSpan) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.ResumeBookmark : System.Activities.Bookmark * obj * TimeSpan -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.ResumeBookmark (bookmark, value, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="bookmark"><span data-ttu-id="ff685-696">要恢复的书签。</span><span class="sxs-lookup"><span data-stu-id="ff685-696">The bookmark to resume.</span></span></param>
        <param name="value"><span data-ttu-id="ff685-697">作为参数传递给书签恢复时所调用的方法的对象。</span><span class="sxs-lookup"><span data-stu-id="ff685-697">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="timeout"><span data-ttu-id="ff685-698">必须在此期间恢复书签的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="ff685-698">The time interval during which the bookmark must be resumed.</span></span></param>
        <summary><span data-ttu-id="ff685-699">使用指定的值和超时间隔启动操作以恢复指定的书签。</span><span class="sxs-lookup"><span data-stu-id="ff685-699">Initiates an operation to resume the specified bookmark, using the specified value and time-out interval.</span></span> <span data-ttu-id="ff685-700">要恢复的书签是此前由工作流实例内的活动创建的。</span><span class="sxs-lookup"><span data-stu-id="ff685-700">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="ff685-701">书签恢复操作的结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-701">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-702">书签结果指示恢复操作是成功还是失败。</span><span class="sxs-lookup"><span data-stu-id="ff685-702">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-703">下面的示例创建一个使用 `ReadLine` 活动的工作流，该活动创建一个 <xref:System.Activities.Bookmark>。</span><span class="sxs-lookup"><span data-stu-id="ff685-703">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="ff685-704">该示例启动工作流，一旦创建了 <xref:System.Activities.Bookmark> 并且工作流进入空闲状态，就收集用户输入并恢复书签。</span><span class="sxs-lookup"><span data-stu-id="ff685-704">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#25](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (string bookmarkName, object value, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(string bookmarkName, object value, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResumeBookmark (bookmarkName As String, value As Object, timeout As TimeSpan) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.ResumeBookmark : string * obj * TimeSpan -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowApplication.ResumeBookmark (bookmarkName, value, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="bookmarkName"><span data-ttu-id="ff685-705">要恢复的书签的名称。</span><span class="sxs-lookup"><span data-stu-id="ff685-705">The name of the bookmark to be resumed.</span></span></param>
        <param name="value"><span data-ttu-id="ff685-706">作为参数传递给书签恢复时所调用的方法的对象。</span><span class="sxs-lookup"><span data-stu-id="ff685-706">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span></span></param>
        <param name="timeout"><span data-ttu-id="ff685-707">必须在此期间恢复书签的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="ff685-707">The time interval during which the bookmark must be resumed.</span></span></param>
        <summary><span data-ttu-id="ff685-708">使用指定的值和超时间隔启动操作以恢复具有指定名称的书签。</span><span class="sxs-lookup"><span data-stu-id="ff685-708">Initiates an operation to resume the bookmark with the specified name, using the specified value and time-out interval.</span></span> <span data-ttu-id="ff685-709">要恢复的书签是此前由工作流实例内的活动创建的。</span><span class="sxs-lookup"><span data-stu-id="ff685-709">The bookmark to be resumed is previously created by an activity within the workflow instance.</span></span></summary>
        <returns><span data-ttu-id="ff685-710">书签恢复操作的结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-710">The result of the bookmark resumption operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-711">书签结果指示恢复操作是成功还是失败。</span><span class="sxs-lookup"><span data-stu-id="ff685-711">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-712">下面的示例创建一个使用 `ReadLine` 活动的工作流，该活动创建一个 <xref:System.Activities.Bookmark>。</span><span class="sxs-lookup"><span data-stu-id="ff685-712">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="ff685-713">该示例启动工作流，一旦创建了 <xref:System.Activities.Bookmark> 并且工作流进入空闲状态，就收集用户输入并恢复书签。</span><span class="sxs-lookup"><span data-stu-id="ff685-713">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#22](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Run">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-714">开始或恢复执行工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-714">Begins or resumes the execution of a workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-715">调用此方法可开始执行新创建的工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-715">Call this method to initiate execution of a newly created workflow instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Run" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run();" />
      <MemberSignature Language="F#" Value="member this.Run : unit -&gt; unit" Usage="workflowApplication.Run " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ff685-716">开始或恢复执行工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-716">Begins or resumes the execution of a workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-717">调用此方法可开始执行新创建的工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-717">Call this method to initiate execution of a newly created workflow instance.</span></span>  
  
 <span data-ttu-id="ff685-718">如果运行操作未在 30 秒内完成，则将引发 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-718">If the run operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-719">下面的示例使用 <xref:System.Activities.WorkflowApplication> 承载一个工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-719">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ff685-720">该示例使用指定的工作流定义构造 <xref:System.Activities.WorkflowApplication>，处理所需的工作流生命周期事件，并通过调用 <xref:System.Activities.WorkflowApplication.Run%2A> 来调用工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-720">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ff685-721">完成工作流时，会向控制台显示以下输出。</span><span class="sxs-lookup"><span data-stu-id="ff685-721">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Run(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Run : TimeSpan -&gt; unit" Usage="workflowApplication.Run timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ff685-722">调用此方法可开始执行新创建的工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-722">Call this method to initiate execution of a newly created workflow instance.</span></span>  
  
<span data-ttu-id="ff685-723">必须在此时间内完成运行操作的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-723">The interval in which the run operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="ff685-724">使用指定的超时间隔开始或恢复执行工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-724">Begins or resumes the execution of a workflow instance using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-725">请注意，与 <xref:System.Activities.WorkflowInvoker.Invoke%2A> 不同，此方法将仅在工作流未在指定的时间内启动的情况下（而不是需要在指定的时间内完成）超时。</span><span class="sxs-lookup"><span data-stu-id="ff685-725">Note that unlike <xref:System.Activities.WorkflowInvoker.Invoke%2A>, this method will time out only if the workflow doesn't start in the specified amount of time, rather than needing to complete in the specified amount of time.</span></span> <span data-ttu-id="ff685-726">原因在于，<xref:System.Activities.WorkflowInvoker.Invoke%2A> 以同步方式执行工作流（阻止主机线程），而 <xref:System.Activities.WorkflowApplication.Run%2A> 以异步方式执行工作流（仅在启动工作流所需的时间内阻止主机线程）。</span><span class="sxs-lookup"><span data-stu-id="ff685-726">The reason for this is that <xref:System.Activities.WorkflowInvoker.Invoke%2A> executes the workflow synchronously (blocking the host thread), while <xref:System.Activities.WorkflowApplication.Run%2A> executes asynchronously, only blocking the host thread for the amount of time it takes the workflow to start.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-727">下面的示例使用 <xref:System.Activities.WorkflowApplication> 承载一个工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-727">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ff685-728">该示例使用指定的工作流定义构造 <xref:System.Activities.WorkflowApplication>，处理所需的工作流生命周期事件，并通过调用 <xref:System.Activities.WorkflowApplication.Run%2A> 来调用工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-728">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ff685-729">完成工作流时，会向控制台显示以下输出。</span><span class="sxs-lookup"><span data-stu-id="ff685-729">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInstanceKeys">
      <MemberSignature Language="C#" Value="protected internal override bool SupportsInstanceKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInstanceKeys" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.SupportsInstanceKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property SupportsInstanceKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool SupportsInstanceKeys { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsInstanceKeys : bool" Usage="System.Activities.WorkflowApplication.SupportsInstanceKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Terminate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-730">终止工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-730">Terminates a workflow instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(Exception ^ reason);" />
      <MemberSignature Language="F#" Value="member this.Terminate : Exception -&gt; unit" Usage="workflowApplication.Terminate reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="ff685-731">终止工作流实例的原因。</span><span class="sxs-lookup"><span data-stu-id="ff685-731">The reason for terminating the workflow instance.</span></span></param>
        <summary><span data-ttu-id="ff685-732">使用指定的异常终止工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-732">Terminates a workflow instance using the specified exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-733">此方法会安排对工作流实例的终止操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-733">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="ff685-734">若要在终止完成后得到通知，请使用 <xref:System.Activities.WorkflowApplication.Completed%2A> 处理程序。</span><span class="sxs-lookup"><span data-stu-id="ff685-734">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="ff685-735">默认情况下，<xref:System.Activities.WorkflowApplication.Terminate%2A> 操作必须在 30 秒内完成，否则将引发 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-735">By default, the <xref:System.Activities.WorkflowApplication.Terminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-736">下面的示例使用 <xref:System.Activities.WorkflowApplication> 承载一个工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-736">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ff685-737">该示例使用指定的工作流定义构造 <xref:System.Activities.WorkflowApplication>，处理所需的工作流生命周期事件，并通过调用 <xref:System.Activities.WorkflowApplication.Run%2A> 来调用工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-737">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ff685-738">启动工作流之后，将调用 <xref:System.Activities.WorkflowApplication.Terminate%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-738">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="ff685-739">终止工作流时，会向控制台显示以下输出。</span><span class="sxs-lookup"><span data-stu-id="ff685-739">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow e6b33409-f010-49f1-82ce-56f8baabe5e5 Terminated.  
Exception: System.ApplicationException  
Terminating the workflow.   
Workflow e6b33409-f010-49f1-82ce-56f8baabe5e5 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#16](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ reason);" />
      <MemberSignature Language="F#" Value="member this.Terminate : string -&gt; unit" Usage="workflowApplication.Terminate reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="ff685-740">终止工作流实例的原因。</span><span class="sxs-lookup"><span data-stu-id="ff685-740">The reason for terminating the workflow instance.</span></span></param>
        <summary><span data-ttu-id="ff685-741">使用指定的错误消息终止工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-741">Terminates a workflow instance using the specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-742">此方法会安排对工作流实例的终止操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-742">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="ff685-743">若要在终止完成后得到通知，请使用 <xref:System.Activities.WorkflowApplication.Completed%2A> 处理程序。</span><span class="sxs-lookup"><span data-stu-id="ff685-743">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="ff685-744">默认情况下，<xref:System.Activities.WorkflowApplication.Terminate%2A> 操作必须在 30 秒内完成，否则将引发 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-744">By default, the <xref:System.Activities.WorkflowApplication.Terminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-745">下面的示例使用 <xref:System.Activities.WorkflowApplication> 承载一个工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-745">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ff685-746">该示例使用指定的工作流定义构造 <xref:System.Activities.WorkflowApplication>，处理所需的工作流生命周期事件，并通过调用 <xref:System.Activities.WorkflowApplication.Run%2A> 来调用工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-746">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ff685-747">启动工作流之后，将调用 <xref:System.Activities.WorkflowApplication.Terminate%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-747">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="ff685-748">终止工作流时，会向控制台显示以下输出。</span><span class="sxs-lookup"><span data-stu-id="ff685-748">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow f87c6f91-4fe4-40b9-b7cb-4f1bd071bf84 Terminated.   
Exception: System.Activities.WorkflowApplicationTerminatedException  
Terminating the workflow.   
Workflow f87c6f91-4fe4-40b9-b7cb-4f1bd071bf84 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#18](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (Exception reason, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(class System.Exception reason, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As Exception, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(Exception ^ reason, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Terminate : Exception * TimeSpan -&gt; unit" Usage="workflowApplication.Terminate (reason, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="ff685-749">终止工作流实例的原因。</span><span class="sxs-lookup"><span data-stu-id="ff685-749">The reason for terminating the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="ff685-750">必须在此时间内完成 <see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" /> 操作的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-750">The interval in which the <see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="ff685-751">使用指定的异常和超时间隔终止工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-751">Terminates a workflow instance using the specified exception and time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-752">此方法会安排对工作流的终止操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-752">This method schedules the termination of the workflow.</span></span> <span data-ttu-id="ff685-753">若要在终止完成后得到通知，请使用 <xref:System.Activities.WorkflowApplication.Completed%2A> 处理程序。</span><span class="sxs-lookup"><span data-stu-id="ff685-753">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-754">下面的示例使用 <xref:System.Activities.WorkflowApplication> 承载一个工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-754">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ff685-755">该示例使用指定的工作流定义构造 <xref:System.Activities.WorkflowApplication>，处理所需的工作流生命周期事件，并通过调用 <xref:System.Activities.WorkflowApplication.Run%2A> 来调用工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-755">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ff685-756">启动工作流之后，将调用 <xref:System.Activities.WorkflowApplication.Terminate%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-756">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="ff685-757">终止工作流时，会向控制台显示以下输出。</span><span class="sxs-lookup"><span data-stu-id="ff685-757">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow de28efe5-9057-472b-8d95-899c249893c5 Terminated.  
Exception: System.ApplicationException  
Terminating the workflow.   
Workflow de28efe5-9057-472b-8d95-899c249893c5 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#17](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string reason, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string reason, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As String, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ reason, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Terminate : string * TimeSpan -&gt; unit" Usage="workflowApplication.Terminate (reason, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="ff685-758">终止工作流实例的原因。</span><span class="sxs-lookup"><span data-stu-id="ff685-758">The reason for terminating the workflow instance.</span></span></param>
        <param name="timeout"><span data-ttu-id="ff685-759">必须在此时间内完成 <see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" /> 操作的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-759">The interval in which the <see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="ff685-760">使用指定的错误消息和超时间隔终止工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-760">Terminates a workflow instance using the specified error message and time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-761">此方法会安排对工作流实例的终止操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-761">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="ff685-762">若要在终止完成后得到通知，请使用 <xref:System.Activities.WorkflowApplication.Completed%2A> 处理程序。</span><span class="sxs-lookup"><span data-stu-id="ff685-762">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-763">下面的示例使用 <xref:System.Activities.WorkflowApplication> 承载一个工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-763">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="ff685-764">该示例使用指定的工作流定义构造 <xref:System.Activities.WorkflowApplication>，处理所需的工作流生命周期事件，并通过调用 <xref:System.Activities.WorkflowApplication.Run%2A> 来调用工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-764">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="ff685-765">启动工作流之后，将调用 <xref:System.Activities.WorkflowApplication.Terminate%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-765">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="ff685-766">终止工作流时，会向控制台显示以下输出。</span><span class="sxs-lookup"><span data-stu-id="ff685-766">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 2897d2ef-377e-4224-ae93-5c19b38f487c Terminated.   
Exception: System.Activities.WorkflowApplicationTerminatedException  
Terminating the workflow.   
Workflow 2897d2ef-377e-4224-ae93-5c19b38f487c unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#19](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Unload">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff685-767">保留或卸载工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-767">Persists and unloads a workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-768">默认情况下，卸载操作必须在 30 秒内完成，否则将引发 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-768">By default, the unload operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="ff685-769">如果工作流实例以前是从保留结果加载的，则用于加载工作流的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 将用于保留结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-769">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ff685-770">如果工作流已创建但未保留，则在调用此方法之前必须配置 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否则，在调用此方法时将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-770">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload();" />
      <MemberSignature Language="F#" Value="member this.Unload : unit -&gt; unit" Usage="workflowApplication.Unload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ff685-771">保留或卸载工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-771">Persists and unloads a workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-772">默认情况下，卸载操作必须在 30 秒内完成，否则将引发 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-772">By default, the unload operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="ff685-773">如果工作流实例以前是从保留结果加载的，则用于加载工作流的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 将用于保留结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-773">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ff685-774">如果工作流已创建但未保留，则在调用此方法之前必须配置 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否则，在调用此方法时将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-774">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-775">下面的代码示例是 [NoPersistScope 活动](/dotnet/framework/windows-workflow-foundation/samples/nopersistscope-activity) 示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="ff685-775">The following code example is part of the [NoPersistScope Activity](/dotnet/framework/windows-workflow-foundation/samples/nopersistscope-activity) sample.</span></span> <span data-ttu-id="ff685-776">在本示例中，工作流处于空闲状态，并且主机应用程序正在等待用户输入。</span><span class="sxs-lookup"><span data-stu-id="ff685-776">In this example, the workflow is idle and the host application is waiting for user input.</span></span> <span data-ttu-id="ff685-777">如果用户选择卸载，将调用 <xref:System.Activities.WorkflowApplication.Unload%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-777">If the user chooses to unload, <xref:System.Activities.WorkflowApplication.Unload%2A> is called.</span></span> <span data-ttu-id="ff685-778">如果卸载成功，将保留工作流，并从内存中卸载工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-778">If successful, the workflow is persisted and unloaded from memory.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Unload : TimeSpan -&gt; unit" Usage="workflowApplication.Unload timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ff685-779">必须在此时间内完成卸载操作的时间间隔，否则，将取消该操作并引发 <see cref="T:System.TimeoutException" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-779">The interval in which the unload operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <summary><span data-ttu-id="ff685-780">使用指定的超时间隔保留和卸载工作流实例。</span><span class="sxs-lookup"><span data-stu-id="ff685-780">Persists and unloads a workflow instance using the specified time-out interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff685-781">如果工作流实例以前是从保留结果加载的，则用于加载工作流的相同 <xref:System.Runtime.DurableInstancing.InstanceStore> 将用于保留结果。</span><span class="sxs-lookup"><span data-stu-id="ff685-781">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="ff685-782">如果工作流已创建但未保留，则在调用此方法之前必须配置 <xref:System.Activities.WorkflowApplication.InstanceStore%2A>，否则，在调用此方法时将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ff685-782">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff685-783">下面的代码示例是 [NoPersistScope 活动](/dotnet/framework/windows-workflow-foundation/samples/nopersistscope-activity) 示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="ff685-783">The following code example is part of the [NoPersistScope Activity](/dotnet/framework/windows-workflow-foundation/samples/nopersistscope-activity) sample.</span></span> <span data-ttu-id="ff685-784">在本示例中，工作流处于空闲状态，并且主机应用程序正在等待用户输入。</span><span class="sxs-lookup"><span data-stu-id="ff685-784">In this example, the workflow is idle and the host application is waiting for user input.</span></span> <span data-ttu-id="ff685-785">如果用户选择卸载，将调用 <xref:System.Activities.WorkflowApplication.Unload%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-785">If the user chooses to unload, <xref:System.Activities.WorkflowApplication.Unload%2A> is called.</span></span> <span data-ttu-id="ff685-786">如果卸载成功，将保留工作流，并从内存中卸载工作流。</span><span class="sxs-lookup"><span data-stu-id="ff685-786">If successful, the workflow is persisted and unloaded from memory.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unloaded">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationEventArgs&gt; Unloaded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationEventArgs&gt; Unloaded" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Unloaded" />
      <MemberSignature Language="VB.NET" Value="Public Property Unloaded As Action(Of WorkflowApplicationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ Unloaded { Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Unloaded : Action&lt;System.Activities.WorkflowApplicationEventArgs&gt; with get, set" Usage="System.Activities.WorkflowApplication.Unloaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ff685-787">获取或设置卸载当前工作流时调用的 <see cref="T:System.Action`1" />。</span><span class="sxs-lookup"><span data-stu-id="ff685-787">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the current workflow unloads.</span></span></summary>
        <value><span data-ttu-id="ff685-788">卸载工作流实例时调用的操作。</span><span class="sxs-lookup"><span data-stu-id="ff685-788">An action that is invoked when a workflow instance is unloaded.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ff685-789">下面的代码示例检查传递给 <xref:System.Activities.WorkflowApplicationEventArgs> 实例的 <xref:System.Activities.WorkflowApplication.Unloaded%2A> 处理程序的 <xref:System.Activities.WorkflowApplication>，并显示已卸载的工作流的 <xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A>。</span><span class="sxs-lookup"><span data-stu-id="ff685-789">The following code example inspects the <xref:System.Activities.WorkflowApplicationEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Unloaded%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays the <xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A> of the workflow that was unloaded.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#3](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
