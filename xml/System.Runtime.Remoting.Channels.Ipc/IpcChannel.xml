<Type Name="IpcChannel" FullName="System.Runtime.Remoting.Channels.Ipc.IpcChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ff79354704b957ca0997bc4533155c848e1cc7a1" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="78815248" /></Metadata><TypeSignature Language="C#" Value="public class IpcChannel : System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.IChannelSender, System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IpcChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelReceiver, class System.Runtime.Remoting.Channels.IChannelSender, class System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" />
  <TypeSignature Language="VB.NET" Value="Public Class IpcChannel&#xA;Implements IChannelReceiver, IChannelSender, ISecurableChannel" />
  <TypeSignature Language="C++ CLI" Value="public ref class IpcChannel : System::Runtime::Remoting::Channels::IChannelReceiver, System::Runtime::Remoting::Channels::IChannelSender, System::Runtime::Remoting::Channels::ISecurableChannel" />
  <TypeSignature Language="F#" Value="type IpcChannel = class&#xA;    interface IChannelReceiver&#xA;    interface IChannelSender&#xA;    interface IChannel&#xA;    interface ISecurableChannel" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
  <TypeSignature Language="F#" Value="type IpcChannel = class&#xA;    interface IChannelReceiver&#xA;    interface IChannel&#xA;    interface IChannelSender&#xA;    interface ISecurableChannel" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelReceiver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSender</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.ISecurableChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="6877b-101">提供使用 IPC 协议传输消息的信道实现。</span><span class="sxs-lookup"><span data-stu-id="6877b-101">Provides a channel implementation that uses the IPC protocol to transmit messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="6877b-102">The.NET Framework 远程处理基础结构使用通道传输远程调用。</span><span class="sxs-lookup"><span data-stu-id="6877b-102">Channels are used by the.NET Framework remoting infrastructure to transport remote calls.</span></span> <span data-ttu-id="6877b-103">当客户端调用远程对象时，调用将被序列化为客户端通道发送并由服务器通道接收的消息。</span><span class="sxs-lookup"><span data-stu-id="6877b-103">When a client calls a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel.</span></span> <span data-ttu-id="6877b-104">收到消息后，将对其进行反序列化和处理。</span><span class="sxs-lookup"><span data-stu-id="6877b-104">After the message is received, it is deserialized and processed.</span></span> <span data-ttu-id="6877b-105">任何返回值由服务器通道传输并由客户端通道接收。</span><span class="sxs-lookup"><span data-stu-id="6877b-105">Any returned values are transmitted by the server channel and received by the client channel.</span></span>  
  
 <span data-ttu-id="6877b-106"><xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel>类是一个便捷的类，它将 <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> 类和类的功能结合起来 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> 。</span><span class="sxs-lookup"><span data-stu-id="6877b-106">The <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> class is a convenience class combining the functionality of the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> class and the <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="6877b-107">在 `exclusiveAddressUse` 参数中将属性设置为时 `false` `properties` ， <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> 可以为同一个命名管道注册多个对象。</span><span class="sxs-lookup"><span data-stu-id="6877b-107">When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe.</span></span> <span data-ttu-id="6877b-108">在这种情况下，请求可以到达注册的任何通道。</span><span class="sxs-lookup"><span data-stu-id="6877b-108">In such a case requests can go to any of the channels registered.</span></span> <span data-ttu-id="6877b-109">仅当同时使用 ALCs 时，才会将此设置视为安全设置。</span><span class="sxs-lookup"><span data-stu-id="6877b-109">This setting is considered secure only if ALCs are also used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6877b-110">下面的代码示例演示如何使用 <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> 设置远程处理服务器及其客户端。</span><span class="sxs-lookup"><span data-stu-id="6877b-110">The following code example shows how to use a <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> to set up a remoting server and its client.</span></span> <span data-ttu-id="6877b-111">该示例包含三个部分：</span><span class="sxs-lookup"><span data-stu-id="6877b-111">The example contains three parts:</span></span>  
  
-   <span data-ttu-id="6877b-112">服务器</span><span class="sxs-lookup"><span data-stu-id="6877b-112">A server</span></span>  
  
-   <span data-ttu-id="6877b-113">客户端</span><span class="sxs-lookup"><span data-stu-id="6877b-113">A client</span></span>  
  
-   <span data-ttu-id="6877b-114">服务器和客户端使用的远程对象。</span><span class="sxs-lookup"><span data-stu-id="6877b-114">A remote object used by the server and the client.</span></span>  
  
 <span data-ttu-id="6877b-115">下面的代码示例演示了一个服务器。</span><span class="sxs-lookup"><span data-stu-id="6877b-115">The following code example shows a server.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CPP/server.cpp#10)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CS/server.cs#10)]  
  
 <span data-ttu-id="6877b-116">下面的代码示例演示了此服务器的客户端。</span><span class="sxs-lookup"><span data-stu-id="6877b-116">The following code example shows a client for this server.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#20](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CPP/client.cpp#20)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#20](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CS/client.cs#20)]  
  
 <span data-ttu-id="6877b-117">下面的代码示例显示了服务器和客户端使用的远程对象。</span><span class="sxs-lookup"><span data-stu-id="6877b-117">The following code example shows the remote object used by the server and the client.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#30](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CPP/common.cpp#30)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#30](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CS/common.cs#30)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6877b-118">初始化 <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6877b-118">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcChannel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6877b-119">初始化 <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> 类的新实例，仅激活客户端信道，不激活服务器信道。</span><span class="sxs-lookup"><span data-stu-id="6877b-119">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> class, activating only a client channel, and not a server channel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6877b-120">下面的代码示例演示如何使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6877b-120">The following code example shows how to use this constructor.</span></span> <span data-ttu-id="6877b-121">此代码示例是为类提供的更大示例的一部分 <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> 。</span><span class="sxs-lookup"><span data-stu-id="6877b-121">This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> class.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#21](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CPP/client.cpp#21)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#21](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CS/client.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcChannel (string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (portName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcChannel(System::String ^ portName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcChannel : string -&gt; System.Runtime.Remoting.Channels.Ipc.IpcChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcChannel portName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="portName"><span data-ttu-id="6877b-122">IPC 端口的名称。</span><span class="sxs-lookup"><span data-stu-id="6877b-122">The name of the IPC port.</span></span></param>
        <summary><span data-ttu-id="6877b-123">使用侦听指定端口的服务器信道初始化 <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6877b-123">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> class with a server channel that listens on the specified IPC port.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6877b-124">下面的代码示例演示如何使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6877b-124">The following code example shows how to use this constructor.</span></span> <span data-ttu-id="6877b-125">此代码示例是为类提供的更大示例的一部分 <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> 。</span><span class="sxs-lookup"><span data-stu-id="6877b-125">This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> class.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#11](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CPP/server.cpp#11)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#11](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CS/server.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IClientChannelSinkProvider clientSinkProvider, System.Runtime.Remoting.Channels.IServerChannelSinkProvider serverSinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IClientChannelSinkProvider clientSinkProvider, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider serverSinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, clientSinkProvider As IClientChannelSinkProvider, serverSinkProvider As IServerChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IClientChannelSinkProvider ^ clientSinkProvider, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ serverSinkProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcChannel : System.Collections.IDictionary * System.Runtime.Remoting.Channels.IClientChannelSinkProvider * System.Runtime.Remoting.Channels.IServerChannelSinkProvider -&gt; System.Runtime.Remoting.Channels.Ipc.IpcChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcChannel (properties, clientSinkProvider, serverSinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="clientSinkProvider" Type="System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />
        <Parameter Name="serverSinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="6877b-126">一个 <see cref="T:System.Collections.IDictionary" /> 集合，为客户端和服务器信道要使用的配置属性指定值。</span><span class="sxs-lookup"><span data-stu-id="6877b-126">A <see cref="T:System.Collections.IDictionary" /> collection specifying values for configuration properties to be used by the client and server channels.</span></span></param>
        <param name="clientSinkProvider"><span data-ttu-id="6877b-127">客户端信道要使用的 <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="6877b-127">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> implementation to be used by the client channel.</span></span></param>
        <param name="serverSinkProvider"><span data-ttu-id="6877b-128">服务器信道要使用的 <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="6877b-128">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the server channel.</span></span></param>
        <summary><span data-ttu-id="6877b-129">使用指定的配置属性和接收器初始化 <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6877b-129">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> class with the specified configuration properties and sinks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6877b-130">有关通道配置属性的详细信息，请参阅[通道和格式化程序配置属性](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="6877b-130">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span></span>  
  
 <span data-ttu-id="6877b-131">信道接收器提供了一个插件点，该插件点允许访问流过通道的基础消息，以及用于将消息发送到远程对象的传输机制所使用的流。</span><span class="sxs-lookup"><span data-stu-id="6877b-131">Channel sinks provide a plug-in point that allows access to the underlying messages flowing through the channel as well as the stream used by the transport mechanism to send messages to a remote object.</span></span> <span data-ttu-id="6877b-132">通道接收器还负责在客户端和服务器之间传输消息。</span><span class="sxs-lookup"><span data-stu-id="6877b-132">Channel sinks are also responsible for transporting messages between the client and the server.</span></span> <span data-ttu-id="6877b-133">通道接收器在链中链接在一起，并且所有通道消息在最终序列化并传输消息之前都流过此接收器链。</span><span class="sxs-lookup"><span data-stu-id="6877b-133">Channel sinks are linked together in a chain, and all channel messages flow through this chain of sinks before the message is finally serialized and transported.</span></span> <span data-ttu-id="6877b-134">如果不需要接收器功能，请将 `clientSinkProvider` 和参数设置 `serverSinkProvider` 为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="6877b-134">If you do not require sink functionality, set the `clientSinkProvider` and `serverSinkProvider` parameters to `null`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="6877b-135">在 `exclusiveAddressUse` 参数中将属性设置为时 `false` `properties` ， <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> 可以为同一个命名管道注册多个对象。</span><span class="sxs-lookup"><span data-stu-id="6877b-135">When setting the `exclusiveAddressUse` property to `false` in the `properties` argument, several <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> objects can be registered for the same named pipe.</span></span> <span data-ttu-id="6877b-136">在这种情况下，请求可以到达注册的任何通道。</span><span class="sxs-lookup"><span data-stu-id="6877b-136">In such a case requests can go to any of the channels registered.</span></span> <span data-ttu-id="6877b-137">仅当同时使用 ALCs 时，才会将此设置视为安全设置。</span><span class="sxs-lookup"><span data-stu-id="6877b-137">This setting is considered secure only if ALCs are also used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6877b-138">下面的代码示例演示如何使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6877b-138">The following code example shows how to use this constructor.</span></span> <span data-ttu-id="6877b-139">此代码示例是为类提供的更大示例的一部分 <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> 。</span><span class="sxs-lookup"><span data-stu-id="6877b-139">This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> class.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#41](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CPP/server2.cpp#41)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#41](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CS/server2.cs#41)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)"><span data-ttu-id="6877b-140">通道和格式化程序配置属性</span><span class="sxs-lookup"><span data-stu-id="6877b-140">Channel and Formatter Configuration Properties</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IClientChannelSinkProvider clientSinkProvider, System.Runtime.Remoting.Channels.IServerChannelSinkProvider serverSinkProvider, System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IClientChannelSinkProvider clientSinkProvider, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider serverSinkProvider, class System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, clientSinkProvider As IClientChannelSinkProvider, serverSinkProvider As IServerChannelSinkProvider, securityDescriptor As CommonSecurityDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IClientChannelSinkProvider ^ clientSinkProvider, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ serverSinkProvider, System::Security::AccessControl::CommonSecurityDescriptor ^ securityDescriptor);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcChannel : System.Collections.IDictionary * System.Runtime.Remoting.Channels.IClientChannelSinkProvider * System.Runtime.Remoting.Channels.IServerChannelSinkProvider * System.Security.AccessControl.CommonSecurityDescriptor -&gt; System.Runtime.Remoting.Channels.Ipc.IpcChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcChannel (properties, clientSinkProvider, serverSinkProvider, securityDescriptor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="clientSinkProvider" Type="System.Runtime.Remoting.Channels.IClientChannelSinkProvider" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="serverSinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="securityDescriptor" Type="System.Security.AccessControl.CommonSecurityDescriptor" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="6877b-141">一个 <see cref="T:System.Collections.IDictionary" /> 集合，为客户端和服务器信道要使用的配置属性指定值。</span><span class="sxs-lookup"><span data-stu-id="6877b-141">A <see cref="T:System.Collections.IDictionary" /> collection specifying values for configuration properties to be used by the client and server channels.</span></span></param>
        <param name="clientSinkProvider"><span data-ttu-id="6877b-142">客户端信道要使用的 <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="6877b-142">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> implementation to be used by the client channel.</span></span></param>
        <param name="serverSinkProvider"><span data-ttu-id="6877b-143">服务器信道要使用的 <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="6877b-143">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the server channel.</span></span></param>
        <param name="securityDescriptor"><span data-ttu-id="6877b-144">安全说明符。</span><span class="sxs-lookup"><span data-stu-id="6877b-144">The security descriptor.</span></span></param>
        <summary><span data-ttu-id="6877b-145">使用指定的配置属性和接收器初始化 <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6877b-145">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> class with the specified configuration properties and sinks.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelData">
      <MemberSignature Language="C#" Value="public object ChannelData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChannelData" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelData As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ChannelData { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelData : obj" Usage="System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelData" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannelReceiver.ChannelData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6877b-146">获取信道特定数据。</span><span class="sxs-lookup"><span data-stu-id="6877b-146">Gets the channel-specific data.</span></span></summary>
        <value><span data-ttu-id="6877b-147">包含特定于信道的数据的 <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="6877b-147">A <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> instance that contains channel-specific data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6877b-148">尽管作为的实例返回 <xref:System.Object?displayProperty=nameWithType> ，但可以将此属性的值强制转换为 <xref:System.Runtime.Remoting.Channels.ChannelDataStore> 说明对象所侦听的通道的实例 <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> 。</span><span class="sxs-lookup"><span data-stu-id="6877b-148">Although returned as an instance of <xref:System.Object?displayProperty=nameWithType>, the value of this property can be cast to an instance of <xref:System.Runtime.Remoting.Channels.ChannelDataStore> describing the channel to which the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> object listens.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6877b-149">下面的代码示例说明如何使用 <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelData%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="6877b-149">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelData%2A> property.</span></span> <span data-ttu-id="6877b-150">此代码示例是为类提供的更大示例的一部分 <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> 。</span><span class="sxs-lookup"><span data-stu-id="6877b-150">This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> class.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#15](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CPP/server.cpp#15)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#15](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CS/server.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelName">
      <MemberSignature Language="C#" Value="public string ChannelName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChannelName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChannelName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelName : string" Usage="System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannel.ChannelName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6877b-151">获取当前信道的名称。</span><span class="sxs-lookup"><span data-stu-id="6877b-151">Gets the name of the current channel.</span></span></summary>
        <value><span data-ttu-id="6877b-152">一个 <see cref="T:System.String" /> 包含信道名称。</span><span class="sxs-lookup"><span data-stu-id="6877b-152">A <see cref="T:System.String" /> that contains the name of the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6877b-153">每个已注册的通道都具有唯一的名称。</span><span class="sxs-lookup"><span data-stu-id="6877b-153">Every registered channel has a unique name.</span></span> <span data-ttu-id="6877b-154">此名称用于在调用时检索特定通道 <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A> 。</span><span class="sxs-lookup"><span data-stu-id="6877b-154">The name is used to retrieve a specific channel when calling <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.</span></span> <span data-ttu-id="6877b-155">默认名称为 "ipc"。</span><span class="sxs-lookup"><span data-stu-id="6877b-155">The default name is "ipc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6877b-156">下面的代码示例说明如何使用 <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelName%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="6877b-156">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelName%2A> property.</span></span> <span data-ttu-id="6877b-157">此代码示例是为类提供的更大示例的一部分 <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> 。</span><span class="sxs-lookup"><span data-stu-id="6877b-157">This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> class.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#12](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CPP/server.cpp#12)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#12](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CS/server.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelPriority">
      <MemberSignature Language="C#" Value="public int ChannelPriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelPriority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelPriority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChannelPriority { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelPriority : int" Usage="System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelPriority" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannel.ChannelPriority</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6877b-158">获取当前信道的优先级。</span><span class="sxs-lookup"><span data-stu-id="6877b-158">Gets the priority of the current channel.</span></span></summary>
        <value><span data-ttu-id="6877b-159">一个整数，表示分配给该信道的优先级。</span><span class="sxs-lookup"><span data-stu-id="6877b-159">An integer that represents the priority assigned to the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6877b-160">默认优先级为20。</span><span class="sxs-lookup"><span data-stu-id="6877b-160">The default priority is 20.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6877b-161">下面的代码示例说明如何使用 <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelPriority%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="6877b-161">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel.ChannelPriority%2A> property.</span></span> <span data-ttu-id="6877b-162">此代码示例是为类提供的更大示例的一部分 <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> 。</span><span class="sxs-lookup"><span data-stu-id="6877b-162">This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> class.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#13](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CPP/server.cpp#13)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#13](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CS/server.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink (string url, object remoteChannelData, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink(string url, object remoteChannelData, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcChannel.CreateMessageSink(System.String,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMessageSink (url As String, remoteChannelData As Object, ByRef objectURI As String) As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessageSink ^ CreateMessageSink(System::String ^ url, System::Object ^ remoteChannelData, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateMessageSink : string * obj * string -&gt; System.Runtime.Remoting.Messaging.IMessageSink&#xA;override this.CreateMessageSink : string * obj * string -&gt; System.Runtime.Remoting.Messaging.IMessageSink" Usage="ipcChannel.CreateMessageSink (url, remoteChannelData, objectURI)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink(System.String,System.Object,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="remoteChannelData" Type="System.Object" />
        <Parameter Name="objectURI" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="6877b-163">新接收器应将消息传递到的 URL。</span><span class="sxs-lookup"><span data-stu-id="6877b-163">The URL to which the new sink should deliver messages.</span></span> <span data-ttu-id="6877b-164">可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6877b-164">Can be <see langword="null" />.</span></span></param>
        <param name="remoteChannelData"><span data-ttu-id="6877b-165">新接收器应将消息传递到的远程主机的信道数据对象。</span><span class="sxs-lookup"><span data-stu-id="6877b-165">The channel data object of the remote host to which the new sink should deliver messages.</span></span> <span data-ttu-id="6877b-166">可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6877b-166">Can be <see langword="null" />.</span></span></param>
        <param name="objectURI"><span data-ttu-id="6877b-167">此方法返回时，包含新信道消息接收器的 URI，该信道消息接收器将消息传送到指定 URL 或信道数据对象。</span><span class="sxs-lookup"><span data-stu-id="6877b-167">When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object.</span></span> <span data-ttu-id="6877b-168">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="6877b-168">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="6877b-169">返回将消息传送到指定 URL 或信道数据对象的信道消息接收器。</span><span class="sxs-lookup"><span data-stu-id="6877b-169">Returns a channel message sink that delivers messages to the specified URL or channel data object.</span></span></summary>
        <returns><span data-ttu-id="6877b-170">将消息传递给指定 URL 或信道数据对象的信道消息接收器。</span><span class="sxs-lookup"><span data-stu-id="6877b-170">A channel message sink that delivers messages to the specified URL or channel data object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6877b-171"><xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel.CreateMessageSink%2A>方法返回将消息传递到指定 URL 或信道数据对象的信道消息接收器。</span><span class="sxs-lookup"><span data-stu-id="6877b-171">The <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel.CreateMessageSink%2A> method returns a channel message sink that delivers messages to either the specified URL or channel data object.</span></span> <span data-ttu-id="6877b-172">如果 `uri` 参数为 `null` ， `remoteChannelData` 则将用作接收器的目标。</span><span class="sxs-lookup"><span data-stu-id="6877b-172">If the `uri` parameter is `null`, `remoteChannelData` is used as a target for the sink.</span></span> <span data-ttu-id="6877b-173">`url`或 `remoteChannelData` 参数可以为 `null` ，但不能同时为两者。</span><span class="sxs-lookup"><span data-stu-id="6877b-173">Either the `url` or `remoteChannelData` parameters can be `null`, but not both.</span></span>  
  
 <span data-ttu-id="6877b-174">信道接收器提供了一个插件点，该插件点允许访问流过通道的基础消息，以及用于将消息发送到远程对象的传输机制所使用的流。</span><span class="sxs-lookup"><span data-stu-id="6877b-174">Channel sinks provide a plug-in point that allows access to the underlying messages flowing through the channel as well as the stream used by the transport mechanism to send messages to a remote object.</span></span> <span data-ttu-id="6877b-175">通道接收器在链中链接在一起 `ChannelSinkProviders` ，并且所有通道消息都流过此接收器链，然后才会序列化并传输消息。</span><span class="sxs-lookup"><span data-stu-id="6877b-175">Channel sinks are linked together in a chain of `ChannelSinkProviders` and all channel messages flow through this chain of sinks before the message is finally serialized and transported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6877b-176">下面的代码示例说明如何使用 <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel.CreateMessageSink%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="6877b-176">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel.CreateMessageSink%2A> method.</span></span> <span data-ttu-id="6877b-177">此代码示例是为类提供的更大示例的一部分 <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> 。</span><span class="sxs-lookup"><span data-stu-id="6877b-177">This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> class.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#22](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CPP/client.cpp#22)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#22](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CS/client.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrlsForUri">
      <MemberSignature Language="C#" Value="public string[] GetUrlsForUri (string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUrlsForUri(string objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcChannel.GetUrlsForUri(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUrlsForUri (objectURI As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetUrlsForUri(System::String ^ objectURI);" />
      <MemberSignature Language="F#" Value="abstract member GetUrlsForUri : string -&gt; string[]&#xA;override this.GetUrlsForUri : string -&gt; string[]" Usage="ipcChannel.GetUrlsForUri objectURI" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelReceiver.GetUrlsForUri(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objectURI"><span data-ttu-id="6877b-178">需要其 URL 的对象的 URI。</span><span class="sxs-lookup"><span data-stu-id="6877b-178">The URI of the object for which URLs are required.</span></span></param>
        <summary><span data-ttu-id="6877b-179">返回具有指定 URI 的对象的所有 URL 的数组，该对象承载在当前的 <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> 上。</span><span class="sxs-lookup"><span data-stu-id="6877b-179">Returns an array of all the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" />.</span></span></summary>
        <returns><span data-ttu-id="6877b-180">具有指定 URI 的对象的所有 URL 的数组，该对象承载在当前的 <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> 上。</span><span class="sxs-lookup"><span data-stu-id="6877b-180">An array of the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6877b-181">此方法由使用 <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="6877b-181">This method is used by <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6877b-182">下面的代码示例说明如何使用 <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel.GetUrlsForUri%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="6877b-182">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel.GetUrlsForUri%2A> method.</span></span> <span data-ttu-id="6877b-183">此代码示例是为类提供的更大示例的一部分 <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> 。</span><span class="sxs-lookup"><span data-stu-id="6877b-183">This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> class.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#19](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CPP/server.cpp#19)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#19](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CS/server.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcChannel.IsSecured" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecured { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSecured : bool with get, set" Usage="System.Runtime.Remoting.Channels.Ipc.IpcChannel.IsSecured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.ISecurableChannel.IsSecured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6877b-184">获取或设置一个布尔值，该值指示当前信道是否安全。</span><span class="sxs-lookup"><span data-stu-id="6877b-184">Gets or sets a Boolean value that indicates whether the current channel is secure.</span></span></summary>
        <value><span data-ttu-id="6877b-185">一个布尔值，指示当前实例是否安全。</span><span class="sxs-lookup"><span data-stu-id="6877b-185">A Boolean value that indicates whether the current instance is secure.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6877b-186">不需要显式设置此属性，因为它足以设置的 ensureSecurity 参数 <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%2CSystem.Boolean%29> 。</span><span class="sxs-lookup"><span data-stu-id="6877b-186">This property need not be set explicitly, as it is sufficient to set the ensureSecurity parameter of <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%2CSystem.Boolean%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string url, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Parse(string url, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcChannel.Parse(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (url As String, ByRef objectURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Parse(System::String ^ url, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberSignature Language="F#" Value="abstract member Parse : string * string -&gt; string&#xA;override this.Parse : string * string -&gt; string" Usage="ipcChannel.Parse (url, objectURI)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannel.Parse(System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="objectURI" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="6877b-187">从中提取远程已知对象的 URI 的 URL。</span><span class="sxs-lookup"><span data-stu-id="6877b-187">The URL from which to extract the URI of the remote well-known object.</span></span></param>
        <param name="objectURI"><span data-ttu-id="6877b-188">当此方法返回时，包含含有远程已知对象的 URI 的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="6877b-188">When this method returns, contains a <see cref="T:System.String" /> that holds the URI of the remote well-known object.</span></span> <span data-ttu-id="6877b-189">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="6877b-189">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="6877b-190">从指定 URL 提取信道 URI 和远程已知对象 URI。</span><span class="sxs-lookup"><span data-stu-id="6877b-190">Extracts the channel URI and the remote well-known object URI from the specified URL.</span></span></summary>
        <returns><span data-ttu-id="6877b-191">当前信道的 URI。</span><span class="sxs-lookup"><span data-stu-id="6877b-191">The URI of the current channel.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6877b-192">对象的 URI 是唯一标识特定对象实例的值。</span><span class="sxs-lookup"><span data-stu-id="6877b-192">A URI of an object is a value that uniquely identifies a specific object instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6877b-193">下面的代码示例说明如何使用 <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel.Parse%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="6877b-193">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel.Parse%2A> method.</span></span> <span data-ttu-id="6877b-194">此代码示例是为类提供的更大示例的一部分 <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> 。</span><span class="sxs-lookup"><span data-stu-id="6877b-194">This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel> class.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#19](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CPP/server.cpp#19)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcChannel#19](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcChannel/CS/server.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcChannel.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartListening(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member StartListening : obj -&gt; unit&#xA;override this.StartListening : obj -&gt; unit" Usage="ipcChannel.StartListening data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelReceiver.StartListening(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="6877b-195">可选的初始化信息。</span><span class="sxs-lookup"><span data-stu-id="6877b-195">Optional initialization information.</span></span></param>
        <summary><span data-ttu-id="6877b-196">指示当前信道开始侦听请求。</span><span class="sxs-lookup"><span data-stu-id="6877b-196">Instructs the current channel to start listening for requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6877b-197">无需调用此方法即可开始在新初始化的通道上进行侦听。</span><span class="sxs-lookup"><span data-stu-id="6877b-197">It is not necessary to call this method to begin listening on a newly initialized channel.</span></span>  
  
 <span data-ttu-id="6877b-198">在调用方法后，使用此方法重新启动对通道的侦听 <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel.StopListening%2A> 。</span><span class="sxs-lookup"><span data-stu-id="6877b-198">Use this method to restart listening on a channel after the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel.StopListening%2A> method has been called.</span></span>  
  
 <span data-ttu-id="6877b-199">`data`参数可用于将特定的初始化状态传递到通道。</span><span class="sxs-lookup"><span data-stu-id="6877b-199">The `data` parameter can be used to pass a specific initialization state to the channel.</span></span> <span data-ttu-id="6877b-200">如果你不希望将特定状态传递到通道，请将设置 `data` 为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="6877b-200">If you do not want to pass a specific state to the channel, set `data` to `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public void StopListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcChannel.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopListening(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member StopListening : obj -&gt; unit&#xA;override this.StopListening : obj -&gt; unit" Usage="ipcChannel.StopListening data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelReceiver.StopListening(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="6877b-201">该信道的可选状态信息。</span><span class="sxs-lookup"><span data-stu-id="6877b-201">Optional state information for the channel.</span></span></param>
        <summary><span data-ttu-id="6877b-202">指示当前信道停止侦听请求。</span><span class="sxs-lookup"><span data-stu-id="6877b-202">Instructs the current channel to stop listening for requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6877b-203">使用此方法停止在通道上进行侦听。</span><span class="sxs-lookup"><span data-stu-id="6877b-203">Use this method to stop listening on a channel.</span></span> <span data-ttu-id="6877b-204">若要重新启动侦听，请使用 <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel.StartListening%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="6877b-204">To restart listening, use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcChannel.StartListening%2A> method.</span></span>  
  
 <span data-ttu-id="6877b-205">`data`参数可用于将特定的初始化状态传递到通道。</span><span class="sxs-lookup"><span data-stu-id="6877b-205">The `data` parameter can be used to pass a specific initialization state to the channel.</span></span> <span data-ttu-id="6877b-206">如果你不希望将特定状态传递到通道，请将设置 `data` 为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="6877b-206">If you do not want to pass a specific state to the channel, set `data` to `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
