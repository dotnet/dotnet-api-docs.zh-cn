<Type Name="IpcClientChannel" FullName="System.Runtime.Remoting.Channels.Ipc.IpcClientChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4d52bafcc3e041fe4e56262cbd5cad24b9a0d7ea" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="73354055" /></Metadata><TypeSignature Language="C#" Value="public class IpcClientChannel : System.Runtime.Remoting.Channels.IChannelSender, System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IpcClientChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelSender, class System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" />
  <TypeSignature Language="VB.NET" Value="Public Class IpcClientChannel&#xA;Implements IChannelSender, ISecurableChannel" />
  <TypeSignature Language="C++ CLI" Value="public ref class IpcClientChannel : System::Runtime::Remoting::Channels::IChannelSender, System::Runtime::Remoting::Channels::ISecurableChannel" />
  <TypeSignature Language="F#" Value="type IpcClientChannel = class&#xA;    interface IChannelSender&#xA;    interface IChannel&#xA;    interface ISecurableChannel" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSender</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.ISecurableChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="08485-101">为远程调用实现使用 IPC 协议传输消息的客户端信道。</span><span class="sxs-lookup"><span data-stu-id="08485-101">Implements a client channel for remote calls that uses the IPC protocol to transmit messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="08485-102">The.NET Framework 远程处理基础结构使用通道传输远程调用。</span><span class="sxs-lookup"><span data-stu-id="08485-102">Channels are used by the.NET Framework remoting infrastructure to transport remote calls.</span></span> <span data-ttu-id="08485-103">当客户端调用远程对象时，调用将被序列化为客户端通道发送并由服务器通道接收的消息。</span><span class="sxs-lookup"><span data-stu-id="08485-103">When a client calls a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel.</span></span> <span data-ttu-id="08485-104">收到消息后，将对其进行反序列化和处理。</span><span class="sxs-lookup"><span data-stu-id="08485-104">After the message is received, it is deserialized and processed.</span></span> <span data-ttu-id="08485-105">任何返回值由服务器通道传输并由客户端通道接收。</span><span class="sxs-lookup"><span data-stu-id="08485-105">Any returned values are transmitted by the server channel and received by the client channel.</span></span>  
  
 <span data-ttu-id="08485-106"><xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel>类使用 Windows 进程间通信 (IPC) 系统在同一台计算机上的应用程序域之间传输消息。</span><span class="sxs-lookup"><span data-stu-id="08485-106">The <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> class uses the Windows interprocess communication (IPC) system to transport messages between application domains on the same computer.</span></span> <span data-ttu-id="08485-107">在同一台计算机上的应用程序域之间通信时，IPC 信道比 TCP 或 HTTP 通道快得多。</span><span class="sxs-lookup"><span data-stu-id="08485-107">When communicating between application domains on the same computer, the IPC channel is much faster than the TCP or HTTP channels.</span></span>  
  
 <span data-ttu-id="08485-108">若要在客户端执行额外的消息处理，可以指定接口的实现，该实现 <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> 将通过此接口传递对象处理的所有消息 <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> 。</span><span class="sxs-lookup"><span data-stu-id="08485-108">To perform additional processing of messages on the client side, you can specify an implementation of the <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> interface through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> object will be passed.</span></span>  
  
 <span data-ttu-id="08485-109">默认情况下， <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> 类使用二进制格式化程序对所有消息进行序列化。</span><span class="sxs-lookup"><span data-stu-id="08485-109">By default, the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> class uses a binary formatter to serialize all messages.</span></span>  
  
 <span data-ttu-id="08485-110"><xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel>对象具有关联的配置属性，这些属性可在运行时在配置文件中设置 (方法是：调用静态 <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> 方法) 或通过将集合传递 <xref:System.Collections.IDictionary> 到 <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.%23ctor%2A> 构造函数) 以编程方式 (。</span><span class="sxs-lookup"><span data-stu-id="08485-110">A <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> method) or programmatically (by passing a <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.%23ctor%2A> constructor).</span></span> <span data-ttu-id="08485-111">有关这些配置属性的列表，请参阅构造函数的文档 <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.%23ctor%2A> 。</span><span class="sxs-lookup"><span data-stu-id="08485-111">For a list of these configuration properties, see the documentation for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="08485-112">下面的代码示例演示如何使用 <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> 类。</span><span class="sxs-lookup"><span data-stu-id="08485-112">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> class.</span></span>  
  
 [!code-cpp[Remoting_Ipc#20](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/client.cpp#20)]
 [!code-csharp[Remoting_Ipc#20](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/client.cs#20)]  
  
 <span data-ttu-id="08485-113">前面的代码使用以下远程对象。</span><span class="sxs-lookup"><span data-stu-id="08485-113">The preceding code uses the following remote object.</span></span>  
  
 [!code-cpp[Remoting_Ipc#0](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/counter.cpp#0)]
 [!code-csharp[Remoting_Ipc#0](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/counter.cs#0)]  
  
 <span data-ttu-id="08485-114">有关远程公开此对象的服务器的示例，请参阅 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> 。</span><span class="sxs-lookup"><span data-stu-id="08485-114">For an example of a server that exposes this object remotely, see <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="08485-115">初始化 <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="08485-115">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcClientChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcClientChannel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="08485-116">初始化 <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="08485-116">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08485-117"><xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel>此构造函数返回的实例的配置属性都设置为其默认值。</span><span class="sxs-lookup"><span data-stu-id="08485-117">The configuration properties of the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> instance returned by this constructor are all set to their default values.</span></span> <span data-ttu-id="08485-118">下表显示了每个配置属性的默认值。</span><span class="sxs-lookup"><span data-stu-id="08485-118">The following table shows the default value for each configuration property.</span></span>  
  
|<span data-ttu-id="08485-119">配置属性</span><span class="sxs-lookup"><span data-stu-id="08485-119">Configuration property</span></span>|<span data-ttu-id="08485-120">说明</span><span class="sxs-lookup"><span data-stu-id="08485-120">Description</span></span>|  
|----------------------------|-----------------|  
|`name`|<span data-ttu-id="08485-121">默认名称为 "ipc client"。</span><span class="sxs-lookup"><span data-stu-id="08485-121">The default name is "ipc client".</span></span> <span data-ttu-id="08485-122">每个信道都必须有唯一的名称。</span><span class="sxs-lookup"><span data-stu-id="08485-122">Each channel must have a unique name.</span></span>|  
|`priority`|<span data-ttu-id="08485-123">默认优先级为1。</span><span class="sxs-lookup"><span data-stu-id="08485-123">The default priority is 1.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="08485-124">下面的代码示例演示如何使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="08485-124">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[Remoting_Ipc#21](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/client.cpp#21)]
 [!code-csharp[Remoting_Ipc#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/client.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcClientChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, sinkProvider As IClientChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcClientChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IClientChannelSinkProvider ^ sinkProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcClientChannel : System.Collections.IDictionary * System.Runtime.Remoting.Channels.IClientChannelSinkProvider -&gt; System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcClientChannel (properties, sinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="08485-125">一个 <see cref="T:System.Collections.IDictionary" /> 集合，它为信道要使用的配置属性指定值。</span><span class="sxs-lookup"><span data-stu-id="08485-125">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the channel.</span></span></param>
        <param name="sinkProvider"><span data-ttu-id="08485-126">信道要使用的 <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="08485-126">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</span></span></param>
        <summary><span data-ttu-id="08485-127">使用指定的配置属性和接收器初始化 <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="08485-127">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" /> class with the specified configuration properties and sink.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08485-128">有关通道配置属性的详细信息，请参阅 [通道和格式化程序配置属性](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="08485-128">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span></span>  
  
 <span data-ttu-id="08485-129">如果不需要接收器功能，请将参数设置 `sinkProvider` 为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="08485-129">If you do not require sink functionality, set the `sinkProvider` parameter to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="08485-130">下面的代码示例演示如何使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="08485-130">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#41](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client2.cpp#41)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#41](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client2.cs#41)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)"><span data-ttu-id="08485-131">通道和格式化程序配置属性</span><span class="sxs-lookup"><span data-stu-id="08485-131">Channel and Formatter Configuration Properties</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcClientChannel (string name, System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, sinkProvider As IClientChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcClientChannel(System::String ^ name, System::Runtime::Remoting::Channels::IClientChannelSinkProvider ^ sinkProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcClientChannel : string * System.Runtime.Remoting.Channels.IClientChannelSinkProvider -&gt; System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcClientChannel (name, sinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="08485-132">信道的名称。</span><span class="sxs-lookup"><span data-stu-id="08485-132">The name of the channel.</span></span></param>
        <param name="sinkProvider"><span data-ttu-id="08485-133">信道要使用的 <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="08485-133">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> implementation to be used by the channel.</span></span></param>
        <summary><span data-ttu-id="08485-134">使用指定的名称和接收器初始化 <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="08485-134">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" /> class with the specified name and sink.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08485-135">此构造函数 <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName%2A> 使用参数设置属性 `name` 。</span><span class="sxs-lookup"><span data-stu-id="08485-135">This constructor sets the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName%2A> property by using the `name` parameter.</span></span> <span data-ttu-id="08485-136">如果要注册多个通道，则每个通道都必须具有唯一的名称。</span><span class="sxs-lookup"><span data-stu-id="08485-136">If you want to register more than one channel, each channel must have a unique name.</span></span>  
  
 <span data-ttu-id="08485-137">如果不需要接收器功能，请将参数设置 `sinkProvider` 为 `null` 。</span><span class="sxs-lookup"><span data-stu-id="08485-137">If you do not require sink functionality, set the `sinkProvider` parameter to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="08485-138">下面的代码示例演示如何使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="08485-138">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#42](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client2.cpp#42)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#42](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client2.cs#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelName">
      <MemberSignature Language="C#" Value="public string ChannelName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChannelName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChannelName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelName : string" Usage="System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannel.ChannelName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08485-139">获取当前信道的名称。</span><span class="sxs-lookup"><span data-stu-id="08485-139">Gets the name of the current channel.</span></span></summary>
        <value><span data-ttu-id="08485-140">包含信道名称的 <see cref="T:System.String" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="08485-140">A <see cref="T:System.String" /> instance that contains the name of the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08485-141">每个已注册的通道都具有唯一的名称。</span><span class="sxs-lookup"><span data-stu-id="08485-141">Every registered channel has a unique name.</span></span> <span data-ttu-id="08485-142">此名称用于在调用方法时检索特定通道 <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="08485-142">The name is used to retrieve a specific channel when calling the <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="08485-143">默认名称为 "ipc client"。</span><span class="sxs-lookup"><span data-stu-id="08485-143">The default name is "ipc client".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="08485-144">下面的代码示例说明如何使用 <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="08485-144">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName%2A> property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#21](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client.cpp#21)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#21](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelPriority">
      <MemberSignature Language="C#" Value="public int ChannelPriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelPriority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChannelPriority { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelPriority : int" Usage="System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannel.ChannelPriority</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08485-145">获取当前信道的优先级。</span><span class="sxs-lookup"><span data-stu-id="08485-145">Gets the priority of the current channel.</span></span></summary>
        <value><span data-ttu-id="08485-146">一个整数，指示分配给此信道的优先级。</span><span class="sxs-lookup"><span data-stu-id="08485-146">An integer that indicates the priority assigned to the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08485-147">优先级控制竞争的客户端连接到给定终结点的顺序;优先级较高的通道在较低优先级通道之前连接。</span><span class="sxs-lookup"><span data-stu-id="08485-147">The priority controls the order in which competing clients connect to a given endpoint; higher priority channels connect before lower priority channels.</span></span> <span data-ttu-id="08485-148">默认优先级为 1;允许负的优先级。</span><span class="sxs-lookup"><span data-stu-id="08485-148">The default priority is 1; negative priorities are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="08485-149">下面的代码示例说明如何使用 <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="08485-149">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority%2A> property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#23](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client.cpp#23)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#23](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client.cs#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageSink">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink (string url, object remoteChannelData, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink(string url, object remoteChannelData, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink(System.String,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateMessageSink (url As String, remoteChannelData As Object, ByRef objectURI As String) As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessageSink ^ CreateMessageSink(System::String ^ url, System::Object ^ remoteChannelData, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateMessageSink : string * obj * string -&gt; System.Runtime.Remoting.Messaging.IMessageSink&#xA;override this.CreateMessageSink : string * obj * string -&gt; System.Runtime.Remoting.Messaging.IMessageSink" Usage="ipcClientChannel.CreateMessageSink (url, remoteChannelData, objectURI)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink(System.String,System.Object,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="remoteChannelData" Type="System.Object" />
        <Parameter Name="objectURI" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="08485-150">新接收器应将消息传递到的 URL。</span><span class="sxs-lookup"><span data-stu-id="08485-150">The URL to which the new sink delivers messages.</span></span> <span data-ttu-id="08485-151">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="08485-151">This parameter can be <see langword="null" />.</span></span></param>
        <param name="remoteChannelData"><span data-ttu-id="08485-152">新接收器将把消息传送到的远程主机的信道数据对象。</span><span class="sxs-lookup"><span data-stu-id="08485-152">The channel data object of the remote host to which the new sink will deliver messages.</span></span> <span data-ttu-id="08485-153">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="08485-153">This parameter can be <see langword="null" />.</span></span></param>
        <param name="objectURI"><span data-ttu-id="08485-154">此方法返回时，包含新信道消息接收器的 URI，该信道消息接收器将消息传送到指定 URL 或信道数据对象。</span><span class="sxs-lookup"><span data-stu-id="08485-154">When this method returns, contains the URI of the new channel message sink that delivers messages to the specified URL or channel data object.</span></span> <span data-ttu-id="08485-155">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="08485-155">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="08485-156">返回将消息传送到指定 URL 或信道数据对象的信道消息接收器。</span><span class="sxs-lookup"><span data-stu-id="08485-156">Returns a channel message sink that delivers messages to the specified URL or channel data object.</span></span></summary>
        <returns><span data-ttu-id="08485-157">将消息传递给指定 URL 或信道数据对象的信道消息接收器。</span><span class="sxs-lookup"><span data-stu-id="08485-157">A channel message sink that delivers messages to the specified URL or channel data object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08485-158"><xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink%2A>方法返回将消息传递到指定 URL 或信道数据对象的信道消息接收器。</span><span class="sxs-lookup"><span data-stu-id="08485-158">The <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink%2A> method returns a channel message sink that delivers messages to either the specified URL or the channel data object.</span></span> <span data-ttu-id="08485-159">如果 `uri` 参数为 `null` ， `remoteChannelData` 则将用作接收器的目标。</span><span class="sxs-lookup"><span data-stu-id="08485-159">If the `uri` parameter is `null`, `remoteChannelData` is used as a target for the sink.</span></span> <span data-ttu-id="08485-160">`url`或 `remoteChannelData` 参数可以为 `null` ，但不能同时为两者。</span><span class="sxs-lookup"><span data-stu-id="08485-160">Either the `url` or `remoteChannelData` parameters can be `null`, but not both.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="08485-161">下面的代码示例说明如何使用 <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="08485-161">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink%2A> method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#22](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client.cpp#22)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#22](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client.cs#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Remoting.RemotingException"><span data-ttu-id="08485-162">提供的接收器不实现 <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" />。</span><span class="sxs-lookup"><span data-stu-id="08485-162">The provided sink does not implement <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IsSecured" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecured { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSecured : bool with get, set" Usage="System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IsSecured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.ISecurableChannel.IsSecured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08485-163">获取或设置一个布尔值，该值指示当前信道是否安全。</span><span class="sxs-lookup"><span data-stu-id="08485-163">Gets or sets a Boolean value that indicates whether the current channel is secure.</span></span></summary>
        <value><span data-ttu-id="08485-164">一个布尔值，指示当前实例是否安全。</span><span class="sxs-lookup"><span data-stu-id="08485-164">A Boolean value that indicates whether the current instance is secure.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string url, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Parse(string url, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (url As String, ByRef objectURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Parse(System::String ^ url, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberSignature Language="F#" Value="abstract member Parse : string * string -&gt; string&#xA;override this.Parse : string * string -&gt; string" Usage="ipcClientChannel.Parse (url, objectURI)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannel.Parse(System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="objectURI" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="08485-165">从中提取对象 URI 的 URL。</span><span class="sxs-lookup"><span data-stu-id="08485-165">The URL from which to extract the object URI.</span></span></param>
        <param name="objectURI"><span data-ttu-id="08485-166">当此方法返回时，包含具有远程已知对象的 URI 的 <see cref="T:System.String" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="08485-166">When this method returns, a <see cref="T:System.String" /> instance that holds the URI of the remote well-known object.</span></span> <span data-ttu-id="08485-167">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="08485-167">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="08485-168">从指定 URL 提取信道 URI 和远程已知对象 URI。</span><span class="sxs-lookup"><span data-stu-id="08485-168">Extracts the channel URI and the remote well-known object URI from the specified URL.</span></span></summary>
        <returns><span data-ttu-id="08485-169">一个 <see cref="T:System.String" /> 包含信道 URI。</span><span class="sxs-lookup"><span data-stu-id="08485-169">A <see cref="T:System.String" /> that contains the channel URI.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="08485-170">下面的代码示例说明如何使用 <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="08485-170">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse%2A> method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#24](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client.cpp#24)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#24](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client.cs#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
