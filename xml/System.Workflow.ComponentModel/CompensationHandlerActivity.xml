<Type Name="CompensationHandlerActivity" FullName="System.Workflow.ComponentModel.CompensationHandlerActivity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ccd733c5010fe9b74bd5841a3481213dd2b62bb" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89722961" /></Metadata><TypeSignature Language="C#" Value="public sealed class CompensationHandlerActivity : System.Workflow.ComponentModel.CompositeActivity, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompensationHandlerActivity extends System.Workflow.ComponentModel.CompositeActivity implements class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.CompensationHandlerActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompensationHandlerActivity&#xA;Inherits CompositeActivity&#xA;Implements IActivityEventListener(Of ActivityExecutionStatusChangedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompensationHandlerActivity sealed : System::Workflow::ComponentModel::CompositeActivity, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^&gt;" />
  <TypeSignature Language="F#" Value="type CompensationHandlerActivity = class&#xA;    inherit CompositeActivity&#xA;    interface IActivityEventListener&lt;ActivityExecutionStatusChangedEventArgs&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.CompositeActivity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.Designer(typeof(System.Workflow.ComponentModel.Design.CompensationHandlerActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer(typeof(System.Workflow.ComponentModel.Design.CompensationHandlerActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.ToolboxItem(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.ToolboxItem(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Drawing.ToolboxBitmap(typeof(System.Workflow.ComponentModel.CompensationHandlerActivity), "Resources.Compensation.png")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Drawing.ToolboxBitmap(typeof(System.Workflow.ComponentModel.CompensationHandlerActivity), "Resources.Compensation.png")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Workflow.ComponentModel.AlternateFlowActivity]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Workflow.ComponentModel.AlternateFlowActivity&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.ComponentModel.CompensationValidator))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.ComponentModel.CompensationValidator))&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a9ee0-101">指定工作流逻辑，用于撤消或补偿关联的 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> 的成功执行。</span><span class="sxs-lookup"><span data-stu-id="a9ee0-101">Specifies workflow logic that undoes, or compensates for, the successful execution of the associated <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />.</span></span> <span data-ttu-id="a9ee0-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="a9ee0-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="a9ee0-103">任何可以实现 <xref:System.Workflow.ComponentModel.Activity> 的 <xref:System.Workflow.ComponentModel.ICompensatableActivity> 定义。</span><span class="sxs-lookup"><span data-stu-id="a9ee0-103">Any <xref:System.Workflow.ComponentModel.Activity> definition can implement <xref:System.Workflow.ComponentModel.ICompensatableActivity>.</span></span> <span data-ttu-id="a9ee0-104"><xref:System.Workflow.ComponentModel.CompensationHandlerActivity> 的父级必须实现此接口。</span><span class="sxs-lookup"><span data-stu-id="a9ee0-104">The parent of a <xref:System.Workflow.ComponentModel.CompensationHandlerActivity> must implement this interface.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a9ee0-105">初始化 <see cref="T:System.Workflow.ComponentModel.CompensationHandlerActivity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a9ee0-105">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.CompensationHandlerActivity" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompensationHandlerActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompensationHandlerActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompensationHandlerActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a9ee0-106">初始化 <see cref="T:System.Workflow.ComponentModel.CompensationHandlerActivity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a9ee0-106">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.CompensationHandlerActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a9ee0-107">下面的示例演示如何创建 CompensationHandlerActivity。</span><span class="sxs-lookup"><span data-stu-id="a9ee0-107">The following example demonstrates creating a CompensationHandlerActivity.</span></span>  <span data-ttu-id="a9ee0-108">此示例摘自“补偿 SDK”示例。</span><span class="sxs-lookup"><span data-stu-id="a9ee0-108">This example is from the Compensation SDK sample.</span></span>  <span data-ttu-id="a9ee0-109">有关详细信息，请参阅 [补偿示例](https://msdn.microsoft.com/library/c847a694-9978-46af-aa80-5bd1833f813b)。</span><span class="sxs-lookup"><span data-stu-id="a9ee0-109">For more information, see [Compensation Sample](https://msdn.microsoft.com/library/c847a694-9978-46af-aa80-5bd1833f813b).</span></span>  
  
 [!code-csharp[WF_Samples#147](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#147)]
 [!code-vb[WF_Samples#147](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#147)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompensationHandlerActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompensationHandlerActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompensationHandlerActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.ComponentModel.CompensationHandlerActivity : string -&gt; System.Workflow.ComponentModel.CompensationHandlerActivity" Usage="new System.Workflow.ComponentModel.CompensationHandlerActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a9ee0-110">包含此实例名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="a9ee0-110">A string that contains the name of this instance.</span></span></param>
        <summary><span data-ttu-id="a9ee0-111">使用活动名初始化 <see cref="T:System.Workflow.ComponentModel.CompensationHandlerActivity" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a9ee0-111">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.CompensationHandlerActivity" /> class using the name of the activity.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a9ee0-112"><paramref name="activityName" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="a9ee0-112"><paramref name="activityName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Cancel(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompensationHandlerActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function Cancel (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Cancel(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Cancel : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="compensationHandlerActivity.Cancel executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompensationHandlerActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="compensationHandlerActivity.Execute executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal override void Initialize (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompensationHandlerActivity.Initialize(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Initialize (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Initialize(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.Initialize : IServiceProvider -&gt; unit" Usage="compensationHandlerActivity.Initialize provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivityChangeRemove">
      <MemberSignature Language="C#" Value="protected internal override void OnActivityChangeRemove (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity removedActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnActivityChangeRemove(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext, class System.Workflow.ComponentModel.Activity removedActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompensationHandlerActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnActivityChangeRemove (executionContext As ActivityExecutionContext, removedActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnActivityChangeRemove(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext, System::Workflow::ComponentModel::Activity ^ removedActivity);" />
      <MemberSignature Language="F#" Value="override this.OnActivityChangeRemove : System.Workflow.ComponentModel.ActivityExecutionContext * System.Workflow.ComponentModel.Activity -&gt; unit" Usage="compensationHandlerActivity.OnActivityChangeRemove (executionContext, removedActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="removedActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <param name="removedActivity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWorkflowChangesCompleted">
      <MemberSignature Language="C#" Value="protected internal override void OnWorkflowChangesCompleted (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnWorkflowChangesCompleted(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompensationHandlerActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnWorkflowChangesCompleted (executionContext As ActivityExecutionContext)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnWorkflowChangesCompleted(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.OnWorkflowChangesCompleted : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; unit" Usage="compensationHandlerActivity.OnWorkflowChangesCompleted executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;.OnEvent">
      <MemberSignature Language="C#" Value="void IActivityEventListener&lt;ActivityExecutionStatusChangedEventArgs&gt;.OnEvent (object sender, System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;.OnEvent(object sender, class System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompensationHandlerActivity.System#Workflow#ComponentModel#IActivityEventListener&lt;System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs&gt;#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnEvent (sender As Object, e As ActivityExecutionStatusChangedEventArgs) Implements IActivityEventListener(Of ActivityExecutionStatusChangedEventArgs).OnEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;.OnEvent(System::Object ^ sender, System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^ e) = System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::ActivityExecutionStatusChangedEventArgs ^&gt;::OnEvent;" />
      <MemberSignature Language="F#" Value="abstract member System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;.OnEvent : obj * System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs -&gt; unit&#xA;override this.System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;.OnEvent : obj * System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs -&gt; unit" Usage="compensationHandlerActivity.System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs&gt;.OnEvent (sender, e)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="a9ee0-113">引发事件的对象。</span><span class="sxs-lookup"><span data-stu-id="a9ee0-113">The object that raised the event.</span></span></param>
        <param name="e"><span data-ttu-id="a9ee0-114">先前键入的事件自变量。</span><span class="sxs-lookup"><span data-stu-id="a9ee0-114">The previously typed event arguments.</span></span></param>
        <summary><span data-ttu-id="a9ee0-115">定义发生订阅事件时的处理过程。</span><span class="sxs-lookup"><span data-stu-id="a9ee0-115">Defines the processing procedure when the subscribed-to event occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
