<Type Name="ServiceCollectionDescriptorExtensions" FullName="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c6b5a046ef24a65b26dc366a9c6b1359d48b5459" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89732680" /></Metadata><TypeSignature Language="C#" Value="public static class ServiceCollectionDescriptorExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ServiceCollectionDescriptorExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ServiceCollectionDescriptorExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceCollectionDescriptorExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type ServiceCollectionDescriptorExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="91ae6-101">用于在 <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> 中添加和删除服务的扩展方法。</span><span class="sxs-lookup"><span data-stu-id="91ae6-101">Extension methods for adding and removing services to an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection Add (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Microsoft.Extensions.DependencyInjection.ServiceDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection Add(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class Microsoft.Extensions.DependencyInjection.ServiceDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Add(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Add (collection As IServiceCollection, descriptor As ServiceDescriptor) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ Add(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ descriptor);" />
      <MemberSignature Language="F#" Value="static member Add : Microsoft.Extensions.DependencyInjection.IServiceCollection * Microsoft.Extensions.DependencyInjection.ServiceDescriptor -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Add (collection, descriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="descriptor" Type="Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="91ae6-102"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-102">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="descriptor"><span data-ttu-id="91ae6-103">要添加的 <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="91ae6-103">The <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> to add.</span></span></param>
        <summary><span data-ttu-id="91ae6-104">将指定的 <paramref name="descriptor" /> 添加到 <paramref name="collection" />。</span><span class="sxs-lookup"><span data-stu-id="91ae6-104">Adds the specified <paramref name="descriptor" /> to the <paramref name="collection" />.</span></span></summary>
        <returns><span data-ttu-id="91ae6-105">对当前 <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> 实例的引用。</span><span class="sxs-lookup"><span data-stu-id="91ae6-105">A reference to the current instance of <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection Add (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt; descriptors);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection Add(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt; descriptors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Add(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyInjection.ServiceDescriptor})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Add (collection As IServiceCollection, descriptors As IEnumerable(Of ServiceDescriptor)) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ Add(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^&gt; ^ descriptors);" />
      <MemberSignature Language="F#" Value="static member Add : Microsoft.Extensions.DependencyInjection.IServiceCollection * seq&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Add (collection, descriptors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="descriptors" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="91ae6-106"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-106">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="descriptors"><span data-ttu-id="91ae6-107">要添加的 <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="91ae6-107">The <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />s to add.</span></span></param>
        <summary><span data-ttu-id="91ae6-108">将 <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> 序列添加到 <paramref name="collection" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-108">Adds a sequence of <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> to the <paramref name="collection" />.</span></span></summary>
        <returns><span data-ttu-id="91ae6-109">对当前 <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> 实例的引用。</span><span class="sxs-lookup"><span data-stu-id="91ae6-109">A reference to the current instance of <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection RemoveAll (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection RemoveAll(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.RemoveAll(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveAll (collection As IServiceCollection, serviceType As Type) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ RemoveAll(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="static member RemoveAll : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.RemoveAll (collection, serviceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="serviceType" Type="System.Type" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="91ae6-110"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-110">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="serviceType"><span data-ttu-id="91ae6-111">要删除的服务类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-111">The service type to remove.</span></span></param>
        <summary><span data-ttu-id="91ae6-112">删除 <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> 中所有 <paramref name="serviceType" /> 类型的服务。</span><span class="sxs-lookup"><span data-stu-id="91ae6-112">Removes all services of type <paramref name="serviceType" /> in <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="91ae6-113">用于链接的 <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="91ae6-113">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> for chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection RemoveAll&lt;T&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection RemoveAll&lt;T&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.RemoveAll``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveAll(Of T) (collection As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ RemoveAll(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection);" />
      <MemberSignature Language="F#" Value="static member RemoveAll : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.RemoveAll collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="collection"><span data-ttu-id="91ae6-114"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-114">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <summary><span data-ttu-id="91ae6-115">删除 <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> 中所有 <typeparamref name="T" /> 类型的服务。</span><span class="sxs-lookup"><span data-stu-id="91ae6-115">Removes all services of type <typeparamref name="T" /> in <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
        <returns><span data-ttu-id="91ae6-116">用于链接的 <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="91ae6-116">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> for chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection Replace (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Microsoft.Extensions.DependencyInjection.ServiceDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection Replace(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class Microsoft.Extensions.DependencyInjection.ServiceDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Replace(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Replace (collection As IServiceCollection, descriptor As ServiceDescriptor) As IServiceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ Replace(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ descriptor);" />
      <MemberSignature Language="F#" Value="static member Replace : Microsoft.Extensions.DependencyInjection.IServiceCollection * Microsoft.Extensions.DependencyInjection.ServiceDescriptor -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Replace (collection, descriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="descriptor" Type="Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="91ae6-117"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-117">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="descriptor"><span data-ttu-id="91ae6-118">要替换成的 <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="91ae6-118">The <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> to replace with.</span></span></param>
        <summary><span data-ttu-id="91ae6-119">删除 <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> 中与 <paramref name="descriptor" /> 的服务类型相同的第一个服务，并将 <paramref name="descriptor" /> 添加到集合中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-119">Removes the first service in <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> with the same service type as <paramref name="descriptor" /> and adds <paramref name="descriptor" /> to the collection.</span></span></summary>
        <returns><span data-ttu-id="91ae6-120">用于链接的 <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="91ae6-120">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> for chaining.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public static void TryAdd (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Microsoft.Extensions.DependencyInjection.ServiceDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAdd(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class Microsoft.Extensions.DependencyInjection.ServiceDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAdd(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAdd (collection As IServiceCollection, descriptor As ServiceDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAdd(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ descriptor);" />
      <MemberSignature Language="F#" Value="static member TryAdd : Microsoft.Extensions.DependencyInjection.IServiceCollection * Microsoft.Extensions.DependencyInjection.ServiceDescriptor -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAdd (collection, descriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="descriptor" Type="Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="91ae6-121"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-121">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="descriptor"><span data-ttu-id="91ae6-122">要添加的 <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="91ae6-122">The <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> to add.</span></span></param>
        <summary><span data-ttu-id="91ae6-123">如果服务类型尚未注册，则将指定的 <paramref name="descriptor" /> 添加到 <paramref name="collection" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-123">Adds the specified <paramref name="descriptor" /> to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public static void TryAdd (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt; descriptors);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAdd(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt; descriptors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAdd(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyInjection.ServiceDescriptor})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAdd (collection As IServiceCollection, descriptors As IEnumerable(Of ServiceDescriptor))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAdd(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^&gt; ^ descriptors);" />
      <MemberSignature Language="F#" Value="static member TryAdd : Microsoft.Extensions.DependencyInjection.IServiceCollection * seq&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt; -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAdd (collection, descriptors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="descriptors" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="91ae6-124"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-124">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="descriptors"><span data-ttu-id="91ae6-125">要添加的 <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="91ae6-125">The <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />s to add.</span></span></param>
        <summary><span data-ttu-id="91ae6-126">如果服务类型尚未注册，则将指定的 <paramref name="descriptors" /> 添加到 <paramref name="collection" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-126">Adds the specified <paramref name="descriptors" /> to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddEnumerable">
      <MemberSignature Language="C#" Value="public static void TryAddEnumerable (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Microsoft.Extensions.DependencyInjection.ServiceDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddEnumerable(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class Microsoft.Extensions.DependencyInjection.ServiceDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddEnumerable (services As IServiceCollection, descriptor As ServiceDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddEnumerable(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^ descriptor);" />
      <MemberSignature Language="F#" Value="static member TryAddEnumerable : Microsoft.Extensions.DependencyInjection.IServiceCollection * Microsoft.Extensions.DependencyInjection.ServiceDescriptor -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable (services, descriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="descriptor" Type="Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />
      </Parameters>
      <Docs>
        <param name="services"><span data-ttu-id="91ae6-127"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-127">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="descriptor"><span data-ttu-id="91ae6-128"><see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-128">The <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />.</span></span></param>
        <summary><span data-ttu-id="91ae6-129">如果现有描述符具有相同 <see cref="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ServiceType" /> 和 <paramref name="services" /> 中尚不存在的实现，则添加 <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="91ae6-129">Adds a <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> if an existing descriptor with the same <see cref="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ServiceType" /> and an implementation that does not already exist in <paramref name="services" />.</span></span></summary>
        <remarks><span data-ttu-id="91ae6-130"><see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />注册支持同一服务类型的多个注册的服务类型的服务实现时使用。</span><span class="sxs-lookup"><span data-stu-id="91ae6-130">Use <see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" /> when registering a service implementation of a service type that supports multiple registrations of the same service type.</span></span> <span data-ttu-id="91ae6-131">使用不 <see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Add(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" /> 是幂等的，如果调用了两次，则可以添加重复的 <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="91ae6-131">Using <see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Add(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" /> is not idempotent and can add duplicate <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> instances if called twice.</span></span> <span data-ttu-id="91ae6-132">使用 <see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" /> 将阻止注册多个实现类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-132">Using <see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" /> will prevent registration of multiple implementation types.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddEnumerable">
      <MemberSignature Language="C#" Value="public static void TryAddEnumerable (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt; descriptors);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddEnumerable(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt; descriptors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Collections.Generic.IEnumerable{Microsoft.Extensions.DependencyInjection.ServiceDescriptor})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddEnumerable (services As IServiceCollection, descriptors As IEnumerable(Of ServiceDescriptor))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddEnumerable(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::DependencyInjection::ServiceDescriptor ^&gt; ^ descriptors);" />
      <MemberSignature Language="F#" Value="static member TryAddEnumerable : Microsoft.Extensions.DependencyInjection.IServiceCollection * seq&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt; -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable (services, descriptors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="descriptors" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.DependencyInjection.ServiceDescriptor&gt;" />
      </Parameters>
      <Docs>
        <param name="services"><span data-ttu-id="91ae6-133"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-133">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="descriptors"><span data-ttu-id="91ae6-134"><see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="91ae6-134">The <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />s.</span></span></param>
        <summary><span data-ttu-id="91ae6-135">如果现有描述符具有相同 <see cref="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ServiceType" /> 和 <paramref name="services" /> 中尚不存在的实现，则添加指定的 <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="91ae6-135">Adds the specified <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" />s if an existing descriptor with the same <see cref="P:Microsoft.Extensions.DependencyInjection.ServiceDescriptor.ServiceType" /> and an implementation that does not already exist in <paramref name="services" />.</span></span></summary>
        <remarks><span data-ttu-id="91ae6-136"><see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" />注册支持同一服务类型的多个注册的服务类型的服务实现时使用。</span><span class="sxs-lookup"><span data-stu-id="91ae6-136">Use <see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" /> when registering a service implementation of a service type that supports multiple registrations of the same service type.</span></span> <span data-ttu-id="91ae6-137">使用不 <see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Add(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" /> 是幂等的，如果调用了两次，则可以添加重复的 <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="91ae6-137">Using <see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.Add(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" /> is not idempotent and can add duplicate <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceDescriptor" /> instances if called twice.</span></span> <span data-ttu-id="91ae6-138">使用 <see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" /> 将阻止注册多个实现类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-138">Using <see cref="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddEnumerable(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)" /> will prevent registration of multiple implementation types.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddScoped">
      <MemberSignature Language="C#" Value="public static void TryAddScoped (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Type service);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddScoped(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Type service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddScoped (collection As IServiceCollection, service As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddScoped(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Type ^ service);" />
      <MemberSignature Language="F#" Value="static member TryAddScoped : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped (collection, service)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="service" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="91ae6-139"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-139">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="service"><span data-ttu-id="91ae6-140">要注册的服务类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-140">The type of the service to register.</span></span></param>
        <summary><span data-ttu-id="91ae6-141">如果服务类型尚未注册，则将指定的 <paramref name="service" /> 作为 <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> 服务添加到 <paramref name="collection" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-141">Adds the specified <paramref name="service" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> service to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddScoped">
      <MemberSignature Language="C#" Value="public static void TryAddScoped (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Type service, Func&lt;IServiceProvider,object&gt; implementationFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddScoped(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Type service, class System.Func`2&lt;class System.IServiceProvider, object&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddScoped (collection As IServiceCollection, service As Type, implementationFactory As Func(Of IServiceProvider, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddScoped(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Type ^ service, Func&lt;IServiceProvider ^, System::Object ^&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member TryAddScoped : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type * Func&lt;IServiceProvider, obj&gt; -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped (collection, service, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="service" Type="System.Type" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="91ae6-142"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-142">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="service"><span data-ttu-id="91ae6-143">要注册的服务类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-143">The type of the service to register.</span></span></param>
        <param name="implementationFactory"><span data-ttu-id="91ae6-144">用于创建服务的工厂。</span><span class="sxs-lookup"><span data-stu-id="91ae6-144">The factory that creates the service.</span></span></param>
        <summary><span data-ttu-id="91ae6-145">如果服务类型尚未注册，则使用 <paramref name="implementationFactory" /> 中指定的中心将指定的 <paramref name="service" /> 作为 <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> 服务添加到 <paramref name="collection" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-145">Adds the specified <paramref name="service" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> service using the factory specified in <paramref name="implementationFactory" /> to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddScoped">
      <MemberSignature Language="C#" Value="public static void TryAddScoped (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Type service, Type implementationType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddScoped(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Type service, class System.Type implementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddScoped (collection As IServiceCollection, service As Type, implementationType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddScoped(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Type ^ service, Type ^ implementationType);" />
      <MemberSignature Language="F#" Value="static member TryAddScoped : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type * Type -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped (collection, service, implementationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="service" Type="System.Type" />
        <Parameter Name="implementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="91ae6-146"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-146">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="service"><span data-ttu-id="91ae6-147">要注册的服务类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-147">The type of the service to register.</span></span></param>
        <param name="implementationType"><span data-ttu-id="91ae6-148">服务的实现类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-148">The implementation type of the service.</span></span></param>
        <summary><span data-ttu-id="91ae6-149">如果服务类型尚未注册，则使用 <paramref name="implementationType" /> 实现将指定的 <paramref name="service" /> 作为 <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> 服务添加到 <paramref name="collection" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-149">Adds the specified <paramref name="service" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> service with the <paramref name="implementationType" /> implementation to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddScoped&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddScoped&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddScoped&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddScoped(Of TService As Class) (collection As IServiceCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddScoped(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection);" />
      <MemberSignature Language="F#" Value="static member TryAddScoped : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; unit (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="91ae6-150">要添加的服务类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-150">The type of the service to add.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="91ae6-151"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-151">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <summary><span data-ttu-id="91ae6-152">如果服务类型尚未注册，则将指定的 <typeparamref name="TService" /> 作为 <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> 服务添加到 <paramref name="collection" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-152">Adds the specified <typeparamref name="TService" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> service to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddScoped&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddScoped&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Func&lt;IServiceProvider,TService&gt; implementationFactory) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddScoped&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Func`2&lt;class System.IServiceProvider, !!TService&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddScoped(Of TService As Class) (services As IServiceCollection, implementationFactory As Func(Of IServiceProvider, TService))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddScoped(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Func&lt;IServiceProvider ^, TService&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member TryAddScoped : Microsoft.Extensions.DependencyInjection.IServiceCollection * Func&lt;IServiceProvider, 'Service (requires 'Service : null)&gt; -&gt; unit (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped (services, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,TService&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="91ae6-153">要添加的服务类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-153">The type of the service to add.</span></span></typeparam>
        <param name="services"><span data-ttu-id="91ae6-154"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-154">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="implementationFactory"><span data-ttu-id="91ae6-155">用于创建服务的工厂。</span><span class="sxs-lookup"><span data-stu-id="91ae6-155">The factory that creates the service.</span></span></param>
        <summary><span data-ttu-id="91ae6-156">如果服务类型尚未注册，则使用 <paramref name="implementationFactory" /> 中指定的中心将指定的 <typeparamref name="TService" /> 作为 <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> 服务添加到 <paramref name="services" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-156">Adds the specified <typeparamref name="TService" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> service using the factory specified in <paramref name="implementationFactory" /> to the <paramref name="services" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddScoped&lt;TService,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddScoped&lt;TService,TImplementation&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection) where TService : class where TImplementation : class, TService;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddScoped&lt;class TService, class (!!TService) TImplementation&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddScoped(Of TService As Class, TImplementation As Class) (collection As IServiceCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService, typename TImplementation&gt;&#xA; where TService : class where TImplementation : class, TService[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddScoped(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection);" />
      <MemberSignature Language="F#" Value="static member TryAddScoped : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; unit (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddScoped collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TService</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="91ae6-157">要添加的服务类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-157">The type of the service to add.</span></span></typeparam>
        <typeparam name="TImplementation"><span data-ttu-id="91ae6-158">要使用的实现的类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-158">The type of the implementation to use.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="91ae6-159"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-159">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <summary><span data-ttu-id="91ae6-160">如果服务类型尚未注册，则将指定的 <typeparamref name="TService" /> 作为 <typeparamref name="TImplementation" /> 中指定的 <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> 服务实现类型添加到 <paramref name="collection" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-160">Adds the specified <typeparamref name="TService" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" /> service implementation type specified in <typeparamref name="TImplementation" /> to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddSingleton">
      <MemberSignature Language="C#" Value="public static void TryAddSingleton (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Type service);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddSingleton(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Type service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddSingleton (collection As IServiceCollection, service As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Type ^ service);" />
      <MemberSignature Language="F#" Value="static member TryAddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton (collection, service)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="service" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="91ae6-161"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-161">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="service"><span data-ttu-id="91ae6-162">要注册的服务类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-162">The type of the service to register.</span></span></param>
        <summary><span data-ttu-id="91ae6-163">如果服务类型尚未注册，则将指定的 <paramref name="service" /> 作为 <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> 服务添加到 <paramref name="collection" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-163">Adds the specified <paramref name="service" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> service to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddSingleton">
      <MemberSignature Language="C#" Value="public static void TryAddSingleton (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Type service, Func&lt;IServiceProvider,object&gt; implementationFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddSingleton(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Type service, class System.Func`2&lt;class System.IServiceProvider, object&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddSingleton (collection As IServiceCollection, service As Type, implementationFactory As Func(Of IServiceProvider, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Type ^ service, Func&lt;IServiceProvider ^, System::Object ^&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member TryAddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type * Func&lt;IServiceProvider, obj&gt; -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton (collection, service, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="service" Type="System.Type" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="91ae6-164"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-164">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="service"><span data-ttu-id="91ae6-165">要注册的服务类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-165">The type of the service to register.</span></span></param>
        <param name="implementationFactory"><span data-ttu-id="91ae6-166">用于创建服务的工厂。</span><span class="sxs-lookup"><span data-stu-id="91ae6-166">The factory that creates the service.</span></span></param>
        <summary><span data-ttu-id="91ae6-167">如果服务类型尚未注册，则使用 <paramref name="implementationFactory" /> 中指定的中心将指定的 <paramref name="service" /> 作为 <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> 服务添加到 <paramref name="collection" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-167">Adds the specified <paramref name="service" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> service using the factory specified in <paramref name="implementationFactory" /> to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddSingleton">
      <MemberSignature Language="C#" Value="public static void TryAddSingleton (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Type service, Type implementationType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddSingleton(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Type service, class System.Type implementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddSingleton (collection As IServiceCollection, service As Type, implementationType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Type ^ service, Type ^ implementationType);" />
      <MemberSignature Language="F#" Value="static member TryAddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type * Type -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton (collection, service, implementationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="service" Type="System.Type" />
        <Parameter Name="implementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="91ae6-168"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-168">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="service"><span data-ttu-id="91ae6-169">要注册的服务类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-169">The type of the service to register.</span></span></param>
        <param name="implementationType"><span data-ttu-id="91ae6-170">服务的实现类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-170">The implementation type of the service.</span></span></param>
        <summary><span data-ttu-id="91ae6-171">如果服务类型尚未注册，则使用 <paramref name="implementationType" /> 实现将指定的 <paramref name="service" /> 作为 <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> 服务添加到 <paramref name="collection" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-171">Adds the specified <paramref name="service" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> service with the <paramref name="implementationType" /> implementation to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddSingleton&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddSingleton&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddSingleton&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddSingleton(Of TService As Class) (collection As IServiceCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection);" />
      <MemberSignature Language="F#" Value="static member TryAddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; unit (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="91ae6-172">要添加的服务类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-172">The type of the service to add.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="91ae6-173"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-173">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <summary><span data-ttu-id="91ae6-174">如果服务类型尚未注册，则将指定的 <typeparamref name="TService" /> 作为 <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> 服务添加到 <paramref name="collection" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-174">Adds the specified <typeparamref name="TService" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> service to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddSingleton&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddSingleton&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Func&lt;IServiceProvider,TService&gt; implementationFactory) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddSingleton&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Func`2&lt;class System.IServiceProvider, !!TService&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddSingleton(Of TService As Class) (services As IServiceCollection, implementationFactory As Func(Of IServiceProvider, TService))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Func&lt;IServiceProvider ^, TService&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member TryAddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection * Func&lt;IServiceProvider, 'Service (requires 'Service : null)&gt; -&gt; unit (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton (services, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,TService&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="91ae6-175">要添加的服务类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-175">The type of the service to add.</span></span></typeparam>
        <param name="services"><span data-ttu-id="91ae6-176"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-176">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="implementationFactory"><span data-ttu-id="91ae6-177">用于创建服务的工厂。</span><span class="sxs-lookup"><span data-stu-id="91ae6-177">The factory that creates the service.</span></span></param>
        <summary><span data-ttu-id="91ae6-178">如果服务类型尚未注册，则使用 <paramref name="implementationFactory" /> 中指定的中心将指定的 <typeparamref name="TService" /> 作为 <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> 服务添加到 <paramref name="services" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-178">Adds the specified <typeparamref name="TService" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> service using the factory specified in <paramref name="implementationFactory" /> to the <paramref name="services" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddSingleton&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddSingleton&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, TService instance) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddSingleton&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, !!TService instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddSingleton(Of TService As Class) (collection As IServiceCollection, instance As TService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, TService instance);" />
      <MemberSignature Language="F#" Value="static member TryAddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection * 'Service -&gt; unit (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton (collection, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="instance" Type="TService" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="91ae6-179">要添加的服务类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-179">The type of the service to add.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="91ae6-180"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-180">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="instance"><span data-ttu-id="91ae6-181">要添加的服务的实例。</span><span class="sxs-lookup"><span data-stu-id="91ae6-181">The instance of the service to add.</span></span></param>
        <summary><span data-ttu-id="91ae6-182">如果服务类型尚未注册，则将指定的 <typeparamref name="TService" /> 作为包含 <paramref name="instance" /> 中指定的实例的 <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> 服务添加到 <paramref name="collection" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-182">Adds the specified <typeparamref name="TService" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> service with an instance specified in <paramref name="instance" /> to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddSingleton&lt;TService,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddSingleton&lt;TService,TImplementation&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection) where TService : class where TImplementation : class, TService;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddSingleton&lt;class TService, class (!!TService) TImplementation&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddSingleton(Of TService As Class, TImplementation As Class) (collection As IServiceCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService, typename TImplementation&gt;&#xA; where TService : class where TImplementation : class, TService[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddSingleton(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection);" />
      <MemberSignature Language="F#" Value="static member TryAddSingleton : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; unit (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TService</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="91ae6-183">要添加的服务类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-183">The type of the service to add.</span></span></typeparam>
        <typeparam name="TImplementation"><span data-ttu-id="91ae6-184">要使用的实现的类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-184">The type of the implementation to use.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="91ae6-185"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-185">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <summary><span data-ttu-id="91ae6-186">如果服务类型尚未注册，则将指定的 <typeparamref name="TService" /> 作为 <typeparamref name="TImplementation" /> 中指定的 <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> 服务实现类型添加到 <paramref name="collection" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-186">Adds the specified <typeparamref name="TService" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" /> service implementation type specified in <typeparamref name="TImplementation" /> to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddTransient">
      <MemberSignature Language="C#" Value="public static void TryAddTransient (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Type service);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddTransient(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Type service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddTransient (collection As IServiceCollection, service As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddTransient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Type ^ service);" />
      <MemberSignature Language="F#" Value="static member TryAddTransient : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient (collection, service)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="service" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="91ae6-187"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-187">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="service"><span data-ttu-id="91ae6-188">要注册的服务类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-188">The type of the service to register.</span></span></param>
        <summary><span data-ttu-id="91ae6-189">如果服务类型尚未注册，则将指定的 <paramref name="service" /> 作为 <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> 服务添加到 <paramref name="collection" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-189">Adds the specified <paramref name="service" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> service to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddTransient">
      <MemberSignature Language="C#" Value="public static void TryAddTransient (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Type service, Func&lt;IServiceProvider,object&gt; implementationFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddTransient(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Type service, class System.Func`2&lt;class System.IServiceProvider, object&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Func{System.IServiceProvider,System.Object})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddTransient (collection As IServiceCollection, service As Type, implementationFactory As Func(Of IServiceProvider, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddTransient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Type ^ service, Func&lt;IServiceProvider ^, System::Object ^&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member TryAddTransient : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type * Func&lt;IServiceProvider, obj&gt; -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient (collection, service, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="service" Type="System.Type" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="91ae6-190"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-190">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="service"><span data-ttu-id="91ae6-191">要注册的服务类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-191">The type of the service to register.</span></span></param>
        <param name="implementationFactory"><span data-ttu-id="91ae6-192">用于创建服务的工厂。</span><span class="sxs-lookup"><span data-stu-id="91ae6-192">The factory that creates the service.</span></span></param>
        <summary><span data-ttu-id="91ae6-193">如果服务类型尚未注册，则使用 <paramref name="implementationFactory" /> 中指定的中心将指定的 <paramref name="service" /> 作为 <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> 服务添加到 <paramref name="collection" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-193">Adds the specified <paramref name="service" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> service using the factory specified in <paramref name="implementationFactory" /> to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddTransient">
      <MemberSignature Language="C#" Value="public static void TryAddTransient (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection, Type service, Type implementationType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddTransient(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection, class System.Type service, class System.Type implementationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddTransient (collection As IServiceCollection, service As Type, implementationType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddTransient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection, Type ^ service, Type ^ implementationType);" />
      <MemberSignature Language="F#" Value="static member TryAddTransient : Microsoft.Extensions.DependencyInjection.IServiceCollection * Type * Type -&gt; unit" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient (collection, service, implementationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="service" Type="System.Type" />
        <Parameter Name="implementationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="91ae6-194"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-194">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="service"><span data-ttu-id="91ae6-195">要注册的服务类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-195">The type of the service to register.</span></span></param>
        <param name="implementationType"><span data-ttu-id="91ae6-196">服务的实现类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-196">The implementation type of the service.</span></span></param>
        <summary><span data-ttu-id="91ae6-197">如果服务类型尚未注册，则使用 <paramref name="implementationType" /> 实现将指定的 <paramref name="service" /> 作为 <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> 服务添加到 <paramref name="collection" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-197">Adds the specified <paramref name="service" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> service with the <paramref name="implementationType" /> implementation to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddTransient&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddTransient&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddTransient&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddTransient(Of TService As Class) (collection As IServiceCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddTransient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection);" />
      <MemberSignature Language="F#" Value="static member TryAddTransient : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; unit (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="91ae6-198">要添加的服务类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-198">The type of the service to add.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="91ae6-199"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-199">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <summary><span data-ttu-id="91ae6-200">如果服务类型尚未注册，则将指定的 <typeparamref name="TService" /> 作为 <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> 服务添加到 <paramref name="collection" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-200">Adds the specified <typeparamref name="TService" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> service to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddTransient&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddTransient&lt;TService&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Func&lt;IServiceProvider,TService&gt; implementationFactory) where TService : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddTransient&lt;class TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Func`2&lt;class System.IServiceProvider, !!TService&gt; implementationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddTransient(Of TService As Class) (services As IServiceCollection, implementationFactory As Func(Of IServiceProvider, TService))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddTransient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Func&lt;IServiceProvider ^, TService&gt; ^ implementationFactory);" />
      <MemberSignature Language="F#" Value="static member TryAddTransient : Microsoft.Extensions.DependencyInjection.IServiceCollection * Func&lt;IServiceProvider, 'Service (requires 'Service : null)&gt; -&gt; unit (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient (services, implementationFactory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="implementationFactory" Type="System.Func&lt;System.IServiceProvider,TService&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="91ae6-201">要添加的服务类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-201">The type of the service to add.</span></span></typeparam>
        <param name="services"><span data-ttu-id="91ae6-202"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-202">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="implementationFactory"><span data-ttu-id="91ae6-203">用于创建服务的工厂。</span><span class="sxs-lookup"><span data-stu-id="91ae6-203">The factory that creates the service.</span></span></param>
        <summary><span data-ttu-id="91ae6-204">如果服务类型尚未注册，则使用 <paramref name="implementationFactory" /> 中指定的中心将指定的 <typeparamref name="TService" /> 作为 <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> 服务添加到 <paramref name="services" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-204">Adds the specified <typeparamref name="TService" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> service using the factory specified in <paramref name="implementationFactory" /> to the <paramref name="services" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddTransient&lt;TService,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static void TryAddTransient&lt;TService,TImplementation&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection collection) where TService : class where TImplementation : class, TService;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TryAddTransient&lt;class TService, class (!!TService) TImplementation&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub TryAddTransient(Of TService As Class, TImplementation As Class) (collection As IServiceCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService, typename TImplementation&gt;&#xA; where TService : class where TImplementation : class, TService[System::Runtime::CompilerServices::Extension]&#xA; static void TryAddTransient(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ collection);" />
      <MemberSignature Language="F#" Value="static member TryAddTransient : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; unit (requires 'Service : null)" Usage="Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddTransient collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.DependencyInjection.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TService</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TService"><span data-ttu-id="91ae6-205">要添加的服务类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-205">The type of the service to add.</span></span></typeparam>
        <typeparam name="TImplementation"><span data-ttu-id="91ae6-206">要使用的实现的类型。</span><span class="sxs-lookup"><span data-stu-id="91ae6-206">The type of the implementation to use.</span></span></typeparam>
        <param name="collection"><span data-ttu-id="91ae6-207"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /></span><span class="sxs-lookup"><span data-stu-id="91ae6-207">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <summary><span data-ttu-id="91ae6-208">如果服务类型尚未注册，则将指定的 <typeparamref name="TService" /> 作为 <typeparamref name="TImplementation" /> 中指定的 <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> 服务实现类型添加到 <paramref name="collection" /> 中。</span><span class="sxs-lookup"><span data-stu-id="91ae6-208">Adds the specified <typeparamref name="TService" /> as a <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Transient" /> service implementation type specified in <typeparamref name="TImplementation" /> to the <paramref name="collection" /> if the service type hasn't already been registered.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
