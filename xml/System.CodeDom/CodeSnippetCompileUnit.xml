<Type Name="CodeSnippetCompileUnit" FullName="System.CodeDom.CodeSnippetCompileUnit">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f25bcc8700a58ebf9b1aa252e550da02e94cc407" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86781186" /></Metadata><TypeSignature Language="C#" Value="public class CodeSnippetCompileUnit : System.CodeDom.CodeCompileUnit" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CodeSnippetCompileUnit extends System.CodeDom.CodeCompileUnit" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeSnippetCompileUnit" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeSnippetCompileUnit&#xA;Inherits CodeCompileUnit" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeSnippetCompileUnit : System::CodeDom::CodeCompileUnit" />
  <TypeSignature Language="F#" Value="type CodeSnippetCompileUnit = class&#xA;    inherit CodeCompileUnit" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeSnippetCompileUnit extends System.CodeDom.CodeCompileUnit" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeCompileUnit</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="69416-101">表示可编译的原义代码片段。</span><span class="sxs-lookup"><span data-stu-id="69416-101">Represents a literal code fragment that can be compiled.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69416-102"><xref:System.CodeDom.CodeSnippetCompileUnit> 可以表示无需修改即可直接包含在源中的代码文本块。</span><span class="sxs-lookup"><span data-stu-id="69416-102"><xref:System.CodeDom.CodeSnippetCompileUnit> can represent a literal block of code that is included directly in the source without modification.</span></span>  
  
 <span data-ttu-id="69416-103">以 <xref:System.CodeDom.CodeSnippetCompileUnit> 字符串的形式存储代码的一部分，它的原始格式完全相同。</span><span class="sxs-lookup"><span data-stu-id="69416-103">A <xref:System.CodeDom.CodeSnippetCompileUnit> stores a section of code, exactly in its original format, as a string.</span></span> <span data-ttu-id="69416-104">CodeDOM 不会转换原义代码片段。</span><span class="sxs-lookup"><span data-stu-id="69416-104">The CodeDOM does not translate literal code fragments.</span></span> <span data-ttu-id="69416-105">原义代码片段以其原始格式存储和输出。</span><span class="sxs-lookup"><span data-stu-id="69416-105">Literal code fragments are stored and output in their original format.</span></span> <span data-ttu-id="69416-106">提供了包含原义代码的 CodeDOM 对象，以便开发人员可以封装目标语言中已经存在的代码。</span><span class="sxs-lookup"><span data-stu-id="69416-106">CodeDOM objects that contain literal code are provided so developers can encapsulate code that is already in the target language.</span></span>  
  
 <span data-ttu-id="69416-107"><xref:System.CodeDom.CodeSnippetCompileUnit.Value%2A>属性以字符串的形式包含原义代码片段。</span><span class="sxs-lookup"><span data-stu-id="69416-107">The <xref:System.CodeDom.CodeSnippetCompileUnit.Value%2A> property contains the literal code fragment as a string.</span></span> <span data-ttu-id="69416-108"><xref:System.CodeDom.CodeSnippetCompileUnit.LinePragma%2A>属性是可选的，它指定代码在源代码文档中的位置。</span><span class="sxs-lookup"><span data-stu-id="69416-108">The <xref:System.CodeDom.CodeSnippetCompileUnit.LinePragma%2A> property is optional and specifies the position of the code within a source code document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69416-109">下面的代码示例演示如何 <xref:System.CodeDom.CodeSnippetCompileUnit> 使用表示原义代码的字符串创建类的新实例。</span><span class="sxs-lookup"><span data-stu-id="69416-109">The following code example demonstrates how to create a new instance of the <xref:System.CodeDom.CodeSnippetCompileUnit> class by using a string that represents literal code.</span></span>  
  
 [!code-cpp[CodeDomSampleBatch#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomSampleBatch/CPP/class1.cpp#8)]
 [!code-csharp[CodeDomSampleBatch#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomSampleBatch/CS/class1.cs#8)]
 [!code-vb[CodeDomSampleBatch#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomSampleBatch/VB/class1.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69416-110">初始化 <see cref="T:System.CodeDom.CodeSnippetCompileUnit" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="69416-110">Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetCompileUnit" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeSnippetCompileUnit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeSnippetCompileUnit.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeSnippetCompileUnit();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69416-111">初始化 <see cref="T:System.CodeDom.CodeSnippetCompileUnit" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="69416-111">Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetCompileUnit" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69416-112">如果使用此构造函数，还应该设置 <xref:System.CodeDom.CodeSnippetCompileUnit.Value%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="69416-112">If you use this constructor you should also set the <xref:System.CodeDom.CodeSnippetCompileUnit.Value%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeSnippetCompileUnit (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeSnippetCompileUnit.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeSnippetCompileUnit(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeSnippetCompileUnit : string -&gt; System.CodeDom.CodeSnippetCompileUnit" Usage="new System.CodeDom.CodeSnippetCompileUnit value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="69416-113">要表示的原义代码片段。</span><span class="sxs-lookup"><span data-stu-id="69416-113">The literal code fragment to represent.</span></span></param>
        <summary><span data-ttu-id="69416-114">初始化 <see cref="T:System.CodeDom.CodeSnippetCompileUnit" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="69416-114">Initializes a new instance of the <see cref="T:System.CodeDom.CodeSnippetCompileUnit" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69416-115">下面的代码示例演示如何 <xref:System.CodeDom.CodeSnippetCompileUnit> 使用表示原义代码的字符串创建类的新实例。</span><span class="sxs-lookup"><span data-stu-id="69416-115">The following code example demonstrates how to create a new instance of the <xref:System.CodeDom.CodeSnippetCompileUnit> class by using a string that represents literal code.</span></span>  
  
 [!code-cpp[CodeDomSampleBatch#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomSampleBatch/CPP/class1.cpp#8)]
 [!code-csharp[CodeDomSampleBatch#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomSampleBatch/CS/class1.cs#8)]
 [!code-vb[CodeDomSampleBatch#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomSampleBatch/VB/class1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinePragma">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeLinePragma LinePragma { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeLinePragma LinePragma" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeSnippetCompileUnit.LinePragma" />
      <MemberSignature Language="VB.NET" Value="Public Property LinePragma As CodeLinePragma" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeLinePragma ^ LinePragma { System::CodeDom::CodeLinePragma ^ get(); void set(System::CodeDom::CodeLinePragma ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LinePragma : System.CodeDom.CodeLinePragma with get, set" Usage="System.CodeDom.CodeSnippetCompileUnit.LinePragma" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeLinePragma</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69416-116">获取或设置有关代码在源代码文档中的位置的行信息和文件信息。</span><span class="sxs-lookup"><span data-stu-id="69416-116">Gets or sets the line and file information about where the code is located in a source code document.</span></span></summary>
        <value><span data-ttu-id="69416-117"><see cref="T:System.CodeDom.CodeLinePragma" />，指示代码片段的位置。</span><span class="sxs-lookup"><span data-stu-id="69416-117">A <see cref="T:System.CodeDom.CodeLinePragma" /> that indicates the position of the code fragment.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeLinePragma" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeSnippetCompileUnit.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.CodeDom.CodeSnippetCompileUnit.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69416-118">获取或设置要表示的原义代码片段。</span><span class="sxs-lookup"><span data-stu-id="69416-118">Gets or sets the literal code fragment to represent.</span></span></summary>
        <value><span data-ttu-id="69416-119">原义代码片段。</span><span class="sxs-lookup"><span data-stu-id="69416-119">The literal code fragment.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
