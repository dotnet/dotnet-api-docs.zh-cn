<Type Name="AsnWriter" FullName="System.Formats.Asn1.AsnWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d0323a1d2f5839a585aff4e8de9459519bf97e4" /><Meta Name="ms.sourcegitcommit" Value="ec905a25e6dd05a6a3ffa7f30bf59f3095a8cd67" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/01/2020" /><Meta Name="ms.locfileid" Value="89249794" /></Metadata><TypeSignature Language="C#" Value="public sealed class AsnWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AsnWriter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Formats.Asn1.AsnWriter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AsnWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsnWriter sealed" />
  <TypeSignature Language="F#" Value="type AsnWriter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Formats.Asn1</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>用于 BER、CER 和 DER 编码的 ASN. 1 数据的编写器。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AsnWriter (System.Formats.Asn1.AsnEncodingRules ruleSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Formats.Asn1.AsnEncodingRules ruleSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.#ctor(System.Formats.Asn1.AsnEncodingRules)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ruleSet As AsnEncodingRules)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AsnWriter(System::Formats::Asn1::AsnEncodingRules ruleSet);" />
      <MemberSignature Language="F#" Value="new System.Formats.Asn1.AsnWriter : System.Formats.Asn1.AsnEncodingRules -&gt; System.Formats.Asn1.AsnWriter" Usage="new System.Formats.Asn1.AsnWriter ruleSet" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ruleSet" Type="System.Formats.Asn1.AsnEncodingRules" />
      </Parameters>
      <Docs>
        <param name="ruleSet">编写器的编码约束。</param>
        <summary>使用一组给定的编码规则新建 <see cref="T:System.Formats.Asn1.AsnWriter" />。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">未定义 <paramref name="ruleSet" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Formats.Asn1.AsnWriter destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Formats.Asn1.AsnWriter destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.CopyTo(System.Formats.Asn1.AsnWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As AsnWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(System::Formats::Asn1::AsnWriter ^ destination);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Formats.Asn1.AsnWriter -&gt; unit" Usage="asnWriter.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Formats.Asn1.AsnWriter" />
      </Parameters>
      <Docs>
        <param name="destination">要接收值的编写器。</param>
        <summary>将此编写器的值复制到另一个编写器。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="destination" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 未通过 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 关闭。
-或- 此编写器为空。
-或- 此编写器表示多个顶级值。
-或- 此编写器值的编码方式与目标编写器的规则集不兼容。</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public byte[] Encode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.Encode" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encode();" />
      <MemberSignature Language="F#" Value="member this.Encode : unit -&gt; byte[]" Usage="asnWriter.Encode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回包含编码值的新数组。</summary>
        <returns>一个包含编码值的精确大小的数组。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 未通过 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 关闭。</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public int Encode (Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Encode(valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.Encode(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode (destination As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Encode(Span&lt;System::Byte&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.Encode : Span&lt;byte&gt; -&gt; int" Usage="asnWriter.Encode destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="destination">要写入的缓冲区。</param>
        <summary>将数据的已编码表示形式写入 <paramref name="destination" />。</summary>
        <returns>写入到 <paramref name="destination" /> 的字节数。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 未通过 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 关闭。</exception>
      </Docs>
    </Member>
    <Member MemberName="EncodedValueEquals">
      <MemberSignature Language="C#" Value="public bool EncodedValueEquals (System.Formats.Asn1.AsnWriter other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EncodedValueEquals(class System.Formats.Asn1.AsnWriter other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.Formats.Asn1.AsnWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodedValueEquals (other As AsnWriter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EncodedValueEquals(System::Formats::Asn1::AsnWriter ^ other);" />
      <MemberSignature Language="F#" Value="member this.EncodedValueEquals : System.Formats.Asn1.AsnWriter -&gt; bool" Usage="asnWriter.EncodedValueEquals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Formats.Asn1.AsnWriter" />
      </Parameters>
      <Docs>
        <param name="other">编码值要比较的实例。</param>
        <summary>确定 <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> 是否生成与 <paramref name="other" /> 相同的输出。</summary>
        <returns>如果挂起的编码数据与 <paramref name="other" /> 相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="other" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 未通过 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 关闭。</exception>
      </Docs>
    </Member>
    <Member MemberName="EncodedValueEquals">
      <MemberSignature Language="C#" Value="public bool EncodedValueEquals (ReadOnlySpan&lt;byte&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EncodedValueEquals(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodedValueEquals (other As ReadOnlySpan(Of Byte)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EncodedValueEquals(ReadOnlySpan&lt;System::Byte&gt; other);" />
      <MemberSignature Language="F#" Value="member this.EncodedValueEquals : ReadOnlySpan&lt;byte&gt; -&gt; bool" Usage="asnWriter.EncodedValueEquals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="other">要比较的编码值。</param>
        <summary>确定 <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> 是否生成与 <paramref name="other" /> 相同的输出。</summary>
        <returns>如果挂起的编码数据与 <paramref name="other" /> 相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 未通过 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 关闭。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEncodedLength">
      <MemberSignature Language="C#" Value="public int GetEncodedLength ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetEncodedLength() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.GetEncodedLength" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEncodedLength () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetEncodedLength();" />
      <MemberSignature Language="F#" Value="member this.GetEncodedLength : unit -&gt; int" Usage="asnWriter.GetEncodedLength " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取将由 <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" /> 写入的字节数。</summary>
        <returns>将由 <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" /> 写入的字节数。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">已调用 <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />、<see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" />，但未使用相应的 Pop 方法。</exception>
      </Docs>
    </Member>
    <Member MemberName="PopOctetString">
      <MemberSignature Language="C#" Value="public void PopOctetString (System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PopOctetString(valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub PopOctetString (Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.PopOctetString : Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.PopOctetString tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 4）。</param>
        <summary>指示已关闭带有通用 4 标记的公开八进制字符串，以将编写器返回到父上下文。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

在 <xref:System.Formats.Asn1.AsnEncodingRules.BER> 和 <xref:System.Formats.Asn1.AsnEncodingRules.DER> 模式中，编码内容将保留在单个基元八进制字符串中。
在 <xref:System.Formats.Asn1.AsnEncodingRules.CER> 模式下，将在需要时将内容分解为多个段。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
        <exception cref="T:System.InvalidOperationException">编写器当前不在具有指定标记的八进制字符串中。</exception>
      </Docs>
    </Member>
    <Member MemberName="PopSequence">
      <MemberSignature Language="C#" Value="public void PopSequence (System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PopSequence(valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub PopSequence (Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.PopSequence : Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.PopSequence tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 16）。</param>
        <summary>指示已关闭带有特定标记的公开 Sequence，以将编写器返回到父上下文。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
        <exception cref="T:System.InvalidOperationException">编写器当前不在具有指定标记的 Sequence 中。</exception>
      </Docs>
    </Member>
    <Member MemberName="PopSetOf">
      <MemberSignature Language="C#" Value="public void PopSetOf (System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PopSetOf(valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub PopSetOf (Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.PopSetOf : Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.PopSetOf tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 17）。</param>
        <summary>指示已关闭带有特定标记的公开 Set-Of，以将编写器返回到父上下文。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

在 <xref:System.Formats.Asn1.AsnEncodingRules.CER> 和 <xref:System.Formats.Asn1.AsnEncodingRules.DER> 模式下，编写器将在标记关闭时对元素集进行排序。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
        <exception cref="T:System.InvalidOperationException">编写器当前不在具有指定标记的 Set-Of 中。</exception>
      </Docs>
    </Member>
    <Member MemberName="PushOctetString">
      <MemberSignature Language="C#" Value="public System.Formats.Asn1.AsnWriter.Scope PushOctetString (System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Formats.Asn1.AsnWriter/Scope PushOctetString(valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Function PushOctetString (Optional tag As Nullable(Of Asn1Tag) = Nothing) As AsnWriter.Scope" />
      <MemberSignature Language="F#" Value="member this.PushOctetString : Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; System.Formats.Asn1.AsnWriter.Scope" Usage="asnWriter.PushOctetString tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Formats.Asn1.AsnWriter+Scope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 4）。</param>
        <summary>开始写入带有指定标记的八进制字符串值。</summary>
        <returns>将自动调用 <see cref="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 的可释放值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

此方法只是用于写入八进制字符串值的快捷键，其中内容也是 ASN. 1 个编码系统下编码的数据。
<xref:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})>调用时，整个嵌套的内容将被规范化为单个八进制字符串值，并为当前编码规则正确编码。
此方法并不一定会创建构造编码，并且在此推送/弹出内写入除八进制字符串以外的值是无效的。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PushSequence">
      <MemberSignature Language="C#" Value="public System.Formats.Asn1.AsnWriter.Scope PushSequence (System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Formats.Asn1.AsnWriter/Scope PushSequence(valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Function PushSequence (Optional tag As Nullable(Of Asn1Tag) = Nothing) As AsnWriter.Scope" />
      <MemberSignature Language="F#" Value="member this.PushSequence : Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; System.Formats.Asn1.AsnWriter.Scope" Usage="asnWriter.PushSequence tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Formats.Asn1.AsnWriter+Scope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 16）。</param>
        <summary>开始写入带有指定标记的 Sequence。</summary>
        <returns>将自动调用 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 的可释放值。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      </Docs>
    </Member>
    <Member MemberName="PushSetOf">
      <MemberSignature Language="C#" Value="public System.Formats.Asn1.AsnWriter.Scope PushSetOf (System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Formats.Asn1.AsnWriter/Scope PushSetOf(valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Function PushSetOf (Optional tag As Nullable(Of Asn1Tag) = Nothing) As AsnWriter.Scope" />
      <MemberSignature Language="F#" Value="member this.PushSetOf : Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; System.Formats.Asn1.AsnWriter.Scope" Usage="asnWriter.PushSetOf tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Formats.Asn1.AsnWriter+Scope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 17）。</param>
        <summary>开始写入带有指定标记的 Set-Of。</summary>
        <returns>将自动调用 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 的可释放值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

在 <xref:System.Formats.Asn1.AsnEncodingRules.CER> 和 <xref:System.Formats.Asn1.AsnEncodingRules.DER> 模式下，编写器将在标记关闭时对元素集进行排序。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="asnWriter.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>重置编写器使其不包含数据，且未释放资源。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuleSet">
      <MemberSignature Language="C#" Value="public System.Formats.Asn1.AsnEncodingRules RuleSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Formats.Asn1.AsnEncodingRules RuleSet" />
      <MemberSignature Language="DocId" Value="P:System.Formats.Asn1.AsnWriter.RuleSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RuleSet As AsnEncodingRules" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Formats::Asn1::AsnEncodingRules RuleSet { System::Formats::Asn1::AsnEncodingRules get(); };" />
      <MemberSignature Language="F#" Value="member this.RuleSet : System.Formats.Asn1.AsnEncodingRules" Usage="System.Formats.Asn1.AsnWriter.RuleSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Formats.Asn1.AsnEncodingRules</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此编写器使用的编码规则。</summary>
        <value>此编写器使用的编码规则。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryEncode">
      <MemberSignature Language="C#" Value="public bool TryEncode (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncode(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncode (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncode(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncode : Span&lt;byte&gt; * int -&gt; bool" Usage="asnWriter.TryEncode (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">要写入的缓冲区。</param>
        <param name="bytesWritten">成功后，将收到已写入 <paramref name="destination" /> 的字节数。</param>
        <summary>尝试将数据的已编码表示形式写入 <paramref name="destination" />。</summary>
        <returns>如果编码成功，则为 <see langword="true" />；如果 <paramref name="destination" /> 太小，则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 未通过 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 关闭。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBitString">
      <MemberSignature Language="C#" Value="public void WriteBitString (ReadOnlySpan&lt;byte&gt; value, int unusedBitCount = 0, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBitString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value, int32 unusedBitCount, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteBitString(System.ReadOnlySpan{System.Byte},System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBitString (value As ReadOnlySpan(Of Byte), Optional unusedBitCount As Integer = 0, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteBitString : ReadOnlySpan&lt;byte&gt; * int * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteBitString (value, unusedBitCount, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="unusedBitCount" Type="System.Int32" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">要写入的值。</param>
        <param name="unusedBitCount">不具语义的尾随位数。</param>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 3）。</param>
        <summary>写入带有指定标记的位字符串值。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。
-或- <paramref name="value" /> 长度为 0 且 <paramref name="unusedBitCount" /> 不为 0 -或- <paramref name="value" /> 不为空，并且已设置 <paramref name="unusedBitCount" /> 标识的任何位。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="unusedBitCount" /> 不在范围 [0,7] 内。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBoolean">
      <MemberSignature Language="C#" Value="public void WriteBoolean (bool value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBoolean(bool value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteBoolean(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBoolean (value As Boolean, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteBoolean : bool * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteBoolean (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">要写入的值。</param>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 1）。</param>
        <summary>写入带有指定标记的布尔值。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于方法是不正确的</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharacterString">
      <MemberSignature Language="C#" Value="public void WriteCharacterString (System.Formats.Asn1.UniversalTagNumber encodingType, ReadOnlySpan&lt;char&gt; str, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteCharacterString(valuetype System.Formats.Asn1.UniversalTagNumber encodingType, valuetype System.ReadOnlySpan`1&lt;char&gt; str, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteCharacterString (encodingType As UniversalTagNumber, str As ReadOnlySpan(Of Char), Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteCharacterString : System.Formats.Asn1.UniversalTagNumber * ReadOnlySpan&lt;char&gt; * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteCharacterString (encodingType, str, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodingType" Type="System.Formats.Asn1.UniversalTagNumber" />
        <Parameter Name="str" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="encodingType">枚举值之一，表示要使用的编码。</param>
        <param name="str">要写入的字符串。</param>
        <param name="tag">要写入的标记，或使用 <see langword="null" /> 作为符合请求的编码类型的通用标记。</param>
        <summary>使用指定的编码类型，以及与编码类型相对应的指定标记写入提供的字符串。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="encodingType" /> 不是受限制的字符串编码类型。
-或- <paramref name="encodingType" /> 是此方法当前不支持的受限制的字符串编码类型。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharacterString">
      <MemberSignature Language="C#" Value="public void WriteCharacterString (System.Formats.Asn1.UniversalTagNumber encodingType, string value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteCharacterString(valuetype System.Formats.Asn1.UniversalTagNumber encodingType, string value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteCharacterString (encodingType As UniversalTagNumber, value As String, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteCharacterString : System.Formats.Asn1.UniversalTagNumber * string * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteCharacterString (encodingType, value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodingType" Type="System.Formats.Asn1.UniversalTagNumber" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="encodingType">枚举值之一，表示要使用的编码。</param>
        <param name="value">要写入的字符串。</param>
        <param name="tag">要写入的标记，或使用 <see langword="null" /> 作为符合请求的编码类型的通用标记。</param>
        <summary>使用指定的编码类型，以及与编码类型相对应的指定标记写入提供的字符串。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> 为 <see langword="null" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="encodingType" /> 不是受限制的字符串编码类型。
-或- <paramref name="encodingType" /> 是此方法当前不支持的受限制的字符串编码类型。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedValue">
      <MemberSignature Language="C#" Value="public void WriteEncodedValue (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEncodedValue(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteEncodedValue(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEncodedValue (value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEncodedValue(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteEncodedValue : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="asnWriter.WriteEncodedValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">要写入的值。</param>
        <summary>写入已编码的单个值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

此方法仅检查标记和长度是否按照当前规则集进行编码，并且值的末尾是输入的结尾。 不会评估内容的语义含义。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">无法在当前编码规则下读取 <paramref name="value" />。
-或- <paramref name="value" /> 包含超出第一个值末尾的数据。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEnumeratedValue">
      <MemberSignature Language="C#" Value="public void WriteEnumeratedValue (Enum value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEnumeratedValue(class System.Enum value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEnumeratedValue (value As Enum, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteEnumeratedValue : Enum * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteEnumeratedValue (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Enum" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">要写入的装箱枚举值。</param>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 10）。</param>
        <summary>将一个非 [<see cref="T:System.FlagsAttribute" />] 枚举值作为带“通用 10”标记的枚举写入。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。
-或- <paramref name="value" /> 不是装箱枚举值。
-或- 未装箱的 <paramref name="value" /> 类型被声明为 [<see cref="T:System.FlagsAttribute" />]。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEnumeratedValue&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public void WriteEnumeratedValue&lt;TEnum&gt; (TEnum value, System.Formats.Asn1.Asn1Tag? tag = default) where TEnum : Enum;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEnumeratedValue&lt;(class System.Enum) TEnum&gt;(!!TEnum value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEnumeratedValue(Of TEnum As Enum) (value As TEnum, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteEnumeratedValue : 'Enum * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit (requires 'Enum :&gt; Enum)" Usage="asnWriter.WriteEnumeratedValue (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <BaseTypeName>System.Enum</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="TEnum" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum">要写入的非 [ <see cref="T:System.FlagsAttribute" /> ] 枚举类型。</typeparam>
        <param name="value">要写入的装箱枚举值。</param>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 10）。</param>
        <summary>将一个非 [<see cref="T:System.FlagsAttribute" />] 枚举值作为带“通用 10”标记的枚举写入。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。
-或- <typeparamref name="TEnum" /> 不是枚举。
-或- <typeparamref name="TEnum" /> 声明为 [<see cref="T:System.FlagsAttribute" />]。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteGeneralizedTime">
      <MemberSignature Language="C#" Value="public void WriteGeneralizedTime (DateTimeOffset value, bool omitFractionalSeconds = false, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteGeneralizedTime(valuetype System.DateTimeOffset value, bool omitFractionalSeconds, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteGeneralizedTime(System.DateTimeOffset,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteGeneralizedTime (value As DateTimeOffset, Optional omitFractionalSeconds As Boolean = false, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteGeneralizedTime : DateTimeOffset * bool * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteGeneralizedTime (value, omitFractionalSeconds, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
        <Parameter Name="omitFractionalSeconds" Type="System.Boolean" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">要写入的值。</param>
        <param name="omitFractionalSeconds"><see langword="true" /> 可以将 <paramref name="value" /> 中秒的小数部分视为 0，即使存在非零值也是如此。</param>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 24）。</param>
        <summary>将提供的 <see cref="T:System.DateTimeOffset" /> 写入为带有指定的“通用 24”的 GeneralizedTime，可以选择排除秒的小数部分。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteInteger">
      <MemberSignature Language="C#" Value="public void WriteInteger (long value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteInteger(int64 value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Int64,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteInteger (value As Long, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteInteger : int64 * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteInteger (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">要写入的值。</param>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 2）。</param>
        <summary>写入带有指定标记的整数值。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteInteger">
      <MemberSignature Language="C#" Value="public void WriteInteger (System.Numerics.BigInteger value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteInteger(valuetype System.Numerics.BigInteger value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Numerics.BigInteger,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteInteger (value As BigInteger, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteInteger : System.Numerics.BigInteger * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteInteger (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">要写入的值。</param>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 2）。</param>
        <summary>写入带有指定标记的整数值。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteInteger">
      <MemberSignature Language="C#" Value="public void WriteInteger (ReadOnlySpan&lt;byte&gt; value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteInteger(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteInteger (value As ReadOnlySpan(Of Byte), Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteInteger : ReadOnlySpan&lt;byte&gt; * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteInteger (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">要以带符号 Big-Endian 顺序写入的整数值。</param>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 2）。</param>
        <summary>写入带有指定标记的整数值。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
        <exception cref="T:System.ArgumentException">最多 9 个有效位设置完毕。
-或- 最多 9 个有效位均未设置。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteInteger">
      <MemberSignature Language="C#" Value="public void WriteInteger (ulong value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteInteger(unsigned int64 value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.UInt64,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteInteger (value As ULong, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteInteger : uint64 * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteInteger (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">要写入的值。</param>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 2）。</param>
        <summary>写入带有指定标记的整数值。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteIntegerUnsigned">
      <MemberSignature Language="C#" Value="public void WriteIntegerUnsigned (ReadOnlySpan&lt;byte&gt; value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteIntegerUnsigned(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteIntegerUnsigned(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteIntegerUnsigned (value As ReadOnlySpan(Of Byte), Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteIntegerUnsigned : ReadOnlySpan&lt;byte&gt; * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteIntegerUnsigned (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">要以无符号 Big-Endian 顺序写入的整数值。</param>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 2）。</param>
        <summary>写入带有指定标记的整数值。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
        <exception cref="T:System.ArgumentException">最多 9 个有效位均未设置。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNamedBitList">
      <MemberSignature Language="C#" Value="public void WriteNamedBitList (System.Collections.BitArray value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNamedBitList(class System.Collections.BitArray value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Collections.BitArray,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNamedBitList (value As BitArray, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteNamedBitList : System.Collections.BitArray * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteNamedBitList (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.BitArray" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">要写入的位</param>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 3）。</param>
        <summary>将位数组值作为带有指定标记的 NamedBitList 写入。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

位数组的索引对应于编码格式中的位号，这不同于通过字节数组生成的值 <xref:System.Collections.BitArray.CopyTo(System.Array,System.Int32)> 。
例如，位数组 `{ false, true, true }` `0b0110_0000` 使用5个未使用的位进行编码。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNamedBitList">
      <MemberSignature Language="C#" Value="public void WriteNamedBitList (Enum value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNamedBitList(class System.Enum value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNamedBitList (value As Enum, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteNamedBitList : Enum * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteNamedBitList (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Enum" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">要写入的装箱枚举值</param>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 3）。</param>
        <summary>将 [<see cref="T:System.FlagsAttribute" />] 枚举值作为带有指定标记的 NamedBitList 写入。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。
-或- <paramref name="value" /> 不是装箱枚举值。
-或- 未装箱类型 <paramref name="value" /> 未声明为 [<see cref="T:System.FlagsAttribute" />]。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNamedBitList&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public void WriteNamedBitList&lt;TEnum&gt; (TEnum value, System.Formats.Asn1.Asn1Tag? tag = default) where TEnum : Enum;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNamedBitList&lt;(class System.Enum) TEnum&gt;(!!TEnum value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNamedBitList(Of TEnum As Enum) (value As TEnum, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteNamedBitList : 'Enum * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit (requires 'Enum :&gt; Enum)" Usage="asnWriter.WriteNamedBitList (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <BaseTypeName>System.Enum</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="TEnum" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum"><see cref="T:System.FlagsAttribute" />要写入的 [] 枚举类型。</typeparam>
        <param name="value">要写入的枚举值</param>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 3）。</param>
        <summary>将 [<see cref="T:System.FlagsAttribute" />] 枚举值作为带有指定标记的 NamedBitList 写入。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。
-或- <typeparamref name="TEnum" /> 不是枚举值。
-或- <typeparamref name="TEnum" /> 未声明为 [<see cref="T:System.FlagsAttribute" />]。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNull">
      <MemberSignature Language="C#" Value="public void WriteNull (System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNull(valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteNull(System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNull (Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteNull : Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteNull tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 5）。</param>
        <summary>使用指定标记写入 NULL。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObjectIdentifier">
      <MemberSignature Language="C#" Value="public void WriteObjectIdentifier (ReadOnlySpan&lt;char&gt; oidValue, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteObjectIdentifier(valuetype System.ReadOnlySpan`1&lt;char&gt; oidValue, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteObjectIdentifier (oidValue As ReadOnlySpan(Of Char), Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteObjectIdentifier : ReadOnlySpan&lt;char&gt; * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteObjectIdentifier (oidValue, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oidValue" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="oidValue">要写入的对象标识符。</param>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 6）。</param>
        <summary>使用指定标记写入对象标识符。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。
-或- <paramref name="oidValue" /> 不是有效的点分隔的十进制对象标识符。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObjectIdentifier">
      <MemberSignature Language="C#" Value="public void WriteObjectIdentifier (string oidValue, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteObjectIdentifier(string oidValue, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteObjectIdentifier (oidValue As String, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteObjectIdentifier : string * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteObjectIdentifier (oidValue, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oidValue" Type="System.String" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="oidValue">要写入的对象标识符。</param>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 6）。</param>
        <summary>使用指定标记写入对象标识符。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。
-或- <paramref name="oidValue" /> 不是有效的点分隔的十进制对象标识符。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="oidValue" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteOctetString">
      <MemberSignature Language="C#" Value="public void WriteOctetString (ReadOnlySpan&lt;byte&gt; value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteOctetString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteOctetString(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteOctetString (value As ReadOnlySpan(Of Byte), Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteOctetString : ReadOnlySpan&lt;byte&gt; * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteOctetString (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">要写入的值。</param>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 4）。</param>
        <summary>写入带有指定标记的八进制字符串值。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteUtcTime">
      <MemberSignature Language="C#" Value="public void WriteUtcTime (DateTimeOffset value, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteUtcTime(valuetype System.DateTimeOffset value, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteUtcTime (value As DateTimeOffset, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteUtcTime : DateTimeOffset * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteUtcTime (value, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">要写入的值。</param>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 23）。</param>
        <summary>将提供的值作为带有指定标记的 UTCTime 写入，接受两位数年份在上下文中有效。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteUtcTime">
      <MemberSignature Language="C#" Value="public void WriteUtcTime (DateTimeOffset value, int twoDigitYearMax, System.Formats.Asn1.Asn1Tag? tag = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteUtcTime(valuetype System.DateTimeOffset value, int32 twoDigitYearMax, valuetype System.Nullable`1&lt;valuetype System.Formats.Asn1.Asn1Tag&gt; tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteUtcTime (value As DateTimeOffset, twoDigitYearMax As Integer, Optional tag As Nullable(Of Asn1Tag) = Nothing)" />
      <MemberSignature Language="F#" Value="member this.WriteUtcTime : DateTimeOffset * int * Nullable&lt;System.Formats.Asn1.Asn1Tag&gt; -&gt; unit" Usage="asnWriter.WriteUtcTime (value, twoDigitYearMax, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Formats.Asn1</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
        <Parameter Name="twoDigitYearMax" Type="System.Int32" />
        <Parameter Name="tag" Type="System.Nullable&lt;System.Formats.Asn1.Asn1Tag&gt;" />
      </Parameters>
      <Docs>
        <param name="value">要写入的值。</param>
        <param name="twoDigitYearMax">在转换为 UTC 后 <paramref name="value" /> 的最大有效年份。
对于 X.509 Time.utcTime 1950-2049 范围，则传递 <c>2049</c>。</param>
        <param name="tag">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 23）。</param>
        <summary>将提供的值作为带有指定标记的 UTCTime 写入，前提是该年份在允许范围内。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="value" />.<see cref="P:System.DateTimeOffset.Year" /> （转换为 UTC 后）不在 (<paramref name="twoDigitYearMax" /> - 100, <paramref name="twoDigitYearMax" />) 范围内。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
