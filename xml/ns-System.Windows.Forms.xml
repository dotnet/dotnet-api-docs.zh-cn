<Namespace Name="System.Windows.Forms">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ea5d7f2acac2d5ac7bcaae50e96e29437913a775" /><Meta Name="ms.sourcegitcommit" Value="397961a0164281b579f68064c3bb66c071f374d9" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/14/2020" /><Meta Name="ms.locfileid" Value="77043164" /></Metadata><Docs>
    <summary><see cref="N:System.Windows.Forms" /> 命名空间包含用于创建基于 Windows 的应用程序的类，以充分利用 Microsoft Windows 操作系统中提供的丰富的用户界面功能。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表显示了 <xref:System.Windows.Forms> 按类别分组的命名空间中的类。  
  
|类类别|详细信息|  
|--------------------|-------------|  
|-控件、用户控件和窗体|命名空间中的大多数类都 <xref:System.Windows.Forms> 是从类派生的 <xref:System.Windows.Forms.Control> 。 <xref:System.Windows.Forms.Control>类为中显示的所有控件提供基本功能 <xref:System.Windows.Forms.Form> 。 <xref:System.Windows.Forms.Form>类表示应用程序中的窗口。 这包括对话框、无模式窗口和多文档界面（MDI）客户端和父窗口。 还可以通过从类派生来创建自己的控件 <xref:System.Windows.Forms.UserControl> 。|  
|-菜单和工具栏|Windows 窗体包含一组丰富的类，用于创建你自己的具有新式外观和行为（外观和风格）的自定义工具栏和菜单。 <xref:System.Windows.Forms.ToolStrip>、 <xref:System.Windows.Forms.MenuStrip> 、 <xref:System.Windows.Forms.ContextMenuStrip> 和 <xref:System.Windows.Forms.StatusStrip> 分别可用于创建工具栏、菜单栏、上下文菜单和状态栏。|  
|-Controls|<xref:System.Windows.Forms>命名空间提供多种控件类，您可以使用这些类来创建丰富的用户界面。 某些控件设计用于应用程序中的数据输入，例如 <xref:System.Windows.Forms.TextBox> 和 <xref:System.Windows.Forms.ComboBox> 控件。 其他控件显示应用程序数据，例如 <xref:System.Windows.Forms.Label> 和 <xref:System.Windows.Forms.ListView> 。 命名空间还提供用于在应用程序中调用命令的控件，例如 <xref:System.Windows.Forms.Button> 。 <xref:System.Windows.Forms.WebBrowser>控件和托管 html 类（如 <xref:System.Windows.Forms.HtmlDocument> ）使你可以在托管的 Windows 窗体应用程序中显示和操作 html 页面。 <xref:System.Windows.Forms.MaskedTextBox>控件是高级数据输入控件，可让你定义自动接受或拒绝用户输入的掩码。 此外，还可以使用 <xref:System.Windows.Forms.PropertyGrid> 控件来创建自己的 Windows 窗体设计器，以显示控件的设计器可见属性。|  
|-布局|Windows 窗体中的几个重要类可帮助控制显示图面（如窗体或控件）上控件的布局。 <xref:System.Windows.Forms.FlowLayoutPanel>以串行方式布局其包含的所有控件，并 <xref:System.Windows.Forms.TableLayoutPanel> 允许定义单元和行以在固定网格中布局控件。 <xref:System.Windows.Forms.SplitContainer>将您的显示图面划分为两个或多个可调整部件。|  
|-数据和数据绑定|Windows 窗体定义用于绑定到数据源（例如数据库和 XML 文件）的丰富体系结构。 <xref:System.Windows.Forms.DataGridView>控件提供了一个可自定义的表，用于显示数据，并允许您自定义单元、行、列和边框。 <xref:System.Windows.Forms.BindingNavigator>控件表示在窗体上导航和处理数据的标准化方法; <xref:System.Windows.Forms.BindingNavigator> 通常与控件配对， <xref:System.Windows.Forms.BindingSource> 以便在窗体上移动数据记录并与它们进行交互。|  
|-组件|除了控件以外， <xref:System.Windows.Forms> 命名空间还提供了不从类派生， <xref:System.Windows.Forms.Control> 但仍向基于 Windows 的应用程序提供可视功能的其他类。 某些类（如 <xref:System.Windows.Forms.ToolTip> 和 <xref:System.Windows.Forms.ErrorProvider> ）将扩展功能或向用户提供信息。 使用 <xref:System.Windows.Forms.Help> 和 <xref:System.Windows.Forms.HelpProvider> 类，可以向应用程序的用户显示帮助信息。|  
|-公用对话框|Windows 提供了几个常见对话框，可用于在执行打开和保存文件、操作字体或文本颜色或打印等任务时，为应用程序提供一致的用户界面。 <xref:System.Windows.Forms.OpenFileDialog>和 <xref:System.Windows.Forms.SaveFileDialog> 类提供了显示对话框的功能，用户可以通过该对话框查找并输入要打开或保存的文件的名称。 <xref:System.Windows.Forms.FontDialog>类显示一个对话框，用于更改 <xref:System.Drawing.Font> 应用程序使用的的元素。 <xref:System.Windows.Forms.PageSetupDialog>、 <xref:System.Windows.Forms.PrintPreviewDialog> 和 <xref:System.Windows.Forms.PrintDialog> 类显示允许用户控制打印文档的各个方面的对话框。 有关从基于 Windows 的应用程序进行打印的详细信息，请参阅 <xref:System.Drawing.Printing> 命名空间。 除了常见对话框以外， <xref:System.Windows.Forms> 命名空间还提供 <xref:System.Windows.Forms.MessageBox> 类，用于显示可显示和检索用户数据的消息框。|  
  
 命名空间中有多个类 <xref:System.Windows.Forms> ，这些类为上一个摘要中提到的类提供支持。 支持类的示例包括枚举、事件参数类，以及由控件和组件中的事件使用的委托。  
  
> [!CAUTION]
>  不支持在 Windows 服务中使用 Windows 窗体命名空间中的类。 尝试从服务中使用这些类可能会产生意外的问题，例如降低服务性能和运行时异常。  
>   
>  如果你使用 .NET Framework 版本1.1 或 .NET Framework 1.0，并且必须使你的 Windows 窗体应用程序支持 Windows XP 视觉样式，请确保将控件的 `FlatStyle` 属性设置为， <xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType> 并将清单包含在可执行文件中。 清单是一个 XML 文件，它作为资源包含在您的应用程序可执行文件中，或作为与可执行文件位于同一目录中的单独文件。 有关清单的示例，请参见枚举的 "示例" 部分 <xref:System.Windows.Forms.FlatStyle> 。 默认情况下，为 .NET Framework 版本1.1、1.2 和2.0 启用视觉样式。  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>