<Type Name="DataService&lt;T&gt;" FullName="System.Data.Services.DataService&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="980ff4aec950c935be8c5cc0be485e59ba9ad2c9" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89747952" /></Metadata><TypeSignature Language="C#" Value="public class DataService&lt;T&gt; : System.Data.Services.IRequestHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataService`1&lt;T&gt; extends System.Object implements class System.Data.Services.IRequestHandler" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.DataService`1" />
  <TypeSignature Language="VB.NET" Value="Public Class DataService(Of T)&#xA;Implements IRequestHandler" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class DataService : System::Data::Services::IRequestHandler" />
  <TypeSignature Language="F#" Value="type DataService&lt;'T&gt; = class&#xA;    interface IRequestHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.Services.IRequestHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Allowed)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Allowed)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ServiceModel.ServiceBehavior(InstanceContextMode=System.ServiceModel.InstanceContextMode.PerCall)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ServiceModel.ServiceBehavior(InstanceContextMode=System.ServiceModel.InstanceContextMode.PerCall)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="8b6fd-101">定义数据服务的类型。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-101">Type that defines the data service.</span></span></typeparam>
    <summary><span data-ttu-id="8b6fd-102">用于开发 ADO.NET 数据服务的主入口点。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-102">The main entry point for developing an ADO.NET Data Service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6fd-103"><xref:System.Data.Services.DataService%601> 类对服务器系统的所有组件进行基本整合。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-103">The <xref:System.Data.Services.DataService%601> class does the basic integration of all components of the server system.</span></span> <span data-ttu-id="8b6fd-104">通过定义派生自 <xref:System.Data.Services.DataService%601> 的类以及引用兼容数据模型，创建将系统默认值用于授权和缓存的新数据服务。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-104">A new data service that uses system defaults for authorization and caching is created by defining a class that derives from the <xref:System.Data.Services.DataService%601> class and by referencing a compatible data model.</span></span>  
  
 <span data-ttu-id="8b6fd-105"><xref:System.Data.Services.DataService%601> 的类型必须公开至少一个返回 <xref:System.Linq.IQueryable%601> 实体类型集合的实体集的属性。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-105">The type of the <xref:System.Data.Services.DataService%601> must expose at least one property that returns an entity set that is an <xref:System.Linq.IQueryable%601> collection of entity types.</span></span> <span data-ttu-id="8b6fd-106">为了能够更新实体资源，此类还必须实现 <xref:System.Data.Services.IUpdatable> 接口。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-106">This class must also implement the <xref:System.Data.Services.IUpdatable> interface to enable updates to be made to entity resources.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataService`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b6fd-107">创建部署模板类所指示类型数据的新数据服务。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-107">Creates a new data service that deploys data of the type indicated by the template class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6fd-108">通过定义派生自 <xref:System.Data.Services.DataService%601> 的类以及引用兼容数据模型，创建将系统默认值用于授权和缓存的新数据服务。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-108">A new data service that uses system defaults for authorization and caching is created by defining a class that derives from the <xref:System.Data.Services.DataService%601> class and by referencing a compatible data model.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachHost">
      <MemberSignature Language="C#" Value="public void AttachHost (System.Data.Services.IDataServiceHost host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachHost(class System.Data.Services.IDataServiceHost host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataService`1.AttachHost(System.Data.Services.IDataServiceHost)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachHost (host As IDataServiceHost)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachHost(System::Data::Services::IDataServiceHost ^ host);" />
      <MemberSignature Language="F#" Value="member this.AttachHost : System.Data.Services.IDataServiceHost -&gt; unit" Usage="dataService.AttachHost host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.Data.Services.IDataServiceHost" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="8b6fd-109"><see cref="T:System.Data.Services.IDataServiceHost" /> 的一个实例。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-109">An instance of <see cref="T:System.Data.Services.IDataServiceHost" />.</span></span></param>
        <summary><span data-ttu-id="8b6fd-110">将数据服务主机附加到由参数 <paramref name="host" /> 标识的数据服务。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-110">Attaches the data service host to the data service identified by the parameter <paramref name="host" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6fd-111">附加的 <xref:System.Data.Services.IDataServiceHost> 主机由处理请求的数据服务使用。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-111">The <xref:System.Data.Services.IDataServiceHost> host attached is used by the data service to process requests.</span></span> <span data-ttu-id="8b6fd-112">当数据服务承载于 Windows Communication Foundation (WCF) 中时，无需设置主机。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-112">There is no requirement to set up a host when the data service is hosted in Windows Communication Foundation (WCF).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataSource">
      <MemberSignature Language="C#" Value="protected virtual T CreateDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !T CreateDataSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataService`1.CreateDataSource" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDataSource () As T" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual T CreateDataSource();" />
      <MemberSignature Language="F#" Value="abstract member CreateDataSource : unit -&gt; 'T&#xA;override this.CreateDataSource : unit -&gt; 'T" Usage="dataService.CreateDataSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b6fd-113">创建数据服务将使用的模板类的数据源。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-113">Creates a data source of the template class that will be used by the data service.</span></span></summary>
        <returns><span data-ttu-id="8b6fd-114">数据源的实例。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-114">An instance of the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6fd-115">默认情况下，将使用不带类型参数的构造函数（如果可用）。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-115">By default, a constructor without parameters on the type will be used if available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDataSource">
      <MemberSignature Language="C#" Value="protected T CurrentDataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T CurrentDataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.DataService`1.CurrentDataSource" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CurrentDataSource As T" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property T CurrentDataSource { T get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDataSource : 'T" Usage="System.Data.Services.DataService&lt;'T&gt;.CurrentDataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b6fd-116">获取当前正用于处理请求的数据源实例。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-116">Gets the data source instance currently being used to process the request.</span></span></summary>
        <value><span data-ttu-id="8b6fd-117">服务的数据源实例。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-117">The data source instance for the service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6fd-118">构造类时使用的模板类的实例。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-118">An instance of the template class used when the class was constructed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleException">
      <MemberSignature Language="C#" Value="protected virtual void HandleException (System.Data.Services.HandleExceptionArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void HandleException(class System.Data.Services.HandleExceptionArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataService`1.HandleException(System.Data.Services.HandleExceptionArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub HandleException (args As HandleExceptionArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void HandleException(System::Data::Services::HandleExceptionArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member HandleException : System.Data.Services.HandleExceptionArgs -&gt; unit&#xA;override this.HandleException : System.Data.Services.HandleExceptionArgs -&gt; unit" Usage="dataService.HandleException args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Data.Services.HandleExceptionArgs" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="8b6fd-119">异常自变量。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-119">Exception arguments.</span></span></param>
        <summary><span data-ttu-id="8b6fd-120">在处理请求的过程中引发异常时调用。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-120">Called when an exception is raised while processing a request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6fd-121">数据服务可能会修改 `args` 实例，以自定义在响应中发送异常的方式。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-121">A data service may modify the `args` instance to customize how the exception will be sent in the response.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStartProcessingRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnStartProcessingRequest (System.Data.Services.ProcessRequestArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStartProcessingRequest(class System.Data.Services.ProcessRequestArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataService`1.OnStartProcessingRequest(System.Data.Services.ProcessRequestArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStartProcessingRequest (args As ProcessRequestArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStartProcessingRequest(System::Data::Services::ProcessRequestArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnStartProcessingRequest : System.Data.Services.ProcessRequestArgs -&gt; unit&#xA;override this.OnStartProcessingRequest : System.Data.Services.ProcessRequestArgs -&gt; unit" Usage="dataService.OnStartProcessingRequest args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Data.Services.ProcessRequestArgs" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="8b6fd-122">包含请求相关信息的 <see cref="T:System.Data.Services.ProcessRequestArgs" />。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-122"><see cref="T:System.Data.Services.ProcessRequestArgs" /> that contains information about the request.</span></span></param>
        <summary><span data-ttu-id="8b6fd-123">在处理每个请求之前调用。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-123">Called before processing each request.</span></span> <span data-ttu-id="8b6fd-124">对于批处理请求，将针对顶级批处理请求和批处理中的每个操作各调用一次。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-124">For batch requests, it is called one time for the top batch request and one time for each operation in the batch.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessingPipeline">
      <MemberSignature Language="C#" Value="public System.Data.Services.DataServiceProcessingPipeline ProcessingPipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Services.DataServiceProcessingPipeline ProcessingPipeline" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.DataService`1.ProcessingPipeline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessingPipeline As DataServiceProcessingPipeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::DataServiceProcessingPipeline ^ ProcessingPipeline { System::Data::Services::DataServiceProcessingPipeline ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessingPipeline : System.Data.Services.DataServiceProcessingPipeline" Usage="System.Data.Services.DataService&lt;'T&gt;.ProcessingPipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.DataServiceProcessingPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b6fd-125">获取为数据服务处理管道定义事件的对象。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-125">Gets an object that defines the events for the data service processing pipeline.</span></span></summary>
        <value><span data-ttu-id="8b6fd-126">用于为数据服务处理管道定义事件的 <see cref="T:System.Data.Services.DataServiceProcessingPipeline" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-126">A <see cref="T:System.Data.Services.DataServiceProcessingPipeline" /> object that is used to define events for the data service processing pipeline.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public void ProcessRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ProcessRequest() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataService`1.ProcessRequest" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessRequest ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessRequest();" />
      <MemberSignature Language="F#" Value="member this.ProcessRequest : unit -&gt; unit" Usage="dataService.ProcessRequest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b6fd-127">处理 HTTP 请求。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-127">Processes an HTTP request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b6fd-128">在调用 <xref:System.Data.Services.DataService%601.AttachHost%2A> 前应调用 <xref:System.Data.Services.DataService%601.ProcessRequest%2A> 方法，以获取请求信息并生成响应。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-128">The <xref:System.Data.Services.DataService%601.AttachHost%2A> method should be invoked before you call <xref:System.Data.Services.DataService%601.ProcessRequest%2A> to get request information and build the response.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequestForMessage">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message ProcessRequestForMessage (System.IO.Stream messageBody);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ProcessRequestForMessage(class System.IO.Stream messageBody) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataService`1.ProcessRequestForMessage(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessRequestForMessage (messageBody As Stream) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ ProcessRequestForMessage(System::IO::Stream ^ messageBody);" />
      <MemberSignature Language="F#" Value="abstract member ProcessRequestForMessage : System.IO.Stream -&gt; System.ServiceModel.Channels.Message&#xA;override this.ProcessRequestForMessage : System.IO.Stream -&gt; System.ServiceModel.Channels.Message" Usage="dataService.ProcessRequestForMessage messageBody" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Services.IRequestHandler.ProcessRequestForMessage(System.IO.Stream)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBody" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="messageBody"><span data-ttu-id="8b6fd-129">HTTP 请求的正文。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-129">The body of the HTTP request.</span></span></param>
        <summary><span data-ttu-id="8b6fd-130">处理 HTTP 请求。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-130">Processes an HTTP request.</span></span></summary>
        <returns><span data-ttu-id="8b6fd-131">响应消息。</span><span class="sxs-lookup"><span data-stu-id="8b6fd-131">Response message.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
