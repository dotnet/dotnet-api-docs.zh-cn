<Type Name="ChangeInterceptorAttribute" FullName="System.Data.Services.ChangeInterceptorAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7d0931abb934e4e00c72f07d892cc79205ea119b" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89788657" /></Metadata><TypeSignature Language="C#" Value="public sealed class ChangeInterceptorAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ChangeInterceptorAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.ChangeInterceptorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ChangeInterceptorAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChangeInterceptorAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ChangeInterceptorAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>方法上的 <see cref="T:System.Data.Services.ChangeInterceptorAttribute" /> 用于处理对指定实体集名称的更新。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 资源级更改授权和验证由上批注的方法实现 <xref:System.Data.Services.ChangeInterceptorAttribute> 。 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] 提供服务开发人员编写每个实体的更改处理规则和验证所需的基础结构。  
  
 可以通过查询侦听器强制执行实体级别的访问控制和验证。 有关详细信息，请参阅 <xref:System.Data.Services.QueryInterceptorAttribute>。  
  
-  
  
   
  
## Examples  
 有关详细信息，请参阅主题中的示例 <xref:System.Data.Services.QueryInterceptorAttribute> 。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChangeInterceptorAttribute (string entitySetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string entitySetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.ChangeInterceptorAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entitySetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChangeInterceptorAttribute(System::String ^ entitySetName);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.ChangeInterceptorAttribute : string -&gt; System.Data.Services.ChangeInterceptorAttribute" Usage="new System.Data.Services.ChangeInterceptorAttribute entitySetName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entitySetName">实体集的名称，其中包含要应用拦截器的实体。</param>
        <summary>为 <paramref name="entitySetName" /> 参数指定的实体集创建新更改拦截器。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntitySetName">
      <MemberSignature Language="C#" Value="public string EntitySetName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntitySetName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.ChangeInterceptorAttribute.EntitySetName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntitySetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntitySetName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntitySetName : string" Usage="System.Data.Services.ChangeInterceptorAttribute.EntitySetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取要应用拦截器的实体集的名称。</summary>
        <value>表示实体集名称的字符串值。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
