<Type Name="TextElementEnumerator" FullName="System.Globalization.TextElementEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ebdb4c1560e882e1bbaf9aaf901d565fabb0c2ce" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86815142" /></Metadata><TypeSignature Language="C#" Value="public class TextElementEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextElementEnumerator extends System.Object implements class System.Collections.IEnumerator" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.TextElementEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class TextElementEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextElementEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type TextElementEnumerator = class&#xA;    interface IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TextElementEnumerator extends System.Object implements class System.Collections.IEnumerator" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Globalization" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Globalization" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="be102-101">枚举字符串的文本元素。</span><span class="sxs-lookup"><span data-stu-id="be102-101">Enumerates the text elements of a string.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be102-102">.NET Framework 将文本元素定义为显示为单个字符（即字形）的文本单元。</span><span class="sxs-lookup"><span data-stu-id="be102-102">The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="be102-103">文本元素可以是以下任一项：</span><span class="sxs-lookup"><span data-stu-id="be102-103">A text element can be any of the following:</span></span>  
  
-   <span data-ttu-id="be102-104">基字符，以单个 <xref:System.Char> 值表示。</span><span class="sxs-lookup"><span data-stu-id="be102-104">A base character, which is represented as a single <xref:System.Char> value.</span></span> <span data-ttu-id="be102-105">例如，拉丁文大写字母 A (U + 0041) 和拉丁语小写字母 AE (U + 00E6) 是基本字符。</span><span class="sxs-lookup"><span data-stu-id="be102-105">For example, LATIN CAPITAL LETTER A (U+0041) and LATIN SMALL LETTER AE (U+00E6) are base characters.</span></span>  
  
-   <span data-ttu-id="be102-106">一个组合字符序列，其中包含一个基字符和一个或多个组合字符。</span><span class="sxs-lookup"><span data-stu-id="be102-106">A combining character sequence, which consists of a base character and one or more combining characters.</span></span> <span data-ttu-id="be102-107">例如，例如，拉丁文大写字母 A (U + 0041) 后跟组合长音符 (U + 0304) 是组合字符序列。</span><span class="sxs-lookup"><span data-stu-id="be102-107">For example, example, LATIN CAPITAL LETTER A (U+0041) followed by COMBINING MACRON (U+0304) is a combining character sequence.</span></span>  
  
-   <span data-ttu-id="be102-108">代理项对，其中 [Unicode 标准](https://go.microsoft.com/fwlink/?linkid=37123) 定义为由两个代码单元序列组成的单个抽象字符的编码字符表示形式：高代理项和低代理项。</span><span class="sxs-lookup"><span data-stu-id="be102-108">Surrogate pairs, which the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines as a coded character representation for a single abstract character that consists of a sequence of two code units: a high surrogate, and a low surrogate.</span></span> <span data-ttu-id="be102-109">代理项对用于将 Unicode 基本多语言平面之外的字符表示为 UTF-16 编码字符。</span><span class="sxs-lookup"><span data-stu-id="be102-109">Surrogate pairs are used to represent characters outside of the Unicode Basic Multilingual Plane as UTF-16 encoded characters.</span></span> <span data-ttu-id="be102-110">例如，哥特字母 SAUIL (U + 10343) 以 UTF-16 编码表示，其值为0xD800，低代理项的值为0xDF43。</span><span class="sxs-lookup"><span data-stu-id="be102-110">For example, GOTHIC LETTER SAUIL (U+10343) is represented in UTF-16 encoding as a high surrogate whose value is 0xD800 and a low surrogate whose value is 0xDF43.</span></span> <span data-ttu-id="be102-111">代理项对可表示基字符或组合字符。</span><span class="sxs-lookup"><span data-stu-id="be102-111">A surrogate pair can represent a base character or a combining character.</span></span>  
  
 <span data-ttu-id="be102-112">通过 <xref:System.Globalization.TextElementEnumerator> 类，可以使用字符串中的文本元素，而不是使用单个 <xref:System.Char> 对象。</span><span class="sxs-lookup"><span data-stu-id="be102-112">The <xref:System.Globalization.TextElementEnumerator> class allows you to work with the text elements in a string rather than with single <xref:System.Char> objects.</span></span>  
  
 <span data-ttu-id="be102-113"><xref:System.Globalization.TextElementEnumerator>通过将字符串传递给方法，实例化表示特定字符串的对象 <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="be102-113">You instantiate a <xref:System.Globalization.TextElementEnumerator> object that represents a particular string by passing the string to the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="be102-114">这会返回一个枚举器，该枚举器位于字符串中第一个文本元素之前。</span><span class="sxs-lookup"><span data-stu-id="be102-114">This returns an enumerator that is positioned before the first text element in the string.</span></span> <span data-ttu-id="be102-115">调用 <xref:System.Globalization.TextElementEnumerator.Reset%2A> 方法还会使枚举数返回到此位置。</span><span class="sxs-lookup"><span data-stu-id="be102-115">Calling the <xref:System.Globalization.TextElementEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span> <span data-ttu-id="be102-116">因为这表示无效状态，所以必须先调用 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 以将枚举数前移到字符串的第一个文本元素，然后才能读取属性的值 <xref:System.Globalization.TextElementEnumerator.Current%2A> 以返回当前文本元素。</span><span class="sxs-lookup"><span data-stu-id="be102-116">Because this represents an invalid state, you must call <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> to advance the enumerator to the first text element of the string before reading the value of the <xref:System.Globalization.TextElementEnumerator.Current%2A> property to return the current text element.</span></span>  
  
 <span data-ttu-id="be102-117">使用 <xref:System.Globalization.TextElementEnumerator> 对象时，需要负责定位枚举器。</span><span class="sxs-lookup"><span data-stu-id="be102-117">When working with a <xref:System.Globalization.TextElementEnumerator> object, you are responsible for positioning the enumerator.</span></span> <span data-ttu-id="be102-118">在 <xref:System.Globalization.TextElementEnumerator.Current%2A> 调用或之前，属性将返回相同的文本 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 元素 <xref:System.Globalization.TextElementEnumerator.Reset%2A> 。</span><span class="sxs-lookup"><span data-stu-id="be102-118">The <xref:System.Globalization.TextElementEnumerator.Current%2A> property returns the same text element until you call either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A>.</span></span> <span data-ttu-id="be102-119">如果枚举数位于第一个文本元素之前或字符串中最后一个文本元素之后，则该枚举器处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="be102-119">The enumerator is in an invalid state if it is positioned before the first text element or after the last text element in the string.</span></span> <span data-ttu-id="be102-120">当枚举器处于无效状态时，尝试检索属性的值会 <xref:System.Globalization.TextElementEnumerator.Current%2A> 引发异常。</span><span class="sxs-lookup"><span data-stu-id="be102-120">When the enumerator is in an invalid state, attempting to retrieve the value of the <xref:System.Globalization.TextElementEnumerator.Current%2A> property throws an exception.</span></span> <span data-ttu-id="be102-121">通过测试属性的返回值是否为，可以确定枚举器是否处于无效状态 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> `false` 。</span><span class="sxs-lookup"><span data-stu-id="be102-121">You can determine whether the enumerator is in an invalid state by testing whether the return value of the <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> property is `false`.</span></span>  
  
 <span data-ttu-id="be102-122"><xref:System.Globalization.TextElementEnumerator>对象表示字符串变量的当前状态或 <xref:System.Globalization.TextElementEnumerator> 实例化对象时字符串的当前状态的快照。</span><span class="sxs-lookup"><span data-stu-id="be102-122">The <xref:System.Globalization.TextElementEnumerator> object represents a snapshot of the current state of a string variable or string literal at the moment that the <xref:System.Globalization.TextElementEnumerator> object is instantiated.</span></span> <span data-ttu-id="be102-123">请注意：</span><span class="sxs-lookup"><span data-stu-id="be102-123">Note that:</span></span>  
  
-   <span data-ttu-id="be102-124">文本元素枚举器仅可用于读取字符串中的数据。</span><span class="sxs-lookup"><span data-stu-id="be102-124">Text element enumerators can only be used to read data in a string.</span></span> <span data-ttu-id="be102-125">它们不能修改基础字符串。</span><span class="sxs-lookup"><span data-stu-id="be102-125">They cannot modify the underlying string.</span></span>  
  
-   <span data-ttu-id="be102-126">枚举器不具有对它所表示的字符串的独占访问权限。</span><span class="sxs-lookup"><span data-stu-id="be102-126">An enumerator does not have exclusive access to the string that it represents.</span></span> <span data-ttu-id="be102-127">创建枚举器后，可以修改字符串变量。</span><span class="sxs-lookup"><span data-stu-id="be102-127">A string variable can be modified after the enumerator is created.</span></span>  
  
-   <span data-ttu-id="be102-128"><xref:System.Globalization.TextElementEnumerator>对象枚举在实例化对象时字符串中存在的文本元素 <xref:System.Globalization.TextElementEnumerator> 。</span><span class="sxs-lookup"><span data-stu-id="be102-128">A <xref:System.Globalization.TextElementEnumerator> object enumerates the text elements present in the string at the time that the <xref:System.Globalization.TextElementEnumerator> object was instantiated.</span></span> <span data-ttu-id="be102-129">如果以后修改了该变量，则它不会反映对字符串变量的任何后续更改。</span><span class="sxs-lookup"><span data-stu-id="be102-129">It does not reflect any subsequent changes to the string variable if that variable is modified afterward.</span></span>  
  
-   <span data-ttu-id="be102-130">由于 <xref:System.Globalization.TextElementEnumerator> 类不重写 <xref:System.Object.Equals%2A?displayProperty=nameWithType> ，因此 <xref:System.Globalization.TextElementEnumerator> 表示相同字符串的两个对象将被视为不相等。</span><span class="sxs-lookup"><span data-stu-id="be102-130">Because the <xref:System.Globalization.TextElementEnumerator> class does not override <xref:System.Object.Equals%2A?displayProperty=nameWithType>, two <xref:System.Globalization.TextElementEnumerator> objects that represent the same string will be considered unequal.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="be102-131">下面的示例使用 <xref:System.Globalization.TextElementEnumerator> 类来枚举字符串的文本元素。</span><span class="sxs-lookup"><span data-stu-id="be102-131">The following example uses the <xref:System.Globalization.TextElementEnumerator> class to enumerate the text elements of a string.</span></span>  
  
 [!code-cpp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CPP/tee_summary.cpp#1)]
 [!code-csharp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CS/tee_summary.cs#1)]
 [!code-vb[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/VB/tee_summary.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.StringInfo" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Globalization.TextElementEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be102-132">获取字符串中的当前文本元素。</span><span class="sxs-lookup"><span data-stu-id="be102-132">Gets the current text element in the string.</span></span></summary>
        <value><span data-ttu-id="be102-133">包含字符串中当前文本元素的对象。</span><span class="sxs-lookup"><span data-stu-id="be102-133">An object containing the current text element in the string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be102-134">在创建枚举器之后或在 <xref:System.Globalization.TextElementEnumerator.Reset%2A> 调用之后， <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 必须调用以将枚举数前移到字符串的第一个文本元素，然后才能读取的值 <xref:System.Globalization.TextElementEnumerator.Current%2A> 。</span><span class="sxs-lookup"><span data-stu-id="be102-134">After an enumerator is created or after a <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of <xref:System.Globalization.TextElementEnumerator.Current%2A>.</span></span> <span data-ttu-id="be102-135">否则 <xref:System.Globalization.TextElementEnumerator.Current%2A> 为 undefined。</span><span class="sxs-lookup"><span data-stu-id="be102-135">Otherwise, <xref:System.Globalization.TextElementEnumerator.Current%2A> is undefined.</span></span>  
  
 <span data-ttu-id="be102-136"><xref:System.Globalization.TextElementEnumerator.Current%2A> 如果最后一次调用返回的，则还会引发异常 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> `false` ，指示字符串的末尾。</span><span class="sxs-lookup"><span data-stu-id="be102-136"><xref:System.Globalization.TextElementEnumerator.Current%2A> also throws an exception if the last call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returned `false`, which indicates the end of the string.</span></span>  
  
 <span data-ttu-id="be102-137"><xref:System.Globalization.TextElementEnumerator.Current%2A> 不移动枚举器的位置，并且连续调用将 <xref:System.Globalization.TextElementEnumerator.Current%2A> 返回相同的对象，直到 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> <xref:System.Globalization.TextElementEnumerator.Reset%2A> 调用或。</span><span class="sxs-lookup"><span data-stu-id="be102-137"><xref:System.Globalization.TextElementEnumerator.Current%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Globalization.TextElementEnumerator.Current%2A> return the same object until either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="be102-138">枚举数位于字符串的第一个文本元素之前或最后一个文本元素之后。</span><span class="sxs-lookup"><span data-stu-id="be102-138">The enumerator is positioned before the first text element of the string or after the last text element.</span></span></exception>
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="ElementIndex">
      <MemberSignature Language="C#" Value="public int ElementIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementIndex" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementIndex : int" Usage="System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="be102-139">获取枚举数当前置于其上的文本元素的索引。</span><span class="sxs-lookup"><span data-stu-id="be102-139">Gets the index of the text element that the enumerator is currently positioned over.</span></span></summary>
        <value><span data-ttu-id="be102-140">枚举数当前置于其上的文本元素的索引。</span><span class="sxs-lookup"><span data-stu-id="be102-140">The index of the text element that the enumerator is currently positioned over.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="be102-141">枚举数位于字符串的第一个文本元素之前或最后一个文本元素之后。</span><span class="sxs-lookup"><span data-stu-id="be102-141">The enumerator is positioned before the first text element of the string or after the last text element.</span></span></exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElement">
      <MemberSignature Language="C#" Value="public string GetTextElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextElement () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextElement();" />
      <MemberSignature Language="F#" Value="member this.GetTextElement : unit -&gt; string" Usage="textElementEnumerator.GetTextElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="be102-142">获取字符串中的当前文本元素。</span><span class="sxs-lookup"><span data-stu-id="be102-142">Gets the current text element in the string.</span></span></summary>
        <returns><span data-ttu-id="be102-143">一个包含所读取的字符串中当前文本元素的新字符串。</span><span class="sxs-lookup"><span data-stu-id="be102-143">A new string containing the current text element in the string being read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be102-144">此方法返回与属性相同的文本元素 <xref:System.Globalization.TextElementEnumerator.Current%2A> 。</span><span class="sxs-lookup"><span data-stu-id="be102-144">This method returns the same text element as the <xref:System.Globalization.TextElementEnumerator.Current%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="be102-145">枚举数位于字符串的第一个文本元素之前或最后一个文本元素之后。</span><span class="sxs-lookup"><span data-stu-id="be102-145">The enumerator is positioned before the first text element of the string or after the last text element.</span></span></exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="textElementEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="be102-146">将枚举数前移到字符串的下一个文本元素。</span><span class="sxs-lookup"><span data-stu-id="be102-146">Advances the enumerator to the next text element of the string.</span></span></summary>
        <returns><span data-ttu-id="be102-147">如果枚举数成功前移到下一个文本元素，则为 <see langword="true" />；如果枚举数已超过字符串的结尾，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="be102-147"><see langword="true" /> if the enumerator was successfully advanced to the next text element; <see langword="false" /> if the enumerator has passed the end of the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be102-148">在创建枚举器之后或在 <xref:System.Globalization.TextElementEnumerator.Reset%2A> 调用之后，枚举数将定位在字符串的第一个文本元素之前，第一次调用将 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 枚举器移动到字符串的第一个文本元素上。</span><span class="sxs-lookup"><span data-stu-id="be102-148">After an enumerator is created or after a <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, the enumerator is positioned before the first text element of the string, and the first call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> moves the enumerator over the first text element of the string.</span></span>  
  
 <span data-ttu-id="be102-149">如果在创建此枚举器后修改字符串，将 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 引发异常。</span><span class="sxs-lookup"><span data-stu-id="be102-149">If the string is modified after this enumerator was created, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> throws an exception.</span></span>  
  
 <span data-ttu-id="be102-150">传递字符串末尾后，对的后续调用将返回， <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> `false` 直到 <xref:System.Globalization.TextElementEnumerator.Reset%2A> 调用。</span><span class="sxs-lookup"><span data-stu-id="be102-150">After the end of the string is passed, subsequent calls to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> return `false` until <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="textElementEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="be102-151">将枚举数设置为其初始位置，该位置位于字符串中第一个文本元素之前。</span><span class="sxs-lookup"><span data-stu-id="be102-151">Sets the enumerator to its initial position, which is before the first text element in the string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="be102-152"><xref:System.Globalization.TextElementEnumerator.Reset%2A>方法将枚举数移到字符串的开头（在第一个文本元素之前）。</span><span class="sxs-lookup"><span data-stu-id="be102-152">The <xref:System.Globalization.TextElementEnumerator.Reset%2A> method moves the enumerator to the beginning of the string, before the first text element.</span></span> <span data-ttu-id="be102-153">调用后 <xref:System.Globalization.TextElementEnumerator.Reset%2A> ，必须先调用 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 以将枚举数前移到字符串的第一个文本元素，然后再调用 <xref:System.Globalization.TextElementEnumerator.Current%2A> 以读取第一个文本元素的值。</span><span class="sxs-lookup"><span data-stu-id="be102-153">After calling <xref:System.Globalization.TextElementEnumerator.Reset%2A>, you must call <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> to advance the enumerator to the first text element of the string before calling <xref:System.Globalization.TextElementEnumerator.Current%2A> to read the value of the first text element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>
