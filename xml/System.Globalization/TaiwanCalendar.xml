<Type Name="TaiwanCalendar" FullName="System.Globalization.TaiwanCalendar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a4b1b813883b7b17e0b795c583488c27e8aaa488" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89727384" /></Metadata><TypeSignature Language="C#" Value="public class TaiwanCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaiwanCalendar extends System.Globalization.Calendar" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.TaiwanCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class TaiwanCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaiwanCalendar : System::Globalization::Calendar" />
  <TypeSignature Language="F#" Value="type TaiwanCalendar = class&#xA;    inherit Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable TaiwanCalendar extends System.Globalization.Calendar" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TaiwanCalendar extends System.Globalization.Calendar" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Globalization.Calendars" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Globalization.Calendars" FromVersion="4.1.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Globalization.Calendars" FromVersion="4.1.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Globalization.Calendars" FromVersion="4.1.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="eec44-101">表示中国台湾日历。</span><span class="sxs-lookup"><span data-stu-id="eec44-101">the Taiwan calendar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eec44-102">台湾历的工作方式与公历完全相同，不同之处在于年和纪元不同。</span><span class="sxs-lookup"><span data-stu-id="eec44-102">The Taiwan calendar works exactly like the Gregorian calendar, except that the year and era are different.</span></span> <span data-ttu-id="eec44-103"><xref:System.Globalization.TaiwanCalendar>类仅识别当前纪元。</span><span class="sxs-lookup"><span data-stu-id="eec44-103">The <xref:System.Globalization.TaiwanCalendar> class recognizes only the current era.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eec44-104">有关使用 <xref:System.Globalization.TaiwanCalendar> .NET Framework 中的类和其他 calendar 类的信息，请参阅使用 [日历](/dotnet/standard/datetime/working-with-calendars)。</span><span class="sxs-lookup"><span data-stu-id="eec44-104">For information about using the <xref:System.Globalization.TaiwanCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](/dotnet/standard/datetime/working-with-calendars).</span></span>  
  
 <span data-ttu-id="eec44-105">台湾日历中的闰年对应于公历中的相同闰年。</span><span class="sxs-lookup"><span data-stu-id="eec44-105">Leap years in the Taiwan calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="eec44-106">公历中的闰年定义为可被四整除的公历年份，但它可被100整除。</span><span class="sxs-lookup"><span data-stu-id="eec44-106">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="eec44-107">但是，400可以整除的公历年是闰年。</span><span class="sxs-lookup"><span data-stu-id="eec44-107">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="eec44-108">一个常见年份有365天，闰年有366天。</span><span class="sxs-lookup"><span data-stu-id="eec44-108">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="eec44-109">台湾日历包含12个月，每个月28到31天：</span><span class="sxs-lookup"><span data-stu-id="eec44-109">The Taiwan calendar has 12 months with 28 to 31 days each:</span></span>  
  
|<span data-ttu-id="eec44-110">GetMonth 值</span><span class="sxs-lookup"><span data-stu-id="eec44-110">GetMonth value</span></span>|<span data-ttu-id="eec44-111">Month</span><span class="sxs-lookup"><span data-stu-id="eec44-111">Month</span></span>|<span data-ttu-id="eec44-112">常见年份中的天数</span><span class="sxs-lookup"><span data-stu-id="eec44-112">Days in common years</span></span>|<span data-ttu-id="eec44-113">闰年中的天数</span><span class="sxs-lookup"><span data-stu-id="eec44-113">Days in leap years</span></span>|  
|--------------------|-----------|--------------------------|------------------------|  
|<span data-ttu-id="eec44-114">1</span><span class="sxs-lookup"><span data-stu-id="eec44-114">1</span></span>|<span data-ttu-id="eec44-115">1月 (一月) </span><span class="sxs-lookup"><span data-stu-id="eec44-115">1月 (January)</span></span>|<span data-ttu-id="eec44-116">31</span><span class="sxs-lookup"><span data-stu-id="eec44-116">31</span></span>|<span data-ttu-id="eec44-117">31</span><span class="sxs-lookup"><span data-stu-id="eec44-117">31</span></span>|  
|<span data-ttu-id="eec44-118">2</span><span class="sxs-lookup"><span data-stu-id="eec44-118">2</span></span>|<span data-ttu-id="eec44-119">2月 (2 月) </span><span class="sxs-lookup"><span data-stu-id="eec44-119">2月 (February)</span></span>|<span data-ttu-id="eec44-120">28</span><span class="sxs-lookup"><span data-stu-id="eec44-120">28</span></span>|<span data-ttu-id="eec44-121">29</span><span class="sxs-lookup"><span data-stu-id="eec44-121">29</span></span>|  
|<span data-ttu-id="eec44-122">3</span><span class="sxs-lookup"><span data-stu-id="eec44-122">3</span></span>|<span data-ttu-id="eec44-123">3月 (三月) </span><span class="sxs-lookup"><span data-stu-id="eec44-123">3月 (March)</span></span>|<span data-ttu-id="eec44-124">31</span><span class="sxs-lookup"><span data-stu-id="eec44-124">31</span></span>|<span data-ttu-id="eec44-125">31</span><span class="sxs-lookup"><span data-stu-id="eec44-125">31</span></span>|  
|<span data-ttu-id="eec44-126">4</span><span class="sxs-lookup"><span data-stu-id="eec44-126">4</span></span>|<span data-ttu-id="eec44-127">4月 (四月) </span><span class="sxs-lookup"><span data-stu-id="eec44-127">4月 (April)</span></span>|<span data-ttu-id="eec44-128">30</span><span class="sxs-lookup"><span data-stu-id="eec44-128">30</span></span>|<span data-ttu-id="eec44-129">30</span><span class="sxs-lookup"><span data-stu-id="eec44-129">30</span></span>|  
|<span data-ttu-id="eec44-130">5</span><span class="sxs-lookup"><span data-stu-id="eec44-130">5</span></span>|<span data-ttu-id="eec44-131">5月 (可能) </span><span class="sxs-lookup"><span data-stu-id="eec44-131">5月 (May)</span></span>|<span data-ttu-id="eec44-132">31</span><span class="sxs-lookup"><span data-stu-id="eec44-132">31</span></span>|<span data-ttu-id="eec44-133">31</span><span class="sxs-lookup"><span data-stu-id="eec44-133">31</span></span>|  
|<span data-ttu-id="eec44-134">6</span><span class="sxs-lookup"><span data-stu-id="eec44-134">6</span></span>|<span data-ttu-id="eec44-135">6月 (6 月) </span><span class="sxs-lookup"><span data-stu-id="eec44-135">6月 (June)</span></span>|<span data-ttu-id="eec44-136">30</span><span class="sxs-lookup"><span data-stu-id="eec44-136">30</span></span>|<span data-ttu-id="eec44-137">30</span><span class="sxs-lookup"><span data-stu-id="eec44-137">30</span></span>|  
|<span data-ttu-id="eec44-138">7</span><span class="sxs-lookup"><span data-stu-id="eec44-138">7</span></span>|<span data-ttu-id="eec44-139">7)  (7 月</span><span class="sxs-lookup"><span data-stu-id="eec44-139">7月 (July)</span></span>|<span data-ttu-id="eec44-140">31</span><span class="sxs-lookup"><span data-stu-id="eec44-140">31</span></span>|<span data-ttu-id="eec44-141">31</span><span class="sxs-lookup"><span data-stu-id="eec44-141">31</span></span>|  
|<span data-ttu-id="eec44-142">8</span><span class="sxs-lookup"><span data-stu-id="eec44-142">8</span></span>|<span data-ttu-id="eec44-143">8月 (8 月) </span><span class="sxs-lookup"><span data-stu-id="eec44-143">8月 (August)</span></span>|<span data-ttu-id="eec44-144">31</span><span class="sxs-lookup"><span data-stu-id="eec44-144">31</span></span>|<span data-ttu-id="eec44-145">31</span><span class="sxs-lookup"><span data-stu-id="eec44-145">31</span></span>|  
|<span data-ttu-id="eec44-146">9</span><span class="sxs-lookup"><span data-stu-id="eec44-146">9</span></span>|<span data-ttu-id="eec44-147">9月 (九月) </span><span class="sxs-lookup"><span data-stu-id="eec44-147">9月 (September)</span></span>|<span data-ttu-id="eec44-148">30</span><span class="sxs-lookup"><span data-stu-id="eec44-148">30</span></span>|<span data-ttu-id="eec44-149">30</span><span class="sxs-lookup"><span data-stu-id="eec44-149">30</span></span>|  
|<span data-ttu-id="eec44-150">10</span><span class="sxs-lookup"><span data-stu-id="eec44-150">10</span></span>|<span data-ttu-id="eec44-151">10月 (10 月) </span><span class="sxs-lookup"><span data-stu-id="eec44-151">10月 (October)</span></span>|<span data-ttu-id="eec44-152">31</span><span class="sxs-lookup"><span data-stu-id="eec44-152">31</span></span>|<span data-ttu-id="eec44-153">31</span><span class="sxs-lookup"><span data-stu-id="eec44-153">31</span></span>|  
|<span data-ttu-id="eec44-154">11</span><span class="sxs-lookup"><span data-stu-id="eec44-154">11</span></span>|<span data-ttu-id="eec44-155">11月 () 年11月</span><span class="sxs-lookup"><span data-stu-id="eec44-155">11月 (November)</span></span>|<span data-ttu-id="eec44-156">30</span><span class="sxs-lookup"><span data-stu-id="eec44-156">30</span></span>|<span data-ttu-id="eec44-157">30</span><span class="sxs-lookup"><span data-stu-id="eec44-157">30</span></span>|  
|<span data-ttu-id="eec44-158">12</span><span class="sxs-lookup"><span data-stu-id="eec44-158">12</span></span>|<span data-ttu-id="eec44-159">12月 (12 月) </span><span class="sxs-lookup"><span data-stu-id="eec44-159">12月 (December)</span></span>|<span data-ttu-id="eec44-160">31</span><span class="sxs-lookup"><span data-stu-id="eec44-160">31</span></span>|<span data-ttu-id="eec44-161">31</span><span class="sxs-lookup"><span data-stu-id="eec44-161">31</span></span>|  
  
 <span data-ttu-id="eec44-162">2月在闰年中有29天，在常见年份内有28天。</span><span class="sxs-lookup"><span data-stu-id="eec44-162">February has 29 days during leap years and 28 during common years.</span></span>  
  
 <span data-ttu-id="eec44-163">日期公元2001年1月1日</span><span class="sxs-lookup"><span data-stu-id="eec44-163">The date January 1, 2001 C.E.</span></span> <span data-ttu-id="eec44-164">在公历中，相当于台湾历当前纪元年份90年1月的第一天。</span><span class="sxs-lookup"><span data-stu-id="eec44-164">in the Gregorian calendar is equivalent to the first day of January in the year 90 of the current era in the Taiwan calendar.</span></span>  
  
 <span data-ttu-id="eec44-165">每个都 <xref:System.Globalization.CultureInfo> 支持一组日历。</span><span class="sxs-lookup"><span data-stu-id="eec44-165">Each <xref:System.Globalization.CultureInfo> supports a set of calendars.</span></span> <span data-ttu-id="eec44-166"><xref:System.Globalization.CultureInfo.Calendar%2A>属性返回区域性的默认日历， <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> 属性返回一个数组，该数组包含该区域性支持的所有日历。</span><span class="sxs-lookup"><span data-stu-id="eec44-166">The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture.</span></span> <span data-ttu-id="eec44-167">若要更改使用的日历 <xref:System.Globalization.CultureInfo> ，应用程序应将的 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 属性设置 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 为新的 <xref:System.Globalization.Calendar> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-167">To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> to a new <xref:System.Globalization.Calendar>.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage"><para><span data-ttu-id="eec44-168">-如果 <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> 为， <see cref="T:System.Globalization.TaiwanCalendar" /> 但 <see cref="P:System.Threading.Thread.CurrentCulture" /> 不是 "zh-chs"，则 <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" /> 和将 <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" /> <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> 返回空字符串 ( "" ) 。</span><span class="sxs-lookup"><span data-stu-id="eec44-168">-   If <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> is the <see cref="T:System.Globalization.TaiwanCalendar" /> but the <see cref="P:System.Threading.Thread.CurrentCulture" /> is not "zh-TW", then <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, and <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> return an empty string ("").</span></span></para></block>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.GregorianCalendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
    <related type="Article" href="/dotnet/standard/datetime/working-with-calendars"><span data-ttu-id="eec44-169">使用日历</span><span class="sxs-lookup"><span data-stu-id="eec44-169">Working with Calendars</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a"><span data-ttu-id="eec44-170">  示例：日历周范围实用工具</span><span class="sxs-lookup"><span data-stu-id="eec44-170">Sample: Calendar Week Range Utility</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaiwanCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaiwanCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eec44-171">初始化 <see cref="T:System.Globalization.TaiwanCalendar" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="eec44-171">Initializes a new instance of the <see cref="T:System.Globalization.TaiwanCalendar" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.TypeInitializationException"><span data-ttu-id="eec44-172">由于缺少区域性信息，因此无法初始化 <see cref="T:System.Globalization.TaiwanCalendar" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="eec44-172">Unable to initialize a <see cref="T:System.Globalization.TaiwanCalendar" /> object because of missing culture information.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberSignature Language="F#" Value="override this.AddMonths : DateTime * int -&gt; DateTime" Usage="taiwanCalendar.AddMonths (time, months)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="eec44-173">将向其添加月数的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="eec44-173">The <see cref="T:System.DateTime" /> to which to add months.</span></span></param>
        <param name="months"><span data-ttu-id="eec44-174">要添加的月数。</span><span class="sxs-lookup"><span data-stu-id="eec44-174">The number of months to add.</span></span></param>
        <summary><span data-ttu-id="eec44-175">返回与指定 <see cref="T:System.DateTime" /> 相距指定月数的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="eec44-175">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="eec44-176">将指定月数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="eec44-176">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eec44-177">如果生成的日期不是结果年份的结果月份中的有效日期，则结果中的日部分 <xref:System.DateTime> 会受到影响。</span><span class="sxs-lookup"><span data-stu-id="eec44-177">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="eec44-178">它将更改为生成的年份中的最后一个有效日。</span><span class="sxs-lookup"><span data-stu-id="eec44-178">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="eec44-179">如果生成的月份超出了指定的年份，则结果中的年份部分 <xref:System.DateTime> 会受到影响 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-179">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="eec44-180">此实现仅支持当前纪元。</span><span class="sxs-lookup"><span data-stu-id="eec44-180">This implementation supports only the current era.</span></span> <span data-ttu-id="eec44-181">因此， <xref:System.ArgumentException> 如果生成的年份超出指定的纪元，则会引发 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-181">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="eec44-182">生成的的时间部分与 <xref:System.DateTime> 指定的相同 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-182">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="eec44-183">例如，如果指定的月份是10月（包含31天），指定的日期是该月的第31天，并且参数的值 `months` 为6，则生成的年份比指定年份多一，生成的月份是四月，而结果日为第30天，即4月的最后一天。</span><span class="sxs-lookup"><span data-stu-id="eec44-183">For example, if the specified month is October, which has 31 days, the specified day is the 31st day of that month, and the value of the `months` parameter is 6, the resulting year is one more than the specified year, the resulting month is April, and the resulting day is the 30th day, which is the last day in April.</span></span>  
  
 <span data-ttu-id="eec44-184">如果参数的值 `months` 为负，则生成的值 <xref:System.DateTime> 早于指定的 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-184">If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="eec44-185"><xref:System.DateTime.Kind%2A>返回的值的属性 <xref:System.DateTime> 始终相等 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-185">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="eec44-186">可以 <xref:System.DateTime.Kind%2A> `time` 通过调用方法来保留参数的属性 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> ，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="eec44-186">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="eec44-187">下面的代码示例演示方法的用法 <xref:System.Globalization.TaiwanCalendar.AddMonths%2A> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-187">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.AddMonths%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eec44-188">生成的 <see cref="T:System.DateTime" /> 超出了支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-188">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eec44-189"><paramref name="months" /> 小于 -120000。</span><span class="sxs-lookup"><span data-stu-id="eec44-189"><paramref name="months" /> is less than -120000.</span></span>  
  
<span data-ttu-id="eec44-190">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eec44-190">-or-</span></span> 
 <span data-ttu-id="eec44-191"><paramref name="months" /> 大于 120000。</span><span class="sxs-lookup"><span data-stu-id="eec44-191"><paramref name="months" /> is greater than 120000.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberSignature Language="F#" Value="override this.AddYears : DateTime * int -&gt; DateTime" Usage="taiwanCalendar.AddYears (time, years)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="eec44-192">将向其添加年数的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="eec44-192">The <see cref="T:System.DateTime" /> to which to add years.</span></span></param>
        <param name="years"><span data-ttu-id="eec44-193">要添加的年数。</span><span class="sxs-lookup"><span data-stu-id="eec44-193">The number of years to add.</span></span></param>
        <summary><span data-ttu-id="eec44-194">返回与指定 <see cref="T:System.DateTime" /> 相距指定年数的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="eec44-194">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="eec44-195">将指定年数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="eec44-195">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eec44-196">如果生成的日期不是结果年份的结果月份中的有效日期，则结果中的日部分 <xref:System.DateTime> 会受到影响。</span><span class="sxs-lookup"><span data-stu-id="eec44-196">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="eec44-197">它将更改为生成的年份中的最后一个有效日。</span><span class="sxs-lookup"><span data-stu-id="eec44-197">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="eec44-198">所得的月份部分将 <xref:System.DateTime> 保持与指定的相同 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-198">The month part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="eec44-199">此实现仅支持当前纪元。</span><span class="sxs-lookup"><span data-stu-id="eec44-199">This implementation supports only the current era.</span></span> <span data-ttu-id="eec44-200">因此， <xref:System.ArgumentException> 如果生成的年份超出指定的纪元，则会引发 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-200">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="eec44-201">生成的的时间部分与 <xref:System.DateTime> 指定的相同 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-201">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="eec44-202">例如，2月有28天，在闰年有29天时除外。</span><span class="sxs-lookup"><span data-stu-id="eec44-202">For example, February has 28 days, except during leap years when it has 29 days.</span></span> <span data-ttu-id="eec44-203">如果指定的日期是闰年中2月29日的值，并且的值 `years` 为1，则生成的日期为下一年2月28日。</span><span class="sxs-lookup"><span data-stu-id="eec44-203">If the specified date is the 29th day of February in a leap year and the value of `years` is 1, the resulting date is the 28th day of February in the following year.</span></span>  
  
 <span data-ttu-id="eec44-204">如果 `years` 为负，则生成的 <xref:System.DateTime> 早于指定的 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-204">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="eec44-205"><xref:System.DateTime.Kind%2A>返回的值的属性 <xref:System.DateTime> 始终相等 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-205">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="eec44-206">可以 <xref:System.DateTime.Kind%2A> `time` 通过调用方法来保留参数的属性 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> ，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="eec44-206">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 <span data-ttu-id="eec44-207">下面的代码示例显示了方法的用法 <xref:System.Globalization.TaiwanCalendar.AddYears%2A> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-207">The following code example displays the use of the <xref:System.Globalization.TaiwanCalendar.AddYears%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eec44-208">生成的 <see cref="T:System.DateTime" /> 超出了支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-208">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.AddMonths(System.DateTime,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmType : System.Globalization.CalendarAlgorithmType" Usage="System.Globalization.TaiwanCalendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eec44-209">获取一个值，该值指示当前日历是阳历、阴历还是二者的组合。</span><span class="sxs-lookup"><span data-stu-id="eec44-209">Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</span></span></summary>
        <value><span data-ttu-id="eec44-210">始终返回 <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />。</span><span class="sxs-lookup"><span data-stu-id="eec44-210">Always returns <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eec44-211">下面的示例使用反射来实例化 <xref:System.Globalization.Calendar> .NET Framework 中找到的每个类型，并显示其 <xref:System.Globalization.Calendar.AlgorithmType%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="eec44-211">The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Eras : int[]" Usage="System.Globalization.TaiwanCalendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eec44-212">获取 <see cref="T:System.Globalization.TaiwanCalendar" /> 中的纪元列表。</span><span class="sxs-lookup"><span data-stu-id="eec44-212">Gets the list of eras in the <see cref="T:System.Globalization.TaiwanCalendar" />.</span></span></summary>
        <value><span data-ttu-id="eec44-213">一个数组，它由值始终是当前纪元的单个元素组成。</span><span class="sxs-lookup"><span data-stu-id="eec44-213">An array that consists of a single element for which the value is always the current era.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eec44-214">此属性返回的数组中的值是从1到最大年代号的数字。</span><span class="sxs-lookup"><span data-stu-id="eec44-214">The values in the array returned by this property are numbers that range from 1 to the largest era number.</span></span> <span data-ttu-id="eec44-215">在第一个数组元素中返回最大纪元号，最后一个元素中返回最小纪元号。</span><span class="sxs-lookup"><span data-stu-id="eec44-215">The largest era number is returned in the first array element and the smallest era number is returned in the last element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfMonth : DateTime -&gt; int" Usage="taiwanCalendar.GetDayOfMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="eec44-216">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="eec44-216">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="eec44-217">返回指定 <see cref="T:System.DateTime" /> 中的月中日期。</span><span class="sxs-lookup"><span data-stu-id="eec44-217">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="eec44-218">1 到 31 之间的一个整数，用于表示指定的 <see cref="T:System.DateTime" /> 中的月中日期。</span><span class="sxs-lookup"><span data-stu-id="eec44-218">An integer from 1 to 31 that represents the day of the month in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eec44-219">下面的代码示例演示方法的用法 <xref:System.Globalization.TaiwanCalendar.GetDayOfMonth%2A> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-219">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetDayOfMonth%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfWeek(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfWeek : DateTime -&gt; DayOfWeek" Usage="taiwanCalendar.GetDayOfWeek time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="eec44-220">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="eec44-220">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="eec44-221">返回指定 <see cref="T:System.DateTime" /> 中的周中日期。</span><span class="sxs-lookup"><span data-stu-id="eec44-221">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="eec44-222">一个 <see cref="T:System.DayOfWeek" /> 值，用于表示指定的 <see cref="T:System.DateTime" /> 中的周中日期。</span><span class="sxs-lookup"><span data-stu-id="eec44-222">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eec44-223">这些 <xref:System.DayOfWeek> 值如下所示：</span><span class="sxs-lookup"><span data-stu-id="eec44-223">The <xref:System.DayOfWeek> values are as follows:</span></span>  
  
|<span data-ttu-id="eec44-224">DayOfWeek 值</span><span class="sxs-lookup"><span data-stu-id="eec44-224">DayOfWeek value</span></span>|<span data-ttu-id="eec44-225">这表示</span><span class="sxs-lookup"><span data-stu-id="eec44-225">which indicates</span></span>|  
|---------------------|---------------------|  
|<span data-ttu-id="eec44-226">星期日</span><span class="sxs-lookup"><span data-stu-id="eec44-226">Sunday</span></span>|<span data-ttu-id="eec44-227">星期日</span><span class="sxs-lookup"><span data-stu-id="eec44-227">星期日</span></span>|  
|<span data-ttu-id="eec44-228">星期一</span><span class="sxs-lookup"><span data-stu-id="eec44-228">Monday</span></span>|<span data-ttu-id="eec44-229">星期一</span><span class="sxs-lookup"><span data-stu-id="eec44-229">星期一</span></span>|  
|<span data-ttu-id="eec44-230">星期二</span><span class="sxs-lookup"><span data-stu-id="eec44-230">Tuesday</span></span>|<span data-ttu-id="eec44-231">星期二</span><span class="sxs-lookup"><span data-stu-id="eec44-231">星期二</span></span>|  
|<span data-ttu-id="eec44-232">星期三</span><span class="sxs-lookup"><span data-stu-id="eec44-232">Wednesday</span></span>|<span data-ttu-id="eec44-233">星期三</span><span class="sxs-lookup"><span data-stu-id="eec44-233">星期三</span></span>|  
|<span data-ttu-id="eec44-234">星期四</span><span class="sxs-lookup"><span data-stu-id="eec44-234">Thursday</span></span>|<span data-ttu-id="eec44-235">星期四</span><span class="sxs-lookup"><span data-stu-id="eec44-235">星期四</span></span>|  
|<span data-ttu-id="eec44-236">星期五</span><span class="sxs-lookup"><span data-stu-id="eec44-236">Friday</span></span>|<span data-ttu-id="eec44-237">星期五</span><span class="sxs-lookup"><span data-stu-id="eec44-237">星期五</span></span>|  
|<span data-ttu-id="eec44-238">星期六</span><span class="sxs-lookup"><span data-stu-id="eec44-238">Saturday</span></span>|<span data-ttu-id="eec44-239">星期六</span><span class="sxs-lookup"><span data-stu-id="eec44-239">星期六</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="eec44-240">下面的代码示例演示方法的用法 <xref:System.Globalization.TaiwanCalendar.GetDayOfWeek%2A> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-240">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetDayOfWeek%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfMonth(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfYear : DateTime -&gt; int" Usage="taiwanCalendar.GetDayOfYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="eec44-241">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="eec44-241">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="eec44-242">返回指定 <see cref="T:System.DateTime" /> 中的日期是该年中的第几天。</span><span class="sxs-lookup"><span data-stu-id="eec44-242">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="eec44-243">1 到 366 之间的一个整数，用于表示指定的 <see cref="T:System.DateTime" /> 中的年中日期。</span><span class="sxs-lookup"><span data-stu-id="eec44-243">An integer from 1 to 366 that represents the day of the year in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eec44-244">一年中的某一天定义为从该年的第一天开始的天数。</span><span class="sxs-lookup"><span data-stu-id="eec44-244">The day of the year is defined as the number of days from the first day of the year.</span></span> <span data-ttu-id="eec44-245">例如， <xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A> 对于第一个月的第一天，返回1，在 <xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A> 上个月的最后一天返回该年份中的总天数。</span><span class="sxs-lookup"><span data-stu-id="eec44-245">For example, <xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year.</span></span> <span data-ttu-id="eec44-246">总数与返回的值相同 <xref:System.Globalization.TaiwanCalendar.GetDaysInYear%2A> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-246">The total is the same as the value returned by <xref:System.Globalization.TaiwanCalendar.GetDaysInYear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eec44-247">下面的代码示例演示方法的用法 <xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-247">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfWeek(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInMonth : int * int * int -&gt; int" Usage="taiwanCalendar.GetDaysInMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="eec44-248">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="eec44-248">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="eec44-249">1 到 12 之间的一个整数，用于表示月份。</span><span class="sxs-lookup"><span data-stu-id="eec44-249">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="eec44-250">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="eec44-250">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="eec44-251">返回指定纪元中指定年份的指定月份中的天数。</span><span class="sxs-lookup"><span data-stu-id="eec44-251">Returns the number of days in the specified month in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="eec44-252">指定纪元中指定年份的指定月份中的天数。</span><span class="sxs-lookup"><span data-stu-id="eec44-252">The number of days in the specified month in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eec44-253">例如，对于2月 (= 2) ，此方法返回28或 29 `month` ，具体取决于是否 `year` 为闰年。</span><span class="sxs-lookup"><span data-stu-id="eec44-253">For example, this method returns 28 or 29 for February (`month` = 2), depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eec44-254">下面的示例在 <xref:System.Globalization.TaiwanCalendar.GetDaysInMonth%2A> 每个纪元的五年中，为第二个月调用。</span><span class="sxs-lookup"><span data-stu-id="eec44-254">The following example calls <xref:System.Globalization.TaiwanCalendar.GetDaysInMonth%2A> for the second month in each of five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.GetDaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInMonth/CPP/taiwancalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInMonth/CS/taiwancalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInMonth/VB/taiwancalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eec44-255"><paramref name="year" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-255"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="eec44-256">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eec44-256">-or-</span></span> 
 <span data-ttu-id="eec44-257"><paramref name="month" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-257"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="eec44-258">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eec44-258">-or-</span></span> 
 <span data-ttu-id="eec44-259"><paramref name="era" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-259"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInYear : int * int -&gt; int" Usage="taiwanCalendar.GetDaysInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="eec44-260">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="eec44-260">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="eec44-261">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="eec44-261">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="eec44-262">返回指定纪元中指定年份的天数。</span><span class="sxs-lookup"><span data-stu-id="eec44-262">Returns the number of days in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="eec44-263">指定纪元中指定年份的天数。</span><span class="sxs-lookup"><span data-stu-id="eec44-263">The number of days in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eec44-264">例如，此方法返回365或366，具体取决于是否 `year` 为闰年。</span><span class="sxs-lookup"><span data-stu-id="eec44-264">For example, this method returns 365 or 366, depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eec44-265">下面的示例 <xref:System.Globalization.TaiwanCalendar.GetDaysInYear%2A> 在每个纪元中调用5年。</span><span class="sxs-lookup"><span data-stu-id="eec44-265">The following example calls <xref:System.Globalization.TaiwanCalendar.GetDaysInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.GetDaysInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInYear/CPP/taiwancalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInYear/CS/taiwancalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInYear/VB/taiwancalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eec44-266"><paramref name="year" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-266"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="eec44-267">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eec44-267">-or-</span></span> 
 <span data-ttu-id="eec44-268"><paramref name="era" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-268"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetEra : DateTime -&gt; int" Usage="taiwanCalendar.GetEra time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="eec44-269">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="eec44-269">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="eec44-270">返回指定 <see cref="T:System.DateTime" /> 中的纪元。</span><span class="sxs-lookup"><span data-stu-id="eec44-270">Returns the era in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="eec44-271">一个整数，用于表示指定 <see cref="T:System.DateTime" /> 中的纪元。</span><span class="sxs-lookup"><span data-stu-id="eec44-271">An integer that represents the era in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eec44-272"><xref:System.Globalization.TaiwanCalendar>类仅识别当前纪元。</span><span class="sxs-lookup"><span data-stu-id="eec44-272">The <xref:System.Globalization.TaiwanCalendar> class recognizes only the current era.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eec44-273">下面的代码示例演示方法的用法 <xref:System.Globalization.TaiwanCalendar.GetEra%2A> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-273">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetEra%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetYear(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetLeapMonth : int * int -&gt; int" Usage="taiwanCalendar.GetLeapMonth (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="era" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="eec44-274">年份。</span><span class="sxs-lookup"><span data-stu-id="eec44-274">A year.</span></span></param>
        <param name="era"><span data-ttu-id="eec44-275">纪元。</span><span class="sxs-lookup"><span data-stu-id="eec44-275">An era.</span></span></param>
        <summary><span data-ttu-id="eec44-276">计算指定纪元年份的闰月。</span><span class="sxs-lookup"><span data-stu-id="eec44-276">Calculates the leap month for a specified year and era.</span></span></summary>
        <returns><span data-ttu-id="eec44-277">返回值始终为 0，因为 <see cref="T:System.Globalization.TaiwanCalendar" /> 类不支持闰月这一概念。</span><span class="sxs-lookup"><span data-stu-id="eec44-277">The return value is always 0 because the <see cref="T:System.Globalization.TaiwanCalendar" /> class does not support the notion of a leap month.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eec44-278">在支持闰月的概念的日历中，闰月可以在特定月份之后或在一年中的任何月份之后发生。</span><span class="sxs-lookup"><span data-stu-id="eec44-278">In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.</span></span> <span data-ttu-id="eec44-279">例如， <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> 方法返回1到13之间的一个数字，用于指示与指定日期关联的月份。</span><span class="sxs-lookup"><span data-stu-id="eec44-279">For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns a number between 1 and 13 that indicates the month associated with a specified date.</span></span> <span data-ttu-id="eec44-280">如果一年的第八个月和第九个月之间有一个闰月，则该方法将为 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> 第八个月返回8，为第八个月返回9，在第9个月返回10个月。</span><span class="sxs-lookup"><span data-stu-id="eec44-280">If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetMonth : DateTime -&gt; int" Usage="taiwanCalendar.GetMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="eec44-281">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="eec44-281">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="eec44-282">返回指定 <see cref="T:System.DateTime" /> 中的月份。</span><span class="sxs-lookup"><span data-stu-id="eec44-282">Returns the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="eec44-283">1 到 12 之间的一个整数，用于表示指定的 <see cref="T:System.DateTime" /> 中的月份。</span><span class="sxs-lookup"><span data-stu-id="eec44-283">An integer from 1 to 12 that represents the month in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eec44-284">下面的代码示例演示方法的用法 <xref:System.Globalization.TaiwanCalendar.GetMonth%2A> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-284">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetMonth%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetYear(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetMonthsInYear : int * int -&gt; int" Usage="taiwanCalendar.GetMonthsInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="eec44-285">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="eec44-285">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="eec44-286">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="eec44-286">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="eec44-287">返回指定纪元中指定年份的月数。</span><span class="sxs-lookup"><span data-stu-id="eec44-287">Returns the number of months in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="eec44-288">指定纪元中指定年份的月数。</span><span class="sxs-lookup"><span data-stu-id="eec44-288">The number of months in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eec44-289">下面的示例 <xref:System.Globalization.TaiwanCalendar.GetMonthsInYear%2A> 在每个纪元中调用5年。</span><span class="sxs-lookup"><span data-stu-id="eec44-289">The following example calls <xref:System.Globalization.TaiwanCalendar.GetMonthsInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.GetMonthsInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetMonthsInYear/CPP/taiwancalendar_getmonthsinyear.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.GetMonthsInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetMonthsInYear/CS/taiwancalendar_getmonthsinyear.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.GetMonthsInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetMonthsInYear/VB/taiwancalendar_getmonthsinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eec44-290"><paramref name="year" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-290"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="eec44-291">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eec44-291">-or-</span></span> 
 <span data-ttu-id="eec44-292"><paramref name="era" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-292"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetWeekOfYear">
      <MemberSignature Language="C#" Value="public override int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetWeekOfYear(valuetype System.DateTime time, valuetype System.Globalization.CalendarWeekRule rule, valuetype System.DayOfWeek firstDayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWeekOfYear (time As DateTime, rule As CalendarWeekRule, firstDayOfWeek As DayOfWeek) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetWeekOfYear(DateTime time, System::Globalization::CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="F#" Value="override this.GetWeekOfYear : DateTime * System.Globalization.CalendarWeekRule * DayOfWeek -&gt; int" Usage="taiwanCalendar.GetWeekOfYear (time, rule, firstDayOfWeek)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rule" Type="System.Globalization.CalendarWeekRule" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="firstDayOfWeek" Type="System.DayOfWeek" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="eec44-293">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="eec44-293">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <param name="rule"><span data-ttu-id="eec44-294"><see cref="T:System.Globalization.CalendarWeekRule" /> 值之一，用于定义一个日历周。</span><span class="sxs-lookup"><span data-stu-id="eec44-294">One of the <see cref="T:System.Globalization.CalendarWeekRule" /> values that defines a calendar week.</span></span></param>
        <param name="firstDayOfWeek"><span data-ttu-id="eec44-295"><see cref="T:System.DayOfWeek" /> 值之一，用于表示一个星期的第一天。</span><span class="sxs-lookup"><span data-stu-id="eec44-295">One of the <see cref="T:System.DayOfWeek" /> values that represents the first day of the week.</span></span></param>
        <summary><span data-ttu-id="eec44-296">返回一年中包含指定 <see cref="T:System.DateTime" /> 值中的日期的那个星期。</span><span class="sxs-lookup"><span data-stu-id="eec44-296">Returns the week of the year that includes the date in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="eec44-297">一个正整数，用于表示一年中包含 <paramref name="time" /> 参数内日期所在的星期。</span><span class="sxs-lookup"><span data-stu-id="eec44-297">A positive integer that represents the week of the year that includes the date in the <paramref name="time" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eec44-298">此方法可用于通过将参数设置为一年中的 `time` 最后一天来确定该年份中的周数。</span><span class="sxs-lookup"><span data-stu-id="eec44-298">This method can be used to determine the number of weeks in the year by setting the `time` parameter to the last day of the year.</span></span>  
  
 <span data-ttu-id="eec44-299"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>属性包含可用于和参数的区域性特定值 `rule` `firstDayOfWeek` 。</span><span class="sxs-lookup"><span data-stu-id="eec44-299">The <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property contains culture-specific values that can be used for the `rule` and `firstDayOfWeek` parameters.</span></span>  
  
 <span data-ttu-id="eec44-300">的 <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> 属性 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 包含默认值，该值 <xref:System.DayOfWeek> 表示特定区域性的一周的第一天，使用的属性中指定的日历表示该周的第一天 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-300">The <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> contains the default <xref:System.DayOfWeek> value that represents the first day of the week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="eec44-301">的 <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A> 属性 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 包含默认值， <xref:System.Globalization.CalendarWeekRule> 该默认值使用的属性中指定的日历为特定区域性定义日历周 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-301">The <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> contains the default <xref:System.Globalization.CalendarWeekRule> value that defines a calendar week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="eec44-302">例如，在中 <xref:System.Globalization.GregorianCalendar> ，1 <xref:System.Globalization.Calendar.GetWeekOfYear%2A> 月1日的方法返回1。</span><span class="sxs-lookup"><span data-stu-id="eec44-302">For example, in <xref:System.Globalization.GregorianCalendar>, the <xref:System.Globalization.Calendar.GetWeekOfYear%2A> method for January 1 returns 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eec44-303">下面的代码示例演示如何根据 <xref:System.Globalization.Calendar.GetWeekOfYear%2A> 所使用的和值而产生的结果 <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> <xref:System.Globalization.CalendarWeekRule> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-303">The following code example shows how the result of <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and <xref:System.Globalization.CalendarWeekRule> values used.</span></span> <span data-ttu-id="eec44-304">如果指定的日期是一年中的最后一天，则 <xref:System.Globalization.Calendar.GetWeekOfYear%2A> 返回该年份的总周数。</span><span class="sxs-lookup"><span data-stu-id="eec44-304">If the specified date is the last day of the year, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> returns the total number of weeks in that year.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CPP/yslin_calendar_getweekofyear.cpp#1)]
 [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/yslin_calendar_getweekofyear.cs#1)]
 [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/yslin_calendar_getweekofyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eec44-305"><paramref name="time" /> 或 <paramref name="firstDayOfWeek" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-305"><paramref name="time" /> or <paramref name="firstDayOfWeek" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="eec44-306">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eec44-306">-or-</span></span> 
 <span data-ttu-id="eec44-307"><paramref name="rule" /> 不是有效的 <see cref="T:System.Globalization.CalendarWeekRule" /> 值。</span><span class="sxs-lookup"><span data-stu-id="eec44-307"><paramref name="rule" /> is not a valid <see cref="T:System.Globalization.CalendarWeekRule" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetYear : DateTime -&gt; int" Usage="taiwanCalendar.GetYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="eec44-308">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="eec44-308">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="eec44-309">返回指定 <see cref="T:System.DateTime" /> 中的年份。</span><span class="sxs-lookup"><span data-stu-id="eec44-309">Returns the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="eec44-310">一个整数，用于表示指定的 <see cref="T:System.DateTime" /> 中的年份。</span><span class="sxs-lookup"><span data-stu-id="eec44-310">An integer that represents the year in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eec44-311">下面的代码示例演示方法的用法 <xref:System.Globalization.TaiwanCalendar.GetYear%2A> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-311">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetYear%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapDay : int * int * int * int -&gt; bool" Usage="taiwanCalendar.IsLeapDay (year, month, day, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="eec44-312">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="eec44-312">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="eec44-313">1 到 12 之间的一个整数，用于表示月份。</span><span class="sxs-lookup"><span data-stu-id="eec44-313">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="eec44-314">1 到 31 之间的一个整数，用于表示天。</span><span class="sxs-lookup"><span data-stu-id="eec44-314">An integer from 1 to 31 that represents the day.</span></span></param>
        <param name="era"><span data-ttu-id="eec44-315">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="eec44-315">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="eec44-316">确定指定纪元中的指定日期是否为闰日。</span><span class="sxs-lookup"><span data-stu-id="eec44-316">Determines whether the specified date in the specified era is a leap day.</span></span></summary>
        <returns><span data-ttu-id="eec44-317">如果指定的日期是闰日，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eec44-317"><see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eec44-318">台湾日历中的闰年对应于公历中的相同闰年。</span><span class="sxs-lookup"><span data-stu-id="eec44-318">Leap years in the Taiwan calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="eec44-319">公历中的闰年定义为可被四整除的公历年份，但它可被100整除。</span><span class="sxs-lookup"><span data-stu-id="eec44-319">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="eec44-320">但是，400可以整除的公历年是闰年。</span><span class="sxs-lookup"><span data-stu-id="eec44-320">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="eec44-321">一个常见年份有365天，闰年有366天。</span><span class="sxs-lookup"><span data-stu-id="eec44-321">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="eec44-322">闰日是指仅在闰年发生的日期。</span><span class="sxs-lookup"><span data-stu-id="eec44-322">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="eec44-323">例如，2月29日是唯一的闰日。</span><span class="sxs-lookup"><span data-stu-id="eec44-323">For example, the 29th day of February is the only leap day.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eec44-324">下面的示例在 <xref:System.Globalization.TaiwanCalendar.IsLeapDay%2A> 每个纪元的五年中，在第二个月的最后一天 (2 月) 。</span><span class="sxs-lookup"><span data-stu-id="eec44-324">The following example calls <xref:System.Globalization.TaiwanCalendar.IsLeapDay%2A> for the last day of the second month (February) for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapDay/CPP/taiwancalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapDay/CS/taiwancalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapDay/VB/taiwancalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eec44-325"><paramref name="year" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-325"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="eec44-326">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eec44-326">-or-</span></span> 
 <span data-ttu-id="eec44-327"><paramref name="month" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-327"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="eec44-328">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eec44-328">-or-</span></span> 
 <span data-ttu-id="eec44-329"><paramref name="day" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-329"><paramref name="day" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="eec44-330">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eec44-330">-or-</span></span> 
 <span data-ttu-id="eec44-331"><paramref name="era" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-331"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapMonth : int * int * int -&gt; bool" Usage="taiwanCalendar.IsLeapMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="eec44-332">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="eec44-332">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="eec44-333">1 到 12 之间的一个整数，用于表示月份。</span><span class="sxs-lookup"><span data-stu-id="eec44-333">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="eec44-334">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="eec44-334">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="eec44-335">确定指定纪元中指定年份的指定月份是否为闰月。</span><span class="sxs-lookup"><span data-stu-id="eec44-335">Determines whether the specified month in the specified year in the specified era is a leap month.</span></span></summary>
        <returns><span data-ttu-id="eec44-336">除非被派生类重写，否则此方法始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eec44-336">This method always returns <see langword="false" />, unless overridden by a derived class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eec44-337">台湾日历中的闰年对应于公历中的相同闰年。</span><span class="sxs-lookup"><span data-stu-id="eec44-337">Leap years in the Taiwan calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="eec44-338">公历中的闰年定义为可被四整除的公历年份，但它可被100整除。</span><span class="sxs-lookup"><span data-stu-id="eec44-338">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="eec44-339">但是，400可以整除的公历年是闰年。</span><span class="sxs-lookup"><span data-stu-id="eec44-339">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="eec44-340">一个常见年份有365天，闰年有366天。</span><span class="sxs-lookup"><span data-stu-id="eec44-340">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="eec44-341">闰月是只在闰年发生的整个月份。</span><span class="sxs-lookup"><span data-stu-id="eec44-341">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="eec44-342">台湾日历没有闰月。</span><span class="sxs-lookup"><span data-stu-id="eec44-342">The Taiwan calendar does not have any leap months.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eec44-343">下面的示例在 <xref:System.Globalization.TaiwanCalendar.IsLeapMonth%2A> 当前纪元中的五年内调用所有月份。</span><span class="sxs-lookup"><span data-stu-id="eec44-343">The following example calls <xref:System.Globalization.TaiwanCalendar.IsLeapMonth%2A> for all the months in five years in the current era.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.IsLeapMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapMonth/CPP/taiwancalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.IsLeapMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapMonth/CS/taiwancalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.IsLeapMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapMonth/VB/taiwancalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eec44-344"><paramref name="year" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-344"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="eec44-345">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eec44-345">-or-</span></span> 
 <span data-ttu-id="eec44-346"><paramref name="month" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-346"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="eec44-347">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eec44-347">-or-</span></span> 
 <span data-ttu-id="eec44-348"><paramref name="era" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-348"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapYear : int * int -&gt; bool" Usage="taiwanCalendar.IsLeapYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="eec44-349">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="eec44-349">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="eec44-350">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="eec44-350">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="eec44-351">确定指定纪元中的指定年份是否为闰年。</span><span class="sxs-lookup"><span data-stu-id="eec44-351">Determines whether the specified year in the specified era is a leap year.</span></span></summary>
        <returns><span data-ttu-id="eec44-352">如果指定的年是闰年，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="eec44-352"><see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eec44-353">台湾日历中的闰年对应于公历中的相同闰年。</span><span class="sxs-lookup"><span data-stu-id="eec44-353">Leap years in the Taiwan calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="eec44-354">公历中的闰年定义为可被四整除的公历年份，但它可被100整除。</span><span class="sxs-lookup"><span data-stu-id="eec44-354">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="eec44-355">但是，400可以整除的公历年是闰年。</span><span class="sxs-lookup"><span data-stu-id="eec44-355">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="eec44-356">一个常见年份有365天，闰年有366天。</span><span class="sxs-lookup"><span data-stu-id="eec44-356">A common year has 365 days and a leap year has 366 days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eec44-357">下面的示例将 <xref:System.Globalization.TaiwanCalendar.IsLeapYear%2A> 在每个纪元中调用5年。</span><span class="sxs-lookup"><span data-stu-id="eec44-357">The following example calls <xref:System.Globalization.TaiwanCalendar.IsLeapYear%2A> for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.IsLeapYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapYear/CPP/taiwancalendar_isleapyear.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapYear/CS/taiwancalendar_isleapyear.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapYear/VB/taiwancalendar_isleapyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eec44-358"><paramref name="year" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-358"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="eec44-359">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eec44-359">-or-</span></span> 
 <span data-ttu-id="eec44-360"><paramref name="era" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-360"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSupportedDateTime : DateTime" Usage="System.Globalization.TaiwanCalendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eec44-361">获取 <see cref="T:System.Globalization.TaiwanCalendar" /> 类支持的最晚日期和时间。</span><span class="sxs-lookup"><span data-stu-id="eec44-361">Gets the latest date and time supported by the <see cref="T:System.Globalization.TaiwanCalendar" /> class.</span></span></summary>
        <value><span data-ttu-id="eec44-362">类支持的最晚日期和时间 <see cref="T:System.Globalization.TaiwanCalendar" /> ，该日期和时间等效于9999年12月31日的最后一刻</span><span class="sxs-lookup"><span data-stu-id="eec44-362">The latest date and time supported by the <see cref="T:System.Globalization.TaiwanCalendar" /> class, which is equivalent to the last moment of December 31, 9999 C.E.</span></span> <span data-ttu-id="eec44-363">公历。</span><span class="sxs-lookup"><span data-stu-id="eec44-363">in the Gregorian calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eec44-364">下面的代码示例获取日历的最小值和最大值。</span><span class="sxs-lookup"><span data-stu-id="eec44-364">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/CPP/taiwancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/CS/taiwancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/VB/taiwancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSupportedDateTime : DateTime" Usage="System.Globalization.TaiwanCalendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eec44-365">获取 <see cref="T:System.Globalization.TaiwanCalendar" /> 类支持的最早日期和时间。</span><span class="sxs-lookup"><span data-stu-id="eec44-365">Gets the earliest date and time supported by the <see cref="T:System.Globalization.TaiwanCalendar" /> class.</span></span></summary>
        <value><span data-ttu-id="eec44-366">类支持的最早日期和时间 <see cref="T:System.Globalization.TaiwanCalendar" /> ，该日期和时间等效于1912年1月1日开始的那一刻</span><span class="sxs-lookup"><span data-stu-id="eec44-366">The earliest date and time supported by the <see cref="T:System.Globalization.TaiwanCalendar" /> class, which is equivalent to the first moment of January 1, 1912 C.E.</span></span> <span data-ttu-id="eec44-367">公历。</span><span class="sxs-lookup"><span data-stu-id="eec44-367">in the Gregorian calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eec44-368">Microsoft Visual Basic 将当天的时间表示为支持的最小日期的指定时间 <xref:System.DateTime> ，即公元0001年1月1日</span><span class="sxs-lookup"><span data-stu-id="eec44-368">Microsoft Visual Basic represents time of day as the specified time on the minimum date supported by <xref:System.DateTime>, which is January 1, 0001 C.E.</span></span> <span data-ttu-id="eec44-369">但是， <xref:System.Globalization.TaiwanCalendar> 类不支持此最小日期。</span><span class="sxs-lookup"><span data-stu-id="eec44-369">However, the <xref:System.Globalization.TaiwanCalendar> class does not support that minimum date.</span></span> <span data-ttu-id="eec44-370">因此，如果应用程序调用一个方法来使用当前日历格式化当天的时间，但未指定格式说明符，则格式设置将使用 ISO 8601 可排序 ( "s" ) 日期/时间模式格式说明符，而不是默认的常规 ( "G" ) 日期/时间模式格式说明符。</span><span class="sxs-lookup"><span data-stu-id="eec44-370">Consequently, if your application calls a method to format the time of day using the current calendar but does not specify a format specifier, formatting uses the ISO 8601 sortable ("s") date/time pattern format specifier instead of the default general ("G") date/time pattern format specifier.</span></span> <span data-ttu-id="eec44-371">有关详细信息，请参阅 [标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="eec44-371">For more information, see [Standard Date and Time Format Strings](/dotnet/standard/base-types/standard-date-and-time-format-strings).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eec44-372">下面的代码示例获取日历的最小值和最大值。</span><span class="sxs-lookup"><span data-stu-id="eec44-372">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/CPP/taiwancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/CS/taiwancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/VB/taiwancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="F#" Value="override this.ToDateTime : int * int * int * int * int * int * int * int -&gt; DateTime" Usage="taiwanCalendar.ToDateTime (year, month, day, hour, minute, second, millisecond, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="eec44-373">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="eec44-373">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="eec44-374">1 到 12 之间的一个整数，用于表示月份。</span><span class="sxs-lookup"><span data-stu-id="eec44-374">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="eec44-375">1 到 31 之间的一个整数，用于表示天。</span><span class="sxs-lookup"><span data-stu-id="eec44-375">An integer from 1 to 31 that represents the day.</span></span></param>
        <param name="hour"><span data-ttu-id="eec44-376">0 到 23 之间的一个整数，用于表示小时。</span><span class="sxs-lookup"><span data-stu-id="eec44-376">An integer from 0 to 23 that represents the hour.</span></span></param>
        <param name="minute"><span data-ttu-id="eec44-377">0 到 59 之间的一个整数，用于表示分钟。</span><span class="sxs-lookup"><span data-stu-id="eec44-377">An integer from 0 to 59 that represents the minute.</span></span></param>
        <param name="second"><span data-ttu-id="eec44-378">0 到 59 之间的一个整数，用于表示秒。</span><span class="sxs-lookup"><span data-stu-id="eec44-378">An integer from 0 to 59 that represents the second.</span></span></param>
        <param name="millisecond"><span data-ttu-id="eec44-379">0 到 999 之间的一个整数，用于表示毫秒。</span><span class="sxs-lookup"><span data-stu-id="eec44-379">An integer from 0 to 999 that represents the millisecond.</span></span></param>
        <param name="era"><span data-ttu-id="eec44-380">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="eec44-380">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="eec44-381">返回设置为指定纪元中指定日期和时间的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="eec44-381">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span></span></summary>
        <returns><span data-ttu-id="eec44-382">设置为当前纪元中指定日期和时间的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="eec44-382">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eec44-383"><paramref name="year" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-383"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="eec44-384">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eec44-384">-or-</span></span> 
 <span data-ttu-id="eec44-385"><paramref name="month" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-385"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="eec44-386">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eec44-386">-or-</span></span> 
 <span data-ttu-id="eec44-387"><paramref name="day" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-387"><paramref name="day" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="eec44-388">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eec44-388">-or-</span></span> 
 <span data-ttu-id="eec44-389"><paramref name="hour" /> 小于 0 或大于 23。</span><span class="sxs-lookup"><span data-stu-id="eec44-389"><paramref name="hour" /> is less than zero or greater than 23.</span></span>  
  
<span data-ttu-id="eec44-390">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eec44-390">-or-</span></span> 
 <span data-ttu-id="eec44-391"><paramref name="minute" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="eec44-391"><paramref name="minute" /> is less than zero or greater than 59.</span></span>  
  
<span data-ttu-id="eec44-392">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eec44-392">-or-</span></span> 
 <span data-ttu-id="eec44-393"><paramref name="second" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="eec44-393"><paramref name="second" /> is less than zero or greater than 59.</span></span>  
  
<span data-ttu-id="eec44-394">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eec44-394">-or-</span></span> 
 <span data-ttu-id="eec44-395"><paramref name="millisecond" /> 小于 0 或大于 999。</span><span class="sxs-lookup"><span data-stu-id="eec44-395"><paramref name="millisecond" /> is less than zero or greater than 999.</span></span>  
  
<span data-ttu-id="eec44-396">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eec44-396">-or-</span></span> 
 <span data-ttu-id="eec44-397"><paramref name="era" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-397"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberSignature Language="F#" Value="override this.ToFourDigitYear : int -&gt; int" Usage="taiwanCalendar.ToFourDigitYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="eec44-398">一个两位数或四位数的整数，用于表示要转换的年份。</span><span class="sxs-lookup"><span data-stu-id="eec44-398">A two-digit or four-digit integer that represents the year to convert.</span></span></param>
        <summary><span data-ttu-id="eec44-399">使用 <see cref="P:System.Globalization.TaiwanCalendar.TwoDigitYearMax" /> 属性将指定的年份转换为四位数年份，以确定相应的纪元。</span><span class="sxs-lookup"><span data-stu-id="eec44-399">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.TaiwanCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span></span></summary>
        <returns><span data-ttu-id="eec44-400">包含 <paramref name="year" /> 的四位数表示形式的整数。</span><span class="sxs-lookup"><span data-stu-id="eec44-400">An integer that contains the four-digit representation of <paramref name="year" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eec44-401">此方法实现 <xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="eec44-401">This method implements <xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="eec44-402">由于台湾日历中的年份通常小于四位数，因此此实现始终返回参数的值 `year` 。</span><span class="sxs-lookup"><span data-stu-id="eec44-402">Because the year in the Taiwan calendar is typically less than four digits long, this implementation always returns the value of the `year` parameter.</span></span>  
  
 <span data-ttu-id="eec44-403"><xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A> 支持两位数年份或四位数年份。</span><span class="sxs-lookup"><span data-stu-id="eec44-403"><xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year.</span></span> <span data-ttu-id="eec44-404">如果将两位数的年份值 (小于 100) ，则会使方法根据表示相应世纪的值将值转换为四位值 <xref:System.Globalization.TaiwanCalendar.TwoDigitYearMax%2A> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-404">Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.TaiwanCalendar.TwoDigitYearMax%2A> value representing the appropriate century.</span></span> <span data-ttu-id="eec44-405">如果应用程序提供了在支持的日历范围内的四位数年份值 <xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A> ，则该方法将返回实际输入值。</span><span class="sxs-lookup"><span data-stu-id="eec44-405">If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A>, the method returns the actual input value.</span></span> <span data-ttu-id="eec44-406">如果应用程序提供了一个在支持的日历范围之外的四位数值，或者如果它提供负值，则该方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="eec44-406">If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eec44-407"><paramref name="year" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="eec44-407"><paramref name="year" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="P:System.Globalization.TaiwanCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TwoDigitYearMax : int with get, set" Usage="System.Globalization.TaiwanCalendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eec44-408">获取或设置可以用两位数年份表示的 100 年范围内的最后一年。</span><span class="sxs-lookup"><span data-stu-id="eec44-408">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span></span></summary>
        <value><span data-ttu-id="eec44-409">可以用两位数年份表示的 100 年范围内的最后一年。</span><span class="sxs-lookup"><span data-stu-id="eec44-409">The last year of a 100-year range that can be represented by a 2-digit year.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eec44-410">此属性实现 <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="eec44-410">This property implements <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="eec44-411">由于台湾日历中的年份通常小于四位数，因此此实现默认情况下返回99，并且不影响的返回值 <xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A> 。</span><span class="sxs-lookup"><span data-stu-id="eec44-411">Because the year in the Taiwan calendar is typically less than four digits long, this implementation returns 99 by default and does not affect the return value of <xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eec44-412">为设置操作指定的值小于 99。</span><span class="sxs-lookup"><span data-stu-id="eec44-412">The value specified in a set operation is less than 99.</span></span>  
  
<span data-ttu-id="eec44-413">- 或 -</span><span class="sxs-lookup"><span data-stu-id="eec44-413">-or-</span></span> 
<span data-ttu-id="eec44-414">为设置操作指定的值大于 <see langword="MaxSupportedDateTime.Year" />。</span><span class="sxs-lookup"><span data-stu-id="eec44-414">The value specified in a set operation is greater than <see langword="MaxSupportedDateTime.Year" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eec44-415">在设置操作中，当前实例是只读的。</span><span class="sxs-lookup"><span data-stu-id="eec44-415">In a set operation, the current instance is read-only.</span></span></exception>
        <altmember cref="M:System.Globalization.TaiwanCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>
