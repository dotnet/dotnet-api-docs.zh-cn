<Type Name="RegionInfo" FullName="System.Globalization.RegionInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bf9dcb14be3a22c827fcf1dfd7190ff2eebbaa7c" /><Meta Name="ms.sourcegitcommit" Value="57ccffdf8fe8e719b7e778b859bf1ca216879f31" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/28/2020" /><Meta Name="ms.locfileid" Value="87329012" /></Metadata><TypeSignature Language="C#" Value="public class RegionInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RegionInfo extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.RegionInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class RegionInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegionInfo" />
  <TypeSignature Language="F#" Value="type RegionInfo = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RegionInfo extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit RegionInfo extends System.Object" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Globalization" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Globalization" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>包含国家/地区的相关信息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 与 <xref:System.Globalization.CultureInfo> 类不同， <xref:System.Globalization.RegionInfo> 类不表示用户首选项，且不依赖于用户的语言或区域性。  
  
## <a name="names-associated-with-a-regioninfo-object"></a>与 RegionInfo 对象关联的名称  
 对象的名称 <xref:System.Globalization.RegionInfo> 是在 ISO 3166 中为国家/地区定义的由两个字母组成的代码之一。 Case 并不重要。 <xref:System.Globalization.RegionInfo.Name%2A>、 <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A> 和 <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> 属性以大写形式返回相应的代码。 有关当前 <xref:System.Globalization.RegionInfo> 名称列表，请参阅 ISO 网站上的 [英语国家/地区名称和代码元素](https://go.microsoft.com/fwlink/?LinkId=190591) 。  
  
## <a name="instantiating-a-regioninfo-object"></a>实例化 RegionInfo 对象  
 若要实例化 <xref:System.Globalization.RegionInfo> 对象，请向 <xref:System.Globalization.RegionInfo.%23ctor%28System.String%29> 构造函数传递两个字母的区域名称（如 "us"）作为美国或特定区域性的名称（例如 "en-us" 表示英语 (美国) 。 但是，我们建议你使用特定的区域性名称而不是两个字母的区域名称，因为 <xref:System.Globalization.RegionInfo> 对象不是完全独立于语言的。 多个 <xref:System.Globalization.RegionInfo> 属性，包括 <xref:System.Globalization.RegionInfo.DisplayName%2A> 、 <xref:System.Globalization.RegionInfo.NativeName%2A> 和 <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> ，它们依赖于区域性名称。  
  
 下面的示例说明了 <xref:System.Globalization.RegionInfo> 表示华南的三个对象的属性值的差异。 第一个实例从区域名称实例化 (仅) ，而第二个和第三个实例化区域性名称 (fr-对于法语 (比利时) ，而 nl 是分别 (荷兰语) 的。 该示例使用反射来检索每个对象的属性值 <xref:System.Globalization.RegionInfo> 。  
  
 [!code-csharp[System.Globalization.RegionInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo/CS/propertyvalues1.cs#2)]
 [!code-vb[System.Globalization.RegionInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo/VB/propertyvalues1.vb#2)]  
  
 在如下所示的方案中，当您实例化对象时，请使用区域性名称（而不是国家/地区名称） <xref:System.Globalization.RegionInfo> ：  
  
-   当语言名称主要重要时。 例如，对于 EN-US 区域性名称，你可能希望你的应用程序显示 "Estados Unidos" 而不是 "美国"。 使用国家/地区名称 (我们) 单独生成 "美国"，而不考虑语言，因此应改为使用区域性名称。  
  
-   必须考虑脚本差异。 例如，国家/地区 AZ 处理具有 AZ-Latn-AZ 和 AZ-Cyrl-AZ 的阿塞拜疆文化，并且对于此国家/地区，拉丁语和西里尔文脚本可能会有很大的不同。  
  
-   维护详细信息非常重要。 成员返回的值 <xref:System.Globalization.RegionInfo> 可能不同，具体取决于是否 <xref:System.Globalization.RegionInfo> 使用区域性名称或区域名称实例化对象。 例如，下表列出了 <xref:System.Globalization.RegionInfo> 使用 "us" 区域、"en-us" 区域性和 "en-us" 区域性对对象进行实例化时返回值之间的差异。  
  
    |成员|美国|“en-US”|"es-US"|  
    |------------|----------|--------------|--------------|  
    |<xref:System.Globalization.RegionInfo.CurrencyNativeName%2A>|美元|美元|Dólar de。UU.|  
    |<xref:System.Globalization.RegionInfo.Name%2A>|US|en-US|es-US|  
    |<xref:System.Globalization.RegionInfo.NativeName%2A>|United States|United States|Estados Unidos|  
    |<xref:System.Globalization.RegionInfo.ToString%2A>|US|en-US|es-US|  
  
   
  
## Examples  
 下面的示例演示了类的多个成员 <xref:System.Globalization.RegionInfo> 。  
  
 [!code-cpp[System.Globalization.RegionInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo/CPP/regioninfo.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo/CS/regioninfo.cs#1)]
 [!code-vb[System.Globalization.RegionInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo/VB/regioninfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Globalization.RegionInfo" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegionInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.RegionInfo.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegionInfo(int culture);" />
      <MemberSignature Language="F#" Value="new System.Globalization.RegionInfo : int -&gt; System.Globalization.RegionInfo" Usage="new System.Globalization.RegionInfo culture" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="culture">区域性标识符。</param>
        <summary>基于与指定的区域性标识符关联的国家/地区初始化 <see cref="T:System.Globalization.RegionInfo" /> 类的一个新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.RegionInfo.%23ctor%28System.String%29> 建议用于实例化对象的构造函数 <xref:System.Globalization.RegionInfo> 。 与 <xref:System.Globalization.RegionInfo.%23ctor%28System.Int32%29> 需要数值区域性标识符作为参数的构造函数不同，其参数是可读性更强的区域性名称或国家/地区代码。  
  
 区域性标识符映射到相应的区域语言支持 (NLS) 区域设置标识符。 有关详细区域性信息，请参阅 "面向全球开发人员中心" 中的 " [ (NLS) API 参考](https://go.microsoft.com/fwlink/?LinkId=200048) "。  
  
 <xref:System.Globalization.RegionInfo.Name%2A> <xref:System.Globalization.RegionInfo> 通过调用此构造函数实例化的新对象的属性的值是该国家/地区的 ISO 3166 2-字母代码，而不是组合语言和国家/地区代码。 例如，如果 <xref:System.Globalization.RegionInfo> 使用英语 (美国) 区域性的区域性标识符0x0409 对对象进行实例化，则属性的值 <xref:System.Globalization.RegionInfo.Name%2A> 为 "US"。 与此相反，如果 <xref:System.Globalization.RegionInfo> 使用组合语言和国家/地区代码对英语 (美国) 区域性对对象进行实例化，则属性的值 <xref:System.Globalization.RegionInfo.Name%2A> 为 "en-us"。  
  
   
  
## Examples  
 下面的代码示例对以 <xref:System.Globalization.RegionInfo> 不同方式创建的两个实例进行比较。  
  
 [!code-cpp[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CPP/regioninfo_equals.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CS/regioninfo_equals.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/VB/regioninfo_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="culture" /> 指定固定、自定义或非特定区域性。</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegionInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.RegionInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegionInfo(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Globalization.RegionInfo : string -&gt; System.Globalization.RegionInfo" Usage="new System.Globalization.RegionInfo name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">一个字符串，它包含 ISO 3166 中为国家/地区定义的由两个字母组成的代码。  
  
 或  
  
 包含特定区域、自定义区域或仅 Windows 区域的区域名称的字符串。 如果区域性名称未采用 RFC 4646 格式，应用程序应指定整个区域性名称，而不是仅指定国家/地区。</param>
        <summary>基于按名称指定的国家/地区或特定区域性初始化 <see cref="T:System.Globalization.RegionInfo" /> 类的一个新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `name`参数是为国家/地区定义的代码之一，或者是特定的、自定义的或仅限 Windows 的区域性名称。 Case 并不重要。 但是，、 <xref:System.Globalization.RegionInfo.Name%2A> <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A> 和 <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> 属性以大写形式返回指定的代码或区域性名称。  
  
 预定义的 <xref:System.Globalization.RegionInfo> 名称列在 ISO 网站上的 " [国家/地区名称" 和 "代码" 元素](https://go.microsoft.com/fwlink/?LinkId=190591) 中。  
  
 应提供特定区域性的名称，而不是仅提供参数中的国家/地区名称 `name` 。 例如，en-us for 英语 (美国) 或 es for 西班牙语 (美国) 最好是我们，因为和等属性 <xref:System.Globalization.RegionInfo.NativeName%2A> <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> 反映特定语言。 az-Latn-AZ 或 AZ-Cyrl-AZ 比 AZ 更好，因为属性（例如 <xref:System.Globalization.RegionInfo.NativeName%2A> 、 <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> 和） <xref:System.Globalization.RegionInfo.CurrencySymbol%2A> 反映特定的脚本。  预定义的区域性名称在 "面向全球开发人员中心" 中的 " [ (NLS) API 参考" 区域](https://go.microsoft.com/fwlink/?LinkId=200048) 中列出。 请注意，对此构造函数的调用将引发 <xref:System.ArgumentException> `name` （如果是非特定区域性） (如 En for 英语) 。  
  
   
  
## Examples  
 下面的代码示例对以 <xref:System.Globalization.RegionInfo> 不同方式创建的两个实例进行比较。  
  
 [!code-cpp[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CPP/regioninfo_equals.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CS/regioninfo_equals.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/VB/regioninfo_equals.vb#1)]  
  
 下面的代码示例 <xref:System.Globalization.RegionInfo> 使用区域性名称创建的实例。  
  
 [!code-cpp[System.Globalization.RegionInfo.ctorCultureName#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo.ctorCultureName/CPP/regioninfo_ctorculturename.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo.ctorCultureName#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo.ctorCultureName/CS/regioninfo_ctorculturename.cs#1)]
 [!code-vb[System.Globalization.RegionInfo.ctorCultureName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo.ctorCultureName/VB/regioninfo_ctorculturename.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 上声明的默认值为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" /> 不是有效的国家/地区名称或特定的区域性名称。</exception>
        <block subset="none" type="usage"><para>此构造函数只接受特定的区域性或国家/地区代码。 但是，某些非特定区域性名称与国家/地区代码相同。 在这种情况下， <paramref name="name" /> 将解释为国家/地区代码，而不是非特定区域性名称，此构造函数不会引发 <see cref="T:System.ArgumentException" /> 。</para></block>
      </Docs>
    </Member>
    <Member MemberName="CurrencyEnglishName">
      <MemberSignature Language="C#" Value="public virtual string CurrencyEnglishName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyEnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.CurrencyEnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrencyEnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CurrencyEnglishName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyEnglishName : string" Usage="System.Globalization.RegionInfo.CurrencyEnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取该国家/地区中使用的货币的英文名称。</summary>
        <value>该国家/地区中使用的货币的英文名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示了 <xref:System.Globalization.RegionInfo.CurrencyEnglishName%2A> 属性。  
  
 [!code-cpp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/cpp/rgn5props.cpp#1)]
 [!code-csharp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/CS/rgn5props.cs#1)]
 [!code-vb[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/VB/rgn5props.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrencyNativeName">
      <MemberSignature Language="C#" Value="public virtual string CurrencyNativeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyNativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.CurrencyNativeName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrencyNativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CurrencyNativeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyNativeName : string" Usage="System.Globalization.RegionInfo.CurrencyNativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取该国家/地区中使用的货币名称，它使用该国家/地区的本地语言格式表示。</summary>
        <value>该国家/地区中使用的货币的本地名称，它使用与 ISO 3166 国家/地区代码关联的语言格式表示。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果使用 <xref:System.Globalization.RegionInfo> 特定区域性创建当前对象，并在相应的国家/地区中使用多种语言，则 <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> 属性检索与特定区域性关联的货币名称。  
  
 此属性的值取决于与特定国家/地区关联的语言。 因此，如果要使用 <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> 属性，则应 <xref:System.Globalization.RegionInfo> 通过 <xref:System.Globalization.RegionInfo.%23ctor%28System.String%29> 将构造函数传递成组合语言和国家/地区代码来实例化对象。 例如，如果 <xref:System.Globalization.RegionInfo> 使用英语 (加拿大) 的组合语言和国家/地区代码对对象进行实例化，则其属性的值 <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> 为 "加拿大元"。 如果使用用于法语 (加拿大) 的组合语言和国家/地区代码对其进行实例化，则其属性的值 <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> 为 "canadien"。 因此， `RegionInfo` 在这种情况下，仅使用国家/地区名称创建对象 ( "CA") 不一定足以区分适当的本机货币名称。  
  
   
  
## Examples  
 下面的代码示例演示了 <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> 属性。  
  
 [!code-cpp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/cpp/rgn5props.cpp#1)]
 [!code-csharp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/CS/rgn5props.cs#1)]
 [!code-vb[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/VB/rgn5props.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrencySymbol">
      <MemberSignature Language="C#" Value="public virtual string CurrencySymbol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.CurrencySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrencySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CurrencySymbol { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrencySymbol : string" Usage="System.Globalization.RegionInfo.CurrencySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与国家/地区关联的货币符号。</summary>
        <value>与国家/地区关联的货币符号。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 例如，美国的货币符号为 "$"。  
  
 如果使用 <xref:System.Globalization.RegionInfo> 特定区域性创建当前对象，并在相应的国家/地区中使用多种语言，则 <xref:System.Globalization.RegionInfo.CurrencySymbol%2A> 属性将返回与特定区域性关联的货币符号。  
  
   
  
## Examples  
 下面的代码示例显示类的属性 <xref:System.Globalization.RegionInfo> 。  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.ISOCurrencySymbol" />
      </Docs>
    </Member>
    <Member MemberName="CurrentRegion">
      <MemberSignature Language="C#" Value="public static System.Globalization.RegionInfo CurrentRegion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.RegionInfo CurrentRegion" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.CurrentRegion" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentRegion As RegionInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::RegionInfo ^ CurrentRegion { System::Globalization::RegionInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentRegion : System.Globalization.RegionInfo" Usage="System.Globalization.RegionInfo.CurrentRegion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.RegionInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取表示当前线程所使用的国家/地区的 <see cref="T:System.Globalization.RegionInfo" />。</summary>
        <value>表示当前线程所使用的国家/地区的 <see cref="T:System.Globalization.RegionInfo" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的值基于通过控制面板的 "区域和语言选项" 部分选择的区域。 但是，该信息在的生命周期内可能会更改 <xref:System.AppDomain> 。 <xref:System.Globalization.RegionInfo>类不会自动检测系统设置中的更改，但 <xref:System.Globalization.RegionInfo.CurrentRegion%2A> 当你调用方法时，会更新属性 <xref:System.Globalization.CultureInfo.ClearCachedData%2A> 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Globalization.RegionInfo.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取以 .NET Framework 本地化版本语言表示的国家/地区的全名。</summary>
        <value>以 .NET Framework 本地化版本语言表示的国家/地区的全名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.RegionInfo.DisplayName%2A>属性以 .NET Framework 的本地化版本的语言显示国家/地区名称。 例如，属性在 <xref:System.Globalization.RegionInfo.DisplayName%2A> 英语版本的 .NET Framework 上以英语显示国家/地区，在西班牙语版本中以西班牙语显示 .NET Framework 的西班牙语版本。  
  
 该属性的值 <xref:System.Globalization.RegionInfo.DisplayName%2A> 从以当前用户界面区域性的语言（由表示）中的资源文件中获取 <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> 。 自定义区域或操作系统合成的区域可能不包含资源信息，在这种情况下，的值与 <xref:System.Globalization.RegionInfo.DisplayName%2A> 属性的值相同 <xref:System.Globalization.RegionInfo.NativeName%2A> 。  
  
   
  
## Examples  
 下面的代码示例显示类的属性 <xref:System.Globalization.RegionInfo> 。  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
        <altmember cref="P:System.Globalization.RegionInfo.EnglishName" />
        <altmember cref="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      </Docs>
    </Member>
    <Member MemberName="EnglishName">
      <MemberSignature Language="C#" Value="public virtual string EnglishName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.EnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EnglishName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnglishName : string" Usage="System.Globalization.RegionInfo.EnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取以英文表示的国家/地区的全名。</summary>
        <value>以英文表示的国家/地区的全名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 例如， <xref:System.Globalization.RegionInfo> 为英语 (美国) 区域性创建的对象将显示 "美国"。  
  
   
  
## Examples  
 下面的代码示例显示类的属性 <xref:System.Globalization.RegionInfo> 。  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
        <altmember cref="P:System.Globalization.RegionInfo.DisplayName" />
        <altmember cref="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.RegionInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="regionInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">将与当前 <see cref="T:System.Globalization.RegionInfo" /> 进行比较的对象。</param>
        <summary>确定指定的对象与当前 <see cref="T:System.Globalization.RegionInfo" /> 是否为同一实例。</summary>
        <returns>如果 <paramref name="value" /> 参数是 <see cref="T:System.Globalization.RegionInfo" /> 对象并且其 <see cref="P:System.Globalization.RegionInfo.Name" /> 属性与当前 <see cref="P:System.Globalization.RegionInfo.Name" /> 对象的 <see cref="T:System.Globalization.RegionInfo" /> 属性相同，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法重写 <xref:System.Object.Equals%2A?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下面的代码示例对以 <xref:System.Globalization.RegionInfo> 不同方式创建的两个实例进行比较。  
  
 [!code-cpp[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CPP/regioninfo_equals.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CS/regioninfo_equals.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/VB/regioninfo_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GeoId">
      <MemberSignature Language="C#" Value="public virtual int GeoId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GeoId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.GeoId" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GeoId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int GeoId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.GeoId : int" Usage="System.Globalization.RegionInfo.GeoId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取地理区域、国家/地区、城市或地点的唯一标识号。</summary>
        <value>一个唯一标识地理位置的 32 位有符号数字。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 应用程序应使用 <xref:System.Globalization.RegionInfo.GeoId%2A> 属性向客户提供区域性特定的服务。 例如， <xref:System.Globalization.RegionInfo.GeoId%2A> 属性可用作访问包含有关国家/地区的特定信息的数据库记录的键。  
  
 此属性值对应于 Windows `GetUserGeoID` 函数。 有关地理标识符的列表，请参阅 MSDN Library 中 [的地理位置表](https://go.microsoft.com/fwlink/?LinkId=191287) 。  
  
   
  
## Examples  
 下面的代码示例演示了 <xref:System.Globalization.RegionInfo.GeoId%2A> 属性。  
  
 [!code-cpp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/cpp/rgn5props.cpp#1)]
 [!code-csharp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/CS/rgn5props.cs#1)]
 [!code-vb[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/VB/rgn5props.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.RegionInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="regionInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>用作当前 <see cref="T:System.Globalization.RegionInfo" /> 的哈希函数，适合用在哈希算法和数据结构（如哈希表）中。</summary>
        <returns>当前 <see cref="T:System.Globalization.RegionInfo" /> 的哈希代码。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法重写 <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>。  
  
 此方法为根据 <xref:System.Globalization.RegionInfo.Equals%2A> 方法视为相等的两个对象生成相同的哈希代码。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.RegionInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsMetric">
      <MemberSignature Language="C#" Value="public virtual bool IsMetric { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMetric" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.IsMetric" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMetric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMetric { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMetric : bool" Usage="System.Globalization.RegionInfo.IsMetric" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示该国家/地区是否使用公制进行度量。</summary>
        <value>如果该国家/地区使用公制进行度量，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例显示类的属性 <xref:System.Globalization.RegionInfo> 。  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ISOCurrencySymbol">
      <MemberSignature Language="C#" Value="public virtual string ISOCurrencySymbol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ISOCurrencySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.ISOCurrencySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ISOCurrencySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ISOCurrencySymbol { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ISOCurrencySymbol : string" Usage="System.Globalization.RegionInfo.ISOCurrencySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与国家/地区关联的由三个字符组成的 ISO 4217 货币符号。</summary>
        <value>与国家/地区关联的由三个字符组成的 ISO 4217 货币符号。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下面的示例列出了属性返回的一些 ISO 4217 货币符号 <xref:System.Globalization.RegionInfo.ISOCurrencySymbol%2A> 。  
  
|国家/地区|货币名称|ISO 4217 货币符号|  
|---------------------|-------------------|------------------------------|  
|阿尔巴尼亚|阿尔巴尼亚语 Lek|ALL|  
|阿尔及利亚|阿尔及利亚第纳尔|DZD|  
|阿根廷|阿根廷比索|ARS|  
|亚美尼亚|亚美尼亚拉姆|AMD|  
|澳大利亚|澳大利亚元|AUD|  
|奥地利|欧盟|EUR|  
|阿塞拜疆|Azerbaijanian 马纳特|AZN|  
|巴林|巴林第纳尔|BHD|  
|白俄罗斯|Belarussian 卢布|BYR|  
|比利时|欧盟|EUR|  
|伯利兹|伯利兹元|BZD|  
|委内瑞拉玻利瓦尔共和国|委内瑞拉 Bolivar|VEF|  
|玻利维亚|诺|相距|  
|巴西|Real|BRL|  
|文莱|文莱元|BND|  
|保加利亚|保加利亚列弗|BGN|  
|加拿大|加拿大元|CAD|  
|加勒比海|美元|USD|  
|智利|智利比索|CLP|  
|哥伦比亚|哥伦比亚比索|COP|  
|哥斯达黎加|哥斯达黎加哥斯达黎加冒号|CRC|  
|克罗地亚|克罗地亚库纳|HRK|  
|捷克共和国|捷克克朗|CZK|  
|丹麦|丹麦克朗|DKK|  
|多米尼加共和国|多米尼加比索|DOP|  
|厄瓜多尔|美元|USD|  
|埃及|埃及镑|EGP|  
|萨尔瓦多|美元|USD|  
|爱沙尼亚|爱沙尼亚语克朗|EEK|  
|埃塞俄比亚|埃塞俄比亚比尔|ETB|  
|法罗群岛|丹麦克朗|DKK|  
|芬兰|欧盟|EUR|  
|法国|欧盟|EUR|  
|格鲁吉亚|拉里|GEL|  
|德国|欧盟|EUR|  
|希腊|欧盟|EUR|  
|危地马拉|Guatemalan 查尔|GTQ|  
|洪都拉斯|洪都拉斯伦皮拉|HNL|  
|香港特别行政区|香港元|HKD|  
|匈牙利|匈牙利福林|HUF|  
|冰岛|冰岛克朗|ISK|  
|印度|印度卢比|INR|  
|印度尼西亚|印度尼西亚卢比|IDR|  
|伊朗|伊朗里亚尔|IRR|  
|伊拉克|伊拉克第纳尔|IQD|  
|爱尔兰|欧盟|EUR|  
|巴基斯坦伊斯兰共和国|巴基斯坦卢比|PKR|  
|以色列|以色列 New 谢克尔|ILS|  
|意大利|欧盟|EUR|  
|牙买加|牙买加元|JMD|  
|日本|日元|JPY|  
|约旦|约旦第纳尔|JOD|  
|哈萨克斯坦|腾格|KZT|  
|肯尼亚|肯尼亚先令|KES|  
|韩国|朝鲜语|KRW|  
|科威特|科威特第纳尔|KWD|  
|吉尔吉斯斯坦|som|公斤之间|  
|拉脱维亚|拉脱维亚拉特|LVL|  
|黎巴嫩|黎巴嫩镑|LBP|  
|利比亚|利比亚第纳尔|LYD|  
|列支敦士登|瑞士法郎|CHF|  
|立陶宛|立陶宛语立特|LTL|  
|卢森堡|欧盟|EUR|  
|澳门特别行政区|澳门澳门|收尾|  
|北马其顿|马其顿第纳尔|MKD|  
|马来西亚|马来西亚林吉特|MYR|  
|马尔代夫|拉菲|MVR|  
|墨西哥|墨西哥比索|MXN|  
|蒙古|Tugrik|MNT|  
|摩洛哥|摩洛哥迪拉姆|MAD|  
|荷兰|欧盟|EUR|  
|新西兰|新西兰元|NZD|  
|尼加拉瓜|尼加拉瓜科尔多瓦 Oro|NIO|  
|挪威|挪威克朗|NOK|  
|阿曼|阿曼里亚尔|OMR|  
|巴拿马|巴拿马巴波亚|PAB|  
|巴拉圭|巴拉圭瓜拉尼|PYG|  
|中华人民共和国|PRC 人民币|CNY|  
|秘鲁|秘鲁新 Sol|PEN|  
|菲律宾|菲律宾比索|PHP|  
|波兰|波兰兹罗提|PLN|  
|葡萄牙|欧盟|EUR|  
|摩纳哥公国|欧盟|EUR|  
|波多黎各|美元|USD|  
|卡塔尔|卡塔尔里亚尔|QAR|  
|罗马尼亚|罗马尼亚列伊|RON|  
|俄罗斯|俄罗斯卢布|RUB|  
|沙特阿拉伯|沙特阿拉伯里亚尔|SAR|  
|塞尔维亚|塞尔维亚第纳尔|RSD|  
|新加坡|新加坡元|SGD|  
|斯洛伐克|欧盟|EUR|  
|斯洛文尼亚|欧盟|EUR|  
|南非|南非 Rand|ZAR|  
|西班牙|欧盟|EUR|  
|瑞典|瑞典克朗|SEK|  
|瑞士|瑞士法郎|CHF|  
|叙利亚|叙利亚镑|SYP|  
|中国台湾|新台湾元|TWD|  
|泰国|泰语泰铢|THB|  
|特立尼达和多巴哥|特立尼达元|TTD|  
|突尼斯|突尼斯第纳尔|TND|  
|土耳其|土耳其里拉|TRY|  
|乌克兰|乌克兰 Hryvnia|UAH|  
|阿拉伯联合酋长国|阿拉伯联合酋长国迪拉姆|AED|  
|United Kingdom|英国镑|GBP|  
|United States|美元|USD|  
|乌拉圭|比索 Uruguayo|UYU|  
|乌兹别克斯坦|乌兹别克斯坦 Som|UZS|  
|越南|越南盾|VND.APPLE.MPEGURL|  
|也门|也门里亚尔|YER|  
|津巴布韦|津巴布韦元|ZWL|  
  
   
  
## Examples  
 下面的代码示例显示类的属性 <xref:System.Globalization.RegionInfo> 。  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.CurrencySymbol" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Globalization.RegionInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前 <see cref="T:System.Globalization.RegionInfo" /> 对象的名称或 ISO 3166 双字母国家/地区代码。</summary>
        <value><see cref="M:System.Globalization.RegionInfo.#ctor(System.String)" /> 构造函数的 <paramref name="name" /> 参数指定的值。 返回值为大写。  
  
或 
ISO 3166 中为 <see cref="M:System.Globalization.RegionInfo.#ctor(System.Int32)" /> 构造函数的 <paramref name="culture" /> 参数指定的国家/地区定义的双字母代码。 返回值为大写。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果当前 <xref:System.Globalization.RegionInfo> 对象是使用 <xref:System.Globalization.RegionInfo.%23ctor%28System.Int32%29?displayProperty=nameWithType> 采用区域性标识符参数的构造函数创建的，则 <xref:System.Globalization.RegionInfo.Name%2A> 属性值是在 ISO 3166 中为国家/地区定义的由两个字母组成的代码之一，格式为大写。 例如，美国的双字母代码为 "US"。  
  
 如果当前 <xref:System.Globalization.RegionInfo> 对象是使用 <xref:System.Globalization.RegionInfo.%23ctor%28System.String%29?displayProperty=nameWithType> 构造函数创建的，并且传递的是完整的区域性名称（如 "en-us"），则 <xref:System.Globalization.RegionInfo.Name%2A> 属性值是中 .NET Framework 的完整区域性名称，并且只是 .net Core 中的区域名称。  
  
   
  
## Examples  
 下面的代码示例显示类的属性 <xref:System.Globalization.RegionInfo> 。  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.EnglishName" />
        <altmember cref="P:System.Globalization.RegionInfo.DisplayName" />
        <altmember cref="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      </Docs>
    </Member>
    <Member MemberName="NativeName">
      <MemberSignature Language="C#" Value="public virtual string NativeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.NativeName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NativeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeName : string" Usage="System.Globalization.RegionInfo.NativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个国家/地区的名称，它使用该国家/地区的本地语言格式表示。</summary>
        <value>该国家/地区的本地名称，它使用与 ISO 3166 国家/地区代码关联的语言格式表示。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Globalization.RegionInfo.NativeName%2A>如果 `RegionInfo` 对象是使用完整区域性名称构造的，则属性检索完整的区域性名称。  
  
 建议使用区域性名称（例如，"en-us" 表示英语 (美国) -访问 <xref:System.Globalization.RegionInfo.NativeName%2A> 属性。 用于此属性的字符串取决于与该国家/地区关联的语言。 例如，对于英语 (的区域性名称 en-us 美国) ，对于西班牙语 (美国) 可以在 Windows Vista 上检索不同的值。 因此， `RegionInfo` 只使用美国国家/地区名称创建对象并不太具体，无法区分合适的字符串。  
  
   
  
## Examples  
 下面的代码示例演示了 <xref:System.Globalization.RegionInfo.NativeName%2A> 属性。  
  
 [!code-cpp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/cpp/rgn5props.cpp#1)]
 [!code-csharp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/CS/rgn5props.cs#1)]
 [!code-vb[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/VB/rgn5props.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISORegionName">
      <MemberSignature Language="C#" Value="public virtual string ThreeLetterISORegionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISORegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ThreeLetterISORegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ThreeLetterISORegionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterISORegionName : string" Usage="System.Globalization.RegionInfo.ThreeLetterISORegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在 ISO 3166 中定义的由三个字母组成的国家/地区代码。</summary>
        <value>在 ISO 3166 中定义的由三个字母组成的国家/地区代码。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A>属性包含在此国家/地区 ISO 3166 中定义的由三个字母组成的代码。 例如，美国的三字母代码为 "USA"。  
  
 Case 并不重要。 但是，、 <xref:System.Globalization.RegionInfo.Name%2A> <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A> 和 <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> 属性以大写形式返回相应的代码。  
  
   
  
## Examples  
 下面的代码示例显示类的属性 <xref:System.Globalization.RegionInfo> 。  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
        <altmember cref="P:System.Globalization.RegionInfo.EnglishName" />
        <altmember cref="P:System.Globalization.RegionInfo.DisplayName" />
        <altmember cref="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsRegionName">
      <MemberSignature Language="C#" Value="public virtual string ThreeLetterWindowsRegionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsRegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ThreeLetterWindowsRegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ThreeLetterWindowsRegionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterWindowsRegionName : string" Usage="System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 Windows 分配给此 <see cref="T:System.Globalization.RegionInfo" /> 所表示国家/地区的由三个字母组成的代码。</summary>
        <value>Windows 分配给此 <see cref="T:System.Globalization.RegionInfo" /> 所表示国家/地区的由三个字母组成的代码。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 例如，美国的三字母代码为 "USA"。  
  
   
  
## Examples  
 下面的代码示例显示类的属性 <xref:System.Globalization.RegionInfo> 。  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
        <altmember cref="P:System.Globalization.RegionInfo.EnglishName" />
        <altmember cref="P:System.Globalization.RegionInfo.DisplayName" />
        <altmember cref="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.RegionInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="regionInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个字符串，它包含区域性名称或 ISO 3166 中为当前 <see cref="T:System.Globalization.RegionInfo" /> 指定的双字母国家/地区代码。</summary>
        <returns>一个字符串，它包含区域性名称或 ISO 3166 中为当前 <see cref="T:System.Globalization.RegionInfo" /> 定义的双字母国家/地区代码。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法重写 <xref:System.Object.ToString%2A?displayProperty=nameWithType>。  
  
 此方法返回属性的值 <xref:System.Globalization.RegionInfo.Name%2A> 。  
  
 Case 并不重要。 但是，、 <xref:System.Globalization.RegionInfo.Name%2A> <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A> 和 <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> 属性以大写形式返回相应的代码。  
  
 预定义的 <xref:System.Globalization.RegionInfo> 名称在 <xref:System.Globalization.RegionInfo> 类主题中列出。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISORegionName">
      <MemberSignature Language="C#" Value="public virtual string TwoLetterISORegionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISORegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TwoLetterISORegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TwoLetterISORegionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TwoLetterISORegionName : string" Usage="System.Globalization.RegionInfo.TwoLetterISORegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在 ISO 3166 中定义的由两个字母组成的国家/地区代码。</summary>
        <value>在 ISO 3166 中定义的由两个字母组成的国家/地区代码。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 该 <xref:System.Globalization.RegionInfo> 名称是在 ISO 3166 中为国家/地区定义的由两个字母组成的代码之一。 例如，美国的双字母代码为 "US"。  
  
> [!IMPORTANT]
>  在某些情况下， <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A> 属性可以包含两个以上的字符。 例如， <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A> 加勒比海地区的属性的值为 "029"。  
  
 Case 并不重要。 但是，、 <xref:System.Globalization.RegionInfo.Name%2A> <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A> 和 <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> 属性以大写形式返回相应的代码。  
  
> [!WARNING]
>  如果要持久保存 <xref:System.Globalization.RegionInfo> 对象或在进程之间进行通信，应使用完整的区域性名称而不是两个字母的 ISO 区域代码来实例化对象。 因为 <xref:System.Globalization.RegionInfo> 属性依赖于脚本和语言，所以 <xref:System.Globalization.RegionInfo> 仅使用区域代码实例化对象会丢失上下文和数据。  
  
 预定义的 <xref:System.Globalization.RegionInfo> 名称在 ISO 网站上的 " [英语国家/地区名称" 和 "代码元素](https://go.microsoft.com/fwlink/?LinkId=190591) " 中列出。  
  
   
  
## Examples  
 下面的代码示例显示类的属性 <xref:System.Globalization.RegionInfo> 。  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
        <altmember cref="P:System.Globalization.RegionInfo.EnglishName" />
        <altmember cref="P:System.Globalization.RegionInfo.DisplayName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      </Docs>
    </Member>
  </Members>
</Type>
