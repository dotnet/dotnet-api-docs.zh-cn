<Type Name="StringInfo" FullName="System.Globalization.StringInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2eb29cc2aceba64c51e488508d7b3184b6fa4e4e" /><Meta Name="ms.sourcegitcommit" Value="9a0316374d19cc78674994106d073aa5ef1bd5f3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/10/2020" /><Meta Name="ms.locfileid" Value="94462165" /></Metadata><TypeSignature Language="C#" Value="public class StringInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StringInfo extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.StringInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class StringInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringInfo" />
  <TypeSignature Language="F#" Value="type StringInfo = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringInfo extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Globalization" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Globalization" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3e84a-101">提供将字符串拆分为文本元素和循环访问这些文本元素的功能。</span><span class="sxs-lookup"><span data-stu-id="3e84a-101">Provides functionality to split a string into text elements and to iterate through those text elements.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="3e84a-102">.NET 将文本元素定义为显示为单个字符（即字形）的文本单元。</span><span class="sxs-lookup"><span data-stu-id="3e84a-102">.NET defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="3e84a-103">文本元素可以是基字符、代理项对或组合字符序列。</span><span class="sxs-lookup"><span data-stu-id="3e84a-103">A text element can be a base character, a surrogate pair, or a combining character sequence.</span></span> <span data-ttu-id="3e84a-104">[Unicode 标准](https://go.microsoft.com/fwlink/?linkid=37123)将代理项对定义为单个抽象字符的编码字符表示形式，该字符由两个代码单元组成，其中，对的第一个单元为高代理项，第二个是低代理项。</span><span class="sxs-lookup"><span data-stu-id="3e84a-104">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</span></span> <span data-ttu-id="3e84a-105">Unicode 标准将组合字符序列定义为基字符和一个或多个组合字符的组合。</span><span class="sxs-lookup"><span data-stu-id="3e84a-105">The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters.</span></span> <span data-ttu-id="3e84a-106">代理项对可表示基字符或组合字符。</span><span class="sxs-lookup"><span data-stu-id="3e84a-106">A surrogate pair can represent a base character or a combining character.</span></span>  
  
<span data-ttu-id="3e84a-107"><xref:System.Globalization.StringInfo> 类使您能够将字符串作为一系列文本元素而不是单个 <xref:System.Char> 对象进行处理。</span><span class="sxs-lookup"><span data-stu-id="3e84a-107">The <xref:System.Globalization.StringInfo> class enables you to work with a string as a series of textual elements rather than individual <xref:System.Char> objects.</span></span>  
  
<span data-ttu-id="3e84a-108">若要实例化 <xref:System.Globalization.StringInfo> 表示指定字符串的对象，可以执行以下任一操作：</span><span class="sxs-lookup"><span data-stu-id="3e84a-108">To instantiate a <xref:System.Globalization.StringInfo> object that represents a specified string, you can do either of the following:</span></span>  
 
- <span data-ttu-id="3e84a-109">调用 <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> 构造函数并向其传递 <xref:System.Globalization.StringInfo> 对象要表示为参数的字符串。</span><span class="sxs-lookup"><span data-stu-id="3e84a-109">Call the <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor and pass it the string that the <xref:System.Globalization.StringInfo> object is to represent as an argument.</span></span>  
  
- <span data-ttu-id="3e84a-110">调用默认 <xref:System.Globalization.StringInfo.%23ctor> 构造函数，并将对象要表示的字符串分配给 <xref:System.Globalization.StringInfo> <xref:System.Globalization.StringInfo.String%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="3e84a-110">Call the default <xref:System.Globalization.StringInfo.%23ctor> constructor, and assign the string that the <xref:System.Globalization.StringInfo> object is to represent to the <xref:System.Globalization.StringInfo.String%2A> property.</span></span>  
  
 <span data-ttu-id="3e84a-111">可通过两种方式处理字符串中的单个文本元素：</span><span class="sxs-lookup"><span data-stu-id="3e84a-111">You can work with the individual text elements in a string in two ways:</span></span>  
  
- <span data-ttu-id="3e84a-112">通过枚举每个文本元素。</span><span class="sxs-lookup"><span data-stu-id="3e84a-112">By enumerating each text element.</span></span> <span data-ttu-id="3e84a-113">为此，您可以调用 <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> 方法，然后对返回的 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 对象重复调用 <xref:System.Globalization.TextElementEnumerator> 方法，直到此方法返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="3e84a-113">To do this, you call the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method, and then repeatedly call the <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> method on the returned <xref:System.Globalization.TextElementEnumerator> object until the method returns `false`.</span></span>  
  
- <span data-ttu-id="3e84a-114">通过调用 <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> 方法检索包含每个文本元素的起始索引的数组。</span><span class="sxs-lookup"><span data-stu-id="3e84a-114">By calling the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method to retrieve an array that contains the starting index of each text element.</span></span> <span data-ttu-id="3e84a-115">然后可通过将这些索引传递给 <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> 方法来检索单个文本元素。</span><span class="sxs-lookup"><span data-stu-id="3e84a-115">You can then retrieve individual text elements by passing these indexes to the <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method.</span></span>  
  
<span data-ttu-id="3e84a-116">下面的示例阐释了两种处理字符串中的文本元素的方法。</span><span class="sxs-lookup"><span data-stu-id="3e84a-116">The following example illustrates both ways of working with the text elements in a string.</span></span> <span data-ttu-id="3e84a-117">它创建两个字符串：</span><span class="sxs-lookup"><span data-stu-id="3e84a-117">It creates two strings:</span></span>  
  
- <span data-ttu-id="3e84a-118">`strCombining`，它是一个阿拉伯语字符串，包含三个文本元素和多个 <xref:System.Char> 对象。</span><span class="sxs-lookup"><span data-stu-id="3e84a-118">`strCombining`, which is a string of Arabic characters that includes three text elements with multiple <xref:System.Char> objects.</span></span> <span data-ttu-id="3e84a-119">第一个文本元素是后跟 ARABIC HAMZA BELOW (U+-655) 和 ARABIC KASRA (U+0650) 的基字符 ARABIC LETTER ALEF (U+-627)。</span><span class="sxs-lookup"><span data-stu-id="3e84a-119">The first text element is the base character ARABIC LETTER ALEF (U+-627) followed by ARABIC HAMZA BELOW (U+-655) and ARABIC KASRA (U+0650).</span></span> <span data-ttu-id="3e84a-120">第二个文本元素是后跟 ARABIC FATHA (U+-64E) 的 ARABIC LETTER HEH (U+0647)。</span><span class="sxs-lookup"><span data-stu-id="3e84a-120">The second text element is ARABIC LETTER HEH (U+0647) followed by ARABIC FATHA (U+-64E).</span></span> <span data-ttu-id="3e84a-121">第三个文本元素是阿拉伯文字母 BEH (U + 0628) 后跟阿拉伯 DAMMATAN (U + 064C) 。</span><span class="sxs-lookup"><span data-stu-id="3e84a-121">The third text element is ARABIC LETTER BEH (U+0628) followed by ARABIC DAMMATAN (U+064C).</span></span>  
  
- <span data-ttu-id="3e84a-122">`strSurrogates`，它是一个包含三个代理项对的字符串：希腊语 ACROPHONIC 5 人才 (U + 10148) 从补充的多语言平面，U + 20026，从补充表意型，U + F1001，来自专用用户区域。</span><span class="sxs-lookup"><span data-stu-id="3e84a-122">`strSurrogates`, which is a string that includes three surrogate pairs: GREEK ACROPHONIC FIVE TALENTS (U+10148) from the Supplementary Multilingual Plane, U+20026 from the Supplementary Ideographic Plane, and U+F1001 from the private user area.</span></span> <span data-ttu-id="3e84a-123">每个字符的 UTF-16 编码是一个代理项对，其中依次包含一个高代理项和一个低代理项。</span><span class="sxs-lookup"><span data-stu-id="3e84a-123">The UTF-16 encoding of each character is a surrogate pair that consists of a high surrogate followed by a low surrogate.</span></span>  
  
<span data-ttu-id="3e84a-124">每个字符串依次通过 <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> 方法和 <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> 方法分析一次。</span><span class="sxs-lookup"><span data-stu-id="3e84a-124">Each string is parsed once by the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method and then by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method.</span></span> <span data-ttu-id="3e84a-125">两个方法都可正确分析两个字符串中的文本元素并显示分析操作的结果。</span><span class="sxs-lookup"><span data-stu-id="3e84a-125">Both methods correctly parse the text elements in the two strings and display the results of the parsing operation.</span></span>  
  
:::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.stringinfo.class/cs/indexing1.cs" interactive="try-dotnet" id="Snippet1":::
:::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.stringinfo.class/vb/indexing1.vb" id="Snippet1":::
  
## Examples  

<span data-ttu-id="3e84a-126">此示例使用 <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> 类的和 <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> 方法 <xref:System.Globalization.StringInfo> 来操作包含代理项和组合字符的字符串。</span><span class="sxs-lookup"><span data-stu-id="3e84a-126">This example uses the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> and <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> methods of the <xref:System.Globalization.StringInfo> class to manipulate a string that contains surrogate and combining characters.</span></span>  
  
:::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp" id="Snippet1":::
:::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs" interactive="try-dotnet" id="Snippet1":::
:::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb" id="Snippet1":::

 ]]></format>
    </remarks>
    <block subset="none" type="usage"><para><span data-ttu-id="3e84a-127">在内部，类的方法 <see cref="T:System.Globalization.StringInfo" /> 调用类的方法 <see cref="T:System.Globalization.CharUnicodeInfo" /> 来确定字符类别。</span><span class="sxs-lookup"><span data-stu-id="3e84a-127">Internally, the methods of the <see cref="T:System.Globalization.StringInfo" /> class call the methods of the <see cref="T:System.Globalization.CharUnicodeInfo" /> class to determine character categories.</span></span> <span data-ttu-id="3e84a-128">从 .NET Framework 4.6.2 开始，字符分类基于 [Unicode 标准版本 8.0.0](https://unicode.org/versions/Unicode8.0.0)。</span><span class="sxs-lookup"><span data-stu-id="3e84a-128">Starting with the .NET Framework 4.6.2, character classification is based on [The Unicode Standard, Version 8.0.0](https://unicode.org/versions/Unicode8.0.0).</span></span> <span data-ttu-id="3e84a-129">对于 .NET Framework 4 到 .NET Framework 4.6.1，它基于 [Unicode 标准6.3.0 版本](https://www.unicode.org/versions/Unicode6.3.0/)。</span><span class="sxs-lookup"><span data-stu-id="3e84a-129">For the .NET Framework 4 through the .NET Framework 4.6.1, it is based on [The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span> <span data-ttu-id="3e84a-130">在 .NET Core 中，它基于 [Unicode Standard 8.0.0 版](https://unicode.org/versions/Unicode8.0.0)。</span><span class="sxs-lookup"><span data-stu-id="3e84a-130">In .NET Core, it is based on [The Unicode Standard, Version 8.0.0](https://unicode.org/versions/Unicode8.0.0).</span></span></para></block>
    <related type="ExternalDocumentation" href="https://www.microsoft.com/download/details.aspx?id=10921"><span data-ttu-id="3e84a-131">为 Windows 操作系统排序权重表</span><span class="sxs-lookup"><span data-stu-id="3e84a-131">Sorting Weight Tables for Windows operating systems</span></span></related>
    <related type="ExternalDocumentation" href="https://www.unicode.org/Public/UCA/latest/allkeys.txt"><span data-ttu-id="3e84a-132">适用于 Linux 和 macOS 的默认 Unicode 排序规则元素表</span><span class="sxs-lookup"><span data-stu-id="3e84a-132">Default Unicode Collation Element Table, for Linux and macOS</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e84a-133">初始化 <see cref="T:System.Globalization.StringInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3e84a-133">Initializes a new instance of the <see cref="T:System.Globalization.StringInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e84a-134">初始化 <see cref="T:System.Globalization.StringInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3e84a-134">Initializes a new instance of the <see cref="T:System.Globalization.StringInfo" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e84a-135">新对象的值 <xref:System.Globalization.StringInfo> 将初始化为空字符串 ( "" ) 。</span><span class="sxs-lookup"><span data-stu-id="3e84a-135">The value of the new <xref:System.Globalization.StringInfo> object is initialized to the empty string ("").</span></span> <span data-ttu-id="3e84a-136">您可以使用属性向其分配另一个字符串 <xref:System.Globalization.StringInfo.String%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3e84a-136">You can assign another string to it by using the <xref:System.Globalization.StringInfo.String%2A> property.</span></span>  <span data-ttu-id="3e84a-137">还可以 <xref:System.Globalization.StringInfo> 通过调用构造函数，实例化一个对象，该对象表示单个步骤中的指定字符串 <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> 。</span><span class="sxs-lookup"><span data-stu-id="3e84a-137">You can also instantiate a <xref:System.Globalization.StringInfo> object that represents a specified string in a single step by calling the <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Globalization.StringInfo : string -&gt; System.Globalization.StringInfo" Usage="new System.Globalization.StringInfo value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3e84a-138">用于初始化此 <see cref="T:System.Globalization.StringInfo" /> 对象的字符串。</span><span class="sxs-lookup"><span data-stu-id="3e84a-138">A string to initialize this <see cref="T:System.Globalization.StringInfo" /> object.</span></span></param>
        <summary><span data-ttu-id="3e84a-139">将 <see cref="T:System.Globalization.StringInfo" /> 类的新实例初始化为指定的字符串。</span><span class="sxs-lookup"><span data-stu-id="3e84a-139">Initializes a new instance of the <see cref="T:System.Globalization.StringInfo" /> class to a specified string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e84a-140">此构造函数将 value 参数分配给对象的 <xref:System.Globalization.StringInfo.String%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="3e84a-140">This constructor assigns the value argument to the object's <xref:System.Globalization.StringInfo.String%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e84a-141"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e84a-141"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="stringInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3e84a-142">一个对象。</span><span class="sxs-lookup"><span data-stu-id="3e84a-142">An object.</span></span></param>
        <summary><span data-ttu-id="3e84a-143">指示当前 <see cref="T:System.Globalization.StringInfo" /> 对象是否与指定的对象相等。</span><span class="sxs-lookup"><span data-stu-id="3e84a-143">Indicates whether the current <see cref="T:System.Globalization.StringInfo" /> object is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="3e84a-144">如果 <paramref name="value" /> 参数是 <see cref="T:System.Globalization.StringInfo" /> 对象并且其 <see cref="P:System.Globalization.StringInfo.String" /> 属性等同于此 <see cref="T:System.Globalization.StringInfo" /> 对象的 <see cref="P:System.Globalization.StringInfo.String" /> 属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e84a-144"><see langword="true" /> if the <paramref name="value" /> parameter is a <see cref="T:System.Globalization.StringInfo" /> object and its <see cref="P:System.Globalization.StringInfo.String" /> property equals the <see cref="P:System.Globalization.StringInfo.String" /> property of this <see cref="T:System.Globalization.StringInfo" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.String.Equals" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="stringInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e84a-145">计算当前 <see cref="T:System.Globalization.StringInfo" /> 对象的值的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="3e84a-145">Calculates a hash code for the value of the current <see cref="T:System.Globalization.StringInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="3e84a-146">基于此 <see cref="T:System.Globalization.StringInfo" /> 对象的字符串值的 32 位带符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="3e84a-146">A 32-bit signed integer hash code based on the string value of this <see cref="T:System.Globalization.StringInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e84a-147">的行为 <xref:System.Globalization.StringInfo.GetHashCode%2A> 依赖于其实现，该实现可能会从公共语言运行时的一个版本更改为另一个版本。</span><span class="sxs-lookup"><span data-stu-id="3e84a-147">The behavior of <xref:System.Globalization.StringInfo.GetHashCode%2A> is dependent on its implementation, which might change from one version of the common language runtime to another.</span></span> <span data-ttu-id="3e84a-148">这样做可能会提高的性能 <xref:System.Globalization.StringInfo.GetHashCode%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3e84a-148">This might happen to improve the performance of <xref:System.Globalization.StringInfo.GetHashCode%2A>.</span></span> <span data-ttu-id="3e84a-149">若要使行为保持 <xref:System.Globalization.StringInfo.GetHashCode%2A> 不变，应用程序应将的运行时实现重写，使其 <xref:System.Globalization.StringInfo.GetHashCode%2A> 具有一个不会更改的已知实现。</span><span class="sxs-lookup"><span data-stu-id="3e84a-149">To make the behavior of <xref:System.Globalization.StringInfo.GetHashCode%2A> constant, the application should override the runtime implementation of <xref:System.Globalization.StringInfo.GetHashCode%2A> with an implementation known to never change.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNextTextElement">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e84a-150">获取指定字符串中的第一个文本元素。</span><span class="sxs-lookup"><span data-stu-id="3e84a-150">Gets the first text element in a specified string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="3e84a-151">要从中获取文本元素的字符串。</span><span class="sxs-lookup"><span data-stu-id="3e84a-151">The string from which to get the text element.</span></span></param>
        <summary><span data-ttu-id="3e84a-152">获取指定字符串中的第一个文本元素。</span><span class="sxs-lookup"><span data-stu-id="3e84a-152">Gets the first text element in a specified string.</span></span></summary>
        <returns><span data-ttu-id="3e84a-153">包含指定字符串中的第一个文本元素的字符串。</span><span class="sxs-lookup"><span data-stu-id="3e84a-153">A string containing the first text element in the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
<span data-ttu-id="3e84a-154">.NET 将文本元素定义为显示为单个字符（即字形）的文本单元。</span><span class="sxs-lookup"><span data-stu-id="3e84a-154">.NET defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="3e84a-155">文本元素可以是基字符、代理项对或组合字符序列。</span><span class="sxs-lookup"><span data-stu-id="3e84a-155">A text element can be a base character, a surrogate pair, or a combining character sequence.</span></span> <span data-ttu-id="3e84a-156">[Unicode 标准](https://go.microsoft.com/fwlink/?linkid=37123)将代理项对定义为单个抽象字符的编码字符表示形式，该字符由两个代码单元组成，其中，对的第一个单元为高代理项，第二个是低代理项。</span><span class="sxs-lookup"><span data-stu-id="3e84a-156">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</span></span> <span data-ttu-id="3e84a-157">[Unicode 标准](https://go.microsoft.com/fwlink/?linkid=37123)将组合字符序列定义为基字符和一个或多个组合字符的组合。</span><span class="sxs-lookup"><span data-stu-id="3e84a-157">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines a combining character sequence as a combination of a base character and one or more combining characters.</span></span> <span data-ttu-id="3e84a-158">代理项对可表示基字符或组合字符。</span><span class="sxs-lookup"><span data-stu-id="3e84a-158">A surrogate pair can represent a base character or a combining character.</span></span>  
  
 <span data-ttu-id="3e84a-159">此方法仅返回第一个文本元素。</span><span class="sxs-lookup"><span data-stu-id="3e84a-159">This method only returns the first text element.</span></span> <span data-ttu-id="3e84a-160">若要循环访问字符串的文本元素，应用程序应使用 <xref:System.Globalization.TextElementEnumerator> 方法生成的对象 <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3e84a-160">To iterate through the text elements of the string, the application should use the <xref:System.Globalization.TextElementEnumerator> object generated by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e84a-161"><paramref name="str" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e84a-161"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string * int -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="3e84a-162">要从中获取文本元素的字符串。</span><span class="sxs-lookup"><span data-stu-id="3e84a-162">The string from which to get the text element.</span></span></param>
        <param name="index"><span data-ttu-id="3e84a-163">文本元素开始位置的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="3e84a-163">The zero-based index at which the text element starts.</span></span></param>
        <summary><span data-ttu-id="3e84a-164">获取指定字符串中指定索引处的文本元素。</span><span class="sxs-lookup"><span data-stu-id="3e84a-164">Gets the text element at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="3e84a-165">包含指定字符串中指定索引处的文本元素的字符串。</span><span class="sxs-lookup"><span data-stu-id="3e84a-165">A string containing the text element at the specified index of the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks
 
<span data-ttu-id="3e84a-166">.NET 将文本元素定义为显示为单个字符（即字形）的文本单元。</span><span class="sxs-lookup"><span data-stu-id="3e84a-166">.NET defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="3e84a-167">文本元素可以是基字符、代理项对或组合字符序列。</span><span class="sxs-lookup"><span data-stu-id="3e84a-167">A text element can be a base character, a surrogate pair, or a combining character sequence.</span></span> <span data-ttu-id="3e84a-168">[Unicode 标准](https://go.microsoft.com/fwlink/?linkid=37123)将代理项对定义为单个抽象字符的编码字符表示形式，该字符由两个代码单元组成，其中，对的第一个单元为高代理项，第二个是低代理项。</span><span class="sxs-lookup"><span data-stu-id="3e84a-168">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</span></span> <span data-ttu-id="3e84a-169">Unicode 标准将组合字符序列定义为基字符和一个或多个组合字符的组合。</span><span class="sxs-lookup"><span data-stu-id="3e84a-169">The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters.</span></span> <span data-ttu-id="3e84a-170">代理项对可表示基字符或组合字符。</span><span class="sxs-lookup"><span data-stu-id="3e84a-170">A surrogate pair can represent a base character or a combining character.</span></span>  
  
 <span data-ttu-id="3e84a-171">此方法只返回从指定索引处开始的子字符串的第一个文本元素。</span><span class="sxs-lookup"><span data-stu-id="3e84a-171">This method only returns the first text element of the substring that starts at the specified index.</span></span> <span data-ttu-id="3e84a-172">若要循环访问字符串的文本元素，应用程序应使用 <xref:System.Globalization.TextElementEnumerator> 由方法生成的 <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3e84a-172">To iterate through the text elements of the string, the application should use the <xref:System.Globalization.TextElementEnumerator> generated by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e84a-173"><paramref name="str" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e84a-173"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e84a-174"><paramref name="index" /> 超出了 <paramref name="str" /> 的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="3e84a-174"><paramref name="index" /> is outside the range of valid indexes for <paramref name="str" />.</span></span></exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextElementEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e84a-175">返回一个循环访问字符串的文本元素的枚举器。</span><span class="sxs-lookup"><span data-stu-id="3e84a-175">Returns an enumerator that iterates through the text elements of a string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="3e84a-176">要循环访问的字符串。</span><span class="sxs-lookup"><span data-stu-id="3e84a-176">The string to iterate through.</span></span></param>
        <summary><span data-ttu-id="3e84a-177">返回一个循环访问整个字符串的文本元素的枚举数。</span><span class="sxs-lookup"><span data-stu-id="3e84a-177">Returns an enumerator that iterates through the text elements of the entire string.</span></span></summary>
        <returns><span data-ttu-id="3e84a-178">整个字符串的 <see cref="T:System.Globalization.TextElementEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="3e84a-178">A <see cref="T:System.Globalization.TextElementEnumerator" /> for the entire string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e84a-179">.NET 将文本元素定义为显示为单个字符（即字形）的文本单元。</span><span class="sxs-lookup"><span data-stu-id="3e84a-179">.NET defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="3e84a-180">文本元素可以是基字符、代理项对或组合字符序列。</span><span class="sxs-lookup"><span data-stu-id="3e84a-180">A text element can be a base character, a surrogate pair, or a combining character sequence.</span></span> <span data-ttu-id="3e84a-181">[Unicode 标准](https://go.microsoft.com/fwlink/?linkid=37123)将代理项对定义为单个抽象字符的编码字符表示形式，该字符由两个代码单元组成，其中，对的第一个单元为高代理项，第二个是低代理项。</span><span class="sxs-lookup"><span data-stu-id="3e84a-181">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</span></span> <span data-ttu-id="3e84a-182">Unicode 标准将组合字符序列定义为基字符和一个或多个组合字符的组合。</span><span class="sxs-lookup"><span data-stu-id="3e84a-182">The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters.</span></span> <span data-ttu-id="3e84a-183">代理项对可表示基字符或组合字符。</span><span class="sxs-lookup"><span data-stu-id="3e84a-183">A surrogate pair can represent a base character or a combining character.</span></span>  
  
 <span data-ttu-id="3e84a-184">文本元素枚举器仅用于读取字符串中的数据;它不能修改基础字符串。</span><span class="sxs-lookup"><span data-stu-id="3e84a-184">The text element enumerator is used only to read data in the string; it cannot modify the underlying string.</span></span> <span data-ttu-id="3e84a-185">枚举器没有对字符串的独占访问权限。</span><span class="sxs-lookup"><span data-stu-id="3e84a-185">The enumerator does not have exclusive access to the string.</span></span>  
  
 <span data-ttu-id="3e84a-186">如果枚举器位于字符串中第一个文本元素之前或字符串中的最后一个文本元素之后，则该枚举器处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="3e84a-186">The enumerator is in an invalid state if it is positioned before the first text element in the string or after the last text element in the string.</span></span> <span data-ttu-id="3e84a-187">如果枚举器处于无效状态，则调用会 <xref:System.Globalization.TextElementEnumerator.Current%2A> 引发异常。</span><span class="sxs-lookup"><span data-stu-id="3e84a-187">When the enumerator is in an invalid state, calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception.</span></span>  
  
 <span data-ttu-id="3e84a-188">最初，枚举器位于字符串中第一个文本元素之前。</span><span class="sxs-lookup"><span data-stu-id="3e84a-188">Initially, the enumerator is positioned before the first text element in the string.</span></span> <span data-ttu-id="3e84a-189"><xref:System.Globalization.TextElementEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="3e84a-189"><xref:System.Globalization.TextElementEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="3e84a-190">因此，在创建枚举器或调用之后 <xref:System.Globalization.TextElementEnumerator.Reset%2A> ， <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 必须先调用，以将枚举数前移到字符串的第一个文本元素，然后才能读取的值 <xref:System.Globalization.TextElementEnumerator.Current%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3e84a-190">Therefore, after an enumerator is created or after <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of <xref:System.Globalization.TextElementEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="3e84a-191">在调用 <xref:System.Globalization.TextElementEnumerator.Current%2A> 或 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 之前，<xref:System.Globalization.TextElementEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="3e84a-191"><xref:System.Globalization.TextElementEnumerator.Current%2A> returns the same object until either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="3e84a-192">传递字符串末尾后，枚举器将再次处于无效状态并调用 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="3e84a-192">After the end of the string is passed, the enumerator is again in an invalid state and calling <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="3e84a-193"><xref:System.Globalization.TextElementEnumerator.Current%2A>如果最后一次调用返回，则调用会引发异常 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> `false` 。</span><span class="sxs-lookup"><span data-stu-id="3e84a-193">Calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception if the last call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returned `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e84a-194">下面的示例演示如何调用 <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e84a-194">The following example demonstrates calling the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method.</span></span> <span data-ttu-id="3e84a-195">此示例是为类提供的更大示例的一部分 <xref:System.Globalization.StringInfo> 。</span><span class="sxs-lookup"><span data-stu-id="3e84a-195">This example is part of a larger example provided for the <xref:System.Globalization.StringInfo> class.</span></span>  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e84a-196"><paramref name="str" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e84a-196"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String, index As Integer) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string * int -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="3e84a-197">要循环访问的字符串。</span><span class="sxs-lookup"><span data-stu-id="3e84a-197">The string to iterate through.</span></span></param>
        <param name="index"><span data-ttu-id="3e84a-198">开始迭代处的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="3e84a-198">The zero-based index at which to start iterating.</span></span></param>
        <summary><span data-ttu-id="3e84a-199">返回一个枚举数，它循环访问字符串的文本元素并从指定索引处开始。</span><span class="sxs-lookup"><span data-stu-id="3e84a-199">Returns an enumerator that iterates through the text elements of the string, starting at the specified index.</span></span></summary>
        <returns><span data-ttu-id="3e84a-200">在 <paramref name="index" /> 处开始的字符串的 <see cref="T:System.Globalization.TextElementEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="3e84a-200">A <see cref="T:System.Globalization.TextElementEnumerator" /> for the string starting at <paramref name="index" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e84a-201">.NET 将文本元素定义为显示为单个字符（即字形）的文本单元。</span><span class="sxs-lookup"><span data-stu-id="3e84a-201">.NET defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="3e84a-202">文本元素可以是基字符、代理项对或组合字符序列。</span><span class="sxs-lookup"><span data-stu-id="3e84a-202">A text element can be a base character, a surrogate pair, or a combining character sequence.</span></span> <span data-ttu-id="3e84a-203">[Unicode 标准](https://go.microsoft.com/fwlink/?linkid=37123)将代理项对定义为单个抽象字符的编码字符表示形式，该字符由两个代码单元组成，其中，对的第一个单元为高代理项，第二个是低代理项。</span><span class="sxs-lookup"><span data-stu-id="3e84a-203">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</span></span> <span data-ttu-id="3e84a-204">Unicode 标准将组合字符序列定义为基字符和一个或多个组合字符的组合。</span><span class="sxs-lookup"><span data-stu-id="3e84a-204">The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters.</span></span> <span data-ttu-id="3e84a-205">代理项对可表示基字符或组合字符。</span><span class="sxs-lookup"><span data-stu-id="3e84a-205">A surrogate pair can represent a base character or a combining character.</span></span>  
  
 <span data-ttu-id="3e84a-206">文本元素枚举器仅用于读取字符串中的数据;它不能修改基础字符串。</span><span class="sxs-lookup"><span data-stu-id="3e84a-206">The text element enumerator is used only to read data in the string; it cannot modify the underlying string.</span></span> <span data-ttu-id="3e84a-207">枚举器没有对字符串的独占访问权限。</span><span class="sxs-lookup"><span data-stu-id="3e84a-207">The enumerator does not have exclusive access to the string.</span></span>  
  
 <span data-ttu-id="3e84a-208">如果枚举器位于字符串中第一个文本元素之前或字符串中的最后一个文本元素之后，则该枚举器处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="3e84a-208">The enumerator is in an invalid state if it is positioned before the first text element in the string or after the last text element in the string.</span></span> <span data-ttu-id="3e84a-209">如果枚举器处于无效状态，则调用会 <xref:System.Globalization.TextElementEnumerator.Current%2A> 引发异常。</span><span class="sxs-lookup"><span data-stu-id="3e84a-209">When the enumerator is in an invalid state, calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception.</span></span>  
  
 <span data-ttu-id="3e84a-210">最初，枚举器位于字符串中第一个文本元素之前。</span><span class="sxs-lookup"><span data-stu-id="3e84a-210">Initially, the enumerator is positioned before the first text element in the string.</span></span> <span data-ttu-id="3e84a-211"><xref:System.Globalization.TextElementEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="3e84a-211"><xref:System.Globalization.TextElementEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="3e84a-212">因此，在创建枚举器或调用之后 <xref:System.Globalization.TextElementEnumerator.Reset%2A> ， <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 必须先调用，以将枚举数前移到字符串的第一个文本元素，然后才能读取的值 <xref:System.Globalization.TextElementEnumerator.Current%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3e84a-212">Therefore, after an enumerator is created or after <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of <xref:System.Globalization.TextElementEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="3e84a-213">在调用 <xref:System.Globalization.TextElementEnumerator.Current%2A> 或 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 之前，<xref:System.Globalization.TextElementEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="3e84a-213"><xref:System.Globalization.TextElementEnumerator.Current%2A> returns the same object until either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="3e84a-214">传递字符串末尾后，枚举器将再次处于无效状态并调用 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="3e84a-214">After the end of the string is passed, the enumerator is again in an invalid state and calling <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="3e84a-215"><xref:System.Globalization.TextElementEnumerator.Current%2A>如果最后一次调用返回，则调用会引发异常 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> `false` 。</span><span class="sxs-lookup"><span data-stu-id="3e84a-215">Calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception if the last call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returned `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e84a-216"><paramref name="str" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e84a-216"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e84a-217"><paramref name="index" /> 超出了 <paramref name="str" /> 的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="3e84a-217"><paramref name="index" /> is outside the range of valid indexes for <paramref name="str" />.</span></span></exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="LengthInTextElements">
      <MemberSignature Language="C#" Value="public int LengthInTextElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LengthInTextElements" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.LengthInTextElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LengthInTextElements As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LengthInTextElements { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LengthInTextElements : int" Usage="System.Globalization.StringInfo.LengthInTextElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e84a-218">获取当前 <see cref="T:System.Globalization.StringInfo" /> 对象中的文本元素数量。</span><span class="sxs-lookup"><span data-stu-id="3e84a-218">Gets the number of text elements in the current <see cref="T:System.Globalization.StringInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="3e84a-219">此 <see cref="T:System.Globalization.StringInfo" /> 对象中基本字符、代理项对和组合字符序列的数量。</span><span class="sxs-lookup"><span data-stu-id="3e84a-219">The number of base characters, surrogate pairs, and combining character sequences in this <see cref="T:System.Globalization.StringInfo" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseCombiningCharacters">
      <MemberSignature Language="C#" Value="public static int[] ParseCombiningCharacters (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] ParseCombiningCharacters(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseCombiningCharacters (str As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ ParseCombiningCharacters(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member ParseCombiningCharacters : string -&gt; int[]" Usage="System.Globalization.StringInfo.ParseCombiningCharacters str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="3e84a-220">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="3e84a-220">The string to search.</span></span></param>
        <summary><span data-ttu-id="3e84a-221">返回指定字符串中每个基字符、高代理项或控制字符的索引。</span><span class="sxs-lookup"><span data-stu-id="3e84a-221">Returns the indexes of each base character, high surrogate, or control character within the specified string.</span></span></summary>
        <returns><span data-ttu-id="3e84a-222">一个整数数组，它包含指定字符串中每个基字符、高代理项或控制字符的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="3e84a-222">An array of integers that contains the zero-based indexes of each base character, high surrogate, or control character within the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e84a-223">[Unicode 标准](https://go.microsoft.com/fwlink/?linkid=37123)将代理项对定义为单个抽象字符的编码字符表示形式，该字符由两个代码单元组成，其中，对的第一个单元为高代理项，第二个是低代理项。</span><span class="sxs-lookup"><span data-stu-id="3e84a-223">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</span></span> <span data-ttu-id="3e84a-224">高代理项是 U + D800 到 U + DBFF 范围内的 Unicode 码位，低代理项是 U + DC00 到 U + DFFF 范围内的 Unicode 码位。</span><span class="sxs-lookup"><span data-stu-id="3e84a-224">A high surrogate is a Unicode code point in the range U+D800 through U+DBFF and a low surrogate is a Unicode code point in the range U+DC00 through U+DFFF.</span></span>  
  
 <span data-ttu-id="3e84a-225">控制字符是 Unicode 值为 U + 007F 或在 U + 0000 到 U + 001F 或 U + 0080 到 U + 009F 范围内的字符。</span><span class="sxs-lookup"><span data-stu-id="3e84a-225">A control character is a character for which the Unicode value is U+007F or in the range U+0000 through U+001F or U+0080 through U+009F.</span></span>  
  
 <span data-ttu-id="3e84a-226">.NET 将文本元素定义为显示为单个字符（即字形）的文本单元。</span><span class="sxs-lookup"><span data-stu-id="3e84a-226">.NET defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="3e84a-227">文本元素可以是基字符、代理项对或组合字符序列。</span><span class="sxs-lookup"><span data-stu-id="3e84a-227">A text element can be a base character, a surrogate pair, or a combining character sequence.</span></span> <span data-ttu-id="3e84a-228">[Unicode 标准](https://go.microsoft.com/fwlink/?linkid=37123)将组合字符序列定义为基字符和一个或多个组合字符的组合。</span><span class="sxs-lookup"><span data-stu-id="3e84a-228">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines a combining character sequence as a combination of a base character and one or more combining characters.</span></span> <span data-ttu-id="3e84a-229">代理项对可表示基字符或组合字符。</span><span class="sxs-lookup"><span data-stu-id="3e84a-229">A surrogate pair can represent a base character or a combining character.</span></span>  
  
 <span data-ttu-id="3e84a-230">如果组合字符序列无效，还将返回该序列中的每个组合字符。</span><span class="sxs-lookup"><span data-stu-id="3e84a-230">If a combining character sequence is invalid, every combining character in that sequence is also returned.</span></span>  
  
 <span data-ttu-id="3e84a-231">生成的数组中的每个索引都是文本元素的开头，即基字符或高代理项的索引。</span><span class="sxs-lookup"><span data-stu-id="3e84a-231">Each index in the resulting array is the beginning of a text element, that is, the index of the base character or the high surrogate.</span></span>  
  
 <span data-ttu-id="3e84a-232">每个元素的长度很容易计算为连续索引之间的差异。</span><span class="sxs-lookup"><span data-stu-id="3e84a-232">The length of each element is easily computed as the difference between successive indexes.</span></span> <span data-ttu-id="3e84a-233">数组的长度将始终小于或等于字符串的长度。</span><span class="sxs-lookup"><span data-stu-id="3e84a-233">The length of the array will always be less than or equal to the length of the string.</span></span> <span data-ttu-id="3e84a-234">例如，假设字符串为 "\u4f00\u302a\ud800\udc00\u4f01"，则此方法返回索引0、2和4。</span><span class="sxs-lookup"><span data-stu-id="3e84a-234">For example, given the string "\u4f00\u302a\ud800\udc00\u4f01", this method returns the indexes 0, 2, and 4.</span></span>  
  
## <a name="equivalent-members"></a><span data-ttu-id="3e84a-235">等效成员</span><span class="sxs-lookup"><span data-stu-id="3e84a-235">Equivalent Members</span></span>  
 <span data-ttu-id="3e84a-236">从 .NET Framework 的2.0 版开始， <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> 方法和 <xref:System.Globalization.StringInfo.LengthInTextElements%2A> 属性提供了方法提供的功能的易用实现 <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> 。</span><span class="sxs-lookup"><span data-stu-id="3e84a-236">Starting in version 2.0 of the .NET Framework, the <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method and <xref:System.Globalization.StringInfo.LengthInTextElements%2A> property provide an easy to use implementation of the functionality offered by the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3e84a-237">下面的示例演示如何调用 <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e84a-237">The following example demonstrates calling the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method.</span></span> <span data-ttu-id="3e84a-238">此代码示例是为类提供的更大示例的一部分 <xref:System.Globalization.StringInfo> 。</span><span class="sxs-lookup"><span data-stu-id="3e84a-238">This code example is part of a larger example provided for the <xref:System.Globalization.StringInfo> class.</span></span>  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e84a-239"><paramref name="str" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e84a-239"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.Globalization.StringInfo.SubstringByTextElements" />
        <altmember cref="P:System.Globalization.StringInfo.LengthInTextElements" />
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="public string String { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string String" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.String" />
      <MemberSignature Language="VB.NET" Value="Public Property String As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ String { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.String : string with get, set" Usage="System.Globalization.StringInfo.String" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e84a-240">获取或设置当前 <see cref="T:System.Globalization.StringInfo" /> 对象的值。</span><span class="sxs-lookup"><span data-stu-id="3e84a-240">Gets or sets the value of the current <see cref="T:System.Globalization.StringInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="3e84a-241">作为当前 <see cref="T:System.Globalization.StringInfo" /> 对象的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="3e84a-241">The string that is the value of the current <see cref="T:System.Globalization.StringInfo" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e84a-242">在 <xref:System.Globalization.StringInfo> 实例化对象时，其 <xref:System.Globalization.StringInfo.String%2A> 属性设置为以下值之一：</span><span class="sxs-lookup"><span data-stu-id="3e84a-242">When a <xref:System.Globalization.StringInfo> object is instantiated, its <xref:System.Globalization.StringInfo.String%2A> property is set to one of the following values:</span></span>  
  
-   <span data-ttu-id="3e84a-243"><xref:System.String.Empty?displayProperty=nameWithType> 如果调用了默认值  <xref:System.Globalization.StringInfo.%23ctor> ，则为。</span><span class="sxs-lookup"><span data-stu-id="3e84a-243"><xref:System.String.Empty?displayProperty=nameWithType> if the default  <xref:System.Globalization.StringInfo.%23ctor> is called.</span></span> <span data-ttu-id="3e84a-244">然后，应使用 <xref:System.Globalization.StringInfo.String%2A> 属性来分配此对象 rperesents 的字符串 <xref:System.Globalization.StringInfo> 。</span><span class="sxs-lookup"><span data-stu-id="3e84a-244">You should then use the <xref:System.Globalization.StringInfo.String%2A> property to assign the string that this <xref:System.Globalization.StringInfo> object rperesents.</span></span>  
  
-   <span data-ttu-id="3e84a-245">作为 `value` 参数提供给构造函数的字符串 <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> 。</span><span class="sxs-lookup"><span data-stu-id="3e84a-245">The string supplied as the `value` argument to the <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e84a-246">设置操作中的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e84a-246">The value in a set operation is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubstringByTextElements">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e84a-247">从当前 <see cref="T:System.Globalization.StringInfo" /> 对象中检索文本元素的子字符串。</span><span class="sxs-lookup"><span data-stu-id="3e84a-247">Retrieves a substring of text elements from the current <see cref="T:System.Globalization.StringInfo" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int -&gt; string" Usage="stringInfo.SubstringByTextElements startingTextElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="startingTextElement"><span data-ttu-id="3e84a-248">此 <see cref="T:System.Globalization.StringInfo" /> 对象中文本元素的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="3e84a-248">The zero-based index of a text element in this <see cref="T:System.Globalization.StringInfo" /> object.</span></span></param>
        <summary><span data-ttu-id="3e84a-249">从当前的 <see cref="T:System.Globalization.StringInfo" /> 对象检索文本元素的子字符串（从指定的文本元素开始，一直到最后一个文本元素）。</span><span class="sxs-lookup"><span data-stu-id="3e84a-249">Retrieves a substring of text elements from the current <see cref="T:System.Globalization.StringInfo" /> object starting from a specified text element and continuing through the last text element.</span></span></summary>
        <returns><span data-ttu-id="3e84a-250">此 <see cref="T:System.Globalization.StringInfo" /> 对象中的文本元素的子字符串（从 <paramref name="startingTextElement" /> 参数指定的文本元素索引开始，一直到此对象中的最后一个文本元素）。</span><span class="sxs-lookup"><span data-stu-id="3e84a-250">A substring of text elements in this <see cref="T:System.Globalization.StringInfo" /> object, starting from the text element index specified by the <paramref name="startingTextElement" /> parameter and continuing through the last text element in this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e84a-251">请考虑一个由五个文本元素组成的字符串，索引从0到4。</span><span class="sxs-lookup"><span data-stu-id="3e84a-251">Consider a string that consists of five text elements, indexed from 0 through 4.</span></span> <span data-ttu-id="3e84a-252">如果 `startingTextElement` 参数为1，则该  <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> 方法将返回一个子字符串，其中包含索引为1、2、3和4的文本元素。</span><span class="sxs-lookup"><span data-stu-id="3e84a-252">If the `startingTextElement` parameter is 1, the  <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method returns a substring that consists of the text elements for which the indexes are 1, 2, 3, and 4.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e84a-253"><paramref name="startingTextElement" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="3e84a-253"><paramref name="startingTextElement" /> is less than zero.</span></span>  
  
<span data-ttu-id="3e84a-254">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3e84a-254">-or-</span></span> 
<span data-ttu-id="3e84a-255">当前 <see cref="T:System.Globalization.StringInfo" /> 对象的值字符串是空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="3e84a-255">The string that is the value of the current <see cref="T:System.Globalization.StringInfo" /> object is the empty string ("").</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement, int32 lengthInTextElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer, lengthInTextElements As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int * int -&gt; string" Usage="stringInfo.SubstringByTextElements (startingTextElement, lengthInTextElements)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="lengthInTextElements" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="startingTextElement"><span data-ttu-id="3e84a-256">此 <see cref="T:System.Globalization.StringInfo" /> 对象中文本元素的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="3e84a-256">The zero-based index of a text element in this <see cref="T:System.Globalization.StringInfo" /> object.</span></span></param>
        <param name="lengthInTextElements"><span data-ttu-id="3e84a-257">要检索的文本元素的数目。</span><span class="sxs-lookup"><span data-stu-id="3e84a-257">The number of text elements to retrieve.</span></span></param>
        <summary><span data-ttu-id="3e84a-258">从当前的 <see cref="T:System.Globalization.StringInfo" /> 对象中检索文本元素的子字符串（从指定文本元素开始，一直到指定数目的文本元素）。</span><span class="sxs-lookup"><span data-stu-id="3e84a-258">Retrieves a substring of text elements from the current <see cref="T:System.Globalization.StringInfo" /> object starting from a specified text element and continuing through the specified number of text elements.</span></span></summary>
        <returns><span data-ttu-id="3e84a-259">此 <see cref="T:System.Globalization.StringInfo" /> 对象中的文本元素的子字符串。</span><span class="sxs-lookup"><span data-stu-id="3e84a-259">A substring of text elements in this <see cref="T:System.Globalization.StringInfo" /> object.</span></span> <span data-ttu-id="3e84a-260">子字符串包含由 <paramref name="lengthInTextElements" /> 参数指定的文本元素数量，并从 <paramref name="startingTextElement" /> 参数指定的文本元素索引开始。</span><span class="sxs-lookup"><span data-stu-id="3e84a-260">The substring consists of the number of text elements specified by the <paramref name="lengthInTextElements" /> parameter and starts from the text element index specified by the <paramref name="startingTextElement" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3e84a-261">请考虑一个由五个文本元素组成的字符串，索引从0到4。</span><span class="sxs-lookup"><span data-stu-id="3e84a-261">Consider a string that consists of five text elements, indexed from 0 through 4.</span></span> <span data-ttu-id="3e84a-262">如果 `startingTextElement` 参数为1，并且 `lengthInTextElements` 参数为3，则该 <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> 方法将返回一个子字符串，其中包含索引为1、2和3的文本元素。</span><span class="sxs-lookup"><span data-stu-id="3e84a-262">If the `startingTextElement` parameter is 1 and the `lengthInTextElements` parameter is 3, the <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method returns a substring that consists of the text elements for which the indexes are 1, 2, and 3.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e84a-263"><paramref name="startingTextElement" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="3e84a-263"><paramref name="startingTextElement" /> is less than zero.</span></span>  
  
<span data-ttu-id="3e84a-264">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3e84a-264">-or-</span></span> 
 <span data-ttu-id="3e84a-265"><paramref name="startingTextElement" /> 大于或等于当前 <see cref="T:System.Globalization.StringInfo" /> 对象的值字符串的长度。</span><span class="sxs-lookup"><span data-stu-id="3e84a-265"><paramref name="startingTextElement" /> is greater than or equal to the length of the string that is the value of the current <see cref="T:System.Globalization.StringInfo" /> object.</span></span>  
  
<span data-ttu-id="3e84a-266">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3e84a-266">-or-</span></span> 
 <span data-ttu-id="3e84a-267"><paramref name="lengthInTextElements" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="3e84a-267"><paramref name="lengthInTextElements" /> is less than zero.</span></span>  
  
<span data-ttu-id="3e84a-268">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3e84a-268">-or-</span></span> 
<span data-ttu-id="3e84a-269">当前 <see cref="T:System.Globalization.StringInfo" /> 对象的值字符串是空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="3e84a-269">The string that is the value of the current <see cref="T:System.Globalization.StringInfo" /> object is the empty string ("").</span></span>  
  
<span data-ttu-id="3e84a-270">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3e84a-270">-or-</span></span> 
 <span data-ttu-id="3e84a-271"><paramref name="startingTextElement" /> + <paramref name="lengthInTextElements" /> 指定大于此 <see cref="T:System.Globalization.StringInfo" /> 对象中的文本元素数目的索引。</span><span class="sxs-lookup"><span data-stu-id="3e84a-271"><paramref name="startingTextElement" /> + <paramref name="lengthInTextElements" /> specify an index that is greater than the number of text elements in this <see cref="T:System.Globalization.StringInfo" /> object.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
