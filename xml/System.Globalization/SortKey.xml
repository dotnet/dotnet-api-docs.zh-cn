<Type Name="SortKey" FullName="System.Globalization.SortKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d8ecc26f794906ee558fb4dfdfec1d3f34eeab9a" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89727416" /></Metadata><TypeSignature Language="C#" Value="public sealed class SortKey" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SortKey extends System.Object" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.SortKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SortKey" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortKey sealed" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="F#" Value="type SortKey = class" />
  <TypeSignature Language="C#" Value="public class SortKey" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SortKey extends System.Object" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public Class SortKey" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortKey" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SortKey extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit SortKey extends System.Object" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="95317-101">表示将字符串映射到其排序关键字的映射结果。</span><span class="sxs-lookup"><span data-stu-id="95317-101">Represents the result of mapping a string to its sort key.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95317-102">两个字符串的区分区域性的比较依赖于字符串中具有多个排序权重类别的字符串，包括脚本、字母、大小写和音调符号权重。</span><span class="sxs-lookup"><span data-stu-id="95317-102">A culture-sensitive comparison of two strings depends on each character in the strings having several categories of sort weights, including script, alphabetic, case, and diacritic weights.</span></span> <span data-ttu-id="95317-103">排序关键字充当特定字符串的这些权重的存储库。</span><span class="sxs-lookup"><span data-stu-id="95317-103">A sort key serves as the repository of these weights for a particular string.</span></span>  
  
 <span data-ttu-id="95317-104"><xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=nameWithType> 方法返回 <xref:System.Globalization.SortKey> 类的实例，它反映指定字符串中字符的区分区域性的映射。</span><span class="sxs-lookup"><span data-stu-id="95317-104">The <xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=nameWithType> method returns an instance of the <xref:System.Globalization.SortKey> class that reflects the culture-sensitive mapping of characters in a specified string.</span></span> <span data-ttu-id="95317-105">对象的值 <xref:System.Globalization.SortKey> 是它的关键数据，由 <xref:System.Globalization.SortKey.KeyData%2A> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="95317-105">The value of a <xref:System.Globalization.SortKey> object is its key data, which is returned by the <xref:System.Globalization.SortKey.KeyData%2A> property.</span></span> <span data-ttu-id="95317-106">此密钥数据包含一系列字节，用于对字符串、特定于区域性的排序规则和用户指定的比较选项进行编码。</span><span class="sxs-lookup"><span data-stu-id="95317-106">This key data consists of a series of bytes that encode the string, culture-specific sorting rules, and user-specified comparison options.</span></span> <span data-ttu-id="95317-107">使用排序关键字的比较包含每个排序键中相应键数据的按位比较。</span><span class="sxs-lookup"><span data-stu-id="95317-107">A comparison using sort keys consists of a bitwise comparison of the corresponding key data in each sort key.</span></span>  <span data-ttu-id="95317-108">例如，如果您通过调用带 <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29> 的值的 <xref:System.Globalization.CompareOptions.IgnoreCase?displayProperty=nameWithType> 方法来创建一个排序键，则使用该排序键的字符串比较运算不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="95317-108">For example, if you create a sort key by calling the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29> method with a value of <xref:System.Globalization.CompareOptions.IgnoreCase?displayProperty=nameWithType>, a string comparison operation that uses the sort key is case-insensitive.</span></span>  
  
 <span data-ttu-id="95317-109">在创建字符串的排序键之后，可通过调用静态 <xref:System.Globalization.SortKey.Compare%2A?displayProperty=nameWithType> 方法比较排序键。</span><span class="sxs-lookup"><span data-stu-id="95317-109">After you create a sort key for a string, you compare sort keys by calling the static <xref:System.Globalization.SortKey.Compare%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="95317-110">此方法执行简单的逐字节比较，因此它比 <xref:System.String.Compare%2A?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> 方法的速度快得多。</span><span class="sxs-lookup"><span data-stu-id="95317-110">This method performs a simple byte-by-byte comparison, so it is much faster than the <xref:System.String.Compare%2A?displayProperty=nameWithType> or <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> method.</span></span>  

> [!NOTE]
> <span data-ttu-id="95317-111">您可以下载 [排序权重表](https://www.microsoft.com/download/details.aspx?id=10921)，这是一组文本文件，其中包含有关在 Windows 操作系统的排序和比较操作中使用的字符权重、默认的 [Unicode 排序规则元素表](https://www.unicode.org/Public/UCA/latest/allkeys.txt)、适用于 Linux 和 macOS 的排序权重表的信息。</span><span class="sxs-lookup"><span data-stu-id="95317-111">You can download the [Sorting Weight Tables](https://www.microsoft.com/download/details.aspx?id=10921), a set of text files that contain information on the character weights used in sorting and comparison operations for Windows operating systems, the [Default Unicode Collation Element Table](https://www.unicode.org/Public/UCA/latest/allkeys.txt), the sort weight table for Linux and macOS.</span></span>

## <a name="performance-considerations"></a><span data-ttu-id="95317-112">性能注意事项</span><span class="sxs-lookup"><span data-stu-id="95317-112">Performance considerations</span></span>  
 <span data-ttu-id="95317-113">执行字符串比较时，<xref:System.Globalization.SortKey.Compare%2A> 和 <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> 方法生成相同的结果，但它们面向不同的方案。</span><span class="sxs-lookup"><span data-stu-id="95317-113">When performing a string comparison, the <xref:System.Globalization.SortKey.Compare%2A> and <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> methods yield the same results, but they target different scenarios.</span></span>  
  
 <span data-ttu-id="95317-114">在高级别上，该 <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> 方法为每个字符串生成排序键，执行比较，然后丢弃排序键并返回比较的结果。</span><span class="sxs-lookup"><span data-stu-id="95317-114">At a high level, the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> method generates the sort key for each string, performs the comparison, and then discards the sort key and returns the result of the comparison.</span></span> <span data-ttu-id="95317-115">但是，此 <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> 方法实际上不会生成整个排序键来执行比较。</span><span class="sxs-lookup"><span data-stu-id="95317-115">However, the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> method actually doesn't generate an entire sort key to perform the comparison.</span></span> <span data-ttu-id="95317-116">相反，此方法将为每个字符串中的每个文本元素（即，基字符、代理项对或组合字符序列）生成关键数据。</span><span class="sxs-lookup"><span data-stu-id="95317-116">Instead, the method generates the key data for each text element (that is, base character, surrogate pair, or combining character sequence) in each string.</span></span> <span data-ttu-id="95317-117">然后，方法会比较相应文本元素的键数据。</span><span class="sxs-lookup"><span data-stu-id="95317-117">The method then compares the key data for the corresponding text elements.</span></span> <span data-ttu-id="95317-118">一旦确定了比较的最终结果，操作就会终止。</span><span class="sxs-lookup"><span data-stu-id="95317-118">The operation terminates as soon as the ultimate result of the comparison is determined.</span></span> <span data-ttu-id="95317-119">计算排序键信息，但不 <xref:System.Globalization.SortKey> 创建任何对象。</span><span class="sxs-lookup"><span data-stu-id="95317-119">Sort key information is computed, but no <xref:System.Globalization.SortKey> object is created.</span></span> <span data-ttu-id="95317-120">如果两个字符串比较一次，则此策略在性能方面是经济实惠的，但如果将相同的字符串比较过多次，则此策略会耗费大量时间。</span><span class="sxs-lookup"><span data-stu-id="95317-120">This strategy is economical in terms of performance if both strings are compared once, but becomes expensive if the same strings are compared many times.</span></span>  
  
 <span data-ttu-id="95317-121"><xref:System.Globalization.SortKey.Compare%2A>方法要求在 <xref:System.Globalization.SortKey> 执行比较之前为每个字符串生成对象。</span><span class="sxs-lookup"><span data-stu-id="95317-121">The <xref:System.Globalization.SortKey.Compare%2A> method requires generation of a <xref:System.Globalization.SortKey> object for each string before performing the comparison.</span></span> <span data-ttu-id="95317-122">此策略在第一次比较的性能方面开销高昂，因为需要为生成对象而投入时间和内存 <xref:System.Globalization.SortKey> 。</span><span class="sxs-lookup"><span data-stu-id="95317-122">This strategy is expensive in terms of performance for the first comparison because of the time and memory invested to generate the <xref:System.Globalization.SortKey> objects.</span></span> <span data-ttu-id="95317-123">但是，如果将相同的排序键与多次进行比较，则会变得很经济。</span><span class="sxs-lookup"><span data-stu-id="95317-123">However, it becomes economical if the same sort keys are compared many times.</span></span>  
  
 <span data-ttu-id="95317-124">例如，假设您编写一个应用程序，该应用程序在数据库表中搜索与指定的搜索字符串匹配的基于字符串的索引列所在的行。</span><span class="sxs-lookup"><span data-stu-id="95317-124">For example, suppose you write an application that searches a database table for the row in which the string-based index column matches a specified search string.</span></span> <span data-ttu-id="95317-125">该表包含数以千计的行，并且将搜索字符串与每行中的索引进行比较需要很长时间。</span><span class="sxs-lookup"><span data-stu-id="95317-125">The table contains thousands of rows, and comparing the search string to the index in each row will take a long time.</span></span> <span data-ttu-id="95317-126">因此，当应用程序存储行及其索引列时，它还会生成并存储列中索引的排序关键字，以提高搜索性能。</span><span class="sxs-lookup"><span data-stu-id="95317-126">Therefore, when the application stores a row and its index column, it also generates and stores the sort key for the index in a column dedicated to improving search performance.</span></span> <span data-ttu-id="95317-127">当应用程序搜索目标行时，它会将搜索字符串的排序关键字与索引字符串的排序键进行比较，而不是将搜索字符串与索引字符串进行比较。</span><span class="sxs-lookup"><span data-stu-id="95317-127">When the application searches for a target row, it compares the sort key for the search string to the sort key for the index string, instead of comparing the search string to the index string.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="95317-128">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="95317-128">Security considerations</span></span>  
 <span data-ttu-id="95317-129"><xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType>方法返回一个 <xref:System.Globalization.SortKey> 对象，该对象的值基于指定的字符串和 <xref:System.Globalization.CompareOptions> 值，以及与基础对象关联的区域性 <xref:System.Globalization.CompareInfo> 。</span><span class="sxs-lookup"><span data-stu-id="95317-129">The <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method returns a <xref:System.Globalization.SortKey> object with the value based on a specified string and <xref:System.Globalization.CompareOptions> value, and the culture associated with the underlying <xref:System.Globalization.CompareInfo> object.</span></span> <span data-ttu-id="95317-130">如果安全决策取决于字符串比较或大小写更改，则您应使用固定区域性的 <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> 方法来确保操作行为的一致性，无论操作系统的区域性设置如何。</span><span class="sxs-lookup"><span data-stu-id="95317-130">If a security decision depends on a string comparison or case change, you should use the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method of the invariant culture to ensure that the behavior of the operation is consistent, regardless of the culture settings of the operating system.</span></span>  
  
 <span data-ttu-id="95317-131">使用以下步骤获取排序键：</span><span class="sxs-lookup"><span data-stu-id="95317-131">Use the following steps to obtain a sort key:</span></span>  
  
1.  <span data-ttu-id="95317-132">从 <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType> 属性中检索固定区域性。</span><span class="sxs-lookup"><span data-stu-id="95317-132">Retrieve the invariant culture from the <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType> property.</span></span>  
  
2.  <span data-ttu-id="95317-133">从 <xref:System.Globalization.CompareInfo> 属性中检索固定区域性的 <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> 对象。</span><span class="sxs-lookup"><span data-stu-id="95317-133">Retrieve a <xref:System.Globalization.CompareInfo> object for the invariant culture from the <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="95317-134">调用 <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="95317-134">Call the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="95317-135">使用 <xref:System.Globalization.SortKey> 对象的值等效于调用带指定的 LCMAP_SORTKEY 值的 Windows `LCMapString` 方法。</span><span class="sxs-lookup"><span data-stu-id="95317-135">Working with the value of a <xref:System.Globalization.SortKey> object is equivalent to calling the Windows `LCMapString` method with the LCMAP_SORTKEY value specified.</span></span> <span data-ttu-id="95317-136">但是，对于 <xref:System.Globalization.SortKey> 对象，英语字符的排序关键字位于朝鲜语字符的排序关键字之前。</span><span class="sxs-lookup"><span data-stu-id="95317-136">However, for the <xref:System.Globalization.SortKey> object, the sort keys for English characters precede the sort keys for Korean characters.</span></span>  
  
 <span data-ttu-id="95317-137"><xref:System.Globalization.SortKey> 对象可以进行序列化，但只能使它们能跨 <xref:System.AppDomain> 对象。</span><span class="sxs-lookup"><span data-stu-id="95317-137"><xref:System.Globalization.SortKey> objects can be serialized, but only so that they can cross <xref:System.AppDomain> objects.</span></span> <span data-ttu-id="95317-138">如果应用程序对 <xref:System.Globalization.SortKey> 对象进行序列化，则此应用程序必须在提供了 .NET Framework 的新版本时重新生成所有排序键。</span><span class="sxs-lookup"><span data-stu-id="95317-138">If an application serializes a <xref:System.Globalization.SortKey> object, the application must regenerate all the sort keys when there is a new version of the .NET Framework.</span></span>  
  
 <span data-ttu-id="95317-139">有关排序关键字的详细信息，请参阅 unicode [联合会网站](https://go.microsoft.com/fwlink/?linkid=37123)上的 Unicode 技术标准 #10 "Unicode 排序算法"。</span><span class="sxs-lookup"><span data-stu-id="95317-139">For more information about sort keys, see Unicode Technical Standard #10, "Unicode Collation Algorithm" on the [Unicode Consortium website](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95317-140">下面的示例使用“en-US”和“es-ES”区域性以及“en-US”和“es-ES”传统区域性比较字符串“llama”。</span><span class="sxs-lookup"><span data-stu-id="95317-140">The following example compares the string "llama" using the "en-US" and "es-ES" cultures, and the "en-US" and "es-ES" traditional cultures.</span></span>  
  
 [!code-cpp[System.Globalization.SortKey.Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CPP/sortkey_compare.cpp#1)]
 [!code-csharp[System.Globalization.SortKey.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CS/sortkey_compare.cs#1)]
 [!code-vb[System.Globalization.SortKey.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/VB/sortkey_compare.vb#1)]  
  
 <span data-ttu-id="95317-141">下面的示例演示如何使用 <xref:System.Globalization.SortKey> 类提高完全依赖于排序和搜索大型数组的应用程序中的性能。</span><span class="sxs-lookup"><span data-stu-id="95317-141">The following example shows how you can use the <xref:System.Globalization.SortKey> class to improve performance in an application that relies extensively on sorting and searching a large array.</span></span> <span data-ttu-id="95317-142">该示例创建无序的名称数组，此实例中有 13 个元素。</span><span class="sxs-lookup"><span data-stu-id="95317-142">The example creates an unordered array of names, which in this case has 13 elements.</span></span> <span data-ttu-id="95317-143">然后它将每个名称的排序键存储在并行数组中，后者会将其传递到 <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="95317-143">It then stores the sort key of each name in a parallel array, which it passes to the <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="95317-144">结果为已排序的数组。</span><span class="sxs-lookup"><span data-stu-id="95317-144">The result is a sorted array.</span></span> <span data-ttu-id="95317-145">然后，该示例搜索三个字符串的数组。</span><span class="sxs-lookup"><span data-stu-id="95317-145">The example then searches the array for three strings.</span></span> <span data-ttu-id="95317-146">对于每个搜索字符串，它调用 <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> 方法来检索字符串的排序键，然后调用 <xref:System.Array.FindIndex%2A?displayProperty=nameWithType> 方法来检索该排序键在排序键数组中的索引。</span><span class="sxs-lookup"><span data-stu-id="95317-146">For each search string, it calls the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method to retrieve the string's sort key, and then calls the <xref:System.Array.FindIndex%2A?displayProperty=nameWithType> method to retrieve the index of that sort key in the array of sort keys.</span></span> <span data-ttu-id="95317-147">由于名称和排序键数组是并行的，因此返回的索引也是 `names` 数组中的名称的索引。</span><span class="sxs-lookup"><span data-stu-id="95317-147">Because the name and sort key arrays are parallel, the returned index is also the index of the name in the `names` array.</span></span>  
  
 [!code-csharp[System.Globalization.SortKey.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.sortkey.class/cs/sortkey1.cs#1)]
 [!code-vb[System.Globalization.SortKey.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.sortkey.class/vb/sortkey1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Globalization.CompareInfo.GetSortKey(System.String,System.Globalization.CompareOptions)" />
    <altmember cref="P:System.Globalization.SortKey.KeyData" />
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (System.Globalization.SortKey sortkey1, System.Globalization.SortKey sortkey2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(class System.Globalization.SortKey sortkey1, class System.Globalization.SortKey sortkey2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (sortkey1 As SortKey, sortkey2 As SortKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Globalization::SortKey ^ sortkey1, System::Globalization::SortKey ^ sortkey2);" />
      <MemberSignature Language="F#" Value="static member Compare : System.Globalization.SortKey * System.Globalization.SortKey -&gt; int" Usage="System.Globalization.SortKey.Compare (sortkey1, sortkey2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortkey1" Type="System.Globalization.SortKey" />
        <Parameter Name="sortkey2" Type="System.Globalization.SortKey" />
      </Parameters>
      <Docs>
        <param name="sortkey1"><span data-ttu-id="95317-148">将比较的第一个排序关键字。</span><span class="sxs-lookup"><span data-stu-id="95317-148">The first sort key to compare.</span></span></param>
        <param name="sortkey2"><span data-ttu-id="95317-149">将比较的第二个排序关键字。</span><span class="sxs-lookup"><span data-stu-id="95317-149">The second sort key to compare.</span></span></param>
        <summary><span data-ttu-id="95317-150">比较两个排序关键字。</span><span class="sxs-lookup"><span data-stu-id="95317-150">Compares two sort keys.</span></span></summary>
        <returns><span data-ttu-id="95317-151">一个带符号整数，指示 <paramref name="sortkey1" /> 和 <paramref name="sortkey2" /> 之间的关系。</span><span class="sxs-lookup"><span data-stu-id="95317-151">A signed integer that indicates the relationship between <paramref name="sortkey1" /> and <paramref name="sortkey2" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="95317-152">“值”</span><span class="sxs-lookup"><span data-stu-id="95317-152">Value</span></span> 
 </term><description> <span data-ttu-id="95317-153">条件</span><span class="sxs-lookup"><span data-stu-id="95317-153">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="95317-154">小于零</span><span class="sxs-lookup"><span data-stu-id="95317-154">Less than zero</span></span> 
 </term><description><span data-ttu-id="95317-155"><paramref name="sortkey1" /> 小于 <paramref name="sortkey2" />。</span><span class="sxs-lookup"><span data-stu-id="95317-155"><paramref name="sortkey1" /> is less than <paramref name="sortkey2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="95317-156">零</span><span class="sxs-lookup"><span data-stu-id="95317-156">Zero</span></span> 
 </term><description><span data-ttu-id="95317-157"><paramref name="sortkey1" /> 等于 <paramref name="sortkey2" />。</span><span class="sxs-lookup"><span data-stu-id="95317-157"><paramref name="sortkey1" /> is equal to <paramref name="sortkey2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="95317-158">大于零</span><span class="sxs-lookup"><span data-stu-id="95317-158">Greater than zero</span></span> 
 </term><description><span data-ttu-id="95317-159"><paramref name="sortkey1" /> 大于 <paramref name="sortkey2" />。</span><span class="sxs-lookup"><span data-stu-id="95317-159"><paramref name="sortkey1" /> is greater than <paramref name="sortkey2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95317-160"><xref:System.Globalization.SortKey.Compare%2A>方法比较 <xref:System.Globalization.SortKey.KeyData%2A> `sortkey1` 和参数的属性 `sortkey2` 。</span><span class="sxs-lookup"><span data-stu-id="95317-160">The <xref:System.Globalization.SortKey.Compare%2A> method compares the <xref:System.Globalization.SortKey.KeyData%2A> properties of the `sortkey1` and `sortkey2` parameters.</span></span> <span data-ttu-id="95317-161">方法生成的结果与 <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> 方法相同。</span><span class="sxs-lookup"><span data-stu-id="95317-161">The method yields the same results as the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="95317-162">有关 <xref:System.Globalization.SortKey.Compare%2A> 方法和排序关键字比较的详细信息，请参阅 <xref:System.Globalization.SortKey> 类主题。</span><span class="sxs-lookup"><span data-stu-id="95317-162">For more information about the <xref:System.Globalization.SortKey.Compare%2A> method and the comparison of sort keys, see the <xref:System.Globalization.SortKey> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95317-163">下面的代码示例使用 <xref:System.Globalization.SortKey.Compare%2A> 方法和等效方法来比较两个字符串 <xref:System.Globalization.CompareInfo.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="95317-163">The following code example compares two strings using the <xref:System.Globalization.SortKey.Compare%2A> method and the equivalent <xref:System.Globalization.CompareInfo.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[sys.glob.sortkey.compare#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.compare/cs/skcmp.cs#1)]
 [!code-vb[sys.glob.sortkey.compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.compare/vb/skcmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="95317-164"><paramref name="sortkey1" /> 或 <paramref name="sortkey2" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="95317-164"><paramref name="sortkey1" /> or <paramref name="sortkey2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="sortKey.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="95317-165">要与当前 <see cref="T:System.Globalization.SortKey" /> 对象进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="95317-165">The object to compare with the current <see cref="T:System.Globalization.SortKey" /> object.</span></span></param>
        <summary><span data-ttu-id="95317-166">确定指定的对象是否等于当前 <see cref="T:System.Globalization.SortKey" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="95317-166">Determines whether the specified object is equal to the current <see cref="T:System.Globalization.SortKey" /> object.</span></span></summary>
        <returns><span data-ttu-id="95317-167">如果 <paramref name="value" /> 等于当前的 <see cref="T:System.Globalization.SortKey" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="95317-167"><see langword="true" /> if the <paramref name="value" /> parameter is equal to the current <see cref="T:System.Globalization.SortKey" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95317-168">如果两个 <xref:System.Globalization.SortKey> 对象的属性相等，则将它们视为相等 <xref:System.Globalization.SortKey.KeyData%2A> 。</span><span class="sxs-lookup"><span data-stu-id="95317-168">Two <xref:System.Globalization.SortKey> objects are considered equal if their <xref:System.Globalization.SortKey.KeyData%2A> properties are equal.</span></span>  
  
 <span data-ttu-id="95317-169">此方法重写 <xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="95317-169">This method overrides <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95317-170">下面的代码示例演示 <xref:System.Globalization.SortKey.Equals%2A> 与不同对象进行比较的结果 <xref:System.Globalization.SortKey> 。</span><span class="sxs-lookup"><span data-stu-id="95317-170">The following code example shows the results of <xref:System.Globalization.SortKey.Equals%2A> when compared with different <xref:System.Globalization.SortKey> objects.</span></span>  
  
 [!code-cpp[System.Globalization.SortKey.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CPP/sortkey_equals.cpp#1)]
 [!code-csharp[System.Globalization.SortKey.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CS/sortkey_equals.cs#1)]
 [!code-vb[System.Globalization.SortKey.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/VB/sortkey_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="95317-171"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="95317-171"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <altmember cref="P:System.Globalization.SortKey.KeyData" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="sortKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="95317-172">用作当前 <see cref="T:System.Globalization.SortKey" /> 对象的哈希函数，适合用在哈希算法和数据结构（例如哈希表）中。</span><span class="sxs-lookup"><span data-stu-id="95317-172">Serves as a hash function for the current <see cref="T:System.Globalization.SortKey" /> object that is suitable for hashing algorithms and data structures such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="95317-173">当前 <see cref="T:System.Globalization.SortKey" /> 对象的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="95317-173">A hash code for the current <see cref="T:System.Globalization.SortKey" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95317-174">此方法为根据 <xref:System.Globalization.SortKey.Equals%2A> 方法视为相等的两个对象生成相同的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="95317-174">This method generates the same hash code for two objects that are equal according to the <xref:System.Globalization.SortKey.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="95317-175">此方法重写 <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="95317-175">This method overrides <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.SortKey.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="KeyData">
      <MemberSignature Language="C#" Value="public byte[] KeyData { get; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] KeyData" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortKey.KeyData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyData As Byte()" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ KeyData { cli::array &lt;System::Byte&gt; ^ get(); };" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="member this.KeyData : byte[]" Usage="System.Globalization.SortKey.KeyData" />
      <MemberSignature Language="C#" Value="public virtual byte[] KeyData { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyData As Byte()" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ KeyData { cli::array &lt;System::Byte&gt; ^ get(); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95317-176">获取表示当前 <see cref="T:System.Globalization.SortKey" /> 对象的字节数组。</span><span class="sxs-lookup"><span data-stu-id="95317-176">Gets the byte array representing the current <see cref="T:System.Globalization.SortKey" /> object.</span></span></summary>
        <value><span data-ttu-id="95317-177">表示当前 <see cref="T:System.Globalization.SortKey" /> 对象的字节数组。</span><span class="sxs-lookup"><span data-stu-id="95317-177">A byte array representing the current <see cref="T:System.Globalization.SortKey" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95317-178">有关在比较字符串时使用属性返回的数据的详细信息 <xref:System.Globalization.SortKey.KeyData%2A> ，请参阅 <xref:System.Globalization.SortKey> 类主题。</span><span class="sxs-lookup"><span data-stu-id="95317-178">For more information about the use of the data returned by the <xref:System.Globalization.SortKey.KeyData%2A> property in comparing strings, see the <xref:System.Globalization.SortKey> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95317-179">下面的代码示例为区分大小写的排序关键字和不区分大小写的排序键显示原始字符串和等效的字符串和密钥数据。</span><span class="sxs-lookup"><span data-stu-id="95317-179">The following code example displays an original string and the equivalent string and key data for a case-sensitive sort key and a case-insensitive sort key.</span></span>  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalString">
      <MemberSignature Language="C#" Value="public string OriginalString { get; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalString" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortKey.OriginalString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalString As String" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OriginalString { System::String ^ get(); };" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="F#" Value="member this.OriginalString : string" Usage="System.Globalization.SortKey.OriginalString" />
      <MemberSignature Language="C#" Value="public virtual string OriginalString { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OriginalString As String" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OriginalString { System::String ^ get(); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95317-180">获取用于创建当前 <see cref="T:System.Globalization.SortKey" /> 对象的原始字符串。</span><span class="sxs-lookup"><span data-stu-id="95317-180">Gets the original string used to create the current <see cref="T:System.Globalization.SortKey" /> object.</span></span></summary>
        <value><span data-ttu-id="95317-181">用于创建当前 <see cref="T:System.Globalization.SortKey" /> 对象的原始字符串。</span><span class="sxs-lookup"><span data-stu-id="95317-181">The original string used to create the current <see cref="T:System.Globalization.SortKey" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95317-182">下面的代码示例为区分大小写的排序关键字和不区分大小写的排序键显示原始字符串和等效的字符串和密钥数据。</span><span class="sxs-lookup"><span data-stu-id="95317-182">The following code example displays an original string and the equivalent string and key data for a case-sensitive sort key and a case-insensitive sort key.</span></span>  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="sortKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="95317-183">返回表示当前 <see cref="T:System.Globalization.SortKey" /> 对象的字符串。</span><span class="sxs-lookup"><span data-stu-id="95317-183">Returns a string that represents the current <see cref="T:System.Globalization.SortKey" /> object.</span></span></summary>
        <returns><span data-ttu-id="95317-184">表示当前 <see cref="T:System.Globalization.SortKey" /> 对象的字符串。</span><span class="sxs-lookup"><span data-stu-id="95317-184">A string that represents the current <see cref="T:System.Globalization.SortKey" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95317-185">返回值是字符串 "SortKey-"、当前对象的区域性标识符和比较选项以及 <xref:System.Globalization.SortKey> 属性值的串联 <xref:System.Globalization.SortKey.OriginalString%2A> 。</span><span class="sxs-lookup"><span data-stu-id="95317-185">The return value is the concatenation of the string "SortKey - ", the culture identifier and compare options of the current <xref:System.Globalization.SortKey> object, and the value of the <xref:System.Globalization.SortKey.OriginalString%2A> property.</span></span>  
  
 <span data-ttu-id="95317-186">此方法重写 <xref:System.Object.ToString%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="95317-186">This method overrides <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95317-187">下面的代码示例显示原始字符串、由方法生成的、区分大小写和不区分大小写的排序键的字符串，以及区分大小写和不区分大小写的 <xref:System.Globalization.SortKey.ToString%2A> 排序键的键数据。</span><span class="sxs-lookup"><span data-stu-id="95317-187">The following code example displays an original string, the strings yielded by the <xref:System.Globalization.SortKey.ToString%2A> method for case-sensitive and case-insensitive sort keys, and the key data for case-sensitive and case-insensitive sort keys.</span></span>  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>
