<Type Name="CharUnicodeInfo" FullName="System.Globalization.CharUnicodeInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="24e32ff9d7d294a2c0b7c801bd542867ec14c717" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89787279" /></Metadata><TypeSignature Language="C#" Value="public static class CharUnicodeInfo" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CharUnicodeInfo extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CharUnicodeInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CharUnicodeInfo" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class CharUnicodeInfo abstract sealed" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type CharUnicodeInfo = class" />
  <TypeSignature Language="C#" Value="public sealed class CharUnicodeInfo" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CharUnicodeInfo extends System.Object" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CharUnicodeInfo" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="C++ CLI" Value="public ref class CharUnicodeInfo sealed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed CharUnicodeInfo extends System.Object" FrameworkAlternate="netframework-4.0" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Globalization" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Globalization" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3831c-101">检索关于 Unicode 字符的信息。</span><span class="sxs-lookup"><span data-stu-id="3831c-101">Retrieves information about a Unicode character.</span></span> <span data-ttu-id="3831c-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="3831c-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831c-103">[Unicode 标准](https://go.microsoft.com/fwlink/?linkid=37123)定义了许多 unicode 字符类别。</span><span class="sxs-lookup"><span data-stu-id="3831c-103">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines a number of Unicode character categories.</span></span> <span data-ttu-id="3831c-104">例如，可以将一个字符分类为大写字母、小写字母、十进制数字、字母数字、段落分隔符、数学符号或货币符号。</span><span class="sxs-lookup"><span data-stu-id="3831c-104">For example, a character might be categorized as an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a paragraph separator, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="3831c-105">应用程序可以使用字符类别来控制基于字符串的操作，如使用正则表达式分析或提取子字符串。</span><span class="sxs-lookup"><span data-stu-id="3831c-105">Your application can use the character category to govern string-based operations, such as parsing or extracting substring with regular expressions.</span></span> <span data-ttu-id="3831c-106"><xref:System.Globalization.UnicodeCategory>枚举定义可能的字符类别。</span><span class="sxs-lookup"><span data-stu-id="3831c-106">The <xref:System.Globalization.UnicodeCategory> enumeration defines the possible character categories.</span></span>  
  
 <span data-ttu-id="3831c-107">使用 <xref:System.Globalization.CharUnicodeInfo> 类可获取 <xref:System.Globalization.UnicodeCategory> 特定字符的值。</span><span class="sxs-lookup"><span data-stu-id="3831c-107">You use the <xref:System.Globalization.CharUnicodeInfo> class to obtain the <xref:System.Globalization.UnicodeCategory> value for a specific character.</span></span> <span data-ttu-id="3831c-108"><xref:System.Globalization.CharUnicodeInfo>类定义返回以下 Unicode 字符值的方法：</span><span class="sxs-lookup"><span data-stu-id="3831c-108">The <xref:System.Globalization.CharUnicodeInfo> class defines methods that return the following Unicode character values:</span></span>  
  
-   <span data-ttu-id="3831c-109">字符或代理项对所属的特定类别。</span><span class="sxs-lookup"><span data-stu-id="3831c-109">The specific category to which a character or surrogate pair belongs.</span></span> <span data-ttu-id="3831c-110">返回的值是枚举的成员 <xref:System.Globalization.UnicodeCategory> 。</span><span class="sxs-lookup"><span data-stu-id="3831c-110">The value returned is a member of the <xref:System.Globalization.UnicodeCategory> enumeration.</span></span>  
  
-   <span data-ttu-id="3831c-111">数值。</span><span class="sxs-lookup"><span data-stu-id="3831c-111">Numeric value.</span></span> <span data-ttu-id="3831c-112">仅适用于数字字符，包括分数、下标、上标、罗马数字、货币分子、encircled 数和特定于脚本的数字。</span><span class="sxs-lookup"><span data-stu-id="3831c-112">Applies only to numeric characters, including fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
-   <span data-ttu-id="3831c-113">数字值。</span><span class="sxs-lookup"><span data-stu-id="3831c-113">Digit value.</span></span> <span data-ttu-id="3831c-114">适用于可与其他数字字符组合在一起的数字字符，以表示编号系统中的整数。</span><span class="sxs-lookup"><span data-stu-id="3831c-114">Applies to numeric characters that can be combined with other numeric characters to represent a whole number in a numbering system.</span></span>  
  
-   <span data-ttu-id="3831c-115">十进制数字值。</span><span class="sxs-lookup"><span data-stu-id="3831c-115">Decimal digit value.</span></span> <span data-ttu-id="3831c-116">仅适用于代表十进制 (base 10) 系统中的十进制数字的字符。</span><span class="sxs-lookup"><span data-stu-id="3831c-116">Applies only to characters that represent decimal digits in the decimal (base 10) system.</span></span> <span data-ttu-id="3831c-117">十进制数字可以是从0到9的10位数字之一。</span><span class="sxs-lookup"><span data-stu-id="3831c-117">A decimal digit can be one of ten digits, from zero through nine.</span></span> <span data-ttu-id="3831c-118">这些字符是类别的成员 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="3831c-118">These characters are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="3831c-119">此外， <xref:System.Globalization.CharUnicodeInfo> 该类由多个依赖于字符分类的其他 .NET Framework 类型和方法在内部使用。</span><span class="sxs-lookup"><span data-stu-id="3831c-119">In addition, the <xref:System.Globalization.CharUnicodeInfo> class is used internally by a number of other .NET Framework types and methods that rely on character classification.</span></span> <span data-ttu-id="3831c-120">这些方法包括：</span><span class="sxs-lookup"><span data-stu-id="3831c-120">These include:</span></span>  
  
-   <span data-ttu-id="3831c-121"><xref:System.Globalization.StringInfo>类，它适用于文本元素，而不是字符串中的单个字符。</span><span class="sxs-lookup"><span data-stu-id="3831c-121">The <xref:System.Globalization.StringInfo> class, which works with textual elements instead of single characters in a string.</span></span>  
  
-   <span data-ttu-id="3831c-122">方法的重载 <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> ，它确定字符或代理项对所属的类别。</span><span class="sxs-lookup"><span data-stu-id="3831c-122">The overloads of the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method, which determine the category to which a character or surrogate pair belongs.</span></span>  
  
-   <span data-ttu-id="3831c-123">[character classes](/dotnet/standard/base-types/character-classes-in-regular-expressions) <xref:System.Text.RegularExpressions.Regex> .NET Framework 的正则表达式引擎识别的字符类。</span><span class="sxs-lookup"><span data-stu-id="3831c-123">The [character classes](/dotnet/standard/base-types/character-classes-in-regular-expressions) recognized by <xref:System.Text.RegularExpressions.Regex>, the .NET Framework's regular expression engine.</span></span>  
  
 <span data-ttu-id="3831c-124">在应用程序中使用此类时，请记住以下有关使用类型的编程注意事项 <xref:System.Char> 。</span><span class="sxs-lookup"><span data-stu-id="3831c-124">When using this class in your applications, keep in mind the following programming considerations for using the <xref:System.Char> type.</span></span> <span data-ttu-id="3831c-125">类型可能难以使用，字符串通常更适合用于表示语言内容。</span><span class="sxs-lookup"><span data-stu-id="3831c-125">The type can be difficult to use, and strings are generally preferable for representing linguistic content.</span></span>  
  
-   <span data-ttu-id="3831c-126"><xref:System.Char>对象并不总是对应于单个字符。</span><span class="sxs-lookup"><span data-stu-id="3831c-126">A <xref:System.Char> object does not always correspond to a single character.</span></span> <span data-ttu-id="3831c-127">尽管该 <xref:System.Char> 类型表示单个16位值，但某些字符 (例如字形群集和代理项对) 包含两个或更多 utf-16 代码单元。</span><span class="sxs-lookup"><span data-stu-id="3831c-127">Although the <xref:System.Char> type represents a single 16-bit value, some characters (such as grapheme clusters and surrogate pairs) consist of two or more UTF-16 code units.</span></span> <span data-ttu-id="3831c-128">有关详细信息，请参阅类中的 "Char 对象和 Unicode 字符" <xref:System.String> 。</span><span class="sxs-lookup"><span data-stu-id="3831c-128">For more information, see "Char Objects and Unicode Characters" in the <xref:System.String> class.</span></span>  
  
-   <span data-ttu-id="3831c-129">"字符" 的概念也是灵活的。</span><span class="sxs-lookup"><span data-stu-id="3831c-129">The notion of a "character" is also flexible.</span></span> <span data-ttu-id="3831c-130">字符通常被视为标志符号，但很多标志符号需要多个码位。</span><span class="sxs-lookup"><span data-stu-id="3831c-130">A character is often thought of as a glyph, but many glyphs require multiple code points.</span></span> <span data-ttu-id="3831c-131">例如，可以通过两个码位来表示ä ( "a" 加上 U + 0308，这是组合分音符) ，或由单个码位 ( "ä" 或 U + 00A4) 。</span><span class="sxs-lookup"><span data-stu-id="3831c-131">For example, ä can be represented either by two code points ("a" plus U+0308, which is the combining diaeresis), or by a single code point ("ä" or U+00A4).</span></span> <span data-ttu-id="3831c-132">某些语言的多个字母、字符和字形需要多个码位，这可能会导致语言内容表示形式出现混淆。</span><span class="sxs-lookup"><span data-stu-id="3831c-132">Some languages have many letters, characters, and glyphs that require multiple code points, which can cause confusion in linguistic content representation.</span></span> <span data-ttu-id="3831c-133">例如，有一个ΰ (U + 03B0，带 dialytika 和 tonos 的希腊文小写字母 upsilon) ，但没有等效的大写字母。</span><span class="sxs-lookup"><span data-stu-id="3831c-133">For example, there is a ΰ (U+03B0, Greek small letter upsilon with dialytika and tonos), but there is no equivalent capital letter.</span></span> <span data-ttu-id="3831c-134">大写这样的值即可检索原始值。</span><span class="sxs-lookup"><span data-stu-id="3831c-134">Uppercasing such a value simply retrieves the original value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831c-135">下面的代码示例显示了每种方法为不同类型的字符返回的值。</span><span class="sxs-lookup"><span data-stu-id="3831c-135">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage"><para><span data-ttu-id="3831c-136">可识别的字符及其所属的特定类别由 Unicode 标准定义，可以从 Unicode 标准的一个版本更改为另一个版本。</span><span class="sxs-lookup"><span data-stu-id="3831c-136">Recognized characters and the specific categories to which they belong are defined by the Unicode standard and can change from one version of the Unicode Standard to another.</span></span> <span data-ttu-id="3831c-137">特定版本的 .NET Framework 中的字符分类基于 Unicode 标准的单个版本，而与运行 .NET Framework 的基础操作系统无关。</span><span class="sxs-lookup"><span data-stu-id="3831c-137">Categorization of characters in a particular version of the  .NET Framework  is based on a single version of the Unicode Standard regardless of the underlying operating system on which the .NET Framework is running.</span></span> <span data-ttu-id="3831c-138">下表列出了 .NET Framework 的版本 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] ，因为和用于对字符进行分类的 Unicode 标准的版本。</span><span class="sxs-lookup"><span data-stu-id="3831c-138">The following table lists versions of the .NET Framework since the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] and the versions of the Unicode Standard  used to classify characters.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="3831c-139">.NET Framework 版本</span><span class="sxs-lookup"><span data-stu-id="3831c-139">.NET Framework version</span></span> 
 </term><description> <span data-ttu-id="3831c-140">Unicode 标准版本</span><span class="sxs-lookup"><span data-stu-id="3831c-140">Version of the Unicode Standard</span></span> 
 </description></listheader><item><term> [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]  
  
 </term><description> <span data-ttu-id="3831c-141">[Unicode 标准版本5.0。0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span><span class="sxs-lookup"><span data-stu-id="3831c-141">[The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span></span></description></item><item><term> [!INCLUDE[net_v45](~/includes/net-v45-md.md)]  
  
 </term><description> <span data-ttu-id="3831c-142">[Unicode 标准版本5.0。0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span><span class="sxs-lookup"><span data-stu-id="3831c-142">[The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span></span></description></item><item><term> [!INCLUDE[net_v451](~/includes/net-v451-md.md)]  
  
 </term><description> <span data-ttu-id="3831c-143">[Unicode 标准版本5.0。0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span><span class="sxs-lookup"><span data-stu-id="3831c-143">[The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span></span></description></item><item><term> [!INCLUDE[net_v452](~/includes/net-v452-md.md)]  
  
 </term><description> <span data-ttu-id="3831c-144">[Unicode 标准版本5.0。0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span><span class="sxs-lookup"><span data-stu-id="3831c-144">[The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span></span></description></item><item><term> [!INCLUDE[net_v46](~/includes/net-v46-md.md)]  
  
 </term><description> <span data-ttu-id="3831c-145">[Unicode 标准版本6.3。0](https://www.unicode.org/versions/Unicode6.3.0/)  
  
 </span><span class="sxs-lookup"><span data-stu-id="3831c-145">[The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)  
  
 </span></span></description></item><item><term> [!INCLUDE[net_v461](~/includes/net-v461-md.md)]  
  
 </term><description> <span data-ttu-id="3831c-146">[Unicode 标准版本6.3。0](https://www.unicode.org/versions/Unicode6.3.0/)  
  
 </span><span class="sxs-lookup"><span data-stu-id="3831c-146">[The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)  
  
 </span></span></description></item><item><term> [!INCLUDE[net_v462](~/includes/net-v462-md.md)]  
  
 </term><description> <span data-ttu-id="3831c-147">[Unicode 标准版本8.0。0](https://www.unicode.org/versions/Unicode8.0.0/)  
  
 </span><span class="sxs-lookup"><span data-stu-id="3831c-147">[The Unicode Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/)  
  
 </span></span></description></item></list>  

 <span data-ttu-id="3831c-148">Unicode 标准的每个版本都包含自上一版本以来对 Unicode 字符数据库进行的更改的信息。</span><span class="sxs-lookup"><span data-stu-id="3831c-148">Each version of the Unicode standard includes information on changes to the Unicode character database since the previous version.</span></span> <span data-ttu-id="3831c-149">类使用 Unicode 字符数据库 <see cref="T:System.Globalization.CharUnicodeInfo" /> 对字符进行分类。</span><span class="sxs-lookup"><span data-stu-id="3831c-149">The Unicode character database is used by the <see cref="T:System.Globalization.CharUnicodeInfo" /> class for categorizing characters.</span></span></para></block>
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="N:System.Text" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetDecimalDigitValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3831c-150">获取数值型 Unicode 字符的十进制数字值。</span><span class="sxs-lookup"><span data-stu-id="3831c-150">Gets the decimal digit value of a numeric Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDecimalDigitValue (ch As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDecimalDigitValue(char ch);" />
      <MemberSignature Language="F#" Value="static member GetDecimalDigitValue : char -&gt; int" Usage="System.Globalization.CharUnicodeInfo.GetDecimalDigitValue ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="3831c-151">要获取其十进制数字值的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3831c-151">The Unicode character for which to get the decimal digit value.</span></span></param>
        <summary><span data-ttu-id="3831c-152">获取指定数值型字符的十进制数字值。</span><span class="sxs-lookup"><span data-stu-id="3831c-152">Gets the decimal digit value of the specified numeric character.</span></span></summary>
        <returns><span data-ttu-id="3831c-153">指定数值型字符的十进制数字值。</span><span class="sxs-lookup"><span data-stu-id="3831c-153">The decimal digit value of the specified numeric character.</span></span>  
  
 <span data-ttu-id="3831c-154">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3831c-154">-or-</span></span>  
  
 <span data-ttu-id="3831c-155">如果指定字符不是十进制数字，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="3831c-155">-1, if the specified character is not a decimal digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831c-156">此方法将表示十进制数字的字符转换为其等效的整数值。</span><span class="sxs-lookup"><span data-stu-id="3831c-156">This method converts characters that represent decimal digits to their equivalent integral values.</span></span> <span data-ttu-id="3831c-157">十进制数字是类别中的字符， <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> 可以表示十进制 (以10为底) 编号系统，从零到9。</span><span class="sxs-lookup"><span data-stu-id="3831c-157">Decimal digits are characters in the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> category that can represent one of ten digits in the decimal (base 10) numbering system, from zero through nine.</span></span> <span data-ttu-id="3831c-158">它包含 U + 0030 (位零) 到 U + 0039 (数字 9) 的字符。 U + 0660 (阿拉伯-印度文数字零) 到 U + 0669 (阿拉伯-印度文数字 9) ，U + 07C0 (的 NKO 数字 0) 到 U + 07C9 (的，使用</span><span class="sxs-lookup"><span data-stu-id="3831c-158">It includes characters such as U+0030 (DIGIT ZERO) through U+0039 (DIGIT NINE), U+0660 (ARABIC-INDIC DIGIT ZERO) through U+0669 (ARABIC-INDIC DIGIT NINE), U+07C0 (NKO DIGIT ZERO) through U+07C9 (NKO DIGIT NINE), and U+1040 (MYANMAR DIGIT ZERO) through U+1049 (MYANMAR DIGIT NINE).</span></span>  
  
 <span data-ttu-id="3831c-159">有关 Unicode 字符的详细信息，请参阅 [Unicode 标准](https://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="3831c-159">For more information about Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831c-160">下面的代码示例显示了每种方法为不同类型的字符返回的值。</span><span class="sxs-lookup"><span data-stu-id="3831c-160">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDecimalDigitValue (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDecimalDigitValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetDecimalDigitValue : string * int -&gt; int" Usage="System.Globalization.CharUnicodeInfo.GetDecimalDigitValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3831c-161">包含要获取其十进制数字值的 Unicode 字符的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="3831c-161">The <see cref="T:System.String" /> containing the Unicode character for which to get the decimal digit value.</span></span></param>
        <param name="index"><span data-ttu-id="3831c-162">要获取其十进制数字值的 Unicode 字符的索引。</span><span class="sxs-lookup"><span data-stu-id="3831c-162">The index of the Unicode character for which to get the decimal digit value.</span></span></param>
        <summary><span data-ttu-id="3831c-163">获取位于指定字符串的指定索引处的数值型字符的十进制数字值。</span><span class="sxs-lookup"><span data-stu-id="3831c-163">Gets the decimal digit value of the numeric character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="3831c-164">位于指定字符串的指定索引处的数值型字符的十进制数字值。</span><span class="sxs-lookup"><span data-stu-id="3831c-164">The decimal digit value of the numeric character at the specified index of the specified string.</span></span>  
  
 <span data-ttu-id="3831c-165">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3831c-165">-or-</span></span>  
  
 <span data-ttu-id="3831c-166">如果位于指定字符串的指定索引位处的字符不是十进制数字，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="3831c-166">-1, if the character at the specified index of the specified string is not a decimal digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831c-167">此方法将表示十进制数字的字符转换为其等效的整数值。</span><span class="sxs-lookup"><span data-stu-id="3831c-167">This method converts characters that represent decimal digits to their equivalent integral values.</span></span> <span data-ttu-id="3831c-168">十进制数字是类别中的字符， <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> 可以表示十进制 (以10为底) 编号系统，从零到9。</span><span class="sxs-lookup"><span data-stu-id="3831c-168">Decimal digits are characters in the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> category that can represent one of ten digits in the decimal (base 10) numbering system, from zero through nine.</span></span> <span data-ttu-id="3831c-169">它包含 U + 0030 (位零) 到 U + 0039 (数字 9) 的字符。 U + 0660 (阿拉伯-印度文数字零) 到 U + 0669 (阿拉伯-印度文数字 9) ，U + 07C0 (的 NKO 数字 0) 到 U + 07C9 (的，使用</span><span class="sxs-lookup"><span data-stu-id="3831c-169">It includes characters such as U+0030 (DIGIT ZERO) through U+0039 (DIGIT NINE), U+0660 (ARABIC-INDIC DIGIT ZERO) through U+0669 (ARABIC-INDIC DIGIT NINE), U+07C0 (NKO DIGIT ZERO) through U+07C9 (NKO DIGIT NINE), and U+1040 (MYANMAR DIGIT ZERO) through U+1049 (MYANMAR DIGIT NINE).</span></span>  
  
 <span data-ttu-id="3831c-170">有关 Unicode 字符的详细信息，请参阅 [Unicode 标准](https://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="3831c-170">For more information about Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831c-171">下面的代码示例显示了每种方法为不同类型的字符返回的值。</span><span class="sxs-lookup"><span data-stu-id="3831c-171">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3831c-172"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3831c-172"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3831c-173"><paramref name="index" /> 超出 <paramref name="s" /> 中的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="3831c-173"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDigitValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3831c-174">获取数值型 Unicode 字符的数字值。</span><span class="sxs-lookup"><span data-stu-id="3831c-174">Gets the digit value of a numeric Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDigitValue (ch As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDigitValue(char ch);" />
      <MemberSignature Language="F#" Value="static member GetDigitValue : char -&gt; int" Usage="System.Globalization.CharUnicodeInfo.GetDigitValue ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="3831c-175">要为其获取数字值的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3831c-175">The Unicode character for which to get the digit value.</span></span></param>
        <summary><span data-ttu-id="3831c-176">获取指定数值型字符的数字值。</span><span class="sxs-lookup"><span data-stu-id="3831c-176">Gets the digit value of the specified numeric character.</span></span></summary>
        <returns><span data-ttu-id="3831c-177">指定数值型字符的数字值。</span><span class="sxs-lookup"><span data-stu-id="3831c-177">The digit value of the specified numeric character.</span></span>  
  
 <span data-ttu-id="3831c-178">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3831c-178">-or-</span></span>  
  
 <span data-ttu-id="3831c-179">如果指定的字符不是数字，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="3831c-179">-1, if the specified character is not a digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831c-180">数字值是仅适用于数字字符的属性，可用作数字字符。</span><span class="sxs-lookup"><span data-stu-id="3831c-180">Digit value is a property that applies only to numeric characters that can be used as digits.</span></span> <span data-ttu-id="3831c-181">数字是可以与其他数字组合在一起的数字字符，以表示编号系统中的整数。</span><span class="sxs-lookup"><span data-stu-id="3831c-181">A digit is a numeric character that can be combined with other digits to represent a whole number in a numbering system.</span></span>  
  
 <span data-ttu-id="3831c-182">有关 Unicode 字符的详细信息，请参阅 [Unicode 标准](https://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="3831c-182">For more information on Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831c-183">下面的代码示例显示了每种方法为不同类型的字符返回的值。</span><span class="sxs-lookup"><span data-stu-id="3831c-183">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDigitValue (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDigitValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetDigitValue : string * int -&gt; int" Usage="System.Globalization.CharUnicodeInfo.GetDigitValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3831c-184">包含要获取其数字值的 Unicode 字符的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="3831c-184">The <see cref="T:System.String" /> containing the Unicode character for which to get the digit value.</span></span></param>
        <param name="index"><span data-ttu-id="3831c-185">要获取其数字值的 Unicode 字符的索引。</span><span class="sxs-lookup"><span data-stu-id="3831c-185">The index of the Unicode character for which to get the digit value.</span></span></param>
        <summary><span data-ttu-id="3831c-186">获取位于指定字符串的指定索引处的数值型字符的数字值。</span><span class="sxs-lookup"><span data-stu-id="3831c-186">Gets the digit value of the numeric character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="3831c-187">位于指定字符串的指定索引处的数值型字符的数字值。</span><span class="sxs-lookup"><span data-stu-id="3831c-187">The digit value of the numeric character at the specified index of the specified string.</span></span>  
  
 <span data-ttu-id="3831c-188">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3831c-188">-or-</span></span>  
  
 <span data-ttu-id="3831c-189">如果位于指定字符串的指定索引处的字符不是数字，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="3831c-189">-1, if the character at the specified index of the specified string is not a digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831c-190">数字值是仅适用于数字字符的属性，可用作数字字符。</span><span class="sxs-lookup"><span data-stu-id="3831c-190">Digit value is a property that applies only to numeric characters that can be used as digits.</span></span> <span data-ttu-id="3831c-191">数字是可以与其他数字组合在一起的数字字符，以表示编号系统中的整数。</span><span class="sxs-lookup"><span data-stu-id="3831c-191">A digit is a numeric character that can be combined with other digits to represent a whole number in a numbering system.</span></span>  
  
 <span data-ttu-id="3831c-192">有关 Unicode 字符的详细信息，请参阅 [Unicode 标准](https://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="3831c-192">For more information on Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831c-193">下面的代码示例显示了每种方法为不同类型的字符返回的值。</span><span class="sxs-lookup"><span data-stu-id="3831c-193">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3831c-194"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3831c-194"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3831c-195"><paramref name="index" /> 超出 <paramref name="s" /> 中的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="3831c-195"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3831c-196">获取与 Unicode 字符关联的数值。</span><span class="sxs-lookup"><span data-stu-id="3831c-196">Gets the numeric value associated with a Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (ch As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(char ch);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : char -&gt; double" Usage="System.Globalization.CharUnicodeInfo.GetNumericValue ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="3831c-197">要获取其数值的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3831c-197">The Unicode character for which to get the numeric value.</span></span></param>
        <summary><span data-ttu-id="3831c-198">获取与指定字符关联的数值。</span><span class="sxs-lookup"><span data-stu-id="3831c-198">Gets the numeric value associated with the specified character.</span></span></summary>
        <returns><span data-ttu-id="3831c-199">与指定字符关联的数值。</span><span class="sxs-lookup"><span data-stu-id="3831c-199">The numeric value associated with the specified character.</span></span>  
  
 <span data-ttu-id="3831c-200">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3831c-200">-or-</span></span>  
  
 <span data-ttu-id="3831c-201">如果指定的字符不是数值型字符，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="3831c-201">-1, if the specified character is not a numeric character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831c-202">数值是仅适用于数字字符的 Unicode 字符属性，其中包括分数、下标、上标、罗马数字、货币分子、encircled 数和特定于脚本的数字。</span><span class="sxs-lookup"><span data-stu-id="3831c-202">Numeric value is a Unicode character property that applies only to numeric characters, which include fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span> <span data-ttu-id="3831c-203">有关 Unicode 字符的详细信息，请参阅 [Unicode 标准](https://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="3831c-203">For more information on Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="3831c-204"><xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29>方法假定对应于 `ch` 单个语言字符，并检查是否可以将该字符转换为十进制数字。</span><span class="sxs-lookup"><span data-stu-id="3831c-204">The <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> method assumes that `ch` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.</span></span> <span data-ttu-id="3831c-205">但 Unicode 标准中的一些数字由两个 <xref:System.Char> 构成代理项对的对象表示。</span><span class="sxs-lookup"><span data-stu-id="3831c-205">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="3831c-206">例如，爱琴大学编号系统由代码点 U + 10107 到 U + 10133 组成。</span><span class="sxs-lookup"><span data-stu-id="3831c-206">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="3831c-207">下面的示例使用 <xref:System.Char.ConvertFromUtf32%2A> 方法实例化表示爱琴大学1的字符串。</span><span class="sxs-lookup"><span data-stu-id="3831c-207">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="3831c-208">如示例的输出所示， <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> 如果传递给此字符的高代理项或低代理项，则方法返回-1。</span><span class="sxs-lookup"><span data-stu-id="3831c-208">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/cs/getnumericvalue1.cs#2)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/vb/getnumericvalue1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="3831c-209">下面的代码示例显示了每种方法为不同类型的字符返回的值。</span><span class="sxs-lookup"><span data-stu-id="3831c-209">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (s As String, index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : string * int -&gt; double" Usage="System.Globalization.CharUnicodeInfo.GetNumericValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3831c-210">包含要获取其数值的 Unicode 字符的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="3831c-210">The <see cref="T:System.String" /> containing the Unicode character for which to get the numeric value.</span></span></param>
        <param name="index"><span data-ttu-id="3831c-211">要获取其数值的 Unicode 字符的索引。</span><span class="sxs-lookup"><span data-stu-id="3831c-211">The index of the Unicode character for which to get the numeric value.</span></span></param>
        <summary><span data-ttu-id="3831c-212">获取与位于指定字符串的指定索引处的字符关联的数值。</span><span class="sxs-lookup"><span data-stu-id="3831c-212">Gets the numeric value associated with the character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="3831c-213">与位于指定字符串的指定索引处的字符关联的数值。</span><span class="sxs-lookup"><span data-stu-id="3831c-213">The numeric value associated with the character at the specified index of the specified string.</span></span>  
  
 <span data-ttu-id="3831c-214">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3831c-214">-or-</span></span>  
  
 <span data-ttu-id="3831c-215">如果位于指定字符串的指定索引处的字符不是数值型字符，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="3831c-215">-1, if the character at the specified index of the specified string is not a numeric character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831c-216">数值是仅适用于数字字符的 Unicode 字符属性，其中包括分数、下标、上标、罗马数字、货币分子、encircled 数和特定于脚本的数字。</span><span class="sxs-lookup"><span data-stu-id="3831c-216">Numeric value is a Unicode character property that applies only to numeric characters, which include fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span> <span data-ttu-id="3831c-217">有关 Unicode 字符的详细信息，请参阅 [Unicode 标准](https://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="3831c-217">For more information on Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="3831c-218">如果 <xref:System.Char> 位于的对象 `index` 是有效代理项对中的第一个字符，则该方法将 <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> 确定代理项对是否形成数字，如果存在，则返回它的数值。</span><span class="sxs-lookup"><span data-stu-id="3831c-218">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit, and, if it does, returns its numeric value.</span></span> <span data-ttu-id="3831c-219">例如，爱琴大学编号系统由代码点 U + 10107 到 U + 10133 组成。</span><span class="sxs-lookup"><span data-stu-id="3831c-219">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="3831c-220">下面的示例使用 <xref:System.Char.ConvertFromUtf32%2A> 方法实例化表示每个爱琴大学数的字符串。</span><span class="sxs-lookup"><span data-stu-id="3831c-220">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number.</span></span> <span data-ttu-id="3831c-221">如示例中的输出所示， <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> 如果向传递了爱琴大学数字的高代理项，则该方法将返回正确的数字值。</span><span class="sxs-lookup"><span data-stu-id="3831c-221">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.</span></span> <span data-ttu-id="3831c-222">但是，如果将其传递到低代理项，则它仅考虑隔离中的低代理项，并返回-1。</span><span class="sxs-lookup"><span data-stu-id="3831c-222">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/cs/getnumericvalue1.cs#3)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/vb/getnumericvalue1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="3831c-223">下面的代码示例显示了每种方法为不同类型的字符返回的值。</span><span class="sxs-lookup"><span data-stu-id="3831c-223">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3831c-224"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3831c-224"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3831c-225"><paramref name="index" /> 超出 <paramref name="s" /> 中的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="3831c-225"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3831c-226">获取 Unicode 字符的 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="3831c-226">Gets the Unicode category of a Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (ch As Char) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(char ch);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : char -&gt; System.Globalization.UnicodeCategory" Usage="System.Globalization.CharUnicodeInfo.GetUnicodeCategory ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="3831c-227">要获取其 Unicode 类别的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3831c-227">The Unicode character for which to get the Unicode category.</span></span></param>
        <summary><span data-ttu-id="3831c-228">获取指定字符的 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="3831c-228">Gets the Unicode category of the specified character.</span></span></summary>
        <returns><span data-ttu-id="3831c-229">指示指定字符类别的 <see cref="T:System.Globalization.UnicodeCategory" /> 值。</span><span class="sxs-lookup"><span data-stu-id="3831c-229">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the specified character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831c-230">Unicode 字符分为多个类别。</span><span class="sxs-lookup"><span data-stu-id="3831c-230">The Unicode characters are divided into categories.</span></span> <span data-ttu-id="3831c-231">字符的类别是其属性之一。</span><span class="sxs-lookup"><span data-stu-id="3831c-231">A character's category is one of its properties.</span></span> <span data-ttu-id="3831c-232">例如，字符可以是大写字母、小写字母、十进制数字、字母、数字、连接符标点、数学符号或货币符号。</span><span class="sxs-lookup"><span data-stu-id="3831c-232">For example, a character might be an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a connector punctuation, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="3831c-233"><xref:System.Globalization.UnicodeCategory>类返回 Unicode 字符的类别。</span><span class="sxs-lookup"><span data-stu-id="3831c-233">The <xref:System.Globalization.UnicodeCategory> class returns the category of a Unicode character.</span></span> <span data-ttu-id="3831c-234">有关 Unicode 字符的详细信息，请参阅 [Unicode 标准](https://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="3831c-234">For more information on Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="3831c-235"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A>方法假定对应于 `ch` 单个语言字符并返回其类别。</span><span class="sxs-lookup"><span data-stu-id="3831c-235">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A> method assumes that `ch` corresponds to a single linguistic character and returns its category.</span></span> <span data-ttu-id="3831c-236">这意味着，对于代理项对，它将返回， <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> 而不是代理项所属的类别。</span><span class="sxs-lookup"><span data-stu-id="3831c-236">This means that, for surrogate pairs, it returns <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> instead of the category to which the surrogate belongs.</span></span> <span data-ttu-id="3831c-237">例如，Ugaritic 字母表将码位 U + 10380 占据 U + 1039F。</span><span class="sxs-lookup"><span data-stu-id="3831c-237">For example, the Ugaritic alphabet occupies code points U+10380 to U+1039F.</span></span> <span data-ttu-id="3831c-238">下面的示例使用 <xref:System.Char.ConvertFromUtf32%2A> 方法实例化表示 UGARITIC 字母 ALPA (U + 10380) 的字符串，它是 UGARITIC 字母表中的第一个字母。</span><span class="sxs-lookup"><span data-stu-id="3831c-238">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents UGARITIC LETTER ALPA (U+10380), which is the first letter of the Ugaritic alphabet.</span></span> <span data-ttu-id="3831c-239">如示例的输出所示， <xref:System.Char.IsNumber%28System.Char%29> `false` 如果传递给此字符的高代理项或低代理项，则该方法返回。</span><span class="sxs-lookup"><span data-stu-id="3831c-239">As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either the high surrogate or the low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/cs/getunicodecategory1.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/vb/getunicodecategory1.vb#1)]  
  
 <span data-ttu-id="3831c-240">请注意， <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> <xref:System.Globalization.UnicodeCategory> <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> 在将特定字符作为参数传递时，并不总是返回与方法相同的值。</span><span class="sxs-lookup"><span data-stu-id="3831c-240">Note that <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method when passed a particular character as a parameter.</span></span> <span data-ttu-id="3831c-241"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>方法旨在反映 Unicode 标准的当前版本。</span><span class="sxs-lookup"><span data-stu-id="3831c-241">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="3831c-242">相反，虽然该 <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> 方法通常反映 Unicode 标准的当前版本，但它可能会基于早期版本的标准返回字符的类别，或者它可能返回不同于当前标准的类别，以保留向后兼容性。</span><span class="sxs-lookup"><span data-stu-id="3831c-242">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it might return a character's category based on a previous version of the standard, or it might return a category that differs from the current standard to preserve backward compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831c-243">下面的代码示例显示了每种方法为不同类型的字符返回的值。</span><span class="sxs-lookup"><span data-stu-id="3831c-243">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (codePoint As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(int codePoint);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : int -&gt; System.Globalization.UnicodeCategory" Usage="System.Globalization.CharUnicodeInfo.GetUnicodeCategory codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="codePoint"><span data-ttu-id="3831c-244">一个数字，表示 Unicode 字符的 32 位码位值。</span><span class="sxs-lookup"><span data-stu-id="3831c-244">A number representing the 32-bit code point value of the Unicode character.</span></span></param>
        <summary><span data-ttu-id="3831c-245">获取指定字符的 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="3831c-245">Gets the Unicode category of the specified character.</span></span></summary>
        <returns><span data-ttu-id="3831c-246">指示指定字符类别的 <see cref="T:System.Globalization.UnicodeCategory" /> 值。</span><span class="sxs-lookup"><span data-stu-id="3831c-246">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the specified character.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (s As String, index As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : string * int -&gt; System.Globalization.UnicodeCategory" Usage="System.Globalization.CharUnicodeInfo.GetUnicodeCategory (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3831c-247">包含要获取其 Unicode 类别的 Unicode 字符的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="3831c-247">The <see cref="T:System.String" /> containing the Unicode character for which to get the Unicode category.</span></span></param>
        <param name="index"><span data-ttu-id="3831c-248">要获取其 Unicode 类别的 Unicode 字符的索引。</span><span class="sxs-lookup"><span data-stu-id="3831c-248">The index of the Unicode character for which to get the Unicode category.</span></span></param>
        <summary><span data-ttu-id="3831c-249">获取位于指定字符串的指定索引处的字符的 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="3831c-249">Gets the Unicode category of the character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="3831c-250">指示位于指定字符串的指定索引处的字符类别的 <see cref="T:System.Globalization.UnicodeCategory" /> 值。</span><span class="sxs-lookup"><span data-stu-id="3831c-250">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the character at the specified index of the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831c-251">Unicode 字符分为多个类别。</span><span class="sxs-lookup"><span data-stu-id="3831c-251">The Unicode characters are divided into categories.</span></span> <span data-ttu-id="3831c-252">字符的类别是其属性之一。</span><span class="sxs-lookup"><span data-stu-id="3831c-252">A character's category is one of its properties.</span></span> <span data-ttu-id="3831c-253">例如，字符可以是大写字母、小写字母、十进制数字、字母、数字、连接符标点、数学符号或货币符号。</span><span class="sxs-lookup"><span data-stu-id="3831c-253">For example, a character might be an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a connector punctuation, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="3831c-254"><xref:System.Globalization.UnicodeCategory>类返回 Unicode 字符的类别。</span><span class="sxs-lookup"><span data-stu-id="3831c-254">The <xref:System.Globalization.UnicodeCategory> class returns the category of a Unicode character.</span></span> <span data-ttu-id="3831c-255">有关 Unicode 字符的详细信息，请参阅 [Unicode 标准](https://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="3831c-255">For more information on Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="3831c-256">如果 <xref:System.Char> 位置的对象 `index` 是有效代理项对的第一个字符，则该 <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> 方法将返回代理项对的 Unicode 类别，而不是返回 <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="3831c-256">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> method returns the Unicode category of the surrogate pair instead of returning <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831c-257">例如，Ugaritic 字母表将码位 U + 10380 占据 U + 1039F。</span><span class="sxs-lookup"><span data-stu-id="3831c-257">For example, the Ugaritic alphabet occupies code points U+10380 to U+1039F.</span></span> <span data-ttu-id="3831c-258">下面的示例使用 <xref:System.Char.ConvertFromUtf32%2A> 方法实例化表示 UGARITIC 字母 ALPA (U + 10380) 的字符串，它是 UGARITIC 字母表中的第一个字母。</span><span class="sxs-lookup"><span data-stu-id="3831c-258">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents UGARITIC LETTER ALPA (U+10380), which is the first letter of the Ugaritic alphabet.</span></span> <span data-ttu-id="3831c-259">如示例的输出所示，如果向 <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> 传递的 <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> 是此字符的高代理项，则该方法返回，这表示它会考虑代理项对。</span><span class="sxs-lookup"><span data-stu-id="3831c-259">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> method returns <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> if it is passed the high surrogate of this character, which indicates that it considers the surrogate pair.</span></span> <span data-ttu-id="3831c-260">但是，如果将其传递到低代理项，则它仅考虑隔离中的低代理项并返回 <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="3831c-260">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/cs/getunicodecategory1.cs#2)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/vb/getunicodecategory1.vb#2)]  
  
 <span data-ttu-id="3831c-261">请注意， <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> <xref:System.Globalization.UnicodeCategory> <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> 在将特定字符作为参数传递时，方法并不总是返回与方法相同的值。</span><span class="sxs-lookup"><span data-stu-id="3831c-261">Note that <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method when passed a particular character as a parameter.</span></span> <span data-ttu-id="3831c-262"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>方法旨在反映 Unicode 标准的当前版本。</span><span class="sxs-lookup"><span data-stu-id="3831c-262">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="3831c-263">相反，虽然该 <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> 方法通常反映 Unicode 标准的当前版本，但它可能会基于早期版本的标准返回字符的类别，或者它可能返回不同于当前标准的类别，以保留向后兼容性。</span><span class="sxs-lookup"><span data-stu-id="3831c-263">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it might return a character's category based on a previous version of the standard, or it might return a category that differs from the current standard to preserve backward compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831c-264">下面的代码示例显示了每种方法为不同类型的字符返回的值。</span><span class="sxs-lookup"><span data-stu-id="3831c-264">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3831c-265"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3831c-265"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3831c-266"><paramref name="index" /> 超出 <paramref name="s" /> 中的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="3831c-266"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
  </Members>
</Type>
