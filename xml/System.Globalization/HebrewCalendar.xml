<Type Name="HebrewCalendar" FullName="System.Globalization.HebrewCalendar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9cb14bdd067f68b4b9987793f3954745398a8f33" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="90002148" /></Metadata><TypeSignature Language="C#" Value="public class HebrewCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HebrewCalendar extends System.Globalization.Calendar" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.HebrewCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class HebrewCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class HebrewCalendar : System::Globalization::Calendar" />
  <TypeSignature Language="F#" Value="type HebrewCalendar = class&#xA;    inherit Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit HebrewCalendar extends System.Globalization.Calendar" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Globalization.Calendars" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Globalization.Calendars" FromVersion="4.1.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Globalization.Calendars" FromVersion="4.1.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Globalization.Calendars" FromVersion="4.1.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7240a-101">表示希伯来历。</span><span class="sxs-lookup"><span data-stu-id="7240a-101">Represents the Hebrew calendar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7240a-102">希伯来语可识别两个纪元： B.C.E。</span><span class="sxs-lookup"><span data-stu-id="7240a-102">The Hebrew calendar recognizes two eras: B.C.E.</span></span> <span data-ttu-id="7240a-103">在 common 年代) 和早上 (之前</span><span class="sxs-lookup"><span data-stu-id="7240a-103">(before the common era) and A.M.</span></span> <span data-ttu-id="7240a-104"> (拉丁语 "基督 Mundi"，这意味着 "世界年" ) 。</span><span class="sxs-lookup"><span data-stu-id="7240a-104">(Latin "Anno Mundi", which means "the year of the world").</span></span> <span data-ttu-id="7240a-105">此 <xref:System.Globalization.HebrewCalendar> 类实现仅识别当前纪元 (上午 ) ，希伯来年份5343到 5999 (2239 1583) 公历。</span><span class="sxs-lookup"><span data-stu-id="7240a-105">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the current era (A.M.) and the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7240a-106">有关使用 <xref:System.Globalization.HebrewCalendar> .NET Framework 中的类和其他 calendar 类的信息，请参阅使用 [日历](/dotnet/standard/datetime/working-with-calendars)。</span><span class="sxs-lookup"><span data-stu-id="7240a-106">For information about using the <xref:System.Globalization.HebrewCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](/dotnet/standard/datetime/working-with-calendars).</span></span>  
  
 <span data-ttu-id="7240a-107">在每个以19为间隔的年份结束的每个19年循环中，第三、第六、第8、第11、第14、第17和第19年是闰年。</span><span class="sxs-lookup"><span data-stu-id="7240a-107">In every 19-year cycle that ends with a year that is evenly divisible by 19, the 3rd, 6th, 8th, 11th, 14th, 17th, and 19th years are leap years.</span></span> <span data-ttu-id="7240a-108">一年的时间可能为353到355天，具体取决于 Jewish 假日的位置。</span><span class="sxs-lookup"><span data-stu-id="7240a-108">A common year can have from 353 to 355 days, depending on the placement of Jewish holidays.</span></span> <span data-ttu-id="7240a-109">闰年的时间可能为383到385天。</span><span class="sxs-lookup"><span data-stu-id="7240a-109">A leap year can have from 383 to 385 days.</span></span>  
  
 <span data-ttu-id="7240a-110">希伯来历在常见年份有12个月，在闰年中有13个月：</span><span class="sxs-lookup"><span data-stu-id="7240a-110">The Hebrew calendar has 12 months during common years and 13 months during leap years:</span></span>  
  
|<span data-ttu-id="7240a-111">GetMonth 值 (common year) </span><span class="sxs-lookup"><span data-stu-id="7240a-111">GetMonth value (common year)</span></span>|<span data-ttu-id="7240a-112">GetMonth 值 (闰年) </span><span class="sxs-lookup"><span data-stu-id="7240a-112">GetMonth value (leap year)</span></span>|<span data-ttu-id="7240a-113">Month</span><span class="sxs-lookup"><span data-stu-id="7240a-113">Month</span></span>|<span data-ttu-id="7240a-114">常见年份中的天数</span><span class="sxs-lookup"><span data-stu-id="7240a-114">Days in common years</span></span>|<span data-ttu-id="7240a-115">闰年中的天数</span><span class="sxs-lookup"><span data-stu-id="7240a-115">Days in leap years</span></span>|  
|------------------------------------|----------------------------------|-----------|--------------------------|------------------------|  
|<span data-ttu-id="7240a-116">1</span><span class="sxs-lookup"><span data-stu-id="7240a-116">1</span></span>|<span data-ttu-id="7240a-117">1</span><span class="sxs-lookup"><span data-stu-id="7240a-117">1</span></span>|<span data-ttu-id="7240a-118">תשרי (Tishrei) </span><span class="sxs-lookup"><span data-stu-id="7240a-118">תשרי (Tishrei)</span></span>|<span data-ttu-id="7240a-119">30</span><span class="sxs-lookup"><span data-stu-id="7240a-119">30</span></span>|<span data-ttu-id="7240a-120">30</span><span class="sxs-lookup"><span data-stu-id="7240a-120">30</span></span>|  
|<span data-ttu-id="7240a-121">2</span><span class="sxs-lookup"><span data-stu-id="7240a-121">2</span></span>|<span data-ttu-id="7240a-122">2</span><span class="sxs-lookup"><span data-stu-id="7240a-122">2</span></span>|<span data-ttu-id="7240a-123">חשון (Cheshvan) </span><span class="sxs-lookup"><span data-stu-id="7240a-123">חשון (Cheshvan)</span></span>|<span data-ttu-id="7240a-124">29/30</span><span class="sxs-lookup"><span data-stu-id="7240a-124">29/30</span></span>|<span data-ttu-id="7240a-125">29/30</span><span class="sxs-lookup"><span data-stu-id="7240a-125">29/30</span></span>|  
|<span data-ttu-id="7240a-126">3</span><span class="sxs-lookup"><span data-stu-id="7240a-126">3</span></span>|<span data-ttu-id="7240a-127">3</span><span class="sxs-lookup"><span data-stu-id="7240a-127">3</span></span>|<span data-ttu-id="7240a-128">כסלו (Kislev) </span><span class="sxs-lookup"><span data-stu-id="7240a-128">כסלו (Kislev)</span></span>|<span data-ttu-id="7240a-129">29/30</span><span class="sxs-lookup"><span data-stu-id="7240a-129">29/30</span></span>|<span data-ttu-id="7240a-130">29/30</span><span class="sxs-lookup"><span data-stu-id="7240a-130">29/30</span></span>|  
|<span data-ttu-id="7240a-131">4</span><span class="sxs-lookup"><span data-stu-id="7240a-131">4</span></span>|<span data-ttu-id="7240a-132">4</span><span class="sxs-lookup"><span data-stu-id="7240a-132">4</span></span>|<span data-ttu-id="7240a-133">טבת (Tevet) </span><span class="sxs-lookup"><span data-stu-id="7240a-133">טבת (Tevet)</span></span>|<span data-ttu-id="7240a-134">29</span><span class="sxs-lookup"><span data-stu-id="7240a-134">29</span></span>|<span data-ttu-id="7240a-135">29</span><span class="sxs-lookup"><span data-stu-id="7240a-135">29</span></span>|  
|<span data-ttu-id="7240a-136">5</span><span class="sxs-lookup"><span data-stu-id="7240a-136">5</span></span>|<span data-ttu-id="7240a-137">5</span><span class="sxs-lookup"><span data-stu-id="7240a-137">5</span></span>|<span data-ttu-id="7240a-138">שבט (Shevat) </span><span class="sxs-lookup"><span data-stu-id="7240a-138">שבט (Shevat)</span></span>|<span data-ttu-id="7240a-139">30</span><span class="sxs-lookup"><span data-stu-id="7240a-139">30</span></span>|<span data-ttu-id="7240a-140">30</span><span class="sxs-lookup"><span data-stu-id="7240a-140">30</span></span>|  
|<span data-ttu-id="7240a-141">6</span><span class="sxs-lookup"><span data-stu-id="7240a-141">6</span></span>|-|<span data-ttu-id="7240a-142">אדר (Adar) </span><span class="sxs-lookup"><span data-stu-id="7240a-142">אדר (Adar)</span></span>|<span data-ttu-id="7240a-143">29</span><span class="sxs-lookup"><span data-stu-id="7240a-143">29</span></span>|-|  
|-|<span data-ttu-id="7240a-144">6</span><span class="sxs-lookup"><span data-stu-id="7240a-144">6</span></span>|<span data-ttu-id="7240a-145">אדרא (Adar Alef) </span><span class="sxs-lookup"><span data-stu-id="7240a-145">אדר א (Adar Alef)</span></span>|-|<span data-ttu-id="7240a-146">30</span><span class="sxs-lookup"><span data-stu-id="7240a-146">30</span></span>|  
|-|<span data-ttu-id="7240a-147">7</span><span class="sxs-lookup"><span data-stu-id="7240a-147">7</span></span>|<span data-ttu-id="7240a-148">אדרב (Adar Beit) </span><span class="sxs-lookup"><span data-stu-id="7240a-148">אדר ב (Adar Beit)</span></span>|-|<span data-ttu-id="7240a-149">29</span><span class="sxs-lookup"><span data-stu-id="7240a-149">29</span></span>|  
|<span data-ttu-id="7240a-150">7</span><span class="sxs-lookup"><span data-stu-id="7240a-150">7</span></span>|<span data-ttu-id="7240a-151">8</span><span class="sxs-lookup"><span data-stu-id="7240a-151">8</span></span>|<span data-ttu-id="7240a-152">ניסן (Nissan) </span><span class="sxs-lookup"><span data-stu-id="7240a-152">ניסן (Nissan)</span></span>|<span data-ttu-id="7240a-153">30</span><span class="sxs-lookup"><span data-stu-id="7240a-153">30</span></span>|<span data-ttu-id="7240a-154">30</span><span class="sxs-lookup"><span data-stu-id="7240a-154">30</span></span>|  
|<span data-ttu-id="7240a-155">8</span><span class="sxs-lookup"><span data-stu-id="7240a-155">8</span></span>|<span data-ttu-id="7240a-156">9</span><span class="sxs-lookup"><span data-stu-id="7240a-156">9</span></span>|<span data-ttu-id="7240a-157">אייר (Iyar) </span><span class="sxs-lookup"><span data-stu-id="7240a-157">אייר (Iyar)</span></span>|<span data-ttu-id="7240a-158">29</span><span class="sxs-lookup"><span data-stu-id="7240a-158">29</span></span>|<span data-ttu-id="7240a-159">29</span><span class="sxs-lookup"><span data-stu-id="7240a-159">29</span></span>|  
|<span data-ttu-id="7240a-160">9</span><span class="sxs-lookup"><span data-stu-id="7240a-160">9</span></span>|<span data-ttu-id="7240a-161">10</span><span class="sxs-lookup"><span data-stu-id="7240a-161">10</span></span>|<span data-ttu-id="7240a-162">סיון (Sivan) </span><span class="sxs-lookup"><span data-stu-id="7240a-162">סיון (Sivan)</span></span>|<span data-ttu-id="7240a-163">30</span><span class="sxs-lookup"><span data-stu-id="7240a-163">30</span></span>|<span data-ttu-id="7240a-164">30</span><span class="sxs-lookup"><span data-stu-id="7240a-164">30</span></span>|  
|<span data-ttu-id="7240a-165">10</span><span class="sxs-lookup"><span data-stu-id="7240a-165">10</span></span>|<span data-ttu-id="7240a-166">11</span><span class="sxs-lookup"><span data-stu-id="7240a-166">11</span></span>|<span data-ttu-id="7240a-167">תמוז (Tamuz) </span><span class="sxs-lookup"><span data-stu-id="7240a-167">תמוז (Tamuz)</span></span>|<span data-ttu-id="7240a-168">29</span><span class="sxs-lookup"><span data-stu-id="7240a-168">29</span></span>|<span data-ttu-id="7240a-169">29</span><span class="sxs-lookup"><span data-stu-id="7240a-169">29</span></span>|  
|<span data-ttu-id="7240a-170">11</span><span class="sxs-lookup"><span data-stu-id="7240a-170">11</span></span>|<span data-ttu-id="7240a-171">12</span><span class="sxs-lookup"><span data-stu-id="7240a-171">12</span></span>|<span data-ttu-id="7240a-172">אב (Av) </span><span class="sxs-lookup"><span data-stu-id="7240a-172">אב (Av)</span></span>|<span data-ttu-id="7240a-173">30</span><span class="sxs-lookup"><span data-stu-id="7240a-173">30</span></span>|<span data-ttu-id="7240a-174">30</span><span class="sxs-lookup"><span data-stu-id="7240a-174">30</span></span>|  
|<span data-ttu-id="7240a-175">12</span><span class="sxs-lookup"><span data-stu-id="7240a-175">12</span></span>|<span data-ttu-id="7240a-176">13</span><span class="sxs-lookup"><span data-stu-id="7240a-176">13</span></span>|<span data-ttu-id="7240a-177">אלול (Elul) </span><span class="sxs-lookup"><span data-stu-id="7240a-177">אלול (Elul)</span></span>|<span data-ttu-id="7240a-178">29</span><span class="sxs-lookup"><span data-stu-id="7240a-178">29</span></span>|<span data-ttu-id="7240a-179">29</span><span class="sxs-lookup"><span data-stu-id="7240a-179">29</span></span>|  
  
 <span data-ttu-id="7240a-180">Cheshvan 和 Kislev 中的日期因 Jewish 假日的位置而异。</span><span class="sxs-lookup"><span data-stu-id="7240a-180">The days in Cheshvan and Kislev vary depending on the placement of Jewish holidays.</span></span> <span data-ttu-id="7240a-181">在闰年期间，Adar 被 Adar Alef 替换为30天，Adar Beit 替换为29天。</span><span class="sxs-lookup"><span data-stu-id="7240a-181">During leap years, Adar is replaced by Adar Alef with 30 days and Adar Beit with 29 days.</span></span> <span data-ttu-id="7240a-182">Adar Alef 被视为闰年。</span><span class="sxs-lookup"><span data-stu-id="7240a-182">Adar Alef is considered the leap month.</span></span> <span data-ttu-id="7240a-183">Adar Alef 和 Adar Beit 中的所有天的最后一天都被视为闰日;也就是说，该 <xref:System.Globalization.HebrewCalendar.IsLeapDay%2A> 方法将在 `true` 这天后返回。</span><span class="sxs-lookup"><span data-stu-id="7240a-183">The last day of Adar Alef and all the days in Adar Beit are considered leap days; that is, the <xref:System.Globalization.HebrewCalendar.IsLeapDay%2A> method returns `true` for these days.</span></span>  
  
 <span data-ttu-id="7240a-184">日期公元2001年1月1日</span><span class="sxs-lookup"><span data-stu-id="7240a-184">The date January 1, 2001 A.D.</span></span> <span data-ttu-id="7240a-185">在公历中，相当于5761年凌晨年 Tevet 的第六天。</span><span class="sxs-lookup"><span data-stu-id="7240a-185">in the Gregorian calendar is equivalent to the sixth day of Tevet in the year 5761 A.M.</span></span> <span data-ttu-id="7240a-186">在希伯来日历中。</span><span class="sxs-lookup"><span data-stu-id="7240a-186">in the Hebrew calendar.</span></span>  
  
 <span data-ttu-id="7240a-187">每个都 <xref:System.Globalization.CultureInfo> 支持一组日历。</span><span class="sxs-lookup"><span data-stu-id="7240a-187">Each <xref:System.Globalization.CultureInfo> supports a set of calendars.</span></span> <span data-ttu-id="7240a-188"><xref:System.Globalization.CultureInfo.Calendar%2A>属性返回区域性的默认日历， <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> 属性返回一个数组，该数组包含该区域性支持的所有日历。</span><span class="sxs-lookup"><span data-stu-id="7240a-188">The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture.</span></span> <span data-ttu-id="7240a-189">若要更改使用的日历 <xref:System.Globalization.CultureInfo> ，应用程序应将的 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 属性设置 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 为新的 <xref:System.Globalization.Calendar> 。</span><span class="sxs-lookup"><span data-stu-id="7240a-189">To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> to a new <xref:System.Globalization.Calendar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7240a-190">下面的示例创建一个文件，其中包含类支持的日期范围 <xref:System.Globalization.HebrewCalendar> ，并显示5772年每个月的天数。</span><span class="sxs-lookup"><span data-stu-id="7240a-190">The following example creates a file that contains the date ranges supported by the <xref:System.Globalization.HebrewCalendar> class, and displays the number of days in each month of the year 5772.</span></span>  
  
 [!code-csharp[System.Globalization.HebrewCalendar.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.hebrewcalendar.class/cs/example1.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.hebrewcalendar.class/vb/example1.vb#1)]  
  
 <span data-ttu-id="7240a-191">该示例实例化一个 <xref:System.Globalization.HebrewCalendar> 对象，并使其成为希伯来语 (以色列) 对象的当前日历 <xref:System.Globalization.CultureInfo> 。</span><span class="sxs-lookup"><span data-stu-id="7240a-191">The example instantiates a <xref:System.Globalization.HebrewCalendar> object and makes it the current calendar of a Hebrew (Israel) <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="7240a-192">然后，它会使希伯来 (以色列) 当前线程的区域性。</span><span class="sxs-lookup"><span data-stu-id="7240a-192">It then makes Hebrew (Israel) the current thread culture.</span></span> <span data-ttu-id="7240a-193">这会导致公共语言运行时解释与希伯来历相关的所有日期和时间。</span><span class="sxs-lookup"><span data-stu-id="7240a-193">This causes the common language runtime to interpret all dates and times in relation to the Hebrew calendar.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
    <related type="Article" href="/dotnet/standard/datetime/working-with-calendars"><span data-ttu-id="7240a-194">使用日历</span><span class="sxs-lookup"><span data-stu-id="7240a-194">Working with Calendars</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a"><span data-ttu-id="7240a-195">  示例：日历周范围实用工具</span><span class="sxs-lookup"><span data-stu-id="7240a-195">Sample: Calendar Week Range Utility</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HebrewCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HebrewCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7240a-196">初始化 <see cref="T:System.Globalization.HebrewCalendar" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7240a-196">Initializes a new instance of the <see cref="T:System.Globalization.HebrewCalendar" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberSignature Language="F#" Value="override this.AddMonths : DateTime * int -&gt; DateTime" Usage="hebrewCalendar.AddMonths (time, months)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="7240a-197"><see cref="T:System.DateTime" />，将向其添加 <paramref name="months" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-197">The <see cref="T:System.DateTime" /> to which to add <paramref name="months" />.</span></span></param>
        <param name="months"><span data-ttu-id="7240a-198">要添加的月数。</span><span class="sxs-lookup"><span data-stu-id="7240a-198">The number of months to add.</span></span></param>
        <summary><span data-ttu-id="7240a-199">返回与指定 <see cref="T:System.DateTime" /> 相距指定月数的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-199">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="7240a-200">将指定月数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-200">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7240a-201">此 <xref:System.Globalization.HebrewCalendar> 类实现仅识别公历) 的希伯来年5343到 5999 (1583 到2239。</span><span class="sxs-lookup"><span data-stu-id="7240a-201">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
 <span data-ttu-id="7240a-202">如果生成的日期不是结果年份的结果月份中的有效日期，则结果中的日部分 <xref:System.DateTime> 会受到影响。</span><span class="sxs-lookup"><span data-stu-id="7240a-202">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="7240a-203">它将更改为生成的年份中的最后一个有效日。</span><span class="sxs-lookup"><span data-stu-id="7240a-203">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="7240a-204">如果生成的月份超出了指定的年份，则结果中的年份部分 <xref:System.DateTime> 会受到影响 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="7240a-204">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="7240a-205">此实现仅支持当前纪元。</span><span class="sxs-lookup"><span data-stu-id="7240a-205">This implementation supports only the current era.</span></span> <span data-ttu-id="7240a-206">因此， <xref:System.ArgumentException> 如果生成的年份超出指定的纪元，则会引发 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="7240a-206">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="7240a-207">生成的的时间部分与 <xref:System.DateTime> 指定的相同 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="7240a-207">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="7240a-208">例如，如果指定的月份是 Av，其中包含30天，则指定的日期是该月的30天，而参数的值 `months` 为5，则结果年份比指定年份多一，结果月份是 Tevet，而结果日为第29天，即 Tevet 中的最后一天。</span><span class="sxs-lookup"><span data-stu-id="7240a-208">For example, if the specified month is Av, which has 30 days, the specified day is the 30th day of that month, and the value of the `months` parameter is 5, the resulting year is one more than the specified year, the resulting month is Tevet, and the resulting day is the 29th day, which is the last day in Tevet.</span></span>  
  
 <span data-ttu-id="7240a-209">如果参数的值 `months` 为负，则生成的值 <xref:System.DateTime> 早于指定的 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="7240a-209">If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="7240a-210"><xref:System.DateTime.Kind%2A>返回的值的属性 <xref:System.DateTime> 始终相等 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="7240a-210">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7240a-211">可以 <xref:System.DateTime.Kind%2A> `time` 通过调用方法来保留参数的属性 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> ，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="7240a-211">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="7240a-212">下面的代码示例根据希伯来历显示了的多个组件的值 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="7240a-212">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7240a-213">生成的 <see cref="T:System.DateTime" /> 超出了支持的范围。</span><span class="sxs-lookup"><span data-stu-id="7240a-213">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7240a-214"><paramref name="months" /> 小于 -120,000 或大于 120,000。</span><span class="sxs-lookup"><span data-stu-id="7240a-214"><paramref name="months" /> is less than -120,000 or greater than 120,000.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.HebrewCalendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberSignature Language="F#" Value="override this.AddYears : DateTime * int -&gt; DateTime" Usage="hebrewCalendar.AddYears (time, years)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="7240a-215"><see cref="T:System.DateTime" />，将向其添加 <paramref name="years" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-215">The <see cref="T:System.DateTime" /> to which to add <paramref name="years" />.</span></span></param>
        <param name="years"><span data-ttu-id="7240a-216">要添加的年数。</span><span class="sxs-lookup"><span data-stu-id="7240a-216">The number of years to add.</span></span></param>
        <summary><span data-ttu-id="7240a-217">返回与指定 <see cref="T:System.DateTime" /> 相距指定年数的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-217">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="7240a-218">将指定年数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-218">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7240a-219">此 <xref:System.Globalization.HebrewCalendar> 类实现仅识别公历) 的希伯来年5343到 5999 (1583 到2239。</span><span class="sxs-lookup"><span data-stu-id="7240a-219">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
 <span data-ttu-id="7240a-220">如果生成的日期不是结果年份的结果月份中的有效日期，则结果中的日部分 <xref:System.DateTime> 会受到影响。</span><span class="sxs-lookup"><span data-stu-id="7240a-220">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="7240a-221">它将更改为生成的年份中的最后一个有效日。</span><span class="sxs-lookup"><span data-stu-id="7240a-221">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="7240a-222">例如，Cheshvan 可以有29天或30天，具体取决于 Jewish 假日的位置。</span><span class="sxs-lookup"><span data-stu-id="7240a-222">For example, Cheshvan can have 29 or 30 days, depending on the placement of Jewish holidays.</span></span> <span data-ttu-id="7240a-223">假设在当前年份中 Cheshvan 有30天，在下一年中为29。</span><span class="sxs-lookup"><span data-stu-id="7240a-223">Suppose that Cheshvan has 30 days in the current year and 29 in the following year.</span></span> <span data-ttu-id="7240a-224">如果指定的日期是当前年份中 Cheshvan 的第30天，并且的值 `years` 为1，则生成的日期将是下一年 Cheshvan 的第29天。</span><span class="sxs-lookup"><span data-stu-id="7240a-224">If the specified date is the 30th day of Cheshvan in the current year and the value of `years` is 1, the resulting date will be the 29th day of Cheshvan in the following year.</span></span>  
  
 <span data-ttu-id="7240a-225"><xref:System.DateTime>如果结果月份不是结果年份中的有效月份，则生成的的月份部分会受到影响。</span><span class="sxs-lookup"><span data-stu-id="7240a-225">The month part of the resulting <xref:System.DateTime> is affected if the resulting month is not a valid month in the resulting year.</span></span> <span data-ttu-id="7240a-226">它将更改为结果年份中的最后一个有效月份。</span><span class="sxs-lookup"><span data-stu-id="7240a-226">It is changed to the last valid month in the resulting year.</span></span> <span data-ttu-id="7240a-227">例如，如果参数中的月份 `time` 是闰年的第13个月，值 `years` 为1，则结果中的月份 <xref:System.DateTime> 是下一年的第12个月，即非闰年。</span><span class="sxs-lookup"><span data-stu-id="7240a-227">For example, if the month in the `time` parameter is the 13th month of a leap year and the value of `years` is 1, the month in the resulting <xref:System.DateTime> is the 12th month of the following year, which is a non-leap year.</span></span> <span data-ttu-id="7240a-228">请注意，即使月份部分未发生更改，它仍可能引用不同的月份。</span><span class="sxs-lookup"><span data-stu-id="7240a-228">Note that even when the month part does not change, it might still refer to a different month.</span></span> <span data-ttu-id="7240a-229">例如，Adar Beit 是闰年的第七个月，但 Nissan 是共同几个月的第7个月。</span><span class="sxs-lookup"><span data-stu-id="7240a-229">For example, Adar Beit is the 7th month in leap years, but Nissan is the 7th month in common years.</span></span>  
  
 <span data-ttu-id="7240a-230">此实现仅支持当前纪元。</span><span class="sxs-lookup"><span data-stu-id="7240a-230">This implementation supports only the current era.</span></span> <span data-ttu-id="7240a-231">因此， <xref:System.ArgumentException> 如果生成的年份超出指定的纪元，则会引发 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="7240a-231">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="7240a-232">生成的的时间部分与 <xref:System.DateTime> 指定的相同 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="7240a-232">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="7240a-233">如果 `years` 为负，则生成的 <xref:System.DateTime> 早于指定的 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="7240a-233">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="7240a-234"><xref:System.DateTime.Kind%2A>返回的值的属性 <xref:System.DateTime> 始终相等 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="7240a-234">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7240a-235">可以 <xref:System.DateTime.Kind%2A> `time` 通过调用方法来保留参数的属性 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> ，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="7240a-235">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 <span data-ttu-id="7240a-236">下面的代码示例根据希伯来历显示了的多个组件的值 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="7240a-236">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7240a-237">生成的 <see cref="T:System.DateTime" /> 超出了支持的范围。</span><span class="sxs-lookup"><span data-stu-id="7240a-237">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.HebrewCalendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HebrewCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmType : System.Globalization.CalendarAlgorithmType" Usage="System.Globalization.HebrewCalendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7240a-238">获取一个值，该值指示当前日历是阳历、阴历还是二者的组合。</span><span class="sxs-lookup"><span data-stu-id="7240a-238">Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</span></span></summary>
        <value><span data-ttu-id="7240a-239">始终返回 <see cref="F:System.Globalization.CalendarAlgorithmType.LunisolarCalendar" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-239">Always returns <see cref="F:System.Globalization.CalendarAlgorithmType.LunisolarCalendar" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7240a-240">下面的示例使用反射来实例化 <xref:System.Globalization.Calendar> .NET Framework 中找到的每个类型，并显示其 <xref:System.Globalization.Calendar.AlgorithmType%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="7240a-240">The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HebrewCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Eras : int[]" Usage="System.Globalization.HebrewCalendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7240a-241">获取 <see cref="T:System.Globalization.HebrewCalendar" /> 中的纪元列表。</span><span class="sxs-lookup"><span data-stu-id="7240a-241">Gets the list of eras in the <see cref="T:System.Globalization.HebrewCalendar" />.</span></span></summary>
        <value><span data-ttu-id="7240a-242">表示 <see cref="T:System.Globalization.HebrewCalendar" /> 类型中的纪元的整数数组。</span><span class="sxs-lookup"><span data-stu-id="7240a-242">An array of integers that represents the eras in the <see cref="T:System.Globalization.HebrewCalendar" /> type.</span></span> <span data-ttu-id="7240a-243">返回值始终是包含一个等于 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 的元素的数组。</span><span class="sxs-lookup"><span data-stu-id="7240a-243">The return value is always an array containing one element equal to <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7240a-244">希伯来语可识别两个纪元： B.C.E。</span><span class="sxs-lookup"><span data-stu-id="7240a-244">The Hebrew calendar recognizes two eras: B.C.E.</span></span> <span data-ttu-id="7240a-245">在 common 年代) 和早上 (之前</span><span class="sxs-lookup"><span data-stu-id="7240a-245">(before the common era) and A.M.</span></span> <span data-ttu-id="7240a-246"> (拉丁语 "基督 Mundi"，这意味着 "世界年" ) 。</span><span class="sxs-lookup"><span data-stu-id="7240a-246">(Latin "Anno Mundi", which means "the year of the world").</span></span> <span data-ttu-id="7240a-247">此 <xref:System.Globalization.HebrewCalendar> 类实现仅识别当前纪元 (am ) 。</span><span class="sxs-lookup"><span data-stu-id="7240a-247">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the current era (A.M.).</span></span> <span data-ttu-id="7240a-248">此属性始终返回只包含一个元素的数组。</span><span class="sxs-lookup"><span data-stu-id="7240a-248">This property always returns an array with only one element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfMonth : DateTime -&gt; int" Usage="hebrewCalendar.GetDayOfMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="7240a-249">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-249">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="7240a-250">返回指定 <see cref="T:System.DateTime" /> 中的月中日期。</span><span class="sxs-lookup"><span data-stu-id="7240a-250">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="7240a-251">1 到 30 之间的一个整数，用于表示指定的 <see cref="T:System.DateTime" /> 中的月中日期。</span><span class="sxs-lookup"><span data-stu-id="7240a-251">An integer from 1 to 30 that represents the day of the month in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7240a-252">下面的代码示例根据希伯来历显示了的多个组件的值 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="7240a-252">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfWeek : DateTime -&gt; DayOfWeek" Usage="hebrewCalendar.GetDayOfWeek time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="7240a-253">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-253">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="7240a-254">返回指定 <see cref="T:System.DateTime" /> 中的周中日期。</span><span class="sxs-lookup"><span data-stu-id="7240a-254">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="7240a-255">一个 <see cref="T:System.DayOfWeek" /> 值，用于表示指定的 <see cref="T:System.DateTime" /> 中的周中日期。</span><span class="sxs-lookup"><span data-stu-id="7240a-255">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7240a-256">这些 <xref:System.DayOfWeek> 值如下所示：</span><span class="sxs-lookup"><span data-stu-id="7240a-256">The <xref:System.DayOfWeek> values are as follows:</span></span>  
  
|<span data-ttu-id="7240a-257">DayOfWeek 值</span><span class="sxs-lookup"><span data-stu-id="7240a-257">DayOfWeek value</span></span>|<span data-ttu-id="7240a-258">每周的某一日</span><span class="sxs-lookup"><span data-stu-id="7240a-258">Day of Week</span></span>|  
|---------------------|-----------------|  
|<span data-ttu-id="7240a-259">星期日</span><span class="sxs-lookup"><span data-stu-id="7240a-259">Sunday</span></span>|<span data-ttu-id="7240a-260">יוםראשון (Yom Rishon) </span><span class="sxs-lookup"><span data-stu-id="7240a-260">יום ראשון (Yom Rishon)</span></span>|  
|<span data-ttu-id="7240a-261">星期一</span><span class="sxs-lookup"><span data-stu-id="7240a-261">Monday</span></span>|<span data-ttu-id="7240a-262">יוםשני (Yom Sheni) </span><span class="sxs-lookup"><span data-stu-id="7240a-262">יום שני (Yom Sheni)</span></span>|  
|<span data-ttu-id="7240a-263">星期二</span><span class="sxs-lookup"><span data-stu-id="7240a-263">Tuesday</span></span>|<span data-ttu-id="7240a-264">יוםשלישי (Yom Shlishi) </span><span class="sxs-lookup"><span data-stu-id="7240a-264">יום שלישי (Yom Shlishi)</span></span>|  
|<span data-ttu-id="7240a-265">星期三</span><span class="sxs-lookup"><span data-stu-id="7240a-265">Wednesday</span></span>|<span data-ttu-id="7240a-266">יוםרביעי (Yom Reviee) </span><span class="sxs-lookup"><span data-stu-id="7240a-266">יום רביעי (Yom Reviee)</span></span>|  
|<span data-ttu-id="7240a-267">星期四</span><span class="sxs-lookup"><span data-stu-id="7240a-267">Thursday</span></span>|<span data-ttu-id="7240a-268">יוםחמישי (Yom Chamishi) </span><span class="sxs-lookup"><span data-stu-id="7240a-268">יום חמישי (Yom Chamishi)</span></span>|  
|<span data-ttu-id="7240a-269">星期五</span><span class="sxs-lookup"><span data-stu-id="7240a-269">Friday</span></span>|<span data-ttu-id="7240a-270">יוםשישי (Yom Shishi) </span><span class="sxs-lookup"><span data-stu-id="7240a-270">יום שישי (Yom Shishi)</span></span>|  
|<span data-ttu-id="7240a-271">星期六</span><span class="sxs-lookup"><span data-stu-id="7240a-271">Saturday</span></span>|<span data-ttu-id="7240a-272">שבת (Shabat) </span><span class="sxs-lookup"><span data-stu-id="7240a-272">שבת (Shabat)</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7240a-273">下面的代码示例根据希伯来历显示了的多个组件的值 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="7240a-273">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfYear : DateTime -&gt; int" Usage="hebrewCalendar.GetDayOfYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="7240a-274">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-274">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="7240a-275">返回指定 <see cref="T:System.DateTime" /> 中的日期是该年中的第几天。</span><span class="sxs-lookup"><span data-stu-id="7240a-275">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="7240a-276">1 到 385 之间的一个整数，表示指定 <see cref="T:System.DateTime" /> 中的日期是该年中的第几天。</span><span class="sxs-lookup"><span data-stu-id="7240a-276">An integer from 1 to 385 that represents the day of the year in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7240a-277">一年中的某一天定义为从该年的第一天开始的天数。</span><span class="sxs-lookup"><span data-stu-id="7240a-277">The day of the year is defined as the number of days from the first day of the year.</span></span> <span data-ttu-id="7240a-278">例如， <xref:System.Globalization.HebrewCalendar.GetDayOfYear%2A> 对于第一个月的第一天，返回1，在 <xref:System.Globalization.HebrewCalendar.GetDayOfYear%2A> 上个月的最后一天，返回该年份中的总天数，这与返回的值相同 <xref:System.Globalization.HebrewCalendar.GetDaysInYear%2A> 。</span><span class="sxs-lookup"><span data-stu-id="7240a-278">For example, <xref:System.Globalization.HebrewCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.HebrewCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year, which is the same value returned by <xref:System.Globalization.HebrewCalendar.GetDaysInYear%2A>.</span></span>  
  
 <span data-ttu-id="7240a-279">此 <xref:System.Globalization.HebrewCalendar> 类实现仅识别公历) 的希伯来年5343到 5999 (1583 到2239。</span><span class="sxs-lookup"><span data-stu-id="7240a-279">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7240a-280">下面的代码示例根据希伯来历显示了的多个组件的值 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="7240a-280">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7240a-281"><paramref name="time" /> 在公历中早于 1583 年 9 月 17 日，或大于 <see cref="P:System.Globalization.HebrewCalendar.MaxSupportedDateTime" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-281"><paramref name="time" /> is earlier than September 17, 1583 in the Gregorian calendar, or greater than <see cref="P:System.Globalization.HebrewCalendar.MaxSupportedDateTime" />.</span></span></exception>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInMonth : int * int * int -&gt; int" Usage="hebrewCalendar.GetDaysInMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="7240a-282">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="7240a-282">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="7240a-283">1 到 13 之间的一个整数，用于表示月份。</span><span class="sxs-lookup"><span data-stu-id="7240a-283">An integer from 1 to 13 that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="7240a-284">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="7240a-284">An integer that represents the era.</span></span> <span data-ttu-id="7240a-285">指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 或 <see langword="Calendar.Eras[Calendar.CurrentEra]" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-285">Specify either <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> or <see langword="Calendar.Eras[Calendar.CurrentEra]" />.</span></span></param>
        <summary><span data-ttu-id="7240a-286">返回指定纪元中指定年份的指定月份中的天数。</span><span class="sxs-lookup"><span data-stu-id="7240a-286">Returns the number of days in the specified month in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="7240a-287">指定纪元中指定年份的指定月份中的天数。</span><span class="sxs-lookup"><span data-stu-id="7240a-287">The number of days in the specified month in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7240a-288">例如，对于 Cheshvan，此方法返回29或30，具体取决于 Jewish 假日的位置。</span><span class="sxs-lookup"><span data-stu-id="7240a-288">For example, this method returns 29 or 30 for Cheshvan, depending on the placement of Jewish holidays.</span></span>  
  
 <span data-ttu-id="7240a-289">此 <xref:System.Globalization.HebrewCalendar> 类实现仅识别公历) 的希伯来年5343到 5999 (1583 到2239。</span><span class="sxs-lookup"><span data-stu-id="7240a-289">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7240a-290">下面的代码示例将在 `GetDaysInMonth` 每个纪元的五年中，为第二个月调用。</span><span class="sxs-lookup"><span data-stu-id="7240a-290">The following code example calls `GetDaysInMonth` for the second month in each of five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar.GetDaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.GetDaysInMonth/CPP/hebrewcalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.GetDaysInMonth/CS/hebrewcalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.GetDaysInMonth/VB/hebrewcalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7240a-291"><paramref name="year" />、<paramref name="month" /> 或 <paramref name="era" /> 超出了当前 <see cref="T:System.Globalization.HebrewCalendar" /> 对象支持的范围。</span><span class="sxs-lookup"><span data-stu-id="7240a-291"><paramref name="year" />, <paramref name="month" />, or <paramref name="era" /> is outside the range supported by the current <see cref="T:System.Globalization.HebrewCalendar" /> object.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInYear : int * int -&gt; int" Usage="hebrewCalendar.GetDaysInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="7240a-292">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="7240a-292">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="7240a-293">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="7240a-293">An integer that represents the era.</span></span> <span data-ttu-id="7240a-294">指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 或 <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-294">Specify either <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> or <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />.</span></span></param>
        <summary><span data-ttu-id="7240a-295">返回指定纪元中指定年份的天数。</span><span class="sxs-lookup"><span data-stu-id="7240a-295">Returns the number of days in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="7240a-296">指定纪元中指定年份的天数。</span><span class="sxs-lookup"><span data-stu-id="7240a-296">The number of days in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7240a-297">例如，此方法返回从353到355或从383到385的整数，具体取决于 Jewish 假日的位置以及是否 `year` 为闰年。</span><span class="sxs-lookup"><span data-stu-id="7240a-297">For example, this method returns an integer from 353 to 355 or from 383 to 385, depending on the placement of Jewish holidays and depending on whether `year` is a leap year.</span></span>  
  
 <span data-ttu-id="7240a-298">此 <xref:System.Globalization.HebrewCalendar> 类实现仅识别公历) 的希伯来年5343到 5999 (1583 到2239。</span><span class="sxs-lookup"><span data-stu-id="7240a-298">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7240a-299">下面的代码示例将 `GetDaysInYear` 在每个纪元中调用5年。</span><span class="sxs-lookup"><span data-stu-id="7240a-299">The following code example calls `GetDaysInYear` for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar_GetDaysInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_GetDaysInYear/CPP/hebrewcalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar_GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_GetDaysInYear/CS/hebrewcalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar_GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_GetDaysInYear/VB/hebrewcalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7240a-300"><paramref name="year" /> 或 <paramref name="era" /> 超出了当前 <see cref="T:System.Globalization.HebrewCalendar" /> 对象支持的范围。</span><span class="sxs-lookup"><span data-stu-id="7240a-300"><paramref name="year" /> or <paramref name="era" /> is outside the range supported by the current <see cref="T:System.Globalization.HebrewCalendar" /> object.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetEra : DateTime -&gt; int" Usage="hebrewCalendar.GetEra time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="7240a-301">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-301">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="7240a-302">返回指定 <see cref="T:System.DateTime" /> 中的纪元。</span><span class="sxs-lookup"><span data-stu-id="7240a-302">Returns the era in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="7240a-303">一个整数，用于表示指定 <see cref="T:System.DateTime" /> 中的纪元。</span><span class="sxs-lookup"><span data-stu-id="7240a-303">An integer that represents the era in the specified <see cref="T:System.DateTime" />.</span></span> <span data-ttu-id="7240a-304">返回值始终为 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-304">The return value is always <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7240a-305">希伯来语可识别两个纪元： B.C.E。</span><span class="sxs-lookup"><span data-stu-id="7240a-305">The Hebrew calendar recognizes two eras: B.C.E.</span></span> <span data-ttu-id="7240a-306">在 common 年代) 和早上 (之前</span><span class="sxs-lookup"><span data-stu-id="7240a-306">(before the common era) and A.M.</span></span> <span data-ttu-id="7240a-307"> (拉丁语 "基督 Mundi"，这意味着 "世界年" ) 。</span><span class="sxs-lookup"><span data-stu-id="7240a-307">(Latin "Anno Mundi", which means "the year of the world").</span></span> <span data-ttu-id="7240a-308">此 <xref:System.Globalization.HebrewCalendar> 类实现仅识别当前纪元 (上午 ) 并且只有公历年份5343到 5999 (1583 为公历) 中的2239。</span><span class="sxs-lookup"><span data-stu-id="7240a-308">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the current era (A.M.) and only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7240a-309">下面的代码示例根据希伯来历显示了的多个组件的值 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="7240a-309">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetLeapMonth : int * int -&gt; int" Usage="hebrewCalendar.GetLeapMonth (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="era" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="7240a-310">年份。</span><span class="sxs-lookup"><span data-stu-id="7240a-310">A year.</span></span></param>
        <param name="era"><span data-ttu-id="7240a-311">纪元。</span><span class="sxs-lookup"><span data-stu-id="7240a-311">An era.</span></span> <span data-ttu-id="7240a-312">指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 或 <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-312">Specify either <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> or <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />.</span></span></param>
        <summary><span data-ttu-id="7240a-313">计算指定纪元年份的闰月。</span><span class="sxs-lookup"><span data-stu-id="7240a-313">Calculates the leap month for a specified year and era.</span></span></summary>
        <returns><span data-ttu-id="7240a-314">一个正整数，用于表示指定纪元年份中的闰月。</span><span class="sxs-lookup"><span data-stu-id="7240a-314">A positive integer that indicates the leap month in the specified year and era.</span></span> <span data-ttu-id="7240a-315">如果 <paramref name="year" /> 和 <paramref name="era" /> 参数指定闰年，则返回值为 7；如果不是闰年，则为 0。</span><span class="sxs-lookup"><span data-stu-id="7240a-315">The return value is 7 if the <paramref name="year" /> and <paramref name="era" /> parameters specify a leap year, or 0 if the year is not a leap year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7240a-316">在支持闰月的概念的日历中，闰月可以在特定月份之后或在一年中的任何月份之后发生。</span><span class="sxs-lookup"><span data-stu-id="7240a-316">In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.</span></span> <span data-ttu-id="7240a-317">例如， <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> 方法返回1到13之间的一个数字，用于指示与指定日期关联的月份。</span><span class="sxs-lookup"><span data-stu-id="7240a-317">For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns a number between 1 and 13 that indicates the month associated with a specified date.</span></span> <span data-ttu-id="7240a-318">如果一年的第八个月和第九个月之间有一个闰月，则该方法将为 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> 第八个月返回8，为第八个月返回9，在第9个月返回10个月。</span><span class="sxs-lookup"><span data-stu-id="7240a-318">If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7240a-319"><paramref name="era" /> 不是 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 或 <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-319"><paramref name="era" /> is not <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> or <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />.</span></span>  
  
<span data-ttu-id="7240a-320">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7240a-320">-or-</span></span> 
 <span data-ttu-id="7240a-321"><paramref name="year" /> 小于希伯来历年份 5343 或大于希伯来历年份 5999。</span><span class="sxs-lookup"><span data-stu-id="7240a-321"><paramref name="year" /> is less than the Hebrew calendar year 5343 or greater than the Hebrew calendar year 5999.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetMonth : DateTime -&gt; int" Usage="hebrewCalendar.GetMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="7240a-322">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-322">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="7240a-323">返回指定 <see cref="T:System.DateTime" /> 中的月份。</span><span class="sxs-lookup"><span data-stu-id="7240a-323">Returns the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="7240a-324">1 到 13 之间的一个整数，用于表示指定的 <see cref="T:System.DateTime" /> 中的月份。</span><span class="sxs-lookup"><span data-stu-id="7240a-324">An integer from 1 to 13 that represents the month in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7240a-325">下面的代码示例根据希伯来历显示了的多个组件的值 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="7240a-325">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7240a-326"><paramref name="time" /> 小于 <see cref="P:System.Globalization.HebrewCalendar.MinSupportedDateTime" /> 或大于 <see cref="P:System.Globalization.HebrewCalendar.MaxSupportedDateTime" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-326"><paramref name="time" /> is less than <see cref="P:System.Globalization.HebrewCalendar.MinSupportedDateTime" /> or greater than <see cref="P:System.Globalization.HebrewCalendar.MaxSupportedDateTime" />.</span></span></exception>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetMonthsInYear : int * int -&gt; int" Usage="hebrewCalendar.GetMonthsInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="7240a-327">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="7240a-327">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="7240a-328">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="7240a-328">An integer that represents the era.</span></span> <span data-ttu-id="7240a-329">指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 或 <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-329">Specify either <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> or <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />.</span></span></param>
        <summary><span data-ttu-id="7240a-330">返回指定纪元中指定年份的月数。</span><span class="sxs-lookup"><span data-stu-id="7240a-330">Returns the number of months in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="7240a-331">指定纪元中指定年份的月数。</span><span class="sxs-lookup"><span data-stu-id="7240a-331">The number of months in the specified year in the specified era.</span></span> <span data-ttu-id="7240a-332">返回值是 12（在平年中）或 13（在闰年中）。</span><span class="sxs-lookup"><span data-stu-id="7240a-332">The return value is either 12 in a common year, or 13 in a leap year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7240a-333">此 <xref:System.Globalization.HebrewCalendar> 类实现仅识别公历) 的希伯来年5343到 5999 (1583 到2239。</span><span class="sxs-lookup"><span data-stu-id="7240a-333">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7240a-334">下面的代码示例将 `GetMonthsInYear` 在每个纪元中调用5年。</span><span class="sxs-lookup"><span data-stu-id="7240a-334">The following code example calls `GetMonthsInYear` for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar.GetMonthsInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.GetMonthsInYear/CPP/hebrewcalendar_getmonthsinyear.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar.GetMonthsInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.GetMonthsInYear/CS/hebrewcalendar_getmonthsinyear.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar.GetMonthsInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.GetMonthsInYear/VB/hebrewcalendar_getmonthsinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7240a-335"><paramref name="year" /> 或 <paramref name="era" /> 超出了当前 <see cref="T:System.Globalization.HebrewCalendar" /> 对象支持的范围。</span><span class="sxs-lookup"><span data-stu-id="7240a-335"><paramref name="year" /> or <paramref name="era" /> is outside the range supported by the current <see cref="T:System.Globalization.HebrewCalendar" /> object.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetYear : DateTime -&gt; int" Usage="hebrewCalendar.GetYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="7240a-336">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-336">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="7240a-337">返回指定 <see cref="T:System.DateTime" /> 值中的年份。</span><span class="sxs-lookup"><span data-stu-id="7240a-337">Returns the year in the specified <see cref="T:System.DateTime" /> value.</span></span></summary>
        <returns><span data-ttu-id="7240a-338">一个整数，用于表示指定的 <see cref="T:System.DateTime" /> 中的年份。</span><span class="sxs-lookup"><span data-stu-id="7240a-338">An integer that represents the year in the specified <see cref="T:System.DateTime" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7240a-339">此 <xref:System.Globalization.HebrewCalendar> 类实现仅识别公历) 的希伯来年5343到 5999 (1583 到2239。</span><span class="sxs-lookup"><span data-stu-id="7240a-339">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7240a-340">下面的代码示例根据希伯来历显示了的多个组件的值 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="7240a-340">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7240a-341"><paramref name="time" /> 超出了当前 <see cref="T:System.Globalization.HebrewCalendar" /> 对象支持的范围。</span><span class="sxs-lookup"><span data-stu-id="7240a-341"><paramref name="time" /> is outside the range supported by the current <see cref="T:System.Globalization.HebrewCalendar" /> object.</span></span></exception>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="HebrewEra">
      <MemberSignature Language="C#" Value="public static readonly int HebrewEra;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 HebrewEra" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.HebrewCalendar.HebrewEra" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HebrewEra As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int HebrewEra;" />
      <MemberSignature Language="F#" Value=" staticval mutable HebrewEra : int" Usage="System.Globalization.HebrewCalendar.HebrewEra" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7240a-342">表示当前纪元。</span><span class="sxs-lookup"><span data-stu-id="7240a-342">Represents the current era.</span></span> <span data-ttu-id="7240a-343">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="7240a-343">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7240a-344">此字段的值为1。</span><span class="sxs-lookup"><span data-stu-id="7240a-344">The value of this field is 1.</span></span>  
  
 <span data-ttu-id="7240a-345">希伯来语可识别两个纪元： B.C.E。</span><span class="sxs-lookup"><span data-stu-id="7240a-345">The Hebrew calendar recognizes two eras: B.C.E.</span></span> <span data-ttu-id="7240a-346">在 common 年代) 和早上 (之前</span><span class="sxs-lookup"><span data-stu-id="7240a-346">(before the common era) and A.M.</span></span> <span data-ttu-id="7240a-347"> (拉丁语 "基督 Mundi"，这意味着 "世界年" ) 。</span><span class="sxs-lookup"><span data-stu-id="7240a-347">(Latin "Anno Mundi", which means "the year of the world").</span></span> <span data-ttu-id="7240a-348">此 <xref:System.Globalization.HebrewCalendar> 类实现仅识别当前纪元 (am ) 。</span><span class="sxs-lookup"><span data-stu-id="7240a-348">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the current era (A.M.).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapDay : int * int * int * int -&gt; bool" Usage="hebrewCalendar.IsLeapDay (year, month, day, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="7240a-349">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="7240a-349">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="7240a-350">1 到 13 之间的一个整数，用于表示月份。</span><span class="sxs-lookup"><span data-stu-id="7240a-350">An integer from 1 to 13 that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="7240a-351">1 到 30 之间的一个整数，用于表示月中日期。</span><span class="sxs-lookup"><span data-stu-id="7240a-351">An integer from 1 to 30 that represents the day.</span></span></param>
        <param name="era"><span data-ttu-id="7240a-352">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="7240a-352">An integer that represents the era.</span></span> <span data-ttu-id="7240a-353">指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 或 <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-353">Specify either <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> or <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />.</span></span></param>
        <summary><span data-ttu-id="7240a-354">确定指定纪元中的指定日期是否为闰日。</span><span class="sxs-lookup"><span data-stu-id="7240a-354">Determines whether the specified date in the specified era is a leap day.</span></span></summary>
        <returns><span data-ttu-id="7240a-355">如果指定的日期是闰日，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-355"><see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7240a-356">此 <xref:System.Globalization.HebrewCalendar> 类实现仅识别公历) 的希伯来年5343到 5999 (1583 到2239。</span><span class="sxs-lookup"><span data-stu-id="7240a-356">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
 <span data-ttu-id="7240a-357">在每个以19为间隔的年份结束的每个19年循环中，第三、第六、第8、第11、第14、第17和第19年是闰年。</span><span class="sxs-lookup"><span data-stu-id="7240a-357">In every 19-year cycle that ends with a year that is evenly divisible by 19, the 3rd, 6th, 8th, 11th, 14th, 17th, and 19th years are leap years.</span></span> <span data-ttu-id="7240a-358">一年的时间可能为353到355天，具体取决于 Jewish 假日的位置。</span><span class="sxs-lookup"><span data-stu-id="7240a-358">A common year can have from 353 to 355 days, depending on the placement of Jewish holidays.</span></span> <span data-ttu-id="7240a-359">闰年的时间可能为383到385天。</span><span class="sxs-lookup"><span data-stu-id="7240a-359">A leap year can have from 383 to 385 days.</span></span>  
  
 <span data-ttu-id="7240a-360">闰日是指仅在闰年发生的日期。</span><span class="sxs-lookup"><span data-stu-id="7240a-360">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="7240a-361">在希伯来历中，Adar Alef 的最后一天和 Adar Beit 中的所有日期均被视为闰日。</span><span class="sxs-lookup"><span data-stu-id="7240a-361">In the Hebrew calendar, the last day of Adar Alef and all the days in Adar Beit are considered leap days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7240a-362">下面的代码示例将在 `IsLeapDay` 第二个月的最后一天 (2 月) ，每个纪元5年。</span><span class="sxs-lookup"><span data-stu-id="7240a-362">The following code example calls `IsLeapDay` for the last day of the second month (February) for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapDay/CPP/hebrewcalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapDay/CS/hebrewcalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapDay/VB/hebrewcalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7240a-363"><paramref name="year" />、<paramref name="month" />、<paramref name="day" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="7240a-363"><paramref name="year" />, <paramref name="month" />, <paramref name="day" />, or <paramref name="era" /> is outside the range supported by this calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapMonth : int * int * int -&gt; bool" Usage="hebrewCalendar.IsLeapMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="7240a-364">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="7240a-364">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="7240a-365">1 到 13 之间的一个整数，用于表示月份。</span><span class="sxs-lookup"><span data-stu-id="7240a-365">An integer from 1 to 13 that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="7240a-366">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="7240a-366">An integer that represents the era.</span></span> <span data-ttu-id="7240a-367">指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 或 <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-367">Specify either <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> or <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />.</span></span></param>
        <summary><span data-ttu-id="7240a-368">确定指定纪元中指定年份的指定月份是否为闰月。</span><span class="sxs-lookup"><span data-stu-id="7240a-368">Determines whether the specified month in the specified year in the specified era is a leap month.</span></span></summary>
        <returns><span data-ttu-id="7240a-369">如果指定的月份是闰月，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-369"><see langword="true" /> if the specified month is a leap month; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7240a-370">此 <xref:System.Globalization.HebrewCalendar> 类实现仅识别公历) 的希伯来年5343到 5999 (1583 到2239。</span><span class="sxs-lookup"><span data-stu-id="7240a-370">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
 <span data-ttu-id="7240a-371">在每个以19为间隔的年份结束的每个19年循环中，第三、第六、第8、第11、第14、第17和第19年是闰年。</span><span class="sxs-lookup"><span data-stu-id="7240a-371">In every 19-year cycle that ends with a year that is evenly divisible by 19, the 3rd, 6th, 8th, 11th, 14th, 17th, and 19th years are leap years.</span></span> <span data-ttu-id="7240a-372">一年的时间可能为353到355天，具体取决于 Jewish 假日的位置。</span><span class="sxs-lookup"><span data-stu-id="7240a-372">A common year can have from 353 to 355 days, depending on the placement of Jewish holidays.</span></span> <span data-ttu-id="7240a-373">闰年的时间可能为383到385天。</span><span class="sxs-lookup"><span data-stu-id="7240a-373">A leap year can have from 383 to 385 days.</span></span>  
  
 <span data-ttu-id="7240a-374">闰月是只在闰年发生的整个月份。</span><span class="sxs-lookup"><span data-stu-id="7240a-374">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="7240a-375">在希伯来历中，Adar Beit 是唯一的闰月。</span><span class="sxs-lookup"><span data-stu-id="7240a-375">In the Hebrew calendar, Adar Beit is the only leap month.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7240a-376">下面的代码示例在 `IsLeapMonth` 当前纪元中的五年内调用所有月份。</span><span class="sxs-lookup"><span data-stu-id="7240a-376">The following code example calls `IsLeapMonth` for all the months in five years in the current era.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar.IsLeapMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapMonth/CPP/hebrewcalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar.IsLeapMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapMonth/CS/hebrewcalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar.IsLeapMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapMonth/VB/hebrewcalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7240a-377"><paramref name="year" />、<paramref name="month" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="7240a-377"><paramref name="year" />, <paramref name="month" />, or <paramref name="era" /> is outside the range supported by this calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapYear : int * int -&gt; bool" Usage="hebrewCalendar.IsLeapYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="7240a-378">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="7240a-378">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="7240a-379">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="7240a-379">An integer that represents the era.</span></span> <span data-ttu-id="7240a-380">指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 或 <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-380">Specify either <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> or <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />.</span></span></param>
        <summary><span data-ttu-id="7240a-381">确定指定纪元中的指定年份是否为闰年。</span><span class="sxs-lookup"><span data-stu-id="7240a-381">Determines whether the specified year in the specified era is a leap year.</span></span></summary>
        <returns><span data-ttu-id="7240a-382">如果指定的年是闰年，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-382"><see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7240a-383">此 <xref:System.Globalization.HebrewCalendar> 类实现仅识别公历) 的希伯来年5343到 5999 (1583 到2239。</span><span class="sxs-lookup"><span data-stu-id="7240a-383">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
 <span data-ttu-id="7240a-384">在每个以19为间隔的年份结束的每个19年循环中，第三、第六、第8、第11、第14、第17和第19年是闰年。</span><span class="sxs-lookup"><span data-stu-id="7240a-384">In every 19-year cycle that ends with a year that is evenly divisible by 19, the 3rd, 6th, 8th, 11th, 14th, 17th, and 19th years are leap years.</span></span> <span data-ttu-id="7240a-385">一年的时间可能为353到355天，具体取决于 Jewish 假日的位置。</span><span class="sxs-lookup"><span data-stu-id="7240a-385">A common year can have from 353 to 355 days, depending on the placement of Jewish holidays.</span></span> <span data-ttu-id="7240a-386">闰年的时间可能为383到385天。</span><span class="sxs-lookup"><span data-stu-id="7240a-386">A leap year can have from 383 to 385 days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7240a-387">下面的代码示例将 `IsLeapYear` 在每个纪元中的5年内调用。</span><span class="sxs-lookup"><span data-stu-id="7240a-387">The following code example calls `IsLeapYear` for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar.IsLeapYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapYear/CPP/hebrewcalendar_isleapyear.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapYear/CS/hebrewcalendar_isleapyear.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapYear/VB/hebrewcalendar_isleapyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7240a-388"><paramref name="year" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="7240a-388"><paramref name="year" /> or <paramref name="era" /> is outside the range supported by this calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HebrewCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSupportedDateTime : DateTime" Usage="System.Globalization.HebrewCalendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7240a-389">获取 <see cref="T:System.Globalization.HebrewCalendar" /> 类型支持的最晚日期和时间。</span><span class="sxs-lookup"><span data-stu-id="7240a-389">Gets the latest date and time supported by the <see cref="T:System.Globalization.HebrewCalendar" /> type.</span></span></summary>
        <value><span data-ttu-id="7240a-390">类型支持的最晚日期和时间 <see cref="T:System.Globalization.HebrewCalendar" /> ，该日期和时间相当于公元2239年9月29日的最后一刻</span><span class="sxs-lookup"><span data-stu-id="7240a-390">The latest date and time supported by the <see cref="T:System.Globalization.HebrewCalendar" /> type, which is equivalent to the last moment of September, 29, 2239 C.E.</span></span> <span data-ttu-id="7240a-391">公历。</span><span class="sxs-lookup"><span data-stu-id="7240a-391">in the Gregorian calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7240a-392">下面的代码示例获取日历的最小值和最大值。</span><span class="sxs-lookup"><span data-stu-id="7240a-392">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_MinMax/CPP/hebrewcalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_MinMax/CS/hebrewcalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_MinMax/VB/hebrewcalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HebrewCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSupportedDateTime : DateTime" Usage="System.Globalization.HebrewCalendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7240a-393">获取 <see cref="T:System.Globalization.HebrewCalendar" /> 类型支持的最早日期和时间。</span><span class="sxs-lookup"><span data-stu-id="7240a-393">Gets the earliest date and time supported by the <see cref="T:System.Globalization.HebrewCalendar" /> type.</span></span></summary>
        <value><span data-ttu-id="7240a-394">类型支持的最早日期和时间，该日期和时间等效于 1 <see cref="T:System.Globalization.HebrewCalendar" /> 月1日，公元1583</span><span class="sxs-lookup"><span data-stu-id="7240a-394">The earliest date and time supported by the <see cref="T:System.Globalization.HebrewCalendar" /> type, which is equivalent to the first moment of January, 1, 1583 C.E.</span></span> <span data-ttu-id="7240a-395">公历。</span><span class="sxs-lookup"><span data-stu-id="7240a-395">in the Gregorian calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7240a-396">Microsoft Visual Basic 将一天中的时间表示为类型所支持的最小日期的指定时间 <xref:System.DateTime> ，即公元0001年1月1日</span><span class="sxs-lookup"><span data-stu-id="7240a-396">Microsoft Visual Basic represents time of day as the specified time on the minimum date supported by the <xref:System.DateTime> type, which is January 1, 0001 C.E.</span></span> <span data-ttu-id="7240a-397">但是，该 <xref:System.Globalization.HebrewCalendar> 类型不支持该最小日期。</span><span class="sxs-lookup"><span data-stu-id="7240a-397">However, the <xref:System.Globalization.HebrewCalendar> type does not support that minimum date.</span></span> <span data-ttu-id="7240a-398">因此，如果您调用方法以使用当前日历设置日期的时间，但不指定格式说明符，则格式设置将使用 ISO 8601 可排序 ( "s" ) 日期/时间模式格式说明符，而不是默认的常规 ( "G" ) 日期/时间模式格式说明符。</span><span class="sxs-lookup"><span data-stu-id="7240a-398">Consequently, if you call a method to format the time of day using the current calendar but you do not specify a format specifier, formatting uses the ISO 8601 sortable ("s") date/time pattern format specifier instead of the default general ("G") date/time pattern format specifier.</span></span> <span data-ttu-id="7240a-399">有关详细信息，请参阅 [标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="7240a-399">For more information, see [Standard Date and Time Format Strings](/dotnet/standard/base-types/standard-date-and-time-format-strings).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7240a-400">下面的代码示例获取日历的最小值和最大值。</span><span class="sxs-lookup"><span data-stu-id="7240a-400">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HebrewCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_MinMax/CPP/hebrewcalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_MinMax/CS/hebrewcalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_MinMax/VB/hebrewcalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="F#" Value="override this.ToDateTime : int * int * int * int * int * int * int * int -&gt; DateTime" Usage="hebrewCalendar.ToDateTime (year, month, day, hour, minute, second, millisecond, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="7240a-401">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="7240a-401">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="7240a-402">1 到 13 之间的一个整数，用于表示月份。</span><span class="sxs-lookup"><span data-stu-id="7240a-402">An integer from 1 to 13 that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="7240a-403">1 到 30 之间的一个整数，用于表示月中日期。</span><span class="sxs-lookup"><span data-stu-id="7240a-403">An integer from 1 to 30 that represents the day.</span></span></param>
        <param name="hour"><span data-ttu-id="7240a-404">0 到 23 之间的一个整数，用于表示小时。</span><span class="sxs-lookup"><span data-stu-id="7240a-404">An integer from 0 to 23 that represents the hour.</span></span></param>
        <param name="minute"><span data-ttu-id="7240a-405">0 到 59 之间的一个整数，用于表示分钟。</span><span class="sxs-lookup"><span data-stu-id="7240a-405">An integer from 0 to 59 that represents the minute.</span></span></param>
        <param name="second"><span data-ttu-id="7240a-406">0 到 59 之间的一个整数，用于表示秒。</span><span class="sxs-lookup"><span data-stu-id="7240a-406">An integer from 0 to 59 that represents the second.</span></span></param>
        <param name="millisecond"><span data-ttu-id="7240a-407">0 到 999 之间的一个整数，用于表示毫秒。</span><span class="sxs-lookup"><span data-stu-id="7240a-407">An integer from 0 to 999 that represents the millisecond.</span></span></param>
        <param name="era"><span data-ttu-id="7240a-408">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="7240a-408">An integer that represents the era.</span></span> <span data-ttu-id="7240a-409">指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> 或 <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-409">Specify either <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> or <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />.</span></span></param>
        <summary><span data-ttu-id="7240a-410">返回设置为指定纪元中指定日期和时间的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-410">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span></span></summary>
        <returns><span data-ttu-id="7240a-411">设置为当前纪元中指定日期和时间的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-411">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7240a-412"><xref:System.Globalization.HebrewCalendar.ToDateTime%2A>方法非常有用，因为它可以将当前日历中的任何日期转换为公历日期。</span><span class="sxs-lookup"><span data-stu-id="7240a-412">The <xref:System.Globalization.HebrewCalendar.ToDateTime%2A> method is useful because it can convert any date in the current calendar to a Gregorian calendar date.</span></span> <span data-ttu-id="7240a-413">以后可以使用公历日期来比较不同日历中的日期或在特定日历中创建等效日期。</span><span class="sxs-lookup"><span data-stu-id="7240a-413">The Gregorian date can subsequently be used, for example, to compare dates in different calendars or create an equivalent date in a particular calendar.</span></span>  
  
 <span data-ttu-id="7240a-414">此 <xref:System.Globalization.HebrewCalendar> 类实现仅识别公历) 的希伯来年5343到 5999 (1583 到2239。</span><span class="sxs-lookup"><span data-stu-id="7240a-414">This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 (1583 to 2239 in the Gregorian calendar).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7240a-415"><paramref name="year" />、<paramref name="month" />、<paramref name="day" /> 或 <paramref name="era" /> 超出了当前 <see cref="T:System.Globalization.HebrewCalendar" /> 对象支持的范围。</span><span class="sxs-lookup"><span data-stu-id="7240a-415"><paramref name="year" />, <paramref name="month" />, <paramref name="day" /> or <paramref name="era" /> is outside the range supported by the current <see cref="T:System.Globalization.HebrewCalendar" /> object.</span></span>  
  
<span data-ttu-id="7240a-416">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7240a-416">-or-</span></span> 
 <span data-ttu-id="7240a-417"><paramref name="hour" /> 小于 0 或大于 23。</span><span class="sxs-lookup"><span data-stu-id="7240a-417"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="7240a-418">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7240a-418">-or-</span></span> 
 <span data-ttu-id="7240a-419"><paramref name="minute" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="7240a-419"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="7240a-420">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7240a-420">-or-</span></span> 
 <span data-ttu-id="7240a-421"><paramref name="second" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="7240a-421"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="7240a-422">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7240a-422">-or-</span></span> 
 <span data-ttu-id="7240a-423"><paramref name="millisecond" /> 小于 0 或大于 999。</span><span class="sxs-lookup"><span data-stu-id="7240a-423"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberSignature Language="F#" Value="override this.ToFourDigitYear : int -&gt; int" Usage="hebrewCalendar.ToFourDigitYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="7240a-424">从 0 到 99 的两位数年份，或者从 5343 到 5999 的四位数希伯来历年份。</span><span class="sxs-lookup"><span data-stu-id="7240a-424">A 2-digit year from 0 through 99, or a 4-digit Hebrew calendar year from 5343 through 5999.</span></span></param>
        <summary><span data-ttu-id="7240a-425">使用 <see cref="P:System.Globalization.HebrewCalendar.TwoDigitYearMax" /> 属性将指定的年份转换为四位数年份，以确定相应的纪元。</span><span class="sxs-lookup"><span data-stu-id="7240a-425">Converts the specified year to a 4-digit year by using the <see cref="P:System.Globalization.HebrewCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span></span></summary>
        <returns><span data-ttu-id="7240a-426">如果 <paramref name="year" /> 参数是两位数年份，则返回值是对应的四位数年份。</span><span class="sxs-lookup"><span data-stu-id="7240a-426">If the <paramref name="year" /> parameter is a 2-digit year, the return value is the corresponding 4-digit year.</span></span> <span data-ttu-id="7240a-427">如果 <paramref name="year" /> 参数是四位数年份，则返回值是未更改的 <paramref name="year" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="7240a-427">If the <paramref name="year" /> parameter is a 4-digit year, the return value is the unchanged <paramref name="year" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7240a-428"><xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A>方法使用 `year` 参数、 <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> 属性和年份来计算四位数年份。</span><span class="sxs-lookup"><span data-stu-id="7240a-428">The <xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A> method uses the `year` parameter, the <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> property, and a year to calculate a 4-digit year.</span></span> <span data-ttu-id="7240a-429">通过 `year` 在该100年范围内查找参数的唯一匹配项来确定纪元。</span><span class="sxs-lookup"><span data-stu-id="7240a-429">The century is determined by finding the sole occurrence of the `year` parameter within that 100-year range.</span></span> <span data-ttu-id="7240a-430">例如，如果 <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> 设置为5729，则100年范围是从5630到5729。</span><span class="sxs-lookup"><span data-stu-id="7240a-430">For example, if <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> is set to 5729, the 100-year range is from 5630 to 5729.</span></span> <span data-ttu-id="7240a-431">因此，值30被解释为5630，而值29则解释为5729。</span><span class="sxs-lookup"><span data-stu-id="7240a-431">Therefore, a value of 30 is interpreted as 5630, while a value of 29 is interpreted as 5729.</span></span>  
  
 <span data-ttu-id="7240a-432">如果 <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> 属性具有特殊值99，则该 <xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A> 方法将忽略 "控制面板" 中 "区域和语言选项" 中的设置，并返回 `year` 未更改的参数值。</span><span class="sxs-lookup"><span data-stu-id="7240a-432">If the <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> property has the special value 99, the <xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A> method ignores the settings in the regional and language options in Control Panel and returns the value of the `year` parameter unchanged.</span></span>  
  
 <span data-ttu-id="7240a-433"><xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A> 支持两位数年份或四位数年份。</span><span class="sxs-lookup"><span data-stu-id="7240a-433"><xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year.</span></span> <span data-ttu-id="7240a-434">如果将两位数的年份值 (小于 100) ，则会使方法根据表示相应世纪的值将值转换为四位值 <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> 。</span><span class="sxs-lookup"><span data-stu-id="7240a-434">Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> value representing the appropriate century.</span></span> <span data-ttu-id="7240a-435">如果应用程序提供了在支持的日历范围内的四位数年份值 <xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A> ，则该方法将返回实际输入值。</span><span class="sxs-lookup"><span data-stu-id="7240a-435">If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A>, the method returns the actual input value.</span></span> <span data-ttu-id="7240a-436">如果应用程序提供了一个在支持的日历范围之外的四位数值，或者如果它提供负值，则该方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7240a-436">If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7240a-437"><paramref name="year" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="7240a-437"><paramref name="year" /> is less than 0.</span></span>  
  
<span data-ttu-id="7240a-438">- 或 -</span><span class="sxs-lookup"><span data-stu-id="7240a-438">-or-</span></span> 
 <span data-ttu-id="7240a-439"><paramref name="year" /> 小于 <see cref="P:System.Globalization.HebrewCalendar.MinSupportedDateTime" /> 或大于 <see cref="P:System.Globalization.HebrewCalendar.MaxSupportedDateTime" />。</span><span class="sxs-lookup"><span data-stu-id="7240a-439"><paramref name="year" /> is less than <see cref="P:System.Globalization.HebrewCalendar.MinSupportedDateTime" /> or greater than <see cref="P:System.Globalization.HebrewCalendar.MaxSupportedDateTime" />.</span></span></exception>
        <altmember cref="P:System.Globalization.HebrewCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HebrewCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TwoDigitYearMax : int with get, set" Usage="System.Globalization.HebrewCalendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7240a-440">获取或设置可以用两位数年份表示的 100 年范围内的最后一年。</span><span class="sxs-lookup"><span data-stu-id="7240a-440">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span></span></summary>
        <value><span data-ttu-id="7240a-441">可以用两位数年份表示的 100 年范围内的最后一年。</span><span class="sxs-lookup"><span data-stu-id="7240a-441">The last year of a 100-year range that can be represented by a 2-digit year.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7240a-442"><xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A>属性允许将两位数的年份正确翻译为四位数年份。</span><span class="sxs-lookup"><span data-stu-id="7240a-442">The <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> property allows a 2-digit year to be properly translated to a 4-digit year.</span></span> <span data-ttu-id="7240a-443">例如，如果将此属性设置为5729，则100年范围是从5630到5729。</span><span class="sxs-lookup"><span data-stu-id="7240a-443">For example, if this property is set to 5729, the 100-year range is from 5630 to 5729.</span></span> <span data-ttu-id="7240a-444">因此，两位数值30被解释为5630，而两位数字的值29则解释为5729。</span><span class="sxs-lookup"><span data-stu-id="7240a-444">Therefore, a 2-digit value of 30 is interpreted as 5630, while a 2-digit value of 29 is interpreted as 5729.</span></span>  
  
 <span data-ttu-id="7240a-445">此属性的初始值派生自控制面板的 "区域和语言选项" 部分中的设置。</span><span class="sxs-lookup"><span data-stu-id="7240a-445">The initial value of this property is derived from the settings in the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="7240a-446">如果初始系统设置在应用程序的生存期内发生更改，则 <xref:System.Globalization.HebrewCalendar> 类不会自动检测更改。</span><span class="sxs-lookup"><span data-stu-id="7240a-446">If the initial system setting changes during the life of your application the <xref:System.Globalization.HebrewCalendar> class does not automatically detect the change.</span></span>  
  
 <span data-ttu-id="7240a-447">特殊值99使 <xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A> 方法忽略系统设置并返回指定年份不变。</span><span class="sxs-lookup"><span data-stu-id="7240a-447">The special value 99 causes the <xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A> method to ignore the system settings and return the specified year unchanged.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7240a-448">当前 <see cref="T:System.Globalization.HebrewCalendar" /> 对象为只读。</span><span class="sxs-lookup"><span data-stu-id="7240a-448">The current <see cref="T:System.Globalization.HebrewCalendar" /> object is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7240a-449">在设置操作中，希伯来历年数值小于 5343 而不是 99，或者大于 5999。</span><span class="sxs-lookup"><span data-stu-id="7240a-449">In a set operation, the Hebrew calendar year value is less than 5343 but is not 99, or the year value is greater than 5999.</span></span></exception>
        <altmember cref="M:System.Globalization.HebrewCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>
