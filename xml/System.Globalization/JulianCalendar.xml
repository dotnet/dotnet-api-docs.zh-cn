<Type Name="JulianCalendar" FullName="System.Globalization.JulianCalendar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="509fe88c08100b716027b0e74c6c0862a98c7157" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83959474" /></Metadata><TypeSignature Language="C#" Value="public class JulianCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JulianCalendar extends System.Globalization.Calendar" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.JulianCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class JulianCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class JulianCalendar : System::Globalization::Calendar" />
  <TypeSignature Language="F#" Value="type JulianCalendar = class&#xA;    inherit Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit JulianCalendar extends System.Globalization.Calendar" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Globalization.Calendars" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Globalization.Calendars" FromVersion="4.1.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Globalization.Calendars" FromVersion="4.1.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Globalization.Calendars" FromVersion="4.1.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d51bb-101">表示儒略历。</span><span class="sxs-lookup"><span data-stu-id="d51bb-101">Represents the Julian calendar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d51bb-102">在45公元前中，恺凭订购了日历改革，这将导致日历称为儒略历日历。</span><span class="sxs-lookup"><span data-stu-id="d51bb-102">In 45 B.C., Julius Caesar ordered a calendar reform, which resulted in the calendar called the Julian calendar.</span></span> <span data-ttu-id="d51bb-103">儒略历是公历的前置日历。</span><span class="sxs-lookup"><span data-stu-id="d51bb-103">The Julian calendar is the predecessor of the Gregorian calendar.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d51bb-104">有关在 .NET Framework 中使用 <xref:System.Globalization.JulianCalendar> 类和其他 calendar 类的信息，请参阅使用[日历](/dotnet/standard/datetime/working-with-calendars)。</span><span class="sxs-lookup"><span data-stu-id="d51bb-104">For information about using the <xref:System.Globalization.JulianCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](/dotnet/standard/datetime/working-with-calendars).</span></span>  
  
 <span data-ttu-id="d51bb-105"><xref:System.Globalization.JulianCalendar> 类仅识别当前纪元。</span><span class="sxs-lookup"><span data-stu-id="d51bb-105">The <xref:System.Globalization.JulianCalendar> class recognizes only the current era.</span></span>  
  
 <span data-ttu-id="d51bb-106">与公历不同，儒略历将闰年定义为按四整除并且无例外的年份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-106">Unlike the Gregorian calendar, the Julian calendar defines a leap year as a year that is evenly divisible by four with no exceptions.</span></span> <span data-ttu-id="d51bb-107">因此，日历每128年的某一天不准确。</span><span class="sxs-lookup"><span data-stu-id="d51bb-107">Therefore, the calendar is inaccurate by one day every 128 years.</span></span> <span data-ttu-id="d51bb-108">一个常见年份有365天，闰年有366天。</span><span class="sxs-lookup"><span data-stu-id="d51bb-108">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="d51bb-109">与公历类似，儒略历包含12个月，每个月28到31天：1月（31天），二月（28或29天），三月（31天），4月（30天），5月（31天），6月（30天），7月（31天），8月（31天），11月（30天），12月（31天）。</span><span class="sxs-lookup"><span data-stu-id="d51bb-109">Like the Gregorian calendar, the Julian calendar has 12 months with 28 to 31 days each: January (31 days), February (28 or 29 days), March (31 days), April (30 days), May (31 days), June (30 days), July (31 days), August (31 days), September (30 days), October (31 days), November (30 days), and December (31 days).</span></span> <span data-ttu-id="d51bb-110">2月在闰年中有29天，在常见年份内有28天。</span><span class="sxs-lookup"><span data-stu-id="d51bb-110">February has 29 days during leap years and 28 during common years.</span></span>  
  
 <span data-ttu-id="d51bb-111">日期公元2001年1月1日</span><span class="sxs-lookup"><span data-stu-id="d51bb-111">The date January 1, 2001 A.D.</span></span> <span data-ttu-id="d51bb-112">在公历中，相当于公元2000年12月19日</span><span class="sxs-lookup"><span data-stu-id="d51bb-112">in the Gregorian calendar is equivalent to the 19th day of December in the year 2000 A.D.</span></span> <span data-ttu-id="d51bb-113">在儒略历。</span><span class="sxs-lookup"><span data-stu-id="d51bb-113">in the Julian calendar.</span></span>  
  
 <span data-ttu-id="d51bb-114">当前，<xref:System.Globalization.CultureInfo> 类支持的任何区域性都不使用 <xref:System.Globalization.JulianCalendar>。</span><span class="sxs-lookup"><span data-stu-id="d51bb-114">Currently, the <xref:System.Globalization.JulianCalendar> is not used by any of the cultures supported by the <xref:System.Globalization.CultureInfo> class.</span></span> <span data-ttu-id="d51bb-115">因此，<xref:System.Globalization.JulianCalendar> 类只能用于计算 Julian 日历中的日期。</span><span class="sxs-lookup"><span data-stu-id="d51bb-115">Therefore, the <xref:System.Globalization.JulianCalendar> class can be used only to calculate dates in the Julian calendar.</span></span>  
  
 <span data-ttu-id="d51bb-116">每个 <xref:System.Globalization.CultureInfo> 对象都支持一组日历。</span><span class="sxs-lookup"><span data-stu-id="d51bb-116">Each <xref:System.Globalization.CultureInfo> object supports a set of calendars.</span></span> <span data-ttu-id="d51bb-117"><xref:System.Globalization.CultureInfo.Calendar%2A> 属性返回区域性的默认日历，<xref:System.Globalization.CultureInfo.OptionalCalendars%2A> 属性返回一个数组，该数组包含该区域性支持的所有日历。</span><span class="sxs-lookup"><span data-stu-id="d51bb-117">The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture.</span></span> <span data-ttu-id="d51bb-118">若要更改 <xref:System.Globalization.CultureInfo>使用的日历，应用程序应将 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 的 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> 属性设置为新的 <xref:System.Globalization.Calendar>。</span><span class="sxs-lookup"><span data-stu-id="d51bb-118">To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> to a new <xref:System.Globalization.Calendar>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.GregorianCalendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
    <related type="Article" href="/dotnet/standard/datetime/working-with-calendars"><span data-ttu-id="d51bb-119">使用日历</span><span class="sxs-lookup"><span data-stu-id="d51bb-119">Working with Calendars</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a"><span data-ttu-id="d51bb-120">示例：日历周范围实用工具</span><span class="sxs-lookup"><span data-stu-id="d51bb-120">Sample: Calendar Week Range Utility</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JulianCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JulianCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d51bb-121">初始化 <see cref="T:System.Globalization.JulianCalendar" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="d51bb-121">Initializes a new instance of the <see cref="T:System.Globalization.JulianCalendar" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberSignature Language="F#" Value="override this.AddMonths : DateTime * int -&gt; DateTime" Usage="julianCalendar.AddMonths (time, months)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d51bb-122">将向其添加月数的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="d51bb-122">The <see cref="T:System.DateTime" /> to which to add months.</span></span></param>
        <param name="months"><span data-ttu-id="d51bb-123">要添加的月数。</span><span class="sxs-lookup"><span data-stu-id="d51bb-123">The number of months to add.</span></span></param>
        <summary><span data-ttu-id="d51bb-124">返回与指定 <see cref="T:System.DateTime" /> 相距指定月数的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="d51bb-124">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d51bb-125">将指定月数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="d51bb-125">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d51bb-126">如果结果中的日不是生成的年份中的有效日期，则生成的 <xref:System.DateTime> 的日期部分会受到影响。</span><span class="sxs-lookup"><span data-stu-id="d51bb-126">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="d51bb-127">它将更改为生成的年份中的最后一个有效日。</span><span class="sxs-lookup"><span data-stu-id="d51bb-127">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="d51bb-128">如果生成的月份超出指定的 <xref:System.DateTime>的年份，则生成的 <xref:System.DateTime> 的年份部分会受到影响。</span><span class="sxs-lookup"><span data-stu-id="d51bb-128">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d51bb-129">此实现仅支持当前纪元。</span><span class="sxs-lookup"><span data-stu-id="d51bb-129">This implementation supports only the current era.</span></span> <span data-ttu-id="d51bb-130">因此，如果生成的年份在指定 <xref:System.DateTime>的纪元外，则会引发 <xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="d51bb-130">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d51bb-131">生成的 <xref:System.DateTime> 的时间部分与指定的 <xref:System.DateTime>保持相同。</span><span class="sxs-lookup"><span data-stu-id="d51bb-131">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="d51bb-132">例如，如果指定的月份是10月（包含31天），指定的日期是该月的第31天，而 `months` 参数的值为6，则生成的年份比指定年份多一，生成的月份是4月，而结果日为第30天，即4月的最后一天。</span><span class="sxs-lookup"><span data-stu-id="d51bb-132">For example, if the specified month is October, which has 31 days, the specified day is the 31st day of that month, and the value of the `months` parameter is 6, the resulting year is one more than the specified year, the resulting month is April, and the resulting day is the 30th day, which is the last day in April.</span></span>  
  
 <span data-ttu-id="d51bb-133">如果 `months` 参数的值为负，则生成的 <xref:System.DateTime> 早于指定的 <xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="d51bb-133">If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="d51bb-134">返回的 <xref:System.DateTime> 值的 <xref:System.DateTime.Kind%2A> 属性始终等于 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="d51bb-134">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d51bb-135">可以通过调用 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 方法来保留 `time` 参数的 <xref:System.DateTime.Kind%2A> 属性，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="d51bb-135">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="d51bb-136">下面的代码示例根据儒略历显示 <xref:System.DateTime> 的多个组件的值。</span><span class="sxs-lookup"><span data-stu-id="d51bb-136">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d51bb-137">生成的 <see cref="T:System.DateTime" /> 超出了支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-137">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d51bb-138"><paramref name="months" /> 小于 -120000。</span><span class="sxs-lookup"><span data-stu-id="d51bb-138"><paramref name="months" /> is less than -120000.</span></span>  
  
<span data-ttu-id="d51bb-139">-或-</span><span class="sxs-lookup"><span data-stu-id="d51bb-139">-or-</span></span> 
 <span data-ttu-id="d51bb-140"><paramref name="months" /> 大于 120000。</span><span class="sxs-lookup"><span data-stu-id="d51bb-140"><paramref name="months" /> is greater than 120000.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.JulianCalendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberSignature Language="F#" Value="override this.AddYears : DateTime * int -&gt; DateTime" Usage="julianCalendar.AddYears (time, years)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d51bb-141">将向其添加年数的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="d51bb-141">The <see cref="T:System.DateTime" /> to which to add years.</span></span></param>
        <param name="years"><span data-ttu-id="d51bb-142">要添加的年数。</span><span class="sxs-lookup"><span data-stu-id="d51bb-142">The number of years to add.</span></span></param>
        <summary><span data-ttu-id="d51bb-143">返回与指定 <see cref="T:System.DateTime" /> 相距指定年数的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="d51bb-143">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d51bb-144">将指定年数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="d51bb-144">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d51bb-145">如果结果中的日不是生成的年份中的有效日期，则生成的 <xref:System.DateTime> 的日期部分会受到影响。</span><span class="sxs-lookup"><span data-stu-id="d51bb-145">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="d51bb-146">它将更改为生成的年份中的最后一个有效日。</span><span class="sxs-lookup"><span data-stu-id="d51bb-146">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="d51bb-147">所得 <xref:System.DateTime> 的月份部分保持与指定 <xref:System.DateTime>相同。</span><span class="sxs-lookup"><span data-stu-id="d51bb-147">The month part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d51bb-148">此实现仅支持当前纪元。</span><span class="sxs-lookup"><span data-stu-id="d51bb-148">This implementation supports only the current era.</span></span> <span data-ttu-id="d51bb-149">因此，如果生成的年份在指定 <xref:System.DateTime>的纪元外，则会引发 <xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="d51bb-149">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d51bb-150">生成的 <xref:System.DateTime> 的时间部分与指定的 <xref:System.DateTime>保持相同。</span><span class="sxs-lookup"><span data-stu-id="d51bb-150">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="d51bb-151">例如，2月有28天，在闰年有29天时除外。</span><span class="sxs-lookup"><span data-stu-id="d51bb-151">For example, February has 28 days, except during leap years when it has 29 days.</span></span> <span data-ttu-id="d51bb-152">如果指定的日期是闰年中2月29日的，而 `years` 的值为1，则生成的日期为下一年2月28日。</span><span class="sxs-lookup"><span data-stu-id="d51bb-152">If the specified date is the 29th day of February in a leap year and the value of `years` is 1, the resulting date is the 28th day of February in the following year.</span></span>  
  
 <span data-ttu-id="d51bb-153">如果 `years` 为负数，则生成的 <xref:System.DateTime> 早于指定的 <xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="d51bb-153">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="d51bb-154">返回的 <xref:System.DateTime> 值的 <xref:System.DateTime.Kind%2A> 属性始终等于 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="d51bb-154">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d51bb-155">可以通过调用 <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> 方法来保留 `time` 参数的 <xref:System.DateTime.Kind%2A> 属性，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="d51bb-155">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 <span data-ttu-id="d51bb-156">下面的代码示例根据儒略历显示 <xref:System.DateTime> 的多个组件的值。</span><span class="sxs-lookup"><span data-stu-id="d51bb-156">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d51bb-157">生成的 <see cref="T:System.DateTime" /> 超出了支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-157">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.JulianCalendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JulianCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmType : System.Globalization.CalendarAlgorithmType" Usage="System.Globalization.JulianCalendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d51bb-158">获取一个值，该值指示当前日历是阳历、阴历还是二者的组合。</span><span class="sxs-lookup"><span data-stu-id="d51bb-158">Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</span></span></summary>
        <value><span data-ttu-id="d51bb-159">始终返回 <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />。</span><span class="sxs-lookup"><span data-stu-id="d51bb-159">Always returns <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d51bb-160">下面的示例使用反射来实例化 .NET Framework 中找到的每个 <xref:System.Globalization.Calendar> 类型，并显示其 <xref:System.Globalization.Calendar.AlgorithmType%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="d51bb-160">The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JulianCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Eras : int[]" Usage="System.Globalization.JulianCalendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d51bb-161">获取 <see cref="T:System.Globalization.JulianCalendar" /> 中的纪元列表。</span><span class="sxs-lookup"><span data-stu-id="d51bb-161">Gets the list of eras in the <see cref="T:System.Globalization.JulianCalendar" />.</span></span></summary>
        <value><span data-ttu-id="d51bb-162">表示 <see cref="T:System.Globalization.JulianCalendar" /> 中的纪元的整数数组。</span><span class="sxs-lookup"><span data-stu-id="d51bb-162">An array of integers that represents the eras in the <see cref="T:System.Globalization.JulianCalendar" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d51bb-163"><xref:System.Globalization.JulianCalendar> 类仅识别当前纪元。</span><span class="sxs-lookup"><span data-stu-id="d51bb-163">The <xref:System.Globalization.JulianCalendar> class recognizes only the current era.</span></span> <span data-ttu-id="d51bb-164">此属性始终返回只包含一个元素的数组。</span><span class="sxs-lookup"><span data-stu-id="d51bb-164">This property always returns an array with only one element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfMonth : DateTime -&gt; int" Usage="julianCalendar.GetDayOfMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d51bb-165">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="d51bb-165">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="d51bb-166">返回指定 <see cref="T:System.DateTime" /> 中的月中日期。</span><span class="sxs-lookup"><span data-stu-id="d51bb-166">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d51bb-167">1 到 31 之间的一个整数，用于表示 <paramref name="time" /> 中的月中日期。</span><span class="sxs-lookup"><span data-stu-id="d51bb-167">An integer from 1 to 31 that represents the day of the month in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d51bb-168">下面的代码示例根据儒略历显示 <xref:System.DateTime> 的多个组件的值。</span><span class="sxs-lookup"><span data-stu-id="d51bb-168">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfWeek : DateTime -&gt; DayOfWeek" Usage="julianCalendar.GetDayOfWeek time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d51bb-169">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="d51bb-169">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="d51bb-170">返回指定 <see cref="T:System.DateTime" /> 中的周中日期。</span><span class="sxs-lookup"><span data-stu-id="d51bb-170">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d51bb-171">一个 <see cref="T:System.DayOfWeek" /> 值，用于表示 <paramref name="time" /> 中的周中日期。</span><span class="sxs-lookup"><span data-stu-id="d51bb-171">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d51bb-172"><xref:System.DayOfWeek> 值为星期日、星期一、星期二、星期三、星期四、星期五、星期六。</span><span class="sxs-lookup"><span data-stu-id="d51bb-172">The <xref:System.DayOfWeek> values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d51bb-173">下面的代码示例根据儒略历显示 <xref:System.DateTime> 的多个组件的值。</span><span class="sxs-lookup"><span data-stu-id="d51bb-173">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfYear : DateTime -&gt; int" Usage="julianCalendar.GetDayOfYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d51bb-174">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="d51bb-174">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="d51bb-175">返回指定 <see cref="T:System.DateTime" /> 中的日期是该年中的第几天。</span><span class="sxs-lookup"><span data-stu-id="d51bb-175">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d51bb-176">1 到 366 之间的一个整数，用于表示 <paramref name="time" /> 中的年中日期。</span><span class="sxs-lookup"><span data-stu-id="d51bb-176">An integer from 1 to 366 that represents the day of the year in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d51bb-177">一年中的某一天定义为从该年的第一天开始的天数。</span><span class="sxs-lookup"><span data-stu-id="d51bb-177">The day of the year is defined as the number of days from the first day of the year.</span></span> <span data-ttu-id="d51bb-178">例如，在第一个月的第一天 <xref:System.Globalization.JulianCalendar.GetDayOfYear%2A> 返回1，而在上个月的最后一天 <xref:System.Globalization.JulianCalendar.GetDayOfYear%2A> 返回该年份中的总天数。</span><span class="sxs-lookup"><span data-stu-id="d51bb-178">For example, <xref:System.Globalization.JulianCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.JulianCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year.</span></span> <span data-ttu-id="d51bb-179">总数与 <xref:System.Globalization.JulianCalendar.GetDaysInYear%2A>返回的值相同。</span><span class="sxs-lookup"><span data-stu-id="d51bb-179">The total is the same value as that returned by <xref:System.Globalization.JulianCalendar.GetDaysInYear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d51bb-180">下面的代码示例根据儒略历显示 <xref:System.DateTime> 的多个组件的值。</span><span class="sxs-lookup"><span data-stu-id="d51bb-180">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInMonth : int * int * int -&gt; int" Usage="julianCalendar.GetDaysInMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d51bb-181">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-181">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="d51bb-182">1 到 12 之间的一个整数，用于表示月份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-182">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="d51bb-183">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="d51bb-183">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="d51bb-184">返回指定纪元中指定年份的指定月份中的天数。</span><span class="sxs-lookup"><span data-stu-id="d51bb-184">Returns the number of days in the specified month in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="d51bb-185">指定纪元中指定年份的指定月份中的天数。</span><span class="sxs-lookup"><span data-stu-id="d51bb-185">The number of days in the specified month in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d51bb-186">此方法返回二月（`month` = 2）的28或29，具体取决于 `year` 是否为闰年。</span><span class="sxs-lookup"><span data-stu-id="d51bb-186">This method returns 28 or 29 for February (`month` = 2), depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d51bb-187">下面的示例在每个纪元的五年中，为第二个月 <xref:System.Globalization.JulianCalendar.GetDaysInMonth%2A> 调用。</span><span class="sxs-lookup"><span data-stu-id="d51bb-187">The following example calls <xref:System.Globalization.JulianCalendar.GetDaysInMonth%2A> for the second month in each of five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar.GetDaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInMonth/CPP/juliancalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInMonth/CS/juliancalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInMonth/VB/juliancalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d51bb-188"><paramref name="era" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-188"><paramref name="era" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="d51bb-189">-或-</span><span class="sxs-lookup"><span data-stu-id="d51bb-189">-or-</span></span> 
 <span data-ttu-id="d51bb-190"><paramref name="year" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-190"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="d51bb-191">-或-</span><span class="sxs-lookup"><span data-stu-id="d51bb-191">-or-</span></span> 
 <span data-ttu-id="d51bb-192"><paramref name="month" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-192"><paramref name="month" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInYear : int * int -&gt; int" Usage="julianCalendar.GetDaysInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d51bb-193">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-193">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="d51bb-194">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="d51bb-194">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="d51bb-195">返回指定纪元中指定年份的天数。</span><span class="sxs-lookup"><span data-stu-id="d51bb-195">Returns the number of days in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="d51bb-196">指定纪元中指定年份的天数。</span><span class="sxs-lookup"><span data-stu-id="d51bb-196">The number of days in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d51bb-197">此方法返回365或366，具体取决于 `year` 是否为闰年。</span><span class="sxs-lookup"><span data-stu-id="d51bb-197">This method returns 365 or 366, depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d51bb-198">下面的示例对每个纪元中的五年调用 <xref:System.Globalization.JulianCalendar.GetDaysInYear%2A>。</span><span class="sxs-lookup"><span data-stu-id="d51bb-198">The following example calls <xref:System.Globalization.JulianCalendar.GetDaysInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar.GetDaysInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInYear/CPP/juliancalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInYear/CS/juliancalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInYear/VB/juliancalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d51bb-199"><paramref name="era" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-199"><paramref name="era" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="d51bb-200">-或-</span><span class="sxs-lookup"><span data-stu-id="d51bb-200">-or-</span></span> 
 <span data-ttu-id="d51bb-201"><paramref name="year" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-201"><paramref name="year" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetEra : DateTime -&gt; int" Usage="julianCalendar.GetEra time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d51bb-202">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="d51bb-202">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="d51bb-203">返回指定 <see cref="T:System.DateTime" /> 中的纪元。</span><span class="sxs-lookup"><span data-stu-id="d51bb-203">Returns the era in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d51bb-204">一个整数，用于表示 <paramref name="time" /> 中的纪元。</span><span class="sxs-lookup"><span data-stu-id="d51bb-204">An integer that represents the era in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d51bb-205"><xref:System.Globalization.JulianCalendar> 类仅识别当前纪元。</span><span class="sxs-lookup"><span data-stu-id="d51bb-205">The <xref:System.Globalization.JulianCalendar> class recognizes only the current era.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d51bb-206">下面的代码示例根据儒略历显示 <xref:System.DateTime> 的多个组件的值。</span><span class="sxs-lookup"><span data-stu-id="d51bb-206">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetLeapMonth : int * int -&gt; int" Usage="julianCalendar.GetLeapMonth (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="era" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d51bb-207">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-207">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="d51bb-208">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="d51bb-208">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="d51bb-209">计算指定纪元年份的闰月。</span><span class="sxs-lookup"><span data-stu-id="d51bb-209">Calculates the leap month for a specified year and era.</span></span></summary>
        <returns><span data-ttu-id="d51bb-210">一个正整数，用于表示指定纪元年份中的闰月。</span><span class="sxs-lookup"><span data-stu-id="d51bb-210">A positive integer that indicates the leap month in the specified year and era.</span></span> <span data-ttu-id="d51bb-211">另外，如果日历不支持闰月，或者 <paramref name="year" /> 和 <paramref name="era" /> 未指定闰年，此方法将返回零。</span><span class="sxs-lookup"><span data-stu-id="d51bb-211">Alternatively, this method returns zero if the calendar does not support a leap month, or if <paramref name="year" /> and <paramref name="era" /> do not specify a leap year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d51bb-212">在支持闰月的概念的日历中，闰月可以在特定月份之后或在一年中的任何月份之后发生。</span><span class="sxs-lookup"><span data-stu-id="d51bb-212">In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.</span></span> <span data-ttu-id="d51bb-213">例如，<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> 方法返回1到13之间的一个数字，用于指示与指定日期关联的月份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-213">For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns a number between 1 and 13 that indicates the month associated with a specified date.</span></span> <span data-ttu-id="d51bb-214">如果该年的第八个月和第九个月之间有一个闰月，则 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> 方法将为第八个月返回8，为第八个月返回9，在第9个月返回10个月。</span><span class="sxs-lookup"><span data-stu-id="d51bb-214">If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetMonth : DateTime -&gt; int" Usage="julianCalendar.GetMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d51bb-215">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="d51bb-215">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="d51bb-216">返回指定 <see cref="T:System.DateTime" /> 中的月份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-216">Returns the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d51bb-217">1 到 12 之间的一个整数，用于表示 <paramref name="time" /> 中的月份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-217">An integer from 1 to 12 that represents the month in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d51bb-218">下面的代码示例根据儒略历显示 <xref:System.DateTime> 的多个组件的值。</span><span class="sxs-lookup"><span data-stu-id="d51bb-218">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetMonthsInYear : int * int -&gt; int" Usage="julianCalendar.GetMonthsInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d51bb-219">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-219">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="d51bb-220">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="d51bb-220">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="d51bb-221">返回指定纪元中指定年份的月数。</span><span class="sxs-lookup"><span data-stu-id="d51bb-221">Returns the number of months in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="d51bb-222">指定纪元中指定年份的月数。</span><span class="sxs-lookup"><span data-stu-id="d51bb-222">The number of months in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d51bb-223">下面的示例对每个纪元中的五年调用 <xref:System.Globalization.JulianCalendar.GetMonthsInYear%2A>。</span><span class="sxs-lookup"><span data-stu-id="d51bb-223">The following example calls <xref:System.Globalization.JulianCalendar.GetMonthsInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar.GetMonthsInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetMonthsInYear/CPP/juliancalendar_getmonthsinyear.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.GetMonthsInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetMonthsInYear/CS/juliancalendar_getmonthsinyear.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.GetMonthsInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetMonthsInYear/VB/juliancalendar_getmonthsinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d51bb-224"><paramref name="era" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-224"><paramref name="era" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="d51bb-225">-或-</span><span class="sxs-lookup"><span data-stu-id="d51bb-225">-or-</span></span> 
 <span data-ttu-id="d51bb-226"><paramref name="year" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-226"><paramref name="year" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetYear : DateTime -&gt; int" Usage="julianCalendar.GetYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d51bb-227">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="d51bb-227">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="d51bb-228">返回指定 <see cref="T:System.DateTime" /> 中的年份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-228">Returns the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d51bb-229">一个整数，用于表示 <paramref name="time" /> 中的年份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-229">An integer that represents the year in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d51bb-230">下面的代码示例根据儒略历显示 <xref:System.DateTime> 的多个组件的值。</span><span class="sxs-lookup"><span data-stu-id="d51bb-230">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapDay : int * int * int * int -&gt; bool" Usage="julianCalendar.IsLeapDay (year, month, day, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d51bb-231">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-231">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="d51bb-232">1 到 12 之间的一个整数，用于表示月份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-232">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="d51bb-233">1 到 31 之间的一个整数，用于表示天。</span><span class="sxs-lookup"><span data-stu-id="d51bb-233">An integer from 1 to 31 that represents the day.</span></span></param>
        <param name="era"><span data-ttu-id="d51bb-234">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="d51bb-234">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="d51bb-235">确定指定纪元中的指定日期是否为闰日。</span><span class="sxs-lookup"><span data-stu-id="d51bb-235">Determines whether the specified date in the specified era is a leap day.</span></span></summary>
        <returns><span data-ttu-id="d51bb-236">如果指定的日期是闰日，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d51bb-236"><see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d51bb-237">与公历不同，儒略历将闰年定义为按四整除并且无例外的年份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-237">Unlike the Gregorian calendar, the Julian calendar defines a leap year as a year that is evenly divisible by four with no exceptions.</span></span> <span data-ttu-id="d51bb-238">因此，日历每128年的某一天不准确。</span><span class="sxs-lookup"><span data-stu-id="d51bb-238">Therefore, the calendar is inaccurate by one day every 128 years.</span></span> <span data-ttu-id="d51bb-239">例如，1999年不是闰年，而2000是。</span><span class="sxs-lookup"><span data-stu-id="d51bb-239">For example, the year 1999 was not a leap year, but the year 2000 was.</span></span> <span data-ttu-id="d51bb-240">一个常见年份有365天，闰年有366天。</span><span class="sxs-lookup"><span data-stu-id="d51bb-240">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="d51bb-241">闰日是指仅在闰年发生的日期。</span><span class="sxs-lookup"><span data-stu-id="d51bb-241">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="d51bb-242">在儒略历日历中，2月29日是唯一的闰日。</span><span class="sxs-lookup"><span data-stu-id="d51bb-242">In the Julian calendar, the 29th day of February is the only leap day.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d51bb-243">下面的示例在每个纪元的五年中，为第二个月（2月）的最后一天调用 <xref:System.Globalization.JulianCalendar.IsLeapDay%2A>。</span><span class="sxs-lookup"><span data-stu-id="d51bb-243">The following example calls <xref:System.Globalization.JulianCalendar.IsLeapDay%2A> for the last day of the second month (February) for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapDay/CPP/juliancalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapDay/CS/juliancalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapDay/VB/juliancalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d51bb-244"><paramref name="year" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-244"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="d51bb-245">-或-</span><span class="sxs-lookup"><span data-stu-id="d51bb-245">-or-</span></span> 
 <span data-ttu-id="d51bb-246"><paramref name="month" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-246"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="d51bb-247">-或-</span><span class="sxs-lookup"><span data-stu-id="d51bb-247">-or-</span></span> 
 <span data-ttu-id="d51bb-248"><paramref name="day" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-248"><paramref name="day" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="d51bb-249">-或-</span><span class="sxs-lookup"><span data-stu-id="d51bb-249">-or-</span></span> 
 <span data-ttu-id="d51bb-250"><paramref name="era" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-250"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapMonth : int * int * int -&gt; bool" Usage="julianCalendar.IsLeapMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d51bb-251">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-251">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="d51bb-252">1 到 12 之间的一个整数，用于表示月份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-252">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="d51bb-253">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="d51bb-253">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="d51bb-254">确定指定纪元中指定年份的指定月份是否为闰月。</span><span class="sxs-lookup"><span data-stu-id="d51bb-254">Determines whether the specified month in the specified year in the specified era is a leap month.</span></span></summary>
        <returns><span data-ttu-id="d51bb-255">除非被派生类重写，否则此方法始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d51bb-255">This method always returns <see langword="false" />, unless overridden by a derived class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d51bb-256">与公历不同，儒略历将闰年定义为按四整除并且无例外的年份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-256">Unlike the Gregorian calendar, the Julian calendar defines a leap year as a year that is evenly divisible by four with no exceptions.</span></span> <span data-ttu-id="d51bb-257">因此，日历每128年的某一天不准确。</span><span class="sxs-lookup"><span data-stu-id="d51bb-257">Therefore, the calendar is inaccurate by one day every 128 years.</span></span> <span data-ttu-id="d51bb-258">例如，1999年不是闰年，而2000是。</span><span class="sxs-lookup"><span data-stu-id="d51bb-258">For example, the year 1999 was not a leap year, but the year 2000 was.</span></span> <span data-ttu-id="d51bb-259">一个常见年份有365天，闰年有366天。</span><span class="sxs-lookup"><span data-stu-id="d51bb-259">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="d51bb-260">闰月是只在闰年发生的整个月份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-260">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="d51bb-261">儒略历没有闰月。</span><span class="sxs-lookup"><span data-stu-id="d51bb-261">The Julian calendar does not have any leap months.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d51bb-262">下面的示例为当前纪元中的五年中的所有月份调用 <xref:System.Globalization.JulianCalendar.IsLeapMonth%2A>。</span><span class="sxs-lookup"><span data-stu-id="d51bb-262">The following example calls <xref:System.Globalization.JulianCalendar.IsLeapMonth%2A> for all the months in five years in the current era.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar.IsLeapMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapMonth/CPP/juliancalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.IsLeapMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapMonth/CS/juliancalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.IsLeapMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapMonth/VB/juliancalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d51bb-263"><paramref name="year" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-263"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="d51bb-264">-或-</span><span class="sxs-lookup"><span data-stu-id="d51bb-264">-or-</span></span> 
 <span data-ttu-id="d51bb-265"><paramref name="month" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-265"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="d51bb-266">-或-</span><span class="sxs-lookup"><span data-stu-id="d51bb-266">-or-</span></span> 
 <span data-ttu-id="d51bb-267"><paramref name="era" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-267"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapYear : int * int -&gt; bool" Usage="julianCalendar.IsLeapYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d51bb-268">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-268">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="d51bb-269">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="d51bb-269">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="d51bb-270">确定指定纪元中的指定年份是否为闰年。</span><span class="sxs-lookup"><span data-stu-id="d51bb-270">Determines whether the specified year in the specified era is a leap year.</span></span></summary>
        <returns><span data-ttu-id="d51bb-271">如果指定的年是闰年，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d51bb-271"><see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d51bb-272">与公历不同，儒略历将闰年定义为按四整除并且无例外的年份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-272">Unlike the Gregorian calendar, the Julian calendar defines a leap year as a year that is evenly divisible by four with no exceptions.</span></span> <span data-ttu-id="d51bb-273">因此，日历每128年的某一天不准确。</span><span class="sxs-lookup"><span data-stu-id="d51bb-273">Therefore, the calendar is inaccurate by one day every 128 years.</span></span> <span data-ttu-id="d51bb-274">例如，1999年不是闰年，而2000是。</span><span class="sxs-lookup"><span data-stu-id="d51bb-274">For example, the year 1999 was not a leap year, but the year 2000 was.</span></span> <span data-ttu-id="d51bb-275">一个常见年份有365天，闰年有366天。</span><span class="sxs-lookup"><span data-stu-id="d51bb-275">A common year has 365 days and a leap year has 366 days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d51bb-276">下面的示例在每个纪元的五年中调用 <xref:System.Globalization.JulianCalendar.IsLeapYear%2A>。</span><span class="sxs-lookup"><span data-stu-id="d51bb-276">The following example calls <xref:System.Globalization.JulianCalendar.IsLeapYear%2A> for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar.IsLeapYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapYear/CPP/juliancalendar_isleapyear.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapYear/CS/juliancalendar_isleapyear.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapYear/VB/juliancalendar_isleapyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d51bb-277"><paramref name="year" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-277"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="d51bb-278">-或-</span><span class="sxs-lookup"><span data-stu-id="d51bb-278">-or-</span></span> 
 <span data-ttu-id="d51bb-279"><paramref name="era" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-279"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="JulianEra">
      <MemberSignature Language="C#" Value="public static readonly int JulianEra;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 JulianEra" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.JulianCalendar.JulianEra" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly JulianEra As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int JulianEra;" />
      <MemberSignature Language="F#" Value=" staticval mutable JulianEra : int" Usage="System.Globalization.JulianCalendar.JulianEra" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d51bb-280">表示当前纪元。</span><span class="sxs-lookup"><span data-stu-id="d51bb-280">Represents the current era.</span></span> <span data-ttu-id="d51bb-281">此字段是常量。</span><span class="sxs-lookup"><span data-stu-id="d51bb-281">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d51bb-282"><xref:System.Globalization.JulianCalendar> 类仅识别当前纪元。</span><span class="sxs-lookup"><span data-stu-id="d51bb-282">The <xref:System.Globalization.JulianCalendar> class recognizes only the current era.</span></span> <span data-ttu-id="d51bb-283">此字段始终返回1。</span><span class="sxs-lookup"><span data-stu-id="d51bb-283">This field always returns 1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JulianCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSupportedDateTime : DateTime" Usage="System.Globalization.JulianCalendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d51bb-284">获取 <see cref="T:System.Globalization.JulianCalendar" /> 类支持的最晚日期和时间。</span><span class="sxs-lookup"><span data-stu-id="d51bb-284">Gets the latest date and time supported by the <see cref="T:System.Globalization.JulianCalendar" /> class.</span></span></summary>
        <value><span data-ttu-id="d51bb-285"><see cref="T:System.Globalization.JulianCalendar" /> 类支持的最晚日期和时间，该日期和时间等效于9999年12月31日的最后一刻</span><span class="sxs-lookup"><span data-stu-id="d51bb-285">The latest date and time supported by the <see cref="T:System.Globalization.JulianCalendar" /> class, which is equivalent to the last moment of December 31, 9999 C.E.</span></span> <span data-ttu-id="d51bb-286">公历。</span><span class="sxs-lookup"><span data-stu-id="d51bb-286">in the Gregorian calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d51bb-287">下面的代码示例获取日历的最小值和最大值。</span><span class="sxs-lookup"><span data-stu-id="d51bb-287">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/CPP/juliancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/CS/juliancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/VB/juliancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JulianCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSupportedDateTime : DateTime" Usage="System.Globalization.JulianCalendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d51bb-288">获取 <see cref="T:System.Globalization.JulianCalendar" /> 类支持的最早日期和时间。</span><span class="sxs-lookup"><span data-stu-id="d51bb-288">Gets the earliest date and time supported by the <see cref="T:System.Globalization.JulianCalendar" /> class.</span></span></summary>
        <value><span data-ttu-id="d51bb-289"><see cref="T:System.Globalization.JulianCalendar" /> 类支持的最早日期和时间，该日期和时间等效于0001年1月1日开始的那一刻</span><span class="sxs-lookup"><span data-stu-id="d51bb-289">The earliest date and time supported by the <see cref="T:System.Globalization.JulianCalendar" /> class, which is equivalent to the first moment of January 1, 0001 C.E.</span></span> <span data-ttu-id="d51bb-290">公历。</span><span class="sxs-lookup"><span data-stu-id="d51bb-290">in the Gregorian calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d51bb-291">下面的代码示例获取日历的最小值和最大值。</span><span class="sxs-lookup"><span data-stu-id="d51bb-291">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/CPP/juliancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/CS/juliancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/VB/juliancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="F#" Value="override this.ToDateTime : int * int * int * int * int * int * int * int -&gt; DateTime" Usage="julianCalendar.ToDateTime (year, month, day, hour, minute, second, millisecond, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d51bb-292">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-292">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="d51bb-293">1 到 12 之间的一个整数，用于表示月份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-293">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="d51bb-294">1 到 31 之间的一个整数，用于表示天。</span><span class="sxs-lookup"><span data-stu-id="d51bb-294">An integer from 1 to 31 that represents the day.</span></span></param>
        <param name="hour"><span data-ttu-id="d51bb-295">0 到 23 之间的一个整数，用于表示小时。</span><span class="sxs-lookup"><span data-stu-id="d51bb-295">An integer from 0 to 23 that represents the hour.</span></span></param>
        <param name="minute"><span data-ttu-id="d51bb-296">0 到 59 之间的一个整数，用于表示分钟。</span><span class="sxs-lookup"><span data-stu-id="d51bb-296">An integer from 0 to 59 that represents the minute.</span></span></param>
        <param name="second"><span data-ttu-id="d51bb-297">0 到 59 之间的一个整数，用于表示秒。</span><span class="sxs-lookup"><span data-stu-id="d51bb-297">An integer from 0 to 59 that represents the second.</span></span></param>
        <param name="millisecond"><span data-ttu-id="d51bb-298">0 到 999 之间的一个整数，用于表示毫秒。</span><span class="sxs-lookup"><span data-stu-id="d51bb-298">An integer from 0 to 999 that represents the millisecond.</span></span></param>
        <param name="era"><span data-ttu-id="d51bb-299">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="d51bb-299">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="d51bb-300">返回设置为指定纪元中指定日期和时间的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="d51bb-300">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span></span></summary>
        <returns><span data-ttu-id="d51bb-301">设置为当前纪元中指定日期和时间的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="d51bb-301">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d51bb-302"><paramref name="year" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-302"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="d51bb-303">-或-</span><span class="sxs-lookup"><span data-stu-id="d51bb-303">-or-</span></span> 
 <span data-ttu-id="d51bb-304"><paramref name="month" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-304"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="d51bb-305">-或-</span><span class="sxs-lookup"><span data-stu-id="d51bb-305">-or-</span></span> 
 <span data-ttu-id="d51bb-306"><paramref name="day" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-306"><paramref name="day" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="d51bb-307">-或-</span><span class="sxs-lookup"><span data-stu-id="d51bb-307">-or-</span></span> 
 <span data-ttu-id="d51bb-308"><paramref name="hour" /> 小于 0 或大于 23。</span><span class="sxs-lookup"><span data-stu-id="d51bb-308"><paramref name="hour" /> is less than zero or greater than 23.</span></span>  
  
<span data-ttu-id="d51bb-309">-或-</span><span class="sxs-lookup"><span data-stu-id="d51bb-309">-or-</span></span> 
 <span data-ttu-id="d51bb-310"><paramref name="minute" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="d51bb-310"><paramref name="minute" /> is less than zero or greater than 59.</span></span>  
  
<span data-ttu-id="d51bb-311">-或-</span><span class="sxs-lookup"><span data-stu-id="d51bb-311">-or-</span></span> 
 <span data-ttu-id="d51bb-312"><paramref name="second" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="d51bb-312"><paramref name="second" /> is less than zero or greater than 59.</span></span>  
  
<span data-ttu-id="d51bb-313">-或-</span><span class="sxs-lookup"><span data-stu-id="d51bb-313">-or-</span></span> 
 <span data-ttu-id="d51bb-314"><paramref name="millisecond" /> 小于 0 或大于 999。</span><span class="sxs-lookup"><span data-stu-id="d51bb-314"><paramref name="millisecond" /> is less than zero or greater than 999.</span></span>  
  
<span data-ttu-id="d51bb-315">-或-</span><span class="sxs-lookup"><span data-stu-id="d51bb-315">-or-</span></span> 
 <span data-ttu-id="d51bb-316"><paramref name="era" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-316"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberSignature Language="F#" Value="override this.ToFourDigitYear : int -&gt; int" Usage="julianCalendar.ToFourDigitYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d51bb-317">一个两位数或四位数的整数，用于表示要转换的年份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-317">A two-digit or four-digit integer that represents the year to convert.</span></span></param>
        <summary><span data-ttu-id="d51bb-318">使用 <see cref="P:System.Globalization.JulianCalendar.TwoDigitYearMax" /> 属性将指定的年份转换为四位数年份，以确定相应的纪元。</span><span class="sxs-lookup"><span data-stu-id="d51bb-318">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.JulianCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span></span></summary>
        <returns><span data-ttu-id="d51bb-319">包含 <paramref name="year" /> 的四位数表示形式的整数。</span><span class="sxs-lookup"><span data-stu-id="d51bb-319">An integer that contains the four-digit representation of <paramref name="year" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d51bb-320"><xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> 为100年范围内可由两位数年份表示的最后一年。</span><span class="sxs-lookup"><span data-stu-id="d51bb-320"><xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> is the last year in the 100-year range that can be represented by a two-digit year.</span></span> <span data-ttu-id="d51bb-321">通过在该100年范围内查找指定 `year` 的唯一匹配项来确定纪元。</span><span class="sxs-lookup"><span data-stu-id="d51bb-321">The century is determined by finding the sole occurrence of the specified `year` within that 100-year range.</span></span> <span data-ttu-id="d51bb-322">例如，如果 <xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> 设置为2029，则100年范围是从1930到2029。</span><span class="sxs-lookup"><span data-stu-id="d51bb-322">For example, if <xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> is set to 2029, the 100-year range is from 1930 to 2029.</span></span> <span data-ttu-id="d51bb-323">因此，两位数值30被解释为1930，而两位数字的值29则解释为2029。</span><span class="sxs-lookup"><span data-stu-id="d51bb-323">Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.</span></span>  
  
 <span data-ttu-id="d51bb-324"><xref:System.Globalization.JulianCalendar.ToFourDigitYear%2A> 支持两位数年份或四位数年份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-324"><xref:System.Globalization.JulianCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year.</span></span> <span data-ttu-id="d51bb-325">如果传递了一个两位数的年份值（小于100），则会使方法根据表示相应世纪的 <xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> 值将值转换为四位值。</span><span class="sxs-lookup"><span data-stu-id="d51bb-325">Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> value representing the appropriate century.</span></span> <span data-ttu-id="d51bb-326">如果应用程序提供了一个四位数的年份值，该范围在支持的日历范围内以 <xref:System.Globalization.JulianCalendar.ToFourDigitYear%2A>，则该方法将返回实际输入值。</span><span class="sxs-lookup"><span data-stu-id="d51bb-326">If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.JulianCalendar.ToFourDigitYear%2A>, the method returns the actual input value.</span></span> <span data-ttu-id="d51bb-327">如果应用程序提供了一个在支持的日历范围之外的四位数值，或者如果它提供负值，则该方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="d51bb-327">If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d51bb-328"><paramref name="year" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="d51bb-328"><paramref name="year" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="P:System.Globalization.JulianCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JulianCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TwoDigitYearMax : int with get, set" Usage="System.Globalization.JulianCalendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d51bb-329">获取或设置可以用两位数年份表示的 100 年范围内的最后一年。</span><span class="sxs-lookup"><span data-stu-id="d51bb-329">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span></span></summary>
        <value><span data-ttu-id="d51bb-330">可以用两位数年份表示的 100 年范围内的最后一年。</span><span class="sxs-lookup"><span data-stu-id="d51bb-330">The last year of a 100-year range that can be represented by a 2-digit year.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d51bb-331">此属性允许将两位数的年份正确翻译为四位数年份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-331">This property allows a 2-digit year to be properly translated to a 4-digit year.</span></span> <span data-ttu-id="d51bb-332">例如，如果将此属性设置为2029，则100年范围是从1930到2029。</span><span class="sxs-lookup"><span data-stu-id="d51bb-332">For example, if this property is set to 2029, the 100-year range is from 1930 to 2029.</span></span> <span data-ttu-id="d51bb-333">因此，两位数值30被解释为1930，而两位数字的值29则解释为2029。</span><span class="sxs-lookup"><span data-stu-id="d51bb-333">Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.</span></span>  
  
 <span data-ttu-id="d51bb-334"><xref:System.Globalization.JulianCalendar> 类未检测到系统设置中的更改。</span><span class="sxs-lookup"><span data-stu-id="d51bb-334">The <xref:System.Globalization.JulianCalendar> class does not detect changes in the system settings.</span></span>  
  
 <span data-ttu-id="d51bb-335">应用程序可以将此值设置为99，以指示要按字面取的两位数年份。</span><span class="sxs-lookup"><span data-stu-id="d51bb-335">The application can set this value to 99 to indicate that 2-digit years are to be taken literally.</span></span> <span data-ttu-id="d51bb-336">例如，如果将此属性设置为99，则100年的范围是从0（对于大多数日历而言不是有效的值）到99。</span><span class="sxs-lookup"><span data-stu-id="d51bb-336">For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99.</span></span> <span data-ttu-id="d51bb-337">因此，两位数值30被解释为30。</span><span class="sxs-lookup"><span data-stu-id="d51bb-337">Therefore, a 2-digit value of 30 is interpreted as 30.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d51bb-338">为设置操作指定的值小于 99。</span><span class="sxs-lookup"><span data-stu-id="d51bb-338">The value specified in a set operation is less than 99.</span></span>  
  
<span data-ttu-id="d51bb-339">-或-</span><span class="sxs-lookup"><span data-stu-id="d51bb-339">-or-</span></span> 
<span data-ttu-id="d51bb-340">为设置操作指定的值大于 <see langword="MaxSupportedDateTime.Year" />。</span><span class="sxs-lookup"><span data-stu-id="d51bb-340">The value specified in a set operation is greater than <see langword="MaxSupportedDateTime.Year" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d51bb-341">在设置操作中，当前实例是只读的。</span><span class="sxs-lookup"><span data-stu-id="d51bb-341">In a set operation, the current instance is read-only.</span></span></exception>
        <altmember cref="M:System.Globalization.JulianCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>
