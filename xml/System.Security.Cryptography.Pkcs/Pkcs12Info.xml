<Type Name="Pkcs12Info" FullName="System.Security.Cryptography.Pkcs.Pkcs12Info">
  <Metadata><Meta Name="ms.openlocfilehash" Value="75cdfd86a412493bdb72ce220b9e55f5e6c406e9" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86752919" /></Metadata><TypeSignature Language="C#" Value="public sealed class Pkcs12Info" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Pkcs12Info extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Pkcs.Pkcs12Info" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Pkcs12Info" />
  <TypeSignature Language="C++ CLI" Value="public ref class Pkcs12Info sealed" />
  <TypeSignature Language="F#" Value="type Pkcs12Info = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示 PKCS#12 PFX 内容中的数据。 此类不能被继承。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AuthenticatedSafe">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.Pkcs.Pkcs12SafeContents&gt; AuthenticatedSafe { get; }" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Cryptography.Pkcs.Pkcs12SafeContents&gt; AuthenticatedSafe" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticatedSafe As ReadOnlyCollection(Of Pkcs12SafeContents)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Cryptography::Pkcs::Pkcs12SafeContents ^&gt; ^ AuthenticatedSafe { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Cryptography::Pkcs::Pkcs12SafeContents ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticatedSafe : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.Pkcs.Pkcs12SafeContents&gt;" Usage="System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" />
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.Pkcs.Pkcs12SafeContents&gt;? AuthenticatedSafe { get; }" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.Pkcs.Pkcs12SafeContents&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 PFX AuthenticatedSafe 中的 SafeContents 值的只读集合。</summary>
        <value>PFX AuthenticatedSafe 中存在的 SafeContents 值的只读集合。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs12Info Decode (ReadOnlyMemory&lt;byte&gt; encodedBytes, out int bytesConsumed, bool skipCopy = false);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs12Info Decode(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; encodedBytes, [out] int32&amp; bytesConsumed, bool skipCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Info.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decode (encodedBytes As ReadOnlyMemory(Of Byte), ByRef bytesConsumed As Integer, Optional skipCopy As Boolean = false) As Pkcs12Info" />
      <MemberSignature Language="F#" Value="static member Decode : ReadOnlyMemory&lt;byte&gt; * int * bool -&gt; System.Security.Cryptography.Pkcs.Pkcs12Info" Usage="System.Security.Cryptography.Pkcs.Pkcs12Info.Decode (encodedBytes, bytesConsumed, skipCopy)" />
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs12Info? Decode (ReadOnlyMemory&lt;byte&gt; encodedBytes, out int bytesConsumed, bool skipCopy = false);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs12Info</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedBytes" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="skipCopy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encodedBytes">要解释为 PKCS#12 PFX 的数据。</param>
        <param name="bytesConsumed">此方法返回时，包含一个指示 <paramref name="encodedBytes" /> 中的字节数量的值（由此方法读取）。 该参数未经初始化即被处理。</param>
        <param name="skipCopy"><see langword="true" /> 表示存储 <paramref name="encodedBytes" /> 而不进行防御性复制；否则为 <see langword="false" />。 默认为 <see langword="false" />。</param>
        <summary>将提供的数据读取为 PKCS#12 PFX，返回内容的对象视图。</summary>
        <returns>从输入中解码的 PKCS#12 PFX 的对象视图。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

 此方法的默认行为是从发出的第一个字节的防御副本 `bytesConsumed` `encodedBytes` 。
当 `skipCopy` 参数为时 `true` ，将跳过此防御副本。
如果跳过了防御复制，并在 `bytesConsumed` `encodedBytes` 返回值或其方法或属性生成的任何对象的生存期内更改了前个字节的内容，则这些对象的方法和属性可能会产生有意义的结果或引发异常，因为状态已损坏。
因此，如果调用方 `true` `skipCopy` 可以合理地确保数据保持不变，则建议只使用参数值。
 
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><paramref name="encodedBytes" /> 参数的内容未成功解码为 PKCS#12 PFX。</exception>
      </Docs>
    </Member>
    <Member MemberName="IntegrityMode">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode IntegrityMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode IntegrityMode" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IntegrityMode As Pkcs12IntegrityMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Pkcs::Pkcs12IntegrityMode IntegrityMode { System::Security::Cryptography::Pkcs::Pkcs12IntegrityMode get(); };" />
      <MemberSignature Language="F#" Value="member this.IntegrityMode : System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode" Usage="System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示为 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 内容提供的防篡改的类型。</summary>
        <value>指示为内容提供的篡改保护类型的枚举成员之一 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyMac">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>尝试使用密码验证 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 内容的完整性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由于因内容已更改而导致密码不正确，无法区分此错误。
 
 通常情况下，受密码保护的 PFX 对于提供完整性的 MAC 算法和提供机密性的加密算法使用相同的密码，但文件格式不会导致要求。
因此，无法保证导致 `true` 此方法返回的密码会在调用时成功 <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt%2A> 。

       ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyMac">
      <MemberSignature Language="C#" Value="public bool VerifyMac (ReadOnlySpan&lt;char&gt; password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyMac(valuetype System.ReadOnlySpan`1&lt;char&gt; password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Info.VerifyMac(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyMac (password As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyMac(ReadOnlySpan&lt;char&gt; password);" />
      <MemberSignature Language="F#" Value="member this.VerifyMac : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="pkcs12Info.VerifyMac password" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="password">用于尝试验证完整性的密码。</param>
        <summary>尝试使用由 <c>System.ReadOnlySpan{System.Char}</c> 表示的密码验证 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 内容的完整性。</summary>
        <returns>如果密码成功验证了 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 内容的完整性，则为 <see langword="true" />；如果密码不正确或内容已更改，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 在 PKCS # 12 规范中，在 `null` 密码和 "空" 密码之间进行区分，该差异反映在此方法的返回值中。
 `ReadOnlySpan<Char>.Empty` 表示 `null` 密码，并 `String.Empty.AsSpan()` 表示 "empty" 密码。 如果这两个值中的一个值返回 `true` ，则其他值不会。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" /> 值不是 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password" />。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">PKCS#12 PFX 内容指定的哈希算法选项无法识别或不受此平台支持。</exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyMac">
      <MemberSignature Language="C#" Value="public bool VerifyMac (string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyMac(string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Info.VerifyMac(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyMac (password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyMac(System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.VerifyMac : string -&gt; bool" Usage="pkcs12Info.VerifyMac password" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="password">用于尝试验证完整性的密码。</param>
        <summary>尝试使用由 <see cref="T:System.String" /> 表示的密码验证 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 内容的完整性。</summary>
        <returns>如果密码成功验证了 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 内容的完整性，则为 <see langword="true" />；如果密码不正确或内容已更改，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 在 PKCS # 12 规范中，在 `null` 密码和 "空" 密码之间进行区分，该差异反映在此方法的返回值中。
如果 `null` 字符串返回 `true` ，则 <xref:System.String.Empty?displayProperty=nameWithType> 返回 `false` ，反之亦然。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" /> 值不是 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password" />。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">PKCS#12 PFX 内容指定的哈希算法选项无法识别或不受此平台支持。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
