<Type Name="Pkcs8PrivateKeyInfo" FullName="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ce85fd411acd0ed45291cf3bab26b36469c251b" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86752841" /></Metadata><TypeSignature Language="C#" Value="public sealed class Pkcs8PrivateKeyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Pkcs8PrivateKeyInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Pkcs8PrivateKeyInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class Pkcs8PrivateKeyInfo sealed" />
  <TypeSignature Language="F#" Value="type Pkcs8PrivateKeyInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fd6fd-101">允许检查和创建 PKCS#8 PrivateKeyInfo 和 EncryptedPrivateKeyInfo 值。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-101">Enables the inspection of and creation of PKCS#8 PrivateKeyInfo and EncryptedPrivateKeyInfo values.</span></span> <span data-ttu-id="fd6fd-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-102">This class cannot be inherited.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pkcs8PrivateKeyInfo (System.Security.Cryptography.Oid algorithmId, ReadOnlyMemory&lt;byte&gt;? algorithmParameters, ReadOnlyMemory&lt;byte&gt; privateKey, bool skipCopies = false);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Oid algorithmId, valuetype System.Nullable`1&lt;valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt;&gt; algorithmParameters, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; privateKey, bool skipCopies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.#ctor(System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.ReadOnlyMemory{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (algorithmId As Oid, algorithmParameters As Nullable(Of ReadOnlyMemory(Of Byte)), privateKey As ReadOnlyMemory(Of Byte), Optional skipCopies As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo : System.Security.Cryptography.Oid * Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt; * ReadOnlyMemory&lt;byte&gt; * bool -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="new System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo (algorithmId, algorithmParameters, privateKey, skipCopies)" />
      <MemberSignature Language="C#" Value="public Pkcs8PrivateKeyInfo (System.Security.Cryptography.Oid? algorithmId, ReadOnlyMemory&lt;byte&gt;? algorithmParameters, ReadOnlyMemory&lt;byte&gt; privateKey, bool skipCopies = false);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="algorithmId" Type="System.Security.Cryptography.Oid" />
        <Parameter Name="algorithmParameters" Type="System.Nullable&lt;System.ReadOnlyMemory&lt;System.Byte&gt;&gt;" />
        <Parameter Name="privateKey" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="skipCopies" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="algorithmId"><span data-ttu-id="fd6fd-103">标识此密钥所用于的非对称算法的对象标识符 (OID)。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-103">The Object Identifier (OID) identifying the asymmetric algorithm this key is for.</span></span></param>
        <param name="algorithmParameters"><span data-ttu-id="fd6fd-104">与此密钥关联的 BER 编码算法参数；如果在编码时省略算法参数，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-104">The BER-encoded algorithm parameters associated with this key, or <see langword="null" /> to omit algorithm parameters when encoding.</span></span></param>
        <param name="privateKey"><span data-ttu-id="fd6fd-105">特定于算法的编码私钥。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-105">The algorithm-specific encoded private key.</span></span></param>
        <param name="skipCopies"><span data-ttu-id="fd6fd-106">如果存储 <paramref name="algorithmParameters" /> 和 <paramref name="privateKey" /> 而不创建防御性副本，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-106"><see langword="true" /> to store <paramref name="algorithmParameters" /> and <paramref name="privateKey" /> without making a defensive copy; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fd6fd-107">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-107">The default is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="fd6fd-108">初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-108">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="fd6fd-109">不对参数执行验证 `privateKey` ; 并非所有算法都需要 BER 编码的值。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-109">No validation is done on the `privateKey` parameter; not all algorithms require a BER-encoded value.</span></span>

<span data-ttu-id="fd6fd-110">此构造函数的默认行为是创建和参数的防御性副本 `algorithmParameters` `privateKey` 。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-110">The default behavior of this constructor is to make a defensive copy of both the `algorithmParameters` and the `privateKey` parameters.</span></span>
<span data-ttu-id="fd6fd-111">当 `skipCopies` 参数为时 `true` ，将跳过此防御副本。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-111">When the `skipCopies` parameter is `true`, this defensive copy is skipped.</span></span>
<span data-ttu-id="fd6fd-112">如果在 `algorithmParameters` 返回值或其方法或属性所生成的任何对象的生存期内跳过了该防御副本，或其中的内容 `privateKey` 发生了更改，则这些对象的方法和属性可能会产生有意义的结果或引发异常，因为状态已损坏。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-112">If the defensive copy is skipped and the contents of either `algorithmParameters` or `privateKey` change during the lifetime of the returned value or of any object produced by its methods or properties, then methods and properties on those objects may produce nonsense results or throw exceptions due to the corrupted state.</span></span>
<span data-ttu-id="fd6fd-113">因此，如果调用方 `true` `skipCopies` 可以合理地确保数据保持不变，则建议只使用参数值。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-113">Callers are therefore advised to only use a `true` value for the `skipCopies` parameter when they can be reasonably assured that the data will stay intact.</span></span>
    
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd6fd-114"><paramref name="algorithmId" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-114">The <paramref name="algorithmId" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="fd6fd-115"><paramref name="algorithmParameters" /> 参数不为 <see langword="null" />、空或单个 BER 编码值。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-115">The <paramref name="algorithmParameters" /> parameter is not <see langword="null" />, empty, or a single BER-encoded value.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create(System.Security.Cryptography.AsymmetricAlgorithm)" />
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode" />
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmId">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid AlgorithmId { get; }" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid AlgorithmId" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlgorithmId As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ AlgorithmId { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmId : System.Security.Cryptography.Oid" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmId" />
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid? AlgorithmId { get; }" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd6fd-116">获取对象标识符 (OID) 值，该值标识此密钥所用于的算法。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-116">Gets the Object Identifier (OID) value identifying the algorithm this key is for.</span></span></summary>
        <value><span data-ttu-id="fd6fd-117"> (OID 的对象标识符) 标识此密钥所适用的算法的值。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-117">The Object Identifier (OID) value identifying the algorithm this key is for.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlgorithmParameters">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;byte&gt;? AlgorithmParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt;&gt; AlgorithmParameters" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlgorithmParameters As Nullable(Of ReadOnlyMemory(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;ReadOnlyMemory&lt;System::Byte&gt;&gt; AlgorithmParameters { Nullable&lt;ReadOnlyMemory&lt;System::Byte&gt;&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmParameters : Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt;" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.ReadOnlyMemory&lt;System.Byte&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd6fd-118">获取一个内存值，该值包含与此密钥关联的 BER 编码的算法参数。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-118">Gets a memory value containing the BER-encoded algorithm parameters associated with this key.</span></span></summary>
        <value><span data-ttu-id="fd6fd-119">一个内存值，包含与此键关联的 BER 编码的算法参数， <see langword="null" /> 如果不存在任何参数，则为。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-119">A memory value containing the BER-encoded algorithm parameters associated with this key, or <see langword="null" /> if no parameters were present.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CryptographicAttributeObjectCollection Attributes { get; }" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CryptographicAttributeObjectCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As CryptographicAttributeObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CryptographicAttributeObjectCollection ^ Attributes { System::Security::Cryptography::CryptographicAttributeObjectCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Security.Cryptography.CryptographicAttributeObjectCollection" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Attributes" />
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CryptographicAttributeObjectCollection? Attributes { get; }" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CryptographicAttributeObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd6fd-120">获取此私钥的可修改属性集合。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-120">Gets the modifiable collection of attributes for this private key.</span></span></summary>
        <value><span data-ttu-id="fd6fd-121">要用私钥进行编码的属性的可修改集合。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-121">The modifiable collection of attributes to encode with the private key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo Create (System.Security.Cryptography.AsymmetricAlgorithm privateKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo Create(class System.Security.Cryptography.AsymmetricAlgorithm privateKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (privateKey As AsymmetricAlgorithm) As Pkcs8PrivateKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Pkcs::Pkcs8PrivateKeyInfo ^ Create(System::Security::Cryptography::AsymmetricAlgorithm ^ privateKey);" />
      <MemberSignature Language="F#" Value="static member Create : System.Security.Cryptography.AsymmetricAlgorithm -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create privateKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateKey" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Parameters>
      <Docs>
        <param name="privateKey"><span data-ttu-id="fd6fd-122">要用 PKCS#8 PrivateKeyInfo 表示的私钥。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-122">The private key to represent in a PKCS#8 PrivateKeyInfo.</span></span></param>
        <summary><span data-ttu-id="fd6fd-123">将指定密钥导出为 PKCS#8 PrivateKeyInfo，并返回其解码后的解释。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-123">Exports a specified key as a PKCS#8 PrivateKeyInfo and returns its decoded interpretation.</span></span></summary>
        <returns><span data-ttu-id="fd6fd-124">导出的 PKCS#8 PrivateKeyInfo 的解码解释。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-124">The decoded interpretation of the exported PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd6fd-125"><paramref name="privateKey" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-125">The <paramref name="privateKey" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.AsymmetricAlgorithm.ExportPkcs8PrivateKey" />
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode" />
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo Decode (ReadOnlyMemory&lt;byte&gt; source, out int bytesRead, bool skipCopy = false);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo Decode(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead, bool skipCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decode (source As ReadOnlyMemory(Of Byte), ByRef bytesRead As Integer, Optional skipCopy As Boolean = false) As Pkcs8PrivateKeyInfo" />
      <MemberSignature Language="F#" Value="static member Decode : ReadOnlyMemory&lt;byte&gt; * int * bool -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode (source, bytesRead, skipCopy)" />
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo? Decode (ReadOnlyMemory&lt;byte&gt; source, out int bytesRead, bool skipCopy = false);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" />
        <Parameter Name="skipCopy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="fd6fd-126">要解释为 PKCS#8 PrivateKeyInfo 值的数据。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-126">The data to interpret as a PKCS#8 PrivateKeyInfo value.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="fd6fd-127">此方法返回时，包含一个指示从 <paramref name="source" /> 中读取的字节数的值。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-127">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="fd6fd-128">该参数未经初始化即被处理。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-128">This parameter is treated as uninitialized.</span></span></param>
        <param name="skipCopy"><span data-ttu-id="fd6fd-129"><see langword="true" /> 表示存储 <paramref name="source" /> 而不进行防御性复制；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-129"><see langword="true" /> to store <paramref name="source" /> without making a defensive copy; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fd6fd-130">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-130">The default is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="fd6fd-131">将提供的数据读取为 PKCS#8 PrivateKeyInfo，并返回内容的对象视图。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-131">Reads the provided data as a PKCS#8 PrivateKeyInfo and returns an object view of the contents.</span></span></summary>
        <returns><span data-ttu-id="fd6fd-132">解码为 PKCS#8 PrivateKeyInfo 的内容的对象视图。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-132">An object view of the contents decoded as a PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks
 <span data-ttu-id="fd6fd-133">此方法的默认行为是从发出的第一个字节的防御副本 `bytesConsumed` `source` 。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-133">The default behavior of this method is to make a defensive copy of the first `bytesConsumed` bytes from `source`.</span></span>
<span data-ttu-id="fd6fd-134">当 `skipCopy` 参数为时 `true` ，将跳过此防御副本。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-134">When the `skipCopy` parameter is `true`, this defensive copy is skipped.</span></span>
<span data-ttu-id="fd6fd-135">如果跳过了防御复制，并在 `bytesConsumed` `source` 返回值或其方法或属性生成的任何对象的生存期内更改了前个字节的内容，则这些对象的方法和属性可能会产生有意义的结果或引发异常，因为状态已损坏。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-135">If the defensive copy is skipped and the contents of the first `bytesConsumed` bytes of `source` change during the lifetime of the returned value or of any object produced by its methods or properties, then methods and properties on those objects may produce nonsense results or throw exceptions due to the corrupted state.</span></span>
<span data-ttu-id="fd6fd-136">因此，如果调用方 `true` `skipCopy` 可以合理地确保数据保持不变，则建议只使用参数值。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-136">Callers are therefore advised to only use a `true` value for the `skipCopy` parameter when they can be reasonably assured that the data will stay intact.</span></span>
 
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="fd6fd-137"><paramref name="source" /> 参数的内容未成功解码为 PKCS#8 PrivateKeyInfo。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-137">The contents of the <paramref name="source" /> parameter were not successfully decoded as a PKCS#8 PrivateKeyInfo.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptAndDecode">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo DecryptAndDecode (ReadOnlySpan&lt;byte&gt; passwordBytes, ReadOnlyMemory&lt;byte&gt; source, out int bytesRead);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo DecryptAndDecode(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Byte},System.ReadOnlyMemory{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecryptAndDecode (passwordBytes As ReadOnlySpan(Of Byte), source As ReadOnlyMemory(Of Byte), ByRef bytesRead As Integer) As Pkcs8PrivateKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Pkcs::Pkcs8PrivateKeyInfo ^ DecryptAndDecode(ReadOnlySpan&lt;System::Byte&gt; passwordBytes, ReadOnlyMemory&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] int % bytesRead);" />
      <MemberSignature Language="F#" Value="static member DecryptAndDecode : ReadOnlySpan&lt;byte&gt; * ReadOnlyMemory&lt;byte&gt; * int -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode (passwordBytes, source, bytesRead)" />
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo? DecryptAndDecode (ReadOnlySpan&lt;byte&gt; passwordBytes, ReadOnlyMemory&lt;byte&gt; source, out int bytesRead);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="source" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="passwordBytes"><span data-ttu-id="fd6fd-138">解密密钥材料时用作密码的字节。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-138">The bytes to use as a password when decrypting the key material.</span></span></param>
        <param name="source"><span data-ttu-id="fd6fd-139">要在 ASN.1-BER 编码中读取为 PKCS#8 EncryptedPrivateKeyInfo 结构的数据。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-139">The data to read as a PKCS#8 EncryptedPrivateKeyInfo structure in the ASN.1-BER encoding.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="fd6fd-140">此方法返回时，包含一个指示从 <paramref name="source" /> 中读取的字节数的值。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-140">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="fd6fd-141">该参数未经初始化即被处理。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-141">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="fd6fd-142">使用提供的基于字节的密码对提供的数据进行解密，并将输出解码为 PKCS#8 PrivateKeyInfo 的对象视图。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-142">Decrypts the provided data using the provided byte-based password and decodes the output into an object view of the PKCS#8 PrivateKeyInfo.</span></span></summary>
        <returns><span data-ttu-id="fd6fd-143">解码为 PKCS#8 PrivateKeyInfo 的已解密内容的对象视图。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-143">An object view of the contents decrypted decoded as a PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd6fd-144">密码字节直接传递到密钥派生函数 (KDF) 使用的算法所使用的算法 `pbeParameters` 。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-144">The password bytes are passed directly into the Key Derivation Function (KDF) used by the algorithm indicated by `pbeParameters`.</span></span>
<span data-ttu-id="fd6fd-145">这样，在使用 PBKDF2 处理密码时，与使用 UTF-8 以外的文本编码的其他系统兼容， (基于密码的密钥派生函数 2) 。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-145">This enables compatibility with other systems which use a text encoding other than UTF-8 when processing passwords with PBKDF2 (Password-Based Key Derivation Function 2).</span></span>

 <span data-ttu-id="fd6fd-146">此方法仅支持 EncryptedPrivateKeyInfo 的 BER/CER/DER) 编码的二进制 (。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-146">This method only supports the binary (BER/CER/DER) encoding of EncryptedPrivateKeyInfo.</span></span>
<span data-ttu-id="fd6fd-147">如果值采用 Base64 编码或 PEM 文本格式，则调用方必须在调用此方法之前对内容进行 Base64 编码。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-147">If the value is Base64-encoded or in the PEM text format, the caller must Base64-decode the contents before calling this method.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="fd6fd-148">密码不正确。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-148">The password is incorrect.</span></span>

<span data-ttu-id="fd6fd-149">-或-</span><span class="sxs-lookup"><span data-stu-id="fd6fd-149">-or-</span></span>

<span data-ttu-id="fd6fd-150"><paramref name="source" /> 的内容表示要应用的密钥派生功能 (KDF) 是旧的 PKCS#12 KDF，需要基于 <see cref="T:System.Char" /> 的密码。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-150">The contents of <paramref name="source" /> indicate the Key Derivation Function (KDF) to apply is the legacy PKCS#12 KDF, which requires <see cref="T:System.Char" />-based passwords.</span></span>

<span data-ttu-id="fd6fd-151">-或-</span><span class="sxs-lookup"><span data-stu-id="fd6fd-151">-or-</span></span>

<span data-ttu-id="fd6fd-152"><paramref name="source" /> 的内容不表示 ASN.1-BER 编码的 PKCS#8 EncryptedPrivateKeyInfo 结构。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-152">The contents of <paramref name="source" /> do not represent an ASN.1-BER-encoded PKCS#8 EncryptedPrivateKeyInfo structure.</span></span></exception>
      </Docs>
      <altmember cref="M:System.Security.Cryptography.AsymmetricAlgorithm.ImportPkcs8PrivateKey" />
    </Member>
    <Member MemberName="DecryptAndDecode">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo DecryptAndDecode (ReadOnlySpan&lt;char&gt; password, ReadOnlyMemory&lt;byte&gt; source, out int bytesRead);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo DecryptAndDecode(valuetype System.ReadOnlySpan`1&lt;char&gt; password, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecryptAndDecode (password As ReadOnlySpan(Of Char), source As ReadOnlyMemory(Of Byte), ByRef bytesRead As Integer) As Pkcs8PrivateKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Pkcs::Pkcs8PrivateKeyInfo ^ DecryptAndDecode(ReadOnlySpan&lt;char&gt; password, ReadOnlyMemory&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] int % bytesRead);" />
      <MemberSignature Language="F#" Value="static member DecryptAndDecode : ReadOnlySpan&lt;char&gt; * ReadOnlyMemory&lt;byte&gt; * int -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode (password, source, bytesRead)" />
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo? DecryptAndDecode (ReadOnlySpan&lt;char&gt; password, ReadOnlyMemory&lt;byte&gt; source, out int bytesRead);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="source" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="fd6fd-153">解密密钥材料时使用的密码。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-153">The password to use when decrypting the key material.</span></span></param>
        <param name="source"><span data-ttu-id="fd6fd-154">ASN.1-BER 编码中 PKCS#8 EncryptedPrivateKeyInfo 结构的字节。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-154">The bytes of a PKCS#8 EncryptedPrivateKeyInfo structure in the ASN.1-BER encoding.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="fd6fd-155">此方法返回时，包含一个指示从 <paramref name="source" /> 中读取的字节数的值。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-155">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="fd6fd-156">该参数未经初始化即被处理。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-156">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="fd6fd-157">使用提供的基于字符的密码对提供的数据进行解密，并将输出解码为 PKCS#8 PrivateKeyInfo 的对象视图。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-157">Decrypts the provided data using the provided character-based password and decodes the output into an object view of the PKCS#8 PrivateKeyInfo.</span></span></summary>
        <returns><span data-ttu-id="fd6fd-158">解码为 PKCS#8 PrivateKeyInfo 的已解密内容的对象视图。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-158">An object view of the contents decrypted decoded as a PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd6fd-159">如果的内容 `source` 指示使用 PBKDF1 (基于密码的密钥派生函数 1) 或 PBKDF2 (基于密码的密钥派生函数 2) 的算法，则密码将通过 utf-8 编码转换为字节。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-159">When the contents of `source` indicate an algorithm that uses PBKDF1 (Password-Based Key Derivation Function 1) or PBKDF2 (Password-Based Key Derivation Function 2), the password is converted to bytes via the UTF-8 encoding.</span></span>

 <span data-ttu-id="fd6fd-160">此方法仅支持 EncryptedPrivateKeyInfo 的 BER/CER/DER) 编码的二进制 (。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-160">This method only supports the binary (BER/CER/DER) encoding of EncryptedPrivateKeyInfo.</span></span>
<span data-ttu-id="fd6fd-161">如果值采用 Base64 编码或 PEM 文本格式，则调用方必须在调用此方法之前对内容进行 Base64 编码。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-161">If the value is Base64-encoded or in the PEM text format, the caller must Base64-decode the contents before calling this method.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Security.Cryptography.AsymmetricAlgorithm.ImportEncryptedPkcs8PrivateKey" />
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public byte[] Encode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encode" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encode();" />
      <MemberSignature Language="F#" Value="member this.Encode : unit -&gt; byte[]" Usage="pkcs8PrivateKeyInfo.Encode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd6fd-162">将此实例的属性数据编码为 PKCS#8 PrivateKeyInfo，并将编码作为字节数组返回。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-162">Encodes the property data of this instance as a PKCS#8 PrivateKeyInfo and returns the encoding as a byte array.</span></span></summary>
        <returns><span data-ttu-id="fd6fd-163">一个字节数组，表示 PKCS#8 PrivateKeyInfo 的编码形式。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-163">A byte array representing the encoded form of the PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncode" />
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (ReadOnlySpan&lt;byte&gt; passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (passwordBytes As ReadOnlySpan(Of Byte), pbeParameters As PbeParameters) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(ReadOnlySpan&lt;System::Byte&gt; passwordBytes, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.PbeParameters -&gt; byte[]" Usage="pkcs8PrivateKeyInfo.Encrypt (passwordBytes, pbeParameters)" />
      <MemberSignature Language="C#" Value="public byte[] Encrypt (ReadOnlySpan&lt;byte&gt;? passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="passwordBytes"><span data-ttu-id="fd6fd-164">加密密钥材料时用作密码的字节。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-164">The bytes to use as a password when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="fd6fd-165">加密密钥材料时使用的基于密码加密 (PBE) 参数。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-165">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <summary><span data-ttu-id="fd6fd-166">在使用指定的基于字节的密码和加密参数进行加密后，根据此对象的属性内容生成 PKCS#8 EncryptedPrivateKeyInfo。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-166">Produces a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified byte-based password and encryption parameters.</span></span></summary>
        <returns><span data-ttu-id="fd6fd-167">一个字节数组，其中包含 PKCS#8 EncryptedPrivateKeyInfo 的编码形式。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-167">A byte array containing the encoded form of the PKCS#8 EncryptedPrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd6fd-168">密码字节直接传递到密钥派生函数 (KDF) 使用的算法所使用的算法 `pbeParameters` 。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-168">The password bytes are passed directly into the Key Derivation Function (KDF) used by the algorithm indicated by `pbeParameters`.</span></span>
<span data-ttu-id="fd6fd-169">这样，在使用 PBKDF2 处理密码时，与使用 UTF-8 以外的文本编码的其他系统兼容， (基于密码的密钥派生函数 2) 。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-169">This enables compatibility with other systems which use a text encoding other than UTF-8 when processing passwords with PBKDF2 (Password-Based Key Derivation Function 2).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="fd6fd-170"><paramref name="pbeParameters" /> 指示应使用需要基于 <see cref="T:System.Char" /> 密码的 <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-170"><paramref name="pbeParameters" /> indicates that <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" /> should be used, which requires <see cref="T:System.Char" />-based passwords.</span></span></exception>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt" />
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.PbeParameters pbeParameters);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(valuetype System.ReadOnlySpan`1&lt;char&gt; password, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (password As ReadOnlySpan(Of Char), pbeParameters As PbeParameters) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(ReadOnlySpan&lt;char&gt; password, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.PbeParameters -&gt; byte[]" Usage="pkcs8PrivateKeyInfo.Encrypt (password, pbeParameters)" />
      <MemberSignature Language="C#" Value="public byte[] Encrypt (ReadOnlySpan&lt;char&gt;? password, System.Security.Cryptography.PbeParameters pbeParameters);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="fd6fd-171">加密密钥材料时使用的密码。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-171">The password to use when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="fd6fd-172">加密密钥材料时使用的基于密码加密 (PBE) 参数。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-172">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <summary><span data-ttu-id="fd6fd-173">在使用指定的基于字符的密码和加密参数进行加密后，根据此对象的属性内容生成 PKCS#8 EncryptedPrivateKeyInfo。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-173">Produces a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified character-based password and encryption parameters.</span></span></summary>
        <returns><span data-ttu-id="fd6fd-174">一个字节数组，其中包含 PKCS#8 EncryptedPrivateKeyInfo 的编码形式。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-174">A byte array containing the encoded form of the PKCS#8 EncryptedPrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd6fd-175">当 `pbeParameters` 指示使用 PBKDF2 (基于密码的密钥派生函数 2) 的算法时，密码将通过 utf-8 编码转换为字节。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-175">When `pbeParameters` indicates an algorithm that uses PBKDF2 (Password-Based Key Derivation Function 2), the password is converted to bytes via the UTF-8 encoding.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt" />
      </Docs>
    </Member>
    <Member MemberName="PrivateKeyBytes">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;byte&gt; PrivateKeyBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; PrivateKeyBytes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.PrivateKeyBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrivateKeyBytes As ReadOnlyMemory(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlyMemory&lt;System::Byte&gt; PrivateKeyBytes { ReadOnlyMemory&lt;System::Byte&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.PrivateKeyBytes : ReadOnlyMemory&lt;byte&gt;" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.PrivateKeyBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd6fd-176">获取一个内存值，该值表示特定于算法的编码私钥。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-176">Gets a memory value that represents the algorithm-specific encoded private key.</span></span></summary>
        <value><span data-ttu-id="fd6fd-177">表示算法特定的编码私钥的内存值。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-177">A memory value that represents the algorithm-specific encoded private key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryEncode">
      <MemberSignature Language="C#" Value="public bool TryEncode (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncode(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncode(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncode (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncode(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncode : Span&lt;byte&gt; * int -&gt; bool" Usage="pkcs8PrivateKeyInfo.TryEncode (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="fd6fd-178">接收 PKCS#8 PrivateKeyInfo 数据的字节范围。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-178">The byte span to receive the PKCS#8 PrivateKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="fd6fd-179">此方法返回时，包含一个指示写入 <paramref name="destination" /> 的字节数的值。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-179">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="fd6fd-180">该参数未经初始化即被处理。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-180">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="fd6fd-181">尝试将此实例的属性数据编码为 PKCS#8 PrivateKeyInfo，并将结果写入到提供的缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-181">Attempts to encode the property data of this instance as a PKCS#8 PrivateKeyInfo, writing the results into a provided buffer.</span></span></summary>
        <returns><span data-ttu-id="fd6fd-182">如果 <paramref name="destination" /> 具有足够的大小以接收输出，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-182"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encode" />
      </Docs>
    </Member>
    <Member MemberName="TryEncrypt">
      <MemberSignature Language="C#" Value="public bool TryEncrypt (ReadOnlySpan&lt;byte&gt; passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters, Span&lt;byte&gt; destination, out int bytesWritten);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncrypt(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, class System.Security.Cryptography.PbeParameters pbeParameters, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncrypt (passwordBytes As ReadOnlySpan(Of Byte), pbeParameters As PbeParameters, destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncrypt(ReadOnlySpan&lt;System::Byte&gt; passwordBytes, System::Security::Cryptography::PbeParameters ^ pbeParameters, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncrypt : ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.PbeParameters * Span&lt;byte&gt; * int -&gt; bool" Usage="pkcs8PrivateKeyInfo.TryEncrypt (passwordBytes, pbeParameters, destination, bytesWritten)" />
      <MemberSignature Language="C#" Value="public bool TryEncrypt (ReadOnlySpan&lt;byte&gt; passwordBytes, System.Security.Cryptography.PbeParameters? pbeParameters, Span&lt;byte&gt; destination, out int bytesWritten);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="passwordBytes"><span data-ttu-id="fd6fd-183">加密密钥材料时用作密码的字节。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-183">The bytes to use as a password when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="fd6fd-184">加密密钥材料时使用的基于密码加密 (PBE) 参数。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-184">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <param name="destination"><span data-ttu-id="fd6fd-185">接收 PKCS#8 EncryptedPrivateKeyInfo 数据的字节范围。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-185">The byte span to receive the PKCS#8 EncryptedPrivateKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="fd6fd-186">此方法返回时，包含一个指示写入 <paramref name="destination" /> 的字节数的值。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-186">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="fd6fd-187">该参数未经初始化即被处理。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-187">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="fd6fd-188">在使用指定的基于字节的密码和加密参数进行加密后，尝试根据此对象的属性内容生成 PKCS#8 EncryptedPrivateKeyInfo，并将结果写入到提供的缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-188">Attempts to produce a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified byte-based password and encryption parameters, writing the results into a provided buffer.</span></span></summary>
        <returns><span data-ttu-id="fd6fd-189">如果 <paramref name="destination" /> 具有足够的大小以接收输出，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-189"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd6fd-190">密码字节直接传递到密钥派生函数 (KDF) 使用的算法所使用的算法 `pbeParameters` 。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-190">The password bytes are passed directly into the Key Derivation Function (KDF) used by the algorithm indicated by `pbeParameters`.</span></span>
<span data-ttu-id="fd6fd-191">这样，在使用 PBKDF2 处理密码时，与使用 UTF-8 以外的文本编码的其他系统兼容， (基于密码的密钥派生函数 2) 。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-191">This enables compatibility with other systems which use a text encoding other than UTF-8 when processing passwords with PBKDF2 (Password-Based Key Derivation Function 2).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt" />
      </Docs>
    </Member>
    <Member MemberName="TryEncrypt">
      <MemberSignature Language="C#" Value="public bool TryEncrypt (ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.PbeParameters pbeParameters, Span&lt;byte&gt; destination, out int bytesWritten);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncrypt(valuetype System.ReadOnlySpan`1&lt;char&gt; password, class System.Security.Cryptography.PbeParameters pbeParameters, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncrypt (password As ReadOnlySpan(Of Char), pbeParameters As PbeParameters, destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncrypt(ReadOnlySpan&lt;char&gt; password, System::Security::Cryptography::PbeParameters ^ pbeParameters, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncrypt : ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.PbeParameters * Span&lt;byte&gt; * int -&gt; bool" Usage="pkcs8PrivateKeyInfo.TryEncrypt (password, pbeParameters, destination, bytesWritten)" />
      <MemberSignature Language="C#" Value="public bool TryEncrypt (ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.PbeParameters? pbeParameters, Span&lt;byte&gt; destination, out int bytesWritten);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="fd6fd-192">加密密钥材料时使用的密码。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-192">The password to use when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="fd6fd-193">加密密钥材料时使用的基于密码加密 (PBE) 参数。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-193">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <param name="destination"><span data-ttu-id="fd6fd-194">接收 PKCS#8 EncryptedPrivateKeyInfo 数据的字节范围。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-194">The byte span to receive the PKCS#8 EncryptedPrivateKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="fd6fd-195">此方法返回时，包含一个指示写入 <paramref name="destination" /> 的字节数的值。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-195">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="fd6fd-196">该参数未经初始化即被处理。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-196">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="fd6fd-197">在使用指定的基于字符的密码和加密参数进行加密后，尝试根据此对象的属性内容生成 PKCS#8 EncryptedPrivateKeyInfo，并将结果写入到提供的缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-197">Attempts to produce a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified character-based password and encryption parameters, writing the result into a provided buffer.</span></span></summary>
        <returns><span data-ttu-id="fd6fd-198">如果 <paramref name="destination" /> 具有足够的大小以接收输出，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-198"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd6fd-199">当 `pbeParameters` 指示使用 PBKDF2 (基于密码的密钥派生函数 2) 的算法时，密码将通过 utf-8 编码转换为字节。</span><span class="sxs-lookup"><span data-stu-id="fd6fd-199">When `pbeParameters` indicates an algorithm that uses PBKDF2 (Password-Based Key Derivation Function 2), the password is converted to bytes via the UTF-8 encoding.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt" />
      </Docs>
    </Member>
  </Members>
</Type>
