<Type Name="Pkcs12Builder" FullName="System.Security.Cryptography.Pkcs.Pkcs12Builder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7cf6fe14a6301c7af4b44b17e2764840c6d40e06" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89858432" /></Metadata><TypeSignature Language="C#" Value="public sealed class Pkcs12Builder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Pkcs12Builder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Pkcs.Pkcs12Builder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Pkcs12Builder" />
  <TypeSignature Language="C++ CLI" Value="public ref class Pkcs12Builder sealed" />
  <TypeSignature Language="F#" Value="type Pkcs12Builder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>启用 PKCS#12 PFX 数据值的创建。 此类不能被继承。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pkcs12Builder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Pkcs12Builder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12Builder" /> 类的新值。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSafeContentsEncrypted">
      <MemberSignature Language="C#" Value="public void AddSafeContentsEncrypted (System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, byte[] passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSafeContentsEncrypted(class System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, unsigned int8[] passwordBytes, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.Byte[],System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSafeContentsEncrypted (safeContents As Pkcs12SafeContents, passwordBytes As Byte(), pbeParameters As PbeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSafeContentsEncrypted(System::Security::Cryptography::Pkcs::Pkcs12SafeContents ^ safeContents, cli::array &lt;System::Byte&gt; ^ passwordBytes, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.AddSafeContentsEncrypted : System.Security.Cryptography.Pkcs.Pkcs12SafeContents * byte[] * System.Security.Cryptography.PbeParameters -&gt; unit" Usage="pkcs12Builder.AddSafeContentsEncrypted (safeContents, passwordBytes, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeContents" Type="System.Security.Cryptography.Pkcs.Pkcs12SafeContents" />
        <Parameter Name="passwordBytes" Type="System.Byte[]" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="safeContents">要添加到 PFX 的内容。</param>
        <param name="passwordBytes">加密内容时用作密码的字节数组。</param>
        <param name="pbeParameters">加密内容时使用的基于密码加密 (PBE) 参数。</param>
        <summary>将内容添加到使用字节数组中基于字节的密码加密的捆绑包中的 PFX。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 密码字节直接传递到密钥派生函数 (KDF) 使用的算法所使用的算法 `pbeParameters` 。
这样，在使用 PBKDF2 处理密码时，与使用 UTF-8 以外的文本编码的其他系统兼容， (基于密码的密钥派生函数 2) 。

 的内容在 `safeContents` 调用此方法时读取，并在内部存储为加密内容。
在 <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeContents> <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeBag> 此方法调用之后对或任何其引用所做的任何更改都不会在最终输出中反映出来。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="safeContents" /> 或 <paramref name="pbeParameters" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="safeContents" /> 参数值已经过加密。</exception>
        <exception cref="T:System.InvalidOperationException">PFX 已密封（<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 为 <see langword="true" />）。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><paramref name="pbeParameters" /> 指示应使用需要基于 <see cref="T:System.Char" /> 密码的 <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddSafeContentsEncrypted">
      <MemberSignature Language="C#" Value="public void AddSafeContentsEncrypted (System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, ReadOnlySpan&lt;byte&gt; passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSafeContentsEncrypted(class System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSafeContentsEncrypted (safeContents As Pkcs12SafeContents, passwordBytes As ReadOnlySpan(Of Byte), pbeParameters As PbeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSafeContentsEncrypted(System::Security::Cryptography::Pkcs::Pkcs12SafeContents ^ safeContents, ReadOnlySpan&lt;System::Byte&gt; passwordBytes, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.AddSafeContentsEncrypted : System.Security.Cryptography.Pkcs.Pkcs12SafeContents * ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.PbeParameters -&gt; unit" Usage="pkcs12Builder.AddSafeContentsEncrypted (safeContents, passwordBytes, pbeParameters)" />
      <MemberSignature Language="C#" Value="public void AddSafeContentsEncrypted (System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, ReadOnlySpan&lt;byte&gt;? passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeContents" Type="System.Security.Cryptography.Pkcs.Pkcs12SafeContents" />
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="safeContents">要添加到 PFX 的内容。</param>
        <param name="passwordBytes">加密内容时用作密码的字节范围。</param>
        <param name="pbeParameters">加密内容时使用的基于密码加密 (PBE) 参数。</param>
        <summary>将内容添加到使用字节范围中基于字节的密码加密的捆绑包中的 PFX。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 密码字节直接传递到密钥派生函数 (KDF) 使用的算法所使用的算法 `pbeParameters` 。
这样，在使用 PBKDF2 处理密码时，与使用 UTF-8 以外的文本编码的其他系统兼容， (基于密码的密钥派生函数 2) 。

 的内容在 `safeContents` 调用此方法时读取，并在内部存储为加密内容。
在 <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeContents> <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeBag> 此方法调用之后对或任何其引用所做的任何更改都不会在最终输出中反映出来。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="safeContents" /> 或 <paramref name="pbeParameters" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="safeContents" /> 参数值已经过加密。</exception>
        <exception cref="T:System.InvalidOperationException">PFX 已密封（<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 为 <see langword="true" />）。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><paramref name="pbeParameters" /> 指示应使用需要基于 <see cref="T:System.Char" /> 密码的 <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddSafeContentsEncrypted">
      <MemberSignature Language="C#" Value="public void AddSafeContentsEncrypted (System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.PbeParameters pbeParameters);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSafeContentsEncrypted(class System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, valuetype System.ReadOnlySpan`1&lt;char&gt; password, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSafeContentsEncrypted (safeContents As Pkcs12SafeContents, password As ReadOnlySpan(Of Char), pbeParameters As PbeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSafeContentsEncrypted(System::Security::Cryptography::Pkcs::Pkcs12SafeContents ^ safeContents, ReadOnlySpan&lt;char&gt; password, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.AddSafeContentsEncrypted : System.Security.Cryptography.Pkcs.Pkcs12SafeContents * ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.PbeParameters -&gt; unit" Usage="pkcs12Builder.AddSafeContentsEncrypted (safeContents, password, pbeParameters)" />
      <MemberSignature Language="C#" Value="public void AddSafeContentsEncrypted (System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, ReadOnlySpan&lt;char&gt;? password, System.Security.Cryptography.PbeParameters pbeParameters);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeContents" Type="System.Security.Cryptography.Pkcs.Pkcs12SafeContents" />
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="safeContents">要添加到 PFX 的内容。</param>
        <param name="password">加密内容时用作密码的范围。</param>
        <param name="pbeParameters">加密内容时使用的基于密码加密 (PBE) 参数。</param>
        <summary>将内容添加到使用字节范围中基于字符的密码加密的捆绑包中的 PFX。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 `pbeParameters` 指示使用 PBKDF2 (基于密码的密钥派生函数 2) 的算法时，密码将通过 utf-8 编码转换为字节。

 的内容在 `safeContents` 调用此方法时读取，并在内部存储为加密内容。
在 <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeContents> <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeBag> 此方法调用之后对或任何其引用所做的任何更改都不会在最终输出中反映出来。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="safeContents" /> 或 <paramref name="pbeParameters" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="safeContents" /> 参数值已经过加密。</exception>
        <exception cref="T:System.InvalidOperationException">PFX 已密封（<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 为 <see langword="true" />）。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddSafeContentsEncrypted">
      <MemberSignature Language="C#" Value="public void AddSafeContentsEncrypted (System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, string password, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSafeContentsEncrypted(class System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, string password, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.String,System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSafeContentsEncrypted (safeContents As Pkcs12SafeContents, password As String, pbeParameters As PbeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSafeContentsEncrypted(System::Security::Cryptography::Pkcs::Pkcs12SafeContents ^ safeContents, System::String ^ password, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.AddSafeContentsEncrypted : System.Security.Cryptography.Pkcs.Pkcs12SafeContents * string * System.Security.Cryptography.PbeParameters -&gt; unit" Usage="pkcs12Builder.AddSafeContentsEncrypted (safeContents, password, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeContents" Type="System.Security.Cryptography.Pkcs.Pkcs12SafeContents" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="safeContents">要添加到 PFX 的内容。</param>
        <param name="password">加密内容时用作密码的字符串。</param>
        <param name="pbeParameters">加密内容时使用的基于密码加密 (PBE) 参数。</param>
        <summary>将内容添加到使用字符串中基于字符的密码加密的捆绑包中的 PFX。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 `pbeParameters` 指示使用 PBKDF2 (基于密码的密钥派生函数 2) 的算法时，密码将通过 utf-8 编码转换为字节。

 的内容在 `safeContents` 调用此方法时读取，并在内部存储为加密内容。
在 <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeContents> <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeBag> 此方法调用之后对或任何其引用所做的任何更改都不会在最终输出中反映出来。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="safeContents" /> 或 <paramref name="pbeParameters" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="safeContents" /> 参数值已经过加密。</exception>
        <exception cref="T:System.InvalidOperationException">PFX 已密封（<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 为 <see langword="true" />）。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddSafeContentsUnencrypted">
      <MemberSignature Language="C#" Value="public void AddSafeContentsUnencrypted (System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSafeContentsUnencrypted(class System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsUnencrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSafeContentsUnencrypted (safeContents As Pkcs12SafeContents)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSafeContentsUnencrypted(System::Security::Cryptography::Pkcs::Pkcs12SafeContents ^ safeContents);" />
      <MemberSignature Language="F#" Value="member this.AddSafeContentsUnencrypted : System.Security.Cryptography.Pkcs.Pkcs12SafeContents -&gt; unit" Usage="pkcs12Builder.AddSafeContentsUnencrypted safeContents" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeContents" Type="System.Security.Cryptography.Pkcs.Pkcs12SafeContents" />
      </Parameters>
      <Docs>
        <param name="safeContents">要添加到 PFX 的内容。</param>
        <summary>在不加密的情况下将内容添加到 PFX。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `safeContents` 值已加密，则此方法会将其按原样添加到 PFX。

 的内容在 `safeContents` 调用此方法期间读取，并在内部存储为其内容的编码形式。
在 <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeContents> <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeBag> 此方法调用之后对或任何其引用所做的任何更改都不会在最终输出中反映出来。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="safeContents" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">PFX 已密封（<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 为 <see langword="true" />）。</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public byte[] Encode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.Encode" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encode();" />
      <MemberSignature Language="F#" Value="member this.Encode : unit -&gt; byte[]" Usage="pkcs12Builder.Encode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将密封的 PFX 的内容编码并将其作为字节数组返回。</summary>
        <returns>一个字节数组，表示PFX 的编码形式。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac" />
        <altmember cref="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithoutIntegrity" />
        <exception cref="T:System.InvalidOperationException">PFX 未密封（<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 为 <see langword="false" />）。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="public bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSealed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSealed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSealed : bool" Usage="System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取指示 PFX 数据是否密封的值。</summary>
        <value>一个值，该值指示是否已密封 PFX 数据。</value>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac" />
        <altmember cref="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithoutIntegrity" />
      </Docs>
    </Member>
    <Member MemberName="SealWithMac">
      <MemberSignature Language="C#" Value="public void SealWithMac (ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, int iterationCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SealWithMac(valuetype System.ReadOnlySpan`1&lt;char&gt; password, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, int32 iterationCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.ReadOnlySpan{System.Char},System.Security.Cryptography.HashAlgorithmName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SealWithMac (password As ReadOnlySpan(Of Char), hashAlgorithm As HashAlgorithmName, iterationCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SealWithMac(ReadOnlySpan&lt;char&gt; password, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, int iterationCount);" />
      <MemberSignature Language="F#" Value="member this.SealWithMac : ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.HashAlgorithmName * int -&gt; unit" Usage="pkcs12Builder.SealWithMac (password, hashAlgorithm, iterationCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="iterationCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">用作计算 MAC 的密钥的密码。</param>
        <param name="hashAlgorithm">计算 MAC 时要使用的哈希算法。</param>
        <param name="iterationCount">用于计算 MAC 的密钥派生函数 (KDF) 的迭代计数。</param>
        <summary>密封 PFX 以防止进一步的更改，方法是使用范围中的密码将基于密码的消息验证代码 (MAC) 应用于内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 此方法接受的任何哈希算法都可以由类进行处理 <xref:System.Security.Cryptography.Pkcs.Pkcs12Info> 。
哈希算法的某些选择可能会导致 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.%23ctor%2A> 或 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import%2A?displayProperty=nameWithType> 某些操作系统发生故障，因为这些方法依赖于系统库来提供支持。

 通过 as PKCS # 12 PFX 导出时，在 Windows 7 的全新安装上使用的哈希算法的 <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Export%2A?displayProperty=nameWithtype> <xref:System.Security.Cryptography.HashAlgorithmName.SHA1> 迭代次数为2000。
由于 SHA1 出现冲突，Microsoft 建议基于 SHA256 或更好的安全模型;但是，某些 PFX 读取器可能只支持 SHA1。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="iterationCount" /> 参数小于或等于 0。</exception>
        <exception cref="T:System.InvalidOperationException">PFX 已密封（<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 为 <see langword="true" />）。</exception>
      </Docs>
    </Member>
    <Member MemberName="SealWithMac">
      <MemberSignature Language="C#" Value="public void SealWithMac (string password, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, int iterationCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SealWithMac(string password, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, int32 iterationCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.String,System.Security.Cryptography.HashAlgorithmName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SealWithMac (password As String, hashAlgorithm As HashAlgorithmName, iterationCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SealWithMac(System::String ^ password, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, int iterationCount);" />
      <MemberSignature Language="F#" Value="member this.SealWithMac : string * System.Security.Cryptography.HashAlgorithmName * int -&gt; unit" Usage="pkcs12Builder.SealWithMac (password, hashAlgorithm, iterationCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="iterationCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">用作计算 MAC 的密钥的密码。</param>
        <param name="hashAlgorithm">计算 MAC 时要使用的哈希算法。</param>
        <param name="iterationCount">用于计算 MAC 的密钥派生函数 (KDF) 的迭代计数。</param>
        <summary>密封 PFX 以防止进一步的更改，方法是使用字符串中的密码将基于密码的消息验证代码 (MAC) 应用于内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 此方法接受的任何哈希算法都可以由类进行处理 <xref:System.Security.Cryptography.Pkcs.Pkcs12Info> 。
哈希算法的某些选择可能会导致 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.%23ctor%2A> 或 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import%2A?displayProperty=nameWithType> 某些操作系统发生故障，因为这些方法依赖于系统库来提供支持。

 通过 as PKCS # 12 PFX 导出时，在 Windows 7 的全新安装上使用的哈希算法的 <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Export%2A?displayProperty=nameWithType> <xref:System.Security.Cryptography.HashAlgorithmName.SHA1> 迭代次数为2000。
由于 SHA1 出现冲突，Microsoft 建议基于 SHA256 或更好的安全模型;但是，某些 PFX 读取器可能只支持 SHA1。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="iterationCount" /> 参数小于或等于 0。</exception>
        <exception cref="T:System.InvalidOperationException">PFX 已密封（<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 为 <see langword="true" />）。</exception>
      </Docs>
    </Member>
    <Member MemberName="SealWithoutIntegrity">
      <MemberSignature Language="C#" Value="public void SealWithoutIntegrity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SealWithoutIntegrity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithoutIntegrity" />
      <MemberSignature Language="VB.NET" Value="Public Sub SealWithoutIntegrity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SealWithoutIntegrity();" />
      <MemberSignature Language="F#" Value="member this.SealWithoutIntegrity : unit -&gt; unit" Usage="pkcs12Builder.SealWithoutIntegrity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>密封 PFX 以防止进一步的更改，无需应用防篡改。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 此方法与 PKCS # 12 规范兼容，但不建议将其用于测试以外的目的。
生成可由的重载使用 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.%23ctor%2A> 或 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import%2A?displayProperty=nameWithType> 不接受密码参数的 PFX 时，请将 <xref:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.String,System.Security.Cryptography.HashAlgorithmName,System.Int32)> 方法用作 <xref:System.String.Empty?displayProperty=nameWithType> 密码。

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">PFX 已密封（<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 为 <see langword="true" />）。</exception>
      </Docs>
    </Member>
    <Member MemberName="TryEncode">
      <MemberSignature Language="C#" Value="public bool TryEncode (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncode(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.TryEncode(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncode (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncode(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncode : Span&lt;byte&gt; * int -&gt; bool" Usage="pkcs12Builder.TryEncode (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">接收 PKCS#12 PFX 数据的字节范围。</param>
        <param name="bytesWritten">此方法返回时，包含一个指示写入 <paramref name="destination" /> 的字节数的值。 该参数未经初始化即被处理。</param>
        <summary>尝试将密封的 PFX 内容编码到提供的缓冲区中。</summary>
        <returns>如果 <paramref name="destination" /> 具有足够的大小以接收输出，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">PFX 未密封（<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 为 <see langword="false" />）。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
