<Type Name="HttpEncoder" FullName="System.Web.Util.HttpEncoder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f87e4daf65dd7c0c3a1289bfb49564ffe1d3d0af" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89800840" /></Metadata><TypeSignature Language="C#" Value="public class HttpEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpEncoder extends System.Object" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="DocId" Value="T:System.Web.Util.HttpEncoder" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpEncoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpEncoder" />
  <TypeSignature Language="F#" Value="type HttpEncoder = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HttpEncoder extends System.Object" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1ee8f-101">提供编码和解码逻辑。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-101">Provides encoding and decoding logic.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ee8f-102">类包含类中的方法使用的编码和解码逻辑 <xref:System.Web.HttpUtility> ，如、 <xref:System.Web.HttpServerUtility> 和 <xref:System.Net.HttpResponseHeader> 。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-102">The class contains encoding and decoding logic that is used by methods in classes such as <xref:System.Web.HttpUtility>, <xref:System.Web.HttpServerUtility>, and <xref:System.Net.HttpResponseHeader>.</span></span>  
  
 <span data-ttu-id="1ee8f-103">可以从 <xref:System.Web.Util.HttpEncoder> 类继承并重写其行为，以自定义 ASP.NET 的默认编码和解码行为。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-103">You can inherit from the <xref:System.Web.Util.HttpEncoder> class and override its behavior to customize the default encoding and decoding behavior of ASP.NET.</span></span> <span data-ttu-id="1ee8f-104">然后，设置 <xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A> 类的属性 <xref:System.Web.Configuration.HttpRuntimeSection> 以配置自定义类。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-104">You then set the <xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A> property of the <xref:System.Web.Configuration.HttpRuntimeSection> class to configure your custom class.</span></span>  
  
 <span data-ttu-id="1ee8f-105">派生自的编码和解码的自定义类 <xref:System.Web.Util.HttpEncoder> 可以覆盖内置的 ASP.NET 编码和解码行为，或仅更改其所选的方面。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-105">A custom class for encoding and decoding that derives from <xref:System.Web.Util.HttpEncoder> can override the built-in ASP.NET encoding and decoding behavior or change only selected aspects of it.</span></span>  
  
 <span data-ttu-id="1ee8f-106">可以在 ASP.NET 中配置自定义编码类型，以替换或补充以下编码行为：</span><span class="sxs-lookup"><span data-stu-id="1ee8f-106">You can configure the custom encoding type for in ASP.NET to replace or supplement the following encoding behavior:</span></span>  
  
-   <span data-ttu-id="1ee8f-107">HTML 编码</span><span class="sxs-lookup"><span data-stu-id="1ee8f-107">HTML encoding</span></span>  
  
-   <span data-ttu-id="1ee8f-108">HTML 特性编码</span><span class="sxs-lookup"><span data-stu-id="1ee8f-108">HTML attribute encoding</span></span>  
  
-   <span data-ttu-id="1ee8f-109">URL 编码</span><span class="sxs-lookup"><span data-stu-id="1ee8f-109">URL encoding</span></span>  
  
-   <span data-ttu-id="1ee8f-110">URL 路径编码</span><span class="sxs-lookup"><span data-stu-id="1ee8f-110">URL path encoding</span></span>  
  
-   <span data-ttu-id="1ee8f-111">HTTP 标头名称和标头值编码</span><span class="sxs-lookup"><span data-stu-id="1ee8f-111">HTTP header name and header value encoding</span></span>  
  
 <span data-ttu-id="1ee8f-112">默认情况下，ASP.NET 应用程序配置为使用 <xref:System.Web.Security.AntiXss.AntiXssEncoder> 所有输出编码的类型。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-112">By default, ASP.NET applications are configured to use the <xref:System.Web.Security.AntiXss.AntiXssEncoder> type for all output encoding.</span></span>  
  
 <span data-ttu-id="1ee8f-113">应用程序级 Web.config 文件中的以下示例显示了如何 <xref:System.Web.Security.AntiXss.AntiXssEncoder> 为 ASP.NET 应用程序设置类型：</span><span class="sxs-lookup"><span data-stu-id="1ee8f-113">The following example from an application-level Web.config file shows how the <xref:System.Web.Security.AntiXss.AntiXssEncoder> type is set for an ASP.NET application:</span></span>  
  
 `<httpRuntime requestValidationMode="4.5" encoderType="System.Web.Security.AntiXss.AntiXssEncoder, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>`  
  
 <span data-ttu-id="1ee8f-114">该示例中的配置设置将 <xref:System.Web.Security.AntiXss.AntiXssEncoder> 类设置为在应用程序中执行所有输出编码。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-114">The configuration setting in the example sets the <xref:System.Web.Security.AntiXss.AntiXssEncoder> class to perform all output encoding in the application.</span></span> <span data-ttu-id="1ee8f-115">有关详细信息，请参阅 <xref:System.Web.Security.AntiXss.AntiXssEncoder> 类概述。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-115">For more information, see the <xref:System.Web.Security.AntiXss.AntiXssEncoder> class overview.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="1ee8f-116">当创建自定义编码器类并重写基类的基方法时，派生的编码器可能会从任何重写的方法中引发异常。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-116">When you create a custom encoder class and override the base methods of the base class, the derived encoder might throw an exception from any of the overridden methods.</span></span> <span data-ttu-id="1ee8f-117">但是，在以下情况下，引发此类异常可能会导致 ASP.NET 中出现意外行为：</span><span class="sxs-lookup"><span data-stu-id="1ee8f-117">However, in the following cases throwing such an exception could lead to unexpected behavior in ASP.NET:</span></span>  
  
<span data-ttu-id="1ee8f-118">-如果 ASP.NET 呈现由自定义编码器引发的未经处理的异常导致的错误页，则 ASP.NET 不会尝试通过调用自定义编码器来编码其错误输出。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-118">-   If ASP.NET is rendering an error page that is caused by an unhandled exception that was thrown from a custom encoder, ASP.NET does not attempt to encode its error output by calling into the custom encoder.</span></span> <span data-ttu-id="1ee8f-119">这样可以避免递归错误情况。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-119">This avoids recursive error conditions.</span></span>  
  
<span data-ttu-id="1ee8f-120">-当 ASP.NET 向 IIS 发送 HTTP 标头时，ASP.NET 不会预配未经处理的异常。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-120">-   When ASP.NET is sending HTTP headers to IIS, ASP.NET has no provision for unhandled exceptions.</span></span> <span data-ttu-id="1ee8f-121">因此，如果配置设置允许) 显示此页，则将 (呈现标准的 ASP.NET 错误页。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-121">Therefore, the standard ASP.NET error page will be rendered (if configuration settings allows this page to be displayed).</span></span></para></block>
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="T:System.Web.Configuration.HttpRuntimeSection" />
    <altmember cref="T:System.Web.Security.AntiXss.AntiXssEncoder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpEncoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1ee8f-122">初始化 <see cref="T:System.Web.Util.HttpEncoder" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-122">Initializes a new instance of the <see cref="T:System.Web.Util.HttpEncoder" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Web.Util.HttpEncoder Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Util.HttpEncoder Current" />
      <MemberSignature Language="DocId" Value="P:System.Web.Util.HttpEncoder.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Current As HttpEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Util::HttpEncoder ^ Current { System::Web::Util::HttpEncoder ^ get(); void set(System::Web::Util::HttpEncoder ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Web.Util.HttpEncoder with get, set" Usage="System.Web.Util.HttpEncoder.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.HttpEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1ee8f-123">获取或设置将在应用程序中使用的 <see cref="T:System.Web.Util.HttpEncoder" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-123">Gets or set the <see cref="T:System.Web.Util.HttpEncoder" /> type that will be used in an application.</span></span></summary>
        <value><span data-ttu-id="1ee8f-124">对将要使用的编码器/解码器类型的引用。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-124">A reference to the encoder/decoder type that will be used.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ee8f-125">如果 <xref:System.Web.Util.HttpEncoder> 在配置文件中指定派生类型，则属性将 <xref:System.Web.Util.HttpEncoder.Current%2A> 返回对自定义类型的引用。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-125">If a derived <xref:System.Web.Util.HttpEncoder> type is specified in the configuration file, the <xref:System.Web.Util.HttpEncoder.Current%2A> property returns a reference to the custom type.</span></span> <span data-ttu-id="1ee8f-126">但是，如果未使用自定义编码器，则属性将返回对默认 ASP.NET 实例的引用 <xref:System.Web.Util.HttpEncoder> 。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-126">However, if no custom encoder is used, the property returns a reference to the default ASP.NET <xref:System.Web.Util.HttpEncoder> instance.</span></span>  
  
 <span data-ttu-id="1ee8f-127">此 <xref:System.Web.Util.HttpEncoder.Current%2A> 属性不是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-127">The <xref:System.Web.Util.HttpEncoder.Current%2A> property is not thread-safe.</span></span> <span data-ttu-id="1ee8f-128">仅在应用程序的方法中设置此属性 `Application_Start` ，因为 `Application_Start` 在单个线程上运行。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-128">Set this property only in the application's `Application_Start` method, because `Application_Start` runs on a single thread.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1ee8f-129">分配给此属性的编码器实例是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-129">The encoder instance that is being assigned to this property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Web.Util.HttpEncoder Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Util.HttpEncoder Default" />
      <MemberSignature Language="DocId" Value="P:System.Web.Util.HttpEncoder.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As HttpEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Util::HttpEncoder ^ Default { System::Web::Util::HttpEncoder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Web.Util.HttpEncoder" Usage="System.Web.Util.HttpEncoder.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Util.HttpEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1ee8f-130">获取对 ASP.NET 的默认编码器的引用。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-130">Gets a reference to the default encoder for ASP.NET.</span></span></summary>
        <value><span data-ttu-id="1ee8f-131">对默认编码器的引用。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-131">A reference to the default encoder.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ee8f-132">常见的编码问题在于，默认 ASP.NET <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> 行为会将空格转换为 "+" 字符。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-132">A common encoding issue is that the default ASP.NET <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> behavior converts spaces into the "+" character.</span></span> <span data-ttu-id="1ee8f-133">从历史角度来看，"+" 字符是将 URL 中的空格字符编码为更易于阅读的方式的 Internet 约定。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-133">Historically, the "+" character has been an Internet convention for encoding space characters in a URL into a more human-readable manner.</span></span> <span data-ttu-id="1ee8f-134">但是，根据标准，空格字符应编码为 "%20"，而不是 "+" 字符。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-134">However, according to standards, the space character is supposed to be encoded as "%20" and instead of as the "+" character.</span></span> <span data-ttu-id="1ee8f-135">ASP.NET 允许你实现更符合标准的编码算法。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-135">ASP.NET lets you implement a more standards compliant encoding algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderNameValueEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HeaderNameValueEncode (string headerName, string headerValue, out string encodedHeaderName, out string encodedHeaderValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HeaderNameValueEncode(string headerName, string headerValue, [out] string&amp; encodedHeaderName, [out] string&amp; encodedHeaderValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HeaderNameValueEncode (headerName As String, headerValue As String, ByRef encodedHeaderName As String, ByRef encodedHeaderValue As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HeaderNameValueEncode(System::String ^ headerName, System::String ^ headerValue, [Runtime::InteropServices::Out] System::String ^ % encodedHeaderName, [Runtime::InteropServices::Out] System::String ^ % encodedHeaderValue);" />
      <MemberSignature Language="F#" Value="abstract member HeaderNameValueEncode : string * string * string * string -&gt; unit&#xA;override this.HeaderNameValueEncode : string * string * string * string -&gt; unit" Usage="httpEncoder.HeaderNameValueEncode (headerName, headerValue, encodedHeaderName, encodedHeaderValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerName" Type="System.String" />
        <Parameter Name="headerValue" Type="System.String" />
        <Parameter Name="encodedHeaderName" Type="System.String" RefType="out" />
        <Parameter Name="encodedHeaderValue" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="headerName"><span data-ttu-id="1ee8f-136">要编码的 HTTP 标头名称。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-136">The HTTP header name to encode.</span></span></param>
        <param name="headerValue"><span data-ttu-id="1ee8f-137">要编码的 HTTP 标头值。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-137">The HTTP header value to encode.</span></span></param>
        <param name="encodedHeaderName"><span data-ttu-id="1ee8f-138">当此方法返回时，返回值包含要用于 HTTP 标头的已编码名称。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-138">When this method returns, contains the encoded name to use for an HTTP header.</span></span> <span data-ttu-id="1ee8f-139">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-139">This parameter is passed uninitialized.</span></span></param>
        <param name="encodedHeaderValue"><span data-ttu-id="1ee8f-140">当此方法返回时，返回值包含要用于 HTTP 标头的已编码值。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-140">When this method returns, contains the encoded value to use for an HTTP header.</span></span> <span data-ttu-id="1ee8f-141">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-141">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="1ee8f-142">将标头名称和值编码为可用作 HTTP 标头的字符串。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-142">Encodes a header name and value into a string that can be used as an HTTP header.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ee8f-143"><xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A>方法从和参数获取输入字符串 `headerName` `headerValue` 并对它们进行编码。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-143">The <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method takes input strings from the `headerName` and `headerValue` parameters and encodes them.</span></span> <span data-ttu-id="1ee8f-144">编码值作为输出参数返回。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-144">The encoded values are returned as out parameters.</span></span>  
  
 <span data-ttu-id="1ee8f-145"><xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A>方法使用以下逻辑对标头名称和值进行编码：</span><span class="sxs-lookup"><span data-stu-id="1ee8f-145">The <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method uses the following logic to encode header names and values:</span></span>  
  
-   <span data-ttu-id="1ee8f-146">Unicode 值小于 ASCII 字符32的所有字符（ASCII 字符9除外）都将 URL 编码为 `%NN` `N` 字符表示十六进制值的格式。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-146">All characters whose Unicode value is less than ASCII character 32, except ASCII character 9, are URL-encoded into a format of `%NN` where the `N` characters represent hexadecimal values.</span></span>  
  
-   <span data-ttu-id="1ee8f-147">ASCII 字符 9 (水平制表符) 不是 URL 编码的字符。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-147">ASCII character 9 (the horizontal tab character) is not URL-encoded.</span></span>  
  
-   <span data-ttu-id="1ee8f-148">ASCII 字符127编码为 `%7F` 。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-148">ASCII character 127 is encoded as `%7F`.</span></span>  
  
-   <span data-ttu-id="1ee8f-149">所有其他字符不进行编码。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-149">All other characters are not encoded.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1ee8f-150">尽管此方法可用于 Unicode 值，但它通常用于 ASCII 范围内的值。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-150">Although this method can be used for Unicode values, it is typically used for values in the ASCII range.</span></span>  
  
 <span data-ttu-id="1ee8f-151"><xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> `headerValue` `encodedHeaderValue` 如果 `headerValue` 为 `null` 或为空字符串，则方法的默认实现将返回中的值。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-151">The default implementation of the <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method returns the value of `headerValue` in `encodedHeaderValue` if `headerValue` is `null` or is an empty string.</span></span> <span data-ttu-id="1ee8f-152">同样， `headerName` `encodedHeaderName` 如果 `headerName` 为 `null` 或为空字符串，则默认实现将返回中的值。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-152">Similarly, the default implementation returns the value of `headerName` in `encodedHeaderName` if `headerName` is `null` or is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlAttributeEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlAttributeEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlAttributeEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlAttributeEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpEncoder.HtmlAttributeEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1ee8f-153">要编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-153">The string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="1ee8f-154">要将已编码值写入到的文本编写器。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-154">The text writer to write the encoded value to.</span></span></param>
        <summary><span data-ttu-id="1ee8f-155">将传入值编码为可插入 HTML 特性（由单引号或双引号分隔）的字符串。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-155">Encodes an incoming value into a string that can be inserted into an HTML attribute that is delimited by using single or double quotation marks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ee8f-156"><xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>方法使用标准 HTML 实体对字符进行编码。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-156">The <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> method encodes characters by using the standard HTML entities.</span></span> <span data-ttu-id="1ee8f-157">例如， `<` (左尖括号) 编码为 `&lt;` ， `\` (反斜杠) 编码为 `&#92;` 。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-157">For example, the `<` (left angle bracket) is encoded as `&lt;` and the `\` (backslash) is encoded as `&#92;`.</span></span>  
  
 <span data-ttu-id="1ee8f-158">可以安全地 <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> 在带单引号和双引号的属性中使用。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-158">It is safe to use <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> within single-quoted and double-quoted attributes.</span></span> <span data-ttu-id="1ee8f-159">值必须用引号引起来。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-159">The values must be quoted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1ee8f-160"><paramref name="output" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-160"><paramref name="output" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlDecode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="httpEncoder.HtmlDecode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1ee8f-161">要解码的字符串。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-161">The string to decode.</span></span></param>
        <param name="output"><span data-ttu-id="1ee8f-162">要将已解码值写入到的文本编写器。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-162">The text writer to write the decoded value to.</span></span></param>
        <summary><span data-ttu-id="1ee8f-163">解码 HTML 编码的字符串中的值。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-163">Decodes a value from an HTML-encoded string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ee8f-164">下表列出了 ASP.NET 解码逻辑可以解码的字符序列。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-164">The following table lists the character sequences that the ASP.NET decoding logic can decode.</span></span>  
  
|<span data-ttu-id="1ee8f-165">字符序列</span><span class="sxs-lookup"><span data-stu-id="1ee8f-165">Character sequence</span></span>|<span data-ttu-id="1ee8f-166">规则</span><span class="sxs-lookup"><span data-stu-id="1ee8f-166">Rule</span></span>|  
|------------------------|----------|  
|<span data-ttu-id="1ee8f-167">`&#NNN;` (ASCII 字符的十进制代码) 。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-167">`&#NNN;` (decimal codes for ASCII characters).</span></span>|<span data-ttu-id="1ee8f-168">解码为指定的 ASCII 字符。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-168">Decoded as the specified ASCII character.</span></span> <span data-ttu-id="1ee8f-169">字符序列以 # 字符后的第一个数字开头，并以分号结束。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-169">The character sequence starts at the first digit after the # character and finishes at the semicolon.</span></span>|  
|<span data-ttu-id="1ee8f-170">`&#xZZ;`)  (ASCII 字符的十六进制代码。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-170">`&#xZZ;` (hexadecimal codes for ASCII characters).</span></span>|<span data-ttu-id="1ee8f-171">解码为指定的 ASCII 字符。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-171">Decoded as the specified ASCII character.</span></span> <span data-ttu-id="1ee8f-172">编码的窗体通过使用十六进制字符而不是十进制值来指定字符。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-172">The encoded form specifies the character by using hexadecimal characters instead of a decimal value.</span></span> <span data-ttu-id="1ee8f-173">字符序列以 # 字符后的第一个数字开头，并以分号结束。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-173">The character sequence starts at the first digit after the # character and finishes at the semicolon.</span></span>|  
|<span data-ttu-id="1ee8f-174">命名的 HTML 实体。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-174">Named HTML entities.</span></span>|<span data-ttu-id="1ee8f-175">解码为等效的 ASCII 字符。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-175">Decoded as the equivalent ASCII character.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1ee8f-176"><paramref name="output" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-176"><paramref name="output" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlEncode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpEncoder.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1ee8f-177">要编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-177">The string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="1ee8f-178">要将已编码值写入到的文本编写器。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-178">The text writer to write the encoded value to.</span></span></param>
        <summary><span data-ttu-id="1ee8f-179">将字符串编码为 HTML 编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-179">Encodes a string into an HTML-encoded string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ee8f-180">下表列出了 ASP.NET 编码逻辑可以解码的字符序列。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-180">The following table lists the character sequences that the ASP.NET encoding logic can decode.</span></span>  
  
|<span data-ttu-id="1ee8f-181">字符</span><span class="sxs-lookup"><span data-stu-id="1ee8f-181">Character</span></span>|<span data-ttu-id="1ee8f-182">编码为</span><span class="sxs-lookup"><span data-stu-id="1ee8f-182">Encoded as</span></span>|  
|---------------|----------------|  
|<span data-ttu-id="1ee8f-183">`<` (左尖括号) </span><span class="sxs-lookup"><span data-stu-id="1ee8f-183">`<` (left angle bracket)</span></span>|`&lt;`|  
|<span data-ttu-id="1ee8f-184">`>` (右尖括号) </span><span class="sxs-lookup"><span data-stu-id="1ee8f-184">`>` (right angle bracket)</span></span>|`&gt;`|  
|<span data-ttu-id="1ee8f-185">`"` (双引号) </span><span class="sxs-lookup"><span data-stu-id="1ee8f-185">`"` (double quotation marks)</span></span>|`&quot;`|  
|<span data-ttu-id="1ee8f-186">`&`（与号）</span><span class="sxs-lookup"><span data-stu-id="1ee8f-186">`&` (ampersand)</span></span>|`&amp;`|  
|<span data-ttu-id="1ee8f-187">`\` (反斜杠) </span><span class="sxs-lookup"><span data-stu-id="1ee8f-187">`\` (backslash)</span></span>|`&#92;`|  
|<span data-ttu-id="1ee8f-188">从160到255的 ASCII 字符</span><span class="sxs-lookup"><span data-stu-id="1ee8f-188">ASCII characters from 160 to 255</span></span>|<span data-ttu-id="1ee8f-189">`&#NNN;`，其中 `NNN` 是三位十进制字符代码</span><span class="sxs-lookup"><span data-stu-id="1ee8f-189">`&#NNN;`, where `NNN` is the three-digit decimal character code</span></span>|  
  
 <span data-ttu-id="1ee8f-190">如果重写 <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> 方法，则必须生成在带引号或单引号的 HTML 特性内也安全的输出。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-190">If you override the <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> method, you must produce output that is also safe within double-quoted or single-quoted HTML attributes.</span></span> <span data-ttu-id="1ee8f-191">这适用于 Razor 引擎的分析，其中的标记和代码可以组合在一起，例如 \<tag attr="@value"> 。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-191">This accommodates parsing by the Razor engine, where markup and code can be combined, such as \<tag attr="@value">.</span></span> <span data-ttu-id="1ee8f-192">此外，当 Razor 引擎处理时，@ 运算符不能识别上下文，因此它调用而不是 <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> 。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-192">In addition, the @ operator is not context-aware when processed by the Razor engine, therefore it calls <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> rather than <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1ee8f-193"><paramref name="output" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-193"><paramref name="output" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="JavaScriptStringEncode">
      <MemberSignature Language="C#" Value="protected internal virtual string JavaScriptStringEncode (string value);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string JavaScriptStringEncode(string value) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.JavaScriptStringEncode(System.String)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function JavaScriptStringEncode (value As String) As String" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ JavaScriptStringEncode(System::String ^ value);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member JavaScriptStringEncode : string -&gt; string&#xA;override this.JavaScriptStringEncode : string -&gt; string" Usage="httpEncoder.JavaScriptStringEncode value" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1ee8f-194">要编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-194">The string to encode.</span></span></param>
        <summary><span data-ttu-id="1ee8f-195">对字符串进行编码。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-195">Encodes a string.</span></span></summary>
        <returns><span data-ttu-id="1ee8f-196">已编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-196">An encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ee8f-197">URL 编码可确保所有浏览器都正确传输 URL 字符串中的文本。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-197">URL encoding makes sure that all browsers correctly transmit text in URL strings.</span></span> <span data-ttu-id="1ee8f-198">某些浏览器可能会截断或损坏问号，如问号 (？ ) ，and 号 ( # A0) 、斜杠 (/) 和空格。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-198">Characters such as a question mark (?), ampersand (&), slash (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="1ee8f-199">因此，必须对这些字符进行编码。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-199">Therefore, these characters must be encoded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="protected internal virtual byte[] UrlEncode (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance unsigned int8[] UrlEncode(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function UrlEncode (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberSignature Language="F#" Value="abstract member UrlEncode : byte[] * int * int -&gt; byte[]&#xA;override this.UrlEncode : byte[] * int * int -&gt; byte[]" Usage="httpEncoder.UrlEncode (bytes, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="1ee8f-200">要编码的字节数组。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-200">An array of bytes to encode.</span></span></param>
        <param name="offset"><span data-ttu-id="1ee8f-201"><paramref name="bytes" /> 数组中作为编码起始点的位置。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-201">The position in the <paramref name="bytes" /> array at which to begin encoding.</span></span></param>
        <param name="count"><span data-ttu-id="1ee8f-202"><paramref name="bytes" /> 数组中要编码的项数。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-202">The number of items in the <paramref name="bytes" /> array to encode.</span></span></param>
        <summary><span data-ttu-id="1ee8f-203">将 URL 中不允许使用的字符数组编码为等效十六进制字符实体。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-203">Encodes an array of characters that are not allowed in a URL into a hexadecimal character-entity equivalent.</span></span></summary>
        <returns><span data-ttu-id="1ee8f-204">已编码字符的数组。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-204">An array of encoded characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ee8f-205"><xref:System.Web.Util.HttpEncoder.UrlEncode%2A>方法由类中的多个 URL 编码方法调用 <xref:System.Web.HttpUtility> 。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-205">The <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> method is called by several URL encoding methods in the <xref:System.Web.HttpUtility> class.</span></span>  
  
 <span data-ttu-id="1ee8f-206"><xref:System.Web.Util.HttpEncoder.UrlEncode%2A>方法对不在被视为 URL 安全的 ASCII 字符集中的任何字符进行 url 编码。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-206">The <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> method URL-encodes any character that is not in the set of ASCII characters that is considered to be URL-safe.</span></span> <span data-ttu-id="1ee8f-207">空格编码为 ASCII " `+"` 字符。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-207">Spaces are encoded as the ASCII "`+"` character.</span></span> <span data-ttu-id="1ee8f-208">URL 安全的 ASCII 字符包括 ASCII 字符 (A 到 Z 和 A 到 z) 、数字 (0 到 9) 以及一些标点符号。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-208">URL-safe ASCII characters include the ASCII characters (A to Z and a to z), numerals (0 to 9), and some punctuation marks.</span></span> <span data-ttu-id="1ee8f-209">下表列出了被视为 URL 安全 ASCII 字符的标点符号。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-209">The following table lists the punctuation marks that are considered URL-safe ASCII characters.</span></span>  
  
|<span data-ttu-id="1ee8f-210">字符</span><span class="sxs-lookup"><span data-stu-id="1ee8f-210">Character</span></span>|<span data-ttu-id="1ee8f-211">说明</span><span class="sxs-lookup"><span data-stu-id="1ee8f-211">Description</span></span>|  
|---------------|-----------------|  
|-|<span data-ttu-id="1ee8f-212">Hyphen</span><span class="sxs-lookup"><span data-stu-id="1ee8f-212">Hyphen</span></span>|  
|<span data-ttu-id="1ee8f-213">_</span><span class="sxs-lookup"><span data-stu-id="1ee8f-213">_</span></span>|<span data-ttu-id="1ee8f-214">强调</span><span class="sxs-lookup"><span data-stu-id="1ee8f-214">Underscore</span></span>|  
|<span data-ttu-id="1ee8f-215">.</span><span class="sxs-lookup"><span data-stu-id="1ee8f-215">.</span></span>|<span data-ttu-id="1ee8f-216">句点 (点) </span><span class="sxs-lookup"><span data-stu-id="1ee8f-216">Period (dot)</span></span>|  
|<span data-ttu-id="1ee8f-217">!</span><span class="sxs-lookup"><span data-stu-id="1ee8f-217">!</span></span>|<span data-ttu-id="1ee8f-218">感叹号</span><span class="sxs-lookup"><span data-stu-id="1ee8f-218">Exclamation mark</span></span>|  
|*|<span data-ttu-id="1ee8f-219">星号 (星号) </span><span class="sxs-lookup"><span data-stu-id="1ee8f-219">Asterisk (star)</span></span>|  
|<span data-ttu-id="1ee8f-220">(</span><span class="sxs-lookup"><span data-stu-id="1ee8f-220">(</span></span>|<span data-ttu-id="1ee8f-221">左括号</span><span class="sxs-lookup"><span data-stu-id="1ee8f-221">Opening parenthesis</span></span>|  
|<span data-ttu-id="1ee8f-222">)</span><span class="sxs-lookup"><span data-stu-id="1ee8f-222">)</span></span>|<span data-ttu-id="1ee8f-223">右括号</span><span class="sxs-lookup"><span data-stu-id="1ee8f-223">Closing parenthesis</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1ee8f-224"><paramref name="offset" /> 小于零或大于 <paramref name="bytes" /> 数组的长度。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-224"><paramref name="offset" /> is less than zero or greater than the length of the <paramref name="bytes" /> array.</span></span>  
  
<span data-ttu-id="1ee8f-225">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1ee8f-225">-or-</span></span> 
 <span data-ttu-id="1ee8f-226"><paramref name="count" /> 小于零或 <paramref name="count" /> 加上 <paramref name="offset" /> 大于 <paramref name="bytes" /> 数组的长度。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-226"><paramref name="count" /> is less than zero or <paramref name="count" /> plus <paramref name="offset" /> is greater than the length of the <paramref name="bytes" /> array.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1ee8f-227"><paramref name="bytes" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-227"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="protected internal virtual string UrlPathEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string UrlPathEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function UrlPathEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ UrlPathEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member UrlPathEncode : string -&gt; string&#xA;override this.UrlPathEncode : string -&gt; string" Usage="httpEncoder.UrlPathEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1ee8f-228">要编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-228">The string to encode.</span></span></param>
        <summary><span data-ttu-id="1ee8f-229">对 URL 的子节进行编码。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-229">Encodes a subsection of a URL.</span></span></summary>
        <returns><span data-ttu-id="1ee8f-230">URL 编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-230">A URL-encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ee8f-231"><xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> 方法由 <xref:System.Web.HttpUtility.UrlPathEncode%2A> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-231">The <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> method is called by the <xref:System.Web.HttpUtility.UrlPathEncode%2A> method.</span></span> <span data-ttu-id="1ee8f-232"><xref:System.Web.HttpUtility.UrlPathEncode%2A>方法执行以下步骤：</span><span class="sxs-lookup"><span data-stu-id="1ee8f-232">The <xref:System.Web.HttpUtility.UrlPathEncode%2A> method performs the following steps:</span></span>  
  
-   <span data-ttu-id="1ee8f-233">将方法的编码逻辑 <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> 仅应用到 URL 的路径部分， (不包括查询字符串) 。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-233">Applies the encoding logic of the <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> method to only the path part of the URL (which excludes the query string).</span></span> <span data-ttu-id="1ee8f-234">方法假定 URL 编码为 UTF-8 字符串。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-234">The method assumes that the URL is encoded as a UTF-8 string.</span></span>  
  
-   <span data-ttu-id="1ee8f-235">对非空格编码，以便在生成的编码字符串中仅使用前128个 ASCII 字符的子集。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-235">Encodes non-spaces so that only a subset of the first 128 ASCII characters is used in the resulting encoded string.</span></span> <span data-ttu-id="1ee8f-236">Unicode 值为128、更高、32和更小的任何字符都是 URL 编码的。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-236">Any characters at Unicode value 128 and greater, or 32 and less, are URL-encoded.</span></span>  
  
-   <span data-ttu-id="1ee8f-237">将空格编码为 %20。</span><span class="sxs-lookup"><span data-stu-id="1ee8f-237">Encodes spaces as %20.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
