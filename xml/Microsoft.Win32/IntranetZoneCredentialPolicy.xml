<Type Name="IntranetZoneCredentialPolicy" FullName="Microsoft.Win32.IntranetZoneCredentialPolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da8a5819dd16b37cf2fb675fad075c1f7367ec25" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="70681959" /></Metadata><TypeSignature Language="C#" Value="public class IntranetZoneCredentialPolicy : System.Net.ICredentialPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IntranetZoneCredentialPolicy extends System.Object implements class System.Net.ICredentialPolicy" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.IntranetZoneCredentialPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class IntranetZoneCredentialPolicy&#xA;Implements ICredentialPolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class IntranetZoneCredentialPolicy : System::Net::ICredentialPolicy" />
  <TypeSignature Language="F#" Value="type IntranetZoneCredentialPolicy = class&#xA;    interface ICredentialPolicy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Net.ICredentialPolicy</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>定义凭据策略，该凭据策略将用于使用 <see cref="T:System.Net.WebRequest" /> 及其派生类发出的资源请求。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此策略只允许在请求的资源与发出请求的客户端位于同一个域中时发送凭据。 对于许多应用程序，这是最佳策略，因为它可以防止向不在 intranet 上的资源请求发送网络凭据。  
  
> [!NOTE]
>  <xref:System.Net.ICredentialPolicy> 仅当 <xref:System.Net.WebRequest> <xref:System.Net.WebProxy> 与请求关联的或具有不具有的凭据时，才会调用策略 `null` 。 设置此策略不会影响未指定凭据的请求。  
  
 使用 <xref:System.Net.AuthenticationManager.CredentialPolicy%2A?displayProperty=nameWithType> 属性设置 <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> 策略。 <xref:System.Net.IAuthenticationModule>处理请求身份验证的会在 <xref:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential%2A> 执行身份验证之前调用方法。 如果请求的资源与客户端位于不同的域中，则该 <xref:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential%2A> 方法将返回 `false` ，并且不执行身份验证。  
  
 此策略会影响 <xref:System.Net.WebRequest> 当前应用程序域中具有非 null 凭据的的所有实例。 无法在单个请求中重写此策略。  
  
   
  
## Examples  
 下面的代码示例演示如何创建的实例 <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> ，并使用它来设置应用程序域的凭据策略。  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntranetZoneCredentialPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.IntranetZoneCredentialPolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntranetZoneCredentialPolicy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:Microsoft.Win32.IntranetZoneCredentialPolicy" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 应用程序使用此构造函数来创建可用于设置属性的对象 <xref:System.Net.AuthenticationManager.CredentialPolicy%2A> 。  
  
   
  
## Examples  
 下面的代码示例演示如何创建此类的实例。  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSendCredential">
      <MemberSignature Language="C#" Value="public virtual bool ShouldSendCredential (Uri challengeUri, System.Net.WebRequest request, System.Net.NetworkCredential credential, System.Net.IAuthenticationModule authModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSendCredential(class System.Uri challengeUri, class System.Net.WebRequest request, class System.Net.NetworkCredential credential, class System.Net.IAuthenticationModule authModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSendCredential (challengeUri As Uri, request As WebRequest, credential As NetworkCredential, authModule As IAuthenticationModule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ShouldSendCredential(Uri ^ challengeUri, System::Net::WebRequest ^ request, System::Net::NetworkCredential ^ credential, System::Net::IAuthenticationModule ^ authModule);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSendCredential : Uri * System.Net.WebRequest * System.Net.NetworkCredential * System.Net.IAuthenticationModule -&gt; bool&#xA;override this.ShouldSendCredential : Uri * System.Net.WebRequest * System.Net.NetworkCredential * System.Net.IAuthenticationModule -&gt; bool" Usage="intranetZoneCredentialPolicy.ShouldSendCredential (challengeUri, request, credential, authModule)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.ICredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challengeUri" Type="System.Uri" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="authModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="challengeUri">将接收该请求的 <see cref="T:System.Uri" />。</param>
        <param name="request">表示被请求的资源的 <see cref="T:System.Net.WebRequest" />。</param>
        <param name="credential">将随请求一起发送的 <see cref="T:System.Net.NetworkCredential" />（如果此方法返回 <see langword="true" />）。</param>
        <param name="authModule">将执行身份验证的 <see cref="T:System.Net.IAuthenticationModule" />（如果要求身份验证）。</param>
        <summary>返回一个 <see cref="T:System.Boolean" />，该值指示客户端的凭据是否随使用 <see cref="T:System.Net.WebRequest" /> 发出的资源请求一起发送。</summary>
        <returns>如果所请求的资源与发出请求的客户端在同一个域中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 应用程序不直接调用此方法;它由 <xref:System.Net.IAuthenticationModule> 负责对服务器执行身份验证的进行调用。 如果此方法返回 `false` ，则 <xref:System.Net.IAuthenticationModule> 不会对服务器的客户端进行身份验证。  
  
 仅对指定凭据或使用指定凭据的对象的请求调用此方法 <xref:System.Net.WebProxy> 。  
  
   
  
## Examples  
 下面的代码示例演示如何从派生 <xref:Microsoft.Win32.IntranetZoneCredentialPolicy> ，以允许使用安全超文本传输协议 (使用基本身份验证的 HTTPS) 发送请求的凭据。 使用 HTTPS 和基本身份验证，在通过网络发送用户密码之前对其进行加密。  
  
 [!code-cpp[NclCredPolicy#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#4)]
 [!code-csharp[NclCredPolicy#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
