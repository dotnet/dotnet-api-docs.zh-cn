<Type Name="SystemEvents" FullName="Microsoft.Win32.SystemEvents">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e7ab442bd5f57512eeec51924ebd5e2c8961c9bd" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86631590" /></Metadata><TypeSignature Language="C#" Value="public sealed class SystemEvents" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SystemEvents extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.SystemEvents" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SystemEvents" />
  <TypeSignature Language="C++ CLI" Value="public ref class SystemEvents sealed" />
  <TypeSignature Language="F#" Value="type SystemEvents = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d7a25-101">提供对系统事件通知的访问。</span><span class="sxs-lookup"><span data-stu-id="d7a25-101">Provides access to system event notifications.</span></span> <span data-ttu-id="d7a25-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="d7a25-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7a25-103"><xref:Microsoft.Win32.SystemEvents>类提供响应特定类型的系统事件的能力。</span><span class="sxs-lookup"><span data-stu-id="d7a25-103">The <xref:Microsoft.Win32.SystemEvents> class provides the ability to respond to specific types of system events.</span></span>  
  
 <span data-ttu-id="d7a25-104">引发系统事件时，将使用监视系统事件的线程调用附加到事件的任何委托。</span><span class="sxs-lookup"><span data-stu-id="d7a25-104">When a system event is raised, any delegates attached to the event are called using the thread that monitors for system events.</span></span> <span data-ttu-id="d7a25-105">因此，您应从事件处理程序调用线程安全。</span><span class="sxs-lookup"><span data-stu-id="d7a25-105">Therefore, you should make any calls from your event handlers thread-safe.</span></span> <span data-ttu-id="d7a25-106">如果需要调用未作为此类的成员公开的系统事件，可以使用 <xref:Microsoft.Win32.SystemEvents.InvokeOnEventsThread%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="d7a25-106">If you need to call a system event that is not exposed as a member of this class, you can use the <xref:Microsoft.Win32.SystemEvents.InvokeOnEventsThread%2A> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d7a25-107">不要在引发系统事件处理程序的线程上执行耗时的处理，因为它可能会阻止其他应用程序正常运行。</span><span class="sxs-lookup"><span data-stu-id="d7a25-107">Do not perform time-consuming processing on the thread that raises a system event handler because it might prevent other applications from functioning.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d7a25-108">可能不会在上引发一些系统事件 [!INCLUDE[windowsver](~/includes/windowsver-md.md)] 。</span><span class="sxs-lookup"><span data-stu-id="d7a25-108">Some system events might not be raised on [!INCLUDE[windowsver](~/includes/windowsver-md.md)].</span></span> <span data-ttu-id="d7a25-109">确保你的应用程序在上按预期方式工作 [!INCLUDE[windowsver](~/includes/windowsver-md.md)] 。</span><span class="sxs-lookup"><span data-stu-id="d7a25-109">Be sure to verify that your application works as expected on [!INCLUDE[windowsver](~/includes/windowsver-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7a25-110">本部分包含两个示例。</span><span class="sxs-lookup"><span data-stu-id="d7a25-110">This section contains two examples.</span></span> <span data-ttu-id="d7a25-111">第一个示例演示如何在普通的应用程序中使用系统事件，第二个示例演示如何在 Windows 服务中使用系统事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-111">The first example shows how to use system events in an ordinary application, and the second example shows how to use system events in a Windows service.</span></span>  
  
 <span data-ttu-id="d7a25-112">**示例 1**</span><span class="sxs-lookup"><span data-stu-id="d7a25-112">**Example 1**</span></span>  
  
 <span data-ttu-id="d7a25-113">下面的代码示例注册了一些系统事件的兴趣，并等待其中任何事件发生。</span><span class="sxs-lookup"><span data-stu-id="d7a25-113">The following code example registers interest in some system events and then waits for any of those events to occur.</span></span> <span data-ttu-id="d7a25-114">如果用户更改了显示分辨率，则会显示输出。</span><span class="sxs-lookup"><span data-stu-id="d7a25-114">The output shown occurs if the user changes the display resolution.</span></span>  
  
 [!code-cpp[SystemEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SystemEvents/cpp/SystemEvents.cpp#1)]
 [!code-csharp[SystemEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemEvents/CS/SystemEvents.cs#1)]
 [!code-vb[SystemEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemEvents/VB/SystemEvents.vb#1)]  
  
 <span data-ttu-id="d7a25-115">**示例 2**</span><span class="sxs-lookup"><span data-stu-id="d7a25-115">**Example 2**</span></span>  
  
 <span data-ttu-id="d7a25-116">下面的代码示例演示了一个非常简单的 Windows 服务，该服务处理 <xref:Microsoft.Win32.SystemEvents.TimeChanged> 和 <xref:Microsoft.Win32.SystemEvents.UserPreferenceChanged> 事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-116">The following code example demonstrates a very simple Windows service that handles the <xref:Microsoft.Win32.SystemEvents.TimeChanged> and <xref:Microsoft.Win32.SystemEvents.UserPreferenceChanged> events.</span></span> <span data-ttu-id="d7a25-117">该示例包括一个名为的服务 `SimpleService` 、一个名为的窗体 `HiddenForm` 和一个安装程序。</span><span class="sxs-lookup"><span data-stu-id="d7a25-117">The example includes a service named `SimpleService`, a form named `HiddenForm`, and an installer.</span></span> <span data-ttu-id="d7a25-118">窗体提供系统事件所需的消息循环。</span><span class="sxs-lookup"><span data-stu-id="d7a25-118">The form provides the message loop that is required by system events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d7a25-119">服务没有消息循环，除非允许它们与桌面交互。</span><span class="sxs-lookup"><span data-stu-id="d7a25-119">Services do not have message loops, unless they are allowed to interact with the desktop.</span></span> <span data-ttu-id="d7a25-120">如果未通过隐藏形式提供消息循环，如本示例中所示，服务必须在本地系统帐户下运行，并且需要手动干预才能实现与桌面的交互。</span><span class="sxs-lookup"><span data-stu-id="d7a25-120">If the message loop is not provided by a hidden form, as in this example, the service must be run under the local system account, and manual intervention is required to enable interaction with the desktop.</span></span> <span data-ttu-id="d7a25-121">也就是说，管理员必须手动选中 "服务属性" 对话框的 "**登录**" 选项卡上的 "**允许服务与桌面交互**" 复选框。</span><span class="sxs-lookup"><span data-stu-id="d7a25-121">That is, the administrator must manually check the **Allow service to interact with desktop** check box on the **Log On** tab of the service properties dialog box.</span></span> <span data-ttu-id="d7a25-122">在这种情况下，将自动提供消息循环。</span><span class="sxs-lookup"><span data-stu-id="d7a25-122">In that case, a message loop is automatically provided.</span></span> <span data-ttu-id="d7a25-123">仅当服务在本地系统帐户下运行时，此选项才可用。</span><span class="sxs-lookup"><span data-stu-id="d7a25-123">This option is available only when the service is run under the local system account.</span></span> <span data-ttu-id="d7a25-124">无法以编程方式启用与桌面的交互。</span><span class="sxs-lookup"><span data-stu-id="d7a25-124">Interaction with the desktop cannot be enabled programmatically.</span></span>  
  
 <span data-ttu-id="d7a25-125">在此示例中，该服务将启动一个线程，该线程运行的实例 `HiddenForm` 。</span><span class="sxs-lookup"><span data-stu-id="d7a25-125">The service in this example starts a thread that runs an instance of `HiddenForm`.</span></span> <span data-ttu-id="d7a25-126">事件与窗体挂钩并进行处理。</span><span class="sxs-lookup"><span data-stu-id="d7a25-126">The events are hooked up and handled in the form.</span></span> <span data-ttu-id="d7a25-127">必须在窗体的 load 事件中挂接事件，以确保先完全加载窗体;否则，将不会引发事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-127">The events must be hooked up in the load event of the form, to make sure that the form is completely loaded first; otherwise the events will not be raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d7a25-128">该示例提供了所有必要的代码，包括通常由 Visual Studio 设计器生成的窗体初始化代码。</span><span class="sxs-lookup"><span data-stu-id="d7a25-128">The example provides all the necessary code, including the form initialization code typically generated by Visual Studio designers.</span></span> <span data-ttu-id="d7a25-129">如果要在 Visual Studio 中开发服务，则可以省略第二个分部类，并使用 " **属性** " 窗口将隐藏窗体的高度和宽度设置为零，将边框样式设置为 <xref:System.Windows.Forms.FormBorderStyle.None?displayProperty=nameWithType> ，将窗口状态设置为 <xref:System.Windows.Forms.FormWindowState.Minimized?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="d7a25-129">If you are developing your service in Visual Studio, you can omit the second partial class and use the **Properties** window to set the height and width of the hidden form to zero, the border style to <xref:System.Windows.Forms.FormBorderStyle.None?displayProperty=nameWithType>, and the window state to <xref:System.Windows.Forms.FormWindowState.Minimized?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d7a25-130">运行示例：</span><span class="sxs-lookup"><span data-stu-id="d7a25-130">To run the example:</span></span>  
  
1.  <span data-ttu-id="d7a25-131">从命令行编译代码。</span><span class="sxs-lookup"><span data-stu-id="d7a25-131">Compile the code from the command line.</span></span> <span data-ttu-id="d7a25-132">用于源文件的名称并不重要。</span><span class="sxs-lookup"><span data-stu-id="d7a25-132">The name that you use for the source file is not important.</span></span>  
  
2.  <span data-ttu-id="d7a25-133">使用 [Installutil.exe (安装程序工具) ](/dotnet/framework/tools/installutil-exe-installer-tool) 实用程序，从命令行安装服务。</span><span class="sxs-lookup"><span data-stu-id="d7a25-133">Install the service from the command line using the [Installutil.exe (Installer Tool)](/dotnet/framework/tools/installutil-exe-installer-tool) utility.</span></span> <span data-ttu-id="d7a25-134">例如， `InstallUtil example.exe` 如果源文件名为 `example.cs` 或 `example.vb` 。</span><span class="sxs-lookup"><span data-stu-id="d7a25-134">For example, `InstallUtil example.exe` if the source file name is `example.cs` or `example.vb`.</span></span> <span data-ttu-id="d7a25-135">您必须是管理员才能安装服务。</span><span class="sxs-lookup"><span data-stu-id="d7a25-135">You must be an administrator to install the service.</span></span>  
  
3.  <span data-ttu-id="d7a25-136">使用服务控制台启动该服务。</span><span class="sxs-lookup"><span data-stu-id="d7a25-136">Use the Services console to start the service.</span></span>  
  
4.  <span data-ttu-id="d7a25-137">更改系统时间或更改用户首选项，例如鼠标属性。</span><span class="sxs-lookup"><span data-stu-id="d7a25-137">Change the system time, or change user preferences, such as mouse properties.</span></span>  
  
5.  <span data-ttu-id="d7a25-138">查看事件查看器的 **应用程序** 类别中的消息。</span><span class="sxs-lookup"><span data-stu-id="d7a25-138">View the messages in the **Application** category of Event Viewer.</span></span>  
  
6.  <span data-ttu-id="d7a25-139">使用服务控制台停止此服务。</span><span class="sxs-lookup"><span data-stu-id="d7a25-139">Use the Services console to stop the service.</span></span>  
  
7.  <span data-ttu-id="d7a25-140">使用选项从命令行卸载服务 `/u` 。</span><span class="sxs-lookup"><span data-stu-id="d7a25-140">Uninstall the service from the command line by using the `/u` option.</span></span> <span data-ttu-id="d7a25-141">例如，`InstallUtil /u example.exe`。</span><span class="sxs-lookup"><span data-stu-id="d7a25-141">For example, `InstallUtil /u example.exe`.</span></span>  
  
 [!code-csharp[ManagedWindowsService#1](~/samples/snippets/csharp/VS_Snippets_CLR/ManagedWindowsService/cs/source.cs#1)]
 [!code-vb[ManagedWindowsService#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ManagedWindowsService/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.Win32.PowerModeChangedEventHandler" />
    <altmember cref="T:Microsoft.Win32.SessionEndedEventHandler" />
    <altmember cref="T:Microsoft.Win32.SessionEndingEventHandler" />
    <altmember cref="T:Microsoft.Win32.SessionSwitchEventHandler" />
    <altmember cref="T:Microsoft.Win32.TimerElapsedEventHandler" />
    <altmember cref="T:Microsoft.Win32.UserPreferenceChangedEventHandler" />
    <altmember cref="T:Microsoft.Win32.UserPreferenceChangingEventHandler" />
  </Docs>
  <Members>
    <Member MemberName="CreateTimer">
      <MemberSignature Language="C#" Value="public static IntPtr CreateTimer (int interval);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateTimer(int32 interval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SystemEvents.CreateTimer(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTimer (interval As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateTimer(int interval);" />
      <MemberSignature Language="F#" Value="static member CreateTimer : int -&gt; nativeint" Usage="Microsoft.Win32.SystemEvents.CreateTimer interval" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="interval"><span data-ttu-id="d7a25-142">指定计时器通知之间的间隔（以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="d7a25-142">Specifies the interval between timer notifications, in milliseconds.</span></span></param>
        <summary><span data-ttu-id="d7a25-143">创建一个与系统事件窗口相关联的新窗口计时器。</span><span class="sxs-lookup"><span data-stu-id="d7a25-143">Creates a new window timer associated with the system events window.</span></span></summary>
        <returns><span data-ttu-id="d7a25-144">新计时器的 ID。</span><span class="sxs-lookup"><span data-stu-id="d7a25-144">The ID of the new timer.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d7a25-145">间隔小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="d7a25-145">The interval is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d7a25-146">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-146">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d7a25-147">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-147">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d7a25-148">创建系统事件窗口线程的尝试未成功，或创建计时器的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d7a25-148">The attempt to create a system events window thread did not succeed, or the attempt to create the timer did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DisplaySettingsChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler DisplaySettingsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DisplaySettingsChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.DisplaySettingsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event DisplaySettingsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ DisplaySettingsChanged;" />
      <MemberSignature Language="F#" Value="member this.DisplaySettingsChanged : EventHandler " Usage="member this.DisplaySettingsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7a25-149">当用户更改显示设置时发生。</span><span class="sxs-lookup"><span data-stu-id="d7a25-149">Occurs when the user changes the display settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="d7a25-150">因为这是一个静态事件，所以必须在释放应用程序时分离事件处理程序，否则会导致内存泄漏。</span><span class="sxs-lookup"><span data-stu-id="d7a25-150">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7a25-151">下面的代码示例演示如何监视 <xref:Microsoft.Win32.SystemEvents.DisplaySettingsChanged> 事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-151">The following code example demonstrates how to monitor the <xref:Microsoft.Win32.SystemEvents.DisplaySettingsChanged> event.</span></span> <span data-ttu-id="d7a25-152">此代码示例是为类提供的更大示例的一部分 <xref:Microsoft.Win32.SystemEvents> 。</span><span class="sxs-lookup"><span data-stu-id="d7a25-152">This code example is part of a larger example provided for the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
 [!code-cpp[SystemEvents#2](~/samples/snippets/cpp/VS_Snippets_Winforms/SystemEvents/cpp/SystemEvents.cpp#2)]
 [!code-csharp[SystemEvents#2](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemEvents/CS/SystemEvents.cs#2)]
 [!code-vb[SystemEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemEvents/VB/SystemEvents.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d7a25-153">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-153">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d7a25-154">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-154">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d7a25-155">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d7a25-155">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="E:Microsoft.Win32.SystemEvents.DisplaySettingsChanging" />
      </Docs>
    </Member>
    <Member MemberName="DisplaySettingsChanging">
      <MemberSignature Language="C#" Value="public static event EventHandler DisplaySettingsChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DisplaySettingsChanging" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.DisplaySettingsChanging" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event DisplaySettingsChanging As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ DisplaySettingsChanging;" />
      <MemberSignature Language="F#" Value="member this.DisplaySettingsChanging : EventHandler " Usage="member this.DisplaySettingsChanging : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("Currently does nothing on Mono")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("Currently does nothing on Mono")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7a25-156">更改显示设置时发生。</span><span class="sxs-lookup"><span data-stu-id="d7a25-156">Occurs when the display settings are changing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="d7a25-157">因为这是一个静态事件，所以必须在释放应用程序时分离事件处理程序，否则会导致内存泄漏。</span><span class="sxs-lookup"><span data-stu-id="d7a25-157">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d7a25-158">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-158">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d7a25-159">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-159">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d7a25-160">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d7a25-160">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="E:Microsoft.Win32.SystemEvents.DisplaySettingsChanged" />
      </Docs>
    </Member>
    <Member MemberName="EventsThreadShutdown">
      <MemberSignature Language="C#" Value="public static event EventHandler EventsThreadShutdown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EventsThreadShutdown" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.EventsThreadShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event EventsThreadShutdown As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ EventsThreadShutdown;" />
      <MemberSignature Language="F#" Value="member this.EventsThreadShutdown : EventHandler " Usage="member this.EventsThreadShutdown : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("Currently does nothing on Mono")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("Currently does nothing on Mono")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7a25-161">在侦听系统事件的线程终止前发生。</span><span class="sxs-lookup"><span data-stu-id="d7a25-161">Occurs before the thread that listens for system events is terminated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7a25-162">此事件在侦听系统事件的线程即将终止时引发。</span><span class="sxs-lookup"><span data-stu-id="d7a25-162">This event is raised as the thread that listens for system events is about to be terminated.</span></span> <span data-ttu-id="d7a25-163">系统事件委托是使用侦听系统事件的线程调用的。</span><span class="sxs-lookup"><span data-stu-id="d7a25-163">System event delegates are invoked using the thread that listens for system events.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d7a25-164">因为这是一个静态事件，所以必须在释放应用程序时分离事件处理程序，否则会导致内存泄漏。</span><span class="sxs-lookup"><span data-stu-id="d7a25-164">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d7a25-165">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-165">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d7a25-166">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-166">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d7a25-167">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d7a25-167">The attempt to create a system events window thread did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InstalledFontsChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler InstalledFontsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler InstalledFontsChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.InstalledFontsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event InstalledFontsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ InstalledFontsChanged;" />
      <MemberSignature Language="F#" Value="member this.InstalledFontsChanged : EventHandler " Usage="member this.InstalledFontsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("Currently does nothing on Mono")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("Currently does nothing on Mono")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7a25-168">当用户在系统中添加或移除字体时发生。</span><span class="sxs-lookup"><span data-stu-id="d7a25-168">Occurs when the user adds fonts to or removes fonts from the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="d7a25-169">因为这是一个静态事件，所以必须在释放应用程序时分离事件处理程序，否则会导致内存泄漏。</span><span class="sxs-lookup"><span data-stu-id="d7a25-169">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d7a25-170">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-170">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d7a25-171">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-171">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d7a25-172">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d7a25-172">The attempt to create a system events window thread did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InvokeOnEventsThread">
      <MemberSignature Language="C#" Value="public static void InvokeOnEventsThread (Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeOnEventsThread(class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SystemEvents.InvokeOnEventsThread(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeOnEventsThread (method As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeOnEventsThread(Delegate ^ method);" />
      <MemberSignature Language="F#" Value="static member InvokeOnEventsThread : Delegate -&gt; unit" Usage="Microsoft.Win32.SystemEvents.InvokeOnEventsThread method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="d7a25-173">要使用侦听系统事件的线程调用的委托。</span><span class="sxs-lookup"><span data-stu-id="d7a25-173">A delegate to invoke using the thread that listens for system events.</span></span></param>
        <summary><span data-ttu-id="d7a25-174">使用侦听系统事件的线程调用指定的委托。</span><span class="sxs-lookup"><span data-stu-id="d7a25-174">Invokes the specified delegate using the thread that listens for system events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7a25-175">只要需要处理类未公开的系统事件，就可以使用此方法 <xref:Microsoft.Win32.SystemEvents> 。</span><span class="sxs-lookup"><span data-stu-id="d7a25-175">You can use this method any time that you need to handle a system event that is not exposed otherwise by the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
 <span data-ttu-id="d7a25-176">调用此方法时，将由应用程序用来处理系统事件的线程调用指定的委托。</span><span class="sxs-lookup"><span data-stu-id="d7a25-176">When you call this method, the specified delegate will be invoked by the thread that your application is using to process system events.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d7a25-177">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-177">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d7a25-178">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-178">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d7a25-179">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d7a25-179">The attempt to create a system events window thread did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KillTimer">
      <MemberSignature Language="C#" Value="public static void KillTimer (IntPtr timerId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void KillTimer(native int timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SystemEvents.KillTimer(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub KillTimer (timerId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void KillTimer(IntPtr timerId);" />
      <MemberSignature Language="F#" Value="static member KillTimer : nativeint -&gt; unit" Usage="Microsoft.Win32.SystemEvents.KillTimer timerId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timerId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="timerId"><span data-ttu-id="d7a25-180">要终止的计时器的 ID。</span><span class="sxs-lookup"><span data-stu-id="d7a25-180">The ID of the timer to terminate.</span></span></param>
        <summary><span data-ttu-id="d7a25-181">终止由给定 ID 指定的计时器。</span><span class="sxs-lookup"><span data-stu-id="d7a25-181">Terminates the timer specified by the given id.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d7a25-182">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-182">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d7a25-183">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-183">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d7a25-184">创建系统事件窗口线程的尝试未成功，或终止计时器的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d7a25-184">The attempt to create a system events window thread did not succeed, or the attempt to terminate the timer did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LowMemory">
      <MemberSignature Language="C#" Value="public static event EventHandler LowMemory;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LowMemory" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.LowMemory" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LowMemory As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ LowMemory;" />
      <MemberSignature Language="F#" Value="member this.LowMemory : EventHandler " Usage="member this.LowMemory : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Obsolete("This event has been deprecated. http://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This event has been deprecated. http://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1">
          <AttributeName Language="C#">[System.Obsolete("This event has been deprecated. https://go.microsoft.com/fwlink/?linkid=14202")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This event has been deprecated. https://go.microsoft.com/fwlink/?linkid=14202")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("Currently does nothing on Mono")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("Currently does nothing on Mono")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7a25-185">当系统用完可用 RAM 时发生。</span><span class="sxs-lookup"><span data-stu-id="d7a25-185">Occurs when the system is running out of available RAM.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7a25-186">此事件包装 WM_COMPACTING 消息。</span><span class="sxs-lookup"><span data-stu-id="d7a25-186">This event wraps the WM_COMPACTING message.</span></span> <span data-ttu-id="d7a25-187">当系统检测到超过30到60秒的时间间隔内的系统时间超过12.5% 时，会将此消息发送到所有顶级窗口。</span><span class="sxs-lookup"><span data-stu-id="d7a25-187">This message is sent to all top-level windows when the system detects more than 12.5 percent of system time over a 30- to 60-second interval is being spent compacting memory.</span></span> <span data-ttu-id="d7a25-188">这表明系统内存不足。</span><span class="sxs-lookup"><span data-stu-id="d7a25-188">This indicates that system memory is low.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d7a25-189">仅当消息泵正在运行时才引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-189">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="d7a25-190">在 Windows 服务中，除非使用隐藏的窗体或手动启动了消息泵，否则将不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-190">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="d7a25-191">有关演示如何使用 Windows 服务中的隐藏窗体处理系统事件的代码示例，请参阅 <xref:Microsoft.Win32.SystemEvents> 类。</span><span class="sxs-lookup"><span data-stu-id="d7a25-191">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d7a25-192">因为这是一个静态事件，所以必须在释放应用程序时分离事件处理程序，否则会导致内存泄漏。</span><span class="sxs-lookup"><span data-stu-id="d7a25-192">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d7a25-193">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-193">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d7a25-194">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-194">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d7a25-195">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d7a25-195">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d7a25-196">提供此消息只是为了与基于 Windows 的16位应用程序兼容。</span><span class="sxs-lookup"><span data-stu-id="d7a25-196">This message is provided only for compatibility with 16-bit Windows-based applications.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="PaletteChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler PaletteChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaletteChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.PaletteChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event PaletteChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ PaletteChanged;" />
      <MemberSignature Language="F#" Value="member this.PaletteChanged : EventHandler " Usage="member this.PaletteChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("Currently does nothing on Mono")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("Currently does nothing on Mono")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7a25-197">当用户切换到使用其他调色板的应用程序时发生。</span><span class="sxs-lookup"><span data-stu-id="d7a25-197">Occurs when the user switches to an application that uses a different palette.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d7a25-198">仅当消息泵正在运行时才引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-198">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="d7a25-199">在 Windows 服务中，除非使用隐藏的窗体或手动启动了消息泵，否则将不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-199">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="d7a25-200">有关演示如何使用 Windows 服务中的隐藏窗体处理系统事件的代码示例，请参阅 <xref:Microsoft.Win32.SystemEvents> 类。</span><span class="sxs-lookup"><span data-stu-id="d7a25-200">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d7a25-201">因为这是一个静态事件，所以必须在释放应用程序时分离事件处理程序，否则会导致内存泄漏。</span><span class="sxs-lookup"><span data-stu-id="d7a25-201">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7a25-202">下面的代码示例演示如何监视 <xref:Microsoft.Win32.SystemEvents.PaletteChanged> 事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-202">The following code example demonstrates how to monitor the <xref:Microsoft.Win32.SystemEvents.PaletteChanged> event.</span></span> <span data-ttu-id="d7a25-203">此代码示例是为类提供的更大示例的一部分 <xref:Microsoft.Win32.SystemEvents> 。</span><span class="sxs-lookup"><span data-stu-id="d7a25-203">This code example is part of a larger example provided for the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
 [!code-cpp[SystemEvents#2](~/samples/snippets/cpp/VS_Snippets_Winforms/SystemEvents/cpp/SystemEvents.cpp#2)]
 [!code-csharp[SystemEvents#2](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemEvents/CS/SystemEvents.cs#2)]
 [!code-vb[SystemEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemEvents/VB/SystemEvents.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d7a25-204">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-204">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d7a25-205">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-205">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d7a25-206">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d7a25-206">The attempt to create a system events window thread did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PowerModeChanged">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.PowerModeChangedEventHandler PowerModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.PowerModeChangedEventHandler PowerModeChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.PowerModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event PowerModeChanged As PowerModeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::PowerModeChangedEventHandler ^ PowerModeChanged;" />
      <MemberSignature Language="F#" Value="member this.PowerModeChanged : Microsoft.Win32.PowerModeChangedEventHandler " Usage="member this.PowerModeChanged : Microsoft.Win32.PowerModeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("Currently does nothing on Mono")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("Currently does nothing on Mono")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.PowerModeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7a25-207">当用户挂起或继续系统时发生。</span><span class="sxs-lookup"><span data-stu-id="d7a25-207">Occurs when the user suspends or resumes the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d7a25-208">仅当消息泵正在运行时才引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-208">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="d7a25-209">在 Windows 服务中，除非使用隐藏的窗体或手动启动了消息泵，否则将不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-209">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="d7a25-210">有关演示如何使用 Windows 服务中的隐藏窗体处理系统事件的代码示例，请参阅 <xref:Microsoft.Win32.SystemEvents> 类。</span><span class="sxs-lookup"><span data-stu-id="d7a25-210">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d7a25-211">因为这是一个静态事件，所以必须在释放应用程序时分离事件处理程序，否则会导致内存泄漏。</span><span class="sxs-lookup"><span data-stu-id="d7a25-211">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d7a25-212">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-212">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d7a25-213">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-213">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d7a25-214">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d7a25-214">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.PowerModeChangedEventArgs" />
        <altmember cref="T:Microsoft.Win32.PowerModeChangedEventHandler" />
        <altmember cref="T:Microsoft.Win32.PowerModes" />
      </Docs>
    </Member>
    <Member MemberName="SessionEnded">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.SessionEndedEventHandler SessionEnded;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.SessionEndedEventHandler SessionEnded" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.SessionEnded" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event SessionEnded As SessionEndedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::SessionEndedEventHandler ^ SessionEnded;" />
      <MemberSignature Language="F#" Value="member this.SessionEnded : Microsoft.Win32.SessionEndedEventHandler " Usage="member this.SessionEnded : Microsoft.Win32.SessionEndedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("Currently does nothing on Mono")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("Currently does nothing on Mono")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SessionEndedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7a25-215">当用户注销或关闭系统时发生。</span><span class="sxs-lookup"><span data-stu-id="d7a25-215">Occurs when the user is logging off or shutting down the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d7a25-216">仅当消息泵正在运行时才引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-216">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="d7a25-217">在 Windows 服务中，除非使用隐藏的窗体或手动启动了消息泵，否则将不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-217">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="d7a25-218">有关演示如何使用 Windows 服务中的隐藏窗体处理系统事件的代码示例，请参阅 <xref:Microsoft.Win32.SystemEvents> 类。</span><span class="sxs-lookup"><span data-stu-id="d7a25-218">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d7a25-219">因为这是一个静态事件，所以必须在释放应用程序时分离事件处理程序，否则会导致内存泄漏。</span><span class="sxs-lookup"><span data-stu-id="d7a25-219">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d7a25-220">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-220">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d7a25-221">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-221">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d7a25-222">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d7a25-222">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.SessionEndedEventArgs" />
        <altmember cref="T:Microsoft.Win32.SessionEndedEventHandler" />
        <altmember cref="T:Microsoft.Win32.SessionEndReasons" />
      </Docs>
    </Member>
    <Member MemberName="SessionEnding">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.SessionEndingEventHandler SessionEnding;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.SessionEndingEventHandler SessionEnding" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.SessionEnding" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event SessionEnding As SessionEndingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::SessionEndingEventHandler ^ SessionEnding;" />
      <MemberSignature Language="F#" Value="member this.SessionEnding : Microsoft.Win32.SessionEndingEventHandler " Usage="member this.SessionEnding : Microsoft.Win32.SessionEndingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("Currently does nothing on Mono")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("Currently does nothing on Mono")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SessionEndingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7a25-223">当用户尝试注销或关闭系统时发生。</span><span class="sxs-lookup"><span data-stu-id="d7a25-223">Occurs when the user is trying to log off or shut down the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7a25-224">这是一个可取消的事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-224">This is a cancelable event.</span></span> <span data-ttu-id="d7a25-225">将 <xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A> 属性设置为 `true` 将要求会话继续运行。</span><span class="sxs-lookup"><span data-stu-id="d7a25-225">Setting the <xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A> property to `true` will request that the session continues to run.</span></span> <span data-ttu-id="d7a25-226">它不保证会话不会结束。</span><span class="sxs-lookup"><span data-stu-id="d7a25-226">It provides no guarantee that the session will not end.</span></span>  
  
 <span data-ttu-id="d7a25-227">如果 <xref:Microsoft.Win32.SystemEvents.SessionEnding> 在 Windows 窗体中使用检测到系统注销或重新启动，则没有确定的方法来确定是否将在 <xref:System.Windows.Forms.Form.Closing> 此事件之前激发该事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-227">If you are using <xref:Microsoft.Win32.SystemEvents.SessionEnding> in a Windows form to detect a system logoff or reboot, there is no deterministic way to decide whether the <xref:System.Windows.Forms.Form.Closing> event will fire before this event.</span></span>  
  
 <span data-ttu-id="d7a25-228">如果要在激发之前执行某些特殊任务 <xref:System.Windows.Forms.Form.Closing> ，需要确保 <xref:Microsoft.Win32.SystemEvents.SessionEnding> 在之前激发 <xref:System.Windows.Forms.Form.Closing> 。</span><span class="sxs-lookup"><span data-stu-id="d7a25-228">If you want to perform some special tasks before <xref:System.Windows.Forms.Form.Closing> is fired, you need to ensure that <xref:Microsoft.Win32.SystemEvents.SessionEnding> fires before <xref:System.Windows.Forms.Form.Closing>.</span></span> <span data-ttu-id="d7a25-229">为此，需要 `WM_QUERYENDSESSION` 通过重写函数在窗体中捕获 `WndProc` 。</span><span class="sxs-lookup"><span data-stu-id="d7a25-229">To do this, you need to trap the `WM_QUERYENDSESSION` in the form by overriding the `WndProc` function.</span></span>  <span data-ttu-id="d7a25-230">此示例演示如何执行此操作。</span><span class="sxs-lookup"><span data-stu-id="d7a25-230">This example demonstrates how to do this.</span></span>  
  
```vb  
Private Shared WM_QUERYENDSESSION As Integer = &H11  
 Private Shared systemShutdown As Boolean = False  
 Protected Overrides Sub WndProc(ByRef m As System.Windows.Forms.Message)  
     If m.Msg = WM_QUERYENDSESSION Then  
         MessageBox.Show("queryendsession: this is a logoff, shutdown, or reboot")  
         systemShutdown = True  
     End If  
     ' If this is WM_QUERYENDSESSION, the closing event should be raised in the base WndProc.  
     MyBase.WndProc(m)  
 End Sub 'WndProc   
 Private Sub Form1_Closing(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles MyBase.Closing  
     If (systemShutdown) Then  
     ' Reset the variable because the user might cancel the shutdown.  
         systemShutdown = False  
         If (System.Windows.Forms.DialogResult.Yes = _  
                 MessageBox.Show("My application", "Do you want to save your work before logging off?", MessageBoxButtons.YesNo)) Then  
                 e.Cancel = True  
         Else  
                 e.Cancel = False  
         End If  
     End If  
 End Sub  
  
```  
  
```csharp  
private static int WM_QUERYENDSESSION = 0x11;  
private static bool systemShutdown = false;  
protected override void WndProc(ref System.Windows.Forms.Message m)  
{  
    if (m.Msg==WM_QUERYENDSESSION)  
    {  
        MessageBox.Show("queryendsession: this is a logoff, shutdown, or reboot");  
        systemShutdown = true;  
    }  
  
    // If this is WM_QUERYENDSESSION, the closing event should be  
    // raised in the base WndProc.  
    base.WndProc(ref m);  
  
} //WndProc   
  
private void Form1_Closing(  
    System.Object sender,   
    System.ComponentModel.CancelEventArgs e)  
{  
    if (systemShutdown)  
        // Reset the variable because the user might cancel the   
        // shutdown.  
    {  
        systemShutdown = false;  
        if (DialogResult.Yes==MessageBox.Show("My application",   
            "Do you want to save your work before logging off?",   
            MessageBoxButtons.YesNo))  
        {  
            e.Cancel = true;  
        }  
        else  
        {  
            e.Cancel = false;  
        }  
    }  
}  
```  
  
> [!IMPORTANT]
>  <span data-ttu-id="d7a25-231">控制台应用程序不会引发 <xref:Microsoft.Win32.SystemEvents.SessionEnding> 事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-231">Console applications do not raise the <xref:Microsoft.Win32.SystemEvents.SessionEnding> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d7a25-232">仅当消息泵正在运行时才引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-232">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="d7a25-233">在 Windows 服务中，除非使用隐藏的窗体或手动启动了消息泵，否则将不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-233">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="d7a25-234">有关演示如何使用 Windows 服务中的隐藏窗体处理系统事件的代码示例，请参阅 <xref:Microsoft.Win32.SystemEvents> 类。</span><span class="sxs-lookup"><span data-stu-id="d7a25-234">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d7a25-235">因为这是一个静态事件，所以必须在释放应用程序时分离事件处理程序，否则会导致内存泄漏。</span><span class="sxs-lookup"><span data-stu-id="d7a25-235">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d7a25-236">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-236">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d7a25-237">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-237">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d7a25-238">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d7a25-238">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.SessionEndingEventArgs" />
        <altmember cref="T:Microsoft.Win32.SessionEndingEventHandler" />
        <altmember cref="T:Microsoft.Win32.SessionEndReasons" />
      </Docs>
    </Member>
    <Member MemberName="SessionSwitch">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.SessionSwitchEventHandler SessionSwitch;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.SessionSwitchEventHandler SessionSwitch" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.SessionSwitch" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event SessionSwitch As SessionSwitchEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::SessionSwitchEventHandler ^ SessionSwitch;" />
      <MemberSignature Language="F#" Value="member this.SessionSwitch : Microsoft.Win32.SessionSwitchEventHandler " Usage="member this.SessionSwitch : Microsoft.Win32.SessionSwitchEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("Currently does nothing on Mono")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("Currently does nothing on Mono")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SessionSwitchEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7a25-239">更改当前登录的用户时发生。</span><span class="sxs-lookup"><span data-stu-id="d7a25-239">Occurs when the currently logged-in user has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d7a25-240">仅当消息泵正在运行时才引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-240">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="d7a25-241">在 Windows 服务中，除非使用隐藏的窗体或手动启动了消息泵，否则将不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-241">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="d7a25-242">有关演示如何使用 Windows 服务中的隐藏窗体处理系统事件的代码示例，请参阅 <xref:Microsoft.Win32.SystemEvents> 类。</span><span class="sxs-lookup"><span data-stu-id="d7a25-242">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d7a25-243">因为这是一个静态事件，所以必须在释放应用程序时分离事件处理程序，否则会导致内存泄漏。</span><span class="sxs-lookup"><span data-stu-id="d7a25-243">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d7a25-244">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-244">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d7a25-245">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-245">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d7a25-246">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d7a25-246">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.SessionSwitchEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="TimeChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler TimeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TimeChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.TimeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event TimeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ TimeChanged;" />
      <MemberSignature Language="F#" Value="member this.TimeChanged : EventHandler " Usage="member this.TimeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("Currently does nothing on Mono")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("Currently does nothing on Mono")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7a25-247">当用户更改系统时钟上的时间时发生。</span><span class="sxs-lookup"><span data-stu-id="d7a25-247">Occurs when the user changes the time on the system clock.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d7a25-248">仅当消息泵正在运行时才引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-248">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="d7a25-249">在 Windows 服务中，除非使用隐藏的窗体或手动启动了消息泵，否则将不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-249">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="d7a25-250">有关演示如何使用 Windows 服务中的隐藏窗体处理系统事件的代码示例，请参阅 <xref:Microsoft.Win32.SystemEvents> 类。</span><span class="sxs-lookup"><span data-stu-id="d7a25-250">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d7a25-251">因为这是一个静态事件，所以必须在释放应用程序时分离事件处理程序，否则会导致内存泄漏。</span><span class="sxs-lookup"><span data-stu-id="d7a25-251">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d7a25-252">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-252">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d7a25-253">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-253">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d7a25-254">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d7a25-254">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="P:System.DateTime.Now" />
      </Docs>
    </Member>
    <Member MemberName="TimerElapsed">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.TimerElapsedEventHandler TimerElapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.TimerElapsedEventHandler TimerElapsed" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.TimerElapsed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event TimerElapsed As TimerElapsedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::TimerElapsedEventHandler ^ TimerElapsed;" />
      <MemberSignature Language="F#" Value="member this.TimerElapsed : Microsoft.Win32.TimerElapsedEventHandler " Usage="member this.TimerElapsed : Microsoft.Win32.TimerElapsedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.TimerElapsedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7a25-255">在窗口计时器间隔过期时发生。</span><span class="sxs-lookup"><span data-stu-id="d7a25-255">Occurs when a windows timer interval has expired.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d7a25-256">仅当消息泵正在运行时才引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-256">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="d7a25-257">在 Windows 服务中，除非使用隐藏的窗体或手动启动了消息泵，否则将不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-257">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="d7a25-258">有关演示如何使用 Windows 服务中的隐藏窗体处理系统事件的代码示例，请参阅 <xref:Microsoft.Win32.SystemEvents> 类。</span><span class="sxs-lookup"><span data-stu-id="d7a25-258">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d7a25-259">因为这是一个静态事件，所以必须在释放应用程序时分离事件处理程序，否则会导致内存泄漏。</span><span class="sxs-lookup"><span data-stu-id="d7a25-259">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d7a25-260">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-260">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d7a25-261">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-261">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d7a25-262">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d7a25-262">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.TimerElapsedEventArgs" />
        <altmember cref="T:Microsoft.Win32.TimerElapsedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="UserPreferenceChanged">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.UserPreferenceChangedEventHandler UserPreferenceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.UserPreferenceChangedEventHandler UserPreferenceChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.UserPreferenceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event UserPreferenceChanged As UserPreferenceChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::UserPreferenceChangedEventHandler ^ UserPreferenceChanged;" />
      <MemberSignature Language="F#" Value="member this.UserPreferenceChanged : Microsoft.Win32.UserPreferenceChangedEventHandler " Usage="member this.UserPreferenceChanged : Microsoft.Win32.UserPreferenceChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("Currently does nothing on Mono")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("Currently does nothing on Mono")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.UserPreferenceChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7a25-263">在用户首选项更改后发生。</span><span class="sxs-lookup"><span data-stu-id="d7a25-263">Occurs when a user preference has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d7a25-264">仅当消息泵正在运行时才引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-264">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="d7a25-265">在 Windows 服务中，除非使用隐藏的窗体或手动启动了消息泵，否则将不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-265">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="d7a25-266">有关演示如何使用 Windows 服务中的隐藏窗体处理系统事件的代码示例，请参阅 <xref:Microsoft.Win32.SystemEvents> 类。</span><span class="sxs-lookup"><span data-stu-id="d7a25-266">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d7a25-267">因为这是一个静态事件，所以必须在释放应用程序时分离事件处理程序，否则会导致内存泄漏。</span><span class="sxs-lookup"><span data-stu-id="d7a25-267">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d7a25-268">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-268">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d7a25-269">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-269">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d7a25-270">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d7a25-270">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.UserPreferenceChangedEventArgs" />
        <altmember cref="T:Microsoft.Win32.UserPreferenceChangedEventHandler" />
        <altmember cref="T:Microsoft.Win32.UserPreferenceCategory" />
      </Docs>
    </Member>
    <Member MemberName="UserPreferenceChanging">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.UserPreferenceChangingEventHandler UserPreferenceChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.UserPreferenceChangingEventHandler UserPreferenceChanging" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.UserPreferenceChanging" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event UserPreferenceChanging As UserPreferenceChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::UserPreferenceChangingEventHandler ^ UserPreferenceChanging;" />
      <MemberSignature Language="F#" Value="member this.UserPreferenceChanging : Microsoft.Win32.UserPreferenceChangingEventHandler " Usage="member this.UserPreferenceChanging : Microsoft.Win32.UserPreferenceChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName Language="C#">[System.MonoTODO("Currently does nothing on Mono")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.MonoTODO("Currently does nothing on Mono")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.UserPreferenceChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7a25-271">当用户首选项更改时发生。</span><span class="sxs-lookup"><span data-stu-id="d7a25-271">Occurs when a user preference is changing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d7a25-272">仅当消息泵正在运行时才引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-272">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="d7a25-273">在 Windows 服务中，除非使用隐藏的窗体或手动启动了消息泵，否则将不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-273">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="d7a25-274">有关演示如何使用 Windows 服务中的隐藏窗体处理系统事件的代码示例，请参阅 <xref:Microsoft.Win32.SystemEvents> 类。</span><span class="sxs-lookup"><span data-stu-id="d7a25-274">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d7a25-275">因为这是一个静态事件，所以必须在释放应用程序时分离事件处理程序，否则会导致内存泄漏。</span><span class="sxs-lookup"><span data-stu-id="d7a25-275">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7a25-276">下面的代码示例演示如何监视 <xref:Microsoft.Win32.SystemEvents.UserPreferenceChanging> 事件。</span><span class="sxs-lookup"><span data-stu-id="d7a25-276">The following code example demonstrates how to monitor the <xref:Microsoft.Win32.SystemEvents.UserPreferenceChanging> event.</span></span> <span data-ttu-id="d7a25-277">此代码示例是为类提供的更大示例的一部分 <xref:Microsoft.Win32.SystemEvents> 。</span><span class="sxs-lookup"><span data-stu-id="d7a25-277">This code example is part of a larger example provided for the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
 [!code-cpp[SystemEvents#2](~/samples/snippets/cpp/VS_Snippets_Winforms/SystemEvents/cpp/SystemEvents.cpp#2)]
 [!code-csharp[SystemEvents#2](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemEvents/CS/SystemEvents.cs#2)]
 [!code-vb[SystemEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemEvents/VB/SystemEvents.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d7a25-278">当前上下文不支持系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-278">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="d7a25-279">例如，服务器进程可能不支持全局系统事件通知。</span><span class="sxs-lookup"><span data-stu-id="d7a25-279">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="d7a25-280">创建系统事件窗口线程的尝试未成功。</span><span class="sxs-lookup"><span data-stu-id="d7a25-280">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.UserPreferenceChangingEventArgs" />
        <altmember cref="T:Microsoft.Win32.UserPreferenceChangingEventHandler" />
        <altmember cref="T:Microsoft.Win32.UserPreferenceCategory" />
      </Docs>
    </Member>
  </Members>
</Type>
