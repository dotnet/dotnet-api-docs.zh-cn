<Type Name="RegistryKey" FullName="Microsoft.Win32.RegistryKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9263c507706dd6fbbfdffdcee24ba2a50e3c5224" /><Meta Name="ms.sourcegitcommit" Value="9f423345753728e8cad38d4a22663a109e69ea91" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/04/2021" /><Meta Name="ms.locfileid" Value="102065275" /></Metadata><TypeSignature Language="C#" Value="public sealed class RegistryKey : MarshalByRefObject, IDisposable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistryKey extends System.MarshalByRefObject implements class System.IDisposable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.RegistryKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryKey&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryKey sealed : MarshalByRefObject, IDisposable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type RegistryKey = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public sealed class RegistryKey : IDisposable" FrameworkAlternate="netcore-1.0;netcore-1.1;xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistryKey extends System.Object implements class System.IDisposable" FrameworkAlternate="netcore-1.0;netcore-1.1;xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryKey&#xA;Implements IDisposable" FrameworkAlternate="netcore-1.0;netcore-1.1;xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryKey sealed : IDisposable" FrameworkAlternate="netcore-1.0;netcore-1.1;xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="F#" Value="type RegistryKey = class&#xA;    interface IDisposable" FrameworkAlternate="netcore-1.0;netcore-1.1;xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RegistryKey extends System.MarshalByRefObject implements class System.IDisposable" FrameworkAlternate="xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="Microsoft.Win32.Registry" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netcore-1.0;netcore-1.1;xamarinandroid-7.1;xamarinios-10.8">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ec635-101">表示 Windows 注册表中的项级节点。</span><span class="sxs-lookup"><span data-stu-id="ec635-101">Represents a key-level node in the Windows registry.</span></span> <span data-ttu-id="ec635-102">此类是注册表封装。</span><span class="sxs-lookup"><span data-stu-id="ec635-102">This class is a registry encapsulation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-103">若要获取的实例 <xref:Microsoft.Win32.RegistryKey> ，请使用类的静态成员之一 <xref:Microsoft.Win32.Registry> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-103">To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class.</span></span>  
  
 <span data-ttu-id="ec635-104">注册表充当计算机上的操作系统和应用程序的信息的中央存储库。</span><span class="sxs-lookup"><span data-stu-id="ec635-104">The registry acts as a central repository of information for the operating system and the applications on a computer.</span></span> <span data-ttu-id="ec635-105">注册表以分层格式组织，基于其中存储的元素的逻辑排序 (请参阅 <xref:Microsoft.Win32.Registry> 此层次结构中的基本级别项) 。</span><span class="sxs-lookup"><span data-stu-id="ec635-105">The registry is organized in a hierarchical format, based on a logical ordering of the elements stored within it (please see <xref:Microsoft.Win32.Registry> for the base-level items in this hierarchy).</span></span> <span data-ttu-id="ec635-106">在注册表中存储信息时，请根据存储的信息类型选择适当的位置。</span><span class="sxs-lookup"><span data-stu-id="ec635-106">When storing information in the registry, select the appropriate location based on the type of information being stored.</span></span> <span data-ttu-id="ec635-107">请确保避免破坏其他应用程序创建的信息，因为这可能会导致这些应用程序出现意外的行为，并且还可能会对自己的应用程序造成不利影响。</span><span class="sxs-lookup"><span data-stu-id="ec635-107">Be sure to avoid destroying information created by other applications, because this can cause those applications to exhibit unexpected behavior, and can also have an adverse effect upon your own application.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec635-108">此类型实现 <xref:System.IDisposable> 接口。</span><span class="sxs-lookup"><span data-stu-id="ec635-108">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="ec635-109">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="ec635-109">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="ec635-110">若要直接释放类型，请在 `try`/`catch` 块中调用其 <xref:System.IDisposable.Dispose%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec635-110">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="ec635-111">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="ec635-111">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="ec635-112">有关详细信息，请参阅 <xref:System.IDisposable> 接口主题中的“使用实现 IDisposable 的对象”一节。</span><span class="sxs-lookup"><span data-stu-id="ec635-112">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="ec635-113">注册表项是注册表中组织的基本单位，可以与文件资源管理器中的文件夹进行比较。</span><span class="sxs-lookup"><span data-stu-id="ec635-113">Registry keys are the base unit of organization in the registry, and can be compared to folders in File Explorer.</span></span> <span data-ttu-id="ec635-114">某个特定键可以有子项，就像文件夹可以有子文件夹一样。</span><span class="sxs-lookup"><span data-stu-id="ec635-114">A particular key can have subkeys, just as a folder can have subfolders.</span></span> <span data-ttu-id="ec635-115">只要用户具有相应的权限来执行此操作，则每个密钥都可以删除，并且该密钥不是基本密钥，也不是基本密钥下直接的级别。</span><span class="sxs-lookup"><span data-stu-id="ec635-115">Each key can be deleted, as long as the user has the appropriate permissions to do so, and the key is not a base key or at the level directly under the base keys.</span></span> <span data-ttu-id="ec635-116">每个键还可以有多个与之关联的值 (可以将值与用于存储信息的文件) （例如，计算机上安装的应用程序有关的信息）进行比较。</span><span class="sxs-lookup"><span data-stu-id="ec635-116">Each key can also have multiple values associated with it (a value can be compared to a file), which are used to store the information - for example, information about an application installed on the computer.</span></span> <span data-ttu-id="ec635-117">每个值都包含一条特定的信息，可在需要时检索或更新。</span><span class="sxs-lookup"><span data-stu-id="ec635-117">Each value holds one particular piece of information, which can be retrieved or updated when required.</span></span> <span data-ttu-id="ec635-118">例如，你可以 <xref:Microsoft.Win32.RegistryKey> 在密钥 HKEY_LOCAL_MACHINE\Software 下为公司创建，然后为公司创建的每个应用程序创建一个子项。</span><span class="sxs-lookup"><span data-stu-id="ec635-118">For instance, you can create a <xref:Microsoft.Win32.RegistryKey> for your company, under the key HKEY_LOCAL_MACHINE\Software, and then a subkey for each application that your company creates.</span></span> <span data-ttu-id="ec635-119">每个子项保存特定于该应用程序的信息，如颜色设置、屏幕位置和大小，或者可识别的文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="ec635-119">Each subkey holds the information specific to that application, such as color settings, screen location and size, or recognized file extensions.</span></span>  
  
 <span data-ttu-id="ec635-120">请注意，存储在注册表中的信息可供其他应用程序和用户使用，因此不应用于存储安全数据或关键应用程序信息。</span><span class="sxs-lookup"><span data-stu-id="ec635-120">Note that information stored in the registry is available to other applications and users, and therefore should not be used to store security data or critical application information.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ec635-121">不要 <xref:Microsoft.Win32.RegistryKey> 以这样的方式公开对象：恶意程序可能会创建数千个无意义子项或键/值对。</span><span class="sxs-lookup"><span data-stu-id="ec635-121">Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</span></span> <span data-ttu-id="ec635-122">例如，不允许调用方输入任意密钥或值。</span><span class="sxs-lookup"><span data-stu-id="ec635-122">For example, do not allow callers to enter arbitrary keys or values.</span></span>  
  
 <span data-ttu-id="ec635-123">从 .NET Framework 4 开始，注册表项的长度不再限制为255个字符。</span><span class="sxs-lookup"><span data-stu-id="ec635-123">Starting in the .NET Framework 4, the length of a registry key is no longer limited to 255 characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-124">下面的代码示例演示如何在 HKEY_CURRENT_USER 下创建一个子项，操作其内容，然后删除该子项。</span><span class="sxs-lookup"><span data-stu-id="ec635-124">The following code example shows how to create a subkey under HKEY_CURRENT_USER, manipulate its contents, and then delete the subkey.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.Win32.Registry" />
    <altmember cref="T:Microsoft.Win32.RegistryHive" />
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="registryKey.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec635-125">关闭该项，如果其内容已修改，则将其刷新到磁盘。</span><span class="sxs-lookup"><span data-stu-id="ec635-125">Closes the key and flushes it to disk if its contents have been modified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-126">对系统键调用此方法不起任何作用，因为系统密钥永远不会关闭。</span><span class="sxs-lookup"><span data-stu-id="ec635-126">Calling this method on system keys will have no effect, because system keys are never closed.</span></span>  
  
 <span data-ttu-id="ec635-127">如果在已关闭的实例上调用此方法，则此方法不执行任何操作 `RegistryKey` 。</span><span class="sxs-lookup"><span data-stu-id="ec635-127">This method does nothing if you call it on an instance of `RegistryKey` that is already closed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-128">此代码示例是为类提供的更大示例的一部分 <xref:Microsoft.Win32.RegistryKey> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-128">This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#4)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#4)]
 [!code-vb[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.Win32.RegistryKey.Flush" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSubKey">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec635-129">创建一个新子项或打开一个现有子项。</span><span class="sxs-lookup"><span data-stu-id="ec635-129">Creates a new subkey or opens an existing subkey.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey);" />
      <MemberSignature Language="F#" Value="member this.CreateSubKey : string -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.CreateSubKey subkey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subkey"><span data-ttu-id="ec635-130">要创建或打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="ec635-130">The name or path of the subkey to create or open.</span></span> <span data-ttu-id="ec635-131">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="ec635-131">This string is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="ec635-132">创建一个新子项或打开一个现有子项以进行写访问。</span><span class="sxs-lookup"><span data-stu-id="ec635-132">Creates a new subkey or opens an existing subkey for write access.</span></span></summary>
        <returns><span data-ttu-id="ec635-133">新创建的子项，如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-133">The newly created subkey, or <see langword="null" /> if the operation failed.</span></span> <span data-ttu-id="ec635-134">如果为 <paramref name="subkey" /> 指定了长度为零的字符串，则返回当前 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec635-134">If a zero-length string is specified for <paramref name="subkey" />, the current <see cref="T:Microsoft.Win32.RegistryKey" /> object is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-135">要执行此操作，用户必须在注册表层次结构中具有此级别和下面的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-135">In order to perform this action, the user must have permission at this level and below in the registry hierarchy.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ec635-136">不要 <xref:Microsoft.Win32.RegistryKey> 以这样的方式公开对象：恶意程序可能会创建数千个无意义子项或键/值对。</span><span class="sxs-lookup"><span data-stu-id="ec635-136">Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</span></span> <span data-ttu-id="ec635-137">例如，不允许调用方输入任意密钥或值。</span><span class="sxs-lookup"><span data-stu-id="ec635-137">For example, do not allow callers to enter arbitrary keys or values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-138">下面的代码示例演示如何在 HKEY_CURRENT_USER 下创建一个子项，操作其内容，然后删除该子项。</span><span class="sxs-lookup"><span data-stu-id="ec635-138">The following code example shows how to create a subkey under HKEY_CURRENT_USER, manipulate its contents, and then delete the subkey.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryKey2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-139"><paramref name="subkey" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-139"><paramref name="subkey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-140">用户没有创建或打开注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-140">The user does not have the permissions required to create or open the registry key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-141">调用此方法时所针对的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问已关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-141">The <see cref="T:Microsoft.Win32.RegistryKey" /> on which this method is being invoked is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-142">无法写入 <see cref="T:Microsoft.Win32.RegistryKey" />；例如，它不是作为可写入项打开的，或者用户没有必需的访问权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-142">The <see cref="T:Microsoft.Win32.RegistryKey" /> cannot be written to; for example, it was not opened as a writable key , or the user does not have the necessary access rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec635-143">嵌套级别超过 510。</span><span class="sxs-lookup"><span data-stu-id="ec635-143">The nesting level exceeds 510.</span></span>  
  
<span data-ttu-id="ec635-144">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec635-144">-or-</span></span> 
<span data-ttu-id="ec635-145">出现系统错误，如删除注册表项，或尝试在 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 根中创建注册表项。</span><span class="sxs-lookup"><span data-stu-id="ec635-145">A system error occurred, such as deletion of the key, or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</span></span></exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String, permissionCheck As RegistryKeyPermissionCheck) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck);" />
      <MemberSignature Language="F#" Value="member this.CreateSubKey : string * Microsoft.Win32.RegistryKeyPermissionCheck -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.CreateSubKey (subkey, permissionCheck)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="subkey"><span data-ttu-id="ec635-146">要创建或打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="ec635-146">The name or path of the subkey to create or open.</span></span> <span data-ttu-id="ec635-147">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="ec635-147">This string is not case-sensitive.</span></span></param>
        <param name="permissionCheck"><span data-ttu-id="ec635-148">用于指定打开该项是进行读取还是读取/写入访问的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="ec635-148">One of the enumeration values that specifies whether the key is opened for read or read/write access.</span></span></param>
        <summary><span data-ttu-id="ec635-149">使用指定的权限检查选项创建一个新子项或打开一个现有子项以进行写访问。</span><span class="sxs-lookup"><span data-stu-id="ec635-149">Creates a new subkey or opens an existing subkey for write access, using the specified permission check option.</span></span></summary>
        <returns><span data-ttu-id="ec635-150">新创建的子项，如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-150">The newly created subkey, or <see langword="null" /> if the operation failed.</span></span> <span data-ttu-id="ec635-151">如果为 <paramref name="subkey" /> 指定了长度为零的字符串，则返回当前 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec635-151">If a zero-length string is specified for <paramref name="subkey" />, the current <see cref="T:Microsoft.Win32.RegistryKey" /> object is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-152">要执行此操作，用户必须在注册表层次结构中具有此级别和下面的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-152">In order to perform this action, the user must have permission at this level and below in the registry hierarchy.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ec635-153">不要 <xref:Microsoft.Win32.RegistryKey> 以这样的方式公开对象：恶意程序可能会创建数千个无意义子项或键/值对。</span><span class="sxs-lookup"><span data-stu-id="ec635-153">Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</span></span> <span data-ttu-id="ec635-154">例如，不允许调用方输入任意密钥或值。</span><span class="sxs-lookup"><span data-stu-id="ec635-154">For example, do not allow callers to enter arbitrary keys or values.</span></span>  
  
 <span data-ttu-id="ec635-155">若要使用 <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> 方法，必须具有类的实例 <xref:Microsoft.Win32.RegistryKey> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-155">In order to use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method, you must have an instance of the <xref:Microsoft.Win32.RegistryKey> class.</span></span> <span data-ttu-id="ec635-156">若要获取的实例 <xref:Microsoft.Win32.RegistryKey> ，请使用类的静态成员之一 <xref:Microsoft.Win32.Registry> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-156">To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-157"><paramref name="subkey" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-157"><paramref name="subkey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-158">用户没有创建或打开注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-158">The user does not have the permissions required to create or open the registry key.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec635-159"><paramref name="permissionCheck" /> 包含无效值。</span><span class="sxs-lookup"><span data-stu-id="ec635-159"><paramref name="permissionCheck" /> contains an invalid value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-160">调用此方法时所针对的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问已关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-160">The <see cref="T:Microsoft.Win32.RegistryKey" /> on which this method is being invoked is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-161">无法写入 <see cref="T:Microsoft.Win32.RegistryKey" />；例如，它不是作为可写入项打开的，或者用户没有必需的访问权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-161">The <see cref="T:Microsoft.Win32.RegistryKey" /> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec635-162">嵌套级别超过 510。</span><span class="sxs-lookup"><span data-stu-id="ec635-162">The nesting level exceeds 510.</span></span>  
  
<span data-ttu-id="ec635-163">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec635-163">-or-</span></span> 
<span data-ttu-id="ec635-164">出现系统错误，如删除注册表项，或尝试在 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 根中创建注册表项。</span><span class="sxs-lookup"><span data-stu-id="ec635-164">A system error occurred, such as deletion of the key, or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</span></span></exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, bool writable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, bool writable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String, writable As Boolean) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, bool writable);" />
      <MemberSignature Language="F#" Value="member this.CreateSubKey : string * bool -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.CreateSubKey (subkey, writable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writable" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="subkey"><span data-ttu-id="ec635-165">要创建或打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="ec635-165">The name or path of the subkey to create or open.</span></span> <span data-ttu-id="ec635-166">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="ec635-166">This string is not case-sensitive.</span></span></param>
        <param name="writable"><span data-ttu-id="ec635-167">如果新子项可写入，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-167"><see langword="true" /> to indicate the new subkey is writable; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="ec635-168">创建一个新子项或打开具有指定访问权限的现有子项。</span><span class="sxs-lookup"><span data-stu-id="ec635-168">Creates a new subkey or opens an existing subkey with the specified access.</span></span> <span data-ttu-id="ec635-169">从 .NET Framework 4.6 开始可用。</span><span class="sxs-lookup"><span data-stu-id="ec635-169">Available starting with .NET Framework 4.6.</span></span></summary>
        <returns><span data-ttu-id="ec635-170">新创建的子项，如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-170">The newly created subkey, or <see langword="null" /> if the operation failed.</span></span> <span data-ttu-id="ec635-171">如果为 <paramref name="subkey" /> 指定了长度为零的字符串，则返回当前 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec635-171">If a zero-length string is specified for <paramref name="subkey" />, the current <see cref="T:Microsoft.Win32.RegistryKey" /> object is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-172">要执行此操作，用户必须在注册表层次结构中具有此级别和下面的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-172">In order to perform this action, the user must have permission at this level and below in the registry hierarchy.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ec635-173">不要 <xref:Microsoft.Win32.RegistryKey> 以这样的方式公开对象：恶意程序可能会创建数千个无意义子项或键/值对。</span><span class="sxs-lookup"><span data-stu-id="ec635-173">Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</span></span> <span data-ttu-id="ec635-174">例如，不允许调用方输入任意密钥或值。</span><span class="sxs-lookup"><span data-stu-id="ec635-174">For example, do not allow callers to enter arbitrary keys or values.</span></span>  
  
 <span data-ttu-id="ec635-175">若要使用 <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A> 方法，必须具有类的实例 <xref:Microsoft.Win32.RegistryKey> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-175">In order to use the <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A> method, you must have an instance of the <xref:Microsoft.Win32.RegistryKey> class.</span></span> <span data-ttu-id="ec635-176">若要获取的实例 <xref:Microsoft.Win32.RegistryKey> ，请使用类的静态成员之一 <xref:Microsoft.Win32.Registry> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-176">To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-177"><paramref name="subkey" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-177"><paramref name="subkey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-178">用户没有创建或打开注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-178">The user does not have the permissions required to create or open the registry key.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-179">无法写入当前 <see cref="T:Microsoft.Win32.RegistryKey" />；例如，它未作为可写入项打开，或用户没有必要的访问权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-179">The current <see cref="T:Microsoft.Win32.RegistryKey" /> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec635-180">嵌套级别超过 510。</span><span class="sxs-lookup"><span data-stu-id="ec635-180">The nesting level exceeds 510.</span></span>  
  
<span data-ttu-id="ec635-181">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec635-181">-or-</span></span> 
<span data-ttu-id="ec635-182">出现系统错误，如删除注册表项，或尝试在 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 根中创建注册表项。</span><span class="sxs-lookup"><span data-stu-id="ec635-182">A system error occurred, such as deletion of the key, or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, System.Security.AccessControl.RegistrySecurity registrySecurity);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, class System.Security.AccessControl.RegistrySecurity registrySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String, permissionCheck As RegistryKeyPermissionCheck, registrySecurity As RegistrySecurity) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck, System::Security::AccessControl::RegistrySecurity ^ registrySecurity);" />
      <MemberSignature Language="F#" Value="member this.CreateSubKey : string * Microsoft.Win32.RegistryKeyPermissionCheck * System.Security.AccessControl.RegistrySecurity -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.CreateSubKey (subkey, permissionCheck, registrySecurity)" />
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, System.Security.AccessControl.RegistrySecurity? registrySecurity);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="registrySecurity" Type="System.Security.AccessControl.RegistrySecurity" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="subkey"><span data-ttu-id="ec635-183">要创建或打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="ec635-183">The name or path of the subkey to create or open.</span></span> <span data-ttu-id="ec635-184">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="ec635-184">This string is not case-sensitive.</span></span></param>
        <param name="permissionCheck"><span data-ttu-id="ec635-185">用于指定打开该项是进行读取还是读取/写入访问的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="ec635-185">One of the enumeration values that specifies whether the key is opened for read or read/write access.</span></span></param>
        <param name="registrySecurity"><span data-ttu-id="ec635-186">新项的访问控制安全性。</span><span class="sxs-lookup"><span data-stu-id="ec635-186">The access control security for the new key.</span></span></param>
        <summary><span data-ttu-id="ec635-187">使用指定的权限检查选项和注册表安全性创建一个新子项或打开一个现有子项以进行写访问。</span><span class="sxs-lookup"><span data-stu-id="ec635-187">Creates a new subkey or opens an existing subkey for write access, using the specified permission check option and registry security.</span></span></summary>
        <returns><span data-ttu-id="ec635-188">新创建的子项，如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-188">The newly created subkey, or <see langword="null" /> if the operation failed.</span></span> <span data-ttu-id="ec635-189">如果为 <paramref name="subkey" /> 指定了长度为零的字符串，则返回当前 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec635-189">If a zero-length string is specified for <paramref name="subkey" />, the current <see cref="T:Microsoft.Win32.RegistryKey" /> object is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-190"><xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A>方法创建一个注册表项，该注册表项具有参数指定的访问控制 `registrySecurity` 。</span><span class="sxs-lookup"><span data-stu-id="ec635-190">The <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A> method creates a registry key that has the access control specified by the `registrySecurity` parameter.</span></span> <span data-ttu-id="ec635-191"><xref:Microsoft.Win32.RegistryKey>返回的对象表示注册表项，但该对象不受参数中指定的访问控制限制 `registrySecurity` 。</span><span class="sxs-lookup"><span data-stu-id="ec635-191">The <xref:Microsoft.Win32.RegistryKey> object that is returned represents the registry key, but that object is not restricted by the access control specified in the `registrySecurity` parameter.</span></span>  
  
 <span data-ttu-id="ec635-192">如果 `permissionCheck` 为 <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType> ，则打开密钥以进行读/写访问。</span><span class="sxs-lookup"><span data-stu-id="ec635-192">If `permissionCheck` is <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>, the key is opened for read/write access.</span></span> <span data-ttu-id="ec635-193">如果 `permissionCheck` 为 <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType> ，则打开密钥以进行读访问。</span><span class="sxs-lookup"><span data-stu-id="ec635-193">If `permissionCheck` is <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType>, the key is opened for read access.</span></span>  
  
 <span data-ttu-id="ec635-194">为实现向后兼容性，如果为，则打开密钥以进行读取和写入， `permissionCheck` <xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType> 并且父键也具有 <xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-194">For backward compatibility, the key is opened for reading and writing if `permissionCheck` is <xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType> and the parent key also has <xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ec635-195">如果父项具有任何其他设置，则读取/写入状态由父项的设置控制。</span><span class="sxs-lookup"><span data-stu-id="ec635-195">If the parent key has any other setting, read/write status is controlled by the parent key's setting.</span></span>  
  
 <span data-ttu-id="ec635-196">要执行此操作，用户必须在注册表层次结构中具有此级别和下面的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-196">In order to perform this action, the user must have permissions at this level and below in the registry hierarchy.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ec635-197">不要 <xref:Microsoft.Win32.RegistryKey> 以这样的方式公开对象：恶意程序可能会创建数千个无意义子项或键/值对。</span><span class="sxs-lookup"><span data-stu-id="ec635-197">Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</span></span> <span data-ttu-id="ec635-198">例如，不允许调用方输入任意密钥或值。</span><span class="sxs-lookup"><span data-stu-id="ec635-198">For example, do not allow callers to enter arbitrary keys or values.</span></span>  
  
 <span data-ttu-id="ec635-199">若要使用 <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> 方法，必须具有类的实例 <xref:Microsoft.Win32.RegistryKey> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-199">In order to use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method, you must have an instance of the <xref:Microsoft.Win32.RegistryKey> class.</span></span> <span data-ttu-id="ec635-200">若要获取的实例 <xref:Microsoft.Win32.RegistryKey> ，请使用类的静态成员之一 <xref:Microsoft.Win32.Registry> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-200">To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-201"><paramref name="subkey" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-201"><paramref name="subkey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-202">用户没有创建或打开注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-202">The user does not have the permissions required to create or open the registry key.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec635-203"><paramref name="permissionCheck" /> 包含无效值。</span><span class="sxs-lookup"><span data-stu-id="ec635-203"><paramref name="permissionCheck" /> contains an invalid value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-204">调用此方法时所针对的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问已关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-204">The <see cref="T:Microsoft.Win32.RegistryKey" /> on which this method is being invoked is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-205">无法写入当前 <see cref="T:Microsoft.Win32.RegistryKey" />；例如，它未作为可写入项打开，或用户没有必要的访问权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-205">The current <see cref="T:Microsoft.Win32.RegistryKey" /> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec635-206">嵌套级别超过 510。</span><span class="sxs-lookup"><span data-stu-id="ec635-206">The nesting level exceeds 510.</span></span>  
  
<span data-ttu-id="ec635-207">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec635-207">-or-</span></span> 
<span data-ttu-id="ec635-208">出现系统错误，如删除注册表项，或尝试在 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 根中创建注册表项。</span><span class="sxs-lookup"><span data-stu-id="ec635-208">A system error occurred, such as deletion of the key, or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</span></span></exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, bool writable, Microsoft.Win32.RegistryOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, bool writable, valuetype Microsoft.Win32.RegistryOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String, writable As Boolean, options As RegistryOptions) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, bool writable, Microsoft::Win32::RegistryOptions options);" />
      <MemberSignature Language="F#" Value="member this.CreateSubKey : string * bool * Microsoft.Win32.RegistryOptions -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.CreateSubKey (subkey, writable, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="writable" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="Microsoft.Win32.RegistryOptions" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="subkey"><span data-ttu-id="ec635-209">要创建或打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="ec635-209">The name or path of the subkey to create or open.</span></span> <span data-ttu-id="ec635-210">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="ec635-210">This string is not case-sensitive.</span></span></param>
        <param name="writable"><span data-ttu-id="ec635-211">如果新子项可写入，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-211"><see langword="true" /> to indicate the new subkey is writable; otherwise, <see langword="false" />.</span></span></param>
        <param name="options"><span data-ttu-id="ec635-212">要使用的注册表选项。</span><span class="sxs-lookup"><span data-stu-id="ec635-212">The registry option to use.</span></span></param>
        <summary><span data-ttu-id="ec635-213">创建一个新子项或打开具有指定访问权限的现有子项。</span><span class="sxs-lookup"><span data-stu-id="ec635-213">Creates a new subkey or opens an existing subkey with the specified access.</span></span> <span data-ttu-id="ec635-214">从 .NET Framework 4.6 开始可用。</span><span class="sxs-lookup"><span data-stu-id="ec635-214">Available starting with .NET Framework 4.6.</span></span></summary>
        <returns><span data-ttu-id="ec635-215">新创建的子项，如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-215">The newly created subkey, or <see langword="null" /> if the operation failed.</span></span> <span data-ttu-id="ec635-216">如果为 <paramref name="subkey" /> 指定了长度为零的字符串，则返回当前 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec635-216">If a zero-length string is specified for <paramref name="subkey" />, the current <see cref="T:Microsoft.Win32.RegistryKey" /> object is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-217">要执行此操作，用户必须在注册表层次结构中具有此级别和下面的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-217">In order to perform this action, the user must have permission at this level and below in the registry hierarchy.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ec635-218">不要 <xref:Microsoft.Win32.RegistryKey> 以这样的方式公开对象：恶意程序可能会创建数千个无意义子项或键/值对。</span><span class="sxs-lookup"><span data-stu-id="ec635-218">Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</span></span> <span data-ttu-id="ec635-219">例如，不允许调用方输入任意密钥或值。</span><span class="sxs-lookup"><span data-stu-id="ec635-219">For example, do not allow callers to enter arbitrary keys or values.</span></span>  
  
 <span data-ttu-id="ec635-220">若要使用 <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A> 方法，必须具有类的实例 <xref:Microsoft.Win32.RegistryKey> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-220">In order to use the <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A> method, you must have an instance of the <xref:Microsoft.Win32.RegistryKey> class.</span></span> <span data-ttu-id="ec635-221">若要获取的实例 <xref:Microsoft.Win32.RegistryKey> ，请使用类的静态成员之一 <xref:Microsoft.Win32.Registry> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-221">To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-222"><paramref name="subkey" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-222"><paramref name="subkey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec635-223"><paramref name="options" /> 未指定有效的选项</span><span class="sxs-lookup"><span data-stu-id="ec635-223"><paramref name="options" /> does not specify a valid Option</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-224">用户没有创建或打开注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-224">The user does not have the permissions required to create or open the registry key.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-225">无法写入当前 <see cref="T:Microsoft.Win32.RegistryKey" />；例如，它未作为可写入项打开，或用户没有必要的访问权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-225">The current <see cref="T:Microsoft.Win32.RegistryKey" /> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec635-226">嵌套级别超过 510。</span><span class="sxs-lookup"><span data-stu-id="ec635-226">The nesting level exceeds 510.</span></span>  
  
<span data-ttu-id="ec635-227">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec635-227">-or-</span></span> 
<span data-ttu-id="ec635-228">出现系统错误，如删除注册表项，或尝试在 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 根中创建注册表项。</span><span class="sxs-lookup"><span data-stu-id="ec635-228">A system error occurred, such as deletion of the key, or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, Microsoft.Win32.RegistryOptions registryOptions);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, valuetype Microsoft.Win32.RegistryOptions registryOptions) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String, permissionCheck As RegistryKeyPermissionCheck, registryOptions As RegistryOptions) As RegistryKey" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck, Microsoft::Win32::RegistryOptions registryOptions);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="member this.CreateSubKey : string * Microsoft.Win32.RegistryKeyPermissionCheck * Microsoft.Win32.RegistryOptions -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.CreateSubKey (subkey, permissionCheck, registryOptions)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, Microsoft.Win32.RegistryOptions options);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, valuetype Microsoft.Win32.RegistryOptions options) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String, permissionCheck As RegistryKeyPermissionCheck, options As RegistryOptions) As RegistryKey" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck, Microsoft::Win32::RegistryOptions options);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.CreateSubKey : string * Microsoft.Win32.RegistryKeyPermissionCheck * Microsoft.Win32.RegistryOptions -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.CreateSubKey (subkey, permissionCheck, options)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="registryOptions" Type="Microsoft.Win32.RegistryOptions" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="options" Type="Microsoft.Win32.RegistryOptions" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="subkey"><span data-ttu-id="ec635-229">要创建或打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="ec635-229">The name or path of the subkey to create or open.</span></span></param>
        <param name="permissionCheck"><span data-ttu-id="ec635-230">用于指定打开该项是进行读取还是读取/写入访问的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="ec635-230">One of the enumeration values that specifies whether the key is opened for read or read/write access.</span></span></param>
        <param name="registryOptions"><span data-ttu-id="ec635-231">要使用的注册表选项；例如，用于创建可变键的注册表选项。</span><span class="sxs-lookup"><span data-stu-id="ec635-231">The registry option to use; for example, that creates a volatile key.</span></span></param>
        <param name="options"><span data-ttu-id="ec635-232">要使用的注册表选项；例如，用于创建可变键的注册表选项。</span><span class="sxs-lookup"><span data-stu-id="ec635-232">The registry option to use; for example, that creates a volatile key.</span></span></param>
        <summary><span data-ttu-id="ec635-233">使用指定的权限检查和注册表选项，创建或打开一个用于写访问的子项。</span><span class="sxs-lookup"><span data-stu-id="ec635-233">Creates a subkey or opens a subkey for write access, using the specified permission check and registry options.</span></span></summary>
        <returns><span data-ttu-id="ec635-234">新创建的子项，如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-234">The newly created subkey, or <see langword="null" /> if the operation failed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-235">若要获取当前 <xref:Microsoft.Win32.RegistryKey> 对象，请为 ( "" ) 指定一个空字符串 `subkey` 。</span><span class="sxs-lookup"><span data-stu-id="ec635-235">To obtain the current <xref:Microsoft.Win32.RegistryKey> object, specify an empty string ("") for `subkey`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-236"><paramref name="subkey" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-236"><paramref name="subkey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-237">当前的 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-237">The current <see cref="T:Microsoft.Win32.RegistryKey" /> object is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-238">无法写入当前 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象；例如，它未作为可写入项打开，或用户不具有所需的访问权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-238">The current <see cref="T:Microsoft.Win32.RegistryKey" /> object cannot be written to; for example, it was not opened as a writable key, or the user does not have the required access rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec635-239">嵌套级别超过 510。</span><span class="sxs-lookup"><span data-stu-id="ec635-239">The nesting level exceeds 510.</span></span>  
  
<span data-ttu-id="ec635-240">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec635-240">-or-</span></span> 
<span data-ttu-id="ec635-241">发生系统错误，例如，删除了项，或者尝试在 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 根中创建项。</span><span class="sxs-lookup"><span data-stu-id="ec635-241">A system error occurred, such as deletion of the key or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-242">用户没有创建或打开注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-242">The user does not have the permissions required to create or open the registry key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, Microsoft.Win32.RegistryOptions registryOptions, System.Security.AccessControl.RegistrySecurity registrySecurity);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey CreateSubKey(string subkey, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, valuetype Microsoft.Win32.RegistryOptions registryOptions, class System.Security.AccessControl.RegistrySecurity registrySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubKey (subkey As String, permissionCheck As RegistryKeyPermissionCheck, registryOptions As RegistryOptions, registrySecurity As RegistrySecurity) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ CreateSubKey(System::String ^ subkey, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck, Microsoft::Win32::RegistryOptions registryOptions, System::Security::AccessControl::RegistrySecurity ^ registrySecurity);" />
      <MemberSignature Language="F#" Value="member this.CreateSubKey : string * Microsoft.Win32.RegistryKeyPermissionCheck * Microsoft.Win32.RegistryOptions * System.Security.AccessControl.RegistrySecurity -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.CreateSubKey (subkey, permissionCheck, registryOptions, registrySecurity)" />
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, Microsoft.Win32.RegistryOptions registryOptions, System.Security.AccessControl.RegistrySecurity? registrySecurity);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="registryOptions" Type="Microsoft.Win32.RegistryOptions" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="registrySecurity" Type="System.Security.AccessControl.RegistrySecurity" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="subkey"><span data-ttu-id="ec635-243">要创建或打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="ec635-243">The name or path of the subkey to create or open.</span></span></param>
        <param name="permissionCheck"><span data-ttu-id="ec635-244">用于指定打开该项是进行读取还是读取/写入访问的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="ec635-244">One of the enumeration values that specifies whether the key is opened for read or read/write access.</span></span></param>
        <param name="registryOptions"><span data-ttu-id="ec635-245">要使用的注册表选项。</span><span class="sxs-lookup"><span data-stu-id="ec635-245">The registry option to use.</span></span></param>
        <param name="registrySecurity"><span data-ttu-id="ec635-246">新子项的访问控制安全性。</span><span class="sxs-lookup"><span data-stu-id="ec635-246">The access control security for the new subkey.</span></span></param>
        <summary><span data-ttu-id="ec635-247">使用指定的权限检查选项、注册表选项和注册表安全性，创建或打开一个用于写访问的子项。</span><span class="sxs-lookup"><span data-stu-id="ec635-247">Creates a subkey or opens a subkey for write access, using the specified permission check option, registry option, and registry security.</span></span></summary>
        <returns><span data-ttu-id="ec635-248">新创建的子项，如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-248">The newly created subkey, or <see langword="null" /> if the operation failed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-249">若要获取当前 <xref:Microsoft.Win32.RegistryKey> 对象，请为 ( "" ) 指定一个空字符串 `subkey` 。</span><span class="sxs-lookup"><span data-stu-id="ec635-249">To obtain the current <xref:Microsoft.Win32.RegistryKey> object, specify an empty string ("") for `subkey`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-250"><paramref name="subkey" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-250"><paramref name="subkey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-251">当前的 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象被关闭。</span><span class="sxs-lookup"><span data-stu-id="ec635-251">The current <see cref="T:Microsoft.Win32.RegistryKey" /> object is closed.</span></span> <span data-ttu-id="ec635-252">无法访问已关闭的项。</span><span class="sxs-lookup"><span data-stu-id="ec635-252">Closed keys cannot be accessed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-253">无法写入当前 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象；例如，它未作为可写入项打开，或用户不具有所需的访问权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-253">The current <see cref="T:Microsoft.Win32.RegistryKey" /> object cannot be written to; for example, it was not opened as a writable key, or the user does not have the required access rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec635-254">嵌套级别超过 510。</span><span class="sxs-lookup"><span data-stu-id="ec635-254">The nesting level exceeds 510.</span></span>  
  
<span data-ttu-id="ec635-255">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec635-255">-or-</span></span> 
<span data-ttu-id="ec635-256">发生系统错误，例如，删除了项，或者尝试在 <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> 根中创建项。</span><span class="sxs-lookup"><span data-stu-id="ec635-256">A system error occurred, such as deletion of the key or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-257">用户没有创建或打开注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-257">The user does not have the permissions required to create or open the registry key.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteSubKey">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec635-258">删除指定子项。</span><span class="sxs-lookup"><span data-stu-id="ec635-258">Deletes the specified subkey.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteSubKey">
      <MemberSignature Language="C#" Value="public void DeleteSubKey (string subkey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteSubKey(string subkey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteSubKey (subkey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteSubKey(System::String ^ subkey);" />
      <MemberSignature Language="F#" Value="member this.DeleteSubKey : string -&gt; unit" Usage="registryKey.DeleteSubKey subkey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subkey"><span data-ttu-id="ec635-259">要删除的子项的名称。</span><span class="sxs-lookup"><span data-stu-id="ec635-259">The name of the subkey to delete.</span></span> <span data-ttu-id="ec635-260">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="ec635-260">This string is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="ec635-261">删除指定子项。</span><span class="sxs-lookup"><span data-stu-id="ec635-261">Deletes the specified subkey.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-262">若要删除子子项，请使用 <xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-262">To delete child subkeys, use <xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>.</span></span>  
  
 <span data-ttu-id="ec635-263">删除注册表项时请小心。</span><span class="sxs-lookup"><span data-stu-id="ec635-263">Use caution when deleting registry keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-264">下面的示例演示如何使用 <xref:Microsoft.Win32.RegistryKey.DeleteSubKey%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-264">The following example demonstrates how to use <xref:Microsoft.Win32.RegistryKey.DeleteSubKey%2A>.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#5](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source2.cpp#5)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#5](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source2.cs#5)]
 [!code-vb[Microsoft.Win32.RegistryKey2#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec635-265"><paramref name="subkey" /> 有子级子项</span><span class="sxs-lookup"><span data-stu-id="ec635-265">The <paramref name="subkey" /> has child subkeys</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec635-266"><paramref name="subkey" /> 参数未指定有效的注册表项</span><span class="sxs-lookup"><span data-stu-id="ec635-266">The <paramref name="subkey" /> parameter does not specify a valid registry key</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-267"><paramref name="subkey" /> 为 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="ec635-267"><paramref name="subkey" /> is <see langword="null" /></span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-268">用户没有删除该项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-268">The user does not have the permissions required to delete the key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-269">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-269">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-270">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-270">The user does not have the necessary registry rights.</span></span></exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="DeleteSubKey">
      <MemberSignature Language="C#" Value="public void DeleteSubKey (string subkey, bool throwOnMissingSubKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteSubKey(string subkey, bool throwOnMissingSubKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteSubKey (subkey As String, throwOnMissingSubKey As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteSubKey(System::String ^ subkey, bool throwOnMissingSubKey);" />
      <MemberSignature Language="F#" Value="member this.DeleteSubKey : string * bool -&gt; unit" Usage="registryKey.DeleteSubKey (subkey, throwOnMissingSubKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
        <Parameter Name="throwOnMissingSubKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="subkey"><span data-ttu-id="ec635-271">要删除的子项的名称。</span><span class="sxs-lookup"><span data-stu-id="ec635-271">The name of the subkey to delete.</span></span> <span data-ttu-id="ec635-272">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="ec635-272">This string is not case-sensitive.</span></span></param>
        <param name="throwOnMissingSubKey"><span data-ttu-id="ec635-273">指示在找不到指定子项的情况下是否引发异常。</span><span class="sxs-lookup"><span data-stu-id="ec635-273">Indicates whether an exception should be raised if the specified subkey cannot be found.</span></span> <span data-ttu-id="ec635-274">如果该参数为 <see langword="true" />，并且指定的子项不存在，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="ec635-274">If this argument is <see langword="true" /> and the specified subkey does not exist, an exception is raised.</span></span> <span data-ttu-id="ec635-275">如果该参数为 <see langword="false" />，并且指定的子项不存在，则不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="ec635-275">If this argument is <see langword="false" /> and the specified subkey does not exist, no action is taken.</span></span></param>
        <summary><span data-ttu-id="ec635-276">删除指定的子项，并指定在找不到该子项时是否引发异常。</span><span class="sxs-lookup"><span data-stu-id="ec635-276">Deletes the specified subkey, and specifies whether an exception is raised if the subkey is not found.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-277">若要删除子子项，请使用 <xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-277">To delete child subkeys, use <xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>.</span></span>  
  
 <span data-ttu-id="ec635-278">删除注册表项时请小心。</span><span class="sxs-lookup"><span data-stu-id="ec635-278">Use caution when deleting registry keys.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec635-279"><paramref name="subkey" /> 有子级子项。</span><span class="sxs-lookup"><span data-stu-id="ec635-279"><paramref name="subkey" /> has child subkeys.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec635-280"><paramref name="subkey" /> 未指定有效的注册表项，并且 <paramref name="throwOnMissingSubKey" /> 为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-280"><paramref name="subkey" /> does not specify a valid registry key, and <paramref name="throwOnMissingSubKey" /> is <see langword="true" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-281"><paramref name="subkey" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-281"><paramref name="subkey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-282">用户没有删除该项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-282">The user does not have the permissions required to delete the key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-283">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-283">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-284">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-284">The user does not have the necessary registry rights.</span></span></exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteSubKeyTree">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec635-285">使用可选的异常处理方以递归方式删除一个子项以及任何子级子项。</span><span class="sxs-lookup"><span data-stu-id="ec635-285">Deletes a subkey and any child subkeys recursively, with optional exception handling.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteSubKeyTree">
      <MemberSignature Language="C#" Value="public void DeleteSubKeyTree (string subkey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteSubKeyTree(string subkey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteSubKeyTree (subkey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteSubKeyTree(System::String ^ subkey);" />
      <MemberSignature Language="F#" Value="member this.DeleteSubKeyTree : string -&gt; unit" Usage="registryKey.DeleteSubKeyTree subkey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subkey"><span data-ttu-id="ec635-286">要删除的子项。</span><span class="sxs-lookup"><span data-stu-id="ec635-286">The subkey to delete.</span></span> <span data-ttu-id="ec635-287">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="ec635-287">This string is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="ec635-288">递归删除子项和任何子级子项。</span><span class="sxs-lookup"><span data-stu-id="ec635-288">Deletes a subkey and any child subkeys recursively.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-289">您必须具有相应的权限才能删除该子项及其树。</span><span class="sxs-lookup"><span data-stu-id="ec635-289">You must have appropriate permissions to delete the subkey and its tree.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ec635-290">删除特定的密钥会删除树中该密钥下面的所有条目。</span><span class="sxs-lookup"><span data-stu-id="ec635-290">Deleting a particular key will remove all entries below the key in the tree.</span></span> <span data-ttu-id="ec635-291">不会提供任何警告。</span><span class="sxs-lookup"><span data-stu-id="ec635-291">No warning will be provided.</span></span> <span data-ttu-id="ec635-292">如果只希望在子项没有子项时删除子项，请使用 <xref:Microsoft.Win32.RegistryKey.DeleteSubKey%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec635-292">If you want to delete a subkey only when it has no child subkeys, use the <xref:Microsoft.Win32.RegistryKey.DeleteSubKey%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-293">此代码示例是为类提供的更大示例的一部分 <xref:Microsoft.Win32.RegistryKey> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-293">This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#4)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#4)]
 [!code-vb[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-294"><paramref name="subkey" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-294"><paramref name="subkey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec635-295">尝试删除根配置单元。</span><span class="sxs-lookup"><span data-stu-id="ec635-295">Deletion of a root hive is attempted.</span></span>  
  
<span data-ttu-id="ec635-296">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec635-296">-or-</span></span> 
 <span data-ttu-id="ec635-297"><paramref name="subkey" /> 未指定有效的注册表子项。</span><span class="sxs-lookup"><span data-stu-id="ec635-297"><paramref name="subkey" /> does not specify a valid registry subkey.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec635-298">发生了 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="ec635-298">An I/O error has occurred.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-299">用户没有删除该项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-299">The user does not have the permissions required to delete the key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-300">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-300">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-301">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-301">The user does not have the necessary registry rights.</span></span></exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
      </Docs>
    </Member>
    <Member MemberName="DeleteSubKeyTree">
      <MemberSignature Language="C#" Value="public void DeleteSubKeyTree (string subkey, bool throwOnMissingSubKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteSubKeyTree(string subkey, bool throwOnMissingSubKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteSubKeyTree (subkey As String, throwOnMissingSubKey As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteSubKeyTree(System::String ^ subkey, bool throwOnMissingSubKey);" />
      <MemberSignature Language="F#" Value="member this.DeleteSubKeyTree : string * bool -&gt; unit" Usage="registryKey.DeleteSubKeyTree (subkey, throwOnMissingSubKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subkey" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="throwOnMissingSubKey" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="subkey"><span data-ttu-id="ec635-302">要删除的子项的名称。</span><span class="sxs-lookup"><span data-stu-id="ec635-302">The name of the subkey to delete.</span></span> <span data-ttu-id="ec635-303">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="ec635-303">This string is not case-sensitive.</span></span></param>
        <param name="throwOnMissingSubKey"><span data-ttu-id="ec635-304">指示在找不到指定子项的情况下是否引发异常。</span><span class="sxs-lookup"><span data-stu-id="ec635-304">Indicates whether an exception should be raised if the specified subkey cannot be found.</span></span> <span data-ttu-id="ec635-305">如果该参数为 <see langword="true" />，并且指定的子项不存在，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="ec635-305">If this argument is <see langword="true" /> and the specified subkey does not exist, an exception is raised.</span></span> <span data-ttu-id="ec635-306">如果该参数为 <see langword="false" />，并且指定的子项不存在，则不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="ec635-306">If this argument is <see langword="false" /> and the specified subkey does not exist, no action is taken.</span></span></param>
        <summary><span data-ttu-id="ec635-307">以递归方式删除指定的子项和任何子级子项，并指定在找不到子项时是否引发异常。</span><span class="sxs-lookup"><span data-stu-id="ec635-307">Deletes the specified subkey and any child subkeys recursively, and specifies whether an exception is raised if the subkey is not found.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec635-308">尝试删除树的根配置单元。</span><span class="sxs-lookup"><span data-stu-id="ec635-308">An attempt was made to delete the root hive of the tree.</span></span>  
  
<span data-ttu-id="ec635-309">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec635-309">-or-</span></span> 
 <span data-ttu-id="ec635-310"><paramref name="subkey" /> 未指定有效的注册表子项，并且 <paramref name="throwOnMissingSubKey" /> 为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-310"><paramref name="subkey" /> does not specify a valid registry subkey, and <paramref name="throwOnMissingSubKey" /> is <see langword="true" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-311"><paramref name="subkey" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-311"><paramref name="subkey" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-312"><see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问已关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-312">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-313">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-313">The user does not have the necessary registry rights.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-314">用户没有删除该项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-314">The user does not have the permissions required to delete the key.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec635-315">从此项中删除指定的值，并在找不到该值时引发异常。</span><span class="sxs-lookup"><span data-stu-id="ec635-315">Deletes the specified value from this key, and throws an exception if the value is not found.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteValue">
      <MemberSignature Language="C#" Value="public void DeleteValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteValue (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.DeleteValue : string -&gt; unit" Usage="registryKey.DeleteValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec635-316">要删除的值的名称。</span><span class="sxs-lookup"><span data-stu-id="ec635-316">The name of the value to delete.</span></span></param>
        <summary><span data-ttu-id="ec635-317">从此项中删除指定值。</span><span class="sxs-lookup"><span data-stu-id="ec635-317">Deletes the specified value from this key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-318">在 Windows 95、Windows 98、Windows 98 Second Edition 和 Windows Millennium Edition 上，为参数指定一个空字符串不 `name` 会删除默认值。</span><span class="sxs-lookup"><span data-stu-id="ec635-318">On Windows 95, Windows 98, Windows 98 Second Edition, and Windows Millennium Edition, specifying an empty string for the `name` parameter does not delete the default value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-319">此代码示例是为类提供的更大示例的一部分 <xref:Microsoft.Win32.RegistryKey> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-319">This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#3](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#3)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#3](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#3)]
 [!code-vb[Microsoft.Win32.RegistryKey2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec635-320"><paramref name="name" /> 不是对值的有效引用。</span><span class="sxs-lookup"><span data-stu-id="ec635-320"><paramref name="name" /> is not a valid reference to a value.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-321">用户没有删除该值所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-321">The user does not have the permissions required to delete the value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-322">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-322">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-323">正在处理的 <see cref="T:Microsoft.Win32.RegistryKey" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="ec635-323">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is read-only.</span></span></exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
      </Docs>
    </Member>
    <Member MemberName="DeleteValue">
      <MemberSignature Language="C#" Value="public void DeleteValue (string name, bool throwOnMissingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteValue(string name, bool throwOnMissingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteValue (name As String, throwOnMissingValue As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteValue(System::String ^ name, bool throwOnMissingValue);" />
      <MemberSignature Language="F#" Value="member this.DeleteValue : string * bool -&gt; unit" Usage="registryKey.DeleteValue (name, throwOnMissingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnMissingValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec635-324">要删除的值的名称。</span><span class="sxs-lookup"><span data-stu-id="ec635-324">The name of the value to delete.</span></span></param>
        <param name="throwOnMissingValue"><span data-ttu-id="ec635-325">指示在找不到指定值的情况下是否引发异常。</span><span class="sxs-lookup"><span data-stu-id="ec635-325">Indicates whether an exception should be raised if the specified value cannot be found.</span></span> <span data-ttu-id="ec635-326">如果该参数为 <see langword="true" />，并且指定的值不存在，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="ec635-326">If this argument is <see langword="true" /> and the specified value does not exist, an exception is raised.</span></span> <span data-ttu-id="ec635-327">如果该参数为 <see langword="false" />，并且指定的值不存在，则不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="ec635-327">If this argument is <see langword="false" /> and the specified value does not exist, no action is taken.</span></span></param>
        <summary><span data-ttu-id="ec635-328">从此项中删除指定的值，并指定在找不到该值时是否引发异常。</span><span class="sxs-lookup"><span data-stu-id="ec635-328">Deletes the specified value from this key, and specifies whether an exception is raised if the value is not found.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-329">如果 `throwOnMissingValue` 为 `false` ，则无法判断删除是否成功，无需再尝试访问刚删除的值。</span><span class="sxs-lookup"><span data-stu-id="ec635-329">If `throwOnMissingValue` is `false`, there is no way to tell if the deletion was successful, without subsequently trying to access the value just deleted.</span></span> <span data-ttu-id="ec635-330">因此，以这种方式从注册表中删除值时，请务必小心。</span><span class="sxs-lookup"><span data-stu-id="ec635-330">Therefore, use caution when deleting values from the registry in this manner.</span></span>  
  
 <span data-ttu-id="ec635-331">在 Windows 95、Windows 98、Windows 98 Second Edition 和 Windows Millennium Edition 上，为参数指定一个空字符串不 `name` 会删除默认值。</span><span class="sxs-lookup"><span data-stu-id="ec635-331">On Windows 95, Windows 98, Windows 98 Second Edition, and Windows Millennium Edition, specifying an empty string for the `name` parameter does not delete the default value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec635-332"><paramref name="name" /> 不是对值的有效引用，并且 <paramref name="throwOnMissingValue" /> 为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-332"><paramref name="name" /> is not a valid reference to a value and <paramref name="throwOnMissingValue" /> is <see langword="true" />.</span></span>  
  
<span data-ttu-id="ec635-333">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec635-333">-or-</span></span> 
 <span data-ttu-id="ec635-334"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-334"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-335">用户没有删除该值所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-335">The user does not have the permissions required to delete the value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-336">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-336">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-337">正在处理的 <see cref="T:Microsoft.Win32.RegistryKey" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="ec635-337">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is read-only.</span></span></exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="registryKey.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec635-338">释放 <see cref="T:Microsoft.Win32.RegistryKey" /> 类的当前实例所使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="ec635-338">Releases all resources used by the current instance of the <see cref="T:Microsoft.Win32.RegistryKey" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-339">在完成使用 `Dispose` 后，应调用 <xref:Microsoft.Win32.RegistryKey>。</span><span class="sxs-lookup"><span data-stu-id="ec635-339">Call `Dispose` when you are finished using the <xref:Microsoft.Win32.RegistryKey>.</span></span> <span data-ttu-id="ec635-340">`Dispose` 方法使 <xref:Microsoft.Win32.RegistryKey> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="ec635-340">The `Dispose` method leaves the <xref:Microsoft.Win32.RegistryKey> in an unusable state.</span></span> <span data-ttu-id="ec635-341">调用后 `Dispose` ，必须释放对的所有引用， <xref:Microsoft.Win32.RegistryKey> 以便垃圾回收器能够回收占用的内存 <xref:Microsoft.Win32.RegistryKey> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-341">After calling `Dispose`, you must release all references to the <xref:Microsoft.Win32.RegistryKey> so the garbage collector can reclaim the memory that the <xref:Microsoft.Win32.RegistryKey> was occupying.</span></span>  
  
 <span data-ttu-id="ec635-342">有关详细信息，请参阅 [清理非托管资源](/dotnet/standard/garbage-collection/unmanaged) 和 [实现 Dispose 方法](/dotnet/standard/garbage-collection/implementing-dispose)。</span><span class="sxs-lookup"><span data-stu-id="ec635-342">For more information, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec635-343">每次释放对 `Dispose` 的最后一个引用前，均应调用 <xref:Microsoft.Win32.RegistryKey>。</span><span class="sxs-lookup"><span data-stu-id="ec635-343">Always call `Dispose` before you release your last reference to the <xref:Microsoft.Win32.RegistryKey>.</span></span> <span data-ttu-id="ec635-344">否则，在垃圾回收器调用 <xref:Microsoft.Win32.RegistryKey> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="ec635-344">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:Microsoft.Win32.RegistryKey> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~RegistryKey ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!RegistryKey ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="registryKey.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec635-345">关闭该项，如果内容已修改，则将其刷新到磁盘。</span><span class="sxs-lookup"><span data-stu-id="ec635-345">Closes the key and flushes it to disk if the contents have been modified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="registryKey.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec635-346">将指定的打开注册表项的全部特性写到注册表中。</span><span class="sxs-lookup"><span data-stu-id="ec635-346">Writes all the attributes of the specified open registry key into the registry.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-347">不需要调用 `Flush` 来写出对键的更改。</span><span class="sxs-lookup"><span data-stu-id="ec635-347">It is not necessary to call `Flush` to write out changes to a key.</span></span> <span data-ttu-id="ec635-348">当注册表使用其惰性惰性时，注册表更改会刷新到磁盘。</span><span class="sxs-lookup"><span data-stu-id="ec635-348">Registry changes are flushed to disk when the registry uses its lazy flusher.</span></span> <span data-ttu-id="ec635-349">在系统指定的时间间隔后，延迟刷新会自动进行。</span><span class="sxs-lookup"><span data-stu-id="ec635-349">Lazy flushing occurs automatically and regularly after a system-specified time interval.</span></span> <span data-ttu-id="ec635-350">系统关闭时，注册表更改也会刷新到磁盘。</span><span class="sxs-lookup"><span data-stu-id="ec635-350">Registry changes are also flushed to disk at system shutdown.</span></span>  
  
 <span data-ttu-id="ec635-351">与不同的是 <xref:Microsoft.Win32.RegistryKey.Close%2A> ， `Flush` 仅当所有数据都已写入注册表时，函数才返回。</span><span class="sxs-lookup"><span data-stu-id="ec635-351">Unlike <xref:Microsoft.Win32.RegistryKey.Close%2A>, the `Flush` function returns only when all the data has been written to the registry.</span></span>  
  
 <span data-ttu-id="ec635-352">`Flush`函数还可能会写出或所有其他键的部分。</span><span class="sxs-lookup"><span data-stu-id="ec635-352">The `Flush` function might also write out parts of or all of the other keys.</span></span> <span data-ttu-id="ec635-353">过度调用此函数可能对应用程序的性能产生负面影响。</span><span class="sxs-lookup"><span data-stu-id="ec635-353">Calling this function excessively can have a negative effect on an application's performance.</span></span>  
  
 <span data-ttu-id="ec635-354">仅当应用程序必须为绝对时才应调用 `Flush` ，以便将注册表更改记录到磁盘中。</span><span class="sxs-lookup"><span data-stu-id="ec635-354">An application should only call `Flush` if it must be absolute certain that registry changes are recorded to disk.</span></span> <span data-ttu-id="ec635-355">通常情况下， `Flush` 很少需要使用。</span><span class="sxs-lookup"><span data-stu-id="ec635-355">In general, `Flush` rarely, if ever, need be used.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.Win32.RegistryKey.Close" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FromHandle">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec635-356">根据指定的句柄创建注册表项。</span><span class="sxs-lookup"><span data-stu-id="ec635-356">Creates a registry key from a specified handle.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.RegistryKey FromHandle (Microsoft.Win32.SafeHandles.SafeRegistryHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.RegistryKey FromHandle(class Microsoft.Win32.SafeHandles.SafeRegistryHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (handle As SafeRegistryHandle) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Win32::RegistryKey ^ FromHandle(Microsoft::Win32::SafeHandles::SafeRegistryHandle ^ handle);" />
      <MemberSignature Language="F#" Value="static member FromHandle : Microsoft.Win32.SafeHandles.SafeRegistryHandle -&gt; Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.RegistryKey.FromHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="Microsoft.Win32.SafeHandles.SafeRegistryHandle" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="ec635-357">注册表项的句柄。</span><span class="sxs-lookup"><span data-stu-id="ec635-357">The handle to the registry key.</span></span></param>
        <summary><span data-ttu-id="ec635-358">根据指定的句柄创建注册表项。</span><span class="sxs-lookup"><span data-stu-id="ec635-358">Creates a registry key from a specified handle.</span></span></summary>
        <returns><span data-ttu-id="ec635-359">注册表项。</span><span class="sxs-lookup"><span data-stu-id="ec635-359">A registry key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-360"><paramref name="handle" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-360"><paramref name="handle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-361">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-361">The user does not have the necessary registry rights.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-362">用户没有执行此操作所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-362">The user does not have the permissions required to perform this action.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.RegistryKey FromHandle (Microsoft.Win32.SafeHandles.SafeRegistryHandle handle, Microsoft.Win32.RegistryView view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.RegistryKey FromHandle(class Microsoft.Win32.SafeHandles.SafeRegistryHandle handle, valuetype Microsoft.Win32.RegistryView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (handle As SafeRegistryHandle, view As RegistryView) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Win32::RegistryKey ^ FromHandle(Microsoft::Win32::SafeHandles::SafeRegistryHandle ^ handle, Microsoft::Win32::RegistryView view);" />
      <MemberSignature Language="F#" Value="static member FromHandle : Microsoft.Win32.SafeHandles.SafeRegistryHandle * Microsoft.Win32.RegistryView -&gt; Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.RegistryKey.FromHandle (handle, view)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="Microsoft.Win32.SafeHandles.SafeRegistryHandle" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="view" Type="Microsoft.Win32.RegistryView" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="ec635-363">注册表项的句柄。</span><span class="sxs-lookup"><span data-stu-id="ec635-363">The handle to the registry key.</span></span></param>
        <param name="view"><span data-ttu-id="ec635-364">要使用的注册表视图。</span><span class="sxs-lookup"><span data-stu-id="ec635-364">The registry view to use.</span></span></param>
        <summary><span data-ttu-id="ec635-365">利用指定的句柄和注册表视图设置创建注册表项。</span><span class="sxs-lookup"><span data-stu-id="ec635-365">Creates a registry key from a specified handle and registry view setting.</span></span></summary>
        <returns><span data-ttu-id="ec635-366">注册表项。</span><span class="sxs-lookup"><span data-stu-id="ec635-366">A registry key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-367">`view`此方法的参数在后续操作（如打开子项）中使用。</span><span class="sxs-lookup"><span data-stu-id="ec635-367">The `view` parameter for this method is used in subsequent operations, such as opening subkeys.</span></span>  
  
 <span data-ttu-id="ec635-368">如果 `view` 为 <xref:Microsoft.Win32.RegistryView.Registry64> 但计算机运行的是32位操作系统，则返回的密钥将使用 <xref:Microsoft.Win32.RegistryView.Registry32> 视图。</span><span class="sxs-lookup"><span data-stu-id="ec635-368">If `view` is <xref:Microsoft.Win32.RegistryView.Registry64> but the machine is running a 32-bit operating system, the returned key will use the <xref:Microsoft.Win32.RegistryView.Registry32> view.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec635-369"><paramref name="view" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="ec635-369"><paramref name="view" /> is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-370"><paramref name="handle" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-370"><paramref name="handle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-371">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-371">The user does not have the necessary registry rights.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-372">用户没有执行此操作所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-372">The user does not have the permissions required to perform this action.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec635-373">返回当前注册表项的访问控制安全性。</span><span class="sxs-lookup"><span data-stu-id="ec635-373">Returns the access control security for the current registry key.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistrySecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.RegistrySecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As RegistrySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::RegistrySecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.RegistrySecurity" Usage="registryKey.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistrySecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec635-374">返回当前注册表项的访问控制安全性。</span><span class="sxs-lookup"><span data-stu-id="ec635-374">Returns the access control security for the current registry key.</span></span></summary>
        <returns><span data-ttu-id="ec635-375">一个对象，该对象描述针对由当前 <see cref="T:Microsoft.Win32.RegistryKey" /> 表示的注册表项的访问控制权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-375">An object that describes the access control permissions on the registry key represented by the current <see cref="T:Microsoft.Win32.RegistryKey" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-376">此方法重载等效于调用 <xref:Microsoft.Win32.RegistryKey.GetAccessControl%28System.Security.AccessControl.AccessControlSections%29> 具有以下标志的按位组合的方法重载： <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> 、 <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> 和 <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-376">This method overload is equivalent to calling the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%28System.Security.AccessControl.AccessControlSections%29> method overload with the bitwise combination of the following flags: <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>, <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>, and <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ec635-377">您可以使用该重载搜索其他权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-377">You can use that overload to search for other permissions.</span></span>  
  
 <span data-ttu-id="ec635-378">用户必须有 <xref:System.Security.AccessControl.RegistryRights.ReadPermissions?displayProperty=nameWithType> 权调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec635-378">The user must have <xref:System.Security.AccessControl.RegistryRights.ReadPermissions?displayProperty=nameWithType> rights to call this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-379">用户没有必要的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-379">The user does not have the necessary permissions.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-380">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-380">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec635-381">当前项已被删除。</span><span class="sxs-lookup"><span data-stu-id="ec635-381">The current key has been deleted.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistrySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.RegistrySecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As RegistrySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::RegistrySecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.RegistrySecurity" Usage="registryKey.GetAccessControl includeSections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistrySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="includeSections"><span data-ttu-id="ec635-382">枚举值的按位组合，它指定要获取的安全信息类型。</span><span class="sxs-lookup"><span data-stu-id="ec635-382">A bitwise combination of enumeration values that specifies the type of security information to get.</span></span></param>
        <summary><span data-ttu-id="ec635-383">返回当前注册表项的访问控制安全性的指定部分。</span><span class="sxs-lookup"><span data-stu-id="ec635-383">Returns the specified sections of the access control security for the current registry key.</span></span></summary>
        <returns><span data-ttu-id="ec635-384">一个对象，该对象描述针对由当前 <see cref="T:Microsoft.Win32.RegistryKey" /> 表示的注册表项的访问控制权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-384">An object that describes the access control permissions on the registry key represented by the current <see cref="T:Microsoft.Win32.RegistryKey" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-385">若要请求当前授予给用户的访问权限，请指定以下标志的按位组合： <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> 、 <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> 和 <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-385">To request the access permissions currently granted to users, specify the bitwise combination of the following flags: <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>, <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>, and <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ec635-386">或者，您可以使用 <xref:Microsoft.Win32.RegistryKey.GetAccessControl> 方法重载，它指定确切的值组合。</span><span class="sxs-lookup"><span data-stu-id="ec635-386">Alternatively, you can use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl> method overload, which specifies exactly that combination of values.</span></span>  
  
 <span data-ttu-id="ec635-387">用户必须有 <xref:System.Security.AccessControl.RegistryRights.ReadPermissions?displayProperty=nameWithType> 权调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec635-387">The user must have <xref:System.Security.AccessControl.RegistryRights.ReadPermissions?displayProperty=nameWithType> rights to call this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-388">用户没有必要的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-388">The user does not have the necessary permissions.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-389">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-389">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec635-390">当前项已被删除。</span><span class="sxs-lookup"><span data-stu-id="ec635-390">The current key has been deleted.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubKeyNames">
      <MemberSignature Language="C#" Value="public string[] GetSubKeyNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetSubKeyNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubKeyNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetSubKeyNames();" />
      <MemberSignature Language="F#" Value="member this.GetSubKeyNames : unit -&gt; string[]" Usage="registryKey.GetSubKeyNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec635-391">检索包含所有子项名称的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="ec635-391">Retrieves an array of strings that contains all the subkey names.</span></span></summary>
        <returns><span data-ttu-id="ec635-392">包含当前项的子项名称的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="ec635-392">An array of strings that contains the names of the subkeys for the current key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-393">此方法不会以递归方式查找名称。</span><span class="sxs-lookup"><span data-stu-id="ec635-393">This method does not recursively find names.</span></span> <span data-ttu-id="ec635-394">它将返回它所调用的基本级别上的名称。</span><span class="sxs-lookup"><span data-stu-id="ec635-394">It returns the names on the base level from which it was called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-395">此代码示例是为类提供的更大示例的一部分 <xref:Microsoft.Win32.RegistryKey> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-395">This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#2)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#2)]
 [!code-vb[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-396">用户没有读取该项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-396">The user does not have the permissions required to read from the key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-397">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-397">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-398">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-398">The user does not have the necessary registry rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec635-399">发生系统错误，例如，当前项已被删除。</span><span class="sxs-lookup"><span data-stu-id="ec635-399">A system error occurred, for example the current key has been deleted.</span></span></exception>
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec635-400">检索与指定名称关联的值。</span><span class="sxs-lookup"><span data-stu-id="ec635-400">Retrieves the value associated with the specified name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (string name);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetValue : string -&gt; obj" Usage="registryKey.GetValue name" />
      <MemberSignature Language="C#" Value="public object? GetValue (string? name);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec635-401">要检索的值的名称。</span><span class="sxs-lookup"><span data-stu-id="ec635-401">The name of the value to retrieve.</span></span> <span data-ttu-id="ec635-402">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="ec635-402">This string is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="ec635-403">检索与指定名称关联的值。</span><span class="sxs-lookup"><span data-stu-id="ec635-403">Retrieves the value associated with the specified name.</span></span> <span data-ttu-id="ec635-404">如果注册表中不存在名称/值对，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-404">Returns <see langword="null" /> if the name/value pair does not exist in the registry.</span></span></summary>
        <returns><span data-ttu-id="ec635-405">与 <paramref name="name" /> 关联的值；如果未找到 <paramref name="name" />，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-405">The value associated with <paramref name="name" />, or <see langword="null" /> if <paramref name="name" /> is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ec635-406">注册表项可以有一个不与任何名称关联的值。</span><span class="sxs-lookup"><span data-stu-id="ec635-406">A registry key can have one value that is not associated with any name.</span></span> <span data-ttu-id="ec635-407">在注册表编辑器中显示此未命名值时，将显示 " (默认) " 字符串而不是名称。</span><span class="sxs-lookup"><span data-stu-id="ec635-407">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="ec635-408">若要检索此未命名值，请 `null` 为指定或空字符串 ( "" ) `name` 。</span><span class="sxs-lookup"><span data-stu-id="ec635-408">To retrieve this unnamed value, specify either `null` or the empty string ("") for `name`.</span></span>  
  
 <span data-ttu-id="ec635-409">当 <xref:Microsoft.Win32.RegistryKey.GetValue%2A> 方法检索 () 的可扩展字符串值时 <xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType> ，它将使用本地环境中的数据展开环境字符串。</span><span class="sxs-lookup"><span data-stu-id="ec635-409">When the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> method retrieves expandable string values (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), it expands environment strings using data from the local environment.</span></span> <span data-ttu-id="ec635-410">若要从远程计算机上的注册表中检索可扩充字符串值，请使用 <xref:Microsoft.Win32.RegistryKey.GetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueOptions%29> 方法重载来指定你不希望扩展环境字符串。</span><span class="sxs-lookup"><span data-stu-id="ec635-410">To retrieve expandable string values from the registry on a remote computer, use the <xref:Microsoft.Win32.RegistryKey.GetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueOptions%29> method overload to specify that you do not want environment strings expanded.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec635-411">如果包含对环境变量的可扩充引用的值存储为字符串 (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>) ，而不是作为可扩充字符串 (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>) ， <xref:Microsoft.Win32.RegistryKey.GetValue%2A> 则不会将其展开。</span><span class="sxs-lookup"><span data-stu-id="ec635-411">If a value containing expandable references to environment variables has been stored as a string (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>), rather than as an expandable string (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), <xref:Microsoft.Win32.RegistryKey.GetValue%2A> does not expand it.</span></span> <span data-ttu-id="ec635-412">您可以通过调用方法来扩展此类字符串 <xref:System.Environment.ExpandEnvironmentVariables%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-412">You can expand such a string after it has been retrieved by calling the <xref:System.Environment.ExpandEnvironmentVariables%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec635-413">从键检索数据的建议方法 <xref:Microsoft.Win32.Registry.PerformanceData> 是使用类，而不是 <xref:System.Diagnostics.PerformanceCounter> <xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec635-413">The recommended way to retrieve data from the <xref:Microsoft.Win32.Registry.PerformanceData> key is to use the <xref:System.Diagnostics.PerformanceCounter> class rather than the <xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType> method.</span></span>  
>   
>  <span data-ttu-id="ec635-414"><xref:Microsoft.Win32.RegistryKey.GetValue%2A> 不支持读取 REG_NONE 或 REG_LINK 类型的值。</span><span class="sxs-lookup"><span data-stu-id="ec635-414"><xref:Microsoft.Win32.RegistryKey.GetValue%2A> does not support reading values of type REG_NONE or REG_LINK.</span></span>  <span data-ttu-id="ec635-415">在这两种情况下，将返回默认值 (`null`) ，而不是实际值。</span><span class="sxs-lookup"><span data-stu-id="ec635-415">In both cases, the default value (`null`) is returned instead of the actual value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-416">下面的代码示例创建一个测试键，并向该键添加不同数据类型的值。</span><span class="sxs-lookup"><span data-stu-id="ec635-416">The following code example creates a test key and adds values of different data types to the key.</span></span> <span data-ttu-id="ec635-417">然后，该示例读取名称/值对，并使用 <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> 方法检索相应的注册表数据类型，将其显示在控制台中。</span><span class="sxs-lookup"><span data-stu-id="ec635-417">The example then reads the name/value pairs and displays them to the console, using the <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> method to retrieve the corresponding registry data types.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-418">该用户没有读取注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-418">The user does not have the permissions required to read from the registry key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-419">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-419">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec635-420">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已标记为删除。</span><span class="sxs-lookup"><span data-stu-id="ec635-420">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-421">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-421">The user does not have the necessary registry rights.</span></span></exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="Overload:Microsoft.Win32.RegistryKey.SetValue" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (string name, object defaultValue);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(string name, object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (name As String, defaultValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ name, System::Object ^ defaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetValue : string * obj -&gt; obj" Usage="registryKey.GetValue (name, defaultValue)" />
      <MemberSignature Language="C#" Value="public object? GetValue (string? name, object? defaultValue);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec635-422">要检索的值的名称。</span><span class="sxs-lookup"><span data-stu-id="ec635-422">The name of the value to retrieve.</span></span> <span data-ttu-id="ec635-423">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="ec635-423">This string is not case-sensitive.</span></span></param>
        <param name="defaultValue"><span data-ttu-id="ec635-424">当 <paramref name="name" /> 不存在时返回的值。</span><span class="sxs-lookup"><span data-stu-id="ec635-424">The value to return if <paramref name="name" /> does not exist.</span></span></param>
        <summary><span data-ttu-id="ec635-425">检索与指定名称关联的值。</span><span class="sxs-lookup"><span data-stu-id="ec635-425">Retrieves the value associated with the specified name.</span></span> <span data-ttu-id="ec635-426">如果未找到名称，则返回你提供的默认值。</span><span class="sxs-lookup"><span data-stu-id="ec635-426">If the name is not found, returns the default value that you provide.</span></span></summary>
        <returns><span data-ttu-id="ec635-427">与 <paramref name="name" /> 关联的值，不展开嵌入的任何环境变量；如果未找到 <paramref name="defaultValue" />，则为 <paramref name="name" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-427">The value associated with <paramref name="name" />, with any embedded environment variables left unexpanded, or <paramref name="defaultValue" /> if <paramref name="name" /> is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-428">使用此重载 <xref:Microsoft.Win32.RegistryKey.GetValue%2A> 来处理名称尚不存在的情况，例如，首次运行应用程序时。</span><span class="sxs-lookup"><span data-stu-id="ec635-428">Use this overload of <xref:Microsoft.Win32.RegistryKey.GetValue%2A> to handle the case where a name does not exist yet - for example, the first time your application is run.</span></span> <span data-ttu-id="ec635-429">每次调用此重载时，如果不存在，请使用 `defaultValue` 参数来指定要返回的值 `name` 。</span><span class="sxs-lookup"><span data-stu-id="ec635-429">Whenever you call this overload, use the `defaultValue` parameter to specify the value to return if `name` does not exist.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec635-430">注册表项可以有一个不与任何名称关联的值。</span><span class="sxs-lookup"><span data-stu-id="ec635-430">A registry key can have one value that is not associated with any name.</span></span> <span data-ttu-id="ec635-431">在注册表编辑器中显示此未命名值时，将显示 " (默认) " 字符串而不是名称。</span><span class="sxs-lookup"><span data-stu-id="ec635-431">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="ec635-432">若要检索此未命名值，请 `null` 为指定或空字符串 ( "" ) `name` 。</span><span class="sxs-lookup"><span data-stu-id="ec635-432">To retrieve this unnamed value, specify either `null` or the empty string ("") for `name`.</span></span>  
  
 <span data-ttu-id="ec635-433">当 <xref:Microsoft.Win32.RegistryKey.GetValue%2A> 方法检索 () 的可扩展字符串值时 <xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType> ，它将使用本地环境中的数据展开环境字符串。</span><span class="sxs-lookup"><span data-stu-id="ec635-433">When the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> method retrieves expandable string values (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), it expands environment strings using data from the local environment.</span></span> <span data-ttu-id="ec635-434">若要从远程计算机上的注册表中检索可扩充字符串值，请使用 <xref:Microsoft.Win32.RegistryKey.GetValue%2A> 重载来指定你不希望扩展环境字符串。</span><span class="sxs-lookup"><span data-stu-id="ec635-434">To retrieve expandable string values from the registry on a remote computer, use the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> overload to specify that you do not want environment strings expanded.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec635-435">如果包含对环境变量的可扩充引用的值存储为字符串 (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>) ，而不是作为可扩充字符串 (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>) ，则该 <xref:Microsoft.Win32.RegistryKey.GetValue%2A> 方法不会将其展开。</span><span class="sxs-lookup"><span data-stu-id="ec635-435">If a value containing expandable references to environment variables has been stored as a string (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>), rather than as an expandable string (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> method does not expand it.</span></span> <span data-ttu-id="ec635-436">您可以通过调用方法来扩展此类字符串 <xref:System.Environment.ExpandEnvironmentVariables%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-436">You can expand such a string after it has been retrieved by calling the <xref:System.Environment.ExpandEnvironmentVariables%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec635-437">从键检索数据的建议方法 <xref:Microsoft.Win32.Registry.PerformanceData> 是使用类，而不是 <xref:System.Diagnostics.PerformanceCounter> <xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec635-437">The recommended way to retrieve data from the <xref:Microsoft.Win32.Registry.PerformanceData> key is to use the <xref:System.Diagnostics.PerformanceCounter> class rather than the <xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType> method.</span></span>  
>   
>  <span data-ttu-id="ec635-438"><xref:Microsoft.Win32.RegistryKey.GetValue%2A> 不支持读取 REG_NONE 或 REG_LINK 类型的值。</span><span class="sxs-lookup"><span data-stu-id="ec635-438"><xref:Microsoft.Win32.RegistryKey.GetValue%2A> does not support reading values of type REG_NONE or REG_LINK.</span></span>  <span data-ttu-id="ec635-439">在这两种情况下，将返回默认值 (`null`) ，而不是实际值。</span><span class="sxs-lookup"><span data-stu-id="ec635-439">In both cases, the default value (`null`) is returned instead of the actual value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-440">下面的代码示例创建一个具有值的测试键并检索该值。</span><span class="sxs-lookup"><span data-stu-id="ec635-440">The following code example creates a test key with a value and retrieves that value.</span></span> <span data-ttu-id="ec635-441">然后，该示例尝试从该键检索不存在的值;在这种情况下，该 <xref:Microsoft.Win32.RegistryKey.GetValue%2A> 方法将返回指定的默认值。</span><span class="sxs-lookup"><span data-stu-id="ec635-441">The example then attempts to retrieve a nonexistent value from the key; in this case the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> method returns the specified default value.</span></span>  
  
 [!code-cpp[Classic RegistryKey.GetValue Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic RegistryKey.GetValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RegistryKey.GetValue Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic RegistryKey.GetValue Example/CS/source.cs#1)]
 [!code-vb[Classic RegistryKey.GetValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic RegistryKey.GetValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-442">该用户没有读取注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-442">The user does not have the permissions required to read from the registry key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-443">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-443">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec635-444">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已标记为删除。</span><span class="sxs-lookup"><span data-stu-id="ec635-444">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-445">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-445">The user does not have the necessary registry rights.</span></span></exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="Overload:Microsoft.Win32.RegistryKey.SetValue" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (string name, object defaultValue, Microsoft.Win32.RegistryValueOptions options);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(string name, object defaultValue, valuetype Microsoft.Win32.RegistryValueOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (name As String, defaultValue As Object, options As RegistryValueOptions) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ name, System::Object ^ defaultValue, Microsoft::Win32::RegistryValueOptions options);" />
      <MemberSignature Language="F#" Value="member this.GetValue : string * obj * Microsoft.Win32.RegistryValueOptions -&gt; obj" Usage="registryKey.GetValue (name, defaultValue, options)" />
      <MemberSignature Language="C#" Value="public object? GetValue (string? name, object? defaultValue, Microsoft.Win32.RegistryValueOptions options);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defaultValue" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="Microsoft.Win32.RegistryValueOptions" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec635-446">要检索的值的名称。</span><span class="sxs-lookup"><span data-stu-id="ec635-446">The name of the value to retrieve.</span></span> <span data-ttu-id="ec635-447">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="ec635-447">This string is not case-sensitive.</span></span></param>
        <param name="defaultValue"><span data-ttu-id="ec635-448">当 <paramref name="name" /> 不存在时返回的值。</span><span class="sxs-lookup"><span data-stu-id="ec635-448">The value to return if <paramref name="name" /> does not exist.</span></span></param>
        <param name="options"><span data-ttu-id="ec635-449">枚举值之一，它指定对所检索值的可选处理方式。</span><span class="sxs-lookup"><span data-stu-id="ec635-449">One of the enumeration values that specifies optional processing of the retrieved value.</span></span></param>
        <summary><span data-ttu-id="ec635-450">检索与指定的名称和检索选项关联的值。</span><span class="sxs-lookup"><span data-stu-id="ec635-450">Retrieves the value associated with the specified name and retrieval options.</span></span> <span data-ttu-id="ec635-451">如果未找到名称，则返回你提供的默认值。</span><span class="sxs-lookup"><span data-stu-id="ec635-451">If the name is not found, returns the default value that you provide.</span></span></summary>
        <returns><span data-ttu-id="ec635-452">与 <paramref name="name" /> 关联的值，按指定的 <paramref name="options" /> 对其进行处理；如果未找到 <paramref name="defaultValue" />，则为 <paramref name="name" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-452">The value associated with <paramref name="name" />, processed according to the specified <paramref name="options" />, or <paramref name="defaultValue" /> if <paramref name="name" /> is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-453">使用此重载可指定对检索到的值进行特殊处理。</span><span class="sxs-lookup"><span data-stu-id="ec635-453">Use this overload to specify special processing of the retrieved value.</span></span> <span data-ttu-id="ec635-454">例如，可以指定 <xref:Microsoft.Win32.RegistryValueOptions.DoNotExpandEnvironmentNames?displayProperty=nameWithType> 在检索类型的注册表值时 <xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType> 检索字符串，而无需扩展嵌入的环境变量。</span><span class="sxs-lookup"><span data-stu-id="ec635-454">For example, you can specify <xref:Microsoft.Win32.RegistryValueOptions.DoNotExpandEnvironmentNames?displayProperty=nameWithType> when retrieving a registry value of type <xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType> to retrieve the string without expanding embedded environment variables.</span></span>  
  
 <span data-ttu-id="ec635-455">如果不存在，请使用 `defaultValue` 参数来指定要返回的值 `name` 。</span><span class="sxs-lookup"><span data-stu-id="ec635-455">Use the `defaultValue` parameter to specify the value to return if `name` does not exist.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec635-456">注册表项可以有一个不与任何名称关联的值。</span><span class="sxs-lookup"><span data-stu-id="ec635-456">A registry key can have one value that is not associated with any name.</span></span> <span data-ttu-id="ec635-457">在注册表编辑器中显示此未命名值时，将显示 " (默认) " 字符串而不是名称。</span><span class="sxs-lookup"><span data-stu-id="ec635-457">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="ec635-458">若要检索此未命名值，请 `null` 为指定或空字符串 ( "" ) `name` 。</span><span class="sxs-lookup"><span data-stu-id="ec635-458">To retrieve this unnamed value, specify either `null` or the empty string ("") for `name`.</span></span>  
>   
>  <span data-ttu-id="ec635-459"><xref:Microsoft.Win32.RegistryKey.GetValue%2A> 不支持读取 REG_NONE 或 REG_LINK 类型的值。</span><span class="sxs-lookup"><span data-stu-id="ec635-459"><xref:Microsoft.Win32.RegistryKey.GetValue%2A> does not support reading values of type REG_NONE or REG_LINK.</span></span>  <span data-ttu-id="ec635-460">在这两种情况下，将返回默认值 (`null`) ，而不是实际值。</span><span class="sxs-lookup"><span data-stu-id="ec635-460">In both cases, the default value (`null`) is returned instead of the actual value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-461">下面的代码示例创建一个测试键，添加一个具有嵌入的环境变量的值，并在展开和未展开的窗体中检索值。</span><span class="sxs-lookup"><span data-stu-id="ec635-461">The following code sample creates a test key, adds a value with an embedded environment variable, and retrieves the value in both expanded and unexpanded forms.</span></span>  
  
 [!code-cpp[RegistryValueOptions#1](~/samples/snippets/cpp/VS_Snippets_CLR/RegistryValueOptions/CPP/RegistryValueOptions.cpp#1)]
 [!code-csharp[RegistryValueOptions#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistryValueOptions/CS/source.cs#1)]
 [!code-vb[RegistryValueOptions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistryValueOptions/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-462">该用户没有读取注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-462">The user does not have the permissions required to read from the registry key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-463">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-463">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec635-464">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已标记为删除。</span><span class="sxs-lookup"><span data-stu-id="ec635-464">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec635-465"><paramref name="options" /> 不是有效的 <see cref="T:Microsoft.Win32.RegistryValueOptions" /> 值；例如，无效值将强制转换为 <see cref="T:Microsoft.Win32.RegistryValueOptions" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-465"><paramref name="options" /> is not a valid <see cref="T:Microsoft.Win32.RegistryValueOptions" /> value; for example, an invalid value is cast to <see cref="T:Microsoft.Win32.RegistryValueOptions" />.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-466">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-466">The user does not have the necessary registry rights.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.RegistryValueOptions" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="Overload:Microsoft.Win32.RegistryKey.SetValue" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="GetValueKind">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryValueKind GetValueKind (string name);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Win32.RegistryValueKind GetValueKind(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetValueKind(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueKind (name As String) As RegistryValueKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryValueKind GetValueKind(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetValueKind : string -&gt; Microsoft.Win32.RegistryValueKind" Usage="registryKey.GetValueKind name" />
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryValueKind GetValueKind (string? name);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryValueKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec635-467">要检索其注册表数据类型的值的名称。</span><span class="sxs-lookup"><span data-stu-id="ec635-467">The name of the value whose registry data type is to be retrieved.</span></span> <span data-ttu-id="ec635-468">此字符串不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="ec635-468">This string is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="ec635-469">检索与指定名称关联的值的注册表数据类型。</span><span class="sxs-lookup"><span data-stu-id="ec635-469">Retrieves the registry data type of the value associated with the specified name.</span></span></summary>
        <returns><span data-ttu-id="ec635-470">与 <paramref name="name" /> 关联的值的注册表数据类型。</span><span class="sxs-lookup"><span data-stu-id="ec635-470">The registry data type of the value associated with <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ec635-471">注册表项可以有一个不与任何名称关联的值。</span><span class="sxs-lookup"><span data-stu-id="ec635-471">A registry key can have one value that is not associated with any name.</span></span> <span data-ttu-id="ec635-472">在注册表编辑器中显示此未命名值时，将显示 " (默认) " 字符串而不是名称。</span><span class="sxs-lookup"><span data-stu-id="ec635-472">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="ec635-473">若要检索此未命名值的注册表数据类型，请 `null` 为指定或空字符串 ( "" ) `name` 。</span><span class="sxs-lookup"><span data-stu-id="ec635-473">To retrieve the registry data type of this unnamed value, specify either `null` or the empty string ("") for `name`.</span></span>  
  
 <span data-ttu-id="ec635-474">有关支持的注册表数据类型的说明，请参阅 <xref:Microsoft.Win32.RegistryValueKind> 枚举。</span><span class="sxs-lookup"><span data-stu-id="ec635-474">For a description of supported registry data types, please see the <xref:Microsoft.Win32.RegistryValueKind> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-475">下面的代码示例创建一个测试键，并向该键添加不同数据类型的值。</span><span class="sxs-lookup"><span data-stu-id="ec635-475">The following code example creates a test key and adds values of different data types to the key.</span></span> <span data-ttu-id="ec635-476">然后，该示例读取名称/值对，并使用 <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> 方法检索相应的注册表数据类型，将其显示在控制台中。</span><span class="sxs-lookup"><span data-stu-id="ec635-476">The example then reads the name/value pairs and displays them to the console, using the <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> method to retrieve the corresponding registry data types.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-477">该用户没有读取注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-477">The user does not have the permissions required to read from the registry key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-478">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-478">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec635-479">包含指定值的子项不存在。</span><span class="sxs-lookup"><span data-stu-id="ec635-479">The subkey that contains the specified value does not exist.</span></span>  
  
<span data-ttu-id="ec635-480">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec635-480">-or-</span></span> 
<span data-ttu-id="ec635-481">由 <paramref name="name" /> 指定的名称/值对不存在。</span><span class="sxs-lookup"><span data-stu-id="ec635-481">The name/value pair specified by <paramref name="name" /> does not exist.</span></span>  
  
<span data-ttu-id="ec635-482">在 Windows 95、Windows 98 或 Windows Millennium Edition 中不引发此异常。</span><span class="sxs-lookup"><span data-stu-id="ec635-482">This exception is not thrown on Windows 95, Windows 98, or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-483">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-483">The user does not have the necessary registry rights.</span></span></exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueNames" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)" />
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
      </Docs>
    </Member>
    <Member MemberName="GetValueNames">
      <MemberSignature Language="C#" Value="public string[] GetValueNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetValueNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.GetValueNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetValueNames();" />
      <MemberSignature Language="F#" Value="member this.GetValueNames : unit -&gt; string[]" Usage="registryKey.GetValueNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec635-484">检索包含与此项关联的所有值名称的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="ec635-484">Retrieves an array of strings that contains all the value names associated with this key.</span></span></summary>
        <returns><span data-ttu-id="ec635-485">包含当前项的值名称的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="ec635-485">An array of strings that contains the value names for the current key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-486">如果未找到键的值名称，则返回空数组。</span><span class="sxs-lookup"><span data-stu-id="ec635-486">If no value names for the key are found, an empty array is returned.</span></span>  
  
 <span data-ttu-id="ec635-487">注册表项可以具有默认值（即名称/值对，其中名称为空字符串 ( "" ) 。</span><span class="sxs-lookup"><span data-stu-id="ec635-487">A registry key can have a default value - that is, a name/value pair in which the name is the empty string ("").</span></span> <span data-ttu-id="ec635-488">如果已为注册表项设置了默认值，则方法返回的数组 <xref:Microsoft.Win32.RegistryKey.GetValueNames%2A> 包含空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec635-488">If a default value has been set for a registry key, the array returned by the <xref:Microsoft.Win32.RegistryKey.GetValueNames%2A> method includes the empty string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-489">此代码示例是为类提供的更大示例的一部分 <xref:Microsoft.Win32.RegistryKey> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-489">This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#2)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#2)]
 [!code-vb[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-490">该用户没有读取注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-490">The user does not have the permissions required to read from the registry key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-491">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-491">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-492">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-492">The user does not have the necessary registry rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec635-493">发生系统错误；例如，当前项已被删除。</span><span class="sxs-lookup"><span data-stu-id="ec635-493">A system error occurred; for example, the current key has been deleted.</span></span></exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeRegistryHandle Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeRegistryHandle Handle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.RegistryKey.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As SafeRegistryHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeRegistryHandle ^ Handle { Microsoft::Win32::SafeHandles::SafeRegistryHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : Microsoft.Win32.SafeHandles.SafeRegistryHandle" Usage="Microsoft.Win32.RegistryKey.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeRegistryHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec635-494">获取一个 <see cref="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle" /> 对象，该对象表示当前 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象封装的注册表项。</span><span class="sxs-lookup"><span data-stu-id="ec635-494">Gets a <see cref="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle" /> object that represents the registry key that the current <see cref="T:Microsoft.Win32.RegistryKey" /> object encapsulates.</span></span></summary>
        <value><span data-ttu-id="ec635-495">注册表项的句柄。</span><span class="sxs-lookup"><span data-stu-id="ec635-495">The handle to the registry key.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-496">注册表项已关闭。</span><span class="sxs-lookup"><span data-stu-id="ec635-496">The registry key is closed.</span></span> <span data-ttu-id="ec635-497">无法访问已关闭的项。</span><span class="sxs-lookup"><span data-stu-id="ec635-497">Closed keys cannot be accessed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-498">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-498">The user does not have the necessary registry rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec635-499">发生系统错误，例如，删除了当前项。</span><span class="sxs-lookup"><span data-stu-id="ec635-499">A system error occurred, such as deletion of the current key.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-500">用户没有读取注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-500">The user does not have the permissions required to read the key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.RegistryKey.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.Win32.RegistryKey.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec635-501">检索项的名称。</span><span class="sxs-lookup"><span data-stu-id="ec635-501">Retrieves the name of the key.</span></span></summary>
        <value><span data-ttu-id="ec635-502">项的绝对（限定）名称。</span><span class="sxs-lookup"><span data-stu-id="ec635-502">The absolute (qualified) name of the key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-503">密钥名称在注册表中包括此密钥的绝对路径，始终从基本密钥开始，例如 HKEY_LOCAL_MACHINE。</span><span class="sxs-lookup"><span data-stu-id="ec635-503">The name of the key includes the absolute path of this key in the registry, always starting at a base key, for example, HKEY_LOCAL_MACHINE.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-504">此代码示例是为类提供的更大示例的一部分 <xref:Microsoft.Win32.RegistryKey> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-504">This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#4)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#4)]
 [!code-vb[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-505"><see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问已关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-505">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed).</span></span></exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.ToString" />
      </Docs>
    </Member>
    <Member MemberName="OpenBaseKey">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.RegistryKey OpenBaseKey (Microsoft.Win32.RegistryHive hKey, Microsoft.Win32.RegistryView view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.RegistryKey OpenBaseKey(valuetype Microsoft.Win32.RegistryHive hKey, valuetype Microsoft.Win32.RegistryView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenBaseKey (hKey As RegistryHive, view As RegistryView) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Win32::RegistryKey ^ OpenBaseKey(Microsoft::Win32::RegistryHive hKey, Microsoft::Win32::RegistryView view);" />
      <MemberSignature Language="F#" Value="static member OpenBaseKey : Microsoft.Win32.RegistryHive * Microsoft.Win32.RegistryView -&gt; Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.RegistryKey.OpenBaseKey (hKey, view)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hKey" Type="Microsoft.Win32.RegistryHive" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="view" Type="Microsoft.Win32.RegistryView" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hKey"><span data-ttu-id="ec635-506">要打开的 HKEY。</span><span class="sxs-lookup"><span data-stu-id="ec635-506">The HKEY to open.</span></span></param>
        <param name="view"><span data-ttu-id="ec635-507">要使用的注册表视图。</span><span class="sxs-lookup"><span data-stu-id="ec635-507">The registry view to use.</span></span></param>
        <summary><span data-ttu-id="ec635-508">打开一个新的 <see cref="T:Microsoft.Win32.RegistryKey" />，它使用指定的视图在本地计算机上表示请求的项。</span><span class="sxs-lookup"><span data-stu-id="ec635-508">Opens a new <see cref="T:Microsoft.Win32.RegistryKey" /> that represents the requested key on the local machine with the specified view.</span></span></summary>
        <returns><span data-ttu-id="ec635-509">请求的注册表项。</span><span class="sxs-lookup"><span data-stu-id="ec635-509">The requested registry key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec635-510"><paramref name="hKey" /> 或 <paramref name="view" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="ec635-510"><paramref name="hKey" /> or <paramref name="view" /> is invalid.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-511">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-511">The user does not have the necessary registry rights.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-512">用户没有执行此操作所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-512">The user does not have the permissions required to perform this action.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenRemoteBaseKey">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec635-513">打开一个新的 T:Microsoft.Win32.RegistryKey，它使用指定的注册表视图选项在远程计算机上表示请求的项。</span><span class="sxs-lookup"><span data-stu-id="ec635-513">Opens a new T:Microsoft.Win32.RegistryKey that represents the requested key on a remote machine, with the option of specified registry view.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenRemoteBaseKey">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.RegistryKey OpenRemoteBaseKey (Microsoft.Win32.RegistryHive hKey, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.RegistryKey OpenRemoteBaseKey(valuetype Microsoft.Win32.RegistryHive hKey, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenRemoteBaseKey (hKey As RegistryHive, machineName As String) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Win32::RegistryKey ^ OpenRemoteBaseKey(Microsoft::Win32::RegistryHive hKey, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member OpenRemoteBaseKey : Microsoft.Win32.RegistryHive * string -&gt; Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.RegistryKey.OpenRemoteBaseKey (hKey, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hKey" Type="Microsoft.Win32.RegistryHive" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="machineName" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hKey"><span data-ttu-id="ec635-514">要从 <see cref="T:Microsoft.Win32.RegistryHive" /> 枚举中打开的 HKEY。</span><span class="sxs-lookup"><span data-stu-id="ec635-514">The HKEY to open, from the <see cref="T:Microsoft.Win32.RegistryHive" /> enumeration.</span></span></param>
        <param name="machineName"><span data-ttu-id="ec635-515">远程计算机。</span><span class="sxs-lookup"><span data-stu-id="ec635-515">The remote machine.</span></span></param>
        <summary><span data-ttu-id="ec635-516">打开一个新的 <see cref="T:Microsoft.Win32.RegistryKey" />，它表示远程计算机上的请求的项。</span><span class="sxs-lookup"><span data-stu-id="ec635-516">Opens a new <see cref="T:Microsoft.Win32.RegistryKey" /> that represents the requested key on a remote machine.</span></span></summary>
        <returns><span data-ttu-id="ec635-517">请求的注册表项。</span><span class="sxs-lookup"><span data-stu-id="ec635-517">The requested registry key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-518">如果为，则会打开本地计算机注册表 `machineName` <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-518">The local machine registry is opened if `machineName` is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ec635-519">请求的密钥必须是远程计算机上的根密钥，并由适当的 <xref:Microsoft.Win32.RegistryHive> 值标识。</span><span class="sxs-lookup"><span data-stu-id="ec635-519">The requested key must be a root key on the remote machine, and is identified by the appropriate <xref:Microsoft.Win32.RegistryHive> value.</span></span>  
  
 <span data-ttu-id="ec635-520">为了远程打开密钥，服务器和客户端计算机都必须运行远程注册表服务，并启用远程管理。</span><span class="sxs-lookup"><span data-stu-id="ec635-520">In order for a key to be opened remotely, both the server and client machines must be running the remote registry service, and have remote administration enabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-521">下面的代码示例演示如何在远程计算机上打开注册表项并枚举该项的值。</span><span class="sxs-lookup"><span data-stu-id="ec635-521">The following code example shows how to open a registry key on a remote computer and enumerate the values of the key.</span></span> <span data-ttu-id="ec635-522">远程计算机必须运行远程注册表服务。</span><span class="sxs-lookup"><span data-stu-id="ec635-522">The remote computer must be running the remote registry service.</span></span> <span data-ttu-id="ec635-523">调用程序时，将远程计算机的名称指定为命令行参数。</span><span class="sxs-lookup"><span data-stu-id="ec635-523">Specify the name of the remote computer as a command-line argument when invoking the program.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.OpenRemoteBaseKey/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.OpenRemoteBaseKey/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.OpenRemoteBaseKey/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec635-524"><paramref name="hKey" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="ec635-524"><paramref name="hKey" /> is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec635-525"><paramref name="machineName" /> 未找到。</span><span class="sxs-lookup"><span data-stu-id="ec635-525"><paramref name="machineName" /> is not found.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-526"><paramref name="machineName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-526"><paramref name="machineName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-527">用户不具有执行该操作的适当权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-527">The user does not have the proper permissions to perform this operation.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-528">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-528">The user does not have the necessary registry rights.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.RegistryHive" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OpenRemoteBaseKey">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.RegistryKey OpenRemoteBaseKey (Microsoft.Win32.RegistryHive hKey, string machineName, Microsoft.Win32.RegistryView view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.RegistryKey OpenRemoteBaseKey(valuetype Microsoft.Win32.RegistryHive hKey, string machineName, valuetype Microsoft.Win32.RegistryView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenRemoteBaseKey (hKey As RegistryHive, machineName As String, view As RegistryView) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::Win32::RegistryKey ^ OpenRemoteBaseKey(Microsoft::Win32::RegistryHive hKey, System::String ^ machineName, Microsoft::Win32::RegistryView view);" />
      <MemberSignature Language="F#" Value="static member OpenRemoteBaseKey : Microsoft.Win32.RegistryHive * string * Microsoft.Win32.RegistryView -&gt; Microsoft.Win32.RegistryKey" Usage="Microsoft.Win32.RegistryKey.OpenRemoteBaseKey (hKey, machineName, view)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hKey" Type="Microsoft.Win32.RegistryHive" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="machineName" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="view" Type="Microsoft.Win32.RegistryView" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hKey"><span data-ttu-id="ec635-529">要从 <see cref="T:Microsoft.Win32.RegistryHive" /> 枚举中打开的 HKEY。</span><span class="sxs-lookup"><span data-stu-id="ec635-529">The HKEY to open from the <see cref="T:Microsoft.Win32.RegistryHive" /> enumeration.</span></span></param>
        <param name="machineName"><span data-ttu-id="ec635-530">远程计算机。</span><span class="sxs-lookup"><span data-stu-id="ec635-530">The remote machine.</span></span></param>
        <param name="view"><span data-ttu-id="ec635-531">要使用的注册表视图。</span><span class="sxs-lookup"><span data-stu-id="ec635-531">The registry view to use.</span></span></param>
        <summary><span data-ttu-id="ec635-532">打开一个新的注册表项，它使用指定的视图在远程计算机上表示请求的项。</span><span class="sxs-lookup"><span data-stu-id="ec635-532">Opens a new registry key that represents the requested key on a remote machine with the specified view.</span></span></summary>
        <returns><span data-ttu-id="ec635-533">请求的注册表项。</span><span class="sxs-lookup"><span data-stu-id="ec635-533">The requested registry key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-534">如果为，则会打开本地计算机注册表 `machineName` <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-534">The local machine registry is opened if `machineName` is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ec635-535">请求的密钥必须是远程计算机上的根密钥，并由适当的 <xref:Microsoft.Win32.RegistryHive> 值标识。</span><span class="sxs-lookup"><span data-stu-id="ec635-535">The requested key must be a root key on the remote machine, and is identified by the appropriate <xref:Microsoft.Win32.RegistryHive> value.</span></span>  
  
 <span data-ttu-id="ec635-536">为了远程打开密钥，服务器和客户端计算机都必须运行远程注册表服务，并启用远程管理。</span><span class="sxs-lookup"><span data-stu-id="ec635-536">In order for a key to be opened remotely, both the server and client machines must be running the remote registry service, and have remote administration enabled.</span></span>  
  
 <span data-ttu-id="ec635-537">在64位版本的 Windows 上，将分别为32位和64位应用程序存储注册表部分。</span><span class="sxs-lookup"><span data-stu-id="ec635-537">On the 64-bit versions of Windows, portions of the registry are stored separately for 32-bit and 64-bit applications.</span></span> <span data-ttu-id="ec635-538">对于32位应用程序，有32位视图，适用于64位应用程序的64位视图。</span><span class="sxs-lookup"><span data-stu-id="ec635-538">There is a 32-bit view for 32-bit applications and a 64-bit view for 64-bit applications.</span></span> <span data-ttu-id="ec635-539">如果 `view` 为 <xref:Microsoft.Win32.RegistryView.Registry64> ，但远程计算机运行的是32位操作系统，则返回的密钥将使用 <xref:Microsoft.Win32.RegistryView.Registry32> 视图。</span><span class="sxs-lookup"><span data-stu-id="ec635-539">If `view` is <xref:Microsoft.Win32.RegistryView.Registry64> but the remote machine is running a 32-bit operating system, the returned key will use the <xref:Microsoft.Win32.RegistryView.Registry32> view.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec635-540"><paramref name="hKey" /> 或 <paramref name="view" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="ec635-540"><paramref name="hKey" /> or <paramref name="view" /> is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec635-541"><paramref name="machineName" /> 未找到。</span><span class="sxs-lookup"><span data-stu-id="ec635-541"><paramref name="machineName" /> is not found.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-542"><paramref name="machineName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-542"><paramref name="machineName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-543">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-543">The user does not have the necessary registry rights.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-544">用户不具有执行该操作所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-544">The user does not have the required permissions to perform this operation.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenSubKey">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec635-545">检索指定的子项。</span><span class="sxs-lookup"><span data-stu-id="ec635-545">Retrieves the specified subkey.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey OpenSubKey (string name);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey OpenSubKey(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSubKey (name As String) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ OpenSubKey(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.OpenSubKey : string -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.OpenSubKey name" />
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey? OpenSubKey (string name);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec635-546">要以只读方式打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="ec635-546">The name or path of the subkey to open as read-only.</span></span></param>
        <summary><span data-ttu-id="ec635-547">以只读方式检索子项。</span><span class="sxs-lookup"><span data-stu-id="ec635-547">Retrieves a subkey as read-only.</span></span></summary>
        <returns><span data-ttu-id="ec635-548">请求的子项；如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-548">The subkey requested, or <see langword="null" /> if the operation failed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-549">必须先打开密钥，然后才能使用其他方法和属性进行操作。</span><span class="sxs-lookup"><span data-stu-id="ec635-549">You must open a key before it can be manipulated with other methods and properties.</span></span> <span data-ttu-id="ec635-550">若要修改某个密钥，必须使用方法的重载打开该密钥， <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> 该方法允许你指定写入访问权限，如 <xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CMicrosoft.Win32.RegistryKeyPermissionCheck%29> 重载或 <xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CSystem.Boolean%29> 重载。</span><span class="sxs-lookup"><span data-stu-id="ec635-550">To modify a key, you must open it with an overload of the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method that allows you to specify write access, such as the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CMicrosoft.Win32.RegistryKeyPermissionCheck%29> overload or the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CSystem.Boolean%29> overload.</span></span>  
  
 <span data-ttu-id="ec635-551">如果找不到指定的子项，则 `null` 返回。</span><span class="sxs-lookup"><span data-stu-id="ec635-551">If the specified subkey cannot be found, then `null` is returned.</span></span>  
  
 <span data-ttu-id="ec635-552">若要使用 <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> 方法，必须具有的实例 <xref:Microsoft.Win32.RegistryKey> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-552">In order to use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method, you must have an instance of <xref:Microsoft.Win32.RegistryKey>.</span></span> <span data-ttu-id="ec635-553">若要获取的实例 <xref:Microsoft.Win32.RegistryKey> ，请使用类的静态成员之一 <xref:Microsoft.Win32.Registry> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-553">To get an instance of <xref:Microsoft.Win32.RegistryKey>, use the one of the static members of the <xref:Microsoft.Win32.Registry> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-554">下面的代码示例创建一个测试键，并使用 <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> 方法将其打开，同时演示方法的两个重载。</span><span class="sxs-lookup"><span data-stu-id="ec635-554">The following code example creates a test key and uses the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to open it, demonstrating both overloads of the method.</span></span>  
  
 [!code-cpp[RegistryKey.OpenSubKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/RegistryKey.OpenSubKey/CPP/opensubkey.cpp#1)]
 [!code-csharp[RegistryKey.OpenSubKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistryKey.OpenSubKey/CS/opensubkey.cs#1)]
 [!code-vb[RegistryKey.OpenSubKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistryKey.OpenSubKey/VB/opensubkey.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-555"><paramref name="name" /> 为 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="ec635-555"><paramref name="name" /> is <see langword="null" /></span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-556"><see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问已关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-556">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-557">用户没有读取注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-557">The user does not have the permissions required to read the registry key.</span></span></exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
        <altmember cref="T:Microsoft.Win32.Registry" />
      </Docs>
    </Member>
    <Member MemberName="OpenSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey OpenSubKey (string name, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey OpenSubKey(string name, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSubKey (name As String, permissionCheck As RegistryKeyPermissionCheck) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ OpenSubKey(System::String ^ name, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck);" />
      <MemberSignature Language="F#" Value="member this.OpenSubKey : string * Microsoft.Win32.RegistryKeyPermissionCheck -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.OpenSubKey (name, permissionCheck)" />
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey? OpenSubKey (string name, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec635-558">要创建或打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="ec635-558">The name or path of the subkey to create or open.</span></span></param>
        <param name="permissionCheck"><span data-ttu-id="ec635-559">用于指定打开该项是进行读取还是读取/写入访问的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="ec635-559">One of the enumeration values that specifies whether the key is opened for read or read/write access.</span></span></param>
        <summary><span data-ttu-id="ec635-560">检索指定的子项以进行读取或读/写访问。</span><span class="sxs-lookup"><span data-stu-id="ec635-560">Retrieves the specified subkey for read or read/write access.</span></span></summary>
        <returns><span data-ttu-id="ec635-561">请求的子项；如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-561">The subkey requested, or <see langword="null" /> if the operation failed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-562">`null`如果请求的项不存在，则此方法将返回，而不是引发异常。</span><span class="sxs-lookup"><span data-stu-id="ec635-562">Rather than throwing an exception, this method returns `null` if the requested key does not exist.</span></span>  
  
 <span data-ttu-id="ec635-563">如果 `permissionCheck` 为 <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType> ，则打开密钥以进行读取和写入; 如果 `permissionCheck` 为 <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType> 或 <xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType> ，则将打开密钥以供读取，除非已打开父键 <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-563">If `permissionCheck` is <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>, the key is opened for reading and writing; if `permissionCheck` is <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType> or <xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType>, the key is opened for reading unless the parent key was opened with <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ec635-564">若要使用 <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> 方法，必须具有类的实例 <xref:Microsoft.Win32.RegistryKey> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-564">In order to use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method, you must have an instance of the <xref:Microsoft.Win32.RegistryKey> class.</span></span> <span data-ttu-id="ec635-565">若要获取的实例 <xref:Microsoft.Win32.RegistryKey> ，请使用类的静态成员之一 <xref:Microsoft.Win32.Registry> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-565">To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-566">下面的代码示例创建一个包含100键/值对的子项并将其关闭。</span><span class="sxs-lookup"><span data-stu-id="ec635-566">The following code example creates a subkey containing 100 key/value pairs and closes it.</span></span> <span data-ttu-id="ec635-567">该示例使用打开子项 <xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default> ，记录读取所有值所用的时间，并关闭子项。</span><span class="sxs-lookup"><span data-stu-id="ec635-567">The example opens the subkey with <xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default>, records the time it takes to read all the values, and closes the subkey.</span></span> <span data-ttu-id="ec635-568">该示例使用打开该子项 <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree> ，并记录读取所有值所用的时间。</span><span class="sxs-lookup"><span data-stu-id="ec635-568">The example opens the subkey with <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree> and records the time it takes to read all the values.</span></span> <span data-ttu-id="ec635-569">最后，该示例计算并显示改进百分比。</span><span class="sxs-lookup"><span data-stu-id="ec635-569">Finally, the example computes and displays the percentage improvement.</span></span>  
  
 [!code-csharp[RegistryKey.OpenSubKey_PermCheck#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistryKey.OpenSubKey_PermCheck/cs/source.cs#1)]
 [!code-vb[RegistryKey.OpenSubKey_PermCheck#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistryKey.OpenSubKey_PermCheck/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-570"><paramref name="name" /> 为 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="ec635-570"><paramref name="name" /> is <see langword="null" /></span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec635-571"><paramref name="permissionCheck" /> 包含无效值。</span><span class="sxs-lookup"><span data-stu-id="ec635-571"><paramref name="permissionCheck" /> contains an invalid value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-572"><see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问已关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-572">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-573">用户没有读取注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-573">The user does not have the permissions required to read the registry key.</span></span></exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
        <altmember cref="T:Microsoft.Win32.Registry" />
      </Docs>
    </Member>
    <Member MemberName="OpenSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey OpenSubKey (string name, bool writable);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey OpenSubKey(string name, bool writable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSubKey (name As String, writable As Boolean) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ OpenSubKey(System::String ^ name, bool writable);" />
      <MemberSignature Language="F#" Value="member this.OpenSubKey : string * bool -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.OpenSubKey (name, writable)" />
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey? OpenSubKey (string name, bool writable);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="writable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec635-574">要打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="ec635-574">Name or path of the subkey to open.</span></span></param>
        <param name="writable"><span data-ttu-id="ec635-575">如果需要项的写访问权限，则设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-575">Set to <see langword="true" /> if you need write access to the key.</span></span></param>
        <summary><span data-ttu-id="ec635-576">检索指定的子项，并指定是否将写访问权限应用于该项。</span><span class="sxs-lookup"><span data-stu-id="ec635-576">Retrieves a specified subkey, and specifies whether write access is to be applied to the key.</span></span></summary>
        <returns><span data-ttu-id="ec635-577">请求的子项；如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-577">The subkey requested, or <see langword="null" /> if the operation failed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-578">如果请求的项不存在，则此方法返回， `null` 而不是引发异常。</span><span class="sxs-lookup"><span data-stu-id="ec635-578">If the requested key does not exist, this method returns `null` instead of throwing an exception.</span></span>  
  
 <span data-ttu-id="ec635-579">如果 `writable` 为 `true` ，则将打开该密钥以进行读写，否则，将以只读方式打开该密钥。</span><span class="sxs-lookup"><span data-stu-id="ec635-579">If `writable` is `true`, the key will be opened for reading and writing, otherwise, the key will be opened as read-only.</span></span>  
  
 <span data-ttu-id="ec635-580">若要使用 <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> 方法，必须具有方法的实例 <xref:Microsoft.Win32.RegistryKey> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-580">In order to use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method, you must have an instance of the <xref:Microsoft.Win32.RegistryKey> method.</span></span> <span data-ttu-id="ec635-581">若要获取的实例 <xref:Microsoft.Win32.RegistryKey> ，请使用类的静态成员之一 <xref:Microsoft.Win32.Registry> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-581">To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-582">下面的代码示例创建一个测试键，并使用 <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> 方法将其打开，同时演示方法的两个重载。</span><span class="sxs-lookup"><span data-stu-id="ec635-582">The following code example creates a test key and uses the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to open it, demonstrating both overloads of the method.</span></span>  
  
 [!code-cpp[RegistryKey.OpenSubKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/RegistryKey.OpenSubKey/CPP/opensubkey.cpp#1)]
 [!code-csharp[RegistryKey.OpenSubKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistryKey.OpenSubKey/CS/opensubkey.cs#1)]
 [!code-vb[RegistryKey.OpenSubKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistryKey.OpenSubKey/VB/opensubkey.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-583"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-583"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-584"><see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问已关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-584">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-585">用户没有在指定模式下访问注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-585">The user does not have the permissions required to access the registry key in the specified mode.</span></span></exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
        <altmember cref="T:Microsoft.Win32.Registry" />
      </Docs>
    </Member>
    <Member MemberName="OpenSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey OpenSubKey (string name, System.Security.AccessControl.RegistryRights rights);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey OpenSubKey(string name, valuetype System.Security.AccessControl.RegistryRights rights) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSubKey (name As String, rights As RegistryRights) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ OpenSubKey(System::String ^ name, System::Security::AccessControl::RegistryRights rights);" />
      <MemberSignature Language="F#" Value="member this.OpenSubKey : string * System.Security.AccessControl.RegistryRights -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.OpenSubKey (name, rights)" />
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey? OpenSubKey (string name, System.Security.AccessControl.RegistryRights rights);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rights" Type="System.Security.AccessControl.RegistryRights" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec635-586">要创建或打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="ec635-586">The name or path of the subkey to create or open.</span></span></param>
        <param name="rights"><span data-ttu-id="ec635-587">注册表项的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-587">The rights for the registry key.</span></span></param>
        <summary><span data-ttu-id="ec635-588">检索具有指定名称和访问权限的子项。</span><span class="sxs-lookup"><span data-stu-id="ec635-588">Retrieves a subkey with the specified name and access rights.</span></span> <span data-ttu-id="ec635-589">从 .NET Framework 4.6 开始可用。</span><span class="sxs-lookup"><span data-stu-id="ec635-589">Available starting with .NET Framework 4.6.</span></span></summary>
        <returns><span data-ttu-id="ec635-590">请求的子项；如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-590">The subkey requested, or <see langword="null" /> if the operation failed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-591">必须先打开密钥，然后才能使用其他方法和属性进行操作。</span><span class="sxs-lookup"><span data-stu-id="ec635-591">You must open a key before it can be manipulated with other methods and properties.</span></span> <span data-ttu-id="ec635-592">若要修改某个密钥，必须使用 <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> 允许你指定写入访问权限的方法重载打开它。</span><span class="sxs-lookup"><span data-stu-id="ec635-592">To modify a key, you must open it with an overload of the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method that allows you to specify write access.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-593"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-593"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-594"><see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问已关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-594">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-595">用户没有在指定模式下访问注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-595">The user does not have the permissions required to access the registry key in the specified mode.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OpenSubKey">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey OpenSubKey (string name, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, System.Security.AccessControl.RegistryRights rights);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Win32.RegistryKey OpenSubKey(string name, valuetype Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, valuetype System.Security.AccessControl.RegistryRights rights) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSubKey (name As String, permissionCheck As RegistryKeyPermissionCheck, rights As RegistryRights) As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Win32::RegistryKey ^ OpenSubKey(System::String ^ name, Microsoft::Win32::RegistryKeyPermissionCheck permissionCheck, System::Security::AccessControl::RegistryRights rights);" />
      <MemberSignature Language="F#" Value="member this.OpenSubKey : string * Microsoft.Win32.RegistryKeyPermissionCheck * System.Security.AccessControl.RegistryRights -&gt; Microsoft.Win32.RegistryKey" Usage="registryKey.OpenSubKey (name, permissionCheck, rights)" />
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey? OpenSubKey (string name, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, System.Security.AccessControl.RegistryRights rights);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="rights" Type="System.Security.AccessControl.RegistryRights" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec635-596">要创建或打开的子项的名称或路径。</span><span class="sxs-lookup"><span data-stu-id="ec635-596">The name or path of the subkey to create or open.</span></span></param>
        <param name="permissionCheck"><span data-ttu-id="ec635-597">用于指定打开该项是进行读取还是读取/写入访问的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="ec635-597">One of the enumeration values that specifies whether the key is opened for read or read/write access.</span></span></param>
        <param name="rights"><span data-ttu-id="ec635-598">枚举值的按位组合，它指定所需的安全访问。</span><span class="sxs-lookup"><span data-stu-id="ec635-598">A bitwise combination of enumeration values that specifies the desired security access.</span></span></param>
        <summary><span data-ttu-id="ec635-599">检索指定的子项以进行读取或读/写访问，请求指定的访问权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-599">Retrieves the specified subkey for read or read/write access, requesting the specified access rights.</span></span></summary>
        <returns><span data-ttu-id="ec635-600">请求的子项；如果操作失败，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-600">The subkey requested, or <see langword="null" /> if the operation failed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-601">`null`如果请求的项不存在，则此方法将返回，而不是引发异常。</span><span class="sxs-lookup"><span data-stu-id="ec635-601">Rather than throwing an exception, this method returns `null` if the requested key does not exist.</span></span>  
  
 <span data-ttu-id="ec635-602">如果 `permissionCheck` 为 <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType> ，则打开密钥以进行读取和写入; 如果 `permissionCheck` 为 <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType> 或 <xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType> ，则将打开密钥以供读取，除非已打开父键 <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-602">If `permissionCheck` is <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>, the key is opened for reading and writing; if `permissionCheck` is <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType> or <xref:Microsoft.Win32.RegistryKeyPermissionCheck.Default?displayProperty=nameWithType>, the key is opened for reading unless the parent key was opened with <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ec635-603">为指定的访问权限 `permissionCheck` 优先于为指定的访问权限 `rights` 。</span><span class="sxs-lookup"><span data-stu-id="ec635-603">The access specified for `permissionCheck` takes precedence over the access specified for `rights`.</span></span> <span data-ttu-id="ec635-604">例如，如果 <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType> 为指定 `permissionCheck` 和，则 <xref:System.Security.AccessControl.RegistryRights.WriteKey?displayProperty=nameWithType> `rights` 尝试写入子项会引发异常。</span><span class="sxs-lookup"><span data-stu-id="ec635-604">For example, if you specify <xref:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree?displayProperty=nameWithType> for `permissionCheck` and <xref:System.Security.AccessControl.RegistryRights.WriteKey?displayProperty=nameWithType> for `rights`, an attempt to write to the subkey throws an exception.</span></span>  
  
 <span data-ttu-id="ec635-605">若要使用 <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> 方法，必须具有类的实例 <xref:Microsoft.Win32.RegistryKey> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-605">In order to use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method, you must have an instance of the <xref:Microsoft.Win32.RegistryKey> class.</span></span> <span data-ttu-id="ec635-606">若要获取的实例 <xref:Microsoft.Win32.RegistryKey> ，请使用类的静态成员之一 <xref:Microsoft.Win32.Registry> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-606">To get an instance of <xref:Microsoft.Win32.RegistryKey>, use one of the static members of the <xref:Microsoft.Win32.Registry> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-607"><paramref name="name" /> 为 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="ec635-607"><paramref name="name" /> is <see langword="null" /></span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec635-608"><paramref name="permissionCheck" /> 包含无效值。</span><span class="sxs-lookup"><span data-stu-id="ec635-608"><paramref name="permissionCheck" /> contains an invalid value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-609"><see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问已关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-609">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-610"><paramref name="rights" /> 包含无效的注册表权限值。</span><span class="sxs-lookup"><span data-stu-id="ec635-610"><paramref name="rights" /> includes invalid registry rights values.</span></span>  
  
<span data-ttu-id="ec635-611">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec635-611">-or-</span></span> 
<span data-ttu-id="ec635-612">用户没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-612">The user does not have the requested permissions.</span></span></exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
        <altmember cref="T:Microsoft.Win32.Registry" />
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.RegistrySecurity registrySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.RegistrySecurity registrySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.SetAccessControl(System.Security.AccessControl.RegistrySecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessControl (registrySecurity As RegistrySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::RegistrySecurity ^ registrySecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.RegistrySecurity -&gt; unit" Usage="registryKey.SetAccessControl registrySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registrySecurity" Type="System.Security.AccessControl.RegistrySecurity" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="registrySecurity"><span data-ttu-id="ec635-613">要应用于当前子项的访问控制安全性。</span><span class="sxs-lookup"><span data-stu-id="ec635-613">The access control security to apply to the current subkey.</span></span></param>
        <summary><span data-ttu-id="ec635-614">向现有注册表项应用 Windows 访问控制安全性。</span><span class="sxs-lookup"><span data-stu-id="ec635-614">Applies Windows access control security to an existing registry key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-615">若要修改注册表项的权限，请使用 <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A> 方法获取 <xref:System.Security.AccessControl.RegistrySecurity> 表示现有 Windows 访问控制安全性的对象，修改该 <xref:System.Security.AccessControl.RegistrySecurity> 对象，然后使用 <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A> 方法更新密钥的安全性。</span><span class="sxs-lookup"><span data-stu-id="ec635-615">To modify permissions for a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A> method to obtain a <xref:System.Security.AccessControl.RegistrySecurity> object representing the existing Windows access control security, modify that <xref:System.Security.AccessControl.RegistrySecurity> object, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A> method to update security for the key.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ec635-616"><xref:System.Security.AccessControl.RegistrySecurity>为指定用于 `registrySecurity` 替换注册表项的现有安全性的对象。</span><span class="sxs-lookup"><span data-stu-id="ec635-616">The <xref:System.Security.AccessControl.RegistrySecurity> object specified for `registrySecurity` replaces the existing security for the registry key.</span></span> <span data-ttu-id="ec635-617">若要为新用户添加权限，请使用 <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A> 方法获取现有的访问控制安全性，然后对其进行修改。</span><span class="sxs-lookup"><span data-stu-id="ec635-617">To add permissions for a new user, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A> method to obtain the existing access control security, and then modify it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-618">下面的代码示例创建一个测试键。</span><span class="sxs-lookup"><span data-stu-id="ec635-618">The following code example creates a test key.</span></span> <span data-ttu-id="ec635-619">允许当前用户 <xref:System.Security.AccessControl.RegistryRights.ReadKey> 和权限， <xref:System.Security.AccessControl.RegistryRights.Delete> 但被拒绝 <xref:System.Security.AccessControl.RegistryRights.ChangePermissions> 和 <xref:System.Security.AccessControl.RegistryRights.WriteKey> 权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-619">The current user is allowed <xref:System.Security.AccessControl.RegistryRights.ReadKey> and <xref:System.Security.AccessControl.RegistryRights.Delete> rights but denied <xref:System.Security.AccessControl.RegistryRights.ChangePermissions> and <xref:System.Security.AccessControl.RegistryRights.WriteKey> rights.</span></span> <span data-ttu-id="ec635-620">后续尝试操作密钥的操作将会成功或失败，具体取决于这些权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-620">Subsequent attempts to manipulate the key succeed or fail depending on these permissions.</span></span>  
  
 <span data-ttu-id="ec635-621">在删除密钥之前，代码将暂停。</span><span class="sxs-lookup"><span data-stu-id="ec635-621">Before the key is deleted, the code pauses.</span></span> <span data-ttu-id="ec635-622">当使用注册表编辑器访问密钥时，可以切换到注册表编辑器，验证是否应用了相同的访问权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-622">You can switch to the registry editor and verify that the same access rights apply when the key is accessed using the registry editor.</span></span> <span data-ttu-id="ec635-623"> (如果从命令行使用 **RunAs** 来运行注册表编辑器，并将示例代码作为本地用户运行，则不需要管理员权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-623">(This works best if you use **RunAs** from the command line to run the registry editor and the sample code as a local user without administrator rights.</span></span> <span data-ttu-id="ec635-624">注册表编辑器始终允许管理员更改权限，即使特定管理员拒绝了这些权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-624">The registry editor always allows an administrator to change permissions, even if the particular administrator has been denied those rights.</span></span> <span data-ttu-id="ec635-625">如果你已定义了名为 TestUser 的本地用户，则该命令 `runas /user:TestUser cmd` 将打开一个命令窗口，你可以在其中运行注册表编辑器，然后运行示例代码。 ) </span><span class="sxs-lookup"><span data-stu-id="ec635-625">If you have defined a local user named TestUser, the command `runas /user:TestUser cmd` opens a command window from which you can run the registry editor and then the sample code.)</span></span>  
  
 [!code-cpp[RegistrySecurity101#1](~/samples/snippets/cpp/VS_Snippets_CLR/RegistrySecurity101/cpp/source.cpp#1)]
 [!code-csharp[RegistrySecurity101#1](~/samples/snippets/csharp/VS_Snippets_CLR/RegistrySecurity101/CS/source.cs#1)]
 [!code-vb[RegistrySecurity101#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RegistrySecurity101/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-626">当前的 <see cref="T:Microsoft.Win32.RegistryKey" /> 对象表示一个具有访问控制安全性的项，并且调用方没有 <see cref="F:System.Security.AccessControl.RegistryRights.ChangePermissions" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-626">The current <see cref="T:Microsoft.Win32.RegistryKey" /> object represents a key with access control security, and the caller does not have <see cref="F:System.Security.AccessControl.RegistryRights.ChangePermissions" /> rights.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-627"><paramref name="registrySecurity" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-627"><paramref name="registrySecurity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-628">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-628">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec635-629">设置注册表项中的名称/值对的值。</span><span class="sxs-lookup"><span data-stu-id="ec635-629">Sets the value of a name/value pair in the registry key.</span></span> <span data-ttu-id="ec635-630">从所存储数据的类型或指定的 <see cref="T:Microsoft.Win32.RegistryValueKind" /> 确定注册表数据类型，具体取决于重载。</span><span class="sxs-lookup"><span data-stu-id="ec635-630">Depending on the overload, the registry data type is determined from the type of data being stored or from a specified <see cref="T:Microsoft.Win32.RegistryValueKind" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string name, object value);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : string * obj -&gt; unit" Usage="registryKey.SetValue (name, value)" />
      <MemberSignature Language="C#" Value="public void SetValue (string? name, object value);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec635-631">要存储的值的名称。</span><span class="sxs-lookup"><span data-stu-id="ec635-631">The name of the value to store.</span></span></param>
        <param name="value"><span data-ttu-id="ec635-632">要存储的数据。</span><span class="sxs-lookup"><span data-stu-id="ec635-632">The data to be stored.</span></span></param>
        <summary><span data-ttu-id="ec635-633">设置指定的名称/值对。</span><span class="sxs-lookup"><span data-stu-id="ec635-633">Sets the specified name/value pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-634">由于注册表中的每个键都可以存储许多值，因此必须使用 `name` 参数来指定要设置的特定值。</span><span class="sxs-lookup"><span data-stu-id="ec635-634">Because many values can be stored in each key in the registry, you must use the `name` parameter to specify the particular value you want to set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec635-635">注册表项可以有一个不与任何名称关联的值。</span><span class="sxs-lookup"><span data-stu-id="ec635-635">A registry key can have one value that is not associated with any name.</span></span> <span data-ttu-id="ec635-636">在注册表编辑器中显示此未命名值时，将显示 " (默认) " 字符串而不是名称。</span><span class="sxs-lookup"><span data-stu-id="ec635-636">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="ec635-637">若要设置此未命名值，请 `null` 为指定或空字符串 ( "" ) `name` 。</span><span class="sxs-lookup"><span data-stu-id="ec635-637">To set this unnamed value, specify either `null` or the empty string ("") for `name`.</span></span>  
  
 <span data-ttu-id="ec635-638">若要设置项中的值，必须使用写访问权限打开该项。</span><span class="sxs-lookup"><span data-stu-id="ec635-638">In order to set values in a key, you must open the key with write access.</span></span> <span data-ttu-id="ec635-639">打开具有写访问权限的项后，可以更改该项中的任何名称/值对。</span><span class="sxs-lookup"><span data-stu-id="ec635-639">After you have opened a key with write access, you can change any of the name/value pairs in that key.</span></span>  
  
 <span data-ttu-id="ec635-640">如果 `name` 密钥中不存在指定的，则会创建它，并将关联的值设置为 `value` 。</span><span class="sxs-lookup"><span data-stu-id="ec635-640">If the specified `name` does not exist in the key, it is created and the associated value is set to `value`.</span></span>  
  
 <span data-ttu-id="ec635-641">此重载将 <xref:Microsoft.Win32.RegistryKey.SetValue%2A> 64 位整数存储为 () 的字符串 <xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-641">This overload of <xref:Microsoft.Win32.RegistryKey.SetValue%2A> stores 64-bit integers as strings (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>).</span></span> <span data-ttu-id="ec635-642">若要将64位数字存储为 <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType> 值，请使用 <xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> 指定的重载 <xref:Microsoft.Win32.RegistryValueKind> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-642">To store 64-bit numbers as <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType> values, use the <xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> overload that specifies <xref:Microsoft.Win32.RegistryValueKind>.</span></span>  
  
 <span data-ttu-id="ec635-643">此重载将 <xref:Microsoft.Win32.RegistryKey.SetValue%2A> 所有字符串值存储为 <xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType> ，即使它们包含对环境变量的可展开引用。</span><span class="sxs-lookup"><span data-stu-id="ec635-643">This overload of <xref:Microsoft.Win32.RegistryKey.SetValue%2A> stores all string values as <xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>, even if they contain expandable references to environment variables.</span></span> <span data-ttu-id="ec635-644">若要将字符串值保存为 () 的可扩展字符串 <xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType> ，请使用 <xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> 指定的重载 <xref:Microsoft.Win32.RegistryValueKind> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-644">To save string values as expandable strings (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), use the <xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> overload that specifies <xref:Microsoft.Win32.RegistryValueKind>.</span></span>  
  
 <span data-ttu-id="ec635-645">此方法重载将非32位整数以外的数值类型存储为字符串。</span><span class="sxs-lookup"><span data-stu-id="ec635-645">Numeric types other than 32-bit integers are stored as strings by this method overload.</span></span> <span data-ttu-id="ec635-646">枚举元素作为包含元素名称的字符串存储。</span><span class="sxs-lookup"><span data-stu-id="ec635-646">Enumeration elements are stored as strings containing the element names.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ec635-647">不要 <xref:Microsoft.Win32.RegistryKey> 以这样的方式公开对象：恶意程序可能会创建数千个无意义子项或键/值对。</span><span class="sxs-lookup"><span data-stu-id="ec635-647">Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</span></span> <span data-ttu-id="ec635-648">例如，不允许调用方输入任意密钥或值。</span><span class="sxs-lookup"><span data-stu-id="ec635-648">For example, do not allow callers to enter arbitrary keys or values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec635-649">在 Windows 98 和 Windows Millennium Edition 中，注册表不是 Unicode，并且并非所有 Unicode 字符对于所有代码页都有效。</span><span class="sxs-lookup"><span data-stu-id="ec635-649">On Windows 98 and Windows Millennium Edition the registry is not Unicode, and not all Unicode characters are valid for all code pages.</span></span> <span data-ttu-id="ec635-650">对于当前代码页无效的 Unicode 字符被替换为最佳可用匹配项。</span><span class="sxs-lookup"><span data-stu-id="ec635-650">A Unicode character that is invalid for the current code page is replaced by the best available match.</span></span> <span data-ttu-id="ec635-651">不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="ec635-651">No exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-652">下面的代码示例演示了 <xref:Microsoft.Win32.RegistryKey.SetValue%2A> 方法在设置值时如何确定注册表数据类型。</span><span class="sxs-lookup"><span data-stu-id="ec635-652">The following code example shows how the <xref:Microsoft.Win32.RegistryKey.SetValue%2A> method determines the registry data type when it sets values.</span></span> <span data-ttu-id="ec635-653">该示例创建一个测试键，并将不同数据类型的值添加到该键。</span><span class="sxs-lookup"><span data-stu-id="ec635-653">The example creates a test key and adds values of different data types to the key.</span></span> <span data-ttu-id="ec635-654">然后，该示例将读取名称/值对，并将其显示在控制台中，方法是使用 <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> 方法来显示相应的注册表数据类型。</span><span class="sxs-lookup"><span data-stu-id="ec635-654">The example then reads the name/value pairs and displays them to the console, using the <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> method to display the corresponding registry data types.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey.SetValue1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.SetValue1/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryKey.SetValue1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.SetValue1/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryKey.SetValue1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey.SetValue1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-655"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-655"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec635-656"><paramref name="value" /> 不是受支持的数据类型。</span><span class="sxs-lookup"><span data-stu-id="ec635-656"><paramref name="value" /> is an unsupported data type.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-657">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-657">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-658"><see cref="T:Microsoft.Win32.RegistryKey" /> 只读，因此无法写入；例如，项不是用写访问权限打开的。</span><span class="sxs-lookup"><span data-stu-id="ec635-658">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and cannot be written to; for example, the key has not been opened with write access.</span></span>  
  
<span data-ttu-id="ec635-659">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec635-659">-or-</span></span> 
<span data-ttu-id="ec635-660"><see cref="T:Microsoft.Win32.RegistryKey" /> 对象表示根级别节点，操作系统为 Windows Millennium Edition 或 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="ec635-660">The <see cref="T:Microsoft.Win32.RegistryKey" /> object represents a root-level node, and the operating system is Windows Millennium Edition or Windows 98.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-661">用户没有创建或修改注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-661">The user does not have the permissions required to create or modify registry keys.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec635-662"><see cref="T:Microsoft.Win32.RegistryKey" /> 对象表示根级别节点，操作系统为 Windows 2000、Windows XP 或 Windows Server 2003。</span><span class="sxs-lookup"><span data-stu-id="ec635-662">The <see cref="T:Microsoft.Win32.RegistryKey" /> object represents a root-level node, and the operating system is Windows 2000, Windows XP, or Windows Server 2003.</span></span></exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueKind(System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string name, object value, Microsoft.Win32.RegistryValueKind valueKind);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(string name, object value, valuetype Microsoft.Win32.RegistryValueKind valueKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (name As String, value As Object, valueKind As RegistryValueKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ name, System::Object ^ value, Microsoft::Win32::RegistryValueKind valueKind);" />
      <MemberSignature Language="F#" Value="member this.SetValue : string * obj * Microsoft.Win32.RegistryValueKind -&gt; unit" Usage="registryKey.SetValue (name, value, valueKind)" />
      <MemberSignature Language="C#" Value="public void SetValue (string? name, object value, Microsoft.Win32.RegistryValueKind valueKind);" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="valueKind" Type="Microsoft.Win32.RegistryValueKind" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec635-663">要存储的值的名称。</span><span class="sxs-lookup"><span data-stu-id="ec635-663">The name of the value to be stored.</span></span></param>
        <param name="value"><span data-ttu-id="ec635-664">要存储的数据。</span><span class="sxs-lookup"><span data-stu-id="ec635-664">The data to be stored.</span></span></param>
        <param name="valueKind"><span data-ttu-id="ec635-665">在存储数据时要使用的注册表数据类型。</span><span class="sxs-lookup"><span data-stu-id="ec635-665">The registry data type to use when storing the data.</span></span></param>
        <summary><span data-ttu-id="ec635-666">使用指定的注册表数据类型设置注册表项中的名称/值对的值。</span><span class="sxs-lookup"><span data-stu-id="ec635-666">Sets the value of a name/value pair in the registry key, using the specified registry data type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-667">由于注册表中的每个键都可以存储许多值，因此必须使用 `name` 参数来指定要设置的特定值。</span><span class="sxs-lookup"><span data-stu-id="ec635-667">Because many values can be stored in each key in the registry, you must use the `name` parameter to specify the particular value you want to set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec635-668">注册表项可以有一个不与任何名称关联的值。</span><span class="sxs-lookup"><span data-stu-id="ec635-668">A registry key can have one value that is not associated with any name.</span></span> <span data-ttu-id="ec635-669">在注册表编辑器中显示此未命名值时，将显示 " (默认) " 字符串而不是名称。</span><span class="sxs-lookup"><span data-stu-id="ec635-669">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="ec635-670">若要设置此未命名值，请 `null` 为指定或空字符串 ( "" ) `name` 。</span><span class="sxs-lookup"><span data-stu-id="ec635-670">To set this unnamed value, specify either `null` or the empty string ("") for `name`.</span></span>  
  
 <span data-ttu-id="ec635-671">若要设置项中的值，必须使用写访问权限打开该项。</span><span class="sxs-lookup"><span data-stu-id="ec635-671">In order to set values in a key, you must open the key with write access.</span></span> <span data-ttu-id="ec635-672">打开具有写访问权限的项后，可以更改该项中的任何名称/值对。</span><span class="sxs-lookup"><span data-stu-id="ec635-672">After you have opened a key with write access, you can change any of the name/value pairs in that key.</span></span>  
  
 <span data-ttu-id="ec635-673">如果 `name` 密钥中不存在指定的，则会创建它，并将关联的值设置为 `value` 。</span><span class="sxs-lookup"><span data-stu-id="ec635-673">If the specified `name` does not exist in the key, it is created, and the associated value is set to `value`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec635-674">指定注册表数据类型与 <xref:Microsoft.Win32.RegistryValueKind.Unknown> 使用重载的数据类型相同 <xref:Microsoft.Win32.RegistryKey.SetValue%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-674">Specifying the registry data type <xref:Microsoft.Win32.RegistryValueKind.Unknown> is the same as using the <xref:Microsoft.Win32.RegistryKey.SetValue%2A> overload.</span></span>  
  
 <span data-ttu-id="ec635-675">如果指定的类型与指定的不 `value` 匹配 `valueKind` ，并且不能转换数据， <xref:System.ArgumentException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="ec635-675">If the type of the specified `value` does not match the specified `valueKind`, and the data cannot be converted, <xref:System.ArgumentException> is thrown.</span></span> <span data-ttu-id="ec635-676">例如，可以将存储 <xref:System.Int64?displayProperty=nameWithType> 为 <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType> ，但前提是它的值小于的最大值 <xref:System.Int32?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-676">For example, you can store a <xref:System.Int64?displayProperty=nameWithType> as a <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType>, but only if its value is less than the maximum value of a <xref:System.Int32?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ec635-677">不能将单个字符串值存储为 <xref:Microsoft.Win32.RegistryValueKind.MultiString?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-677">You cannot store a single string value as a <xref:Microsoft.Win32.RegistryValueKind.MultiString?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec635-678">如果为或传递装箱值 <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType> <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType> ，则将使用固定区域性完成转换。</span><span class="sxs-lookup"><span data-stu-id="ec635-678">If boxed values are passed for <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType> or <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType>, the conversion is done using the invariant culture.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ec635-679">不要 <xref:Microsoft.Win32.RegistryKey> 以这样的方式公开对象：恶意程序可能会创建数千个无意义子项或键/值对。</span><span class="sxs-lookup"><span data-stu-id="ec635-679">Do not expose <xref:Microsoft.Win32.RegistryKey> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</span></span> <span data-ttu-id="ec635-680">例如，不允许调用方输入任意密钥或值。</span><span class="sxs-lookup"><span data-stu-id="ec635-680">For example, do not allow callers to enter arbitrary keys or values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec635-681">在 Windows 98 和 Windows Millennium Edition 中，注册表不是 Unicode，并且并非所有 Unicode 字符对于所有代码页都有效。</span><span class="sxs-lookup"><span data-stu-id="ec635-681">On Windows 98 and Windows Millennium Edition the registry is not Unicode, and not all Unicode characters are valid for all code pages.</span></span> <span data-ttu-id="ec635-682">对于当前代码页无效的 Unicode 字符被替换为最佳可用匹配项。</span><span class="sxs-lookup"><span data-stu-id="ec635-682">A Unicode character that is invalid for the current code page is replaced by the best available match.</span></span> <span data-ttu-id="ec635-683">不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="ec635-683">No exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-684">下面的代码示例创建一个测试键，并使用 <xref:Microsoft.Win32.RegistryKey.SetValue%2A> 方法存储多个值，并为每个值指定注册表数据类型。</span><span class="sxs-lookup"><span data-stu-id="ec635-684">The following code example creates a test key and uses the <xref:Microsoft.Win32.RegistryKey.SetValue%2A> method to store several values, specifying the registry data type for each value.</span></span> <span data-ttu-id="ec635-685">然后，该示例将读取名称/值对，并将其显示在控制台中，方法是使用 <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> 方法来显示相应的注册表数据类型。</span><span class="sxs-lookup"><span data-stu-id="ec635-685">The example then reads the name/value pairs and displays them to the console, using the <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> method to display the corresponding registry data types.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryValueKind/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec635-686"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-686"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec635-687"><paramref name="value" /> 的类型与 <paramref name="valueKind" /> 指定的注册表数据类型不匹配，因此，未能正确转换该数据。</span><span class="sxs-lookup"><span data-stu-id="ec635-687">The type of <paramref name="value" /> did not match the registry data type specified by <paramref name="valueKind" />, therefore the data could not be converted properly.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-688">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-688">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-689"><see cref="T:Microsoft.Win32.RegistryKey" /> 只读，因此无法写入；例如，项不是用写访问权限打开的。</span><span class="sxs-lookup"><span data-stu-id="ec635-689">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and cannot be written to; for example, the key has not been opened with write access.</span></span>  
  
<span data-ttu-id="ec635-690">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec635-690">-or-</span></span> 
<span data-ttu-id="ec635-691"><see cref="T:Microsoft.Win32.RegistryKey" /> 对象表示根级别节点，操作系统为 Windows Millennium Edition 或 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="ec635-691">The <see cref="T:Microsoft.Win32.RegistryKey" /> object represents a root-level node, and the operating system is Windows Millennium Edition or Windows 98.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-692">用户没有创建或修改注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-692">The user does not have the permissions required to create or modify registry keys.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec635-693"><see cref="T:Microsoft.Win32.RegistryKey" /> 对象表示根级别节点，操作系统为 Windows 2000、Windows XP 或 Windows Server 2003。</span><span class="sxs-lookup"><span data-stu-id="ec635-693">The <see cref="T:Microsoft.Win32.RegistryKey" /> object represents a root-level node, and the operating system is Windows 2000, Windows XP, or Windows Server 2003.</span></span></exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValueKind(System.String)" />
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetValue(System.String)" />
        <altmember cref="P:Microsoft.Win32.RegistryKey.ValueCount" />
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
      </Docs>
    </Member>
    <Member MemberName="SubKeyCount">
      <MemberSignature Language="C#" Value="public int SubKeyCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubKeyCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.RegistryKey.SubKeyCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubKeyCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SubKeyCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SubKeyCount : int" Usage="Microsoft.Win32.RegistryKey.SubKeyCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec635-694">检索当前项的子项计数。</span><span class="sxs-lookup"><span data-stu-id="ec635-694">Retrieves the count of subkeys of the current key.</span></span></summary>
        <value><span data-ttu-id="ec635-695">当前项的子项的数目。</span><span class="sxs-lookup"><span data-stu-id="ec635-695">The number of subkeys of the current key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-696">此属性不会以递归方式计算名称。</span><span class="sxs-lookup"><span data-stu-id="ec635-696">This property does not recursively count names.</span></span> <span data-ttu-id="ec635-697">它仅返回从中调用的基级别的名称计数。</span><span class="sxs-lookup"><span data-stu-id="ec635-697">It only returns the count of names on the base level from which it was called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-698">此代码示例是为类提供的更大示例的一部分 <xref:Microsoft.Win32.RegistryKey> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-698">This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#2)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#2)]
 [!code-vb[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-699">用户没有该项的读取权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-699">The user does not have read permission for the key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-700">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-700">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-701">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-701">The user does not have the necessary registry rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec635-702">发生系统错误，例如，当前项已被删除。</span><span class="sxs-lookup"><span data-stu-id="ec635-702">A system error occurred, for example the current key has been deleted.</span></span></exception>
        <altmember cref="M:Microsoft.Win32.RegistryKey.GetSubKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="registryKey.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec635-703">对当前密钥执行 <see cref="M:Microsoft.Win32.RegistryKey.Close" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-703">Performs a <see cref="M:Microsoft.Win32.RegistryKey.Close" /> on the current key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="ec635-704">此方法与调用的效果相同 <xref:Microsoft.Win32.RegistryKey.Close%2A> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-704">This method has the same effect as calling <xref:Microsoft.Win32.RegistryKey.Close%2A>.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.RegistryKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="registryKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec635-705">检索此项的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="ec635-705">Retrieves a string representation of this key.</span></span></summary>
        <returns><span data-ttu-id="ec635-706">表示此项的字符串。</span><span class="sxs-lookup"><span data-stu-id="ec635-706">A string representing the key.</span></span> <span data-ttu-id="ec635-707">如果指定的项无效（找不到），则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-707">If the specified key is invalid (cannot be found) then <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-708">返回值包括指定键的注册表路径和该键的十六进制值。</span><span class="sxs-lookup"><span data-stu-id="ec635-708">The return value includes the registry path of the specified key and the hexadecimal value for the key.</span></span> <span data-ttu-id="ec635-709">注册表路径包括指定键的绝对根，始终从注册表的某个基项开始，例如 HKEY_LOCAL_MACHINE。</span><span class="sxs-lookup"><span data-stu-id="ec635-709">The registry path includes the absolute root of the specified key, always starts at one of the base keys for the registry, for example, HKEY_LOCAL_MACHINE.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-710">此代码示例是为类提供的更大示例的一部分 <xref:Microsoft.Win32.RegistryKey> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-710">This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#4)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#4)]
 [!code-vb[Microsoft.Win32.RegistryKey2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-711">访问的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-711">The <see cref="T:Microsoft.Win32.RegistryKey" /> being accessed is closed (closed keys cannot be accessed).</span></span></exception>
        <altmember cref="P:Microsoft.Win32.RegistryKey.Name" />
      </Docs>
    </Member>
    <Member MemberName="ValueCount">
      <MemberSignature Language="C#" Value="public int ValueCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ValueCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.RegistryKey.ValueCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ValueCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueCount : int" Usage="Microsoft.Win32.RegistryKey.ValueCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec635-712">检索项中值的计数。</span><span class="sxs-lookup"><span data-stu-id="ec635-712">Retrieves the count of values in the key.</span></span></summary>
        <value><span data-ttu-id="ec635-713">项中的名称/值对的数目。</span><span class="sxs-lookup"><span data-stu-id="ec635-713">The number of name/value pairs in the key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-714">每个注册表项都有一个默认值，该默认值不与任何名称关联。</span><span class="sxs-lookup"><span data-stu-id="ec635-714">Each registry key has a default value that is not associated with any name.</span></span> <span data-ttu-id="ec635-715">通过使用 <xref:Microsoft.Win32.RegistryKey.SetValue%2A> 方法并为指定 `null` 或空字符串 ( "" ) ，可以设置此未命名的值 `name` 。</span><span class="sxs-lookup"><span data-stu-id="ec635-715">This unnamed value can be set by using the <xref:Microsoft.Win32.RegistryKey.SetValue%2A> method and specifying either `null` or the empty string ("") for `name`.</span></span> <span data-ttu-id="ec635-716">如果从未设置默认值，则它不会影响属性返回的总数 <xref:Microsoft.Win32.RegistryKey.ValueCount%2A> ; 但是，在设置后，它将始终计数。</span><span class="sxs-lookup"><span data-stu-id="ec635-716">If the default value has never been set, it does not contribute to the total count returned by the <xref:Microsoft.Win32.RegistryKey.ValueCount%2A> property; once it has been set, however, it is always counted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec635-717">此代码示例是为类提供的更大示例的一部分 <xref:Microsoft.Win32.RegistryKey> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-717">This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.</span></span>  
  
 [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CPP/source.cpp#2)]
 [!code-csharp[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/CS/source.cs#2)]
 [!code-vb[Microsoft.Win32.RegistryKey2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.RegistryKey2/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec635-718">用户没有该项的读取权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-718">The user does not have read permission for the key.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ec635-719">要操作的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已关闭（无法访问关闭的项）。</span><span class="sxs-lookup"><span data-stu-id="ec635-719">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ec635-720">用户没有必需的注册表权限。</span><span class="sxs-lookup"><span data-stu-id="ec635-720">The user does not have the necessary registry rights.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ec635-721">发生系统错误，例如，当前项已被删除。</span><span class="sxs-lookup"><span data-stu-id="ec635-721">A system error occurred, for example the current key has been deleted.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryView View { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Win32.RegistryView View" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.RegistryKey.View" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property View As RegistryView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryView View { Microsoft::Win32::RegistryView get(); };" />
      <MemberSignature Language="F#" Value="member this.View : Microsoft.Win32.RegistryView" Usage="Microsoft.Win32.RegistryKey.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec635-722">获取用于创建注册表项的视图。</span><span class="sxs-lookup"><span data-stu-id="ec635-722">Gets the view that was used to create the registry key.</span></span></summary>
        <value><span data-ttu-id="ec635-723">用于创建注册表项的视图。</span><span class="sxs-lookup"><span data-stu-id="ec635-723">The view that was used to create the registry key.</span></span>  
  
<span data-ttu-id="ec635-724">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec635-724">-or-</span></span> 
 <span data-ttu-id="ec635-725">如果未使用视图，则为 <see cref="F:Microsoft.Win32.RegistryView.Default" />。</span><span class="sxs-lookup"><span data-stu-id="ec635-725"><see cref="F:Microsoft.Win32.RegistryView.Default" />, if no view was used.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec635-726">在64位版本的 Windows 上，将分别为32位和64位应用程序存储注册表部分。</span><span class="sxs-lookup"><span data-stu-id="ec635-726">On the 64-bit versions of Windows, portions of the registry are stored separately for 32-bit and 64-bit applications.</span></span> <span data-ttu-id="ec635-727">对于32位应用程序，有32位视图，适用于64位应用程序的64位视图。</span><span class="sxs-lookup"><span data-stu-id="ec635-727">There is a 32-bit view for 32-bit applications and a 64-bit view for 64-bit applications.</span></span>  
  
 <span data-ttu-id="ec635-728">不要假设视图始终与的实际视图相对应 <xref:Microsoft.Win32.RegistryKey> 。</span><span class="sxs-lookup"><span data-stu-id="ec635-728">Do not assume that the view always corresponds to the actual view of the <xref:Microsoft.Win32.RegistryKey>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
