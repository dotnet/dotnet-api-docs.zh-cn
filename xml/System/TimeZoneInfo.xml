<Type Name="TimeZoneInfo" FullName="System.TimeZoneInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="50253887102e2d11cb735910f81946b0dfc3726d" /><Meta Name="ms.sourcegitcommit" Value="48a49823f2bd31828886932c40e9e3a1e189b859" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/24/2020" /><Meta Name="ms.locfileid" Value="97765145" /></Metadata><TypeSignature Language="C#" Value="public sealed class TimeZoneInfo : IEquatable&lt;TimeZoneInfo&gt;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TimeZoneInfo extends System.Object implements class System.IEquatable`1&lt;class System.TimeZoneInfo&gt;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="DocId" Value="T:System.TimeZoneInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TimeZoneInfo&#xA;Implements IEquatable(Of TimeZoneInfo)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="C++ CLI" Value="public ref class TimeZoneInfo sealed : IEquatable&lt;TimeZoneInfo ^&gt;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="F#" Value="type TimeZoneInfo = class&#xA;    interface IEquatable&lt;TimeZoneInfo&gt;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="C#" Value="public sealed class TimeZoneInfo : IEquatable&lt;TimeZoneInfo&gt;, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TimeZoneInfo extends System.Object implements class System.IEquatable`1&lt;class System.TimeZoneInfo&gt;, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TimeZoneInfo&#xA;Implements IDeserializationCallback, IEquatable(Of TimeZoneInfo), ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class TimeZoneInfo sealed : IEquatable&lt;TimeZoneInfo ^&gt;, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type TimeZoneInfo = class&#xA;    interface IEquatable&lt;TimeZoneInfo&gt;&#xA;    interface IDeserializationCallback&#xA;    interface ISerializable" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type TimeZoneInfo = class&#xA;    interface IEquatable&lt;TimeZoneInfo&gt;&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback" FrameworkAlternate="netcore-2.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type TimeZoneInfo = class&#xA;    interface IDeserializationCallback&#xA;    interface ISerializable&#xA;    interface IEquatable&lt;TimeZoneInfo&gt;" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit TimeZoneInfo extends System.Object implements class System.IEquatable`1&lt;class System.TimeZoneInfo&gt;, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
    <TypeForwarding From="System.Core" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Core" FromVersion="4.0.0.0" To="mscorlib" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
    <TypeForwarding From="System.Core" FromVersion="2.0.5.0" To="mscorlib" ToVersion="2.0.5.0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="xamarinmac-3.0">
      <InterfaceName>System.IEquatable&lt;System.TimeZoneInfo&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=2.0.5.0, Culture=Neutral, PublicKeyToken=7cec85d7bea7798e")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=2.0.5.0, Culture=Neutral, PublicKeyToken=7cec85d7bea7798e")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0ae5c-101">表示世界上的任何时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-101">Represents any time zone in the world.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-102">时区指使用相同时间的某个地理区域。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-102">A time zone is a geographical region in which the same time is used.</span></span>  
  
 <span data-ttu-id="0ae5c-103"><xref:System.TimeZoneInfo>类在类上提供了重大增强功能 <xref:System.TimeZone> ，只提供有限的功能。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-103">The <xref:System.TimeZoneInfo> class offers significant enhancements over the <xref:System.TimeZone> class, which provides only limited functionality.</span></span>  
  
 <span data-ttu-id="0ae5c-104"><xref:System.TimeZone>类仅识别本地时区，可以在协调世界时 (UTC) 和本地时间之间转换时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-104">The <xref:System.TimeZone> class recognizes only the local time zone, and can convert times between Coordinated Universal Time (UTC) and local time.</span></span> <span data-ttu-id="0ae5c-105"><xref:System.TimeZoneInfo>对象可以表示任意时区，类的方法 <xref:System.TimeZoneInfo> 可用于将一个时区中的时间转换为任何其他时区中的相应时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-105">A <xref:System.TimeZoneInfo> object can represent any time zone, and methods of the <xref:System.TimeZoneInfo> class can be used to convert the time in one time zone to the corresponding time in any other time zone.</span></span> <span data-ttu-id="0ae5c-106">类的成员 <xref:System.TimeZoneInfo> 支持以下操作：</span><span class="sxs-lookup"><span data-stu-id="0ae5c-106">The members of the <xref:System.TimeZoneInfo> class support the following operations:</span></span>  
  
-   <span data-ttu-id="0ae5c-107">检索已由操作系统定义的时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-107">Retrieving a time zone that is already defined by the operating system.</span></span>  
  
-   <span data-ttu-id="0ae5c-108">枚举系统上可用的时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-108">Enumerating the time zones that are available on a system.</span></span>  
  
-   <span data-ttu-id="0ae5c-109">在不同时区之间转换时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-109">Converting times between different time zones.</span></span>  
  
-   <span data-ttu-id="0ae5c-110">正在创建操作系统尚未定义的新时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-110">Creating a new time zone that is not already defined by the operating system.</span></span>  
  
-   <span data-ttu-id="0ae5c-111">序列化时区供以后检索。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-111">Serializing a time zone for later retrieval.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ae5c-112">类的实例 <xref:System.TimeZoneInfo> 是不可变的。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-112">An instance of the <xref:System.TimeZoneInfo> class is immutable.</span></span> <span data-ttu-id="0ae5c-113">在实例化对象后，不能修改其值。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-113">Once an object has been instantiated, its values cannot be modified.</span></span>  
  
 <span data-ttu-id="0ae5c-114">不能 <xref:System.TimeZoneInfo> 使用关键字实例化对象 `new` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-114">You cannot instantiate a <xref:System.TimeZoneInfo> object using the `new` keyword.</span></span> <span data-ttu-id="0ae5c-115">相反，您必须调用 <xref:System.TimeZoneInfo> 下表中显示的类的静态成员之一。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-115">Instead, you must call one of the static members of the <xref:System.TimeZoneInfo> class shown in the following table.</span></span>  
  
|<span data-ttu-id="0ae5c-116">静态成员名称</span><span class="sxs-lookup"><span data-stu-id="0ae5c-116">Static member name</span></span>|<span data-ttu-id="0ae5c-117">说明</span><span class="sxs-lookup"><span data-stu-id="0ae5c-117">Description</span></span>|  
|------------------------|-----------------|  
|<span data-ttu-id="0ae5c-118"><xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="0ae5c-118"><xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method</span></span>|<span data-ttu-id="0ae5c-119">从应用程序提供的数据创建自定义时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-119">Creates a custom time zone from application-supplied data.</span></span>|  
|<span data-ttu-id="0ae5c-120"><xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="0ae5c-120"><xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method</span></span>|<span data-ttu-id="0ae5c-121">根据时区的标识符实例化时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-121">Instantiates a time zone based on its identifier.</span></span>|  
|<span data-ttu-id="0ae5c-122"><xref:System.TimeZoneInfo.FromSerializedString%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="0ae5c-122"><xref:System.TimeZoneInfo.FromSerializedString%2A> method</span></span>|<span data-ttu-id="0ae5c-123">反序列化一个字符串值，以重新创建以前序列化的 <xref:System.TimeZoneInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-123">Deserializes a string value to re-create a previously serialized <xref:System.TimeZoneInfo> object.</span></span>|  
|<span data-ttu-id="0ae5c-124"><xref:System.TimeZoneInfo.GetSystemTimeZones%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="0ae5c-124"><xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method</span></span>|<span data-ttu-id="0ae5c-125">返回 <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> <xref:System.TimeZoneInfo> 对象的可枚举对象，该对象表示本地系统上可用的所有时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-125">Returns an enumerable <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.TimeZoneInfo> objects that represents all time zones that are available on the local system.</span></span>|  
|<span data-ttu-id="0ae5c-126"><xref:System.TimeZoneInfo.Local%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="0ae5c-126"><xref:System.TimeZoneInfo.Local%2A> property</span></span>|<span data-ttu-id="0ae5c-127">实例化 <xref:System.TimeZoneInfo> 表示本地时区的对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-127">Instantiates a <xref:System.TimeZoneInfo> object that represents the local time zone.</span></span>|  
|<span data-ttu-id="0ae5c-128"><xref:System.TimeZoneInfo.Utc%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="0ae5c-128"><xref:System.TimeZoneInfo.Utc%2A> property</span></span>|<span data-ttu-id="0ae5c-129">实例化 <xref:System.TimeZoneInfo> 表示 UTC 时区的对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-129">Instantiates a <xref:System.TimeZoneInfo> object that represents the UTC zone.</span></span>|  
  
 <span data-ttu-id="0ae5c-130">你可以使用 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> 方法创建一个时区，该时区未在 Windows 系统上的本地系统注册表中或 Linux 或 macOS 上 [ICU 库](http://userguide.icu-project.org/datetime/timezone) 中的时区类定义。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-130">You can use the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method to create a time zone that is not defined in the local system registry on Windows systems or by the time zone classes in the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux or macOS.</span></span> <span data-ttu-id="0ae5c-131">然后，可以使用属性将时区 <xref:System.TimeZoneInfo.ToSerializedString%2A> 对象的信息另存为字符串，该字符串可以存储在应用程序可访问的某种形式中。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-131">You can then use the <xref:System.TimeZoneInfo.ToSerializedString%2A> property to save the time zone object's information as a string, which can be stored in some form that is accessible to the application.</span></span> <span data-ttu-id="0ae5c-132">您可以使用 <xref:System.TimeZoneInfo.FromSerializedString%2A> 方法将序列化的字符串转换回 <xref:System.TimeZoneInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-132">You can use the <xref:System.TimeZoneInfo.FromSerializedString%2A> method to convert a serialized string back to a <xref:System.TimeZoneInfo> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BaseUtcOffset">
      <MemberSignature Language="C#" Value="public TimeSpan BaseUtcOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan BaseUtcOffset" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.BaseUtcOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseUtcOffset As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan BaseUtcOffset { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseUtcOffset : TimeSpan" Usage="System.TimeZoneInfo.BaseUtcOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ae5c-133">获取当前时区的标准时间与协调世界时 (UTC) 之间的时差。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-133">Gets the time difference between the current time zone's standard time and Coordinated Universal Time (UTC).</span></span></summary>
        <value><span data-ttu-id="0ae5c-134">一个对象，它指示当前时区的标准时间与协调世界时 (UTC) 之间的时差。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-134">An object that indicates the time difference between the current time zone's standard time and Coordinated Universal Time (UTC).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-135">此属性返回的时间跨度 <xref:System.TimeZoneInfo.BaseUtcOffset%2A> 范围为14小时 (，该时区为早于协调世界时 (UTC) # A3 到-14 小时 (，时区为14小时) 后的时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-135">The time span returned by the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property can range from 14 hours (for a time zone that is 14 hours ahead of Coordinated Universal Time (UTC)) to -14 hours (for a time zone that is 14 hours behind UTC).</span></span> <span data-ttu-id="0ae5c-136">早于 UTC 的时区具有正偏移量;UTC 后的时区具有负偏移量。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-136">Time zones that are ahead of UTC have a positive offset; time zones that are behind UTC have a negative offset.</span></span>  
  
 <span data-ttu-id="0ae5c-137"><xref:System.TimeZoneInfo.BaseUtcOffset%2A>该值表示为整数分钟数。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-137">The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> value is represented as a whole number of minutes.</span></span> <span data-ttu-id="0ae5c-138">它不能包含分钟的小数部分。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-138">It cannot include a fractional number of minutes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ae5c-139">由于 <xref:System.TimeZoneInfo.BaseUtcOffset%2A> 是对象的一个属性，而不是对象的一个属性 <xref:System.TimeZoneInfo> <xref:System.TimeZoneInfo.AdjustmentRule> ，因此类将 <xref:System.TimeZoneInfo> 单个偏移量从 UTC 应用于时区的所有调整。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-139">Because <xref:System.TimeZoneInfo.BaseUtcOffset%2A> is a property of the <xref:System.TimeZoneInfo> object rather than the <xref:System.TimeZoneInfo.AdjustmentRule> object, the <xref:System.TimeZoneInfo> class applies a single offset from UTC to all of a time zone's adjustments.</span></span> <span data-ttu-id="0ae5c-140">若要反映修改了其与 UTC 的偏移量的时区，必须使用方法创建一个新时区 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-140">To reflect a time zone that has modified its offset from UTC, you must create a new time zone using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span>  
  
 <span data-ttu-id="0ae5c-141">此 <xref:System.TimeZoneInfo.BaseUtcOffset%2A> 属性 <xref:System.TimeZoneInfo.GetUtcOffset%2A> 在以下方面与方法不同：</span><span class="sxs-lookup"><span data-stu-id="0ae5c-141">The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property differs from the <xref:System.TimeZoneInfo.GetUtcOffset%2A> method in the following ways:</span></span>  
  
-   <span data-ttu-id="0ae5c-142"><xref:System.TimeZoneInfo.BaseUtcOffset%2A>属性返回 utc 与时区的标准时间之差; 该 <xref:System.TimeZoneInfo.GetUtcOffset%2A> 方法返回 utc 与时区在特定时间点的时间之间的差异。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-142">The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property returns the difference between UTC and the time zone's standard time; the <xref:System.TimeZoneInfo.GetUtcOffset%2A> method returns the difference between UTC and the time zone's time at a particular point in time.</span></span>  
  
-   <span data-ttu-id="0ae5c-143"><xref:System.TimeZoneInfo.GetUtcOffset%2A>方法反映了时区的任何调整规则的应用; <xref:System.TimeZoneInfo.BaseUtcOffset%2A> 属性不会。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-143">The <xref:System.TimeZoneInfo.GetUtcOffset%2A> method reflects the application of any adjustment rules to the time zone; the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property does not.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-144">下面的示例使用 <xref:System.TimeZoneInfo.BaseUtcOffset%2A> 属性显示本地时间与协调世界时 (UTC) 之间的差值。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-144">The following example uses the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property to display the difference between the local time and Coordinated Universal Time (UTC).</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#1)]
 [!code-vb[System.TimeZone2.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.TimeZoneInfo.GetUtcOffset" />
      </Docs>
    </Member>
    <Member MemberName="ClearCachedData">
      <MemberSignature Language="C#" Value="public static void ClearCachedData ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearCachedData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ClearCachedData" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearCachedData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearCachedData();" />
      <MemberSignature Language="F#" Value="static member ClearCachedData : unit -&gt; unit" Usage="System.TimeZoneInfo.ClearCachedData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0ae5c-145">清除已缓存的时区数据。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-145">Clears cached time zone data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-146">缓存的时区数据包括本地时区和协调世界时 (UTC) 区域中的数据。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-146">Cached time zone data includes data on the local time zone and the Coordinated Universal Time (UTC) zone.</span></span>  
  
 <span data-ttu-id="0ae5c-147">您可以调用 `ClearCachedData` 方法，以减少专用于应用程序的时区信息缓存的内存，或反映本地系统的时区已更改这一事实。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-147">You might call the `ClearCachedData` method to reduce the memory devoted to the application's cache of time zone information or to reflect the fact that the local system's time zone has changed.</span></span>  
  
 <span data-ttu-id="0ae5c-148">建议不要将引用存储到本地时区和 UTC 时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-148">Storing references to the local and UTC time zones is not recommended.</span></span> <span data-ttu-id="0ae5c-149">调用 `ClearCachedData` 方法后，这些对象变量将是未定义 <xref:System.TimeZoneInfo> 的对象，不再引用 <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> 或 <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-149">After the call to the `ClearCachedData` method, these object variables will be undefined <xref:System.TimeZoneInfo> objects that are no longer references to <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> or <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0ae5c-150">例如，在下面的代码中，对方法的第二次调用将 <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> 引发， <xref:System.ArgumentException> 因为该 `local` 变量将不再被视为相等 <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-150">For example, in the following code, the second call to the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> method throws an <xref:System.ArgumentException> because the `local` variable is no longer considered equal to <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.TimeZone2.BestPractices#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.BestPractices/cs/System.TimeZone2.BestPractices.cs#1)]
 [!code-vb[System.TimeZone2.BestPractices#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.BestPractices/vb/System.TimeZone2.BestPractices.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTime">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0ae5c-151">将时间转换为特定时区的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-151">Converts a time to the time in a particular time zone.</span></span></summary>
        <related type="Article" href="/dotnet/standard/datetime/converting-between-time-zones"><span data-ttu-id="0ae5c-152">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="0ae5c-152">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTime">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTime (DateTime dateTime, TimeZoneInfo destinationTimeZone);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTime(valuetype System.DateTime dateTime, class System.TimeZoneInfo destinationTimeZone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertTime (dateTime As DateTime, destinationTimeZone As TimeZoneInfo) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTime(DateTime dateTime, TimeZoneInfo ^ destinationTimeZone);" />
      <MemberSignature Language="F#" Value="static member ConvertTime : DateTime * TimeZoneInfo -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTime (dateTime, destinationTimeZone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" />
        <Parameter Name="destinationTimeZone" Type="System.TimeZoneInfo" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="0ae5c-153">要转换的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-153">The date and time to convert.</span></span></param>
        <param name="destinationTimeZone"><span data-ttu-id="0ae5c-154">要将 <paramref name="dateTime" /> 转换到的时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-154">The time zone to convert <paramref name="dateTime" /> to.</span></span></param>
        <summary><span data-ttu-id="0ae5c-155">将时间转换为特定时区的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-155">Converts a time to the time in a particular time zone.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-156">目标时区的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-156">The date and time in the destination time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-157">执行转换时，方法会 <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29> 应用时区中有效的任何调整规则 `destinationTimeZone` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-157">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.</span></span>  
  
 <span data-ttu-id="0ae5c-158">此方法的重载根据 <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> 参数的属性的值确定源时区，如下 `dateTime` <xref:System.DateTime.Kind%2A> 表所示。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-158">This overload of the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method determines the source time zone from the value of the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property, as the following table shows.</span></span>  
  
|<span data-ttu-id="0ae5c-159">Kind 属性值</span><span class="sxs-lookup"><span data-stu-id="0ae5c-159">Kind property value</span></span>|<span data-ttu-id="0ae5c-160">源时区</span><span class="sxs-lookup"><span data-stu-id="0ae5c-160">Source time zone</span></span>|<span data-ttu-id="0ae5c-161">方法行为</span><span class="sxs-lookup"><span data-stu-id="0ae5c-161">Method behavior</span></span>|  
|-------------------------|----------------------|---------------------|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<xref:System.TimeZoneInfo.Local%2A>|<span data-ttu-id="0ae5c-162">将本地时间转换为中的时间 `destinationTimeZone` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-162">Converts the local time to the time in `destinationTimeZone`.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<xref:System.TimeZoneInfo.Utc%2A>|<span data-ttu-id="0ae5c-163">将协调世界时 (UTC) 转换为中的时间 `destinationTimeZone` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-163">Converts Coordinated Universal Time (UTC) to the time in `destinationTimeZone`.</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-164">假定为 <xref:System.TimeZoneInfo.Local%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-164">Assumed to be <xref:System.TimeZoneInfo.Local%2A>.</span></span>|<span data-ttu-id="0ae5c-165">将本地时间转换为中的时间 `destinationTimeZone` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-165">Converts the local time to the time in `destinationTimeZone`.</span></span>|  
  
 <span data-ttu-id="0ae5c-166"><xref:System.DateTime.Kind%2A>返回的值的属性的设置如下 <xref:System.DateTime> 表所示。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-166">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table.</span></span>  
  
|<span data-ttu-id="0ae5c-167">条件</span><span class="sxs-lookup"><span data-stu-id="0ae5c-167">Condition</span></span>|<span data-ttu-id="0ae5c-168">返回的 Kind 属性值</span><span class="sxs-lookup"><span data-stu-id="0ae5c-168">Returned Kind property value</span></span>|  
|---------------|----------------------------------|  
|<span data-ttu-id="0ae5c-169">`destinationTimeZone` 为 <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-169">The `destinationTimeZone` is <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|  
|<span data-ttu-id="0ae5c-170">`destinationTimeZone` 为 <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-170">The `destinationTimeZone` is <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span>|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|  
|<span data-ttu-id="0ae5c-171">所有其他日期和时间值以及目标时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-171">All other date and time values and destination time zones.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|  
  
 <span data-ttu-id="0ae5c-172">如果参数的值 `dateTime` 是不明确的本地时间，则将其解释为标准时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-172">If the value of the `dateTime` parameter is an ambiguous local time, it is interpreted as a standard time.</span></span> <span data-ttu-id="0ae5c-173">如果 `dateTime` 参数是无效的本地时间，则此方法将引发 <xref:System.ArgumentException> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-173">If the `dateTime` parameter is an invalid local time, this method throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="0ae5c-174">如果的转换 `dateTime` 结果的日期和时间值早于 <xref:System.DateTime.MinValue?displayProperty=nameWithType> 或晚于 <xref:System.DateTime.MaxValue?displayProperty=nameWithType> ，则此方法将 <xref:System.DateTime.MinValue?displayProperty=nameWithType> 分别返回或 <xref:System.DateTime.MaxValue?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-174">If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue?displayProperty=nameWithType> or <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
 <span data-ttu-id="0ae5c-175">还可以通过调用和方法转换为 UTC 或从 UTC 转换 <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-175">You can also convert to or from UTC by calling the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> and <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-176">下面的示例将日期和时间值的数组转换为美国和加拿大东部时区的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-176">The following example converts an array of date and time values to times in the Eastern Time zone of the U.S. and Canada.</span></span> <span data-ttu-id="0ae5c-177">它显示源时区依赖于 <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> 源值的属性 <xref:System.DateTime> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-177">It shows that the source time zone depends on the <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> property of the source <xref:System.DateTime> value.</span></span> <span data-ttu-id="0ae5c-178">它还说明了 <xref:System.TimeZoneInfo.ConvertTime%2A> 方法会考虑时区调整，因为时区调整会在上午2:00 的源时区和目标时区进行调整。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-178">It also illustrates that the <xref:System.TimeZoneInfo.ConvertTime%2A> method takes time zone adjustments into account, because a time zone adjustment occurs in both the source and destination time zones at 2:00 A.M.</span></span> <span data-ttu-id="0ae5c-179">2010年11月7日。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-179">on November 7, 2010.</span></span>  
  
 [!code-csharp[System.TimeZoneInfo.ConvertTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timezoneinfo.converttime/cs/converttime1.cs#1)]
 [!code-vb[System.TimeZoneInfo.ConvertTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timezoneinfo.converttime/vb/converttime1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ae5c-180"><paramref name="dateTime" /> 参数值表示无效的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-180">The value of the <paramref name="dateTime" /> parameter represents an invalid time.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0ae5c-181"><paramref name="destinationTimeZone" /> 参数的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-181">The value of the <paramref name="destinationTimeZone" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="/dotnet/standard/datetime/converting-between-time-zones"><span data-ttu-id="0ae5c-182">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="0ae5c-182">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTime">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ConvertTime (DateTimeOffset dateTimeOffset, TimeZoneInfo destinationTimeZone);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ConvertTime(valuetype System.DateTimeOffset dateTimeOffset, class System.TimeZoneInfo destinationTimeZone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertTime (dateTimeOffset As DateTimeOffset, destinationTimeZone As TimeZoneInfo) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ConvertTime(DateTimeOffset dateTimeOffset, TimeZoneInfo ^ destinationTimeZone);" />
      <MemberSignature Language="F#" Value="static member ConvertTime : DateTimeOffset * TimeZoneInfo -&gt; DateTimeOffset" Usage="System.TimeZoneInfo.ConvertTime (dateTimeOffset, destinationTimeZone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" />
        <Parameter Name="destinationTimeZone" Type="System.TimeZoneInfo" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="0ae5c-183">要转换的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-183">The date and time to convert.</span></span></param>
        <param name="destinationTimeZone"><span data-ttu-id="0ae5c-184">要将 <paramref name="dateTime" /> 转换到的时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-184">The time zone to convert <paramref name="dateTime" /> to.</span></span></param>
        <summary><span data-ttu-id="0ae5c-185">将时间转换为特定时区的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-185">Converts a time to the time in a particular time zone.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-186">目标时区的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-186">The date and time in the destination time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-187">执行转换时，方法会 <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29> 应用时区中有效的任何调整规则 `destinationTimeZone` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-187">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.</span></span>  
  
 <span data-ttu-id="0ae5c-188">此重载不同于方法的其他重载， <xref:System.TimeZoneInfo.ConvertTime%2A> 方法是接受 <xref:System.DateTimeOffset> 值作为其第一个参数。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-188">This overload differs from the other overloads of the <xref:System.TimeZoneInfo.ConvertTime%2A> method by accepting a <xref:System.DateTimeOffset> value as its first parameter.</span></span> <span data-ttu-id="0ae5c-189">这会将日期和时间标识为协调世界时 (UTC) 而不是特定时区中的日期和时间的偏移量。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-189">This identifies the date and time as an offset from Coordinated Universal Time (UTC) rather than as the date and time in a particular time zone.</span></span> <span data-ttu-id="0ae5c-190">因此，该 `dateTimeOffset` 参数不能表示不明确的时间或无效的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-190">As a result, the `dateTimeOffset` parameter cannot represent either an ambiguous time or an invalid time.</span></span>  
  
 <span data-ttu-id="0ae5c-191">在将 `dateTimeOffset` 值转换为目标时区中的时间时，此方法会考虑目标时区中任何有效的调整规则。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-191">In converting the `dateTimeOffset` value to the time in the destination time zone, this method takes into account any adjustment rules in effect in the destination time zone.</span></span>  
  
 <span data-ttu-id="0ae5c-192">如果的转换 `dateTimeOffset` 结果的日期和时间值早于 <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> 或晚于 <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType> ，则此方法将 <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> 分别返回或 <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-192">If the conversion of `dateTimeOffset` results in a date and time value that is earlier than <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> or <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-193">下面的示例将值数组转换 <xref:System.DateTimeOffset> 为美国和加拿大东部时区的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-193">The following example converts an array of <xref:System.DateTimeOffset> values to times in the Eastern Time zone of the U.S. and Canada.</span></span> <span data-ttu-id="0ae5c-194">它阐释了 <xref:System.TimeZoneInfo.ConvertTime%2A> 方法会考虑时区调整，因为在凌晨2:00 的源时区和目标时区都发生了时区调整。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-194">It illustrates that the <xref:System.TimeZoneInfo.ConvertTime%2A> method takes time zone adjustments into account, because a time zone adjustment occurs in both the source and destination time zones at 2:00 A.M.</span></span> <span data-ttu-id="0ae5c-195">2010年11月7日。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-195">on November 7, 2010.</span></span>  
  
 [!code-csharp[System.TimeZoneInfo.ConvertTime#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timezoneinfo.converttime/cs/converttime2.cs#2)]
 [!code-vb[System.TimeZoneInfo.ConvertTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timezoneinfo.converttime/vb/converttime2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0ae5c-196"><paramref name="destinationTimeZone" /> 参数的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-196">The value of the <paramref name="destinationTimeZone" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="/dotnet/standard/datetime/converting-between-time-zones"><span data-ttu-id="0ae5c-197">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="0ae5c-197">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTime">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTime (DateTime dateTime, TimeZoneInfo sourceTimeZone, TimeZoneInfo destinationTimeZone);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTime(valuetype System.DateTime dateTime, class System.TimeZoneInfo sourceTimeZone, class System.TimeZoneInfo destinationTimeZone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertTime (dateTime As DateTime, sourceTimeZone As TimeZoneInfo, destinationTimeZone As TimeZoneInfo) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTime(DateTime dateTime, TimeZoneInfo ^ sourceTimeZone, TimeZoneInfo ^ destinationTimeZone);" />
      <MemberSignature Language="F#" Value="static member ConvertTime : DateTime * TimeZoneInfo * TimeZoneInfo -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTime (dateTime, sourceTimeZone, destinationTimeZone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceTimeZone" Type="System.TimeZoneInfo" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="destinationTimeZone" Type="System.TimeZoneInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="0ae5c-198">要转换的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-198">The date and time to convert.</span></span></param>
        <param name="sourceTimeZone"><span data-ttu-id="0ae5c-199"><paramref name="dateTime" /> 的时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-199">The time zone of <paramref name="dateTime" />.</span></span></param>
        <param name="destinationTimeZone"><span data-ttu-id="0ae5c-200">要将 <paramref name="dateTime" /> 转换到的时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-200">The time zone to convert <paramref name="dateTime" /> to.</span></span></param>
        <summary><span data-ttu-id="0ae5c-201">将时间从一个时区转换到另一个时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-201">Converts a time from one time zone to another.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-202">目标时区中与源时区中的 <paramref name="dateTime" /> 参数对应的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-202">The date and time in the destination time zone that corresponds to the <paramref name="dateTime" /> parameter in the source time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-203">执行转换时，方法会 <xref:System.TimeZoneInfo.ConvertTime%2A> 应用时区中有效的任何调整规则 `destinationTimeZone` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-203">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTime%2A> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.</span></span>  
  
 <span data-ttu-id="0ae5c-204">参数的属性值 <xref:System.DateTime.Kind%2A> `dateTime` 必须对应于 `sourceTimeZone` 参数，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-204">The value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter must correspond to the `sourceTimeZone` parameter, as the following table shows.</span></span>  
  
|<span data-ttu-id="0ae5c-205">DateTime 值</span><span class="sxs-lookup"><span data-stu-id="0ae5c-205">DateTime.Kind value</span></span>|<span data-ttu-id="0ae5c-206">sourceTimeZone 值</span><span class="sxs-lookup"><span data-stu-id="0ae5c-206">sourceTimeZone value</span></span>|<span data-ttu-id="0ae5c-207">方法行为</span><span class="sxs-lookup"><span data-stu-id="0ae5c-207">Method behavior</span></span>|  
|-------------------------|--------------------------|---------------------|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-208">等于 <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-208">Equals <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="0ae5c-209">转换 `dateTime` 为目标时区的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-209">Converts `dateTime` to the destination time zone's time.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-210">Does not equal <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-210">Does not equal <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="0ae5c-211">引发 <xref:System.ArgumentException> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-211">Throws an <xref:System.ArgumentException>.</span></span>|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-212">等于 <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-212">Equals <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="0ae5c-213">转换 `dateTime` 为目标时区的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-213">Converts `dateTime` to the destination time zone's time.</span></span>|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-214">Does not equal <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-214">Does not equal <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="0ae5c-215">引发 <xref:System.ArgumentException> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-215">Throws an <xref:System.ArgumentException>.</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-216">随时.</span><span class="sxs-lookup"><span data-stu-id="0ae5c-216">Any.</span></span>|<span data-ttu-id="0ae5c-217">转换 `dateTime` 为目标时区的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-217">Converts `dateTime` to the destination time zone's time.</span></span>|  
  
 <span data-ttu-id="0ae5c-218">还可以通过调用和方法，在协调世界时 (UTC) 转换为 <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> 或 <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-218">You can also convert to or from Coordinated Universal Time (UTC) by calling the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> and <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> methods.</span></span>  
  
 <span data-ttu-id="0ae5c-219"><xref:System.DateTime.Kind%2A>返回的值的属性的设置如下 <xref:System.DateTime> 表所示。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-219">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table.</span></span>  
  
|<span data-ttu-id="0ae5c-220">条件</span><span class="sxs-lookup"><span data-stu-id="0ae5c-220">Condition</span></span>|<span data-ttu-id="0ae5c-221">返回的 Kind 属性值</span><span class="sxs-lookup"><span data-stu-id="0ae5c-221">Returned Kind property value</span></span>|  
|---------------|----------------------------------|  
|<span data-ttu-id="0ae5c-222">`destinationTimeZone` 参数为 <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-222">The `destinationTimeZone` argument is <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|  
|<span data-ttu-id="0ae5c-223">`destinationTimeZone` 参数为 <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-223">The `destinationTimeZone` argument is <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span>|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|  
|<span data-ttu-id="0ae5c-224">所有其他日期和时间值、源时区和目标时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-224">All other date and time values, source time zones, and destination time zones.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|  
  
 <span data-ttu-id="0ae5c-225">如果参数的值 `dateTime` 是源时区中不明确的时间，则将其解释为标准时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-225">If the value of the `dateTime` parameter is an ambiguous time in the source time zone, it is interpreted as a standard time.</span></span> <span data-ttu-id="0ae5c-226">如果 `dateTime` 参数是源时区中的无效时间，则此方法将引发 <xref:System.ArgumentException> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-226">If the `dateTime` parameter is an invalid time in the source time zone, this method throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="0ae5c-227">如果的转换 `dateTime` 结果的日期和时间值早于 <xref:System.DateTime.MinValue?displayProperty=nameWithType> 或晚于 <xref:System.DateTime.MaxValue?displayProperty=nameWithType> ，则此方法将 <xref:System.DateTime.MinValue?displayProperty=nameWithType> 分别返回或 <xref:System.DateTime.MaxValue?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-227">If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue?displayProperty=nameWithType> or <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
 <span data-ttu-id="0ae5c-228"><xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29> <xref:System.ArgumentException> 如果 <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> 参数的属性 `dateTime` 为， <xref:System.DateTimeKind.Local?displayProperty=nameWithType> 但该 `sourceTimeZone` 参数不 <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> 是，则该方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-228">The <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29> method throws an <xref:System.ArgumentException> exception if the <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> property of the `dateTime` argument is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> but the `sourceTimeZone` argument is not <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0ae5c-229">若要确定源时区是本地时区还是通用时区，该方法将测试引用相等性，而不是测试与方法的值相等性 <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-229">To determine whether the source time zone is the local time zone or the universal time zone, the method tests for reference equality instead of testing for value equality with the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29> method.</span></span> <span data-ttu-id="0ae5c-230">请注意， <xref:System.TimeZoneInfo> 表示本地时区的对象和通过调用方法检索到的对象没有 <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> 与的引用相等性 <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-230">Note that <xref:System.TimeZoneInfo> objects that represent the local time zone and that are retrieved by calling the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method do not have referential equality with <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0ae5c-231">此外， <xref:System.TimeZoneInfo> 通过循环访问由方法返回的集合来检索的对象 <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> 不具有或的引用相等性 <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-231">Furthermore, <xref:System.TimeZoneInfo> objects that represent the local or universal time zone and that are retrieved by iterating the collection returned by the <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method do not have referential equality with <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> or <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0ae5c-232">作为替代方法，可以调用 <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-232">As an alternative, you can call the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-233">下面的示例演示如何使用方法将 <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29> 夏威夷标准时间转换为本地时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-233">The following example illustrates the use of the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29> method to convert from Hawaiian Standard Time to local time.</span></span>  
  
 [!code-csharp[System.TimeZone2.Concepts#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Concepts/CS/TimeZone2Concepts.cs#9)]
 [!code-vb[System.TimeZone2.Concepts#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Concepts/VB/TimeZone2Concepts.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ae5c-234"><paramref name="dateTime" /> 参数的 <see cref="P:System.DateTime.Kind" /> 属性是 <see cref="F:System.DateTimeKind.Local" />，但 <paramref name="sourceTimeZone" /> 参数不等于 <see cref="F:System.DateTimeKind.Local" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-234">The <see cref="P:System.DateTime.Kind" /> property of the <paramref name="dateTime" /> parameter is <see cref="F:System.DateTimeKind.Local" />, but the <paramref name="sourceTimeZone" /> parameter does not equal <see cref="F:System.DateTimeKind.Local" />.</span></span>  
  
<span data-ttu-id="0ae5c-235">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0ae5c-235">-or-</span></span> 
<span data-ttu-id="0ae5c-236"><paramref name="dateTime" /> 参数的 <see cref="P:System.DateTime.Kind" /> 属性是 <see cref="F:System.DateTimeKind.Utc" />，但 <paramref name="sourceTimeZone" /> 参数不等于 <see cref="P:System.TimeZoneInfo.Utc" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-236">The <see cref="P:System.DateTime.Kind" /> property of the <paramref name="dateTime" /> parameter is <see cref="F:System.DateTimeKind.Utc" />, but the <paramref name="sourceTimeZone" /> parameter does not equal <see cref="P:System.TimeZoneInfo.Utc" />.</span></span>  
  
<span data-ttu-id="0ae5c-237">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0ae5c-237">-or-</span></span> 
<span data-ttu-id="0ae5c-238"><paramref name="dateTime" /> 参数是无效时间（即，由于时区的调整规则，它表示不存在的时间）。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-238">The <paramref name="dateTime" /> parameter is an invalid time (that is, it represents a time that does not exist because of a time zone's adjustment rules).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0ae5c-239"><paramref name="sourceTimeZone" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-239">The <paramref name="sourceTimeZone" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="0ae5c-240">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0ae5c-240">-or-</span></span> 
<span data-ttu-id="0ae5c-241"><paramref name="destinationTimeZone" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-241">The <paramref name="destinationTimeZone" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId" />
        <related type="Article" href="/dotnet/standard/datetime/converting-between-time-zones"><span data-ttu-id="0ae5c-242">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="0ae5c-242">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTimeBySystemTimeZoneId">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0ae5c-243">根据时区标识符将时间转换为另一时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-243">Converts a time to the time in another time zone based on a time zone identifier.</span></span></summary>
        <related type="Article" href="/dotnet/standard/datetime/converting-between-time-zones"><span data-ttu-id="0ae5c-244">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="0ae5c-244">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTimeBySystemTimeZoneId">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTimeBySystemTimeZoneId (DateTime dateTime, string destinationTimeZoneId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTimeBySystemTimeZoneId(valuetype System.DateTime dateTime, string destinationTimeZoneId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertTimeBySystemTimeZoneId (dateTime As DateTime, destinationTimeZoneId As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTimeBySystemTimeZoneId(DateTime dateTime, System::String ^ destinationTimeZoneId);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeBySystemTimeZoneId : DateTime * string -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId (dateTime, destinationTimeZoneId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="destinationTimeZoneId" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="0ae5c-245">要转换的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-245">The date and time to convert.</span></span></param>
        <param name="destinationTimeZoneId"><span data-ttu-id="0ae5c-246">目标时区的标识符。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-246">The identifier of the destination time zone.</span></span></param>
        <summary><span data-ttu-id="0ae5c-247">根据时区标识符将时间转换为另一时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-247">Converts a time to the time in another time zone based on the time zone's identifier.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-248">目标时区的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-248">The date and time in the destination time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-249">执行转换时，方法会 <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> 应用时区中有效的任何调整规则 `destinationTimeZoneId` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-249">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method applies any adjustment rules in effect in the `destinationTimeZoneId` time zone.</span></span>  
  
 <span data-ttu-id="0ae5c-250">此重载与调用方法大致相同 <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> ，不同之处在于，它允许您通过其标识符而不是对象引用来指定目标时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-250">This overload is largely identical to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method, except that it allows you to specify the destination time zone by its identifier rather than by an object reference.</span></span> <span data-ttu-id="0ae5c-251">当你必须转换时间而不检索对应于它的时区对象时，并且无需知道转换后的时间是标准还是夏令时时，此方法最为有用。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-251">This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.</span></span>  
  
 <span data-ttu-id="0ae5c-252"><xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%29>方法根据参数的属性的值确定源时区，如下 `dateTime` 表所 <xref:System.DateTime.Kind%2A> 示。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-252">The <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%29> method determines the source time zone from the value of the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property, as the following table shows.</span></span>  
  
|<span data-ttu-id="0ae5c-253">Kind 属性值</span><span class="sxs-lookup"><span data-stu-id="0ae5c-253">Kind property value</span></span>|<span data-ttu-id="0ae5c-254">源时区</span><span class="sxs-lookup"><span data-stu-id="0ae5c-254">Source time zone</span></span>|<span data-ttu-id="0ae5c-255">方法行为</span><span class="sxs-lookup"><span data-stu-id="0ae5c-255">Method behavior</span></span>|  
|-------------------------|----------------------|---------------------|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<xref:System.TimeZoneInfo.Local%2A>|<span data-ttu-id="0ae5c-256">将本地时间转换为中的时间 `destinationTimeZone` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-256">Converts the local time to the time in `destinationTimeZone`.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<xref:System.TimeZoneInfo.Utc%2A>|<span data-ttu-id="0ae5c-257">将协调世界时 (UTC) 转换为中的时间 `destinationTimeZone` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-257">Converts Coordinated Universal Time (UTC) to the time in `destinationTimeZone`.</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-258">假定为 <xref:System.TimeZoneInfo.Local%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-258">Assumed to be <xref:System.TimeZoneInfo.Local%2A>.</span></span>|<span data-ttu-id="0ae5c-259">将本地时间转换为中的时间 `destinationTimeZone` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-259">Converts the local time to the time in `destinationTimeZone`.</span></span>|  
  
 <span data-ttu-id="0ae5c-260"><xref:System.DateTime.Kind%2A>返回的值的属性的设置如下 <xref:System.DateTime> 表所示。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-260">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table.</span></span>  
  
|<span data-ttu-id="0ae5c-261">条件</span><span class="sxs-lookup"><span data-stu-id="0ae5c-261">Condition</span></span>|<span data-ttu-id="0ae5c-262">返回的 Kind 属性值</span><span class="sxs-lookup"><span data-stu-id="0ae5c-262">Returned Kind property value</span></span>|  
|---------------|----------------------------------|  
|<span data-ttu-id="0ae5c-263">`destinationTimeZone` 为 `TimeZoneInfo.Utc.Id`。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-263">The `destinationTimeZone` is `TimeZoneInfo.Utc.Id`.</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|  
|<span data-ttu-id="0ae5c-264">任何其他 `destinationTimeZone` 值。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-264">Any other `destinationTimeZone` value.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|  
  
 <span data-ttu-id="0ae5c-265">如果参数的值 `dateTime` 是不明确的本地时间，则将其解释为标准时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-265">If the value of the `dateTime` parameter is an ambiguous local time, it is interpreted as a standard time.</span></span> <span data-ttu-id="0ae5c-266">如果 `dateTime` 参数是无效的本地时间，则此方法将引发 <xref:System.ArgumentException> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-266">If the `dateTime` parameter is an invalid local time, this method throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="0ae5c-267">如果的转换 `dateTime` 结果的日期和时间值早于 <xref:System.DateTime.MinValue?displayProperty=nameWithType> 或晚于 <xref:System.DateTime.MaxValue?displayProperty=nameWithType> ，则此方法将 <xref:System.DateTime.MinValue?displayProperty=nameWithType> 分别返回或 <xref:System.DateTime.MaxValue?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-267">If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue?displayProperty=nameWithType> or <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
 <span data-ttu-id="0ae5c-268">此方法从 Windows 系统上的注册表中的参数指定的时区 `destinationTimeZoneId` 以及 Linux 和 macOS 上的 [ICU 库](http://userguide.icu-project.org/datetime/timezone) 中检索有关其标识符的信息。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-268">This method retrieves information on the time zone whose identifier is specified by the `destinationTimeZoneId` parameter from the registry on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="0ae5c-269">它无法检索使用方法创建的时区对象 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-269">It cannot retrieve a time zone object that is created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span> <span data-ttu-id="0ae5c-270">`destinationTimeZoneId`参数的长度必须与时区的标识符完全一致，但如果要成功匹配，则为; 也就是说， `destinationTimeZoneId` 与时区标识符的比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-270">The `destinationTimeZoneId` parameter must correspond exactly to the time zone's identifier in length, but not in case, for a successful match to occur; that is, the comparison of `destinationTimeZoneId` with time zone identifiers is case-insensitive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0ae5c-271"><paramref name="destinationTimeZoneId" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-271"><paramref name="destinationTimeZoneId" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="0ae5c-272">时区标识符已找到，但注册表数据已损坏。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-272">The time zone identifier was found, but the registry data is corrupted.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="0ae5c-273">该进程没有读取包含时区信息的注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-273">The process does not have the permissions required to read from the registry key that contains the time zone information.</span></span></exception>
        <exception cref="T:System.TimeZoneNotFoundException"><span data-ttu-id="0ae5c-274">在本地系统上找不到 <paramref name="destinationTimeZoneId" /> 标识符。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-274">The <paramref name="destinationTimeZoneId" /> identifier was not found on the local system.</span></span></exception>
        <related type="Article" href="/dotnet/standard/datetime/converting-between-time-zones"><span data-ttu-id="0ae5c-275">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="0ae5c-275">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTimeBySystemTimeZoneId">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ConvertTimeBySystemTimeZoneId (DateTimeOffset dateTimeOffset, string destinationTimeZoneId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ConvertTimeBySystemTimeZoneId(valuetype System.DateTimeOffset dateTimeOffset, string destinationTimeZoneId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertTimeBySystemTimeZoneId (dateTimeOffset As DateTimeOffset, destinationTimeZoneId As String) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ConvertTimeBySystemTimeZoneId(DateTimeOffset dateTimeOffset, System::String ^ destinationTimeZoneId);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeBySystemTimeZoneId : DateTimeOffset * string -&gt; DateTimeOffset" Usage="System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId (dateTimeOffset, destinationTimeZoneId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="destinationTimeZoneId" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="0ae5c-276">要转换的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-276">The date and time to convert.</span></span></param>
        <param name="destinationTimeZoneId"><span data-ttu-id="0ae5c-277">目标时区的标识符。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-277">The identifier of the destination time zone.</span></span></param>
        <summary><span data-ttu-id="0ae5c-278">根据时区标识符将时间转换为另一时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-278">Converts a time to the time in another time zone based on the time zone's identifier.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-279">目标时区的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-279">The date and time in the destination time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-280">执行转换时，方法会 <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> 应用时区中有效的任何调整规则 `destinationTimeZoneId` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-280">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method applies any adjustment rules in effect in the `destinationTimeZoneId` time zone.</span></span>  
  
 <span data-ttu-id="0ae5c-281">此重载与调用 <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29> 方法相同，不同之处在于，它允许您通过其标识符而不是对象引用来指定目标时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-281">This overload is identical to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29> method, except that it allows you to specify the destination time zone by its identifier rather than by an object reference.</span></span> <span data-ttu-id="0ae5c-282">当你必须转换时间而不检索对应于它的时区对象时，并且无需知道转换后的时间是标准还是夏令时时，此方法最为有用。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-282">This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.</span></span>  
  
 <span data-ttu-id="0ae5c-283">因为 `dateTimeOffset` 参数表示日期和时间与协调世界时 (UTC) 的时间偏移量，所以它不能表示不明确的时间或无效的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-283">Because the `dateTimeOffset` parameter represents a date and time together with that time's offset from Coordinated Universal Time (UTC), it cannot represent either an ambiguous time or an invalid time.</span></span>  
  
 <span data-ttu-id="0ae5c-284">此方法 `destinationTimeZoneId` 从 Windows 系统上的注册表中的注册表参数指定时区，并从 Linux 和 macOS 上的 [ICU 库](http://userguide.icu-project.org/datetime/timezone) 检索其标识符。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-284">This method retrieves the time zone whose identifier is specified by the `destinationTimeZoneId` parameter from the registry on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="0ae5c-285">它无法检索使用方法创建的时区对象 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-285">It cannot retrieve a time zone object that is created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span> <span data-ttu-id="0ae5c-286">`destinationTimeZoneId`参数的长度必须与时区的标识符完全一致，但如果要成功匹配，则为; 也就是说， `destinationTimeZoneId` 与时区标识符的比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-286">The `destinationTimeZoneId` parameter must correspond exactly to the time zone's identifier in length, but not in case, for a successful match to occur; that is, the comparison of `destinationTimeZoneId` with time zone identifiers is case-insensitive.</span></span>  
  
 <span data-ttu-id="0ae5c-287">在将 `dateTimeOffset` 值转换为目标时区中的时间时，该方法会考虑目标时区中有效的任何调整规则。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-287">In converting the `dateTimeOffset` value to the time in the destination time zone, the method takes into account any adjustment rules in effect in the destination time zone.</span></span>  
  
 <span data-ttu-id="0ae5c-288">如果的转换 `dateTimeOffset` 结果的日期和时间值早于 <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> 或晚于 <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType> ，则此方法将 <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> 分别返回或 <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-288">If the conversion of `dateTimeOffset` results in a date and time value that is earlier than <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> or <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0ae5c-289"><paramref name="destinationTimeZoneId" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-289"><paramref name="destinationTimeZoneId" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="0ae5c-290">时区标识符已找到，但注册表数据已损坏。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-290">The time zone identifier was found but the registry data is corrupted.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="0ae5c-291">该进程没有读取包含时区信息的注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-291">The process does not have the permissions required to read from the registry key that contains the time zone information.</span></span></exception>
        <exception cref="T:System.TimeZoneNotFoundException"><span data-ttu-id="0ae5c-292">在本地系统上找不到 <paramref name="destinationTimeZoneId" /> 标识符。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-292">The <paramref name="destinationTimeZoneId" /> identifier was not found on the local system.</span></span></exception>
        <related type="Article" href="/dotnet/standard/datetime/converting-between-time-zones"><span data-ttu-id="0ae5c-293">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="0ae5c-293">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTimeBySystemTimeZoneId">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTimeBySystemTimeZoneId (DateTime dateTime, string sourceTimeZoneId, string destinationTimeZoneId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTimeBySystemTimeZoneId(valuetype System.DateTime dateTime, string sourceTimeZoneId, string destinationTimeZoneId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertTimeBySystemTimeZoneId (dateTime As DateTime, sourceTimeZoneId As String, destinationTimeZoneId As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTimeBySystemTimeZoneId(DateTime dateTime, System::String ^ sourceTimeZoneId, System::String ^ destinationTimeZoneId);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeBySystemTimeZoneId : DateTime * string * string -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId (dateTime, sourceTimeZoneId, destinationTimeZoneId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="sourceTimeZoneId" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="destinationTimeZoneId" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="0ae5c-294">要转换的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-294">The date and time to convert.</span></span></param>
        <param name="sourceTimeZoneId"><span data-ttu-id="0ae5c-295">源时区的标识符。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-295">The identifier of the source time zone.</span></span></param>
        <param name="destinationTimeZoneId"><span data-ttu-id="0ae5c-296">目标时区的标识符。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-296">The identifier of the destination time zone.</span></span></param>
        <summary><span data-ttu-id="0ae5c-297">根据时区标识符将时间从一个时区转换到另一个时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-297">Converts a time from one time zone to another based on time zone identifiers.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-298">目标时区中与源时区中的 <paramref name="dateTime" /> 参数对应的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-298">The date and time in the destination time zone that corresponds to the <paramref name="dateTime" /> parameter in the source time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-299">执行转换时，方法会 <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> 应用时区中有效的任何调整规则 `destinationTimeZoneId` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-299">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method applies any adjustment rules in effect in the `destinationTimeZoneId` time zone.</span></span>  
  
 <span data-ttu-id="0ae5c-300">尽管它与 <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> 方法类似，但你可以使用 <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType> 来使用标识符而不是其对象来指定源和目标时区 <xref:System.TimeZoneInfo> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-300">Although it is similar to the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> method, you can use <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType> to specify the source and destination time zones using their identifiers instead of their <xref:System.TimeZoneInfo> objects.</span></span> <span data-ttu-id="0ae5c-301">当你必须转换时间而不检索对应于它的时区对象时，并且无需知道转换后的时间是标准还是夏令时时，此方法最为有用。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-301">This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.</span></span>  
  
 <span data-ttu-id="0ae5c-302">此方法 `sourceTimeZoneId` `destinationTimeZoneId` 从 Windows 系统上的注册表中以及 Linux 和 macOS 上的 [ICU 库](http://userguide.icu-project.org/datetime/timezone) 检索其标识符为和参数的时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-302">This method retrieves the time zones whose identifiers are the `sourceTimeZoneId` and `destinationTimeZoneId` parameters from the registry on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="0ae5c-303">它无法检索使用方法创建的时区对象 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-303">It cannot retrieve time zone objects that are created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span>  
  
 <span data-ttu-id="0ae5c-304">参数的属性值 <xref:System.DateTime.Kind%2A> `dateTime` 必须对应于 `sourceTimeZoneId` 参数，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-304">The value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter must correspond to the `sourceTimeZoneId` parameter, as the following table shows.</span></span>  
  
|<span data-ttu-id="0ae5c-305">DateTime 值</span><span class="sxs-lookup"><span data-stu-id="0ae5c-305">DateTime.Kind value</span></span>|<span data-ttu-id="0ae5c-306">sourceTimeZone 值</span><span class="sxs-lookup"><span data-stu-id="0ae5c-306">sourceTimeZone value</span></span>|<span data-ttu-id="0ae5c-307">方法行为</span><span class="sxs-lookup"><span data-stu-id="0ae5c-307">Method behavior</span></span>|  
|-------------------------|--------------------------|---------------------|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-308">等于 `TimeZoneInfo.Utc.Id` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-308">Equals `TimeZoneInfo.Utc.Id`.</span></span>|<span data-ttu-id="0ae5c-309">转换 `dateTime` 为目标时区的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-309">Converts `dateTime` to the destination time zone's time.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-310">Does not equal `TimeZoneInfo.Utc.Id`。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-310">Does not equal `TimeZoneInfo.Utc.Id`.</span></span>|<span data-ttu-id="0ae5c-311">引发 <xref:System.ArgumentException> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-311">Throws an <xref:System.ArgumentException>.</span></span>|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-312">等于 `TimeZoneInfo.Local.Id` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-312">Equals `TimeZoneInfo.Local.Id`.</span></span>|<span data-ttu-id="0ae5c-313">转换 `dateTime` 为目标时区的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-313">Converts `dateTime` to the destination time zone's time.</span></span>|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-314">Does not equal `TimeZoneInfo.Local.Id`。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-314">Does not equal `TimeZoneInfo.Local.Id`.</span></span>|<span data-ttu-id="0ae5c-315">引发 <xref:System.ArgumentException> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-315">Throws an <xref:System.ArgumentException>.</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-316">随时.</span><span class="sxs-lookup"><span data-stu-id="0ae5c-316">Any.</span></span>|<span data-ttu-id="0ae5c-317">转换 `dateTime` 为目标时区的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-317">Converts `dateTime` to the destination time zone's time.</span></span>|  
  
 <span data-ttu-id="0ae5c-318">由于它依赖于对方法的调用 <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> ，因此该 <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> 方法执行不区分大小写的搜索以查找与和对应的 `sourceTimeZoneId` 时区 `destinationTimeZoneId` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-318">Because it relies on calls to the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method performs a case-insensitive search to locate the time zones that correspond to `sourceTimeZoneId` and `destinationTimeZoneId`.</span></span>  
  
 <span data-ttu-id="0ae5c-319">如果参数的值 `dateTime` 是源时区中不明确的时间，则将其解释为标准时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-319">If the value of the `dateTime` parameter is an ambiguous time in the source time zone, it is interpreted as a standard time.</span></span> <span data-ttu-id="0ae5c-320">如果 `dateTime` 参数是源时区中的无效时间，则此方法将引发 <xref:System.ArgumentException> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-320">If the `dateTime` parameter is an invalid time in the source time zone, this method throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="0ae5c-321"><xref:System.DateTime.Kind%2A>返回的值的属性 <xref:System.DateTime> 设置为， <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> 除非目标时区是协调世界时 (UTC) ，在这种情况下，它设置为 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-321">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> unless the destination time zone is Coordinated Universal Time (UTC), in which case it is set to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-322">下面的示例使用 <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType> 方法来显示与全球8个城市中的本地系统时间对应的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-322">The following example uses the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType> method to display the time that corresponds to the local system time in eight cities of the world.</span></span>  
  
 [!code-csharp[System.TimeZone2.Conversions#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Conversions/cs/System.TimeZone2.Conversions.cs#3)]
 [!code-vb[System.TimeZone2.Conversions#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Conversions/vb/System.TimeZone2.Conversions.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ae5c-323"><paramref name="dateTime" /> 参数的 <see cref="P:System.DateTime.Kind" /> 属性与源时区不对应。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-323">The <see cref="P:System.DateTime.Kind" /> property of the <paramref name="dateTime" /> parameter does not correspond to the source time zone.</span></span>  
  
<span data-ttu-id="0ae5c-324">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0ae5c-324">-or-</span></span> 
 <span data-ttu-id="0ae5c-325"><paramref name="dateTime" /> 是源时区中的无效时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-325"><paramref name="dateTime" /> is an invalid time in the source time zone.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0ae5c-326"><paramref name="sourceTimeZoneId" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-326"><paramref name="sourceTimeZoneId" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="0ae5c-327">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0ae5c-327">-or-</span></span> 
 <span data-ttu-id="0ae5c-328"><paramref name="destinationTimeZoneId" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-328"><paramref name="destinationTimeZoneId" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="0ae5c-329">已找到时区标识符，但注册表数据已损坏。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-329">The time zone identifiers were found, but the registry data is corrupted.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="0ae5c-330">用户没有读取包含时区数据的注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-330">The user does not have the permissions required to read from the registry keys that hold time zone data.</span></span></exception>
        <exception cref="T:System.TimeZoneNotFoundException"><span data-ttu-id="0ae5c-331">在本地系统上找不到 <paramref name="sourceTimeZoneId" /> 标识符。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-331">The <paramref name="sourceTimeZoneId" /> identifier was not found on the local system.</span></span>  
  
<span data-ttu-id="0ae5c-332">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0ae5c-332">-or-</span></span> 
<span data-ttu-id="0ae5c-333">在本地系统上找不到 <paramref name="destinationTimeZoneId" /> 标识符。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-333">The <paramref name="destinationTimeZoneId" /> identifier was not found on the local system.</span></span></exception>
        <related type="Article" href="/dotnet/standard/datetime/converting-between-time-zones"><span data-ttu-id="0ae5c-334">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="0ae5c-334">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTimeFromUtc">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTimeFromUtc (DateTime dateTime, TimeZoneInfo destinationTimeZone);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTimeFromUtc(valuetype System.DateTime dateTime, class System.TimeZoneInfo destinationTimeZone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertTimeFromUtc (dateTime As DateTime, destinationTimeZone As TimeZoneInfo) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTimeFromUtc(DateTime dateTime, TimeZoneInfo ^ destinationTimeZone);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeFromUtc : DateTime * TimeZoneInfo -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTimeFromUtc (dateTime, destinationTimeZone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="destinationTimeZone" Type="System.TimeZoneInfo" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="0ae5c-335">协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-335">The Coordinated Universal Time (UTC).</span></span></param>
        <param name="destinationTimeZone"><span data-ttu-id="0ae5c-336">要将 <paramref name="dateTime" /> 转换到的时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-336">The time zone to convert <paramref name="dateTime" /> to.</span></span></param>
        <summary><span data-ttu-id="0ae5c-337">将协调世界时 (UTC) 转换为指定时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-337">Converts a Coordinated Universal Time (UTC) to the time in a specified time zone.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-338">目标时区的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-338">The date and time in the destination time zone.</span></span> <span data-ttu-id="0ae5c-339">如果 <paramref name="destinationTimeZone" /> 为 <see cref="P:System.TimeZoneInfo.Utc" />，则其 <see cref="P:System.DateTime.Kind" /> 属性为 <see cref="F:System.DateTimeKind.Utc" />；否则其 <see cref="P:System.DateTime.Kind" /> 属性为 <see cref="F:System.DateTimeKind.Unspecified" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-339">Its <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Utc" /> if <paramref name="destinationTimeZone" /> is <see cref="P:System.TimeZoneInfo.Utc" />; otherwise, its <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Unspecified" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-340">执行转换时，方法会 <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> 应用时区中有效的任何调整规则 `destinationTimeZone` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-340">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.</span></span>  
  
 <span data-ttu-id="0ae5c-341">此方法的准确行为取决于 <xref:System.DateTime.Kind%2A> 参数的属性值，如下表所 `dateTime` 示。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-341">The precise behavior of this method depends on the value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter, as the following table shows.</span></span>  
  
|<span data-ttu-id="0ae5c-342">DateTime.Kind 属性</span><span class="sxs-lookup"><span data-stu-id="0ae5c-342">DateTime.Kind property</span></span>|<span data-ttu-id="0ae5c-343">转换</span><span class="sxs-lookup"><span data-stu-id="0ae5c-343">Conversion</span></span>|  
|----------------------------|----------------|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-344">引发 <xref:System.ArgumentException> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-344">Throws an <xref:System.ArgumentException>.</span></span>|  
|<span data-ttu-id="0ae5c-345"><xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> 或 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="0ae5c-345"><xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> or <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span></span>|<span data-ttu-id="0ae5c-346">从协调世界时 (UTC) 转换。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-346">Converts from Coordinated Universal Time (UTC).</span></span>|  
  
 <span data-ttu-id="0ae5c-347">如果的转换 `dateTime` 结果的日期和时间值早于 <xref:System.DateTime.MinValue?displayProperty=nameWithType> 或晚于 <xref:System.DateTime.MaxValue?displayProperty=nameWithType> ，则此方法将 <xref:System.DateTime.MinValue?displayProperty=nameWithType> 分别返回或 <xref:System.DateTime.MaxValue?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-347">If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue?displayProperty=nameWithType> or <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-348">下面的示例将协调世界时 (UTC) 转换为中部时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-348">The following example converts Coordinated Universal Time (UTC) to Central Time.</span></span>  
  
 [!code-csharp[System.TimeZone2.Concepts#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Concepts/CS/TimeZone2Concepts.cs#8)]
 [!code-vb[System.TimeZone2.Concepts#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Concepts/VB/TimeZone2Concepts.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ae5c-349"><paramref name="dateTime" /> 的 <see cref="P:System.DateTime.Kind" /> 属性为 <see cref="F:System.DateTimeKind.Local" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-349">The <see cref="P:System.DateTime.Kind" /> property of <paramref name="dateTime" /> is <see cref="F:System.DateTimeKind.Local" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0ae5c-350"><paramref name="destinationTimeZone" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-350"><paramref name="destinationTimeZone" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="/dotnet/standard/datetime/converting-between-time-zones"><span data-ttu-id="0ae5c-351">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="0ae5c-351">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTimeToUtc">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0ae5c-352">将日期和时间转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-352">Converts a date and time to Coordinated Universal Time (UTC).</span></span></summary>
        <related type="Article" href="/dotnet/standard/datetime/converting-between-time-zones"><span data-ttu-id="0ae5c-353">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="0ae5c-353">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTimeToUtc">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTimeToUtc (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTimeToUtc(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertTimeToUtc (dateTime As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTimeToUtc(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeToUtc : DateTime -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTimeToUtc dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="0ae5c-354">要转换的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-354">The date and time to convert.</span></span></param>
        <summary><span data-ttu-id="0ae5c-355">将指定的日期和时间转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-355">Converts the specified date and time to Coordinated Universal Time (UTC).</span></span></summary>
        <returns><span data-ttu-id="0ae5c-356">与 <paramref name="dateTime" /> 参数对应的协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-356">The Coordinated Universal Time (UTC) that corresponds to the <paramref name="dateTime" /> parameter.</span></span> <span data-ttu-id="0ae5c-357"><see cref="T:System.DateTime" /> 值的 <see cref="P:System.DateTime.Kind" /> 属性始终设置为 <see cref="F:System.DateTimeKind.Utc" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-357">The <see cref="T:System.DateTime" /> value's <see cref="P:System.DateTime.Kind" /> property is always set to <see cref="F:System.DateTimeKind.Utc" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-358">执行的确切转换取决于参数的属性值 <xref:System.DateTime.Kind%2A> `dateTime` ，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-358">The exact conversion performed depends on the value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter, as the following table shows.</span></span>  
  
|<span data-ttu-id="0ae5c-359">DateTime.Kind 属性</span><span class="sxs-lookup"><span data-stu-id="0ae5c-359">DateTime.Kind property</span></span>|<span data-ttu-id="0ae5c-360">转换</span><span class="sxs-lookup"><span data-stu-id="0ae5c-360">Conversion</span></span>|  
|----------------------------|----------------|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-361">在 UTC)  (本地时间转换为协调世界时。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-361">Converts from local time to Coordinated Universal Time (UTC).</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-362">假定 `dateTime` 为本地时间，并从本地时间转换为 UTC。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-362">Assumes `dateTime` is local time and converts from local time to UTC.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-363">返回 `dateTime` 未更改的。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-363">Returns `dateTime` unchanged.</span></span>|  
  
 <span data-ttu-id="0ae5c-364">如果 `dateTime` 对应的本地时间不明确，此方法假定它是标准的本地时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-364">If `dateTime` corresponds to an ambiguous local time, this method assumes that it is standard local time.</span></span> <span data-ttu-id="0ae5c-365">如果 `dateTime` 对应于无效的本地时间，则该方法将引发 <xref:System.ArgumentException> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-365">If `dateTime` corresponds to an invalid local time, the method throws an <xref:System.ArgumentException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ae5c-366">如果当前计算机的本地时区包含多个调整规则，则此 <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> 方法重载可以返回与和方法不同的结果 <xref:System.TimeZone.ToUniversalTime%2A?displayProperty=nameWithType> <xref:System.DateTime.ToUniversalTime%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-366">If the current computer's local time zone includes multiple adjustment rules, this overload of the <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> method can return results that differ from the <xref:System.TimeZone.ToUniversalTime%2A?displayProperty=nameWithType> and <xref:System.DateTime.ToUniversalTime%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="0ae5c-367"><xref:System.TimeZone.ToUniversalTime%2A?displayProperty=nameWithType> 始终将当前调整规则应用于时区转换，无论 `dateTime` 其日期范围内是否存在。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-367"><xref:System.TimeZone.ToUniversalTime%2A?displayProperty=nameWithType> always applies the current adjustment rule to time zone conversion, whether or not `dateTime` lies within its date range.</span></span> <span data-ttu-id="0ae5c-368">在上执行时 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] ， <xref:System.DateTime.ToUniversalTime%2A?displayProperty=nameWithType> 还会将当前调整规则应用于时区转换，无论 `dateTime` 其日期范围内是否存在。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-368">And when executing on [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)], <xref:System.DateTime.ToUniversalTime%2A?displayProperty=nameWithType> also applies the current adjustment rule to time zone conversion, whether or not `dateTime` lies within its date range.</span></span>  
  
 <span data-ttu-id="0ae5c-369">如果的 UTC 等效项 `dateTime` 早于 <xref:System.DateTime.MinValue?displayProperty=nameWithType> 或晚于 <xref:System.DateTime.MaxValue?displayProperty=nameWithType> ，则此方法将 <xref:System.DateTime.MinValue> 分别返回或 <xref:System.DateTime.MaxValue> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-369">If the UTC equivalent of `dateTime` is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later that <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue> or <xref:System.DateTime.MaxValue>, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-370">下面的示例演示了时间值的转换 <xref:System.DateTime.Kind%2A> ，其属性 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType> 分别为、 <xref:System.DateTimeKind.Local?displayProperty=nameWithType> 和 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-370">The following example illustrates the conversion of time values whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, and <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, respectively.</span></span> <span data-ttu-id="0ae5c-371">它还说明了不明确和无效时间的转换。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-371">It also illustrates the conversion of ambiguous and invalid times.</span></span>  
  
 [!code-csharp[System.TimeZone2.Conversions#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Conversions/cs/System.TimeZone2.Conversions.cs#1)]
 [!code-vb[System.TimeZone2.Conversions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Conversions/vb/System.TimeZone2.Conversions.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ae5c-372"><see langword="TimeZoneInfo.Local.IsInvalidDateTime(" />
          <paramref name="dateTime" />
          <see langword=")" /> 返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-372"><see langword="TimeZoneInfo.Local.IsInvalidDateTime(" />
          <paramref name="dateTime" />
          <see langword=")" /> returns <see langword="true" />.</span></span></exception>
        <related type="Article" href="/dotnet/standard/datetime/converting-between-time-zones"><span data-ttu-id="0ae5c-373">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="0ae5c-373">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTimeToUtc">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTimeToUtc (DateTime dateTime, TimeZoneInfo sourceTimeZone);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTimeToUtc(valuetype System.DateTime dateTime, class System.TimeZoneInfo sourceTimeZone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertTimeToUtc (dateTime As DateTime, sourceTimeZone As TimeZoneInfo) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTimeToUtc(DateTime dateTime, TimeZoneInfo ^ sourceTimeZone);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeToUtc : DateTime * TimeZoneInfo -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTimeToUtc (dateTime, sourceTimeZone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="sourceTimeZone" Type="System.TimeZoneInfo" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="0ae5c-374">要转换的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-374">The date and time to convert.</span></span></param>
        <param name="sourceTimeZone"><span data-ttu-id="0ae5c-375"><paramref name="dateTime" /> 的时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-375">The time zone of <paramref name="dateTime" />.</span></span></param>
        <summary><span data-ttu-id="0ae5c-376">将指定时区中的时间转换为协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-376">Converts the time in a specified time zone to Coordinated Universal Time (UTC).</span></span></summary>
        <returns><span data-ttu-id="0ae5c-377">与 <paramref name="dateTime" /> 参数对应的协调世界时 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-377">The Coordinated Universal Time (UTC) that corresponds to the <paramref name="dateTime" /> parameter.</span></span> <span data-ttu-id="0ae5c-378"><see cref="T:System.DateTime" /> 对象的 <see cref="P:System.DateTime.Kind" /> 属性始终设置为 <see cref="F:System.DateTimeKind.Utc" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-378">The <see cref="T:System.DateTime" /> object's <see cref="P:System.DateTime.Kind" /> property is always set to <see cref="F:System.DateTimeKind.Utc" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-379">如果 <xref:System.DateTime.Kind%2A> 参数的属性 `dateTime` 等于 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType> 并且 `sourceTimeZone` 参数等于 <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType> ，则此方法返回， `dateTime` 而不执行任何转换。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-379">If the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter equals <xref:System.DateTimeKind.Utc?displayProperty=nameWithType> and the `sourceTimeZone` parameter equals <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>, this method returns `dateTime` without performing any conversion.</span></span>  
  
 <span data-ttu-id="0ae5c-380">如果 `dateTime` 对应的时间不明确，则该方法假定它是源时区的标准时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-380">If `dateTime` corresponds to an ambiguous time, this method assumes that it is the standard time of the source time zone.</span></span> <span data-ttu-id="0ae5c-381">如果 `dateTime` 对应于无效时间，则此方法将引发 <xref:System.ArgumentException> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-381">If `dateTime` corresponds to an invalid time, this method throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="0ae5c-382">如果协调世界时 (UTC) 等效于 `dateTime` <xref:System.DateTime.MinValue?displayProperty=nameWithType> <xref:System.DateTime.MaxValue?displayProperty=nameWithType> ，则此方法将 <xref:System.DateTime.MinValue> 分别返回或 <xref:System.DateTime.MaxValue> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-382">If the Coordinated Universal Time (UTC) equivalent of `dateTime` is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later that <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue> or <xref:System.DateTime.MaxValue>, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-383">以下示例从本地系统检索当前日期，并将其转换为协调世界时 (UTC) ，然后将其转换为东京标准时间，最后将东京标准时间转换回 UTC。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-383">The following example retrieves the current date from the local system and converts it to Coordinated Universal Time (UTC), then converts it to Tokyo Standard Time, and finally converts from Tokyo Standard Time back to UTC.</span></span> <span data-ttu-id="0ae5c-384">请注意，这两个 UTC 时间是相同的。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-384">Note that the two UTC times are identical.</span></span>  
  
 [!code-csharp[System.TimeZone2.Conversions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Conversions/cs/convertdt2.cs#2)]
 [!code-vb[System.TimeZone2.Conversions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Conversions/vb/convertdt2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ae5c-385"><paramref name="dateTime" />.<see langword="Kind" /></span><span class="sxs-lookup"><span data-stu-id="0ae5c-385"><paramref name="dateTime" />.<see langword="Kind" /></span></span> <span data-ttu-id="0ae5c-386">为 <see cref="F:System.DateTimeKind.Utc" />，而 <paramref name="sourceTimeZone" /> 不等于 <see cref="P:System.TimeZoneInfo.Utc" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-386">is <see cref="F:System.DateTimeKind.Utc" /> and <paramref name="sourceTimeZone" /> does not equal <see cref="P:System.TimeZoneInfo.Utc" />.</span></span>  
  
<span data-ttu-id="0ae5c-387">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0ae5c-387">-or-</span></span> 
 <span data-ttu-id="0ae5c-388"><paramref name="dateTime" />.<see langword="Kind" /></span><span class="sxs-lookup"><span data-stu-id="0ae5c-388"><paramref name="dateTime" />.<see langword="Kind" /></span></span> <span data-ttu-id="0ae5c-389">为 <see cref="F:System.DateTimeKind.Local" />，而 <paramref name="sourceTimeZone" /> 不等于 <see cref="P:System.TimeZoneInfo.Local" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-389">is <see cref="F:System.DateTimeKind.Local" /> and <paramref name="sourceTimeZone" /> does not equal <see cref="P:System.TimeZoneInfo.Local" />.</span></span>  
  
<span data-ttu-id="0ae5c-390">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0ae5c-390">-or-</span></span> 
 <span data-ttu-id="0ae5c-391"><paramref name="sourceTimeZone" /><see langword=".IsInvalidDateTime(" /><paramref name="dateTime" /><see langword=")" /> 返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-391"><paramref name="sourceTimeZone" /><see langword=".IsInvalidDateTime(" /><paramref name="dateTime" /><see langword=")" /> returns <see langword="true" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0ae5c-392"><paramref name="sourceTimeZone" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-392"><paramref name="sourceTimeZone" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="/dotnet/standard/datetime/converting-between-time-zones"><span data-ttu-id="0ae5c-393">在不同时区之间转换时间</span><span class="sxs-lookup"><span data-stu-id="0ae5c-393">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateCustomTimeZone">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0ae5c-394">定义在本地计算机上未找到的时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-394">Defines a time zone that is not found on the local computer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateCustomTimeZone">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo CreateCustomTimeZone (string id, TimeSpan baseUtcOffset, string? displayName, string? standardDisplayName);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo CreateCustomTimeZone(string id, valuetype System.TimeSpan baseUtcOffset, string displayName, string standardDisplayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCustomTimeZone (id As String, baseUtcOffset As TimeSpan, displayName As String, standardDisplayName As String) As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo ^ CreateCustomTimeZone(System::String ^ id, TimeSpan baseUtcOffset, System::String ^ displayName, System::String ^ standardDisplayName);" />
      <MemberSignature Language="F#" Value="static member CreateCustomTimeZone : string * TimeSpan * string * string -&gt; TimeZoneInfo" Usage="System.TimeZoneInfo.CreateCustomTimeZone (id, baseUtcOffset, displayName, standardDisplayName)" />
      <MemberSignature Language="C#" Value="public static TimeZoneInfo CreateCustomTimeZone (string id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="baseUtcOffset" Type="System.TimeSpan" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="displayName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="standardDisplayName" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="0ae5c-395">时区的标识符。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-395">The time zone's identifier.</span></span></param>
        <param name="baseUtcOffset"><span data-ttu-id="0ae5c-396">一个对象，它表示此时区和协调世界时 (UTC) 之间的时差。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-396">An object that represents the time difference between this time zone and Coordinated Universal Time (UTC).</span></span></param>
        <param name="displayName"><span data-ttu-id="0ae5c-397">新时区的显示名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-397">The display name of the new time zone.</span></span></param>
        <param name="standardDisplayName"><span data-ttu-id="0ae5c-398">新时区的标准时间的名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-398">The name of the new time zone's standard time.</span></span></param>
        <summary><span data-ttu-id="0ae5c-399">创建带指定标识符的自定义时区、与协调世界时 (UTC) 的偏移量、显示名称以及标准时间显示名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-399">Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, and a standard time display name.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-400">新时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-400">The new time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-401">此方法的重载 <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29> 适用于创建一个时区，该时区没有任何调整 (即，不支持夏令时) 的时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-401">This overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29> method is suitable for creating a time zone that has no adjustments (that is, a time zone that does not support daylight saving time).</span></span> <span data-ttu-id="0ae5c-402">若要定义包括夏令时调整的时区，请使用 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> 或 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-402">To define a time zone that includes adjustments for daylight saving time, use either the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="0ae5c-403">下表显示了提供给方法的参数 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> 与方法调用返回的对象属性之间的关系 <xref:System.TimeZoneInfo> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-403">The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method and the properties of the <xref:System.TimeZoneInfo> object that are returned by the method call.</span></span>  
  
|<span data-ttu-id="0ae5c-404">CreateCustomTimeZone 参数</span><span class="sxs-lookup"><span data-stu-id="0ae5c-404">CreateCustomTimeZone parameter</span></span>|<span data-ttu-id="0ae5c-405">TimeZoneInfo 属性</span><span class="sxs-lookup"><span data-stu-id="0ae5c-405">TimeZoneInfo property</span></span>|  
|------------------------------------|---------------------------|  
|`id`|<xref:System.TimeZoneInfo.Id%2A>|  
|`baseUtcOffset`|<xref:System.TimeZoneInfo.BaseUtcOffset%2A>|  
|`displayName`|<xref:System.TimeZoneInfo.DisplayName%2A>|  
|`standardDisplayName`|<xref:System.TimeZoneInfo.StandardName%2A>|  
  
 <span data-ttu-id="0ae5c-406">通常，时区的标准时间名称及其标识符是相同的。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-406">Typically, the time zone's standard time name and its identifier are the same.</span></span> <span data-ttu-id="0ae5c-407">但是，时区标识符的长度不应超过32个字符。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-407">However, the length of the time zone's identifier should not exceed 32 characters.</span></span> <span data-ttu-id="0ae5c-408">传递给参数的字符串 `displayName` 采用相当标准的格式。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-408">The string passed to the `displayName` parameter follows a fairly standard format.</span></span> <span data-ttu-id="0ae5c-409">显示名称的第一部分是时区相对于协调世界时的基本偏移量，它由 "格林尼治标准时间) " 的缩写项 " (" 括在括号中。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-409">The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses.</span></span> <span data-ttu-id="0ae5c-410">后跟一个字符串，该字符串标识时区本身，或时区中的一个或多个城市、区域或国家/地区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-410">This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both.</span></span> <span data-ttu-id="0ae5c-411">例如：</span><span class="sxs-lookup"><span data-stu-id="0ae5c-411">For example:</span></span>  
  
```  
(GMT+02:00) Athens, Beirut, Istanbul, Minsk  
(GMT-02:00) Mid-Atlantic  
(GMT-07:00) Mountain Time (US & Canada)  
```  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-412">下面的示例为南极洲的莫森和 Holme 托架区域创建自定义时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-412">The following example creates a custom time zone for the Mawson and Holme Bay regions of Antarctica.</span></span> <span data-ttu-id="0ae5c-413">然后，它显示将本地时间转换为新时区中的时间的结果。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-413">It then displays the result of converting the local time to the time in the new time zone.</span></span>  
  
 [!code-csharp[System.TimeZone2.CreateTimeZone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#1)]
 [!code-vb[System.TimeZone2.CreateTimeZone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0ae5c-414"><paramref name="id" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-414">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ae5c-415"><paramref name="id" /> 参数为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-415">The <paramref name="id" /> parameter is an empty string ("").</span></span>  
  
<span data-ttu-id="0ae5c-416">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0ae5c-416">-or-</span></span> 
<span data-ttu-id="0ae5c-417"><paramref name="baseUtcOffset" /> 参数不表示整分钟数。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-417">The <paramref name="baseUtcOffset" /> parameter does not represent a whole number of minutes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0ae5c-418"><paramref name="baseUtcOffset" /> 参数大于 14 小时或小于 -14 小时。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-418">The <paramref name="baseUtcOffset" /> parameter is greater than 14 hours or less than -14 hours.</span></span></exception>
        <related type="Article" href="/dotnet/standard/datetime/create-time-zones-without-adjustment-rules"><span data-ttu-id="0ae5c-419">如何：创建不带调整规则的时区</span><span class="sxs-lookup"><span data-stu-id="0ae5c-419">How to: Create Time Zones Without Adjustment Rules</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateCustomTimeZone">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo? CreateCustomTimeZone (string? id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, TimeZoneInfo.AdjustmentRule[]? adjustmentRules);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo CreateCustomTimeZone(string id, valuetype System.TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, class System.TimeZoneInfo/AdjustmentRule[] adjustmentRules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCustomTimeZone (id As String, baseUtcOffset As TimeSpan, displayName As String, standardDisplayName As String, daylightDisplayName As String, adjustmentRules As TimeZoneInfo.AdjustmentRule()) As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo ^ CreateCustomTimeZone(System::String ^ id, TimeSpan baseUtcOffset, System::String ^ displayName, System::String ^ standardDisplayName, System::String ^ daylightDisplayName, cli::array &lt;TimeZoneInfo::AdjustmentRule ^&gt; ^ adjustmentRules);" />
      <MemberSignature Language="F#" Value="static member CreateCustomTimeZone : string * TimeSpan * string * string * string * TimeZoneInfo.AdjustmentRule[] -&gt; TimeZoneInfo" Usage="System.TimeZoneInfo.CreateCustomTimeZone (id, baseUtcOffset, displayName, standardDisplayName, daylightDisplayName, adjustmentRules)" />
      <MemberSignature Language="C#" Value="public static TimeZoneInfo CreateCustomTimeZone (string id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, TimeZoneInfo.AdjustmentRule[] adjustmentRules);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="baseUtcOffset" Type="System.TimeSpan" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="displayName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="standardDisplayName" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="daylightDisplayName" Type="System.String" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="adjustmentRules" Type="System.TimeZoneInfo+AdjustmentRule[]" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="0ae5c-420">时区的标识符。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-420">The time zone's identifier.</span></span></param>
        <param name="baseUtcOffset"><span data-ttu-id="0ae5c-421">一个对象，它表示此时区和协调世界时 (UTC) 之间的时差。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-421">An object that represents the time difference between this time zone and Coordinated Universal Time (UTC).</span></span></param>
        <param name="displayName"><span data-ttu-id="0ae5c-422">新时区的显示名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-422">The display name of the new time zone.</span></span></param>
        <param name="standardDisplayName"><span data-ttu-id="0ae5c-423">新时区的标准时间名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-423">The new time zone's standard time name.</span></span></param>
        <param name="daylightDisplayName"><span data-ttu-id="0ae5c-424">新时区的夏令制名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-424">The daylight saving time name of the new time zone.</span></span></param>
        <param name="adjustmentRules"><span data-ttu-id="0ae5c-425">一个数组，它将基本 UTC 偏移量增加了特定的期间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-425">An array that augments the base UTC offset for a particular period.</span></span></param>
        <summary><span data-ttu-id="0ae5c-426">创建带指定标识符的自定义时区、与协调世界时 (UTC) 的偏移量、显示名称、标准时间名称、夏时制名称和夏时制规则。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-426">Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, a standard time name, a daylight saving time name, and daylight saving time rules.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-427">一个表示新时区的 <see cref="T:System.TimeZoneInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-427">A <see cref="T:System.TimeZoneInfo" /> object that represents the new time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-428">此方法的重载 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> 适用于创建支持夏令时的时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-428">This overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method is suitable for creating a time zone that supports daylight saving time.</span></span> <span data-ttu-id="0ae5c-429">若要定义不支持夏令时的时区，请使用 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> 或 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-429">To define a time zone that does not support daylight saving time, use either the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="0ae5c-430">下表显示了提供给方法的参数 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> 与方法调用返回的对象成员之间的关系 <xref:System.TimeZoneInfo> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-430">The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method and the members of the <xref:System.TimeZoneInfo> object that are returned by the method call.</span></span>  
  
|<span data-ttu-id="0ae5c-431">CreateCustomTimeZone 参数</span><span class="sxs-lookup"><span data-stu-id="0ae5c-431">CreateCustomTimeZone parameter</span></span>|<span data-ttu-id="0ae5c-432">TimeZoneInfo 成员</span><span class="sxs-lookup"><span data-stu-id="0ae5c-432">TimeZoneInfo member</span></span>|  
|------------------------------------|-------------------------|  
|`id`|<xref:System.TimeZoneInfo.Id%2A>|  
|`baseUtcOffset`|<xref:System.TimeZoneInfo.BaseUtcOffset%2A>|  
|`displayName`|<xref:System.TimeZoneInfo.DisplayName%2A>|  
|`standardDisplayName`|<xref:System.TimeZoneInfo.StandardName%2A>|  
|`daylightDisplayName`|<xref:System.TimeZoneInfo.DaylightName%2A>|  
|`adjustmentRules`|<span data-ttu-id="0ae5c-433"><xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType>由方法返回的对象的数组 <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-433">An array of <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType> objects returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method.</span></span>|  
  
 <span data-ttu-id="0ae5c-434">通常，时区的标准时间名称及其标识符是相同的。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-434">Typically, the time zone's standard time name and its identifier are the same.</span></span> <span data-ttu-id="0ae5c-435">但是，时区标识符的长度不应超过32个字符。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-435">However, the length of the time zone's identifier should not exceed 32 characters.</span></span> <span data-ttu-id="0ae5c-436">传递给参数的字符串 `displayName` 采用相当标准的格式。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-436">The string passed to the `displayName` parameter follows a fairly standard format.</span></span> <span data-ttu-id="0ae5c-437">显示名称的第一部分是时区相对于协调世界时的基本偏移量，它由 "格林尼治标准时间) " 的缩写项 " (" 括在括号中。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-437">The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses.</span></span> <span data-ttu-id="0ae5c-438">后跟一个字符串，该字符串标识时区本身，或时区中的一个或多个城市、区域或国家/地区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-438">This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both.</span></span> <span data-ttu-id="0ae5c-439">例如：</span><span class="sxs-lookup"><span data-stu-id="0ae5c-439">For example:</span></span>  
  
```  
(GMT+02:00) Athens, Beirut, Istanbul, Minsk  
(GMT-02:00) Mid-Atlantic  
(GMT-07:00) Mountain Time (US & Canada)  
```  
  
 <span data-ttu-id="0ae5c-440">`baseUtcOffset`参数为时区的所有调整规则定义自定义时区相对于协调世界时 (UTC) 的偏移量。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-440">The `baseUtcOffset` parameter defines the custom time zone's offset from Coordinated Universal Time (UTC) for all of the time zone's adjustment rules.</span></span> <span data-ttu-id="0ae5c-441">换句话说， <xref:System.TimeZoneInfo> 对象模型假定时区与 UTC 的偏移量在时区的整个生命周期内都是固定的，而与特定调整规则无关。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-441">In other words, the <xref:System.TimeZoneInfo> object model assumes that the time zone's offset from UTC is constant throughout the life of the time zone, and exists independent of particular adjustment rules.</span></span> <span data-ttu-id="0ae5c-442">若要反映已更改其与 UTC 的偏移量的时区，你必须创建一个新的时区对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-442">To reflect a time zone that has changed its offset from UTC, you must create a new time zone object.</span></span>  
  
 <span data-ttu-id="0ae5c-443">时区的调整规则是通过执行以下操作定义的：</span><span class="sxs-lookup"><span data-stu-id="0ae5c-443">A time zone's adjustment rules are defined by doing the following:</span></span>  
  
1.  <span data-ttu-id="0ae5c-444">调用 <xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A> 或 <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> 方法，以定义每个调整规则的开始和结束转换时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-444">Calling either the <xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A> or the <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> method to define the starting and ending transition time for each adjustment rule.</span></span>  
  
2.  <span data-ttu-id="0ae5c-445"><xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A>为每个调整规则调用方法。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-445">Calling the <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> method for each adjustment rule.</span></span>  
  
3.  <span data-ttu-id="0ae5c-446">将调整规则分配给可以作为参数传递的数组 `adjustmentRules` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-446">Assigning the adjustment rules to an array that can be passed as the `adjustmentRules` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-447">下面的示例为南极洲中的 Palmer 工作站和安特卫普岛创建自定义时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-447">The following example creates a custom time zone for the Palmer station and Anvers Island in Antarctica.</span></span> <span data-ttu-id="0ae5c-448">然后，它将本地时间转换为新时区中的时间，并显示结果。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-448">It then converts the local time to the time in the new time zone and displays the result.</span></span>  
  
 [!code-csharp[System.TimeZone2.CreateTimeZone#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#2)]
 [!code-vb[System.TimeZone2.CreateTimeZone#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0ae5c-449"><paramref name="id" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-449">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ae5c-450"><paramref name="id" /> 参数为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-450">The <paramref name="id" /> parameter is an empty string ("").</span></span>  
  
<span data-ttu-id="0ae5c-451">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0ae5c-451">-or-</span></span> 
<span data-ttu-id="0ae5c-452"><paramref name="baseUtcOffset" /> 参数不表示整分钟数。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-452">The <paramref name="baseUtcOffset" /> parameter does not represent a whole number of minutes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0ae5c-453"><paramref name="baseUtcOffset" /> 参数大于 14 小时或小于 -14 小时。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-453">The <paramref name="baseUtcOffset" /> parameter is greater than 14 hours or less than -14 hours.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="0ae5c-454">在 <paramref name="adjustmentRules" /> 参数中指定的调整规则重叠。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-454">The adjustment rules specified in the <paramref name="adjustmentRules" /> parameter overlap.</span></span>  
  
<span data-ttu-id="0ae5c-455">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0ae5c-455">-or-</span></span> 
<span data-ttu-id="0ae5c-456">在 <paramref name="adjustmentRules" /> 参数中指定的调整规则未按时间顺序排列。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-456">The adjustment rules specified in the <paramref name="adjustmentRules" /> parameter are not in chronological order.</span></span>  
  
<span data-ttu-id="0ae5c-457">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0ae5c-457">-or-</span></span> 
<span data-ttu-id="0ae5c-458"><paramref name="adjustmentRules" /> 中的一个或多个元素为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-458">One or more elements in <paramref name="adjustmentRules" /> are <see langword="null" />.</span></span>  
  
<span data-ttu-id="0ae5c-459">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0ae5c-459">-or-</span></span> 
<span data-ttu-id="0ae5c-460">一个日期可能有多个应用于它的调整规则。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-460">A date can have multiple adjustment rules applied to it.</span></span>  
  
<span data-ttu-id="0ae5c-461">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0ae5c-461">-or-</span></span> 
<span data-ttu-id="0ae5c-462"><paramref name="baseUtcOffset" /> 参数与 <paramref name="adjustmentRules" /> 数组中一个或多个对象的 <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> 值的和大于 14 小时或小于 -14 小时。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-462">The sum of the <paramref name="baseUtcOffset" /> parameter and the <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> value of one or more objects in the <paramref name="adjustmentRules" /> array is greater than 14 hours or less than -14 hours.</span></span></exception>
        <related type="Article" href="/dotnet/standard/datetime/create-time-zones-with-adjustment-rules"><span data-ttu-id="0ae5c-463">如何：创建带有调整规则的时区</span><span class="sxs-lookup"><span data-stu-id="0ae5c-463">How to: Create Time Zones with Adjustment Rules</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateCustomTimeZone">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo? CreateCustomTimeZone (string? id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, TimeZoneInfo.AdjustmentRule[]? adjustmentRules, bool disableDaylightSavingTime);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo CreateCustomTimeZone(string id, valuetype System.TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, class System.TimeZoneInfo/AdjustmentRule[] adjustmentRules, bool disableDaylightSavingTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCustomTimeZone (id As String, baseUtcOffset As TimeSpan, displayName As String, standardDisplayName As String, daylightDisplayName As String, adjustmentRules As TimeZoneInfo.AdjustmentRule(), disableDaylightSavingTime As Boolean) As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo ^ CreateCustomTimeZone(System::String ^ id, TimeSpan baseUtcOffset, System::String ^ displayName, System::String ^ standardDisplayName, System::String ^ daylightDisplayName, cli::array &lt;TimeZoneInfo::AdjustmentRule ^&gt; ^ adjustmentRules, bool disableDaylightSavingTime);" />
      <MemberSignature Language="F#" Value="static member CreateCustomTimeZone : string * TimeSpan * string * string * string * TimeZoneInfo.AdjustmentRule[] * bool -&gt; TimeZoneInfo" Usage="System.TimeZoneInfo.CreateCustomTimeZone (id, baseUtcOffset, displayName, standardDisplayName, daylightDisplayName, adjustmentRules, disableDaylightSavingTime)" />
      <MemberSignature Language="C#" Value="public static TimeZoneInfo CreateCustomTimeZone (string id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, TimeZoneInfo.AdjustmentRule[] adjustmentRules, bool disableDaylightSavingTime);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="baseUtcOffset" Type="System.TimeSpan" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="displayName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="standardDisplayName" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="daylightDisplayName" Type="System.String" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="adjustmentRules" Type="System.TimeZoneInfo+AdjustmentRule[]" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="disableDaylightSavingTime" Type="System.Boolean" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="0ae5c-464">时区的标识符。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-464">The time zone's identifier.</span></span></param>
        <param name="baseUtcOffset"><span data-ttu-id="0ae5c-465">一个 <see cref="T:System.TimeSpan" /> 对象，它表示此时区和协调世界时 (UTC) 之间的时差。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-465">A <see cref="T:System.TimeSpan" /> object that represents the time difference between this time zone and Coordinated Universal Time (UTC).</span></span></param>
        <param name="displayName"><span data-ttu-id="0ae5c-466">新时区的显示名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-466">The display name of the new time zone.</span></span></param>
        <param name="standardDisplayName"><span data-ttu-id="0ae5c-467">新时区的标准时间名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-467">The standard time name of the new time zone.</span></span></param>
        <param name="daylightDisplayName"><span data-ttu-id="0ae5c-468">新时区的夏令制名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-468">The daylight saving time name of the new time zone.</span></span></param>
        <param name="adjustmentRules"><span data-ttu-id="0ae5c-469">一个 <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> 对象的数组，这些对象增加特定期间的基本 UTC 偏移量。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-469">An array of <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> objects that augment the base UTC offset for a particular period.</span></span></param>
        <param name="disableDaylightSavingTime"><span data-ttu-id="0ae5c-470">如果为 <see langword="true" /> ，则丢弃包含新对象的 <paramref name="adjustmentRules" /> 中与夏令制相关的任何信息；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-470"><see langword="true" /> to discard any daylight saving time-related information present in <paramref name="adjustmentRules" /> with the new object; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0ae5c-471">创建带指定标识符的自定义时区、与协调世界时 (UTC) 的偏移量、显示名称、标准时间名称、夏令制名称、夏令制规则以及指示返回的对象是否反映夏令制信息的值。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-471">Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, a standard time name, a daylight saving time name, daylight saving time rules, and a value that indicates whether the returned object reflects daylight saving time information.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-472">新时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-472">The new time zone.</span></span> <span data-ttu-id="0ae5c-473">如果 <paramref name="disableDaylightSavingTime" /> 参数为 <see langword="true" />，则返回的对象没有夏令制数据。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-473">If the <paramref name="disableDaylightSavingTime" /> parameter is <see langword="true" />, the returned object has no daylight saving time data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-474">您可以使用方法的此重载 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> 来创建自定义时区，该时区的支持夏令时可在运行时通过条件来确定。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-474">You can use this overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method to create a custom time zone whose support for daylight saving time can be determined by conditions at run time.</span></span>  
  
 <span data-ttu-id="0ae5c-475">下表显示了提供给方法的参数 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> 与方法调用返回的对象成员之间的关系 <xref:System.TimeZoneInfo> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-475">The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method and the members of the <xref:System.TimeZoneInfo> object that are returned by the method call.</span></span>  
  
|<span data-ttu-id="0ae5c-476">CreateCustomTimeZone 参数</span><span class="sxs-lookup"><span data-stu-id="0ae5c-476">CreateCustomTimeZone parameter</span></span>|<span data-ttu-id="0ae5c-477">TimeZoneInfo 属性</span><span class="sxs-lookup"><span data-stu-id="0ae5c-477">TimeZoneInfo property</span></span>|  
|------------------------------------|---------------------------|  
|`id`|<xref:System.TimeZoneInfo.Id%2A>|  
|`baseUtcOffset`|<xref:System.TimeZoneInfo.BaseUtcOffset%2A>|  
|`displayName`|<xref:System.TimeZoneInfo.DisplayName%2A>|  
|`standardDisplayName`|<xref:System.TimeZoneInfo.StandardName%2A>|  
|`daylightDisplayName`|<span data-ttu-id="0ae5c-478"><xref:System.TimeZoneInfo.DaylightName%2A> 如果为，则为 `disableDaylightSavingTime` `false` ; <xref:System.String.Empty?displayProperty=nameWithType> 如果 `disableDaylightSavingTime` 为，则为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-478"><xref:System.TimeZoneInfo.DaylightName%2A> if `disableDaylightSavingTime` is `false`; <xref:System.String.Empty?displayProperty=nameWithType> if `disableDaylightSavingTime` is `true`.</span></span>|  
|`adjustmentRules`|<span data-ttu-id="0ae5c-479"><xref:System.TimeZoneInfo.AdjustmentRule>如果为，则为由方法返回的对象的数组 <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> `disableDaylightSavingTime` ; 如果为，则为 `false` 方法返回的空数组 <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> `disableDaylightSavingTime` `true` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-479">An array of <xref:System.TimeZoneInfo.AdjustmentRule> objects returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method if `disableDaylightSavingTime` is `false`; an empty array returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method if `disableDaylightSavingTime` is `true`.</span></span>|  
|`disableDaylightSavingTime`|<span data-ttu-id="0ae5c-480">不是 <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-480">Not <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A>.</span></span>|  
  
 <span data-ttu-id="0ae5c-481">通常，时区的标准时间名称及其标识符是相同的。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-481">Typically, the time zone's standard time name and its identifier are the same.</span></span> <span data-ttu-id="0ae5c-482">但是，时区标识符的长度不应超过32个字符。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-482">However, the length of the time zone's identifier should not exceed 32 characters.</span></span> <span data-ttu-id="0ae5c-483">传递给参数的字符串 `displayName` 采用相当标准的格式。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-483">The string passed to the `displayName` parameter follows a fairly standard format.</span></span> <span data-ttu-id="0ae5c-484">显示名称的第一部分是时区相对于协调世界时的基本偏移量，它由 "格林尼治标准时间) " 的缩写项 " (" 括在括号中。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-484">The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses.</span></span> <span data-ttu-id="0ae5c-485">后跟一个字符串，该字符串标识时区本身，或时区中的一个或多个城市、区域或国家/地区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-485">This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both.</span></span> <span data-ttu-id="0ae5c-486">例如：</span><span class="sxs-lookup"><span data-stu-id="0ae5c-486">For example:</span></span>  
  
```  
(GMT+02:00) Athens, Beirut, Istanbul, Minsk  
(GMT-02:00) Mid-Atlantic  
(GMT-07:00) Mountain Time (US & Canada)  
```  
  
 <span data-ttu-id="0ae5c-487">时区的调整规则是通过执行以下操作定义的：</span><span class="sxs-lookup"><span data-stu-id="0ae5c-487">A time zone's adjustment rules are defined by doing the following:</span></span>  
  
1.  <span data-ttu-id="0ae5c-488">调用 <xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A> 或 <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> 方法以定义每个调整规则的起始和结束转换规则。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-488">Calling either the <xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A> or the <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> method to define the starting and ending transition rules for each adjustment rule.</span></span>  
  
2.  <span data-ttu-id="0ae5c-489"><xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A>为每个调整规则调用方法。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-489">Calling the <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> method for each adjustment rule.</span></span>  
  
3.  <span data-ttu-id="0ae5c-490">将调整规则分配给可以作为参数传递的数组 `adjustmentRules` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-490">Assigning the adjustment rules to an array that can be passed as the `adjustmentRules` parameter.</span></span>  
  
 <span data-ttu-id="0ae5c-491">如果 `disableDaylightSavingTime` 参数为 `false` ，则此方法的操作与 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> 重载相同。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-491">If `disableDaylightSavingTime` parameter is `false`, the operation of this method is identical to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="0ae5c-492">如果 `disableDaylightSavingTime` 为 `true` ，则返回的对象不包含调整规则和 <xref:System.TimeZoneInfo.DaylightName%2A> 值为空字符串的属性。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-492">If `disableDaylightSavingTime` is `true`, the returned object includes no adjustment rules and a <xref:System.TimeZoneInfo.DaylightName%2A> property whose value is an empty string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-493">下面的示例为南极洲中的 Palmer 工作站和安特卫普岛创建自定义时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-493">The following example creates a custom time zone for the Palmer station and Anvers Island in Antarctica.</span></span> <span data-ttu-id="0ae5c-494">它将对 `disableDaylightSavingTime` 方法的调用中的参数设置 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> 为 `true` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-494">It sets the `disableDaylightSavingTime` parameter in the call to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method to `true`.</span></span> <span data-ttu-id="0ae5c-495">然后，它显示新时区的夏时制名称（如果有），以及用于确认新时区没有夏令时信息的调整规则数。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-495">It then displays the new time zone's daylight saving time name, if one is present, and the number of adjustment rules to confirm that the new time zone has no daylight saving time information.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs" interactive="try-dotnet-method" id="Snippet3":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb" id="Snippet3":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0ae5c-496"><paramref name="id" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-496">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ae5c-497"><paramref name="id" /> 参数为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-497">The <paramref name="id" /> parameter is an empty string ("").</span></span>  
  
<span data-ttu-id="0ae5c-498">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0ae5c-498">-or-</span></span> 
<span data-ttu-id="0ae5c-499"><paramref name="baseUtcOffset" /> 参数不表示整分钟数。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-499">The <paramref name="baseUtcOffset" /> parameter does not represent a whole number of minutes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0ae5c-500"><paramref name="baseUtcOffset" /> 参数大于 14 小时或小于 -14 小时。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-500">The <paramref name="baseUtcOffset" /> parameter is greater than 14 hours or less than -14 hours.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="0ae5c-501">在 <paramref name="adjustmentRules" /> 参数中指定的调整规则重叠。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-501">The adjustment rules specified in the <paramref name="adjustmentRules" /> parameter overlap.</span></span>  
  
<span data-ttu-id="0ae5c-502">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0ae5c-502">-or-</span></span> 
<span data-ttu-id="0ae5c-503">在 <paramref name="adjustmentRules" /> 参数中指定的调整规则未按时间顺序排列。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-503">The adjustment rules specified in the <paramref name="adjustmentRules" /> parameter are not in chronological order.</span></span>  
  
<span data-ttu-id="0ae5c-504">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0ae5c-504">-or-</span></span> 
<span data-ttu-id="0ae5c-505"><paramref name="adjustmentRules" /> 中的一个或多个元素为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-505">One or more elements in <paramref name="adjustmentRules" /> are <see langword="null" />.</span></span>  
  
<span data-ttu-id="0ae5c-506">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0ae5c-506">-or-</span></span> 
<span data-ttu-id="0ae5c-507">一个日期可能有多个应用于它的调整规则。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-507">A date can have multiple adjustment rules applied to it.</span></span>  
  
<span data-ttu-id="0ae5c-508">- 或 -</span><span class="sxs-lookup"><span data-stu-id="0ae5c-508">-or-</span></span> 
<span data-ttu-id="0ae5c-509"><paramref name="baseUtcOffset" /> 参数与 <paramref name="adjustmentRules" /> 数组中一个或多个对象的 <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> 值的和大于 14 小时或小于 -14 小时。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-509">The sum of the <paramref name="baseUtcOffset" /> parameter and the <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> value of one or more objects in the <paramref name="adjustmentRules" /> array is greater than 14 hours or less than -14 hours.</span></span></exception>
        <related type="Article" href="/dotnet/standard/datetime/create-time-zones-without-adjustment-rules"><span data-ttu-id="0ae5c-510">如何：创建不带调整规则的时区</span><span class="sxs-lookup"><span data-stu-id="0ae5c-510">How to: Create Time Zones Without Adjustment Rules</span></span></related>
        <related type="Article" href="/dotnet/standard/datetime/create-time-zones-with-adjustment-rules"><span data-ttu-id="0ae5c-511">如何：创建带有调整规则的时区</span><span class="sxs-lookup"><span data-stu-id="0ae5c-511">How to: Create Time Zones with Adjustment Rules</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DaylightName">
      <MemberSignature Language="C#" Value="public string DaylightName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DaylightName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.DaylightName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DaylightName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightName : string" Usage="System.TimeZoneInfo.DaylightName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ae5c-512">获取当前时区的夏令时的显示名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-512">Gets the display name for the current time zone's daylight saving time.</span></span></summary>
        <value><span data-ttu-id="0ae5c-513">时区的夏令时的显示名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-513">The display name for the time zone's daylight saving time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-514">显示名称根据 Windows 操作系统中安装的区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-514">The display name is localized based on the culture installed with the Windows operating system.</span></span>  
  
 <span data-ttu-id="0ae5c-515">一个 <xref:System.TimeZoneInfo.DaylightName%2A> 属性，其值不为， <xref:System.String.Empty?displayProperty=nameWithType> 或者不 `null` 一定表示时区支持夏令时。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-515">A <xref:System.TimeZoneInfo.DaylightName%2A> property whose value is not <xref:System.String.Empty?displayProperty=nameWithType> or `null` does not necessarily indicate that the time zone supports daylight saving time.</span></span> <span data-ttu-id="0ae5c-516">若要确定时区是否支持夏令时，请检查其属性的值 <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-516">To determine whether the time zone supports daylight saving time, check the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property.</span></span>  
  
 <span data-ttu-id="0ae5c-517">在大多数情况下， `DaylightName` 系统定义的时区的属性不是 <xref:System.String.Empty?displayProperty=nameWithType> 或 `null` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-517">In most cases, the `DaylightName` property of system-defined time zones is not <xref:System.String.Empty?displayProperty=nameWithType> or `null`.</span></span> <span data-ttu-id="0ae5c-518">但是， <xref:System.TimeZoneInfo.DaylightName%2A> 可以将自定义时区的属性设置为 <xref:System.String.Empty?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-518">However, the <xref:System.TimeZoneInfo.DaylightName%2A> property of custom time zones can be set to <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0ae5c-519">当自定义时区由 <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType> 或 <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%2CSystem.Boolean%29?displayProperty=nameWithType> 重载创建，并且参数为时，会发生这种情况 `disableDaylightSavingTime` `true` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-519">This occurs when custom time zones are created by the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%2CSystem.Boolean%29?displayProperty=nameWithType> overload and the `disableDaylightSavingTime` parameter is `true`.</span></span> <span data-ttu-id="0ae5c-520">因此，您的代码不应假定属性的值 <xref:System.TimeZoneInfo.DaylightName%2A> 不为 `null` 或为空。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-520">Therefore, your code should never assume that the value of the <xref:System.TimeZoneInfo.DaylightName%2A> property is not `null` or empty.</span></span>  
  
 <span data-ttu-id="0ae5c-521"><xref:System.TimeZoneInfo.DaylightName%2A>属性等效于 <xref:System.TimeZone.DaylightName%2A> 类的属性 <xref:System.TimeZone> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-521">The <xref:System.TimeZoneInfo.DaylightName%2A> property is equivalent to the <xref:System.TimeZone.DaylightName%2A> property of the <xref:System.TimeZone> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-522">下面的示例定义了一个名为 `DisplayDateWithTimeZoneName` 的方法，该方法使用 <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> 方法来确定是显示时区的标准时间名称还是夏时制名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-522">The following example defines a method named `DisplayDateWithTimeZoneName` that uses the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method to determine whether to display a time zone's standard time name or daylight saving time name.</span></span>  
  
 [!code-csharp[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#1)]
 [!code-vb[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.TimeZoneInfo.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ae5c-523">获取表示时区的一般显示名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-523">Gets the general display name that represents the time zone.</span></span></summary>
        <value><span data-ttu-id="0ae5c-524">时区的一般显示名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-524">The time zone's general display name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-525">显示名称根据 Windows 操作系统中安装的区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-525">The display name is localized based on the culture installed with the Windows operating system.</span></span>  
  
 <span data-ttu-id="0ae5c-526">Windows 系统时区的时区显示名称遵循相当标准的格式。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-526">Time zone display names for Windows system time zones follow a fairly standard format.</span></span> <span data-ttu-id="0ae5c-527">显示名称的第一部分是时区相对于协调世界时的基本偏移量，它由 "格林尼治标准时间) " 的缩写项 " (" 括在括号中。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-527">The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses.</span></span> <span data-ttu-id="0ae5c-528">对于协调世界时，不含偏移的 GMT 首字母缩略词括在括号中。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-528">For Coordinated Universal Time, the GMT acronym with no offset is enclosed in parentheses.</span></span>  <span data-ttu-id="0ae5c-529">后跟一个字符串，该字符串标识时区或时区中的一个或多个城市、区域或国家/地区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-529">This is followed by a string that identifies the time zone or one or more of the cities, regions, or countries in the time zone.</span></span> <span data-ttu-id="0ae5c-530">例如：</span><span class="sxs-lookup"><span data-stu-id="0ae5c-530">For example:</span></span>  
  
```  
(GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London  
(GMT+02:00) Athens, Beirut, Istanbul, Minsk  
(GMT-02:00) Mid-Atlantic  
(GMT-07:00) Mountain Time (US & Canada)  
```  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-531">下面的示例检索一个 <xref:System.TimeZoneInfo> 对象，该对象表示本地时区并输出其显示名称、标准时间名称和夏时制名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-531">The following example retrieves a <xref:System.TimeZoneInfo> object that represents the local time zone and outputs its display name, standard time name, and daylight saving time name.</span></span> <span data-ttu-id="0ae5c-532">系统将显示美国太平洋标准时区的输出。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-532">The output is displayed for a system in the U.S. Pacific Standard Time zone.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/ShowTimeZoneNames1.cs#2)]
 [!code-vb[System.TimeZone2.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/ShowTimeZoneNames1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0ae5c-533">确定两个 <see cref="T:System.TimeZoneInfo" /> 对象是否相等。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-533">Determines whether two <see cref="T:System.TimeZoneInfo" /> objects are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="timeZoneInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="0ae5c-534">要与当前对象进行比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-534">A second object to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="0ae5c-535">确定当前的 <see cref="T:System.TimeZoneInfo" /> 对象和另一个对象是否相等。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-535">Determines whether the current <see cref="T:System.TimeZoneInfo" /> object and another object are equal.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-536">如果 <paramref name="obj" /> 是等于当前实例的 <see cref="T:System.TimeZoneInfo" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-536"><see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.TimeZoneInfo" /> object that is equal to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-537">此方法将转换或强制转换 `obj` 为 <xref:System.TimeZoneInfo> 对象，并将其与当前的实例进行比较。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-537">This method converts or casts `obj` to a <xref:System.TimeZoneInfo> object and compares it with the current instance.</span></span> <span data-ttu-id="0ae5c-538">相等性测试基于值的比较。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-538">The test for equality is based on a comparison of values.</span></span> <span data-ttu-id="0ae5c-539"><xref:System.TimeZoneInfo>在以下条件下，当前实例和被 `obj` 视为相等：</span><span class="sxs-lookup"><span data-stu-id="0ae5c-539">The current <xref:System.TimeZoneInfo> instance and `obj` are considered to be equal under the following conditions:</span></span>  
  
-   <span data-ttu-id="0ae5c-540">的运行时类型 `obj` 为 <xref:System.TimeZoneInfo> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-540">The run-time type of `obj` is <xref:System.TimeZoneInfo>.</span></span>  
  
-   <span data-ttu-id="0ae5c-541">这两个对象具有相同的 <xref:System.TimeZoneInfo.Id%2A> 属性值。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-541">The two objects have the same <xref:System.TimeZoneInfo.Id%2A> property value.</span></span>  
  
-   <span data-ttu-id="0ae5c-542">这两个对象具有相同的调整规则。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-542">The two objects have the same adjustment rules.</span></span>  
  
 <span data-ttu-id="0ae5c-543">如果 `obj` 为 `null`，则此方法返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-543">If `obj` is `null`, this method returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-544">下面的示例使用 <xref:System.TimeZoneInfo.Equals%28System.Object%29> 方法来确定本地时区是太平洋时间还是东部时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-544">The following example uses the <xref:System.TimeZoneInfo.Equals%28System.Object%29> method to determine whether the local time zone is Pacific Time or Eastern Time.</span></span>  
  
 [!code-csharp[System.TimeZoneInfo.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timezoneinfo.equals/cs/equals1.cs#1)]
 [!code-vb[System.TimeZoneInfo.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timezoneinfo.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TimeZoneInfo other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.TimeZoneInfo other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.Equals(System.TimeZoneInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As TimeZoneInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(TimeZoneInfo ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : TimeZoneInfo -&gt; bool" Usage="timeZoneInfo.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.TimeZoneInfo" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="0ae5c-545">要与当前对象进行比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-545">A second object to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="0ae5c-546">确定当前的 <see cref="T:System.TimeZoneInfo" /> 对象和另一个 <see cref="T:System.TimeZoneInfo" /> 对象是否相等。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-546">Determines whether the current <see cref="T:System.TimeZoneInfo" /> object and another <see cref="T:System.TimeZoneInfo" /> object are equal.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-547">如果两个 <see cref="T:System.TimeZoneInfo" /> 对象相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-547"><see langword="true" /> if the two <see cref="T:System.TimeZoneInfo" /> objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-548">相等性基于值的比较。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-548">Equality is based on a comparison of values.</span></span> <span data-ttu-id="0ae5c-549"><xref:System.TimeZoneInfo>在以下情况下，两个对象被视为相等：</span><span class="sxs-lookup"><span data-stu-id="0ae5c-549">Two <xref:System.TimeZoneInfo> objects are considered to be equal under the following conditions:</span></span>  
  
-   <span data-ttu-id="0ae5c-550">其属性的值 <xref:System.TimeZoneInfo.Id%2A> 相同。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-550">The value of their <xref:System.TimeZoneInfo.Id%2A> property is the same.</span></span>  
  
-   <span data-ttu-id="0ae5c-551">它们具有相同的调整规则。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-551">They have the same adjustment rules.</span></span>  
  
 <span data-ttu-id="0ae5c-552"><xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType> 返回计算以下表达式得出的布尔值：</span><span class="sxs-lookup"><span data-stu-id="0ae5c-552"><xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType> returns the Boolean value that results from evaluating the following expression:</span></span>  
  
 ```csharp 
 other.Id == this.Id && HasSameRules(other);  
 ```
  
 ```vb
 other.Id = me.Id AndAlso HasSameRules(other)  
 ```

 <span data-ttu-id="0ae5c-553">如果 `other` 参数为未初始化的 <xref:System.TimeZoneInfo> 对象，则此方法返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-553">If the `other` parameter is an uninitialized <xref:System.TimeZoneInfo> object, this method returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-554">下面的示例使用 <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29> 方法来确定本地时区是太平洋时间还是东部时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-554">The following example uses the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29> method to determine whether the local time zone is Pacific Time or Eastern Time.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#7)]
 [!code-vb[System.TimeZone2.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSystemTimeZoneById">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo FindSystemTimeZoneById (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo FindSystemTimeZoneById(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindSystemTimeZoneById (id As String) As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo ^ FindSystemTimeZoneById(System::String ^ id);" />
      <MemberSignature Language="F#" Value="static member FindSystemTimeZoneById : string -&gt; TimeZoneInfo" Usage="System.TimeZoneInfo.FindSystemTimeZoneById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="0ae5c-555">时区标识符，它对应于 <see cref="P:System.TimeZoneInfo.Id" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-555">The time zone identifier, which corresponds to the <see cref="P:System.TimeZoneInfo.Id" /> property.</span></span></param>
        <summary><span data-ttu-id="0ae5c-556">根据新的 <see cref="T:System.TimeZoneInfo" /> 对象的标识符实例化该对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-556">Instantiates a new <see cref="T:System.TimeZoneInfo" /> object based on its identifier.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-557">一个对象，其标识符为 <paramref name="id" /> 参数的值。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-557">An object whose identifier is the value of the <paramref name="id" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-558">`id`参数的长度必须与时区的标识符完全一致，但如果要成功匹配，则为; 也就是说， `id` 与时区标识符的比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-558">The `id` parameter must correspond exactly to the time zone's identifier in length, but not in case, for a successful match to occur; that is, the comparison of `id` with time zone identifiers is case-insensitive.</span></span> <span data-ttu-id="0ae5c-559">如果要根据部分匹配项来检索时区对象，可以编写自定义过程，使用 <xref:System.TimeZoneInfo> 由方法返回的对象的只读集合 <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-559">If you want to retrieve time zone objects based on partial matches, you can write custom procedures that work with the read-only collection of <xref:System.TimeZoneInfo> objects returned by the <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method.</span></span>  
  
 <span data-ttu-id="0ae5c-560">在 Windows 系统上， `FindSystemTimeZoneById` 尝试与 `id` 注册表的 HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Time Zones 分支的子项名称匹配。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-560">On Windows systems, `FindSystemTimeZoneById` tries to match `id` to the subkey names of the HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Time Zones branch of the registry.</span></span> <span data-ttu-id="0ae5c-561">在 Linux 和 macOS 上，它使用在 [ICU 库](http://userguide.icu-project.org/datetime/timezone)中可用的时区信息。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-561">On Linux and macOS, it uses time zone information available in the [ICU Library](http://userguide.icu-project.org/datetime/timezone).</span></span> <span data-ttu-id="0ae5c-562">如果注册表或库中没有所需时区的信息，则可以通过调用方法的重载之一 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> 或通过调用 <xref:System.TimeZoneInfo.FromSerializedString%2A> 反序列化 <xref:System.TimeZoneInfo> 表示所需时区的对象来创建特定时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-562">If the registry or the library does not have the information for the time zone you desire, you can create a particular time zone either by calling one of the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method or by calling <xref:System.TimeZoneInfo.FromSerializedString%2A> to deserialize a <xref:System.TimeZoneInfo> object that represents the required time zone.</span></span> <span data-ttu-id="0ae5c-563">但是，这些方法调用创建的时区并非系统定义的时间，无法使用方法进行检索 <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-563">However, time zones created by these method calls are not system-defined time and cannot be retrieved using the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method.</span></span> <span data-ttu-id="0ae5c-564">只能通过 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> 或方法调用返回的对象引用访问这些自定义时区 <xref:System.TimeZoneInfo.FromSerializedString%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-564">These custom time zones can be accessed only through the object reference returned by the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> or <xref:System.TimeZoneInfo.FromSerializedString%2A> method call.</span></span>  
  
<span data-ttu-id="0ae5c-565">此方法 <xref:System.TimeZoneInfo> 为每个方法调用返回一个新的实例; 它不返回缓存的对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-565">This method returns a new <xref:System.TimeZoneInfo> instance for each method call; it does not return cached objects.</span></span> <span data-ttu-id="0ae5c-566">这可能会影响 `FindSystemTimeZoneById` 用同一标识符重复调用方法的应用程序的性能。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-566">This may impact performance in applications that call the `FindSystemTimeZoneById` method repeatedly with the same identifier.</span></span>   
  
## Examples  
 <span data-ttu-id="0ae5c-567">下面的示例使用 <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> 方法检索东京标准时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-567">The following example uses the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method to retrieve the Tokyo Standard Time zone.</span></span> <span data-ttu-id="0ae5c-568"><xref:System.TimeZoneInfo>然后，使用该对象将本地时间转换为东京的时间，以确定它是东京标准时间还是东京夏令时。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-568">This <xref:System.TimeZoneInfo> object is then used to convert the local time to the time in Tokyo and to determine whether it is Tokyo Standard Time or Tokyo Daylight Time.</span></span>  
  
 [!code-csharp[System.TimeZone2.Conversions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Conversions/cs/convertdt2.cs#2)]
 [!code-vb[System.TimeZone2.Conversions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Conversions/vb/convertdt2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0ae5c-569">系统没有足够的内存来存放有关时区的信息。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-569">The system does not have enough memory to hold information about the time zone.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0ae5c-570"><paramref name="id" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-570">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.TimeZoneNotFoundException"><span data-ttu-id="0ae5c-571">未找到 <paramref name="id" /> 指定的时区标识符。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-571">The time zone identifier specified by <paramref name="id" /> was not found.</span></span> <span data-ttu-id="0ae5c-572">这意味着名称与 <paramref name="id" /> 匹配的时区标识符不存在，或者该标识符存在但不包含任何时区数据。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-572">This means that a time zone identifier whose name matches <paramref name="id" /> does not exist, or that the identifier exists but does not contain any time zone data.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="0ae5c-573">该进程没有读取包含时区信息的注册表项所需的权限。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-573">The process does not have the permissions required to read from the registry key that contains the time zone information.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="0ae5c-574">时区标识符已找到，但注册表数据已损坏。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-574">The time zone identifier was found, but the registry data is corrupted.</span></span></exception>
        <altmember cref="P:System.TimeZoneInfo.Id" />
        <related type="Article" href="/dotnet/standard/datetime/instantiate-time-zone-info"><span data-ttu-id="0ae5c-575">如何：实例化 TimeZoneInfo 对象</span><span class="sxs-lookup"><span data-stu-id="0ae5c-575">How to: Instantiate a TimeZoneInfo Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromSerializedString">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo FromSerializedString (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo FromSerializedString(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.FromSerializedString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromSerializedString (source As String) As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo ^ FromSerializedString(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member FromSerializedString : string -&gt; TimeZoneInfo" Usage="System.TimeZoneInfo.FromSerializedString source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="0ae5c-576">已序列化的 <see cref="T:System.TimeZoneInfo" /> 对象的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-576">The string representation of the serialized <see cref="T:System.TimeZoneInfo" /> object.</span></span></param>
        <summary><span data-ttu-id="0ae5c-577">反序列化一个字符串，以重新创建原始的已序列化的 <see cref="T:System.TimeZoneInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-577">Deserializes a string to re-create an original serialized <see cref="T:System.TimeZoneInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-578">原始序列化对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-578">The original serialized object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-579">有一种替代方法是提供创建在 Windows 上的注册表中找不到或在 Linux 和 macOS 上的 [ICU 库](http://userguide.icu-project.org/datetime/timezone) 中找不到的时区所需的所有代码。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-579">There is an alternative to providing all the code required to create a time zone that is not found in the registry on Windows or in the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="0ae5c-580">你可以定义自定义时区，并使用 <xref:System.TimeZoneInfo.ToSerializedString%2A> 独立可执行文件中的方法，或使用应用程序的安装程序将时区保存为字符串。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-580">You can define a custom time zone and either use the <xref:System.TimeZoneInfo.ToSerializedString%2A> method in a standalone executable or use an application's setup program to save the time zone as a string.</span></span> <span data-ttu-id="0ae5c-581">然后，应用程序可以从其存储位置检索此字符串，然后使用方法对其进行实例化 <xref:System.TimeZoneInfo.FromSerializedString%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-581">The application can then retrieve this string from its storage location and instantiate it using the <xref:System.TimeZoneInfo.FromSerializedString%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-582">下面的示例尝试从本地系统检索南极洲/南极点时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-582">The following example tries to retrieve the Antarctica/South Pole time zone from the local system.</span></span> <span data-ttu-id="0ae5c-583">如果失败，代码会尝试从应用程序目录中的文本文件检索有关时区的信息。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-583">If it fails, the code tries to retrieve information about the time zone from a text file in the application directory.</span></span> <span data-ttu-id="0ae5c-584">如果此尝试失败，代码会创建时区，并将有关时区的信息写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-584">If this attempt fails, the code creates the time zone and writes information about the time zone to the text file.</span></span>  
  
 [!code-csharp[System.TimeZone2.CreateTimeZone#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#4)]
 [!code-vb[System.TimeZone2.CreateTimeZone#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ae5c-585"><paramref name="source" /> 参数为 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-585">The <paramref name="source" /> parameter is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0ae5c-586"><paramref name="source" /> 参数是一个 null 字符串。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-586">The <paramref name="source" /> parameter is a null string.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="0ae5c-587">源参数不能反序列化回 <see cref="T:System.TimeZoneInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-587">The source parameter cannot be deserialized back into a <see cref="T:System.TimeZoneInfo" /> object.</span></span></exception>
        <altmember cref="M:System.TimeZoneInfo.ToSerializedString" />
        <related type="Article" href="/dotnet/standard/datetime/restore-time-zones-from-an-embedded-resource"><span data-ttu-id="0ae5c-588">如何：从嵌入的资源还原时区</span><span class="sxs-lookup"><span data-stu-id="0ae5c-588">How to: Restore Time Zones from an Embedded Resource</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAdjustmentRules">
      <MemberSignature Language="C#" Value="public TimeZoneInfo.AdjustmentRule[] GetAdjustmentRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.TimeZoneInfo/AdjustmentRule[] GetAdjustmentRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetAdjustmentRules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAdjustmentRules () As TimeZoneInfo.AdjustmentRule()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;TimeZoneInfo::AdjustmentRule ^&gt; ^ GetAdjustmentRules();" />
      <MemberSignature Language="F#" Value="member this.GetAdjustmentRules : unit -&gt; TimeZoneInfo.AdjustmentRule[]" Usage="timeZoneInfo.GetAdjustmentRules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+AdjustmentRule[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0ae5c-589">检索应用至当前 <see cref="T:System.TimeZoneInfo" /> 对象的 <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-589">Retrieves an array of <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> objects that apply to the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-590">此时区的对象的数组。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-590">An array of objects for this time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-591"><xref:System.TimeZoneInfo.GetAdjustmentRules%2A>方法检索对象的数组 <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-591">The <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method retrieves an array of <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType> objects.</span></span> <span data-ttu-id="0ae5c-592">数组中的每个对象都定义了该时区调整的有效开始和结束日期，以及其增量 (调整导致时间更改) 的精确量。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-592">Each object in the array defines the effective start and end date of that time zone adjustment, as well as its delta (the exact amount by which the adjustment causes the time to change).</span></span> <span data-ttu-id="0ae5c-593">此外，两个属性返回 <xref:System.TimeZoneInfo.TransitionTime?displayProperty=nameWithType> 对象，这些对象定义每年与标准时间之间的转换发生的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-593">In addition, two properties return <xref:System.TimeZoneInfo.TransitionTime?displayProperty=nameWithType> objects that define when each annual transition to and from standard time occurs.</span></span>  
  
 <span data-ttu-id="0ae5c-594">如果某个时区有多个调整规则，则通常从索引 0) 最早的 (到索引-1) 的最新 (排序 <xref:System.Array.Length%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-594">If a time zone has multiple adjustment rules, they are generally ordered from earliest (at index 0) to latest (at index <xref:System.Array.Length%2A> - 1).</span></span>  
  
 <span data-ttu-id="0ae5c-595">如果某个时区没有调整规则，则该 <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> 方法将返回一个空数组 (数组，其 <xref:System.Array.Length%2A>) 为零。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-595">If a time zone has no adjustment rules, the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method returns an empty array (an array whose <xref:System.Array.Length%2A> is zero).</span></span>  
  
 <span data-ttu-id="0ae5c-596">对于属于特定时区的调整规则，对该方法返回的数组元素所做的任何修改 <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> 都不会反映出来。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-596">Any modifications to the elements of the array returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method are not reflected in the adjustment rules that belong to a particular time zone.</span></span> <span data-ttu-id="0ae5c-597">若要修改时区的调整规则 (如，以反映与夏令时之间的历史转换) 必须使用适当的调整规则创建一个新的时区，而不是修改现有的时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-597">To modify a time zone's adjustment rules (such as to reflect its historical transition to and from daylight saving time) you must create a new time zone with the appropriate adjustment rules, rather than modify the existing one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-598">下面的示例检索在本地系统上定义的所有时区，并向控制台显示有关其调整规则的完整信息。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-598">The following example retrieves all time zones that are defined on the local system and displays complete information about their adjustment rules to the console.</span></span>  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#3)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0ae5c-599">系统内存不足，无法在内存中创建调整规则副本。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-599">The system does not have enough memory to make an in-memory copy of the adjustment rules.</span></span></exception>
        <altmember cref="T:System.TimeZoneInfo.AdjustmentRule" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAmbiguousTimeOffsets">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0ae5c-600">返回不明确的日期和时间可能映射到的日期和时间的相关信息。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-600">Returns information about the possible dates and times that an ambiguous date and time can be mapped to.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAmbiguousTimeOffsets">
      <MemberSignature Language="C#" Value="public TimeSpan[] GetAmbiguousTimeOffsets (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan[] GetAmbiguousTimeOffsets(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAmbiguousTimeOffsets (dateTime As DateTime) As TimeSpan()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;TimeSpan&gt; ^ GetAmbiguousTimeOffsets(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="member this.GetAmbiguousTimeOffsets : DateTime -&gt; TimeSpan[]" Usage="timeZoneInfo.GetAmbiguousTimeOffsets dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="0ae5c-601">日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-601">A date and time.</span></span></param>
        <summary><span data-ttu-id="0ae5c-602">返回不明确的日期和时间可能映射到的日期和时间的相关信息。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-602">Returns information about the possible dates and times that an ambiguous date and time can be mapped to.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-603">对象的数组，它表示特定日期和时间可以映射到的可能的协调世界时 (UTC) 偏移量。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-603">An array of objects that represents possible Coordinated Universal Time (UTC) offsets that a particular date and time can be mapped to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-604">此方法的准确行为取决于 <xref:System.DateTime.Kind%2A> 属性和对象之间的关系，如下 <xref:System.TimeZoneInfo> 表所示。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-604">The precise behavior of this method depends on the relationship between the <xref:System.DateTime.Kind%2A> property and the <xref:System.TimeZoneInfo> object, as the following table shows.</span></span>  
  
|<span data-ttu-id="0ae5c-605">TimeZoneInfo 对象类型</span><span class="sxs-lookup"><span data-stu-id="0ae5c-605">TimeZoneInfo object type</span></span>|<span data-ttu-id="0ae5c-606">Kind 属性值</span><span class="sxs-lookup"><span data-stu-id="0ae5c-606">Kind property value</span></span>|<span data-ttu-id="0ae5c-607">行为</span><span class="sxs-lookup"><span data-stu-id="0ae5c-607">Behavior</span></span>|  
|------------------------------|-------------------------|--------------|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-608"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> 或 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="0ae5c-608"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span></span>|<span data-ttu-id="0ae5c-609">返回不明确的时间偏移量 `dateTime` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-609">Returns ambiguous time offsets for `dateTime`.</span></span>|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-610">转换 `dateTime` 为本地时间，并在该时间返回不明确的时间偏移量。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-610">Converts `dateTime` to the local time, and then returns ambiguous time offsets for that time.</span></span>|  
|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-611">任意值。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-611">Any value.</span></span>|<span data-ttu-id="0ae5c-612">引发 <xref:System.ArgumentException> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-612">Throws an <xref:System.ArgumentException>.</span></span>|  
|<span data-ttu-id="0ae5c-613">任何其他时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-613">Any other time zone.</span></span>|<span data-ttu-id="0ae5c-614"><xref:System.DateTimeKind.Local> 或 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="0ae5c-614"><xref:System.DateTimeKind.Local> or <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span></span>|<span data-ttu-id="0ae5c-615">转换 `dateTime` 为指定的时区，然后确定该时间是否不明确。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-615">Converts `dateTime` to the specified time zone, and then determines whether that time is ambiguous.</span></span>|  
|<span data-ttu-id="0ae5c-616">任何其他时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-616">Any other time zone.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-617">确定指定时区中是否存在 `dateTime` 歧义。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-617">Determines whether `dateTime` is ambiguous in the specified time zone.</span></span>|  
  
 <span data-ttu-id="0ae5c-618"><xref:System.TimeSpan>此方法返回的数组中对象的顺序未定义。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-618">The order of <xref:System.TimeSpan> objects in the array returned by this method is undefined.</span></span> <span data-ttu-id="0ae5c-619">但是，通过将其值与时区的属性进行比较，可以确定哪个元素表示时区标准时间的偏移量 <xref:System.TimeZoneInfo.BaseUtcOffset%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-619">However, you can determine which element represents an offset from the time zone's standard time by comparing its value with the time zone's <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property.</span></span> <span data-ttu-id="0ae5c-620">若要将不明确时间映射到时区的标准时间，请参阅 [如何：解决不明确](/dotnet/standard/datetime/resolve-ambiguous-times)的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-620">To map an ambiguous time to a time zone's standard time, see [How to: Resolve Ambiguous Times](/dotnet/standard/datetime/resolve-ambiguous-times).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-621">下面的示例定义了一个名为 `ShowPossibleUtcTimes` 的方法，该方法使用 <xref:System.TimeZoneInfo.GetAmbiguousTimeOffsets%28System.DateTime%29> 方法将不明确时间映射到其可能的相应协调世界时 (UTC) 时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-621">The following example defines a method named `ShowPossibleUtcTimes` that uses the <xref:System.TimeZoneInfo.GetAmbiguousTimeOffsets%28System.DateTime%29> method to map an ambiguous time to its possible corresponding Coordinated Universal Time (UTC) times.</span></span>  
  
 [!code-csharp[System.TimeZone2.GetAmbiguousTimeOffsets#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.GetAmbiguousTimeOffsets/cs/System.TimeZone2.GetAmbiguousTimeOffsets.cs#1)]
 [!code-vb[System.TimeZone2.GetAmbiguousTimeOffsets#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.GetAmbiguousTimeOffsets/vb/System.TimeZone2.GetAmbiguousTimeOffsets.vb#1)]  
  
 <span data-ttu-id="0ae5c-622">然后，可以使用如下所示的代码调用该方法：</span><span class="sxs-lookup"><span data-stu-id="0ae5c-622">The method can then be called using code such as the following:</span></span>  
  
 [!code-csharp[System.TimeZone2.GetAmbiguousTimeOffsets#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.GetAmbiguousTimeOffsets/cs/System.TimeZone2.GetAmbiguousTimeOffsets.cs#2)]
 [!code-vb[System.TimeZone2.GetAmbiguousTimeOffsets#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.GetAmbiguousTimeOffsets/vb/System.TimeZone2.GetAmbiguousTimeOffsets.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ae5c-623"><paramref name="dateTime" /> 是明确的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-623"><paramref name="dateTime" /> is not an ambiguous time.</span></span></exception>
        <altmember cref="Overload:System.TimeZoneInfo.IsAmbiguousTime" />
        <related type="Article" href="/dotnet/standard/datetime/resolve-ambiguous-times"><span data-ttu-id="0ae5c-624">如何：解决不明确的时间</span><span class="sxs-lookup"><span data-stu-id="0ae5c-624">How to: Resolve Ambiguous Times</span></span></related>
        <related type="Article" href="/dotnet/standard/datetime/let-users-resolve-ambiguous-times"><span data-ttu-id="0ae5c-625">如何：让用户解决不明确的时间</span><span class="sxs-lookup"><span data-stu-id="0ae5c-625">How to: Let Users Resolve Ambiguous Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAmbiguousTimeOffsets">
      <MemberSignature Language="C#" Value="public TimeSpan[] GetAmbiguousTimeOffsets (DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan[] GetAmbiguousTimeOffsets(valuetype System.DateTimeOffset dateTimeOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAmbiguousTimeOffsets (dateTimeOffset As DateTimeOffset) As TimeSpan()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;TimeSpan&gt; ^ GetAmbiguousTimeOffsets(DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="F#" Value="member this.GetAmbiguousTimeOffsets : DateTimeOffset -&gt; TimeSpan[]" Usage="timeZoneInfo.GetAmbiguousTimeOffsets dateTimeOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="0ae5c-626">日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-626">A date and time.</span></span></param>
        <summary><span data-ttu-id="0ae5c-627">返回不明确的日期和时间可能映射到的日期和时间的相关信息。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-627">Returns information about the possible dates and times that an ambiguous date and time can be mapped to.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-628">对象的数组，它表示特定日期和时间可以映射到的可能的协调世界时 (UTC) 偏移量。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-628">An array of objects that represents possible Coordinated Universal Time (UTC) offsets that a particular date and time can be mapped to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-629">此方法的确切行为取决于 <xref:System.DateTimeOffset.Offset%2A> 参数的属性 `dateTimeOffset` 和对象之间的关系 <xref:System.TimeZoneInfo> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-629">The precise behavior of this method depends on the relationship between the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter and the <xref:System.TimeZoneInfo> object.</span></span> <span data-ttu-id="0ae5c-630">如果属性的值 <xref:System.DateTimeOffset.Offset%2A> 对应于当前时区在协调世界时的可能偏移量 (UTC) 日期和时间，则该方法返回可能的偏移量。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-630">If the value of the <xref:System.DateTimeOffset.Offset%2A> property corresponds to the current time zone's possible offsets from Coordinated Universal Time (UTC) for that date and time, the method returns the possible offsets.</span></span> <span data-ttu-id="0ae5c-631">否则，它将转换 `dateTimeOffset` 为当前时区中的时间，然后返回该日期和时间的可能偏移量。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-631">Otherwise, it converts `dateTimeOffset` to the time in the current time zone, and then returns the possible offsets of that date and time.</span></span>  
  
 <span data-ttu-id="0ae5c-632"><xref:System.TimeSpan>此方法返回的数组中对象的顺序未定义。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-632">The order of <xref:System.TimeSpan> objects in the array returned by this method is undefined.</span></span> <span data-ttu-id="0ae5c-633">但是，通过将其值与时区的属性进行比较，可以确定哪个元素表示时区标准时间的偏移量 <xref:System.TimeZoneInfo.BaseUtcOffset%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-633">However, you can determine which element represents an offset from the time zone's standard time by comparing its value with the time zone's <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property.</span></span> <span data-ttu-id="0ae5c-634">若要将不明确时间映射到时区的标准时间，请参阅 [如何：解决不明确](/dotnet/standard/datetime/resolve-ambiguous-times)的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-634">To map an ambiguous time to a time zone's standard time, see [How to: Resolve Ambiguous Times](/dotnet/standard/datetime/resolve-ambiguous-times).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ae5c-635"><paramref name="dateTimeOffset" /> 是明确的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-635"><paramref name="dateTimeOffset" /> is not an ambiguous time.</span></span></exception>
        <altmember cref="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTime)" />
        <related type="Article" href="/dotnet/standard/datetime/resolve-ambiguous-times"><span data-ttu-id="0ae5c-636">如何：解决不明确的时间</span><span class="sxs-lookup"><span data-stu-id="0ae5c-636">How to: Resolve Ambiguous Times</span></span></related>
        <related type="Article" href="/dotnet/standard/datetime/let-users-resolve-ambiguous-times"><span data-ttu-id="0ae5c-637">如何：让用户解决不明确的时间</span><span class="sxs-lookup"><span data-stu-id="0ae5c-637">How to: Let Users Resolve Ambiguous Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="timeZoneInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0ae5c-638">用作哈希算法的哈希函数和数据结构（如哈希表）。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-638">Serves as a hash function for hashing algorithms and data structures such as hash tables.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-639">一个 32 位有符号整数，用作此 <see cref="T:System.TimeZoneInfo" /> 对象的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-639">A 32-bit signed integer that serves as the hash code for this <see cref="T:System.TimeZoneInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-640">有关方法的其他详细信息 <xref:System.TimeZoneInfo.GetHashCode%2A> ，请参阅 <xref:System.Object.GetHashCode%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-640">For additional detail about the <xref:System.TimeZoneInfo.GetHashCode%2A> method, see <xref:System.Object.GetHashCode%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemTimeZones">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;TimeZoneInfo&gt; GetSystemTimeZones ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.TimeZoneInfo&gt; GetSystemTimeZones() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetSystemTimeZones" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSystemTimeZones () As ReadOnlyCollection(Of TimeZoneInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;TimeZoneInfo ^&gt; ^ GetSystemTimeZones();" />
      <MemberSignature Language="F#" Value="static member GetSystemTimeZones : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;TimeZoneInfo&gt;" Usage="System.TimeZoneInfo.GetSystemTimeZones " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName Language="C#">[System.Security.SecurityTreatAsSafe]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityTreatAsSafe&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.TimeZoneInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0ae5c-641">返回时区信息在本地系统上可用的所有时区的已排序集合。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-641">Returns a sorted collection of all the time zones about which information is available on the local system.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-642"><see cref="T:System.TimeZoneInfo" /> 对象的只读集合。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-642">A read-only collection of <see cref="T:System.TimeZoneInfo" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-643">此 <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> 方法从位于 Windows 系统上的注册表 HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Time Zones 项的子项以及 Linux 和 macOS 上的 [ICU 库](http://userguide.icu-project.org/datetime/timezone) 中检索所有可用的时区信息。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-643">The <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method retrieves all available time zone information from the subkeys of the registry's HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Time Zones key on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="0ae5c-644">如果无法成功检索和分析单个对象的特定字符串属性的值，则 <xref:System.TimeZoneInfo> 此方法会将其值设置为空字符串 ( "" ) 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-644">If it is unable to successfully retrieve and parse values for particular string properties of individual <xref:System.TimeZoneInfo> objects, this method sets their value to an empty string ("").</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0ae5c-645"><xref:System.TimeZoneInfo.GetSystemTimeZones%2A>方法 <xref:System.TimeZoneInfo> 只为 Windows 注册表或 ICU 库中定义的时区返回对象的集合。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-645">The <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method returns a collection of <xref:System.TimeZoneInfo> objects only for time zones defined in the Windows registry or the ICU library.</span></span> <span data-ttu-id="0ae5c-646">它不包含使用方法的重载创建的时区 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-646">It does not include time zones created using the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span> <span data-ttu-id="0ae5c-647">它们只能通过时区创建方法所返回的对象引用进行访问。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-647">These are accessible only through the object reference returned by the time zone creation method.</span></span>  
  
 <span data-ttu-id="0ae5c-648">此方法返回的集合按 UTC 偏移量排序，对于具有相同 UTC 偏移量的时区，使用当前区域性按显示名称排序。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-648">The collection returned by this method is sorted by UTC offset and, for time zones that have the same UTC offset, by the display name using the current culture.</span></span> <span data-ttu-id="0ae5c-649">有关显示名称的信息，请参阅 <xref:System.TimeZoneInfo.DisplayName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-649">For information about the display name, see <xref:System.TimeZoneInfo.DisplayName%2A>.</span></span>  
  
 <span data-ttu-id="0ae5c-650"><xref:System.Collections.ObjectModel.ReadOnlyCollection%601>此方法返回的对象支持 <xref:System.Collections.Generic.IEnumerable%601> 接口，这意味着可以使用 c # 中的 (来循环访问该对象 `foreach` ) 或 `For Each…Next` Visual Basic) 语句中的 (。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-650">The <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> object returned by this method supports the <xref:System.Collections.Generic.IEnumerable%601> interface, which means that it can be iterated using the `foreach` (in C#) or `For Each…Next` (in Visual Basic) statements.</span></span> <span data-ttu-id="0ae5c-651">循环的每次迭代都提供集合中的下一个 <xref:System.TimeZoneInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-651">Each iteration of the loop provides the next <xref:System.TimeZoneInfo> object in the collection.</span></span>  
  
 <span data-ttu-id="0ae5c-652">对象的集合 <xref:System.TimeZoneInfo> 表示本地计算机上定义的时区; 不一定在所有时间段内提供所有时区的完整信息。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-652">The collection of <xref:System.TimeZoneInfo> objects represents time zones defined on the local computer; it does not necessarily provide complete information for all time zones during all time periods.</span></span> <span data-ttu-id="0ae5c-653">如果你的应用程序需要在本地计算机上找不到时区，则可以使用方法的重载来创建自定义时区 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-653">If your application requires time zones not found on the local computer, you can create custom time zones using the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span> <span data-ttu-id="0ae5c-654">有关详细信息，请参阅 [如何：创建不带调整规则的时区](/dotnet/standard/datetime/create-time-zones-without-adjustment-rules) 和 [如何：创建带有调整规则的](/dotnet/standard/datetime/create-time-zones-with-adjustment-rules)时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-654">For more information, see [How to: Create Time Zones Without Adjustment Rules](/dotnet/standard/datetime/create-time-zones-without-adjustment-rules) and [How to: Create Time Zones with Adjustment Rules](/dotnet/standard/datetime/create-time-zones-with-adjustment-rules).</span></span>  
  
 <span data-ttu-id="0ae5c-655">还可以通过调用 <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> 方法并提供要作为参数检索的时区的标识符，来确定是否在本地计算机上定义了单个时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-655">You can also determine whether an individual time zone is defined on the local computer by calling the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method and providing the identifier of the time zone you want to retrieve as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-656">下面的示例检索一个时区对象的集合，这些对象表示在计算机上定义的时区，并将有关这些时区的信息写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-656">The following example retrieves a collection of time zone objects that represent the time zones defined on a computer and writes information about them to a text file.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/getsystemtimezones1.cs#6)]
 [!code-vb[System.TimeZone2.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/getsystemtimezones1.vb#6)]
  [!code-powershell[System.TimeZone2.Class#6](~/samples/snippets/powershell/VS_Snippets_CLR_System/System.TimeZone2.Class/PS/Timezone2_Examples.ps1)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="0ae5c-657">没有足够的内存来存储所有的时区信息。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-657">There is insufficient memory to store all time zone information.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="0ae5c-658">用户无权读取包含时区信息的注册表项。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-658">The user does not have permission to read from the registry keys that contain time zone information.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUtcOffset">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0ae5c-659">计算此时区中的时间与协调世界时 (UTC) 之间针对特定日期和时间的偏移量或差值。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-659">Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUtcOffset">
      <MemberSignature Language="C#" Value="public TimeSpan GetUtcOffset (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetUtcOffset(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUtcOffset (dateTime As DateTime) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetUtcOffset(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="member this.GetUtcOffset : DateTime -&gt; TimeSpan" Usage="timeZoneInfo.GetUtcOffset dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="0ae5c-660">要为其确定偏移量的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-660">The date and time to determine the offset for.</span></span></param>
        <summary><span data-ttu-id="0ae5c-661">计算此时区中的时间与协调世界时 (UTC) 之间针对特定日期和时间的偏移量或差值。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-661">Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-662">一个对象，该对象指示两个时区之间的时差。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-662">An object that indicates the time difference between the two time zones.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-663">由于将调整规则应用到当前时区，返回的时间跨度包括任何不同之处。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-663">The returned time span includes any differences due to the application of adjustment rules to the current time zone.</span></span> <span data-ttu-id="0ae5c-664">它不同于 <xref:System.TimeZoneInfo.BaseUtcOffset%2A> 属性，后者返回协调世界时 (UTC) 和时区标准时间之间的差异，因此不考虑调整规则。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-664">It differs from the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property, which returns the difference between Coordinated Universal Time (UTC) and the time zone's standard time and, therefore, does not take adjustment rules into account.</span></span>  
  
 <span data-ttu-id="0ae5c-665">如果 `dateTime` 参数的 <xref:System.DateTime.Kind%2A> 属性与时区对象不符，则此方法将在返回结果之前执行必要的转换。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-665">If the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property does not correspond to the time zone object, this method performs the necessary conversion before returning a result.</span></span> <span data-ttu-id="0ae5c-666">例如，如果 <xref:System.DateTime.Kind%2A> 属性为， <xref:System.DateTimeKind.Local?displayProperty=nameWithType> 但时区对象不是本地时区，则会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-666">For example, this can occur if the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> but the time zone object is not the local time zone.</span></span> <span data-ttu-id="0ae5c-667">如果 `dateTime` 不明确，或者转换后的时间不明确，此方法会将不明确时间解释为标准时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-667">If `dateTime` is ambiguous, or if the converted time is ambiguous, this method interprets the ambiguous time as a standard time.</span></span> <span data-ttu-id="0ae5c-668">如果 `dateTime` 无效，则此方法返回一个 <xref:System.TimeSpan> 对象，该对象反映 UTC 与时区的标准时间之间的差异。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-668">If `dateTime` is invalid, this method returns a <xref:System.TimeSpan> object that reflects the difference between UTC and the time zone's standard time.</span></span>  
  
 <span data-ttu-id="0ae5c-669"><xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29?displayProperty=nameWithType>方法在操作上与 <xref:System.TimeZone.GetUtcOffset%2A> 类的方法相似 <xref:System.TimeZone> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-669">The <xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29?displayProperty=nameWithType> method is similar in operation to the <xref:System.TimeZone.GetUtcOffset%2A> method of the <xref:System.TimeZone> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-670">下面的示例演示如何使用 <xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29> 具有不同时区的方法以及具有不同属性值的日期值 <xref:System.DateTime.Kind%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-670">The following example illustrates the use of the <xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29> method with different time zones and with date values that have different <xref:System.DateTime.Kind%2A> property values.</span></span>  
  
 [!code-csharp[System.TimeZone2.GetUtcOffset#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.GetUtcOffset/cs/System.TimeZone2.GetUtcOffset.cs#1)]
 [!code-vb[System.TimeZone2.GetUtcOffset#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.GetUtcOffset/vb/System.TimeZone2.GetUtcOffset.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeZoneInfo.BaseUtcOffset" />
      </Docs>
    </Member>
    <Member MemberName="GetUtcOffset">
      <MemberSignature Language="C#" Value="public TimeSpan GetUtcOffset (DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetUtcOffset(valuetype System.DateTimeOffset dateTimeOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetUtcOffset(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUtcOffset (dateTimeOffset As DateTimeOffset) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetUtcOffset(DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="F#" Value="member this.GetUtcOffset : DateTimeOffset -&gt; TimeSpan" Usage="timeZoneInfo.GetUtcOffset dateTimeOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="0ae5c-671">要为其确定偏移量的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-671">The date and time to determine the offset for.</span></span></param>
        <summary><span data-ttu-id="0ae5c-672">计算此时区中的时间与协调世界时 (UTC) 之间针对特定日期和时间的偏移量或差值。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-672">Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-673">一个对象，该对象指示协调世界时 (UTC) 与当前时区之间的时差。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-673">An object that indicates the time difference between Coordinated Universal Time (UTC) and the current time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-674">由于将调整规则应用到当前时区，返回的时间跨度包括任何不同之处。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-674">The returned time span includes any differences due to the application of adjustment rules to the current time zone.</span></span> <span data-ttu-id="0ae5c-675">它不同于 <xref:System.TimeZoneInfo.BaseUtcOffset%2A> 属性，后者返回协调世界时 (UTC) 和时区标准时间之间的差异，因此不考虑调整规则。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-675">It differs from the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property, which returns the difference between Coordinated Universal Time (UTC) and the time zone's standard time and, therefore, does not take adjustment rules into account.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSameRules">
      <MemberSignature Language="C#" Value="public bool HasSameRules (TimeZoneInfo other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasSameRules(class System.TimeZoneInfo other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.HasSameRules(System.TimeZoneInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasSameRules (other As TimeZoneInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasSameRules(TimeZoneInfo ^ other);" />
      <MemberSignature Language="F#" Value="member this.HasSameRules : TimeZoneInfo -&gt; bool" Usage="timeZoneInfo.HasSameRules other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.TimeZoneInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="0ae5c-676">要与当前的 <see cref="T:System.TimeZoneInfo" /> 对象进行比较的第二个对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-676">A second object to compare with the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></param>
        <summary><span data-ttu-id="0ae5c-677">指示当前对象和另一个 <see cref="T:System.TimeZoneInfo" /> 对象是否具有相同的调整规则。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-677">Indicates whether the current object and another <see cref="T:System.TimeZoneInfo" /> object have the same adjustment rules.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-678">如果两个时区具有相同的调整规则和相同的基本偏移量，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-678"><see langword="true" /> if the two time zones have identical adjustment rules and an identical base offset; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-679">与 <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType> 方法类似， <xref:System.TimeZoneInfo.HasSameRules%2A> 方法指示两个时区是否具有与 <xref:System.TimeZoneInfo.BaseUtcOffset%2A> 属性) 和相同调整规则定义 (相同的基本偏移量。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-679">Like the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType> method, the <xref:System.TimeZoneInfo.HasSameRules%2A> method indicates whether two time zones have the same base offset (as defined by the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property) and the same adjustment rules.</span></span> <span data-ttu-id="0ae5c-680">与 <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType> 方法不同，不 <xref:System.TimeZoneInfo.HasSameRules%2A> 会将时区标识符 (按属性定义) 进行比较 <xref:System.TimeZoneInfo.Id%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-680">Unlike the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType> method, <xref:System.TimeZoneInfo.HasSameRules%2A> does not compare time zone identifiers (as defined by the <xref:System.TimeZoneInfo.Id%2A> property).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-681">通常，Windows 上的注册表中定义的多个时区和 Linux 和 macOS 上的 [ICU 库](http://userguide.icu-project.org/datetime/timezone) 与协调世界时 (UTC) 具有相同的偏移量，并且具有相同的调整规则。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-681">Typically, a number of time zones defined in the registry on Windows and the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS have the same offset from Coordinated Universal Time (UTC) and the same adjustment rules.</span></span> <span data-ttu-id="0ae5c-682">下面的示例在控制台中显示这些时区的列表。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-682">The following example displays a list of these time zones to the console.</span></span>  
  
 [!code-csharp[System.TimeZone2.HasSameRules#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.HasSameRules/cs/HasSameRules.cs#1)]
 [!code-vb[System.TimeZone2.HasSameRules#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.HasSameRules/vb/HasSameRules.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0ae5c-683"><paramref name="other" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-683">The <paramref name="other" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.TimeZoneInfo.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ae5c-684">获取时区标识符。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-684">Gets the time zone identifier.</span></span></summary>
        <value><span data-ttu-id="0ae5c-685">时区标识符。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-685">The time zone identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-686">时区标识符是唯一标识特定时区的密钥字符串。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-686">The time zone identifier is a key string that uniquely identifies a particular time zone.</span></span> <span data-ttu-id="0ae5c-687">在 Windows 系统上，它对应于 Windows 系统上的注册表的 HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Time Zone 分支以及 Linux 和 macOS 上的 [ICU 库](http://userguide.icu-project.org/datetime/timezone) 中的子项。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-687">On Windows systems, it corresponds to the subkeys of the HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Time Zone branch of the registry on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="0ae5c-688">它可以作为参数传递给 <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> 方法，以实例化 <xref:System.TimeZoneInfo> 表示特定时区的对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-688">It can be passed as a parameter to the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method to instantiate a <xref:System.TimeZoneInfo> object that represents a particular time zone.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0ae5c-689">尽管 Windows 注册表中的密钥名称最多可以有255个字符，但我们建议你分配给自定义时区的标识符为32个字符或更少。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-689">Although a key name in the Windows registry can be a maximum of 255 characters, we recommend that an identifier that you assign to a custom time zone be 32 characters or fewer.</span></span> <span data-ttu-id="0ae5c-690">标识符越长，检索时提供错误键名称的可能性就越大。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-690">The longer the identifier, the greater the probability that an incorrect key name will be supplied when retrieving it.</span></span>  
  
 <span data-ttu-id="0ae5c-691">属性的值 <xref:System.TimeZoneInfo.Id%2A> 通常（但不总是）与属性的值相同 <xref:System.TimeZoneInfo.StandardName%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-691">The value of the <xref:System.TimeZoneInfo.Id%2A> property is usually, but not always, identical to that of the <xref:System.TimeZoneInfo.StandardName%2A> property.</span></span> <span data-ttu-id="0ae5c-692">协调世界时区的标识符是 UTC。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-692">The identifier of the Coordinated Universal Time zone is UTC.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-693">下面的示例列出了在本地计算机上定义的每个时区的标识符。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-693">The following example lists the identifier of each of the time zones defined on the local computer.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#5)]
 [!code-vb[System.TimeZone2.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAmbiguousTime">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0ae5c-694">确定特定时区中的特定日期和时间是否不明确以及是否可以映射至两个或多个协调世界时 (UTC) 时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-694">Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAmbiguousTime">
      <MemberSignature Language="C#" Value="public bool IsAmbiguousTime (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAmbiguousTime(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAmbiguousTime (dateTime As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbiguousTime(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="member this.IsAmbiguousTime : DateTime -&gt; bool" Usage="timeZoneInfo.IsAmbiguousTime dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="0ae5c-695">日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-695">A date and time value.</span></span></param>
        <summary><span data-ttu-id="0ae5c-696">确定特定时区中的特定日期和时间是否不明确以及是否可以映射至两个或多个协调世界时 (UTC) 时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-696">Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-697">如果 <paramref name="dateTime" /> 参数不明确，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-697"><see langword="true" /> if the <paramref name="dateTime" /> parameter is ambiguous; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-698">在当前时区的时间范围内，不明确时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-698">An ambiguous time falls within a range of times for the current time zone.</span></span> <span data-ttu-id="0ae5c-699">这意味着它可以是标准时间，也可以是应用调整规则后产生的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-699">This means it can be either a standard time or a time that results from the application of an adjustment rule.</span></span> <span data-ttu-id="0ae5c-700">通常，当时钟设置为从夏时制返回到标准时间时，会产生不明确的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-700">Typically, ambiguous times result when the clock is set to return to standard time from daylight saving time.</span></span> <span data-ttu-id="0ae5c-701">有关说明，请参阅 "示例" 部分。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-701">See the Example section for an illustration.</span></span>  
  
 <span data-ttu-id="0ae5c-702">协调世界时 (UTC) 的时间不明确;这两个时区都不支持夏令时。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-702">Coordinated Universal Time (UTC) has no ambiguous times; neither do time zones that do not support daylight saving time.</span></span> <span data-ttu-id="0ae5c-703">因此，这些时区没有调整规则，对方法的调用将 <xref:System.TimeZoneInfo.IsAmbiguousTime%2A> 始终返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-703">Therefore, these time zones have no adjustment rules and calls to the <xref:System.TimeZoneInfo.IsAmbiguousTime%2A> method always return `false`.</span></span>  
  
 <span data-ttu-id="0ae5c-704">对于遵守夏令时的时区，此方法的精确行为取决于 <xref:System.DateTime.Kind%2A> 属性和对象之间的关系，如下表所 <xref:System.TimeZoneInfo> 示。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-704">For time zones that do observe daylight saving time, the precise behavior of this method depends on the relationship between the <xref:System.DateTime.Kind%2A> property and the <xref:System.TimeZoneInfo> object, as the following table shows.</span></span>  
  
|<span data-ttu-id="0ae5c-705">TimeZoneInfo 对象类型</span><span class="sxs-lookup"><span data-stu-id="0ae5c-705">TimeZoneInfo object type</span></span>|<span data-ttu-id="0ae5c-706">Kind 属性值</span><span class="sxs-lookup"><span data-stu-id="0ae5c-706">Kind property value</span></span>|<span data-ttu-id="0ae5c-707">行为</span><span class="sxs-lookup"><span data-stu-id="0ae5c-707">Behavior</span></span>|  
|------------------------------|-------------------------|--------------|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-708"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> 或 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="0ae5c-708"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span></span>|<span data-ttu-id="0ae5c-709">确定参数是否 `dateTime` 为不明确。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-709">Determines whether the `dateTime` parameter is ambiguous.</span></span>|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-710">转换 `dateTime` 为本地时间，然后确定该时间是否不明确。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-710">Converts `dateTime` to the local time and then determines whether that time is ambiguous.</span></span>|  
|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-711"><xref:System.DateTimeKind.Utc?displayProperty=nameWithType> 或 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="0ae5c-711"><xref:System.DateTimeKind.Utc?displayProperty=nameWithType> or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span></span>|<span data-ttu-id="0ae5c-712">返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-712">Returns `false`.</span></span>|  
|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-713">如果 `dateTime` 不明确，则假定它是标准时间，将其转换为 UTC，然后返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-713">If `dateTime` is ambiguous, assumes it is a standard time, converts it to UTC, and returns `false`.</span></span>|  
|<span data-ttu-id="0ae5c-714">任何其他时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-714">Any other time zone.</span></span>|<span data-ttu-id="0ae5c-715"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> 或 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="0ae5c-715"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> or <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span></span>|<span data-ttu-id="0ae5c-716">转换 `dateTime` 为指定时区中的时间，然后确定该时间是否不明确。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-716">Converts `dateTime` to the time in the specified time zone and then determines whether that time is ambiguous.</span></span>|  
|<span data-ttu-id="0ae5c-717">任何其他时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-717">Any other time zone.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-718">确定是否 `dateTime` 为不明确。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-718">Determines whether `dateTime` is ambiguous.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-719">在太平洋时区，夏令时结束时间为凌晨2:00。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-719">In the Pacific Time zone, daylight saving time ends at 2:00 A.M.</span></span> <span data-ttu-id="0ae5c-720">2007年11月4日。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-720">on November 4, 2007.</span></span> <span data-ttu-id="0ae5c-721">下面的示例以一分钟的时间间隔从凌晨12:59 传递时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-721">The following example passes the time at one-minute intervals from 12:59 A.M.</span></span> <span data-ttu-id="0ae5c-722">2007年11月4日，上午2:01</span><span class="sxs-lookup"><span data-stu-id="0ae5c-722">on November 4, 2007, to 2:01 A.M.</span></span> <span data-ttu-id="0ae5c-723">在2007年11月4日， <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29> <xref:System.TimeZoneInfo> 表示太平洋时区的对象的方法。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-723">on November 4, 2007, to the <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29> method of a <xref:System.TimeZoneInfo> object that represents the Pacific Time zone.</span></span> <span data-ttu-id="0ae5c-724">控制台输出指示上午1:00 的所有时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-724">The console output indicates that all times from 1:00 A.M.</span></span> <span data-ttu-id="0ae5c-725">2007年11月4日，上午1:59</span><span class="sxs-lookup"><span data-stu-id="0ae5c-725">on November 4, 2007, to 1:59 A.M.</span></span> <span data-ttu-id="0ae5c-726">2007年11月4日是不明确的。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-726">on November 4, 2007, are ambiguous.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#8)]
 [!code-vb[System.TimeZone2.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ae5c-727"><paramref name="dateTime" /> 值的 <see cref="P:System.DateTime.Kind" /> 属性的值为 <see cref="F:System.DateTimeKind.Local" />，而 <paramref name="dateTime" /> 是无效时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-727">The <see cref="P:System.DateTime.Kind" /> property of the <paramref name="dateTime" /> value is <see cref="F:System.DateTimeKind.Local" /> and <paramref name="dateTime" /> is an invalid time.</span></span></exception>
        <altmember cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsAmbiguousTime">
      <MemberSignature Language="C#" Value="public bool IsAmbiguousTime (DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAmbiguousTime(valuetype System.DateTimeOffset dateTimeOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAmbiguousTime (dateTimeOffset As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbiguousTime(DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="F#" Value="member this.IsAmbiguousTime : DateTimeOffset -&gt; bool" Usage="timeZoneInfo.IsAmbiguousTime dateTimeOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="0ae5c-728">日期和时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-728">A date and time.</span></span></param>
        <summary><span data-ttu-id="0ae5c-729">确定特定时区中的特定日期和时间是否不明确以及是否可以映射至两个或多个协调世界时 (UTC) 时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-729">Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-730">如果 <paramref name="dateTimeOffset" /> 参数在当前时区中不明确，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-730"><see langword="true" /> if the <paramref name="dateTimeOffset" /> parameter is ambiguous in the current time zone; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-731">在当前时区的时间范围内，不明确时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-731">An ambiguous time falls within a range of times for the current time zone.</span></span> <span data-ttu-id="0ae5c-732">这意味着它可以是标准时间，也可以是应用调整规则后生成的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-732">This means that it can be either a standard time or a time that results from the application of an adjustment rule.</span></span> <span data-ttu-id="0ae5c-733">通常，当时钟设置为从夏时制返回到标准时间时，会产生不明确的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-733">Typically, ambiguous times result when the clock is set to return to standard time from daylight saving time.</span></span> <span data-ttu-id="0ae5c-734">协调世界时 (UTC) 的时间不明确;这两个时区都不支持夏令时。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-734">Coordinated Universal Time (UTC) has no ambiguous times; neither do time zones that do not support daylight saving time.</span></span>  
  
 <span data-ttu-id="0ae5c-735">方法的确切行为取决于 <xref:System.DateTimeOffset.Offset%2A> 参数的属性与当前时区之间的关系 `dateTimeOffset` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-735">The precise behavior of the method depends on the relationship between the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter and the current time zone.</span></span> <span data-ttu-id="0ae5c-736">如果属性的值 <xref:System.DateTimeOffset.Offset%2A> 是一个可能与当前时区的 UTC 的偏移量，则该方法确定日期和时间是否不明确。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-736">If the value of the <xref:System.DateTimeOffset.Offset%2A> property is a possible offset from the UTC of the current time zone, the method determines whether that date and time is ambiguous.</span></span> <span data-ttu-id="0ae5c-737">否则，它将转换 `dateTimeOffset` 为当前时区中的时间，然后确定日期和时间是否不明确。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-737">Otherwise, it converts `dateTimeOffset` to the time in the current time zone, and then determines whether that date and time is ambiguous.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDaylightSavingTime">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0ae5c-738">指示指定的日期和时间是否处于当前 <see cref="T:System.TimeZoneInfo" /> 对象时区的夏令制范围内。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-738">Indicates whether a specified date and time falls in the range of daylight saving time for the current <see cref="T:System.TimeZoneInfo" /> object's time zone.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public bool IsDaylightSavingTime (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDaylightSavingTime(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDaylightSavingTime (dateTime As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDaylightSavingTime(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="member this.IsDaylightSavingTime : DateTime -&gt; bool" Usage="timeZoneInfo.IsDaylightSavingTime dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="0ae5c-739">日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-739">A date and time value.</span></span></param>
        <summary><span data-ttu-id="0ae5c-740">指示指定的日期和时间是否处于当前 <see cref="T:System.TimeZoneInfo" /> 对象时区的夏令制范围内。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-740">Indicates whether a specified date and time falls in the range of daylight saving time for the time zone of the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-741">如果 <paramref name="dateTime" /> 参数为夏令制，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-741"><see langword="true" /> if the <paramref name="dateTime" /> parameter is a daylight saving time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-742">的返回值 <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> 受对象表示的时区和参数的属性之间的关系影响 <xref:System.TimeZoneInfo> <xref:System.DateTime.Kind%2A> ，如下表所 `dateTime` 示。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-742">The return value of <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> is affected by the relationship between the time zone represented by the <xref:System.TimeZoneInfo> object and the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter, as the following table shows.</span></span>  
  
|<span data-ttu-id="0ae5c-743">TimeZoneInfo 对象</span><span class="sxs-lookup"><span data-stu-id="0ae5c-743">TimeZoneInfo object</span></span>|<span data-ttu-id="0ae5c-744">DateTime.Kind 属性</span><span class="sxs-lookup"><span data-stu-id="0ae5c-744">DateTime.Kind property</span></span>|<span data-ttu-id="0ae5c-745">结果</span><span class="sxs-lookup"><span data-stu-id="0ae5c-745">Result</span></span>|  
|-------------------------|----------------------------|------------|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|`DateTimeKind.Local`|<span data-ttu-id="0ae5c-746">确定是否 `dateTime` 为夏时制。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-746">Determines whether `dateTime` is daylight saving time.</span></span>|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|`DateTimeKind.Utc`|<span data-ttu-id="0ae5c-747">`dateTime`从协调世界时 (UTC) 转换为本地时间，并确定它是否为夏时制。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-747">Converts `dateTime` from Coordinated Universal Time (UTC) to local time and determines whether it is daylight saving time.</span></span>|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|`DateTimeKind.Unspecified`|<span data-ttu-id="0ae5c-748">假定 `dateTime` 表示本地时间，并确定它是否为夏时制。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-748">Assumes that `dateTime` represents local time and determines whether it is daylight saving time.</span></span>|  
|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-749">`DateTimeKind.Local`、`DateTimeKind.Unspecified` 或 `DateTimeKind.Utc`</span><span class="sxs-lookup"><span data-stu-id="0ae5c-749">`DateTimeKind.Local`, `DateTimeKind.Unspecified`, or `DateTimeKind.Utc`</span></span>|<span data-ttu-id="0ae5c-750">返回 `false` (UTC 不支持夏令时) 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-750">Returns `false` (UTC does not support daylight saving time).</span></span>|  
|<span data-ttu-id="0ae5c-751">任何其他 <xref:System.TimeZoneInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-751">Any other <xref:System.TimeZoneInfo> object.</span></span>|`DateTimeKind.Local`|<span data-ttu-id="0ae5c-752">将本地时间转换为对象的等效时间 <xref:System.TimeZoneInfo> ，然后确定后者是否为夏时制。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-752">Converts the local time to the equivalent time of the <xref:System.TimeZoneInfo> object and then determines whether the latter is daylight saving time.</span></span>|  
|<span data-ttu-id="0ae5c-753">任何其他 <xref:System.TimeZoneInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-753">Any other <xref:System.TimeZoneInfo> object.</span></span>|`DateTimeKind.Utc`|<span data-ttu-id="0ae5c-754">将 UTC 转换为对象的等效时间 <xref:System.TimeZoneInfo> ，然后确定后者是否为夏时制。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-754">Converts UTC to the equivalent time of the <xref:System.TimeZoneInfo> object and then determines whether the latter is daylight saving time.</span></span>|  
|<span data-ttu-id="0ae5c-755">任何其他 <xref:System.TimeZoneInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-755">Any other <xref:System.TimeZoneInfo> object.</span></span>|`DateTimeKind.Unspecified`|<span data-ttu-id="0ae5c-756">确定是否 `dateTime` 为夏时制。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-756">Determines whether `dateTime` is daylight saving time.</span></span>|  
  
 <span data-ttu-id="0ae5c-757">如果对象表示的时区不 <xref:System.TimeZoneInfo> 支持夏令时，则该方法将始终返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-757">If the time zone represented by the <xref:System.TimeZoneInfo> object does not support daylight saving time, the method always returns `false`.</span></span> <span data-ttu-id="0ae5c-758">许多时区（包括 <xref:System.TimeZoneInfo.Utc%2A> ）不会遵守夏令时。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-758">A number of time zones, including <xref:System.TimeZoneInfo.Utc%2A>, do not observe daylight saving time.</span></span>  <span data-ttu-id="0ae5c-759">若要确定时区是否支持夏令时，请检索其属性的值 <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-759">To determine whether a time zone supports daylight saving time, retrieve the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property.</span></span>  
  
 <span data-ttu-id="0ae5c-760">如果 `dateTime` 参数在当前对象的时区中指定了不明确的时间，则该 <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> 方法会将解释 `dateTime` 为标准时间，并在 `false` 其 <xref:System.DateTime.Kind%2A> 属性为或时返回 <xref:System.DateTimeKind.Local?displayProperty=nameWithType> <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-760">If the `dateTime` parameter specifies an ambiguous time in the current object's time zone, the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> method interprets `dateTime` as standard time and returns `false` if its <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0ae5c-761">如果 <xref:System.DateTime.Kind%2A> 属性为 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType> ，则此方法将选择正确的不明确时间，并指示它是否为夏时制。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-761">If the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, this method will select the correct ambiguous time and indicate whether it is a daylight saving time.</span></span>  
  
 <span data-ttu-id="0ae5c-762">由于 <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29?displayProperty=nameWithType> 方法可能会返回 `false` 不明确的日期和时间 (也就是一个日期和时间，该日期和时间可表示特定时区中的标准时间或夏时制) ，该 <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29?displayProperty=nameWithType> 方法可以与方法配对， <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> 以确定时间是否为夏时制。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-762">Because the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29?displayProperty=nameWithType> method can return `false` for a date and time that is ambiguous (that is, a date and time that can represent either a standard time or a daylight saving time in a particular time zone), the <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29?displayProperty=nameWithType> method can be paired with the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method to determine whether a time may be a daylight saving time.</span></span> <span data-ttu-id="0ae5c-763">由于不明确的时间是可以同时是夏令时和标准时间的时间，因此 <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29> 可以先调用方法，以确定日期和时间是否可以是夏令时。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-763">Because an ambiguous time is one that can be both a daylight saving time and a standard time, the <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29> method can be called first to determine whether a date and time may be a daylight saving time.</span></span> <span data-ttu-id="0ae5c-764">如果该方法返回 `false` ，则 <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> 可以调用方法来确定 <xref:System.DateTime> 该值是否为夏时制。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-764">If the method returns `false`, the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method can be called to determine whether the <xref:System.DateTime> value is a daylight saving time.</span></span> <span data-ttu-id="0ae5c-765">下面的示例演示了此方法。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-765">The following example illustrates this technique.</span></span>  
  
 [!code-csharp[System.TimeZone2.IsDaylightSavingTime#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#2)]
 [!code-vb[System.TimeZone2.IsDaylightSavingTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#2)]  
  
 <span data-ttu-id="0ae5c-766">如果 `dateTime` 参数指定的时间无效，则如果参数的属性的值为，则方法调用将引发 <xref:System.ArgumentException> `dateTime` <xref:System.DateTime.Kind%2A> <xref:System.DateTimeKind.Local?displayProperty=nameWithType> ; 否则，该方法将返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-766">If the `dateTime` parameter specifies an invalid time, the method call throws an <xref:System.ArgumentException> if the value of the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>; otherwise, the method returns `false`.</span></span>  
  
 <span data-ttu-id="0ae5c-767">调用 <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> 方法以确定在显示时区名称时是使用时区的 <xref:System.TimeZoneInfo.StandardName%2A> 值还是使用其 <xref:System.TimeZoneInfo.DaylightName%2A> 值。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-767">Call the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> method to determine whether to use a time zone's <xref:System.TimeZoneInfo.StandardName%2A> value or its <xref:System.TimeZoneInfo.DaylightName%2A> value when displaying the time zone name.</span></span> <span data-ttu-id="0ae5c-768">有关说明，请参阅 "示例" 部分。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-768">See the Example section for an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-769">下面的示例定义了一个名为 `DisplayDateWithTimeZoneName` 的方法，该方法使用 <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> 方法来确定是显示时区的标准时间名称还是夏时制名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-769">The following example defines a method named `DisplayDateWithTimeZoneName` that uses the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> method to determine whether to display a time zone's standard time name or daylight saving time name.</span></span>  
  
 [!code-csharp[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#1)]
 [!code-vb[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0ae5c-770"><paramref name="dateTime" /> 值的 <see cref="P:System.DateTime.Kind" /> 属性的值为 <see cref="F:System.DateTimeKind.Local" />，而 <paramref name="dateTime" /> 是无效时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-770">The <see cref="P:System.DateTime.Kind" /> property of the <paramref name="dateTime" /> value is <see cref="F:System.DateTimeKind.Local" /> and <paramref name="dateTime" /> is an invalid time.</span></span></exception>
        <altmember cref="P:System.TimeZoneInfo.SupportsDaylightSavingTime" />
      </Docs>
    </Member>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public bool IsDaylightSavingTime (DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDaylightSavingTime(valuetype System.DateTimeOffset dateTimeOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDaylightSavingTime (dateTimeOffset As DateTimeOffset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDaylightSavingTime(DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="F#" Value="member this.IsDaylightSavingTime : DateTimeOffset -&gt; bool" Usage="timeZoneInfo.IsDaylightSavingTime dateTimeOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="0ae5c-771">日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-771">A date and time value.</span></span></param>
        <summary><span data-ttu-id="0ae5c-772">指示指定的日期和时间是否处于当前 <see cref="T:System.TimeZoneInfo" /> 对象时区的夏令制范围内。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-772">Indicates whether a specified date and time falls in the range of daylight saving time for the time zone of the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-773">如果 <paramref name="dateTimeOffset" /> 参数为夏令制，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-773"><see langword="true" /> if the <paramref name="dateTimeOffset" /> parameter is a daylight saving time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-774">的返回值 <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> 受对象表示的时区与参数的属性之间的关系影响 <xref:System.TimeZoneInfo> <xref:System.DateTimeOffset.Offset%2A> `dateTimeOffset` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-774">The return value of <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> is affected by the relationship between the time zone represented by the <xref:System.TimeZoneInfo> object and the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter.</span></span> <span data-ttu-id="0ae5c-775">如果与 `dateTimeOffset` 当前时区相对于协调世界时 (UTC) 的偏移量不对应，则该方法会将时间转换为当前时区中的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-775">If `dateTimeOffset` does not correspond to the current time zone's offset from Coordinated Universal Time (UTC), the method converts that time to the time in the current time zone.</span></span> <span data-ttu-id="0ae5c-776">然后，它会确定日期和时间是否为夏时制。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-776">It then determines whether that date and time is a daylight saving time.</span></span>  
  
 <span data-ttu-id="0ae5c-777">如果对象表示的时区不 <xref:System.TimeZoneInfo> 支持夏令时，则该方法将始终返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-777">If the time zone represented by the <xref:System.TimeZoneInfo> object does not support daylight saving time, the method always returns `false`.</span></span> <span data-ttu-id="0ae5c-778">若要确定时区是否支持夏令时，请检索其属性的值 <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-778">To determine whether a time zone supports daylight saving time, retrieve the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeZoneInfo.SupportsDaylightSavingTime" />
      </Docs>
    </Member>
    <Member MemberName="IsInvalidTime">
      <MemberSignature Language="C#" Value="public bool IsInvalidTime (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInvalidTime(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInvalidTime (dateTime As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInvalidTime(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="member this.IsInvalidTime : DateTime -&gt; bool" Usage="timeZoneInfo.IsInvalidTime dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="0ae5c-779">日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-779">A date and time value.</span></span></param>
        <summary><span data-ttu-id="0ae5c-780">指示特定日期和时间是否无效。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-780">Indicates whether a particular date and time is invalid.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-781">如果 <paramref name="dateTime" /> 无效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-781"><see langword="true" /> if <paramref name="dateTime" /> is invalid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-782">由于应用了调整规则，在当前时区的时间范围内无效的时间不能映射到协调世界时 (UTC) 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-782">An invalid time falls within a range of times for the current time zone that cannot be mapped to Coordinated Universal Time (UTC) due to the application of an adjustment rule.</span></span> <span data-ttu-id="0ae5c-783">通常，当时间向前移动夏令时时，会发生无效的时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-783">Typically, invalid times occur when the time moves ahead for daylight saving time.</span></span> <span data-ttu-id="0ae5c-784">有关说明，请参阅 "示例" 部分。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-784">See the Example section for an illustration.</span></span>  
  
 <span data-ttu-id="0ae5c-785">参数的属性的值 <xref:System.DateTime.Kind%2A> `dateTime` 会影响是否 `dateTime` 表示无效时间，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-785">The value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter affects whether `dateTime` represents an invalid time, as the following table shows.</span></span>  
  
|<span data-ttu-id="0ae5c-786">DateTime.Kind 属性</span><span class="sxs-lookup"><span data-stu-id="0ae5c-786">DateTime.Kind property</span></span>|<span data-ttu-id="0ae5c-787">TimeZoneInfo 对象 (（如果适用）) </span><span class="sxs-lookup"><span data-stu-id="0ae5c-787">TimeZoneInfo object (if applicable)</span></span>|<span data-ttu-id="0ae5c-788">行为</span><span class="sxs-lookup"><span data-stu-id="0ae5c-788">Behavior</span></span>|  
|----------------------------|-------------------------------------------|--------------|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-789">确定时间是否无效。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-789">Determines whether the time is invalid.</span></span>|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-790"><xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType> 或非本地时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-790"><xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType> or a non-local time zone.</span></span>|<span data-ttu-id="0ae5c-791">转换 `dateTime` 为对象的时间 <xref:System.TimeZoneInfo> ，并返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-791">Converts `dateTime` to the time of the <xref:System.TimeZoneInfo> object and returns `false`.</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-792">不适用。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-792">Not applicable.</span></span>|<span data-ttu-id="0ae5c-793">假设 `dateTime` 是对象的时间 <xref:System.TimeZoneInfo> ，并确定它是否无效。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-793">Assumes `dateTime` is the time of the <xref:System.TimeZoneInfo> object and determines whether it is invalid.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="0ae5c-794">不适用。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-794">Not applicable.</span></span>|<span data-ttu-id="0ae5c-795">返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-795">Returns `false`.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-796">太平洋时区的夏令时开始时间为凌晨2:00。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-796">In the Pacific Time zone, daylight saving time begins at 2:00 A.M.</span></span> <span data-ttu-id="0ae5c-797">2006年4月2日。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-797">on April 2, 2006.</span></span> <span data-ttu-id="0ae5c-798">下面的代码以一分钟的时间间隔从凌晨1:59 传递时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-798">The following code passes the time at one-minute intervals from 1:59 A.M.</span></span> <span data-ttu-id="0ae5c-799">2006年4月2日，上午3:01</span><span class="sxs-lookup"><span data-stu-id="0ae5c-799">on April 2, 2006, to 3:01 A.M.</span></span> <span data-ttu-id="0ae5c-800">2006年4月2日， <xref:System.TimeZoneInfo.IsInvalidTime%2A> <xref:System.TimeZoneInfo> 表示太平洋时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-800">on April 2, 2006, to the <xref:System.TimeZoneInfo.IsInvalidTime%2A> method of a <xref:System.TimeZoneInfo> object that represents the Pacific Time zone.</span></span> <span data-ttu-id="0ae5c-801">控制台输出指示上午2:00 的所有时间。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-801">The console output indicates that all times from 2:00 A.M.</span></span> <span data-ttu-id="0ae5c-802">2006年4月2日，上午2:59</span><span class="sxs-lookup"><span data-stu-id="0ae5c-802">on April 2, 2006, to 2:59 A.M.</span></span> <span data-ttu-id="0ae5c-803">2006年4月2日无效。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-803">on April 2, 2006, are invalid.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#9)]
 [!code-vb[System.TimeZone2.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.TimeZoneInfo.IsAmbiguousTime" />
      </Docs>
    </Member>
    <Member MemberName="Local">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo Local { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.TimeZoneInfo Local" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.Local" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Local As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeZoneInfo ^ Local { TimeZoneInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Local : TimeZoneInfo" Usage="System.TimeZoneInfo.Local" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ae5c-804">获取表示本地时区的 <see cref="T:System.TimeZoneInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-804">Gets a <see cref="T:System.TimeZoneInfo" /> object that represents the local time zone.</span></span></summary>
        <value><span data-ttu-id="0ae5c-805">一个对象，表示本地时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-805">An object that represents the local time zone.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-806">本地时区是运行代码的计算机上的时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-806">The local time zone is the time zone on the computer where the code is executing.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0ae5c-807">应始终通过属性访问本地时区， <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> 而不是将本地时区分配给 <xref:System.TimeZoneInfo> 对象变量。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-807">You should always access the local time zone through the <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> property rather than assigning the local time zone to a <xref:System.TimeZoneInfo> object variable.</span></span> <span data-ttu-id="0ae5c-808">这可防止 <xref:System.TimeZoneInfo> 对象变量被调用 <xref:System.TimeZoneInfo.ClearCachedData%2A> 方法无效。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-808">This prevents the <xref:System.TimeZoneInfo> object variable from being invalidated by a call to the <xref:System.TimeZoneInfo.ClearCachedData%2A> method.</span></span>  
  
 <span data-ttu-id="0ae5c-809">在 Windows 系统中， <xref:System.TimeZoneInfo> 属性返回的对象 <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> 反映了控制面板 **日期和时间** 应用程序中 "**自动调整夏令时时钟**" 复选框的设置。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-809">On Windows systems, the <xref:System.TimeZoneInfo> object returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> property reflects the setting of the **Automatically adjust clock for Daylight Saving Time** checkbox in the Control Panel **Date and Time** application.</span></span> <span data-ttu-id="0ae5c-810">如果未选中该复选框，则本地时区的缓存副本不包含夏令时信息。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-810">If the checkbox is unchecked, the cached copy of the local time zone contains no daylight saving time information.</span></span> <span data-ttu-id="0ae5c-811">这意味着：</span><span class="sxs-lookup"><span data-stu-id="0ae5c-811">This means that:</span></span>  
  
-   <span data-ttu-id="0ae5c-812">本地时区的 <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> 方法返回长度为零的数组。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-812">The local time zone's <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method returns an array whose length is zero.</span></span>  
  
-   <span data-ttu-id="0ae5c-813">本地时区的 <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> 属性返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-813">The local time zone's <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property returns `false`.</span></span>  
  
-   <span data-ttu-id="0ae5c-814">本地时区的时间不明确或无效， (对的所有调用 <xref:System.TimeZoneInfo.IsAmbiguousTime%2A> 或 <xref:System.TimeZoneInfo.IsInvalidTime%2A> 返回 `false`) 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-814">The local time zone has no ambiguous or invalid times (all calls to <xref:System.TimeZoneInfo.IsAmbiguousTime%2A> or <xref:System.TimeZoneInfo.IsInvalidTime%2A> return `false`).</span></span>  
  
-   <span data-ttu-id="0ae5c-815"><xref:System.TimeZoneInfo.IsDaylightSavingTime%2A>与单个本地时间的所有调用都将返回 false。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-815">All calls to <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A> with individual local times return false.</span></span>  
  
 <span data-ttu-id="0ae5c-816">不过，如果使用方法检索对本地时区的引用，则不是这样 <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-816">This is not true, however, if a reference to the local time zone is retrieved using the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method.</span></span>  
  
 <span data-ttu-id="0ae5c-817"><xref:System.TimeZoneInfo.Local%2A>属性对应于类的 <xref:System.TimeZone.CurrentTimeZone%2A> 属性 <xref:System.TimeZone> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-817">The <xref:System.TimeZoneInfo.Local%2A> property corresponds to the <xref:System.TimeZone.CurrentTimeZone%2A> property of the <xref:System.TimeZone> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-818">下面的示例检索一个 <xref:System.TimeZoneInfo> 对象，该对象表示本地时区并输出其显示名称、标准时间名称和夏时制名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-818">The following example retrieves a <xref:System.TimeZoneInfo> object that represents the local time zone and outputs its display name, standard time name, and daylight saving time name.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/ShowTimeZoneNames1.cs#2)]
 [!code-vb[System.TimeZone2.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/ShowTimeZoneNames1.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/datetime/access-utc-and-local"><span data-ttu-id="0ae5c-819">如何：访问预定义的 UTC 和本地时区对象</span><span class="sxs-lookup"><span data-stu-id="0ae5c-819">How to: Access the Predefined UTC and Local Time Zone Objects</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StandardName">
      <MemberSignature Language="C#" Value="public string StandardName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.StandardName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StandardName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardName : string" Usage="System.TimeZoneInfo.StandardName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ae5c-820">获取时区的标准时间的显示名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-820">Gets the display name for the time zone's standard time.</span></span></summary>
        <value><span data-ttu-id="0ae5c-821">时区的标准时间的显示名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-821">The display name of the time zone's standard time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-822">显示名称根据 Windows 操作系统中安装的区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-822">The display name is localized based on the culture installed with the Windows operating system.</span></span>  
  
 <span data-ttu-id="0ae5c-823"><xref:System.TimeZoneInfo.StandardName%2A>属性与类的属性完全相同 <xref:System.TimeZone.StandardName%2A> <xref:System.TimeZone> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-823">The <xref:System.TimeZoneInfo.StandardName%2A> property is identical to the <xref:System.TimeZone.StandardName%2A> property of the <xref:System.TimeZone> class.</span></span>  
  
 <span data-ttu-id="0ae5c-824">如果操作系统语言为英语，则属性的值 <xref:System.TimeZoneInfo.StandardName%2A> 通常（但不总是）与属性的值相同 <xref:System.TimeZoneInfo.Id%2A> 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-824">If the operating system language is English, the value of the <xref:System.TimeZoneInfo.StandardName%2A> property is usually, but not always, identical to that of the <xref:System.TimeZoneInfo.Id%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-825">下面的示例定义了一个名为 `DisplayDateWithTimeZoneName` 的方法，该方法使用 <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> 方法来确定是显示时区的标准时间名称还是夏时制名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-825">The following example defines a method named `DisplayDateWithTimeZoneName` that uses the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method to determine whether to display a time zone's standard time name or daylight saving time name.</span></span>  
  
 [!code-csharp[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#1)]
 [!code-vb[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public bool SupportsDaylightSavingTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDaylightSavingTime" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.SupportsDaylightSavingTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsDaylightSavingTime As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsDaylightSavingTime { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDaylightSavingTime : bool" Usage="System.TimeZoneInfo.SupportsDaylightSavingTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ae5c-826">获取一个值，该值指示时区是否具有任何夏令制规则。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-826">Gets a value indicating whether the time zone has any daylight saving time rules.</span></span></summary>
        <value><span data-ttu-id="0ae5c-827">如果时区支持夏令制，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-827"><see langword="true" /> if the time zone supports daylight saving time; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-828">属性返回的本地时区的属性值反映了 " <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> 控制面板 **日期和时间** 应用程序" 复选框的设置，该设置定义系统是否自动调整夏令时。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-828">The value of the <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property for the local time zone returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> property reflects the setting of the Control Panel **Date and Time** application's checkbox that defines whether the system automatically adjusts for daylight saving time.</span></span> <span data-ttu-id="0ae5c-829">如果未选中该复选框，或者如果没有为时区显示复选框，则此属性的值为 `false` 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-829">If it is unchecked, or if no checkbox is displayed for a time zone, the value of this property is `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-830">下面的示例检索本地系统上可用的所有时区的集合，并显示不支持夏令时的所有时区的名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-830">The following example retrieves a collection of all time zones that are available on a local system and displays the names of those that do not support daylight saving time.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#4)]
 [!code-vb[System.TimeZone2.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#4)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.Serialization.IDeserializationCallback.OnDeserialization : obj -&gt; unit&#xA;override this.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization : obj -&gt; unit" Usage="timeZoneInfo.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization sender" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="0ae5c-831">启动回调的对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-831">The object that initiated the callback.</span></span> <span data-ttu-id="0ae5c-832">当前未实现该参数的功能。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-832">The functionality for this parameter is not currently implemented.</span></span></param>
        <summary><span data-ttu-id="0ae5c-833">在对象的反序列化完成时运行。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-833">Runs when the deserialization of an object has been completed.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="0ae5c-834"><see cref="T:System.TimeZoneInfo" /> 对象包含无效或已损坏的数据。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-834">The <see cref="T:System.TimeZoneInfo" /> object contains invalid or corrupted data.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="timeZoneInfo.System.Runtime.Serialization.ISerializable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="0ae5c-835">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-835">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="0ae5c-836">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-836">The destination for this serialization (see <see cref="T:System.Runtime.Serialization.StreamingContext" />).</span></span></param>
        <summary><span data-ttu-id="0ae5c-837">使用序列化当前的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象所需的所有数据填充 <see cref="T:System.TimeZoneInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-837">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0ae5c-838"><paramref name="info" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-838">The <paramref name="info" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSerializedString">
      <MemberSignature Language="C#" Value="public string ToSerializedString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToSerializedString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ToSerializedString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToSerializedString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToSerializedString();" />
      <MemberSignature Language="F#" Value="member this.ToSerializedString : unit -&gt; string" Usage="timeZoneInfo.ToSerializedString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0ae5c-839">将当前的 <see cref="T:System.TimeZoneInfo" /> 对象转换为序列化字符串。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-839">Converts the current <see cref="T:System.TimeZoneInfo" /> object to a serialized string.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-840">表示当前 <see cref="T:System.TimeZoneInfo" /> 对象的字符串。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-840">A string that represents the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-841">依赖于通常不在 Windows 系统的注册表中定义的时区或 Linux 和 macOScan 上的 [ICU 库](http://userguide.icu-project.org/datetime/timezone) 中的应用程序可以使用 <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> 方法将所需的时区实例化为 <xref:System.TimeZoneInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-841">Applications that rely on time zones that are not typically defined in the registry of Windows systems or the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOScan can use the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method to instantiate the necessary time zones as <xref:System.TimeZoneInfo> objects.</span></span> <span data-ttu-id="0ae5c-842">然后，应用程序可以调用 <xref:System.TimeZoneInfo.ToSerializedString%2A> 方法将时区对象转换为字符串。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-842">The application can then call the <xref:System.TimeZoneInfo.ToSerializedString%2A> method to convert the time zone object to a string.</span></span>  
  
 <span data-ttu-id="0ae5c-843"><xref:System.TimeZoneInfo>对象还应存储在应用程序可在需要时检索的位置。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-843">The <xref:System.TimeZoneInfo> object should also be stored in a location where the application can retrieve it when needed.</span></span> <span data-ttu-id="0ae5c-844">可能的位置包括：</span><span class="sxs-lookup"><span data-stu-id="0ae5c-844">Possible locations include:</span></span>  
  
-   <span data-ttu-id="0ae5c-845">Windows 系统上的注册表。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-845">The registry on Windows systems.</span></span>  
  
-   <span data-ttu-id="0ae5c-846">应用程序资源文件。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-846">An application resource file.</span></span>  
  
-   <span data-ttu-id="0ae5c-847">外部文件，例如文本文件。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-847">An external file, such as a text file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-848">下面的示例尝试从本地系统检索南极洲/南极点时区。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-848">The following example tries to retrieve the Antarctica/South Pole time zone from the local system.</span></span> <span data-ttu-id="0ae5c-849">如果失败，代码会尝试从应用程序目录中的文本文件检索有关时区的信息。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-849">If it fails, the code tries to retrieve information about the time zone from a text file in the application directory.</span></span> <span data-ttu-id="0ae5c-850">如果此尝试失败，代码会创建时区，并将其相关信息写入文本文件。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-850">If this attempt fails, the code creates the time zone and writes information about it to the text file.</span></span>  
  
 [!code-csharp[System.TimeZone2.CreateTimeZone#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#4)]
 [!code-vb[System.TimeZone2.CreateTimeZone#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.FromSerializedString(System.String)" />
        <related type="Article" href="/dotnet/standard/datetime/save-time-zones-to-an-embedded-resource"><span data-ttu-id="0ae5c-851">如何：将时区保存到嵌入的资源中</span><span class="sxs-lookup"><span data-stu-id="0ae5c-851">How to: Save Time Zones to an Embedded Resource</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="timeZoneInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0ae5c-852">返回当前 <see cref="T:System.TimeZoneInfo" /> 对象的显示名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-852">Returns the current <see cref="T:System.TimeZoneInfo" /> object's display name.</span></span></summary>
        <returns><span data-ttu-id="0ae5c-853">当前 <see cref="T:System.TimeZoneInfo" /> 对象的 <see cref="P:System.TimeZoneInfo.DisplayName" /> 属性值。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-853">The value of the <see cref="P:System.TimeZoneInfo.DisplayName" /> property of the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-854">在将包含对象的集合分配 <xref:System.TimeZoneInfo> 到列表控件（如 <xref:System.Windows.Forms.ListBox> 控件）时，控件将自动调用 <xref:System.TimeZoneInfo.ToString%2A> 方法以提取描述要在列表中表示的每个对象的字符串。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-854">When assigning a collection that contains <xref:System.TimeZoneInfo> objects to a list control such as the <xref:System.Windows.Forms.ListBox> control, the control automatically calls the <xref:System.TimeZoneInfo.ToString%2A> method to extract a string that describes each object to be represented in the list.</span></span> <span data-ttu-id="0ae5c-855">因此，不需要将对象的有意义的说明存储为字符串，用户无需使用该字符串从集合中提取对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-855">As a result, you do not need to store a meaningful description of the object as a string, and the user does not need to use that string to extract the object from the collection.</span></span> <span data-ttu-id="0ae5c-856">有关更多详细信息，请参阅 [如何：枚举计算机上存在的时区](/dotnet/standard/datetime/enumerate-time-zones) 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-856">See [How to: Enumerate Time Zones Present on a Computer](/dotnet/standard/datetime/enumerate-time-zones) for more detail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Utc">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo Utc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.TimeZoneInfo Utc" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.Utc" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Utc As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeZoneInfo ^ Utc { TimeZoneInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Utc : TimeZoneInfo" Usage="System.TimeZoneInfo.Utc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ae5c-857">获取表示协调世界时 (UTC) 区域的 <see cref="T:System.TimeZoneInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-857">Gets a <see cref="T:System.TimeZoneInfo" /> object that represents the Coordinated Universal Time (UTC) zone.</span></span></summary>
        <value><span data-ttu-id="0ae5c-858">一个对象，表示协调世界时 (UTC) 区域。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-858">An object that represents the Coordinated Universal Time (UTC) zone.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ae5c-859">这是一个内置对象; <xref:System.TimeZoneInfo> 不会在 Windows 系统上的注册表中以及 Linux 和 macOS 上的 [ICU 库](http://userguide.icu-project.org/datetime/timezone) 中检索有关此对象的信息。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-859">This is a built-in object; information about this <xref:System.TimeZoneInfo> object is not retrieved from the registry on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0ae5c-860">应始终通过属性访问协调世界时 (UTC) 区域， <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType> 而不是将 utc 时区分配给 <xref:System.TimeZoneInfo> 对象变量。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-860">You should always access the Coordinated Universal Time (UTC) zone through the <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType> property rather than assigning the UTC time zone to a <xref:System.TimeZoneInfo> object variable.</span></span> <span data-ttu-id="0ae5c-861">这可防止 <xref:System.TimeZoneInfo> 对象变量被调用 <xref:System.TimeZoneInfo.ClearCachedData%2A> 方法无效。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-861">This prevents the <xref:System.TimeZoneInfo> object variable from being invalidated by a call to the <xref:System.TimeZoneInfo.ClearCachedData%2A> method.</span></span>  
  
 <span data-ttu-id="0ae5c-862">协调世界时以前称为格林尼治标准时间 (GMT) 。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-862">Coordinated Universal Time was previously known as Greenwich Mean Time (GMT).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ae5c-863">下面的示例检索一个 <xref:System.TimeZoneInfo> 对象，该对象表示 (UTC 的协调世界时) 并输出其显示名称、标准时间名称和夏时制名称。</span><span class="sxs-lookup"><span data-stu-id="0ae5c-863">The following example retrieves a <xref:System.TimeZoneInfo> object that represents Coordinated Universal Time (UTC) and outputs its display name, standard time name, and daylight saving time name.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#3)]
 [!code-vb[System.TimeZone2.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/datetime/access-utc-and-local"><span data-ttu-id="0ae5c-864">如何：访问预定义的 UTC 和本地时区对象</span><span class="sxs-lookup"><span data-stu-id="0ae5c-864">How to: Access the Predefined UTC and Local Time Zone Objects</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
