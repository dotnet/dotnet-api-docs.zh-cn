<Type Name="UriTemplateTable" FullName="System.UriTemplateTable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6f418fa78853c88d1b75a302c9f961cb3a71a95" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86685397" /></Metadata><TypeSignature Language="C#" Value="public class UriTemplateTable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UriTemplateTable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.UriTemplateTable" />
  <TypeSignature Language="VB.NET" Value="Public Class UriTemplateTable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UriTemplateTable" />
  <TypeSignature Language="F#" Value="type UriTemplateTable = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel.Web" FromVersion="4.0.0.0" To="System.ServiceModel" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9cd2c-101">一个表示一组关联 <see cref="T:System.UriTemplate" /> 对象的类。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-101">A class that represents an associative set of <see cref="T:System.UriTemplate" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cd2c-102"><xref:System.UriTemplateTable> 是一组绑定到开发人员所选对象的关联 <xref:System.UriTemplate> 对象。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-102">A <xref:System.UriTemplateTable> is an associative set of <xref:System.UriTemplate> objects bound to an object of the developer's choosing.</span></span> <span data-ttu-id="9cd2c-103">您可以通过它将候选统一资源标识符 (URI) 与集合中的模板进行匹配，然后检索与匹配的模板相关联的数据。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-103">It allows you to match candidate Uniform Resource Identifiers (URIs) against the templates in the set and retrieve the data associated with the matching templates.</span></span> <span data-ttu-id="9cd2c-104">在调用 <xref:System.UriTemplateTable> 方法之前，可以更改 <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> 的内容，调用时会发生下列其中一种类型的验证：</span><span class="sxs-lookup"><span data-stu-id="9cd2c-104">The contents of <xref:System.UriTemplateTable> can be changed until the <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> method is called, at which time one of following types of validation occurs:</span></span>  
  
-   <span data-ttu-id="9cd2c-105">如果在调用 <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> 时传入 `false`，则 <xref:System.UriTemplateTable> 会检查以确保表中没有多个结构等效的模板。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-105">When <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> is called passing in `false`, the <xref:System.UriTemplateTable> checks to make sure the table contains no multiple structurally-equivalent templates.</span></span> <span data-ttu-id="9cd2c-106">如果找到这样的模板，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-106">If it finds such templates, it throws an exception.</span></span> <span data-ttu-id="9cd2c-107">如果想要确保只有一个模板与传入的 URI 匹配，则可将此验证类型与 <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> 结合使用。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-107">This type of validation is used in conjunction with <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> when you want to ensure only one template matches an incoming URI.</span></span>  
  
-   <span data-ttu-id="9cd2c-108">如果在调用 <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> 时传入 `true`，则 <xref:System.UriTemplateTable> 中可能包含多个结构等效的模板。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-108">When <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> is called passing in `true`, multiple structurally-equivalent templates can be contained within a <xref:System.UriTemplateTable>.</span></span> <span data-ttu-id="9cd2c-109">但是，模板中的所有查询字符串必须无歧义；您可以使用相同的查询字符串。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-109">However, any query strings in the templates must not be ambiguous; identical query strings are allowed.</span></span> <span data-ttu-id="9cd2c-110">有关不明确查询字符串的详细信息，请参阅 [UriTemplate 和 UriTemplateTable](/dotnet/framework/wcf/feature-details/uritemplate-and-uritemplatetable)。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-110">For more information about ambiguous query strings, see [UriTemplate and UriTemplateTable](/dotnet/framework/wcf/feature-details/uritemplate-and-uritemplatetable).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cd2c-111">下面的代码演示如何创建 <xref:System.UriTemplateTable>，对其进行填充，并使用它与候选 <xref:System.Uri> 进行匹配。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-111">The following code shows how to create a <xref:System.UriTemplateTable>, populate it, and use it to match against a candidate <xref:System.Uri>.</span></span>  
  
 [!code-csharp[UriTemplateTable#0](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/program.cs#0)]
 [!code-vb[UriTemplateTable#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/program1.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9cd2c-112">初始化 <see cref="T:System.UriTemplateTable" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-112">Initializes a new instance of the <see cref="T:System.UriTemplateTable" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplateTable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9cd2c-113">初始化 <see cref="T:System.UriTemplateTable" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-113">Initializes a new instance of the <see cref="T:System.UriTemplateTable" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9cd2c-114">下面的示例演示如何实例化 <xref:System.UriTemplateTable> 类。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-114">The following example shows how to instantiate the <xref:System.UriTemplateTable> class.</span></span>  
  
 [!code-csharp[UriTemplateTable#1](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/program.cs#1)]
 [!code-vb[UriTemplateTable#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplateTable (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;UriTemplate,object&gt;&gt; keyValuePairs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.UriTemplate, object&gt;&gt; keyValuePairs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplateTable.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.UriTemplate,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyValuePairs As IEnumerable(Of KeyValuePair(Of UriTemplate, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateTable(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;UriTemplate ^, System::Object ^&gt;&gt; ^ keyValuePairs);" />
      <MemberSignature Language="F#" Value="new UriTemplateTable : seq&lt;System.Collections.Generic.KeyValuePair&lt;UriTemplate, obj&gt;&gt; -&gt; UriTemplateTable" Usage="new System.UriTemplateTable keyValuePairs" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keyValuePairs" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.UriTemplate,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePairs"><span data-ttu-id="9cd2c-115">一个由 URI 模板和关联数据构成的键/值对集合。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-115">A collection of key/value pairs that consist of URI templates and associated data.</span></span></param>
        <summary><span data-ttu-id="9cd2c-116">使用指定的键/值对集合初始化 <see cref="T:System.UriTemplateTable" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-116">Initializes a new instance of the <see cref="T:System.UriTemplateTable" /> class with the specified collection of key/value pairs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9cd2c-117">下面的示例演示如何实例化 <xref:System.UriTemplateTable> 类。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-117">The following example shows how to instantiate the <xref:System.UriTemplateTable> class.</span></span>  
  
 [!code-csharp[UriTemplateTable#2](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/snippets.cs#2)]
 [!code-vb[UriTemplateTable#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplateTable (Uri baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplateTable.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseAddress As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateTable(Uri ^ baseAddress);" />
      <MemberSignature Language="F#" Value="new UriTemplateTable : Uri -&gt; UriTemplateTable" Usage="new System.UriTemplateTable baseAddress" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="9cd2c-118">一个包含基址的 <see cref="T:System.Uri" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-118">A <see cref="T:System.Uri" /> instance that contains the base address.</span></span></param>
        <summary><span data-ttu-id="9cd2c-119">使用指定的基址初始化 <see cref="T:System.UriTemplateTable" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-119">Initializes a new instance of the <see cref="T:System.UriTemplateTable" /> class with the specified base address.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9cd2c-120">下面的示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-120">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[UriTemplateTable#3](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/program.cs#3)]
 [!code-vb[UriTemplateTable#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/program1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplateTable (Uri baseAddress, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;UriTemplate,object&gt;&gt; keyValuePairs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseAddress, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.UriTemplate, object&gt;&gt; keyValuePairs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplateTable.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.UriTemplate,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseAddress As Uri, keyValuePairs As IEnumerable(Of KeyValuePair(Of UriTemplate, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateTable(Uri ^ baseAddress, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;UriTemplate ^, System::Object ^&gt;&gt; ^ keyValuePairs);" />
      <MemberSignature Language="F#" Value="new UriTemplateTable : Uri * seq&lt;System.Collections.Generic.KeyValuePair&lt;UriTemplate, obj&gt;&gt; -&gt; UriTemplateTable" Usage="new System.UriTemplateTable (baseAddress, keyValuePairs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="keyValuePairs" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.UriTemplate,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="9cd2c-121">一个包含基址的 <see cref="T:System.Uri" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-121">A <see cref="T:System.Uri" /> instance that contains the base address.</span></span></param>
        <param name="keyValuePairs"><span data-ttu-id="9cd2c-122">一个由 URI 模板和关联数据构成的键/值对集合。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-122">A collection of key/value pairs that consist of URI templates and associated data.</span></span></param>
        <summary><span data-ttu-id="9cd2c-123">使用指定的基址和键/值对集合初始化 <see cref="T:System.UriTemplateTable" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-123">Initializes a new instance of the <see cref="T:System.UriTemplateTable" /> class with the specified base address and collection of key/value pairs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9cd2c-124">下面的示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-124">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[UriTemplateTable#4](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/snippets.cs#4)]
 [!code-vb[UriTemplateTable#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseAddress">
      <MemberSignature Language="C#" Value="public Uri BaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplateTable.BaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseAddress : Uri with get, set" Usage="System.UriTemplateTable.BaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9cd2c-125">获取或设置 <see cref="T:System.UriTemplateTable" /> 实例的基址。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-125">Gets or sets the base address for the <see cref="T:System.UriTemplateTable" /> instance.</span></span></summary>
        <value><span data-ttu-id="9cd2c-126">一个包含基址的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-126">A <see cref="T:System.Uri" /> that contains the base address.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cd2c-127"><xref:System.UriTemplateTable.BaseAddress%2A> 属性仅可以在调用 <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29>、<xref:System.UriTemplateTable.Match%28System.Uri%29> 或 <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> 之前设置，否则会引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-127">The <xref:System.UriTemplateTable.BaseAddress%2A> property can only be set prior to calling <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> or <xref:System.UriTemplateTable.Match%28System.Uri%29> or <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> otherwise an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cd2c-128">下面的示例演示如何访问 <xref:System.UriTemplateTable.BaseAddress%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-128">The following example shows how to access the <xref:System.UriTemplateTable.BaseAddress%2A> property.</span></span>  
  
 [!code-csharp[UriTemplateTable#5](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/snippets.cs#5)]
 [!code-vb[UriTemplateTable#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplateTable.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.UriTemplateTable.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9cd2c-129">获取一个值，该值指定 <see cref="T:System.UriTemplateTable" /> 是否为只读。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-129">Gets a value that specifies whether the <see cref="T:System.UriTemplateTable" /> is read only.</span></span></summary>
        <value><span data-ttu-id="9cd2c-130">如果 <see langword="true" /> 属性为只读，则为 <see cref="T:System.UriTemplateTable" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-130"><see langword="true" /> if the <see cref="T:System.UriTemplateTable" /> property is read only; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cd2c-131">调用 <xref:System.UriTemplateTable> 方法后，<xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> 为只读。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-131">A <xref:System.UriTemplateTable> is read only after the <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cd2c-132">下面的示例演示如何访问 <xref:System.UriTemplateTable.IsReadOnly%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-132">The following example shows how to access the <xref:System.UriTemplateTable.IsReadOnly%2A> property.</span></span>  
  
 [!code-csharp[UriTemplateTable#6](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/snippets.cs#6)]
 [!code-vb[UriTemplateTable#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyValuePairs">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Collections.Generic.KeyValuePair&lt;UriTemplate,object&gt;&gt; KeyValuePairs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.UriTemplate, object&gt;&gt; KeyValuePairs" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplateTable.KeyValuePairs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyValuePairs As IList(Of KeyValuePair(Of UriTemplate, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Collections::Generic::KeyValuePair&lt;UriTemplate ^, System::Object ^&gt;&gt; ^ KeyValuePairs { System::Collections::Generic::IList&lt;System::Collections::Generic::KeyValuePair&lt;UriTemplate ^, System::Object ^&gt;&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyValuePairs : System.Collections.Generic.IList&lt;System.Collections.Generic.KeyValuePair&lt;UriTemplate, obj&gt;&gt;" Usage="System.UriTemplateTable.KeyValuePairs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Collections.Generic.KeyValuePair&lt;System.UriTemplate,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9cd2c-133">获取由 <see cref="T:System.UriTemplate" /> 对象及其关联数据构成的键/值对集合。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-133">Gets a collection of key/value pairs that consist of <see cref="T:System.UriTemplate" /> objects and their associated data.</span></span></summary>
        <value><span data-ttu-id="9cd2c-134">一个键/值对的集合，由 <see cref="T:System.UriTemplate" /> 对象及其关联的数据构成。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-134">A collection of key/value pairs that consist of <see cref="T:System.UriTemplate" /> objects and their associated data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cd2c-135">表中每个 <xref:System.UriTemplate> 实例都有与之关联的数据。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-135">Each <xref:System.UriTemplate> instance in the table has data associated with it.</span></span> <span data-ttu-id="9cd2c-136"><xref:System.UriTemplateTable.KeyValuePairs%2A> 属性包含键值对的集合，其中键是 <xref:System.UriTemplate> 实例，值是与 <xref:System.UriTemplate> 关联的数据。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-136">The <xref:System.UriTemplateTable.KeyValuePairs%2A> property contains a collection of key value pairs where the key is a <xref:System.UriTemplate> instance and the value is the data associated with the <xref:System.UriTemplate>.</span></span> <span data-ttu-id="9cd2c-137">值仅可以在调用 <xref:System.UriTemplateTable.KeyValuePairs%2A>、<xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> 或 <xref:System.UriTemplateTable.Match%28System.Uri%29> 之前添加到 <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> 属性，否则会引发 <xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-137">Values can only be added to <xref:System.UriTemplateTable.KeyValuePairs%2A> property prior to calling <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> or <xref:System.UriTemplateTable.Match%28System.Uri%29> or <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> otherwise a <xref:System.NotSupportedException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cd2c-138">下面的示例演示如何访问 <xref:System.UriTemplateTable.KeyValuePairs%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-138">The following example shows how to access the <xref:System.UriTemplateTable.KeyValuePairs%2A> property.</span></span>  
  
 [!code-csharp[UriTemplateTable#7](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/snippets.cs#7)]
 [!code-vb[UriTemplateTable#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeReadOnly">
      <MemberSignature Language="C#" Value="public void MakeReadOnly (bool allowDuplicateEquivalentUriTemplates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeReadOnly(bool allowDuplicateEquivalentUriTemplates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplateTable.MakeReadOnly(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeReadOnly (allowDuplicateEquivalentUriTemplates As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeReadOnly(bool allowDuplicateEquivalentUriTemplates);" />
      <MemberSignature Language="F#" Value="member this.MakeReadOnly : bool -&gt; unit" Usage="uriTemplateTable.MakeReadOnly allowDuplicateEquivalentUriTemplates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowDuplicateEquivalentUriTemplates" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowDuplicateEquivalentUriTemplates"><span data-ttu-id="9cd2c-139">指定是否允许 <see cref="T:System.UriTemplate" /> 中有重复的等效 <see cref="T:System.UriTemplateTable" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-139">Specifies whether to allow duplicate equivalent <see cref="T:System.UriTemplate" /> instances in the <see cref="T:System.UriTemplateTable" />.</span></span></param>
        <summary><span data-ttu-id="9cd2c-140">将 <see cref="T:System.UriTemplateTable" /> 设置为只读。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-140">Makes the <see cref="T:System.UriTemplateTable" /> read only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cd2c-141">调用 <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> 方法时，会发生下列其中一种验证类型：</span><span class="sxs-lookup"><span data-stu-id="9cd2c-141">When the <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> method is called, one of the following types of validation occurs:</span></span>  
  
-   <span data-ttu-id="9cd2c-142">如果在调用 <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> 时传入 `false`，则 <xref:System.UriTemplateTable> 会检查以确保表中没有多个结构等效的模板。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-142">When <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> is called passing in `false`, the <xref:System.UriTemplateTable> checks to make sure the table contains no multiple structurally-equivalent templates.</span></span> <span data-ttu-id="9cd2c-143">如果找到这样的模板，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-143">If it finds such templates, an exception is thrown.</span></span> <span data-ttu-id="9cd2c-144">如果想要确保只有一个模板与传入的 URI 匹配，则可将此验证类型与 <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> 结合使用。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-144">This type of validation is used in conjunction with <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> when you want to ensure only one template matches an incoming URI.</span></span>  
  
-   <span data-ttu-id="9cd2c-145">如果在调用 <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> 时传入 `true`，则 <xref:System.UriTemplateTable> 中可能包含多个结构等效的模板。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-145">When <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> is called passing in `true`, multiple structurally-equivalent templates can be contained within a <xref:System.UriTemplateTable>.</span></span> <span data-ttu-id="9cd2c-146">但是，模板中的所有查询字符串必须无歧义；您可以使用相同的查询字符串。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-146">However, any query strings in the templates must not be ambiguous; identical query strings are allowed.</span></span> <span data-ttu-id="9cd2c-147">如果允许有多个模板与候选 URI 匹配，则可将此验证类型与 <xref:System.UriTemplateTable.Match%28System.Uri%29> 结合使用。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-147">This type of validation is used in conjunction with <xref:System.UriTemplateTable.Match%28System.Uri%29> when multiple template matches are allowed on the candidate URI.</span></span>  
  
 <span data-ttu-id="9cd2c-148">系统只接受对 <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> 的首次调用，而会忽略后续调用，且不引发任何异常。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-148">Only the first call to <xref:System.UriTemplateTable.MakeReadOnly%28System.Boolean%29> is honored, subsequent calls are ignored without any exception being thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;UriTemplateMatch&gt; Match (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.UriTemplateMatch&gt; Match(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplateTable.Match(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (uri As Uri) As Collection(Of UriTemplateMatch)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;UriTemplateMatch ^&gt; ^ Match(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="member this.Match : Uri -&gt; System.Collections.ObjectModel.Collection&lt;UriTemplateMatch&gt;" Usage="uriTemplateTable.Match uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.UriTemplateMatch&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="9cd2c-149">候选 URI。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-149">The candidate URI.</span></span></param>
        <summary><span data-ttu-id="9cd2c-150">尝试将候选 <see cref="T:System.Uri" /> 与 <see cref="T:System.UriTemplateTable" /> 匹配。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-150">Attempts to match a candidate <see cref="T:System.Uri" /> to the <see cref="T:System.UriTemplateTable" />.</span></span></summary>
        <returns><span data-ttu-id="9cd2c-151"><see cref="T:System.UriTemplateMatch" /> 实例的集合。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-151">A collection of <see cref="T:System.UriTemplateMatch" /> instances.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cd2c-152">此方法可能会返回多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-152">This method may return multiple matches.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cd2c-153">下面的示例演示如何调用 <xref:System.UriTemplateTable.Match%28System.Uri%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-153">The following example shows how to call the <xref:System.UriTemplateTable.Match%28System.Uri%29> method.</span></span>  
  
 [!code-csharp[UriTemplateTable#9](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/snippets.cs#9)]
 [!code-vb[UriTemplateTable#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchSingle">
      <MemberSignature Language="C#" Value="public UriTemplateMatch MatchSingle (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.UriTemplateMatch MatchSingle(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplateTable.MatchSingle(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function MatchSingle (uri As Uri) As UriTemplateMatch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateMatch ^ MatchSingle(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="member this.MatchSingle : Uri -&gt; UriTemplateMatch" Usage="uriTemplateTable.MatchSingle uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UriTemplateMatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="9cd2c-154">候选 URI。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-154">The candidate URI.</span></span></param>
        <summary><span data-ttu-id="9cd2c-155">尝试将候选 <see cref="T:System.Uri" /> 与 <see cref="T:System.UriTemplateTable" /> 匹配。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-155">Attempts to match a candidate <see cref="T:System.Uri" /> to the <see cref="T:System.UriTemplateTable" />.</span></span></summary>
        <returns><span data-ttu-id="9cd2c-156">单个 <see cref="T:System.UriTemplateMatch" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-156">A single <see cref="T:System.UriTemplateMatch" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9cd2c-157">此方法最多返回一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-157">This method returns, at most, one match.</span></span> <span data-ttu-id="9cd2c-158">如果找到多个匹配项，则会引发 <xref:System.UriTemplateMatchException>。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-158">If more than one match is found, a <xref:System.UriTemplateMatchException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9cd2c-159">下面的示例演示如何调用 <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-159">The following example shows how to call the <xref:System.UriTemplateTable.MatchSingle%28System.Uri%29> method.</span></span>  
  
 [!code-csharp[UriTemplateTable#10](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplatetable/cs/snippets.cs#10)]
 [!code-vb[UriTemplateTable#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplatetable/vb/snippets.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalBaseAddress">
      <MemberSignature Language="C#" Value="public Uri OriginalBaseAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri OriginalBaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplateTable.OriginalBaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalBaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ OriginalBaseAddress { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalBaseAddress : Uri" Usage="System.UriTemplateTable.OriginalBaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9cd2c-160">获取原始基址。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-160">Gets the original base address.</span></span></summary>
        <value><span data-ttu-id="9cd2c-161">原始基址。</span><span class="sxs-lookup"><span data-stu-id="9cd2c-161">The original base address.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
