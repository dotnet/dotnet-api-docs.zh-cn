<Type Name="TypeAccessException" FullName="System.TypeAccessException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="184190962190280815e45a5795d844890c37ca0c" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100313198" /></Metadata><TypeSignature Language="C#" Value="public class TypeAccessException : TypeLoadException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeAccessException extends System.TypeLoadException" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.TypeAccessException" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeAccessException&#xA;Inherits TypeLoadException" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeAccessException : TypeLoadException" />
  <TypeSignature Language="F#" Value="type TypeAccessException = class&#xA;    inherit TypeLoadException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TypeAccessException extends System.TypeLoadException" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.TypeLoadException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="47de9-101">当方法试图使用它无权访问的类型时引发的异常。</span><span class="sxs-lookup"><span data-stu-id="47de9-101">The exception that is thrown when a method attempts to use a type that it does not have access to.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47de9-102"><xref:System.TypeAccessException> 当方法尝试将对象强制转换为无法从方法访问的类型时，将引发。</span><span class="sxs-lookup"><span data-stu-id="47de9-102"><xref:System.TypeAccessException> is thrown when a method attempts to cast an object to a type that is not accessible from the method.</span></span> <span data-ttu-id="47de9-103">例如，匿名托管的动态方法无法访问安全关键类型，因为该方法是 [透明](/dotnet/framework/misc/security-transparent-code)的。</span><span class="sxs-lookup"><span data-stu-id="47de9-103">For example, an anonymously hosted dynamic method cannot access a security-critical type because the method is [transparent](/dotnet/framework/misc/security-transparent-code).</span></span> <span data-ttu-id="47de9-104">如果方法包含将 <xref:System.Reflection.Emit.OpCodes.Castclass?displayProperty=nameWithType> 对象强制转换为安全关键类型的指令，或将对象强制转换为具有安全关键类型作为其类型参数之一的泛型类型， <xref:System.TypeAccessException> 则由 JIT 编译器引发。</span><span class="sxs-lookup"><span data-stu-id="47de9-104">If the method contains a <xref:System.Reflection.Emit.OpCodes.Castclass?displayProperty=nameWithType> instruction that casts an object to a security-critical type, or to a generic type that has a security-critical type as one of its type parameters, <xref:System.TypeAccessException> is thrown by the JIT compiler.</span></span>  
  
 <span data-ttu-id="47de9-105">同样， <xref:System.TypeAccessException> 对于使用来自其他程序集的内部类型的动态方法，将引发。</span><span class="sxs-lookup"><span data-stu-id="47de9-105">Similarly, <xref:System.TypeAccessException> is thrown for a dynamic method that uses an internal type from another assembly.</span></span> <span data-ttu-id="47de9-106">方法可能无法访问其包含类型、其返回类型或它的参数类型之一。</span><span class="sxs-lookup"><span data-stu-id="47de9-106">A method might not have access to its containing type, its return type, or one of its parameter types.</span></span>  
  
 <span data-ttu-id="47de9-107">使用工具链编译的应用 [!INCLUDE[net_native](~/includes/net-native-md.md)] 可能会在运行时引发异常。</span><span class="sxs-lookup"><span data-stu-id="47de9-107">Apps compiled by using the [!INCLUDE[net_native](~/includes/net-native-md.md)] tool chain may throw a  exception at runtime.</span></span>  <span data-ttu-id="47de9-108">是派生自的仅限内部的异常类型 <xref:System.TypeAccessException> 。</span><span class="sxs-lookup"><span data-stu-id="47de9-108">is an internal-only exception type derived from <xref:System.TypeAccessException>.</span></span> <span data-ttu-id="47de9-109">此异常表示在运行时不存在成功执行应用所需的元数据。</span><span class="sxs-lookup"><span data-stu-id="47de9-109">The exception indicates that metadata needed for the successful execution of an app is not present at runtime.</span></span> <span data-ttu-id="47de9-110">不应使用 `try` / `catch` 块来处理异常。</span><span class="sxs-lookup"><span data-stu-id="47de9-110">You should not use a `try`/`catch` block to handle the exception.</span></span> <span data-ttu-id="47de9-111">相反，你应该确定丢失的元数据，并修改应用程序以确保其在运行时存在。</span><span class="sxs-lookup"><span data-stu-id="47de9-111">Instead, you should determine what metadata is missing and modify your app's  to ensure that it is present at runtime.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="47de9-112">初始化 <see cref="T:System.TypeAccessException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="47de9-112">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeAccessException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeAccessException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeAccessException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47de9-113">使用说明错误的系统提供的消息初始化 <see cref="T:System.TypeAccessException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="47de9-113">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class with a system-supplied message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47de9-114">此构造函数将 <xref:System.Exception.Message%2A> 新实例的属性初始化为系统提供的描述错误的消息，如 "尝试访问该类型失败"。</span><span class="sxs-lookup"><span data-stu-id="47de9-114">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "Attempt to access the type failed."</span></span> <span data-ttu-id="47de9-115">此消息将考虑当前系统区域性。</span><span class="sxs-lookup"><span data-stu-id="47de9-115">This message takes the current system culture into account.</span></span>  
  
 <span data-ttu-id="47de9-116">下表显示了 <xref:System.TypeAccessException> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="47de9-116">The following table shows the initial property values for an instance of <xref:System.TypeAccessException>.</span></span>  
  
|<span data-ttu-id="47de9-117">properties</span><span class="sxs-lookup"><span data-stu-id="47de9-117">Property</span></span>|<span data-ttu-id="47de9-118">值</span><span class="sxs-lookup"><span data-stu-id="47de9-118">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="47de9-119">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="47de9-119">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="47de9-120">本地化的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="47de9-120">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/exceptions/"><span data-ttu-id="47de9-121">处理和引发异常</span><span class="sxs-lookup"><span data-stu-id="47de9-121">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeAccessException (string message);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeAccessException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeAccessException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new TypeAccessException : string -&gt; TypeAccessException" Usage="new System.TypeAccessException message" />
      <MemberSignature Language="C#" Value="public TypeAccessException (string? message);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="47de9-122">描述该异常的消息。</span><span class="sxs-lookup"><span data-stu-id="47de9-122">The message that describes the exception.</span></span> <span data-ttu-id="47de9-123">此构造函数的调用方必须确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="47de9-123">The caller of this constructor must ensure that this string has been localized for the current system culture.</span></span></param>
        <summary><span data-ttu-id="47de9-124">使用说明错误的指定消息初始化 <see cref="T:System.TypeAccessException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="47de9-124">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class with a specified message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47de9-125">下表显示了 <xref:System.TypeAccessException> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="47de9-125">The following table shows the initial property values for an instance of <xref:System.TypeAccessException>.</span></span>  
  
|<span data-ttu-id="47de9-126">properties</span><span class="sxs-lookup"><span data-stu-id="47de9-126">Property</span></span>|<span data-ttu-id="47de9-127">值</span><span class="sxs-lookup"><span data-stu-id="47de9-127">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="47de9-128">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="47de9-128">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="47de9-129">`message` 中指定的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="47de9-129">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/exceptions/"><span data-ttu-id="47de9-130">处理和引发异常</span><span class="sxs-lookup"><span data-stu-id="47de9-130">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeAccessException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeAccessException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new TypeAccessException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; TypeAccessException" Usage="new System.TypeAccessException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="47de9-131">包含序列化数据的对象。</span><span class="sxs-lookup"><span data-stu-id="47de9-131">The object that holds the serialized data.</span></span></param>
        <param name="context"><span data-ttu-id="47de9-132">关于来源和目标的上下文信息</span><span class="sxs-lookup"><span data-stu-id="47de9-132">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="47de9-133">用序列化数据初始化 <see cref="T:System.TypeAccessException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="47de9-133">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47de9-134">在反序列化过程中调用此构造函数来重建通过流传输的异常对象。</span><span class="sxs-lookup"><span data-stu-id="47de9-134">This constructor is called during deserialization to reconstitute the exception object that was transmitted over a stream.</span></span> <span data-ttu-id="47de9-135">有关详细信息，请参阅 [XML 和 SOAP 序列化](/dotnet/standard/serialization/xml-and-soap-serialization)。</span><span class="sxs-lookup"><span data-stu-id="47de9-135">For more information, see [XML and SOAP Serialization](/dotnet/standard/serialization/xml-and-soap-serialization).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/serialization/xml-and-soap-serialization"><span data-ttu-id="47de9-136">XML 和 SOAP 序列化</span><span class="sxs-lookup"><span data-stu-id="47de9-136">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeAccessException (string message, Exception inner);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeAccessException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeAccessException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new TypeAccessException : string * Exception -&gt; TypeAccessException" Usage="new System.TypeAccessException (message, inner)" />
      <MemberSignature Language="C#" Value="public TypeAccessException (string? message, Exception? inner);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="47de9-137">描述该异常的消息。</span><span class="sxs-lookup"><span data-stu-id="47de9-137">The message that describes the exception.</span></span> <span data-ttu-id="47de9-138">此构造函数的调用方必须确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="47de9-138">The caller of this constructor must ensure that this string has been localized for the current system culture.</span></span></param>
        <param name="inner"><span data-ttu-id="47de9-139">导致当前异常的异常。</span><span class="sxs-lookup"><span data-stu-id="47de9-139">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="47de9-140">如果 <paramref name="inner" /> 参数不为 <see langword="null" />，则当前异常将在处理内部异常的 <see langword="catch" /> 块中引发。</span><span class="sxs-lookup"><span data-stu-id="47de9-140">If the <paramref name="inner" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="47de9-141">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.TypeAccessException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="47de9-141">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47de9-142">因前一个异常而直接引发的异常应在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。</span><span class="sxs-lookup"><span data-stu-id="47de9-142">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="47de9-143"><xref:System.Exception.InnerException%2A> 属性将返回传递给构造函数的同一值；如果 <xref:System.Exception.InnerException%2A> 属性不向构造函数提供内部异常值，则返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="47de9-143">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="47de9-144">下表显示了 <xref:System.TypeAccessException> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="47de9-144">The following table shows the initial property values for an instance of <xref:System.TypeAccessException>.</span></span>  
  
|<span data-ttu-id="47de9-145">properties</span><span class="sxs-lookup"><span data-stu-id="47de9-145">Property</span></span>|<span data-ttu-id="47de9-146">值</span><span class="sxs-lookup"><span data-stu-id="47de9-146">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="47de9-147">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="47de9-147">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="47de9-148">`message` 中指定的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="47de9-148">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/exceptions/"><span data-ttu-id="47de9-149">处理和引发异常</span><span class="sxs-lookup"><span data-stu-id="47de9-149">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
