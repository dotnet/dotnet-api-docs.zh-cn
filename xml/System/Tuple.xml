<Type Name="Tuple" FullName="System.Tuple">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f968e805f69328b74a03a5f7c14922c3ce286d61" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100281796" /></Metadata><TypeSignature Language="C#" Value="public static class Tuple" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Tuple extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Tuple" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple" />
  <TypeSignature Language="C++ CLI" Value="public ref class Tuple abstract sealed" />
  <TypeSignature Language="F#" Value="type Tuple = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d5544-101">提供用于创造元组对象的静态方法。</span><span class="sxs-lookup"><span data-stu-id="d5544-101">Provides static methods for creating tuple objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5544-102">元组是具有特定数量和元素序列的数据结构。</span><span class="sxs-lookup"><span data-stu-id="d5544-102">A tuple is a data structure that has a specific number and sequence of elements.</span></span> <span data-ttu-id="d5544-103">元组的一个示例是具有三个元素的数据结构， (称为3元组或三) ，用于在第一个元素、第二个元素中的年份和第三个元素中的该年份的人员收入之间存储标识符，如人员姓名。</span><span class="sxs-lookup"><span data-stu-id="d5544-103">An example of a tuple is a data structure with three elements (known as a 3-tuple or triple) that is used to store an identifier such as a person's name in the first element, a year in the second element, and the person's income for that year in the third element.</span></span> <span data-ttu-id="d5544-104">.NET Framework 直接支持包含1到7个元素的元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-104">The .NET Framework directly supports tuples with one to seven elements.</span></span> <span data-ttu-id="d5544-105">此外，通过在对象的属性中嵌套元组对象，可以创建八个或多个元素的元组 <xref:System.Tuple%608.Rest%2A> <xref:System.Tuple%608> 。</span><span class="sxs-lookup"><span data-stu-id="d5544-105">In addition, you can create tuples of eight or more elements by nesting tuple objects in the <xref:System.Tuple%608.Rest%2A> property of a <xref:System.Tuple%608> object.</span></span>  
  
 <span data-ttu-id="d5544-106">元组通常以四种方式使用：</span><span class="sxs-lookup"><span data-stu-id="d5544-106">Tuples are commonly used in four ways:</span></span>  
  
-   <span data-ttu-id="d5544-107">表示单个数据集。</span><span class="sxs-lookup"><span data-stu-id="d5544-107">To represent a single set of data.</span></span> <span data-ttu-id="d5544-108">例如，元组可以表示数据库记录，并且其组件可以表示记录的各个字段。</span><span class="sxs-lookup"><span data-stu-id="d5544-108">For example, a tuple can represent a database record, and its components can represent individual fields of the record.</span></span>  
  
-   <span data-ttu-id="d5544-109">提供对数据集的轻松访问和操作。</span><span class="sxs-lookup"><span data-stu-id="d5544-109">To provide easy access to, and manipulation of, a data set.</span></span>  
  
-   <span data-ttu-id="d5544-110">如果为，则从方法返回多个值，而不使用 `out` 参数 (在 c # 中 ) 或 `ByRef` (Visual Basic) 中的参数。</span><span class="sxs-lookup"><span data-stu-id="d5544-110">To return multiple values from a method without using `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span>  
  
-   <span data-ttu-id="d5544-111">若要通过单个参数向方法传递多个值，则为。</span><span class="sxs-lookup"><span data-stu-id="d5544-111">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="d5544-112">例如，该 <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> 方法只有一个参数，该参数可让你为线程在启动时执行的方法提供一个值。</span><span class="sxs-lookup"><span data-stu-id="d5544-112">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup time.</span></span> <span data-ttu-id="d5544-113">如果提供 <xref:System.Tuple%603> 对象作为方法参数，则可以为该线程的启动例程提供三个数据项。</span><span class="sxs-lookup"><span data-stu-id="d5544-113">If you supply a <xref:System.Tuple%603> object as the method argument, you can supply the thread's startup routine with three items of data.</span></span>  
  
 <span data-ttu-id="d5544-114"><xref:System.Tuple>类本身不表示元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-114">The <xref:System.Tuple> class does not itself represent a tuple.</span></span> <span data-ttu-id="d5544-115">相反，它是一个类，该类提供静态方法用于创建 .NET Framework 支持的元组类型的实例。</span><span class="sxs-lookup"><span data-stu-id="d5544-115">Instead, it is a class that provides static methods for creating instances of the tuple types that are supported by the .NET Framework.</span></span> <span data-ttu-id="d5544-116">它提供帮助器方法，你可以调用它来实例化元组对象，而无需显式指定每个元组组件的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-116">It provides helper methods that you can call to instantiate tuple objects without having to explicitly specify the type of each tuple component.</span></span>  
  
 <span data-ttu-id="d5544-117">尽管可以通过调用类构造函数来创建元组类的实例，但执行此操作的代码可能会很繁琐。</span><span class="sxs-lookup"><span data-stu-id="d5544-117">Although you can create an instance of a tuple class by calling its class constructor, the code to do so can be cumbersome.</span></span> <span data-ttu-id="d5544-118">下面的示例使用类构造函数创建一个7元组或七元组，其中包含从1950到2000的每个人口普查的纽约人口数据。</span><span class="sxs-lookup"><span data-stu-id="d5544-118">The following example uses a class constructor to create a 7-tuple or septuple that contains population data for New York City for each census from 1950 through 2000.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.class/cs/example1.cs" interactive="try-dotnet-method" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.class/vb/example1.vb" id="Snippet1":::
  
 <span data-ttu-id="d5544-119">使用 helper 方法创建相同的元组对象更简单，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="d5544-119">Creating the same tuple object by using a helper method is more straightforward, as the following example shows.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.class/cs/example1.cs" interactive="try-dotnet-method" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.class/vb/example1.vb" id="Snippet2":::
  
 <span data-ttu-id="d5544-120"><xref:System.Tuple.Create%2A>Helper 方法直接支持创建包含一到八个组件的元组对象， (即通过 octuples) 单一实例。</span><span class="sxs-lookup"><span data-stu-id="d5544-120">The <xref:System.Tuple.Create%2A> helper methods directly support the creation of tuple objects that have from one to eight components (that is, singletons through octuples).</span></span> <span data-ttu-id="d5544-121">尽管元组可能具有的组件数没有实际限制，但帮助器方法不可用于创建包含九个或更多组件的元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-121">Although there is no practical limit to the number of components a tuple may have, helper methods are not available to create a tuple with nine or more components.</span></span> <span data-ttu-id="d5544-122">若要创建此类元组，必须调用 <xref:System.Tuple%608.%23ctor%2A?displayProperty=nameWithType> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="d5544-122">To create such a tuple, you must call the <xref:System.Tuple%608.%23ctor%2A?displayProperty=nameWithType> constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5544-123">有关使用元组的其他信息和示例，请参阅 .NET Framework 中各个元组类型的文档。</span><span class="sxs-lookup"><span data-stu-id="d5544-123">For additional information and examples that use tuples, see the documentation for the individual tuple types in the .NET Framework.</span></span> <span data-ttu-id="d5544-124">本主题末尾的 "另请参阅" 部分中列出了这些内容。</span><span class="sxs-lookup"><span data-stu-id="d5544-124">These are listed in the See Also section at the end of this topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5544-125">下面的示例创建一个8元组 (八元组) ，其中包含小于20的质数。</span><span class="sxs-lookup"><span data-stu-id="d5544-125">The following example creates an 8-tuple (octuple) that contains prime numbers that are less than 20.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs" interactive="try-dotnet-method" id="Snippet17":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb" id="Snippet17":::
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Create&lt;T1&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5544-126">创建新的元组对象。</span><span class="sxs-lookup"><span data-stu-id="d5544-126">Creates a new tuple object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1&gt; Create&lt;T1&gt; (T1 item1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`1&lt;!!T1&gt; Create&lt;T1&gt;(!!T1 item1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple.Create``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1) (item1 As T1) As Tuple(Of T1)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1&gt;&#xA; static Tuple&lt;T1&gt; ^ Create(T1 item1);" />
      <MemberSignature Language="F#" Value="static member Create : 'T1 -&gt; 'T1" Usage="System.Tuple.Create item1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="d5544-127">元组的唯一一个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-127">The type of the only component of the tuple.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="d5544-128">元组仅有的分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-128">The value of the only component of the tuple.</span></span></param>
        <summary><span data-ttu-id="d5544-129">创建新的 1 元组，即单一实例。</span><span class="sxs-lookup"><span data-stu-id="d5544-129">Creates a new 1-tuple, or singleton.</span></span></summary>
        <returns><span data-ttu-id="d5544-130">值为 (<paramref name="item1" />) 的元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-130">A tuple whose value is (<paramref name="item1" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5544-131"><xref:System.Tuple.Create%2A> 是一个帮助器方法，你可以调用它来实例化1元组对象，而无需显式指定其组件的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-131"><xref:System.Tuple.Create%2A> is a helper method that you can call to instantiate a 1-tuple object without having to explicitly specify the type of its component.</span></span> <span data-ttu-id="d5544-132">下面的示例使用 <xref:System.Tuple.Create%2A> 方法实例化1元组，其组件的类型为 <xref:System.Int32> 。</span><span class="sxs-lookup"><span data-stu-id="d5544-132">The following example uses the <xref:System.Tuple.Create%2A> method to instantiate a 1-tuple whose component is of type <xref:System.Int32>.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs" interactive="try-dotnet-method" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb" id="Snippet1":::
 
 <span data-ttu-id="d5544-133">此代码等效于以下对 <xref:System.Tuple%601.%23ctor%2A> 类构造函数的调用。</span><span class="sxs-lookup"><span data-stu-id="d5544-133">This code is equivalent to the following call to the <xref:System.Tuple%601.%23ctor%2A> class constructor.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs" interactive="try-dotnet-method" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb" id="Snippet2":::
 
 ]]></format>
        </remarks>
        <altmember cref="T:System.Tuple`1" />
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2&gt; Create&lt;T1,T2&gt; (T1 item1, T2 item2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`2&lt;!!T1, !!T2&gt; Create&lt;T1, T2&gt;(!!T1 item1, !!T2 item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple.Create``2(``0,``1)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2) (item1 As T1, item2 As T2) As Tuple(Of T1, T2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA; static Tuple&lt;T1, T2&gt; ^ Create(T1 item1, T2 item2);" />
      <MemberSignature Language="F#" Value="static member Create : 'T1 * 'T2 -&gt; 'T1 * 'T2" Usage="System.Tuple.Create (item1, item2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="d5544-134">此元组的第一个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-134">The type of the first component of the tuple.</span></span></typeparam>
        <typeparam name="T2"><span data-ttu-id="d5544-135">元组的第二个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-135">The type of the second component of the tuple.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="d5544-136">此元组的第一个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-136">The value of the first component of the tuple.</span></span></param>
        <param name="item2"><span data-ttu-id="d5544-137">此元组的第二个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-137">The value of the second component of the tuple.</span></span></param>
        <summary><span data-ttu-id="d5544-138">创建新的 2 元组，即二元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-138">Creates a new 2-tuple, or pair.</span></span></summary>
        <returns><span data-ttu-id="d5544-139">值为 (<paramref name="item1" />, <paramref name="item2" />) 的 2 元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-139">A 2-tuple whose value is (<paramref name="item1" />, <paramref name="item2" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5544-140"><xref:System.Tuple.Create%2A> 是一个帮助器方法，你可以调用它来实例化2元组对象，而无需显式指定其组件的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-140"><xref:System.Tuple.Create%2A> is a helper method that you can call to instantiate a 2-tuple object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="d5544-141">下面的示例使用 <xref:System.Tuple.Create%2A> 方法实例化2元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-141">The following example uses the <xref:System.Tuple.Create%2A> method to instantiate a 2-tuple.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs" interactive="try-dotnet-method" id="Snippet3":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb" id="Snippet3":::
 
 <span data-ttu-id="d5544-142">此代码等效于以下对 <xref:System.Tuple%602.%23ctor%2A> 类构造函数的调用。</span><span class="sxs-lookup"><span data-stu-id="d5544-142">This code is equivalent to the following call to the <xref:System.Tuple%602.%23ctor%2A> class constructor.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs" interactive="try-dotnet-method" id="Snippet4":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb" id="Snippet4":::

 ]]></format>
        </remarks>
        <altmember cref="T:System.Tuple`2" />
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3&gt; Create&lt;T1,T2,T3&gt; (T1 item1, T2 item2, T3 item3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`3&lt;!!T1, !!T2, !!T3&gt; Create&lt;T1, T2, T3&gt;(!!T1 item1, !!T2 item2, !!T3 item3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple.Create``3(``0,``1,``2)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3) (item1 As T1, item2 As T2, item3 As T3) As Tuple(Of T1, T2, T3)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA; static Tuple&lt;T1, T2, T3&gt; ^ Create(T1 item1, T2 item2, T3 item3);" />
      <MemberSignature Language="F#" Value="static member Create : 'T1 * 'T2 * 'T3 -&gt; 'T1 * 'T2 * 'T3" Usage="System.Tuple.Create (item1, item2, item3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="d5544-143">此元组的第一个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-143">The type of the first component of the tuple.</span></span></typeparam>
        <typeparam name="T2"><span data-ttu-id="d5544-144">元组的第二个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-144">The type of the second component of the tuple.</span></span></typeparam>
        <typeparam name="T3"><span data-ttu-id="d5544-145">元组的第三个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-145">The type of the third component of the tuple.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="d5544-146">此元组的第一个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-146">The value of the first component of the tuple.</span></span></param>
        <param name="item2"><span data-ttu-id="d5544-147">此元组的第二个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-147">The value of the second component of the tuple.</span></span></param>
        <param name="item3"><span data-ttu-id="d5544-148">此元组的第三个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-148">The value of the third component of the tuple.</span></span></param>
        <summary><span data-ttu-id="d5544-149">创建新的 3 元组，即三元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-149">Creates a new 3-tuple, or triple.</span></span></summary>
        <returns><span data-ttu-id="d5544-150">值为 (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />) 的 3 元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-150">A 3-tuple whose value is (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5544-151"><xref:System.Tuple.Create%2A> 是一个帮助器方法，你可以调用它来实例化3元组对象，而无需显式指定其组件的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-151"><xref:System.Tuple.Create%2A> is a helper method that you can call to instantiate a 3-tuple object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="d5544-152">下面的示例使用 <xref:System.Tuple.Create%2A> 方法实例化一个3元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-152">The following example uses the <xref:System.Tuple.Create%2A> method to instantiate a 3-tuple.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs" interactive="try-dotnet-method" id="Snippet5":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb" id="Snippet5":::
  
 <span data-ttu-id="d5544-153">此代码等效于以下对 <xref:System.Tuple%603.%23ctor%2A?displayProperty=nameWithType> 类构造函数的调用。</span><span class="sxs-lookup"><span data-stu-id="d5544-153">This code is equivalent to the following call to the <xref:System.Tuple%603.%23ctor%2A?displayProperty=nameWithType> class constructor.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs" interactive="try-dotnet-method" id="Snippet6":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb" id="Snippet6":::
 
 ]]></format>
        </remarks>
        <altmember cref="T:System.Tuple`3" />
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4&gt; Create&lt;T1,T2,T3,T4&gt; (T1 item1, T2 item2, T3 item3, T4 item4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`4&lt;!!T1, !!T2, !!T3, !!T4&gt; Create&lt;T1, T2, T3, T4&gt;(!!T1 item1, !!T2 item2, !!T3 item3, !!T4 item4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple.Create``4(``0,``1,``2,``3)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4) (item1 As T1, item2 As T2, item3 As T3, item4 As T4) As Tuple(Of T1, T2, T3, T4)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4&gt;&#xA; static Tuple&lt;T1, T2, T3, T4&gt; ^ Create(T1 item1, T2 item2, T3 item3, T4 item4);" />
      <MemberSignature Language="F#" Value="static member Create : 'T1 * 'T2 * 'T3 * 'T4 -&gt; 'T1 * 'T2 * 'T3 * 'T4" Usage="System.Tuple.Create (item1, item2, item3, item4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="d5544-154">此元组的第一个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-154">The type of the first component of the tuple.</span></span></typeparam>
        <typeparam name="T2"><span data-ttu-id="d5544-155">元组的第二个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-155">The type of the second component of the tuple.</span></span></typeparam>
        <typeparam name="T3"><span data-ttu-id="d5544-156">元组的第三个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-156">The type of the third component of the tuple.</span></span></typeparam>
        <typeparam name="T4"><span data-ttu-id="d5544-157">此元组的第四个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-157">The type of the fourth component of the tuple.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="d5544-158">此元组的第一个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-158">The value of the first component of the tuple.</span></span></param>
        <param name="item2"><span data-ttu-id="d5544-159">此元组的第二个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-159">The value of the second component of the tuple.</span></span></param>
        <param name="item3"><span data-ttu-id="d5544-160">此元组的第三个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-160">The value of the third component of the tuple.</span></span></param>
        <param name="item4"><span data-ttu-id="d5544-161">此元组的第四个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-161">The value of the fourth component of the tuple.</span></span></param>
        <summary><span data-ttu-id="d5544-162">创建新的 4 元组，即四元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-162">Creates a new 4-tuple, or quadruple.</span></span></summary>
        <returns><span data-ttu-id="d5544-163">值为 (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />) 的 4 元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-163">A 4-tuple whose value is (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5544-164"><xref:System.Tuple.Create%2A> 是一个帮助器方法，你可以调用它来实例化4元组对象，而无需显式指定其组件的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-164"><xref:System.Tuple.Create%2A> is a helper method that you can call to instantiate a 4-tuple object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="d5544-165">下面的示例使用 <xref:System.Tuple.Create%2A> 方法实例化4元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-165">The following example uses the <xref:System.Tuple.Create%2A> method to instantiate a 4-tuple.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs" interactive="try-dotnet-method" id="Snippet7":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb" id="Snippet7":::
 
 <span data-ttu-id="d5544-166">此代码等效于以下对 <xref:System.Tuple%604.%23ctor%2A?displayProperty=nameWithType> 类构造函数的调用。</span><span class="sxs-lookup"><span data-stu-id="d5544-166">This code is equivalent to the following call to the <xref:System.Tuple%604.%23ctor%2A?displayProperty=nameWithType> class constructor.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs" interactive="try-dotnet-method" id="Snippet8":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb" id="Snippet8":::
 
 ]]></format>
        </remarks>
        <altmember cref="T:System.Tuple`4" />
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5&gt; Create&lt;T1,T2,T3,T4,T5&gt; (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; Create&lt;T1, T2, T3, T4, T5&gt;(!!T1 item1, !!T2 item2, !!T3 item3, !!T4 item4, !!T5 item5) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5) (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5) As Tuple(Of T1, T2, T3, T4, T5)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5&gt;&#xA; static Tuple&lt;T1, T2, T3, T4, T5&gt; ^ Create(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5);" />
      <MemberSignature Language="F#" Value="static member Create : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5" Usage="System.Tuple.Create (item1, item2, item3, item4, item5)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="d5544-167">此元组的第一个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-167">The type of the first component of the tuple.</span></span></typeparam>
        <typeparam name="T2"><span data-ttu-id="d5544-168">元组的第二个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-168">The type of the second component of the tuple.</span></span></typeparam>
        <typeparam name="T3"><span data-ttu-id="d5544-169">元组的第三个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-169">The type of the third component of the tuple.</span></span></typeparam>
        <typeparam name="T4"><span data-ttu-id="d5544-170">此元组的第四个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-170">The type of the fourth component of the tuple.</span></span></typeparam>
        <typeparam name="T5"><span data-ttu-id="d5544-171">此元组的第五个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-171">The type of the fifth component of the tuple.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="d5544-172">此元组的第一个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-172">The value of the first component of the tuple.</span></span></param>
        <param name="item2"><span data-ttu-id="d5544-173">此元组的第二个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-173">The value of the second component of the tuple.</span></span></param>
        <param name="item3"><span data-ttu-id="d5544-174">此元组的第三个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-174">The value of the third component of the tuple.</span></span></param>
        <param name="item4"><span data-ttu-id="d5544-175">此元组的第四个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-175">The value of the fourth component of the tuple.</span></span></param>
        <param name="item5"><span data-ttu-id="d5544-176">此元组的第五个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-176">The value of the fifth component of the tuple.</span></span></param>
        <summary><span data-ttu-id="d5544-177">创建新的 5 元组，即五元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-177">Creates a new 5-tuple, or quintuple.</span></span></summary>
        <returns><span data-ttu-id="d5544-178">值为 (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />) 的 5 元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-178">A 5-tuple whose value is (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5544-179"><xref:System.Tuple.Create%2A> 是一个帮助器方法，你可以调用它来实例化5元组对象，而无需显式指定其组件的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-179"><xref:System.Tuple.Create%2A> is a helper method that you can call to instantiate a 5-tuple object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="d5544-180">下面的示例使用 <xref:System.Tuple.Create%2A> 方法实例化5元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-180">The following example uses the <xref:System.Tuple.Create%2A> method to instantiate a 5-tuple.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs" interactive="try-dotnet-method" id="Snippet9":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb" id="Snippet9":::
 
 <span data-ttu-id="d5544-181">此代码等效于以下对 <xref:System.Tuple%605.%23ctor%2A> 类构造函数的调用。</span><span class="sxs-lookup"><span data-stu-id="d5544-181">This code is equivalent to the following call to the <xref:System.Tuple%605.%23ctor%2A> class constructor.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs" interactive="try-dotnet-method" id="Snippet10":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb" id="Snippet10":::
 
 ]]></format>
        </remarks>
        <altmember cref="T:System.Tuple`5" />
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6&gt; Create&lt;T1,T2,T3,T4,T5,T6&gt; (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; Create&lt;T1, T2, T3, T4, T5, T6&gt;(!!T1 item1, !!T2 item2, !!T3 item3, !!T4 item4, !!T5 item5, !!T6 item6) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6) (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6) As Tuple(Of T1, T2, T3, T4, T5, T6)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6&gt; ^ Create(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6);" />
      <MemberSignature Language="F#" Value="static member Create : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6" Usage="System.Tuple.Create (item1, item2, item3, item4, item5, item6)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
        <Parameter Name="item6" Type="T6" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="d5544-182">此元组的第一个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-182">The type of the first component of the tuple.</span></span></typeparam>
        <typeparam name="T2"><span data-ttu-id="d5544-183">元组的第二个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-183">The type of the second component of the tuple.</span></span></typeparam>
        <typeparam name="T3"><span data-ttu-id="d5544-184">元组的第三个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-184">The type of the third component of the tuple.</span></span></typeparam>
        <typeparam name="T4"><span data-ttu-id="d5544-185">此元组的第四个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-185">The type of the fourth component of the tuple.</span></span></typeparam>
        <typeparam name="T5"><span data-ttu-id="d5544-186">此元组的第五个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-186">The type of the fifth component of the tuple.</span></span></typeparam>
        <typeparam name="T6"><span data-ttu-id="d5544-187">此元组的第六个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-187">The type of the sixth component of the tuple.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="d5544-188">此元组的第一个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-188">The value of the first component of the tuple.</span></span></param>
        <param name="item2"><span data-ttu-id="d5544-189">此元组的第二个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-189">The value of the second component of the tuple.</span></span></param>
        <param name="item3"><span data-ttu-id="d5544-190">此元组的第三个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-190">The value of the third component of the tuple.</span></span></param>
        <param name="item4"><span data-ttu-id="d5544-191">此元组的第四个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-191">The value of the fourth component of the tuple.</span></span></param>
        <param name="item5"><span data-ttu-id="d5544-192">此元组的第五个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-192">The value of the fifth component of the tuple.</span></span></param>
        <param name="item6"><span data-ttu-id="d5544-193">此元组的第六个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-193">The value of the sixth component of the tuple.</span></span></param>
        <summary><span data-ttu-id="d5544-194">创建新的 6 元组，即六元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-194">Creates a new 6-tuple, or sextuple.</span></span></summary>
        <returns><span data-ttu-id="d5544-195">值为 (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />) 的 6 元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-195">A 6-tuple whose value is (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5544-196"><xref:System.Tuple.Create%2A> 是一个帮助器方法，你可以调用它来实例化6元组对象，而无需显式指定其组件的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-196"><xref:System.Tuple.Create%2A> is a helper method that you can call to instantiate a 6-tuple object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="d5544-197">下面的示例使用 <xref:System.Tuple.Create%2A> 方法实例化6元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-197">The following example uses the <xref:System.Tuple.Create%2A> method to instantiate a 6-tuple.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs" interactive="try-dotnet-method" id="Snippet11":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb" id="Snippet11":::
 
 <span data-ttu-id="d5544-198">此代码等效于以下对 <xref:System.Tuple%606.%23ctor%2A> 类构造函数的调用。</span><span class="sxs-lookup"><span data-stu-id="d5544-198">This code is equivalent to the following call to the <xref:System.Tuple%606.%23ctor%2A> class constructor.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs" interactive="try-dotnet-method" id="Snippet12":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb" id="Snippet12":::
 
 ]]></format>
        </remarks>
        <altmember cref="T:System.Tuple`6" />
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt; Create&lt;T1,T2,T3,T4,T5,T6,T7&gt; (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; Create&lt;T1, T2, T3, T4, T5, T6, T7&gt;(!!T1 item1, !!T2 item2, !!T3 item3, !!T4 item4, !!T5 item5, !!T6 item6, !!T7 item7) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7) (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6, item7 As T7) As Tuple(Of T1, T2, T3, T4, T5, T6, T7)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7&gt;&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt; ^ Create(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7);" />
      <MemberSignature Language="F#" Value="static member Create : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7" Usage="System.Tuple.Create (item1, item2, item3, item4, item5, item6, item7)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
        <Parameter Name="item6" Type="T6" />
        <Parameter Name="item7" Type="T7" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="d5544-199">此元组的第一个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-199">The type of the first component of the tuple.</span></span></typeparam>
        <typeparam name="T2"><span data-ttu-id="d5544-200">元组的第二个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-200">The type of the second component of the tuple.</span></span></typeparam>
        <typeparam name="T3"><span data-ttu-id="d5544-201">元组的第三个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-201">The type of the third component of the tuple.</span></span></typeparam>
        <typeparam name="T4"><span data-ttu-id="d5544-202">此元组的第四个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-202">The type of the fourth component of the tuple.</span></span></typeparam>
        <typeparam name="T5"><span data-ttu-id="d5544-203">此元组的第五个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-203">The type of the fifth component of the tuple.</span></span></typeparam>
        <typeparam name="T6"><span data-ttu-id="d5544-204">此元组的第六个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-204">The type of the sixth component of the tuple.</span></span></typeparam>
        <typeparam name="T7"><span data-ttu-id="d5544-205">元组的第七个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-205">The type of the seventh component of the tuple.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="d5544-206">此元组的第一个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-206">The value of the first component of the tuple.</span></span></param>
        <param name="item2"><span data-ttu-id="d5544-207">此元组的第二个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-207">The value of the second component of the tuple.</span></span></param>
        <param name="item3"><span data-ttu-id="d5544-208">此元组的第三个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-208">The value of the third component of the tuple.</span></span></param>
        <param name="item4"><span data-ttu-id="d5544-209">此元组的第四个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-209">The value of the fourth component of the tuple.</span></span></param>
        <param name="item5"><span data-ttu-id="d5544-210">此元组的第五个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-210">The value of the fifth component of the tuple.</span></span></param>
        <param name="item6"><span data-ttu-id="d5544-211">此元组的第六个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-211">The value of the sixth component of the tuple.</span></span></param>
        <param name="item7"><span data-ttu-id="d5544-212">元组的第七个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-212">The value of the seventh component of the tuple.</span></span></param>
        <summary><span data-ttu-id="d5544-213">创建新的 7 元组，即七元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-213">Creates a new 7-tuple, or septuple.</span></span></summary>
        <returns><span data-ttu-id="d5544-214">值为 (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />, <paramref name="item7" />) 的 7 元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-214">A 7-tuple whose value is (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />, <paramref name="item7" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5544-215"><xref:System.Tuple.Create%2A> 是一个帮助器方法，你可以调用它来实例化7元组对象，而无需显式指定其组件的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-215"><xref:System.Tuple.Create%2A> is a helper method that you can call to instantiate a 7-tuple object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="d5544-216">下面的示例使用 <xref:System.Tuple.Create%2A> 方法实例化7元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-216">The following example uses the <xref:System.Tuple.Create%2A> method to instantiate a 7-tuple.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs" interactive="try-dotnet-method" id="Snippet13":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb" id="Snippet13":::
 
 <span data-ttu-id="d5544-217">此代码等效于以下对 <xref:System.Tuple%607.%23ctor%2A> 类构造函数的调用。</span><span class="sxs-lookup"><span data-stu-id="d5544-217">This code is equivalent to the following call to the <xref:System.Tuple%607.%23ctor%2A> class constructor.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs" interactive="try-dotnet-method" id="Snippet14":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb" id="Snippet14":::
 
 ]]></format>
        </remarks>
        <altmember cref="T:System.Tuple`7" />
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public static Tuple&lt;T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8&gt;&gt; Create&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`1&lt;!!T8&gt;&gt; Create&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(!!T1 item1, !!T2 item2, !!T3 item3, !!T4 item4, !!T5 item5, !!T6 item6, !!T7 item7, !!T8 item8) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T1, T2, T3, T4, T5, T6, T7, T8) (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6, item7 As T7, item8 As T8) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8&gt;&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8&gt; ^&gt; ^ Create(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8);" />
      <MemberSignature Language="F#" Value="static member Create : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8" Usage="System.Tuple.Create (item1, item2, item3, item4, item5, item6, item7, item8)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
        <Parameter Name="item6" Type="T6" />
        <Parameter Name="item7" Type="T7" />
        <Parameter Name="item8" Type="T8" />
      </Parameters>
      <Docs>
        <typeparam name="T1"><span data-ttu-id="d5544-218">此元组的第一个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-218">The type of the first component of the tuple.</span></span></typeparam>
        <typeparam name="T2"><span data-ttu-id="d5544-219">元组的第二个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-219">The type of the second component of the tuple.</span></span></typeparam>
        <typeparam name="T3"><span data-ttu-id="d5544-220">元组的第三个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-220">The type of the third component of the tuple.</span></span></typeparam>
        <typeparam name="T4"><span data-ttu-id="d5544-221">此元组的第四个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-221">The type of the fourth component of the tuple.</span></span></typeparam>
        <typeparam name="T5"><span data-ttu-id="d5544-222">此元组的第五个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-222">The type of the fifth component of the tuple.</span></span></typeparam>
        <typeparam name="T6"><span data-ttu-id="d5544-223">此元组的第六个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-223">The type of the sixth component of the tuple.</span></span></typeparam>
        <typeparam name="T7"><span data-ttu-id="d5544-224">元组的第七个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-224">The type of the seventh component of the tuple.</span></span></typeparam>
        <typeparam name="T8"><span data-ttu-id="d5544-225">元组的第八个分量的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-225">The type of the eighth component of the tuple.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="d5544-226">此元组的第一个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-226">The value of the first component of the tuple.</span></span></param>
        <param name="item2"><span data-ttu-id="d5544-227">此元组的第二个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-227">The value of the second component of the tuple.</span></span></param>
        <param name="item3"><span data-ttu-id="d5544-228">此元组的第三个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-228">The value of the third component of the tuple.</span></span></param>
        <param name="item4"><span data-ttu-id="d5544-229">此元组的第四个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-229">The value of the fourth component of the tuple.</span></span></param>
        <param name="item5"><span data-ttu-id="d5544-230">此元组的第五个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-230">The value of the fifth component of the tuple.</span></span></param>
        <param name="item6"><span data-ttu-id="d5544-231">此元组的第六个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-231">The value of the sixth component of the tuple.</span></span></param>
        <param name="item7"><span data-ttu-id="d5544-232">元组的第七个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-232">The value of the seventh component of the tuple.</span></span></param>
        <param name="item8"><span data-ttu-id="d5544-233">元组的第八个分量的值。</span><span class="sxs-lookup"><span data-stu-id="d5544-233">The value of the eighth component of the tuple.</span></span></param>
        <summary><span data-ttu-id="d5544-234">创建新的 8 元组，即八元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-234">Creates a new 8-tuple, or octuple.</span></span></summary>
        <returns><span data-ttu-id="d5544-235">值为 (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />, <paramref name="item7" />, <paramref name="item8" />) 的 8 元祖（八元组）。</span><span class="sxs-lookup"><span data-stu-id="d5544-235">An 8-tuple (octuple) whose value is (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />, <paramref name="item7" />, <paramref name="item8" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5544-236"><xref:System.Tuple.Create%2A> 是一个帮助器方法，你可以调用它来实例化8元组，而无需显式指定其组件的类型。</span><span class="sxs-lookup"><span data-stu-id="d5544-236"><xref:System.Tuple.Create%2A> is a helper method that you can call to instantiate an 8-tuple without having to explicitly specify the types of its components.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5544-237">必须调用  <xref:System.Tuple%608.%23ctor%2A?displayProperty=nameWithType> 构造函数来创建具有九个或更多组件的元组，除非你的语言为此目的提供了特殊语法。</span><span class="sxs-lookup"><span data-stu-id="d5544-237">You must call the  <xref:System.Tuple%608.%23ctor%2A?displayProperty=nameWithType> constructor to create a tuple with nine or more components unless your language provides a special syntax for this purpose.</span></span> <span data-ttu-id="d5544-238">`Shared`类的 Visual Basic) 方法中的静态 (<xref:System.Tuple> 不能用于创建包含9个或更多组件的元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-238">The static (`Shared` in Visual Basic) methods of the <xref:System.Tuple> class cannot be used to create a tuple with nine or more components.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5544-239">下面的示例创建一个8元组，其组件为小于20的质数。</span><span class="sxs-lookup"><span data-stu-id="d5544-239">The following example creates an 8-tuple whose components are prime numbers that are less than 20.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs" interactive="try-dotnet-method" id="Snippet17":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb" id="Snippet17":::

 <span data-ttu-id="d5544-240">这等效于下面的示例，该示例使用 <xref:System.Tuple%608> 类构造函数而不是 <xref:System.Tuple.Create%2A> 工厂创建方法。</span><span class="sxs-lookup"><span data-stu-id="d5544-240">This is equivalent to the following example, which uses the <xref:System.Tuple%608> class constructor instead of the <xref:System.Tuple.Create%2A> factory creation method.</span></span> <span data-ttu-id="d5544-241">请注意， <xref:System.Tuple%608> 以这种方式实例化对象涉及更多代码，因为必须将嵌套的 <xref:System.Tuple%601> 对象声明为 <xref:System.Tuple%608> 对象的第8个组件，才能生成八元组。</span><span class="sxs-lookup"><span data-stu-id="d5544-241">Note that instantiating a <xref:System.Tuple%608> object in this way involves considerably more code, because you must declare a nested <xref:System.Tuple%601> object as the <xref:System.Tuple%608> object's eighth component to produce an octuple.</span></span>  
  
 [!code-csharp[System.Tuple.Create#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/ctor8.cs#20)]
 [!code-vb[System.Tuple.Create#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/ctor8.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Tuple`8" />
      </Docs>
    </Member>
  </Members>
</Type>
