<Type Name="ParamArrayAttribute" FullName="System.ParamArrayAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="63617c5d9ba790fcd1825db506abcae47db42b9d" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100282124" /></Metadata><TypeSignature Language="C#" Value="public sealed class ParamArrayAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ParamArrayAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ParamArrayAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParamArrayAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParamArrayAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ParamArrayAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b437a-101">指示方法在其调用中将允许数目可变的自变量。</span><span class="sxs-lookup"><span data-stu-id="b437a-101">Indicates that a method will allow a variable number of arguments in its invocation.</span></span> <span data-ttu-id="b437a-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="b437a-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b437a-103"><xref:System.ParamArrayAttribute>指示方法参数是参数数组。</span><span class="sxs-lookup"><span data-stu-id="b437a-103">The <xref:System.ParamArrayAttribute> indicates that a method parameter is a parameter array.</span></span> <span data-ttu-id="b437a-104">参数数组允许指定数量未知的参数。</span><span class="sxs-lookup"><span data-stu-id="b437a-104">A parameter array allows the specification of an unknown number of arguments.</span></span> <span data-ttu-id="b437a-105">参数数组必须是形参表中的最后一个形参，并且必须是一维数组。</span><span class="sxs-lookup"><span data-stu-id="b437a-105">A parameter array must be the last parameter in a formal parameter list, and it must be a single-dimension array.</span></span> <span data-ttu-id="b437a-106">调用方法时，参数数组允许使用以下两种方法之一来指定方法的参数：</span><span class="sxs-lookup"><span data-stu-id="b437a-106">When the method is called, a parameter array permits arguments to a method to be specified in either of two ways:</span></span>  
  
-   <span data-ttu-id="b437a-107">作为可隐式转换为参数数组类型的类型的单个表达式。</span><span class="sxs-lookup"><span data-stu-id="b437a-107">As a single expression of a type that is implicitly convertible to the parameter array type.</span></span> <span data-ttu-id="b437a-108">参数数组作为值参数。</span><span class="sxs-lookup"><span data-stu-id="b437a-108">The parameter array functions as a value parameter.</span></span>  
  
-   <span data-ttu-id="b437a-109">作为零个或多个参数，其中每个参数都是可隐式转换为参数数组元素类型的类型的表达式。</span><span class="sxs-lookup"><span data-stu-id="b437a-109">As zero or more arguments, where each argument is an expression of a type that is implicitly convertible to the type of the parameter array element.</span></span>  
  
 <span data-ttu-id="b437a-110">下一节中的示例说明了这两种调用约定。</span><span class="sxs-lookup"><span data-stu-id="b437a-110">The example in the next section illustrates both calling conventions.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b437a-111">通常， <xref:System.ParamArrayAttribute> 不会直接在代码中使用。</span><span class="sxs-lookup"><span data-stu-id="b437a-111">Typically, the <xref:System.ParamArrayAttribute> is not used directly in code.</span></span> <span data-ttu-id="b437a-112">相反，各语言关键字（如 `ParamArray` Visual Basic 和 c # 中的）用作 `params` 类的包装 <xref:System.ParamArrayAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="b437a-112">Instead, individual language keywords, such as `ParamArray` in Visual Basic and `params` in C#, are used as wrappers for the <xref:System.ParamArrayAttribute> class.</span></span> <span data-ttu-id="b437a-113">某些语言（如 c #）甚至可能要求使用 language 关键字，禁止使用 <xref:System.ParamArrayAttribute> 。</span><span class="sxs-lookup"><span data-stu-id="b437a-113">Some languages, such as C#, may even require the use of the language keyword and prohibit the use of <xref:System.ParamArrayAttribute>.</span></span>  
  
 <span data-ttu-id="b437a-114">在重载解析过程中，当支持参数数组的编译器遇到不存在但其参数比包含参数数组的重载少一个的方法重载时，它们会将方法替换为包含参数数组的重载。</span><span class="sxs-lookup"><span data-stu-id="b437a-114">During overload resolution, when compilers that support parameter arrays encounter a method overload that does not exist but has one fewer parameter than an overload that includes a parameter array, they will replace the method with the overload that includes the parameter array.</span></span> <span data-ttu-id="b437a-115">例如，对 `String.Split()` 类中不存在的实例方法的调用 (<xref:System.String>) 被解析为对方法的调用 <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="b437a-115">For example, a call to the `String.Split()` instance method (which does not exist in the <xref:System.String> class) is resolved as a call to the <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b437a-116">编译器还会将所需类型的空数组传递给方法。</span><span class="sxs-lookup"><span data-stu-id="b437a-116">The compiler will also pass an empty array of the required type to the method.</span></span> <span data-ttu-id="b437a-117">这意味着，在处理参数数组中的元素时，该方法必须始终准备好处理长度为零的数组。</span><span class="sxs-lookup"><span data-stu-id="b437a-117">This means that the method must always be prepared to handle an array whose length is zero when it processes the elements in the parameter array.</span></span> <span data-ttu-id="b437a-118">说明如示例所示。</span><span class="sxs-lookup"><span data-stu-id="b437a-118">The example provides an illustration.</span></span>  
  
 <span data-ttu-id="b437a-119">有关使用特性的详细信息，请参阅 [特性](/dotnet/standard/attributes/)。</span><span class="sxs-lookup"><span data-stu-id="b437a-119">For more information about using attributes, see [Attributes](/dotnet/standard/attributes/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b437a-120">下面的示例定义一个 `Temperature` 包含方法的类 `Display` ，该方法旨在显示一个或多个格式化的温度值。</span><span class="sxs-lookup"><span data-stu-id="b437a-120">The following example defines a `Temperature` class that includes a `Display` method, which is intended to display one or more formatted temperature values.</span></span> <span data-ttu-id="b437a-121">方法具有一个参数，该参数 `formats` 定义为参数数组。</span><span class="sxs-lookup"><span data-stu-id="b437a-121">The method has a single parameter, `formats`, which is defined as a parameter array.</span></span>  
  
 [!code-csharp[System.ParamArrayAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ParamArrayAttribute/cs/Example.cs#1)]
 [!code-vb[System.ParamArrayAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ParamArrayAttribute/vb/Example.vb#1)]  
  
 <span data-ttu-id="b437a-122">下面的示例演示对方法的三个不同调用 `Temperature.Display` 。</span><span class="sxs-lookup"><span data-stu-id="b437a-122">The following example illustrates three different calls to the `Temperature.Display` method.</span></span> <span data-ttu-id="b437a-123">在第一种方法中，向方法传递格式字符串数组。</span><span class="sxs-lookup"><span data-stu-id="b437a-123">In the first, the method is passed an array of format strings.</span></span> <span data-ttu-id="b437a-124">在第二个中，方法将四个单独的格式字符串作为参数传递。</span><span class="sxs-lookup"><span data-stu-id="b437a-124">In the second, the method is passed four individual format strings as arguments.</span></span> <span data-ttu-id="b437a-125">在第三种情况下，不带参数调用方法。</span><span class="sxs-lookup"><span data-stu-id="b437a-125">In the third, the method is called with no arguments.</span></span> <span data-ttu-id="b437a-126">如示例中的输出所示，Visual Basic 和 c # 编译器将此转换为对方法的调用， `Display` 其中包含一个空字符串数组。</span><span class="sxs-lookup"><span data-stu-id="b437a-126">As the output from the example illustrates, the Visual Basic and C# compilers translate this into a call to the `Display` method with an empty string array.</span></span>  
  
 [!code-csharp[System.ParamArrayAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ParamArrayAttribute/cs/Example.cs#2)]
 [!code-vb[System.ParamArrayAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ParamArrayAttribute/vb/Example.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <related type="Article" href="/dotnet/standard/attributes/"><span data-ttu-id="b437a-127">利用特性扩展元数据</span><span class="sxs-lookup"><span data-stu-id="b437a-127">Extending Metadata Using Attributes</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParamArrayAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ParamArrayAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParamArrayAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b437a-128">使用默认属性初始化 <see cref="T:System.ParamArrayAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b437a-128">Initializes a new instance of the <see cref="T:System.ParamArrayAttribute" /> class with default properties.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
