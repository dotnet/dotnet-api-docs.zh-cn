<Type Name="ICloneable" FullName="System.ICloneable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="574f59e0cd9ee650ecb57a8012d7a98af4c17022" /><Meta Name="ms.sourcegitcommit" Value="a8ca33e500a87229bed50d12e09b1347df519648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/09/2020" /><Meta Name="ms.locfileid" Value="91906343" /></Metadata><TypeSignature Language="C#" Value="public interface ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.ICloneable" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICloneable" />
  <TypeSignature Language="F#" Value="type ICloneable = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="874bf-101">支持克隆，即用与现有实例相同的值创建类的新实例。</span><span class="sxs-lookup"><span data-stu-id="874bf-101">Supports cloning, which creates a new instance of a class with the same value as an existing instance.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874bf-102"><xref:System.ICloneable>接口使您能够提供创建现有对象的副本的自定义实现。</span><span class="sxs-lookup"><span data-stu-id="874bf-102">The <xref:System.ICloneable> interface enables you to provide a customized implementation that creates a copy of an existing object.</span></span> <span data-ttu-id="874bf-103"><xref:System.ICloneable>接口包含一个成员，即 <xref:System.ICloneable.Clone%2A> 方法，该方法旨在提供超出提供的克隆支持 <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="874bf-103">The <xref:System.ICloneable> interface contains one member, the <xref:System.ICloneable.Clone%2A> method, which is intended to provide cloning support beyond that supplied by <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType>.</span></span>  <span data-ttu-id="874bf-104">有关克隆、深层副本和示例的详细信息，请参阅 <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="874bf-104">For more information about cloning, deep versus shallow copies, and examples, see the <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="874bf-105"><see cref="T:System.ICloneable" />接口只要求实现 <see cref="M:System.ICloneable.Clone" /> 方法返回当前对象实例的副本。</span><span class="sxs-lookup"><span data-stu-id="874bf-105">The <see cref="T:System.ICloneable" /> interface simply requires that your implementation of the <see cref="M:System.ICloneable.Clone" /> method return a copy of the current object instance.</span></span> <span data-ttu-id="874bf-106">它不指定克隆操作是执行深层复制、浅表副本还是在两者之间执行操作。</span><span class="sxs-lookup"><span data-stu-id="874bf-106">It does not specify whether the cloning operation performs a deep copy, a shallow copy, or something in between.</span></span> <span data-ttu-id="874bf-107">它也不需要将原始实例的所有属性值都复制到新实例。</span><span class="sxs-lookup"><span data-stu-id="874bf-107">Nor does it require all property values of the original instance to be copied to the new instance.</span></span> <span data-ttu-id="874bf-108">例如，方法对 <see cref="M:System.Globalization.NumberFormatInfo.Clone" /> 除属性之外的所有属性执行浅表复制 <see cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" /> ; 它始终将此属性值设置为 <see langword="false" /> 克隆的对象中的。</span><span class="sxs-lookup"><span data-stu-id="874bf-108">For example, the <see cref="M:System.Globalization.NumberFormatInfo.Clone" /> method performs a shallow copy of all properties except the <see cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" /> property; it always sets this property value to <see langword="false" /> in the cloned object.</span></span> <span data-ttu-id="874bf-109">因为的调用方 <see cref="M:System.ICloneable.Clone" /> 不能依赖于执行可预测的克隆操作的方法，所以我们建议 <see cref="T:System.ICloneable" /> 不要在公共 api 中实现。</span><span class="sxs-lookup"><span data-stu-id="874bf-109">Because callers of <see cref="M:System.ICloneable.Clone" /> cannot depend on the method performing a predictable cloning operation, we recommend that <see cref="T:System.ICloneable" /> not be implemented in public APIs.</span></span></para></block>
    <altmember cref="M:System.Object.MemberwiseClone" />
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ICloneable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj" Usage="iCloneable.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="874bf-110">创建作为当前实例副本的新对象。</span><span class="sxs-lookup"><span data-stu-id="874bf-110">Creates a new object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="874bf-111">作为此实例副本的新对象。</span><span class="sxs-lookup"><span data-stu-id="874bf-111">A new object that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="874bf-112">生成的克隆必须与原始实例具有相同的类型，或与其兼容。</span><span class="sxs-lookup"><span data-stu-id="874bf-112">The resulting clone must be of the same type as, or compatible with, the original instance.</span></span>  
  
 <span data-ttu-id="874bf-113">的实现 <xref:System.ICloneable.Clone%2A> 可以执行深层复制或浅表复制。</span><span class="sxs-lookup"><span data-stu-id="874bf-113">An implementation of <xref:System.ICloneable.Clone%2A> can perform either a deep copy or a shallow copy.</span></span> <span data-ttu-id="874bf-114">在深层复制中，所有对象都是重复的;在浅表复制中，只复制顶级对象，而较低级别包含引用。</span><span class="sxs-lookup"><span data-stu-id="874bf-114">In a deep copy, all objects are duplicated; in a shallow copy, only the top-level objects are duplicated and the lower levels contain references.</span></span> <span data-ttu-id="874bf-115">因为的调用方 <xref:System.ICloneable.Clone%2A> 不能依赖于执行可预测的克隆操作的方法，所以我们建议 <xref:System.ICloneable> 不要在公共 api 中实现。</span><span class="sxs-lookup"><span data-stu-id="874bf-115">Because callers of <xref:System.ICloneable.Clone%2A> cannot depend on the method performing a predictable cloning operation, we recommend that <xref:System.ICloneable> not be implemented in public APIs.</span></span>  
  
 <span data-ttu-id="874bf-116"><xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType>有关克隆的详细信息，请参阅深度与浅表副本和示例。</span><span class="sxs-lookup"><span data-stu-id="874bf-116">See <xref:System.Object.MemberwiseClone%2A?displayProperty=nameWithType> for more information on cloning, deep versus shallow copies, and examples.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.MemberwiseClone" />
      </Docs>
    </Member>
  </Members>
</Type>
