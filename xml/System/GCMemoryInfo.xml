<Type Name="GCMemoryInfo" FullName="System.GCMemoryInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4610d1abedffad2a0bc672bb77ee055082e85afb" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89685716" /></Metadata><TypeSignature Language="C#" Value="public struct GCMemoryInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit GCMemoryInfo extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.GCMemoryInfo" />
  <TypeSignature Language="VB.NET" Value="Public Structure GCMemoryInfo" />
  <TypeSignature Language="C++ CLI" Value="public value class GCMemoryInfo" />
  <TypeSignature Language="F#" Value="type GCMemoryInfo = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供一组可用于检索垃圾回收信息的 API。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

GC 通过其索引进行标识。 它从1开始，并随每个 GC 增加 (详细说明，请参阅索引 prooperty) 。
如果要求提供不存在的 GC，例如，您称为 GC。GetGCMemoryInfo API 在 GC 之前发生，或者你正在请求 GCKind 的 GC，但没有完全阻止 Gc 发生，你将获得全部0中的信息，包括索引。 因此，您可以使用索引0来检测没有 Gc，或未指定任何类型的 Gc。

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Compacted">
      <MemberSignature Language="C#" Value="public bool Compacted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Compacted" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.Compacted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Compacted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Compacted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Compacted : bool" Usage="System.GCMemoryInfo.Compacted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定这是否为压缩 GC。</summary>
        <value><see langword="true" /> 如果这是压缩 GC，则为; <see langword="false" /> 否则为。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concurrent">
      <MemberSignature Language="C#" Value="public bool Concurrent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Concurrent" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.Concurrent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Concurrent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Concurrent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Concurrent : bool" Usage="System.GCMemoryInfo.Concurrent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定这是否为并发 GC (BGC)。</summary>
        <value><see langword="true" /> 如果这是并发 GC (BGC) ，则为; <see langword="false" /> 否则为。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalizationPendingCount">
      <MemberSignature Language="C#" Value="public long FinalizationPendingCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 FinalizationPendingCount" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.FinalizationPendingCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FinalizationPendingCount As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long FinalizationPendingCount { long get(); };" />
      <MemberSignature Language="F#" Value="member this.FinalizationPendingCount : int64" Usage="System.GCMemoryInfo.FinalizationPendingCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此 GC 观察到的已准备好进行终结的对象数。</summary>
        <value>一个数字，表示此 GC 已准备好进行终结的总对象数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FragmentedBytes">
      <MemberSignature Language="C#" Value="public long FragmentedBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 FragmentedBytes" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.FragmentedBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FragmentedBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long FragmentedBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.FragmentedBytes : int64" Usage="System.GCMemoryInfo.FragmentedBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取上次垃圾回收发生时的总片段数。</summary>
        <value>一个整数，表示上次垃圾回收发生时的碎片总计。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

例如，应用程序包含以下五个对象：

`| OBJ_A |     OBJ_B     | OBJ_C |   OBJ_D   | OBJ_E |`
            
如果 `OBJ_B` 、 `OBJ_C` 和 `OBJ_E` 是垃圾回收的，但堆未压缩，则生成的堆将如下所示：

`| OBJ_A |           F           |   OBJ_D   |`
            
和之间的 `OBJ_A` 内存 `OBJ_D` （标记为 `F` ）被视为的一部分， `FragmentedBytes` 用于分配新的对象。

后面的内存 `OBJ_D` 不被视为的一部分， `FragmentedBytes` 但也将用于分配新的对象。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Generation">
      <MemberSignature Language="C#" Value="public int Generation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Generation" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.Generation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Generation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Generation { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Generation : int" Usage="System.GCMemoryInfo.Generation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此 GC 回收的代系。 回收一代意味着也会回收它前面的所有代。</summary>
        <value>一个数字，表示此 GC 收集的代。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerationInfo">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;GCGenerationInfo&gt; GenerationInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;valuetype System.GCGenerationInfo&gt; GenerationInfo" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.GenerationInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GenerationInfo As ReadOnlySpan(Of GCGenerationInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlySpan&lt;GCGenerationInfo&gt; GenerationInfo { ReadOnlySpan&lt;GCGenerationInfo&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.GenerationInfo : ReadOnlySpan&lt;GCGenerationInfo&gt;" Usage="System.GCMemoryInfo.GenerationInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.GCGenerationInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取所有代的代系信息。</summary>
        <value>一个只读范围，其中包含所有代的生成信息。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeapSizeBytes">
      <MemberSignature Language="C#" Value="public long HeapSizeBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 HeapSizeBytes" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.HeapSizeBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeapSizeBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long HeapSizeBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.HeapSizeBytes : int64" Usage="System.GCMemoryInfo.HeapSizeBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取上次垃圾回收发生时的总堆大小。</summary>
        <value>上次垃圾回收发生时堆的总大小（以字节为单位）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighMemoryLoadThresholdBytes">
      <MemberSignature Language="C#" Value="public long HighMemoryLoadThresholdBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 HighMemoryLoadThresholdBytes" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.HighMemoryLoadThresholdBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HighMemoryLoadThresholdBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long HighMemoryLoadThresholdBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.HighMemoryLoadThresholdBytes : int64" Usage="System.GCMemoryInfo.HighMemoryLoadThresholdBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取上次垃圾回收发生时的高内存负载阈值。</summary>
        <value>上次垃圾回收发生时的高内存负载阈值（以字节为单位）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public long Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Index" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Index { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int64" Usage="System.GCMemoryInfo.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>此 GC 的索引。 GC 索引从 1 开始，在 GC 开始时会增加。
由于此信息是在 GC 结束时更新的，这意味着，获得的 BGC 信息包含的索引可能小于之前完成的前台 GC 的索引。</summary>
        <value>表示此 GC 的索引的数字。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryLoadBytes">
      <MemberSignature Language="C#" Value="public long MemoryLoadBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MemoryLoadBytes" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.MemoryLoadBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryLoadBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MemoryLoadBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.MemoryLoadBytes : int64" Usage="System.GCMemoryInfo.MemoryLoadBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取上次垃圾回收发生时的内存负载。</summary>
        <value>上次垃圾回收发生时的内存负载。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseDurations">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;TimeSpan&gt; PauseDurations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;valuetype System.TimeSpan&gt; PauseDurations" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.PauseDurations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PauseDurations As ReadOnlySpan(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlySpan&lt;TimeSpan&gt; PauseDurations { ReadOnlySpan&lt;TimeSpan&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.PauseDurations : ReadOnlySpan&lt;TimeSpan&gt;" Usage="System.GCMemoryInfo.PauseDurations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取暂停持续时间。 对于阻止 GC，只有 1 次暂停；对于 BGC，有 2 次。</summary>
        <value>表示暂停持续时间的时间跨度。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseTimePercentage">
      <MemberSignature Language="C#" Value="public double PauseTimePercentage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PauseTimePercentage" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.PauseTimePercentage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PauseTimePercentage As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PauseTimePercentage { double get(); };" />
      <MemberSignature Language="F#" Value="member this.PauseTimePercentage : double" Usage="System.GCMemoryInfo.PauseTimePercentage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取到目前为止暂停时间在 GC 中的百分比。</summary>
        <value>表示暂停时间百分比的数字。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

如果为1.2%，则此数字为1.2。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PinnedObjectsCount">
      <MemberSignature Language="C#" Value="public long PinnedObjectsCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PinnedObjectsCount" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.PinnedObjectsCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PinnedObjectsCount As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long PinnedObjectsCount { long get(); };" />
      <MemberSignature Language="F#" Value="member this.PinnedObjectsCount : int64" Usage="System.GCMemoryInfo.PinnedObjectsCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此 GC 观察到的固定对象的数目。</summary>
        <value>一个数字，表示此 GC 观察到的固定对象总数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PromotedBytes">
      <MemberSignature Language="C#" Value="public long PromotedBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PromotedBytes" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.PromotedBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PromotedBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long PromotedBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.PromotedBytes : int64" Usage="System.GCMemoryInfo.PromotedBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此 GC 的已提升字节数。</summary>
        <value>一个数字，表示此 GC 的已提升字节数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalAvailableMemoryBytes">
      <MemberSignature Language="C#" Value="public long TotalAvailableMemoryBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 TotalAvailableMemoryBytes" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.TotalAvailableMemoryBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalAvailableMemoryBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long TotalAvailableMemoryBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalAvailableMemoryBytes : int64" Usage="System.GCMemoryInfo.TotalAvailableMemoryBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取上次垃圾回收发生时垃圾回收器使用的总可用内存。</summary>
        <value>上次垃圾回收发生时垃圾回收器使用的总可用内存（以字节为单位）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

此属性值将为环境变量的值 `COMPlus_GCHeapHardLimit` ， `Server.GC.HeapHardLimit` `runtimeconfig.json` 如果设置了任一值，则为中的值。

如果程序在容器中运行，则此值是容器大小的实现定义的部分。

否则，属性的值是计算机上的物理内存，在上次垃圾回收发生时，可供垃圾回收器使用。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalCommittedBytes">
      <MemberSignature Language="C#" Value="public long TotalCommittedBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 TotalCommittedBytes" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.TotalCommittedBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalCommittedBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long TotalCommittedBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalCommittedBytes : int64" Usage="System.GCMemoryInfo.TotalCommittedBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取托管堆的已提交字节总数。</summary>
        <value>一个数字，表示托管堆的提交总字节数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
