<Type Name="GCMemoryInfo" FullName="System.GCMemoryInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5bc323515984c5a4775756f627dd25f044dae5b1" /><Meta Name="ms.sourcegitcommit" Value="5a1772308619a503b0c695dfca01b279c555fa43" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/15/2021" /><Meta Name="ms.locfileid" Value="98240057" /></Metadata><TypeSignature Language="C#" Value="public struct GCMemoryInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit GCMemoryInfo extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.GCMemoryInfo" />
  <TypeSignature Language="VB.NET" Value="Public Structure GCMemoryInfo" />
  <TypeSignature Language="C++ CLI" Value="public value class GCMemoryInfo" />
  <TypeSignature Language="F#" Value="type GCMemoryInfo = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b4913-101">提供一组可用于检索垃圾回收信息的 API。</span><span class="sxs-lookup"><span data-stu-id="b4913-101">Provides a set of APIs that can be used to retrieve garbage collection information.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="b4913-102">GC 由其进行标识 <xref:System.GCMemoryInfo.Index> ，后者从1开始，并随着每个 GC 的增加而增加。</span><span class="sxs-lookup"><span data-stu-id="b4913-102">A GC is identified by its <xref:System.GCMemoryInfo.Index>, which starts from 1 and increases with each GC.</span></span> <span data-ttu-id="b4913-103">如果你正在请求不存在的 GC，例如，你在 <xref:System.GC.GetGCMemoryInfo%2A> gc 发生之前调用了方法，或者要求你获取的 gc <xref:System.GCKind.FullBlocking?displayProperty=nameWithType> 并且没有完全阻止 gc 发生，则你的信息中会显示所有0的信息，包括 <xref:System.GCMemoryInfo.Index> 。</span><span class="sxs-lookup"><span data-stu-id="b4913-103">If you are asking for a GC that doesn't exist, for example, you called the <xref:System.GC.GetGCMemoryInfo%2A> method before a GC happened, or you're asking for a GC of <xref:System.GCKind.FullBlocking?displayProperty=nameWithType> and no full blocking GCs have happened, you will get all 0's in the info, including the <xref:System.GCMemoryInfo.Index>.</span></span> <span data-ttu-id="b4913-104">您可以使用索引0来检测没有 Gc，或者没有您指定的任何类型的 Gc。</span><span class="sxs-lookup"><span data-stu-id="b4913-104">You can use index 0 to detect that no GCs, or no GCs of the kind you specified, have occurred.</span></span>

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Compacted">
      <MemberSignature Language="C#" Value="public bool Compacted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Compacted" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.Compacted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Compacted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Compacted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Compacted : bool" Usage="System.GCMemoryInfo.Compacted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4913-105">获取指示这是否是压缩 GC 的值。</span><span class="sxs-lookup"><span data-stu-id="b4913-105">Gets a value that indicates if this is a compacting GC or not.</span></span></summary>
        <value><span data-ttu-id="b4913-106"><see langword="true" /> 如果这是压缩 GC，则为; <see langword="false" /> 否则为。</span><span class="sxs-lookup"><span data-stu-id="b4913-106"><see langword="true" /> if this is a compacting GC; <see langword="false" /> otherwise.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concurrent">
      <MemberSignature Language="C#" Value="public bool Concurrent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Concurrent" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.Concurrent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Concurrent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Concurrent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Concurrent : bool" Usage="System.GCMemoryInfo.Concurrent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4913-107">获取指示这是否是并发 GC (BGC) 的值。</span><span class="sxs-lookup"><span data-stu-id="b4913-107">Gets a value that indicates if this is a concurrent GC (BGC) or not.</span></span></summary>
        <value><span data-ttu-id="b4913-108"><see langword="true" /> 如果这是并发 GC (BGC) ，则为; <see langword="false" /> 否则为。</span><span class="sxs-lookup"><span data-stu-id="b4913-108"><see langword="true" /> if this is a concurrent GC (BGC); <see langword="false" /> otherwise.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalizationPendingCount">
      <MemberSignature Language="C#" Value="public long FinalizationPendingCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 FinalizationPendingCount" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.FinalizationPendingCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FinalizationPendingCount As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long FinalizationPendingCount { long get(); };" />
      <MemberSignature Language="F#" Value="member this.FinalizationPendingCount : int64" Usage="System.GCMemoryInfo.FinalizationPendingCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4913-109">获取此 GC 观察到的已准备好进行终结的对象数。</span><span class="sxs-lookup"><span data-stu-id="b4913-109">Gets the number of objects that are ready for finalization that this GC observed.</span></span></summary>
        <value><span data-ttu-id="b4913-110">此 GC 已准备好进行终结的对象总数。</span><span class="sxs-lookup"><span data-stu-id="b4913-110">The total number of objects observed by this GC that are ready for finalization.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FragmentedBytes">
      <MemberSignature Language="C#" Value="public long FragmentedBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 FragmentedBytes" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.FragmentedBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FragmentedBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long FragmentedBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.FragmentedBytes : int64" Usage="System.GCMemoryInfo.FragmentedBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4913-111">获取上次垃圾回收发生时的总片段数。</span><span class="sxs-lookup"><span data-stu-id="b4913-111">Gets the total fragmentation when the last garbage collection occurred.</span></span></summary>
        <value><span data-ttu-id="b4913-112">上次垃圾回收发生时的碎片总计。</span><span class="sxs-lookup"><span data-stu-id="b4913-112">The total fragmentation when the last garbage collection occurred.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="b4913-113">例如，应用程序包含以下五个对象：</span><span class="sxs-lookup"><span data-stu-id="b4913-113">For example, the application has the following five objects:</span></span>

`| OBJ_A |     OBJ_B     | OBJ_C |   OBJ_D   | OBJ_E |`
            
<span data-ttu-id="b4913-114">如果 `OBJ_B` 、 `OBJ_C` 和 `OBJ_E` 是垃圾回收的，但堆未压缩，则生成的堆将如下所示：</span><span class="sxs-lookup"><span data-stu-id="b4913-114">If `OBJ_B`, `OBJ_C`, and `OBJ_E` are garbage collected but the heap is not compacted, the resulting heap will look like the following:</span></span>

`| OBJ_A |           F           |   OBJ_D   |`
            
<span data-ttu-id="b4913-115">和之间的 `OBJ_A` 内存 `OBJ_D` （标记为 `F` ）被视为的一部分， `FragmentedBytes` 用于分配新的对象。</span><span class="sxs-lookup"><span data-stu-id="b4913-115">The memory between `OBJ_A` and `OBJ_D`, which is marked `F`, is considered part of the `FragmentedBytes` and is used to allocate new objects.</span></span>

<span data-ttu-id="b4913-116">后面的内存 `OBJ_D` 不被视为的一部分， `FragmentedBytes` 但也用于分配新的对象。</span><span class="sxs-lookup"><span data-stu-id="b4913-116">The memory after `OBJ_D` is not considered part of the `FragmentedBytes` but is also used to allocate new objects.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Generation">
      <MemberSignature Language="C#" Value="public int Generation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Generation" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.Generation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Generation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Generation { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Generation : int" Usage="System.GCMemoryInfo.Generation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4913-117">获取此 GC 回收的代系。</span><span class="sxs-lookup"><span data-stu-id="b4913-117">Gets the generation this GC collected.</span></span> <span data-ttu-id="b4913-118">回收代系的同时也回收了更新的代系。</span><span class="sxs-lookup"><span data-stu-id="b4913-118">Collecting a generation also collected younger generations.</span></span></summary>
        <value><span data-ttu-id="b4913-119">此 GC 收集的代。</span><span class="sxs-lookup"><span data-stu-id="b4913-119">The generation this GC collected.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerationInfo">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;GCGenerationInfo&gt; GenerationInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;valuetype System.GCGenerationInfo&gt; GenerationInfo" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.GenerationInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GenerationInfo As ReadOnlySpan(Of GCGenerationInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlySpan&lt;GCGenerationInfo&gt; GenerationInfo { ReadOnlySpan&lt;GCGenerationInfo&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.GenerationInfo : ReadOnlySpan&lt;GCGenerationInfo&gt;" Usage="System.GCMemoryInfo.GenerationInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.GCGenerationInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4913-120">获取所有代的代系信息。</span><span class="sxs-lookup"><span data-stu-id="b4913-120">Gets the generation information for all generations.</span></span></summary>
        <value><span data-ttu-id="b4913-121">所有代的生成信息。</span><span class="sxs-lookup"><span data-stu-id="b4913-121">The generation information for all generations.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeapSizeBytes">
      <MemberSignature Language="C#" Value="public long HeapSizeBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 HeapSizeBytes" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.HeapSizeBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeapSizeBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long HeapSizeBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.HeapSizeBytes : int64" Usage="System.GCMemoryInfo.HeapSizeBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4913-122">获取上次垃圾回收发生时的总堆大小。</span><span class="sxs-lookup"><span data-stu-id="b4913-122">Gets the total heap size when the last garbage collection occurred.</span></span></summary>
        <value><span data-ttu-id="b4913-123">上次垃圾回收发生时堆的总大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="b4913-123">The total heap size, in bytes, when the last garbage collection occurred.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighMemoryLoadThresholdBytes">
      <MemberSignature Language="C#" Value="public long HighMemoryLoadThresholdBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 HighMemoryLoadThresholdBytes" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.HighMemoryLoadThresholdBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HighMemoryLoadThresholdBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long HighMemoryLoadThresholdBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.HighMemoryLoadThresholdBytes : int64" Usage="System.GCMemoryInfo.HighMemoryLoadThresholdBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4913-124">获取上次垃圾回收发生时的高内存负载阈值。</span><span class="sxs-lookup"><span data-stu-id="b4913-124">Gets the high memory load threshold when the last garbage collection occurred.</span></span></summary>
        <value><span data-ttu-id="b4913-125">上次垃圾回收发生时的高内存负载阈值（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="b4913-125">The high memory load threshold, in bytes, when the last garbage collection occurred.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public long Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Index" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Index { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int64" Usage="System.GCMemoryInfo.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4913-126">获取此 GC 的索引。</span><span class="sxs-lookup"><span data-stu-id="b4913-126">Gets the index of this GC.</span></span> <span data-ttu-id="b4913-127">GC 索引从 1 开始，在 GC 开始时会增加。</span><span class="sxs-lookup"><span data-stu-id="b4913-127">GC indices start with 1 and are increased at the beginning of a GC.</span></span>
<span data-ttu-id="b4913-128">由于此信息是在 GC 结束时更新的，这意味着，获得的后台 GC 信息包含的索引可能小于之前完成的前台 GC 的索引。</span><span class="sxs-lookup"><span data-stu-id="b4913-128">Since the information is updated at the end of a GC, this means you can get the information for a background GC with a smaller index than a foreground GC that finished earlier.</span></span></summary>
        <value><span data-ttu-id="b4913-129">此 GC 的索引。</span><span class="sxs-lookup"><span data-stu-id="b4913-129">The index of this GC.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryLoadBytes">
      <MemberSignature Language="C#" Value="public long MemoryLoadBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MemoryLoadBytes" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.MemoryLoadBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryLoadBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MemoryLoadBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.MemoryLoadBytes : int64" Usage="System.GCMemoryInfo.MemoryLoadBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4913-130">获取上次垃圾回收发生时的内存负载。</span><span class="sxs-lookup"><span data-stu-id="b4913-130">Gets the memory load when the last garbage collection occurred.</span></span></summary>
        <value><span data-ttu-id="b4913-131">上次垃圾回收发生时的内存负载。</span><span class="sxs-lookup"><span data-stu-id="b4913-131">The memory load when the last garbage collection occurred.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseDurations">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;TimeSpan&gt; PauseDurations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;valuetype System.TimeSpan&gt; PauseDurations" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.PauseDurations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PauseDurations As ReadOnlySpan(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlySpan&lt;TimeSpan&gt; PauseDurations { ReadOnlySpan&lt;TimeSpan&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.PauseDurations : ReadOnlySpan&lt;TimeSpan&gt;" Usage="System.GCMemoryInfo.PauseDurations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4913-132">获取暂停持续时间。</span><span class="sxs-lookup"><span data-stu-id="b4913-132">Gets the pause durations.</span></span> <span data-ttu-id="b4913-133">对于阻止 GC，有一次暂停；对于后台 GC，有两次暂停。</span><span class="sxs-lookup"><span data-stu-id="b4913-133">For blocking GCs, there is one pause; for background GC, there are two.</span></span></summary>
        <value><span data-ttu-id="b4913-134">表示暂停持续时间的时间跨度。</span><span class="sxs-lookup"><span data-stu-id="b4913-134">A timespan representing the pause durations.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseTimePercentage">
      <MemberSignature Language="C#" Value="public double PauseTimePercentage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PauseTimePercentage" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.PauseTimePercentage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PauseTimePercentage As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PauseTimePercentage { double get(); };" />
      <MemberSignature Language="F#" Value="member this.PauseTimePercentage : double" Usage="System.GCMemoryInfo.PauseTimePercentage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4913-135">获取到目前为止暂停时间在 GC 中的百分比。</span><span class="sxs-lookup"><span data-stu-id="b4913-135">Gets the pause time percentage in the GC so far.</span></span> <span data-ttu-id="b4913-136">如果暂停时间为 1.2%，则此属性的值为 1.2。</span><span class="sxs-lookup"><span data-stu-id="b4913-136">If the pause time is 1.2%, this property's value is 1.2.</span></span> <span data-ttu-id="b4913-137">此值的计算方法是：计算到目前为止所有 GC 暂停的总和，并将其除以加载运行时后该进程的总运行时间。</span><span class="sxs-lookup"><span data-stu-id="b4913-137">The value is calculated by taking the sum of all GC pauses so far and dividing that by the total elapsed time of the process since the runtime was loaded.</span></span> <span data-ttu-id="b4913-138">每次 GC 结束时更新这个正在运行的计数器。</span><span class="sxs-lookup"><span data-stu-id="b4913-138">This running counter is updated at the end of each GC.</span></span> <span data-ttu-id="b4913-139">它不区分 <see cref="T:System.GCKind" />。</span><span class="sxs-lookup"><span data-stu-id="b4913-139">It does not distinguish between <see cref="T:System.GCKind" />.</span></span> <span data-ttu-id="b4913-140">也就是说，在每个 GC 上，计算的值都会进行更新，当你访问此属性时，它将获取最新的计算值。</span><span class="sxs-lookup"><span data-stu-id="b4913-140">That is, at every GC, the calculated value is updated, and when you access this property, it gets the latest calculated value.</span></span></summary>
        <value><span data-ttu-id="b4913-141">暂停时间百分比。</span><span class="sxs-lookup"><span data-stu-id="b4913-141">The pause time percentage.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PinnedObjectsCount">
      <MemberSignature Language="C#" Value="public long PinnedObjectsCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PinnedObjectsCount" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.PinnedObjectsCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PinnedObjectsCount As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long PinnedObjectsCount { long get(); };" />
      <MemberSignature Language="F#" Value="member this.PinnedObjectsCount : int64" Usage="System.GCMemoryInfo.PinnedObjectsCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4913-142">获取此 GC 观察到的固定对象的数目。</span><span class="sxs-lookup"><span data-stu-id="b4913-142">Gets the number of pinned objects this GC observed.</span></span></summary>
        <value><span data-ttu-id="b4913-143">此 GC 观察到的固定对象的总数。</span><span class="sxs-lookup"><span data-stu-id="b4913-143">The total number of pinned objects observed by this GC.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PromotedBytes">
      <MemberSignature Language="C#" Value="public long PromotedBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PromotedBytes" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.PromotedBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PromotedBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long PromotedBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.PromotedBytes : int64" Usage="System.GCMemoryInfo.PromotedBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4913-144">获取此 GC 的已提升字节数。</span><span class="sxs-lookup"><span data-stu-id="b4913-144">Gets the promoted bytes for this GC.</span></span></summary>
        <value><span data-ttu-id="b4913-145">此 GC 的已提升字节数。</span><span class="sxs-lookup"><span data-stu-id="b4913-145">The number of promoted bytes for this GC.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalAvailableMemoryBytes">
      <MemberSignature Language="C#" Value="public long TotalAvailableMemoryBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 TotalAvailableMemoryBytes" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.TotalAvailableMemoryBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalAvailableMemoryBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long TotalAvailableMemoryBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalAvailableMemoryBytes : int64" Usage="System.GCMemoryInfo.TotalAvailableMemoryBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4913-146">获取上次垃圾回收发生时垃圾回收器使用的总可用内存。</span><span class="sxs-lookup"><span data-stu-id="b4913-146">Gets the total available memory for the garbage collector to use when the last garbage collection occurred.</span></span></summary>
        <value><span data-ttu-id="b4913-147">上次垃圾回收发生时垃圾回收器使用的总可用内存（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="b4913-147">The total available memory, in bytes, for the garbage collector to use when the last garbage collection occurred.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="b4913-148">此属性值将为环境变量的值 `COMPlus_GCHeapHardLimit` ， `Server.GC.HeapHardLimit` `runtimeconfig.json` 如果设置了任一值，则为中的值。</span><span class="sxs-lookup"><span data-stu-id="b4913-148">This property value will be the value of the `COMPlus_GCHeapHardLimit` environment variable, or the `Server.GC.HeapHardLimit` value in `runtimeconfig.json`, if either is set.</span></span>

<span data-ttu-id="b4913-149">如果程序在容器中运行，则此值是容器大小的实现定义的部分。</span><span class="sxs-lookup"><span data-stu-id="b4913-149">If the program is run in a container, this value is an implementation-defined fraction of the container's size.</span></span>

<span data-ttu-id="b4913-150">否则，属性的值是计算机上的物理内存，在上次垃圾回收发生时，可供垃圾回收器使用。</span><span class="sxs-lookup"><span data-stu-id="b4913-150">Otherwise, the value of the property is the physical memory on the machine that was available for the garbage collector to use when the last garbage collection occurred.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalCommittedBytes">
      <MemberSignature Language="C#" Value="public long TotalCommittedBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 TotalCommittedBytes" />
      <MemberSignature Language="DocId" Value="P:System.GCMemoryInfo.TotalCommittedBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalCommittedBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long TotalCommittedBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalCommittedBytes : int64" Usage="System.GCMemoryInfo.TotalCommittedBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4913-151">获取托管堆的已提交字节总数。</span><span class="sxs-lookup"><span data-stu-id="b4913-151">Gets the total committed bytes of the managed heap.</span></span></summary>
        <value><span data-ttu-id="b4913-152">托管堆的提交总字节数。</span><span class="sxs-lookup"><span data-stu-id="b4913-152">The total committed bytes of the managed heap.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
