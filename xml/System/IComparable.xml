<Type Name="IComparable" FullName="System.IComparable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37299f7e245e76249894cdde0d734cc606b7df16" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83528729" /></Metadata><TypeSignature Language="C#" Value="public interface IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable" />
  <TypeSignature Language="DocId" Value="T:System.IComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7af08-101">定义由值类型或类实现的特定于类型的通用比较方法，旨在对其实例进行排序。</span><span class="sxs-lookup"><span data-stu-id="7af08-101">Defines a generalized type-specific comparison method that a value type or class implements to order or sort its instances.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7af08-102">此接口由其值可以排序或排序的类型实现。</span><span class="sxs-lookup"><span data-stu-id="7af08-102">This interface is implemented by types whose values can be ordered or sorted.</span></span> <span data-ttu-id="7af08-103">它要求实现类型定义单个方法（<xref:System.IComparable.CompareTo%28System.Object%29>），该方法指示当前实例在排序顺序中的位置是在同一类型的第二个对象之前、之后还是与其相同。</span><span class="sxs-lookup"><span data-stu-id="7af08-103">It requires that implementing types define a single method, <xref:System.IComparable.CompareTo%28System.Object%29>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</span></span> <span data-ttu-id="7af08-104">实例的 <xref:System.IComparable> 实现由 <xref:System.Array.Sort%2A?displayProperty=nameWithType> 和 <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>等方法自动调用。</span><span class="sxs-lookup"><span data-stu-id="7af08-104">The instance's <xref:System.IComparable> implementation is called automatically by methods such as <xref:System.Array.Sort%2A?displayProperty=nameWithType> and <xref:System.Collections.ArrayList.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7af08-105"><xref:System.IComparable.CompareTo%28System.Object%29> 方法的实现必须返回具有以下三个值之一的 <xref:System.Int32>，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="7af08-105">The implementation of the <xref:System.IComparable.CompareTo%28System.Object%29> method must return an <xref:System.Int32> that has one of three values, as shown in the following table.</span></span>  
  
|<span data-ttu-id="7af08-106">值</span><span class="sxs-lookup"><span data-stu-id="7af08-106">Value</span></span>|<span data-ttu-id="7af08-107">含义</span><span class="sxs-lookup"><span data-stu-id="7af08-107">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="7af08-108">小于零</span><span class="sxs-lookup"><span data-stu-id="7af08-108">Less than zero</span></span>|<span data-ttu-id="7af08-109">当前实例在排序顺序中位于 <xref:System.IComparable.CompareTo%2A> 方法指定的对象之前。</span><span class="sxs-lookup"><span data-stu-id="7af08-109">The current instance precedes the object specified by the <xref:System.IComparable.CompareTo%2A> method in the sort order.</span></span>|  
|<span data-ttu-id="7af08-110">零</span><span class="sxs-lookup"><span data-stu-id="7af08-110">Zero</span></span>|<span data-ttu-id="7af08-111">此当前实例与 <xref:System.IComparable.CompareTo%2A> 方法指定的对象在排序顺序中的位置相同。</span><span class="sxs-lookup"><span data-stu-id="7af08-111">This current instance occurs in the same position in the sort order as the object specified by the <xref:System.IComparable.CompareTo%2A> method.</span></span>|  
|<span data-ttu-id="7af08-112">大于零</span><span class="sxs-lookup"><span data-stu-id="7af08-112">Greater than zero</span></span>|<span data-ttu-id="7af08-113">此当前实例遵循 <xref:System.IComparable.CompareTo%2A> 方法在排序顺序中指定的对象。</span><span class="sxs-lookup"><span data-stu-id="7af08-113">This current instance follows the object specified by the <xref:System.IComparable.CompareTo%2A> method in the sort order.</span></span>|  
  
 <span data-ttu-id="7af08-114">所有数值类型（例如 <xref:System.Int32> 和 <xref:System.Double>）都实现 <xref:System.IComparable>，如 <xref:System.String>、<xref:System.Char>和 <xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="7af08-114">All numeric types (such as <xref:System.Int32> and <xref:System.Double>) implement <xref:System.IComparable>, as do <xref:System.String>, <xref:System.Char>, and <xref:System.DateTime>.</span></span> <span data-ttu-id="7af08-115">自定义类型还应提供自己的 <xref:System.IComparable> 实现，以便对对象实例进行排序或排序。</span><span class="sxs-lookup"><span data-stu-id="7af08-115">Custom types should also provide their own implementation of <xref:System.IComparable> to enable object instances to be ordered or sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7af08-116">下面的示例说明 <xref:System.IComparable> 的实现和必要的 <xref:System.IComparable.CompareTo%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="7af08-116">The following example illustrates the implementation of <xref:System.IComparable> and the requisite <xref:System.IComparable.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int" Usage="iComparable.CompareTo obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="7af08-117">一个要与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="7af08-117">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="7af08-118">将当前实例与同一类型的另一个对象进行比较，并返回一个整数，该整数指示当前实例在排序顺序中的位置是位于另一个对象之前、之后还是与其位置相同。</span><span class="sxs-lookup"><span data-stu-id="7af08-118">Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</span></span></summary>
        <returns><span data-ttu-id="7af08-119">一个值，指示要比较的对象的相对顺序。</span><span class="sxs-lookup"><span data-stu-id="7af08-119">A value that indicates the relative order of the objects being compared.</span></span> <span data-ttu-id="7af08-120">返回值具有以下含义：</span><span class="sxs-lookup"><span data-stu-id="7af08-120">The return value has these meanings:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="7af08-121">值</span><span class="sxs-lookup"><span data-stu-id="7af08-121">Value</span></span> 
 </term><description> <span data-ttu-id="7af08-122">含义</span><span class="sxs-lookup"><span data-stu-id="7af08-122">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="7af08-123">小于零</span><span class="sxs-lookup"><span data-stu-id="7af08-123">Less than zero</span></span> 
 </term><description> <span data-ttu-id="7af08-124">此实例在排序顺序中位于 <paramref name="obj" /> 之前。</span><span class="sxs-lookup"><span data-stu-id="7af08-124">This instance precedes <paramref name="obj" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="7af08-125">零</span><span class="sxs-lookup"><span data-stu-id="7af08-125">Zero</span></span> 
 </term><description> <span data-ttu-id="7af08-126">此实例在排序顺序中的位置与 <paramref name="obj" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="7af08-126">This instance occurs in the same position in the sort order as <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="7af08-127">大于零</span><span class="sxs-lookup"><span data-stu-id="7af08-127">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="7af08-128">此实例在排序顺序中位于 <paramref name="obj" /> 之后。</span><span class="sxs-lookup"><span data-stu-id="7af08-128">This instance follows <paramref name="obj" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7af08-129"><xref:System.IComparable.CompareTo%2A> 方法由可对其值进行排序或排序的类型实现。</span><span class="sxs-lookup"><span data-stu-id="7af08-129">The <xref:System.IComparable.CompareTo%2A> method is implemented by types whose values can be ordered or sorted.</span></span> <span data-ttu-id="7af08-130">它由非泛型集合对象的方法（如 <xref:System.Array.Sort%2A?displayProperty=nameWithType>）自动调用，以对数组的每个成员进行排序。</span><span class="sxs-lookup"><span data-stu-id="7af08-130">It is called automatically by methods of non-generic collection objects, such as <xref:System.Array.Sort%2A?displayProperty=nameWithType>, to order each member of the array.</span></span> <span data-ttu-id="7af08-131">如果自定义类或结构未实现 <xref:System.IComparable>，则无法对其成员进行排序，并且排序操作可以引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="7af08-131">If a custom class or structure does not implement <xref:System.IComparable>, its members cannot be ordered and the sort operation can throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="7af08-132">此方法只是定义，必须由特定的类或值类型实现才能使其生效。</span><span class="sxs-lookup"><span data-stu-id="7af08-132">This method is only a definition and must be implemented by a specific class or value type to have effect.</span></span> <span data-ttu-id="7af08-133">返回值部分（"前面"、"与" 和 "后跟"）中指定的比较的含义取决于特定实现。</span><span class="sxs-lookup"><span data-stu-id="7af08-133">The meaning of the comparisons specified in the Return Value section ("precedes", "occurs in the same position as", and "follows") depends on the particular implementation.</span></span>  
  
 <span data-ttu-id="7af08-134">按照定义，任何对象比较大于（或跟随） `null`，而两个 null 引用的比较结果相等。</span><span class="sxs-lookup"><span data-stu-id="7af08-134">By definition, any object compares greater than (or follows) `null`, and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="7af08-135">参数 `obj`必须与实现此接口的类或值类型的类型相同;否则，会引发 <xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="7af08-135">The parameter, `obj`, must be the same type as the class or value type that implements this interface; otherwise, an <xref:System.ArgumentException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7af08-136">下面的示例演示如何使用 <xref:System.IComparable.CompareTo%2A> 将实现 <xref:System.IComparable> 的 `Temperature` 对象与另一个对象进行比较。</span><span class="sxs-lookup"><span data-stu-id="7af08-136">The following example illustrates the use of <xref:System.IComparable.CompareTo%2A> to compare a `Temperature` object implementing <xref:System.IComparable> with another object.</span></span> <span data-ttu-id="7af08-137">`Temperature` 对象只需包装对 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> 方法的调用即可实现 <xref:System.IComparable.CompareTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="7af08-137">The `Temperature` object implements <xref:System.IComparable.CompareTo%2A> by simply wrapping a call to the <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[IComparable Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable Example/CS/source.cs#1)]
 [!code-vb[IComparable Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7af08-138"><paramref name="obj" /> 不具有与此实例相同的类型。</span><span class="sxs-lookup"><span data-stu-id="7af08-138"><paramref name="obj" /> is not the same type as this instance.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="7af08-139">对于对象 A、B 和 C，必须满足以下条件：</span><span class="sxs-lookup"><span data-stu-id="7af08-139">For objects A, B and C, the following must be true:</span></span> 
 <span data-ttu-id="7af08-140"><c>CompareTo （A）</c>必须返回零。</span><span class="sxs-lookup"><span data-stu-id="7af08-140"><c>A.CompareTo(A)</c> must return zero.</span></span>  
  
<span data-ttu-id="7af08-141">如果<c>CompareTo （B）</c>返回零，则<c>CompareTo （A）</c>必须返回零。</span><span class="sxs-lookup"><span data-stu-id="7af08-141">If <c>A.CompareTo(B)</c> returns zero, then <c>B.CompareTo(A)</c> must return zero.</span></span>  
  
<span data-ttu-id="7af08-142">如果<c>CompareTo （B）</c>返回零， <c>CompareTo （c）</c>返回零，则<c>CompareTo （c）</c>必须返回零。</span><span class="sxs-lookup"><span data-stu-id="7af08-142">If <c>A.CompareTo(B)</c> returns zero and <c>B.CompareTo(C)</c> returns zero, then <c>A.CompareTo(C)</c> must return zero.</span></span>  
  
<span data-ttu-id="7af08-143">如果<c>CompareTo （B）</c>返回的值不是零，则<c>CompareTo （A）</c>必须返回相反的符号值。</span><span class="sxs-lookup"><span data-stu-id="7af08-143">If <c>A.CompareTo(B)</c> returns a value other than zero, then <c>B.CompareTo(A)</c> must return a value of the opposite sign.</span></span>  
  
<span data-ttu-id="7af08-144">如果<c>CompareTo （B）</c>返回一个 <paramref name="x" /> 不等于零的值，而<c>CompareTo （c）</c>返回与 <paramref name="x" />相同的值 <paramref name="y" />，则<c>CompareTo （c）</c>必须返回与 <paramref name="x" /> 和 <paramref name="y" />相同的符号值。</span><span class="sxs-lookup"><span data-stu-id="7af08-144">If <c>A.CompareTo(B)</c> returns a value <paramref name="x" /> not equal to zero, and <c>B.CompareTo(C)</c> returns a value <paramref name="y" /> of the same sign as <paramref name="x" />, then <c>A.CompareTo(C)</c> must return a value of the same sign as <paramref name="x" /> and <paramref name="y" />.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="7af08-145">使用 <see cref="M:System.IComparable.CompareTo(System.Object)" /> 方法来确定类的实例的排序。</span><span class="sxs-lookup"><span data-stu-id="7af08-145">Use the <see cref="M:System.IComparable.CompareTo(System.Object)" /> method to determine the ordering of instances of a class.</span></span></para></block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
  </Members>
</Type>
