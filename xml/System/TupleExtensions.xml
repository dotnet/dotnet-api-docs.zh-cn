<Type Name="TupleExtensions" FullName="System.TupleExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f74ed18b58ffbbaa59f8781ae1bbe59af091e53f" /><Meta Name="ms.sourcegitcommit" Value="9a0316374d19cc78674994106d073aa5ef1bd5f3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/10/2020" /><Meta Name="ms.locfileid" Value="94465779" /></Metadata><TypeSignature Language="C#" Value="public static class TupleExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TupleExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.TupleExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module TupleExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class TupleExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type TupleExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.ValueTuple</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.ValueTuple" FromVersion="4.0.3.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.ValueTuple" FromVersion="4.0.2.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.ValueTuple" FromVersion="4.0.3.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.ValueTuple" FromVersion="4.0.3.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供元组用于与 C# 中的元组的语言支持进行互操作的扩展方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 尽管可以直接调用这些方法，但它们主要用于 c # 编译器在创建和析构元组中使用。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Deconstruct&lt;T1&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将元组中的各组件解构为单独的变量。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Deconstruct&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1&gt; (this (T1) value, out T1 item1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1&gt;(class System.Tuple`1&lt;!!T1&gt; value, [out] !!T1&amp; item1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``1(System.Tuple{``0},``0@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1) (value As Tuple(Of T1), ByRef item1 As T1)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1);" />
      <MemberSignature Language="F#" Value="static member Deconstruct : 'T1 * 'T1 -&gt; unit" Usage="System.TupleExtensions.Deconstruct (value, item1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">单个元素的类型。</typeparam>
        <param name="value">要解构为单独变量的 1 元素元组。</param>
        <param name="item1">单个元素的值。</param>
        <summary>将具有 1 个元素的元组解构为不同的变量。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要用于支持 c # 中的元组语言功能。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``1(System.ValueTuple{``0})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``1(System.Tuple{``0})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2&gt; (this (T1,T2) value, out T1 item1, out T2 item2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2&gt;(class System.Tuple`2&lt;!!T1, !!T2&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``2(System.Tuple{``0,``1},``0@,``1@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2) (value As Tuple(Of T1, T2), ByRef item1 As T1, ByRef item2 As T2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2);" />
      <MemberSignature Language="F#" Value="static member Deconstruct : 'T1 * 'T2 * 'T1 * 'T2 -&gt; unit" Usage="System.TupleExtensions.Deconstruct (value, item1, item2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1" RefType="out" />
        <Parameter Name="item2" Type="T2" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <param name="value">要解构为 2 个不同变量的 2 元素元组。</param>
        <param name="item1">第 1 个元素的值。</param>
        <param name="item2">第 2 个元素的值。</param>
        <summary>将具有 2 个元素的元组解构为不同的变量。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要用于支持 c # 中的元组语言功能。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``2(System.ValueTuple{``0,``1})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``2(System.Tuple{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3&gt; (this (T1,T2,T3) value, out T1 item1, out T2 item2, out T3 item3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3&gt;(class System.Tuple`3&lt;!!T1, !!T2, !!T3&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``3(System.Tuple{``0,``1,``2},``0@,``1@,``2@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3) (value As Tuple(Of T1, T2, T3), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3);" />
      <MemberSignature Language="F#" Value="static member Deconstruct : 'T1 * 'T2 * 'T3 * 'T1 * 'T2 * 'T3 -&gt; unit" Usage="System.TupleExtensions.Deconstruct (value, item1, item2, item3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1" RefType="out" />
        <Parameter Name="item2" Type="T2" RefType="out" />
        <Parameter Name="item3" Type="T3" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <param name="value">要解构为 3 个不同变量的 3 元素元组。</param>
        <param name="item1">第 1 个元素的值。</param>
        <param name="item2">第 2 个元素的值。</param>
        <param name="item3">第 3 个元素的值。</param>
        <summary>将具有 3 个元素的元组解构为不同的变量。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要用于支持 c # 中的元组语言功能。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``3(System.ValueTuple{``0,``1,``2})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``3(System.Tuple{``0,``1,``2})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4&gt; (this (T1,T2,T3,T4) value, out T1 item1, out T2 item2, out T3 item3, out T4 item4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4&gt;(class System.Tuple`4&lt;!!T1, !!T2, !!T3, !!T4&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4) (value As Tuple(Of T1, T2, T3, T4), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4);" />
      <MemberSignature Language="F#" Value="static member Deconstruct : 'T1 * 'T2 * 'T3 * 'T4 * 'T1 * 'T2 * 'T3 * 'T4 -&gt; unit" Usage="System.TupleExtensions.Deconstruct (value, item1, item2, item3, item4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1" RefType="out" />
        <Parameter Name="item2" Type="T2" RefType="out" />
        <Parameter Name="item3" Type="T3" RefType="out" />
        <Parameter Name="item4" Type="T4" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <param name="value">要解构为 4 个不同变量的 4 元素元组。</param>
        <param name="item1">第 1 个元素的值。</param>
        <param name="item2">第 2 个元素的值。</param>
        <param name="item3">第 3 个元素的值。</param>
        <param name="item4">第 4 个元素的值。</param>
        <summary>将具有 4 个元素的元组解构为不同的变量。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要用于支持 c # 中的元组语言功能。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``4(System.ValueTuple{``0,``1,``2,``3})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``4(System.Tuple{``0,``1,``2,``3})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5&gt; (this (T1,T2,T3,T4,T5) value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5&gt;(class System.Tuple`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5) (value As Tuple(Of T1, T2, T3, T4, T5), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5);" />
      <MemberSignature Language="F#" Value="static member Deconstruct : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 -&gt; unit" Usage="System.TupleExtensions.Deconstruct (value, item1, item2, item3, item4, item5)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1" RefType="out" />
        <Parameter Name="item2" Type="T2" RefType="out" />
        <Parameter Name="item3" Type="T3" RefType="out" />
        <Parameter Name="item4" Type="T4" RefType="out" />
        <Parameter Name="item5" Type="T5" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <param name="value">要解构为 5 个不同变量的 5 元素元组。</param>
        <param name="item1">第 1 个元素的值。</param>
        <param name="item2">第 2 个元素的值。</param>
        <param name="item3">第 3 个元素的值。</param>
        <param name="item4">第 4 个元素的值。</param>
        <param name="item5">第 5 个元素的值。</param>
        <summary>将具有 5 个元素的元组解构为不同的变量。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要用于支持 c # 中的元组语言功能。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``5(System.ValueTuple{``0,``1,``2,``3,``4})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``5(System.Tuple{``0,``1,``2,``3,``4})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6&gt; (this (T1,T2,T3,T4,T5,T6) value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6&gt;(class System.Tuple`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6) (value As Tuple(Of T1, T2, T3, T4, T5, T6), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6);" />
      <MemberSignature Language="F#" Value="static member Deconstruct : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 -&gt; unit" Usage="System.TupleExtensions.Deconstruct (value, item1, item2, item3, item4, item5, item6)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1" RefType="out" />
        <Parameter Name="item2" Type="T2" RefType="out" />
        <Parameter Name="item3" Type="T3" RefType="out" />
        <Parameter Name="item4" Type="T4" RefType="out" />
        <Parameter Name="item5" Type="T5" RefType="out" />
        <Parameter Name="item6" Type="T6" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <param name="value">要解构为 6 个不同变量的 6 元素元组。</param>
        <param name="item1">第 1 个元素的值。</param>
        <param name="item2">第 2 个元素的值。</param>
        <param name="item3">第 3 个元素的值。</param>
        <param name="item4">第 4 个元素的值。</param>
        <param name="item5">第 5 个元素的值。</param>
        <param name="item6">第 6 个元素的值。</param>
        <summary>将具有 6 个元素的元组解构为不同的变量。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要用于支持 c # 中的元组语言功能。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7&gt; (this (T1,T2,T3,T4,T5,T6,T7) value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7&gt;(class System.Tuple`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7);" />
      <MemberSignature Language="F#" Value="static member Deconstruct : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 -&gt; unit" Usage="System.TupleExtensions.Deconstruct (value, item1, item2, item3, item4, item5, item6, item7)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1" RefType="out" />
        <Parameter Name="item2" Type="T2" RefType="out" />
        <Parameter Name="item3" Type="T3" RefType="out" />
        <Parameter Name="item4" Type="T4" RefType="out" />
        <Parameter Name="item5" Type="T5" RefType="out" />
        <Parameter Name="item6" Type="T6" RefType="out" />
        <Parameter Name="item7" Type="T7" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <param name="value">要解构为 7 个不同变量的 7 元素元组。</param>
        <param name="item1">第 1 个元素的值。</param>
        <param name="item2">第 2 个元素的值。</param>
        <param name="item3">第 3 个元素的值。</param>
        <param name="item4">第 4 个元素的值。</param>
        <param name="item5">第 5 个元素的值。</param>
        <param name="item6">第 6 个元素的值。</param>
        <param name="item7">第 7 个元素的值。</param>
        <summary>将具有 7 个元素的元组解构为不同的变量。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要用于支持 c # 中的元组语言功能。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8&gt;) value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`1&lt;!!T8&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8)), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8);" />
      <MemberSignature Language="F#" Value="static member Deconstruct : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 -&gt; unit" Usage="System.TupleExtensions.Deconstruct (value, item1, item2, item3, item4, item5, item6, item7, item8)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1" RefType="out" />
        <Parameter Name="item2" Type="T2" RefType="out" />
        <Parameter Name="item3" Type="T3" RefType="out" />
        <Parameter Name="item4" Type="T4" RefType="out" />
        <Parameter Name="item5" Type="T5" RefType="out" />
        <Parameter Name="item6" Type="T6" RefType="out" />
        <Parameter Name="item7" Type="T7" RefType="out" />
        <Parameter Name="item8" Type="T8" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型。</typeparam>
        <param name="value">要解构为 8 个不同变量的 8 元素元组。</param>
        <param name="item1">第 1 个元素的值。</param>
        <param name="item2">第 2 个元素的值。</param>
        <param name="item3">第 3 个元素的值。</param>
        <param name="item4">第 4 个元素的值。</param>
        <param name="item5">第 5 个元素的值。</param>
        <param name="item6">第 6 个元素的值。</param>
        <param name="item7">第 7 个元素的值。</param>
        <param name="item8">第 8 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item1" />。</param>
        <summary>将具有 8 个元素的元组解构为不同的变量。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要用于支持 c # 中的元组语言功能。  
  
 由于 .NET Framework 元组类型通过在中嵌套元组来实现具有超过7个元素的元组 <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType> ，因此  `item8` 是嵌套元组中的一个元素。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9&gt;) value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`2&lt;!!T8, !!T9&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9)), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9);" />
      <MemberSignature Language="F#" Value="static member Deconstruct : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 -&gt; unit" Usage="System.TupleExtensions.Deconstruct (value, item1, item2, item3, item4, item5, item6, item7, item8, item9)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1" RefType="out" />
        <Parameter Name="item2" Type="T2" RefType="out" />
        <Parameter Name="item3" Type="T3" RefType="out" />
        <Parameter Name="item4" Type="T4" RefType="out" />
        <Parameter Name="item5" Type="T5" RefType="out" />
        <Parameter Name="item6" Type="T6" RefType="out" />
        <Parameter Name="item7" Type="T7" RefType="out" />
        <Parameter Name="item8" Type="T8" RefType="out" />
        <Parameter Name="item9" Type="T9" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型。</typeparam>
        <typeparam name="T9">第 9 个元素的类型。</typeparam>
        <param name="value">要解构为 9 个不同变量的 9 元素元组。</param>
        <param name="item1">第 1 个元素的值。</param>
        <param name="item2">第 2 个元素的值。</param>
        <param name="item3">第 3 个元素的值。</param>
        <param name="item4">第 4 个元素的值。</param>
        <param name="item5">第 5 个元素的值。</param>
        <param name="item6">第 6 个元素的值。</param>
        <param name="item7">第 7 个元素的值。</param>
        <param name="item8">第 8 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item1" />。</param>
        <param name="item9">第 9 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item2" />。</param>
        <summary>将具有 9 个元素的元组解构为不同的变量。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要用于支持 c # 中的元组语言功能。  
  
 由于 .NET Framework 元组类型通过在中嵌套元组来实现具有超过7个元素的元组 <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType> ，  `item8` 并且 `item9` 是嵌套元组的元素。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10&gt;) value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`3&lt;!!T8, !!T9, !!T10&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10)), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10);" />
      <MemberSignature Language="F#" Value="static member Deconstruct : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 -&gt; unit" Usage="System.TupleExtensions.Deconstruct (value, item1, item2, item3, item4, item5, item6, item7, item8, item9, item10)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1" RefType="out" />
        <Parameter Name="item2" Type="T2" RefType="out" />
        <Parameter Name="item3" Type="T3" RefType="out" />
        <Parameter Name="item4" Type="T4" RefType="out" />
        <Parameter Name="item5" Type="T5" RefType="out" />
        <Parameter Name="item6" Type="T6" RefType="out" />
        <Parameter Name="item7" Type="T7" RefType="out" />
        <Parameter Name="item8" Type="T8" RefType="out" />
        <Parameter Name="item9" Type="T9" RefType="out" />
        <Parameter Name="item10" Type="T10" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型。</typeparam>
        <typeparam name="T9">第 9 个元素的类型。</typeparam>
        <typeparam name="T10">第 10 个元素的类型。</typeparam>
        <param name="value">要解构为 10 个不同变量的 10 元素元组。</param>
        <param name="item1">第 1 个元素的值。</param>
        <param name="item2">第 2 个元素的值。</param>
        <param name="item3">第 3 个元素的值。</param>
        <param name="item4">第 4 个元素的值。</param>
        <param name="item5">第 5 个元素的值。</param>
        <param name="item6">第 6 个元素的值。</param>
        <param name="item7">第 7 个元素的值。</param>
        <param name="item8">第 8 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item1" />。</param>
        <param name="item9">第 9 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item2" />。</param>
        <param name="item10">第 10 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item3" />。</param>
        <summary>将具有 10 个元素的元组解构为不同的变量。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要用于支持 c # 中的元组语言功能。  
  
 由于 .NET Framework 元组类型通过在中嵌套元组来实现具有超过7个元素的元组 <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType> ，因此，  `item8` 通过 `item10` 是嵌套元组的元素。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11&gt;) value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`4&lt;!!T8, !!T9, !!T10, !!T11&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11)), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10, ByRef item11 As T11)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10, [Runtime::InteropServices::Out] T11 % item11);" />
      <MemberSignature Language="F#" Value="static member Deconstruct : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 -&gt; unit" Usage="System.TupleExtensions.Deconstruct (value, item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1" RefType="out" />
        <Parameter Name="item2" Type="T2" RefType="out" />
        <Parameter Name="item3" Type="T3" RefType="out" />
        <Parameter Name="item4" Type="T4" RefType="out" />
        <Parameter Name="item5" Type="T5" RefType="out" />
        <Parameter Name="item6" Type="T6" RefType="out" />
        <Parameter Name="item7" Type="T7" RefType="out" />
        <Parameter Name="item8" Type="T8" RefType="out" />
        <Parameter Name="item9" Type="T9" RefType="out" />
        <Parameter Name="item10" Type="T10" RefType="out" />
        <Parameter Name="item11" Type="T11" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型。</typeparam>
        <typeparam name="T9">第 9 个元素的类型。</typeparam>
        <typeparam name="T10">第 10 个元素的类型。</typeparam>
        <typeparam name="T11">第 11 个元素的类型。</typeparam>
        <param name="value">要解构为 11 个不同变量的 11 元素元组。</param>
        <param name="item1">第 1 个元素的值。</param>
        <param name="item2">第 2 个元素的值。</param>
        <param name="item3">第 3 个元素的值。</param>
        <param name="item4">第 4 个元素的值。</param>
        <param name="item5">第 5 个元素的值。</param>
        <param name="item6">第 6 个元素的值。</param>
        <param name="item7">第 7 个元素的值。</param>
        <param name="item8">第 8 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item1" />。</param>
        <param name="item9">第 9 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item2" />。</param>
        <param name="item10">第 10 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item3" />。</param>
        <param name="item11">第 11 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item4" />。</param>
        <summary>将具有 11 个元素的元组解构为不同的变量。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要用于支持 c # 中的元组语言功能。  
  
 由于 .NET Framework 元组类型通过在中嵌套元组来实现具有超过7个元素的元组 <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType> ，因此，  `item8` 通过 `item11` 是嵌套元组的元素。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12&gt;) value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`5&lt;!!T8, !!T9, !!T10, !!T11, !!T12&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12)), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10, ByRef item11 As T11, ByRef item12 As T12)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10, [Runtime::InteropServices::Out] T11 % item11, [Runtime::InteropServices::Out] T12 % item12);" />
      <MemberSignature Language="F#" Value="static member Deconstruct : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 -&gt; unit" Usage="System.TupleExtensions.Deconstruct (value, item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1" RefType="out" />
        <Parameter Name="item2" Type="T2" RefType="out" />
        <Parameter Name="item3" Type="T3" RefType="out" />
        <Parameter Name="item4" Type="T4" RefType="out" />
        <Parameter Name="item5" Type="T5" RefType="out" />
        <Parameter Name="item6" Type="T6" RefType="out" />
        <Parameter Name="item7" Type="T7" RefType="out" />
        <Parameter Name="item8" Type="T8" RefType="out" />
        <Parameter Name="item9" Type="T9" RefType="out" />
        <Parameter Name="item10" Type="T10" RefType="out" />
        <Parameter Name="item11" Type="T11" RefType="out" />
        <Parameter Name="item12" Type="T12" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型。</typeparam>
        <typeparam name="T9">第 9 个元素的类型。</typeparam>
        <typeparam name="T10">第 10 个元素的类型。</typeparam>
        <typeparam name="T11">第 11 个元素的类型。</typeparam>
        <typeparam name="T12">第 12 个元素的类型。</typeparam>
        <param name="value">要解构为 12 个不同变量的 12 元素元组。</param>
        <param name="item1">第 1 个元素的值。</param>
        <param name="item2">第 2 个元素的值。</param>
        <param name="item3">第 3 个元素的值。</param>
        <param name="item4">第 4 个元素的值。</param>
        <param name="item5">第 5 个元素的值。</param>
        <param name="item6">第 6 个元素的值。</param>
        <param name="item7">第 7 个元素的值。</param>
        <param name="item8">第 8 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item1" />。</param>
        <param name="item9">第 9 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item2" />。</param>
        <param name="item10">第 10 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item3" />。</param>
        <param name="item11">第 11 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item4" />。</param>
        <param name="item12">第 12 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item5" />。</param>
        <summary>将具有 12 个元素的元组解构为不同的变量。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要用于支持 c # 中的元组语言功能。  
  
 由于 .NET Framework 元组类型通过在中嵌套元组来实现具有超过7个元素的元组 <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType> ，因此，  `item8` 通过 `item12` 是嵌套元组的元素。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13&gt;) value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`6&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13)), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10, ByRef item11 As T11, ByRef item12 As T12, ByRef item13 As T13)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10, [Runtime::InteropServices::Out] T11 % item11, [Runtime::InteropServices::Out] T12 % item12, [Runtime::InteropServices::Out] T13 % item13);" />
      <MemberSignature Language="F#" Value="static member Deconstruct : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 -&gt; unit" Usage="System.TupleExtensions.Deconstruct (value, item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12, item13)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1" RefType="out" />
        <Parameter Name="item2" Type="T2" RefType="out" />
        <Parameter Name="item3" Type="T3" RefType="out" />
        <Parameter Name="item4" Type="T4" RefType="out" />
        <Parameter Name="item5" Type="T5" RefType="out" />
        <Parameter Name="item6" Type="T6" RefType="out" />
        <Parameter Name="item7" Type="T7" RefType="out" />
        <Parameter Name="item8" Type="T8" RefType="out" />
        <Parameter Name="item9" Type="T9" RefType="out" />
        <Parameter Name="item10" Type="T10" RefType="out" />
        <Parameter Name="item11" Type="T11" RefType="out" />
        <Parameter Name="item12" Type="T12" RefType="out" />
        <Parameter Name="item13" Type="T13" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型。</typeparam>
        <typeparam name="T9">第 9 个元素的类型。</typeparam>
        <typeparam name="T10">第 10 个元素的类型。</typeparam>
        <typeparam name="T11">第 11 个元素的类型。</typeparam>
        <typeparam name="T12">第 12 个元素的类型。</typeparam>
        <typeparam name="T13">第 13 个元素的类型。</typeparam>
        <param name="value">要解构为 13 个不同变量的 13 元素元组。</param>
        <param name="item1">第 1 个元素的值。</param>
        <param name="item2">第 2 个元素的值。</param>
        <param name="item3">第 3 个元素的值。</param>
        <param name="item4">第 4 个元素的值。</param>
        <param name="item5">第 5 个元素的值。</param>
        <param name="item6">第 6 个元素的值。</param>
        <param name="item7">第 7 个元素的值。</param>
        <param name="item8">第 8 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item1" />。</param>
        <param name="item9">第 9 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item2" />。</param>
        <param name="item10">第 10 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item3" />。</param>
        <param name="item11">第 11 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item4" />。</param>
        <param name="item12">第 12 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item5" />。</param>
        <param name="item13">第 13 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item6" />。</param>
        <summary>将具有 13 个元素的元组解构为不同的变量。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要用于支持 c # 中的元组语言功能。  
  
 由于 .NET Framework 元组类型通过在中嵌套元组来实现具有超过7个元素的元组 <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType> ，因此，  `item8` 通过 `item13` 是嵌套元组的元素。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;) value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`7&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14)), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10, ByRef item11 As T11, ByRef item12 As T12, ByRef item13 As T13, ByRef item14 As T14)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10, [Runtime::InteropServices::Out] T11 % item11, [Runtime::InteropServices::Out] T12 % item12, [Runtime::InteropServices::Out] T13 % item13, [Runtime::InteropServices::Out] T14 % item14);" />
      <MemberSignature Language="F#" Value="static member Deconstruct : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 -&gt; unit" Usage="System.TupleExtensions.Deconstruct (value, item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12, item13, item14)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1" RefType="out" />
        <Parameter Name="item2" Type="T2" RefType="out" />
        <Parameter Name="item3" Type="T3" RefType="out" />
        <Parameter Name="item4" Type="T4" RefType="out" />
        <Parameter Name="item5" Type="T5" RefType="out" />
        <Parameter Name="item6" Type="T6" RefType="out" />
        <Parameter Name="item7" Type="T7" RefType="out" />
        <Parameter Name="item8" Type="T8" RefType="out" />
        <Parameter Name="item9" Type="T9" RefType="out" />
        <Parameter Name="item10" Type="T10" RefType="out" />
        <Parameter Name="item11" Type="T11" RefType="out" />
        <Parameter Name="item12" Type="T12" RefType="out" />
        <Parameter Name="item13" Type="T13" RefType="out" />
        <Parameter Name="item14" Type="T14" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型。</typeparam>
        <typeparam name="T9">第 9 个元素的类型。</typeparam>
        <typeparam name="T10">第 10 个元素的类型。</typeparam>
        <typeparam name="T11">第 11 个元素的类型。</typeparam>
        <typeparam name="T12">第 12 个元素的类型。</typeparam>
        <typeparam name="T13">第 13 个元素的类型。</typeparam>
        <typeparam name="T14">第 14 个元素的类型。</typeparam>
        <param name="value">要解构为 14 个不同变量的 14 元素元组。</param>
        <param name="item1">第 1 个元素的值。</param>
        <param name="item2">第 2 个元素的值。</param>
        <param name="item3">第 3 个元素的值。</param>
        <param name="item4">第 4 个元素的值。</param>
        <param name="item5">第 5 个元素的值。</param>
        <param name="item6">第 6 个元素的值。</param>
        <param name="item7">第 7 个元素的值。</param>
        <param name="item8">第 8 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item1" />。</param>
        <param name="item9">第 9 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item2" />。</param>
        <param name="item10">第 10 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item3" />。</param>
        <param name="item11">第 11 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item4" />。</param>
        <param name="item12">第 12 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item5" />。</param>
        <param name="item13">第 13 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item6" />。</param>
        <param name="item14">第 14 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item7" />。</param>
        <summary>将具有 14 个元素的元组解构为不同的变量。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15&gt;&gt;) value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14, out T15 item15);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`1&lt;!!T15&gt;&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14, [out] !!T15&amp; item15) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15))), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10, ByRef item11 As T11, ByRef item12 As T12, ByRef item13 As T13, ByRef item14 As T14, ByRef item15 As T15)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15&gt; ^&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10, [Runtime::InteropServices::Out] T11 % item11, [Runtime::InteropServices::Out] T12 % item12, [Runtime::InteropServices::Out] T13 % item13, [Runtime::InteropServices::Out] T14 % item14, [Runtime::InteropServices::Out] T15 % item15);" />
      <MemberSignature Language="F#" Value="static member Deconstruct : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 -&gt; unit" Usage="System.TupleExtensions.Deconstruct (value, item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12, item13, item14, item15)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15&gt;&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1" RefType="out" />
        <Parameter Name="item2" Type="T2" RefType="out" />
        <Parameter Name="item3" Type="T3" RefType="out" />
        <Parameter Name="item4" Type="T4" RefType="out" />
        <Parameter Name="item5" Type="T5" RefType="out" />
        <Parameter Name="item6" Type="T6" RefType="out" />
        <Parameter Name="item7" Type="T7" RefType="out" />
        <Parameter Name="item8" Type="T8" RefType="out" />
        <Parameter Name="item9" Type="T9" RefType="out" />
        <Parameter Name="item10" Type="T10" RefType="out" />
        <Parameter Name="item11" Type="T11" RefType="out" />
        <Parameter Name="item12" Type="T12" RefType="out" />
        <Parameter Name="item13" Type="T13" RefType="out" />
        <Parameter Name="item14" Type="T14" RefType="out" />
        <Parameter Name="item15" Type="T15" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型。</typeparam>
        <typeparam name="T9">第 9 个元素的类型。</typeparam>
        <typeparam name="T10">第 10 个元素的类型。</typeparam>
        <typeparam name="T11">第 11 个元素的类型。</typeparam>
        <typeparam name="T12">第 12 个元素的类型。</typeparam>
        <typeparam name="T13">第 13 个元素的类型。</typeparam>
        <typeparam name="T14">第 14 个元素的类型。</typeparam>
        <typeparam name="T15">第 15 个元素的类型。</typeparam>
        <param name="value">要解构为 15 个不同变量的 15 元素元组。</param>
        <param name="item1">第 1 个元素的值。</param>
        <param name="item2">第 2 个元素的值。</param>
        <param name="item3">第 3 个元素的值。</param>
        <param name="item4">第 4 个元素的值。</param>
        <param name="item5">第 5 个元素的值。</param>
        <param name="item6">第 6 个元素的值。</param>
        <param name="item7">第 7 个元素的值。</param>
        <param name="item8">第 8 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item1" />。</param>
        <param name="item9">第 9 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item2" />。</param>
        <param name="item10">第 10 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item3" />。</param>
        <param name="item11">第 11 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item4" />。</param>
        <param name="item12">第 12 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item5" />。</param>
        <param name="item13">第 13 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item6" />。</param>
        <param name="item14">第 14 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item7" />。</param>
        <param name="item15">第 15 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item1" />。</param>
        <summary>将具有 15 个元素的元组解构为不同的变量。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要用于支持 c # 中的元组语言功能。  
  
 由于 .NET Framework 元组类型通过在中嵌套元组来实现具有超过7个元素的元组 <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType> ，因此，  `item8` 通过 `item15` 是嵌套元组的元素。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16&gt;&gt;) value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14, out T15 item15, out T16 item16);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`2&lt;!!T15, !!T16&gt;&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14, [out] !!T15&amp; item15, [out] !!T16&amp; item16) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16))), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10, ByRef item11 As T11, ByRef item12 As T12, ByRef item13 As T13, ByRef item14 As T14, ByRef item15 As T15, ByRef item16 As T16)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16&gt; ^&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10, [Runtime::InteropServices::Out] T11 % item11, [Runtime::InteropServices::Out] T12 % item12, [Runtime::InteropServices::Out] T13 % item13, [Runtime::InteropServices::Out] T14 % item14, [Runtime::InteropServices::Out] T15 % item15, [Runtime::InteropServices::Out] T16 % item16);" />
      <MemberSignature Language="F#" Value="static member Deconstruct : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 -&gt; unit" Usage="System.TupleExtensions.Deconstruct (value, item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12, item13, item14, item15, item16)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16&gt;&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1" RefType="out" />
        <Parameter Name="item2" Type="T2" RefType="out" />
        <Parameter Name="item3" Type="T3" RefType="out" />
        <Parameter Name="item4" Type="T4" RefType="out" />
        <Parameter Name="item5" Type="T5" RefType="out" />
        <Parameter Name="item6" Type="T6" RefType="out" />
        <Parameter Name="item7" Type="T7" RefType="out" />
        <Parameter Name="item8" Type="T8" RefType="out" />
        <Parameter Name="item9" Type="T9" RefType="out" />
        <Parameter Name="item10" Type="T10" RefType="out" />
        <Parameter Name="item11" Type="T11" RefType="out" />
        <Parameter Name="item12" Type="T12" RefType="out" />
        <Parameter Name="item13" Type="T13" RefType="out" />
        <Parameter Name="item14" Type="T14" RefType="out" />
        <Parameter Name="item15" Type="T15" RefType="out" />
        <Parameter Name="item16" Type="T16" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型。</typeparam>
        <typeparam name="T9">第 9 个元素的类型。</typeparam>
        <typeparam name="T10">第 10 个元素的类型。</typeparam>
        <typeparam name="T11">第 11 个元素的类型。</typeparam>
        <typeparam name="T12">第 12 个元素的类型。</typeparam>
        <typeparam name="T13">第 13 个元素的类型。</typeparam>
        <typeparam name="T14">第 14 个元素的类型。</typeparam>
        <typeparam name="T15">第 15 个元素的类型。</typeparam>
        <typeparam name="T16">第 16 个元素的类型。</typeparam>
        <param name="value">要解构为 16 个不同变量的 16 元素元组。</param>
        <param name="item1">第 1 个元素的值。</param>
        <param name="item2">第 2 个元素的值。</param>
        <param name="item3">第 3 个元素的值。</param>
        <param name="item4">第 4 个元素的值。</param>
        <param name="item5">第 5 个元素的值。</param>
        <param name="item6">第 6 个元素的值。</param>
        <param name="item7">第 7 个元素的值。</param>
        <param name="item8">第 8 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item1" />。</param>
        <param name="item9">第 9 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item2" />。</param>
        <param name="item10">第 10 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item3" />。</param>
        <param name="item11">第 11 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item4" />。</param>
        <param name="item12">第 12 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item5" />。</param>
        <param name="item13">第 13 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item6" />。</param>
        <param name="item14">第 14 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item7" />。</param>
        <param name="item15">第 15 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item1" />。</param>
        <param name="item16">第 16 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item2" />。</param>
        <summary>将具有 16 个元素的元组解构为不同的变量。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要用于支持 c # 中的元组语言功能。  
  
 由于 .NET Framework 元组类型通过在中嵌套元组来实现具有超过7个元素的元组 <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType> ，因此，  `item8` 通过 `item16` 是嵌套元组的元素。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17&gt;&gt;) value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14, out T15 item15, out T16 item16, out T17 item17);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`3&lt;!!T15, !!T16, !!T17&gt;&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14, [out] !!T15&amp; item15, [out] !!T16&amp; item16, [out] !!T17&amp; item17) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17))), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10, ByRef item11 As T11, ByRef item12 As T12, ByRef item13 As T13, ByRef item14 As T14, ByRef item15 As T15, ByRef item16 As T16, ByRef item17 As T17)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17&gt; ^&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10, [Runtime::InteropServices::Out] T11 % item11, [Runtime::InteropServices::Out] T12 % item12, [Runtime::InteropServices::Out] T13 % item13, [Runtime::InteropServices::Out] T14 % item14, [Runtime::InteropServices::Out] T15 % item15, [Runtime::InteropServices::Out] T16 % item16, [Runtime::InteropServices::Out] T17 % item17);" />
      <MemberSignature Language="F#" Value="static member Deconstruct : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * 'T17 * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * 'T17 -&gt; unit" Usage="System.TupleExtensions.Deconstruct (value, item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12, item13, item14, item15, item16, item17)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17&gt;&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1" RefType="out" />
        <Parameter Name="item2" Type="T2" RefType="out" />
        <Parameter Name="item3" Type="T3" RefType="out" />
        <Parameter Name="item4" Type="T4" RefType="out" />
        <Parameter Name="item5" Type="T5" RefType="out" />
        <Parameter Name="item6" Type="T6" RefType="out" />
        <Parameter Name="item7" Type="T7" RefType="out" />
        <Parameter Name="item8" Type="T8" RefType="out" />
        <Parameter Name="item9" Type="T9" RefType="out" />
        <Parameter Name="item10" Type="T10" RefType="out" />
        <Parameter Name="item11" Type="T11" RefType="out" />
        <Parameter Name="item12" Type="T12" RefType="out" />
        <Parameter Name="item13" Type="T13" RefType="out" />
        <Parameter Name="item14" Type="T14" RefType="out" />
        <Parameter Name="item15" Type="T15" RefType="out" />
        <Parameter Name="item16" Type="T16" RefType="out" />
        <Parameter Name="item17" Type="T17" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型。</typeparam>
        <typeparam name="T9">第 9 个元素的类型。</typeparam>
        <typeparam name="T10">第 10 个元素的类型。</typeparam>
        <typeparam name="T11">第 11 个元素的类型。</typeparam>
        <typeparam name="T12">第 12 个元素的类型。</typeparam>
        <typeparam name="T13">第 13 个元素的类型。</typeparam>
        <typeparam name="T14">第 14 个元素的类型。</typeparam>
        <typeparam name="T15">第 15 个元素的类型。</typeparam>
        <typeparam name="T16">第 16 个元素的类型。</typeparam>
        <typeparam name="T17">第 17 个元素的类型。</typeparam>
        <param name="value">要解构为 17 个不同变量的 17 元素元组。</param>
        <param name="item1">第 1 个元素的值。</param>
        <param name="item2">第 2 个元素的值。</param>
        <param name="item3">第 3 个元素的值。</param>
        <param name="item4">第 4 个元素的值。</param>
        <param name="item5">第 5 个元素的值。</param>
        <param name="item6">第 6 个元素的值。</param>
        <param name="item7">第 7 个元素的值。</param>
        <param name="item8">第 8 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item1" />。</param>
        <param name="item9">第 9 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item2" />。</param>
        <param name="item10">第 10 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item3" />。</param>
        <param name="item11">第 11 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item4" />。</param>
        <param name="item12">第 12 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item5" />。</param>
        <param name="item13">第 13 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item6" />。</param>
        <param name="item14">第 14 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item7" />。</param>
        <param name="item15">第 15 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item1" />。</param>
        <param name="item16">第 16 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item2" />。</param>
        <param name="item17">第 17 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item3" />。</param>
        <summary>将具有 17 个元素的元组解构为不同的变量。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要用于支持 c # 中的元组语言功能。  
  
 由于 .NET Framework 元组类型通过在中嵌套元组来实现具有超过7个元素的元组 <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType> ，因此，  `item8` 通过 `item17` 是嵌套元组的元素。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18&gt;&gt;) value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14, out T15 item15, out T16 item16, out T17 item17, out T18 item18);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`4&lt;!!T15, !!T16, !!T17, !!T18&gt;&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14, [out] !!T15&amp; item15, [out] !!T16&amp; item16, [out] !!T17&amp; item17, [out] !!T18&amp; item18) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18))), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10, ByRef item11 As T11, ByRef item12 As T12, ByRef item13 As T13, ByRef item14 As T14, ByRef item15 As T15, ByRef item16 As T16, ByRef item17 As T17, ByRef item18 As T18)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18&gt; ^&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10, [Runtime::InteropServices::Out] T11 % item11, [Runtime::InteropServices::Out] T12 % item12, [Runtime::InteropServices::Out] T13 % item13, [Runtime::InteropServices::Out] T14 % item14, [Runtime::InteropServices::Out] T15 % item15, [Runtime::InteropServices::Out] T16 % item16, [Runtime::InteropServices::Out] T17 % item17, [Runtime::InteropServices::Out] T18 % item18);" />
      <MemberSignature Language="F#" Value="static member Deconstruct : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * 'T17 * 'T18 * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * 'T17 * 'T18 -&gt; unit" Usage="System.TupleExtensions.Deconstruct (value, item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12, item13, item14, item15, item16, item17, item18)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18&gt;&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1" RefType="out" />
        <Parameter Name="item2" Type="T2" RefType="out" />
        <Parameter Name="item3" Type="T3" RefType="out" />
        <Parameter Name="item4" Type="T4" RefType="out" />
        <Parameter Name="item5" Type="T5" RefType="out" />
        <Parameter Name="item6" Type="T6" RefType="out" />
        <Parameter Name="item7" Type="T7" RefType="out" />
        <Parameter Name="item8" Type="T8" RefType="out" />
        <Parameter Name="item9" Type="T9" RefType="out" />
        <Parameter Name="item10" Type="T10" RefType="out" />
        <Parameter Name="item11" Type="T11" RefType="out" />
        <Parameter Name="item12" Type="T12" RefType="out" />
        <Parameter Name="item13" Type="T13" RefType="out" />
        <Parameter Name="item14" Type="T14" RefType="out" />
        <Parameter Name="item15" Type="T15" RefType="out" />
        <Parameter Name="item16" Type="T16" RefType="out" />
        <Parameter Name="item17" Type="T17" RefType="out" />
        <Parameter Name="item18" Type="T18" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型。</typeparam>
        <typeparam name="T9">第 9 个元素的类型。</typeparam>
        <typeparam name="T10">第 10 个元素的类型。</typeparam>
        <typeparam name="T11">第 11 个元素的类型。</typeparam>
        <typeparam name="T12">第 12 个元素的类型。</typeparam>
        <typeparam name="T13">第 13 个元素的类型。</typeparam>
        <typeparam name="T14">第 14 个元素的类型。</typeparam>
        <typeparam name="T15">第 15 个元素的类型。</typeparam>
        <typeparam name="T16">第 16 个元素的类型。</typeparam>
        <typeparam name="T17">第 17 个元素的类型。</typeparam>
        <typeparam name="T18">第 18 个元素的类型。</typeparam>
        <param name="value">要解构为 18 个不同变量的 18 元素元组。</param>
        <param name="item1">第 1 个元素的值。</param>
        <param name="item2">第 2 个元素的值。</param>
        <param name="item3">第 3 个元素的值。</param>
        <param name="item4">第 4 个元素的值。</param>
        <param name="item5">第 5 个元素的值。</param>
        <param name="item6">第 6 个元素的值。</param>
        <param name="item7">第 7 个元素的值。</param>
        <param name="item8">第 8 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item1" />。</param>
        <param name="item9">第 9 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item2" />。</param>
        <param name="item10">第 10 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item3" />。</param>
        <param name="item11">第 11 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item4" />。</param>
        <param name="item12">第 12 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item5" />。</param>
        <param name="item13">第 13 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item6" />。</param>
        <param name="item14">第 14 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item7" />。</param>
        <param name="item15">第 15 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item1" />。</param>
        <param name="item16">第 16 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item2" />。</param>
        <param name="item17">第 17 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item3" />。</param>
        <param name="item18">第 18 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item4" />。</param>
        <summary>将具有 18 个元素的元组解构为不同的变量。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要用于支持 c # 中的元组语言功能。  
  
 由于 .NET Framework 元组类型通过在中嵌套元组来实现具有超过7个元素的元组 <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType> ，因此，  `item8` 通过 `item18` 是嵌套元组的元素。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19&gt;&gt;) value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14, out T15 item15, out T16 item16, out T17 item17, out T18 item18, out T19 item19);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`5&lt;!!T15, !!T16, !!T17, !!T18, !!T19&gt;&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14, [out] !!T15&amp; item15, [out] !!T16&amp; item16, [out] !!T17&amp; item17, [out] !!T18&amp; item18, [out] !!T19&amp; item19) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18, T19))), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10, ByRef item11 As T11, ByRef item12 As T12, ByRef item13 As T13, ByRef item14 As T14, ByRef item15 As T15, ByRef item16 As T16, ByRef item17 As T17, ByRef item18 As T18, ByRef item19 As T19)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18, typename T19&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19&gt; ^&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10, [Runtime::InteropServices::Out] T11 % item11, [Runtime::InteropServices::Out] T12 % item12, [Runtime::InteropServices::Out] T13 % item13, [Runtime::InteropServices::Out] T14 % item14, [Runtime::InteropServices::Out] T15 % item15, [Runtime::InteropServices::Out] T16 % item16, [Runtime::InteropServices::Out] T17 % item17, [Runtime::InteropServices::Out] T18 % item18, [Runtime::InteropServices::Out] T19 % item19);" />
      <MemberSignature Language="F#" Value="static member Deconstruct : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * 'T17 * 'T18 * 'T19 * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * 'T17 * 'T18 * 'T19 -&gt; unit" Usage="System.TupleExtensions.Deconstruct (value, item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12, item13, item14, item15, item16, item17, item18, item19)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1" RefType="out" />
        <Parameter Name="item2" Type="T2" RefType="out" />
        <Parameter Name="item3" Type="T3" RefType="out" />
        <Parameter Name="item4" Type="T4" RefType="out" />
        <Parameter Name="item5" Type="T5" RefType="out" />
        <Parameter Name="item6" Type="T6" RefType="out" />
        <Parameter Name="item7" Type="T7" RefType="out" />
        <Parameter Name="item8" Type="T8" RefType="out" />
        <Parameter Name="item9" Type="T9" RefType="out" />
        <Parameter Name="item10" Type="T10" RefType="out" />
        <Parameter Name="item11" Type="T11" RefType="out" />
        <Parameter Name="item12" Type="T12" RefType="out" />
        <Parameter Name="item13" Type="T13" RefType="out" />
        <Parameter Name="item14" Type="T14" RefType="out" />
        <Parameter Name="item15" Type="T15" RefType="out" />
        <Parameter Name="item16" Type="T16" RefType="out" />
        <Parameter Name="item17" Type="T17" RefType="out" />
        <Parameter Name="item18" Type="T18" RefType="out" />
        <Parameter Name="item19" Type="T19" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型。</typeparam>
        <typeparam name="T9">第 9 个元素的类型。</typeparam>
        <typeparam name="T10">第 10 个元素的类型。</typeparam>
        <typeparam name="T11">第 11 个元素的类型。</typeparam>
        <typeparam name="T12">第 12 个元素的类型。</typeparam>
        <typeparam name="T13">第 13 个元素的类型。</typeparam>
        <typeparam name="T14">第 14 个元素的类型。</typeparam>
        <typeparam name="T15">第 15 个元素的类型。</typeparam>
        <typeparam name="T16">第 16 个元素的类型。</typeparam>
        <typeparam name="T17">第 17 个元素的类型。</typeparam>
        <typeparam name="T18">第 18 个元素的类型。</typeparam>
        <typeparam name="T19">第 19 个元素的类型。</typeparam>
        <param name="value">要解构为 19 个不同变量的 19 元素元组。</param>
        <param name="item1">第 1 个元素的值。</param>
        <param name="item2">第 2 个元素的值。</param>
        <param name="item3">第 3 个元素的值。</param>
        <param name="item4">第 4 个元素的值。</param>
        <param name="item5">第 5 个元素的值。</param>
        <param name="item6">第 6 个元素的值。</param>
        <param name="item7">第 7 个元素的值。</param>
        <param name="item8">第 8 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item1" />。</param>
        <param name="item9">第 9 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item2" />。</param>
        <param name="item10">第 10 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item3" />。</param>
        <param name="item11">第 11 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item4" />。</param>
        <param name="item12">第 12 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item5" />。</param>
        <param name="item13">第 13 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item6" />。</param>
        <param name="item14">第 14 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item7" />。</param>
        <param name="item15">第 15 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item1" />。</param>
        <param name="item16">第 16 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item2" />。</param>
        <param name="item17">第 17 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item3" />。</param>
        <param name="item18">第 18 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item4" />。</param>
        <param name="item19">第 19 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item5" />。</param>
        <summary>将具有 19 个元素的元组解构为不同的变量。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要用于支持 c # 中的元组语言功能。  
  
 由于 .NET Framework 元组类型通过在中嵌套元组来实现具有超过7个元素的元组 <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType> ，因此，  `item8` 通过 `item19` 是嵌套元组的元素。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;) value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14, out T15 item15, out T16 item16, out T17 item17, out T18 item18, out T19 item19, out T20 item20);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`6&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20&gt;&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14, [out] !!T15&amp; item15, [out] !!T16&amp; item16, [out] !!T17&amp; item17, [out] !!T18&amp; item18, [out] !!T19&amp; item19, [out] !!T20&amp; item20) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18, T19, T20))), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10, ByRef item11 As T11, ByRef item12 As T12, ByRef item13 As T13, ByRef item14 As T14, ByRef item15 As T15, ByRef item16 As T16, ByRef item17 As T17, ByRef item18 As T18, ByRef item19 As T19, ByRef item20 As T20)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18, typename T19, typename T20&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20&gt; ^&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10, [Runtime::InteropServices::Out] T11 % item11, [Runtime::InteropServices::Out] T12 % item12, [Runtime::InteropServices::Out] T13 % item13, [Runtime::InteropServices::Out] T14 % item14, [Runtime::InteropServices::Out] T15 % item15, [Runtime::InteropServices::Out] T16 % item16, [Runtime::InteropServices::Out] T17 % item17, [Runtime::InteropServices::Out] T18 % item18, [Runtime::InteropServices::Out] T19 % item19, [Runtime::InteropServices::Out] T20 % item20);" />
      <MemberSignature Language="F#" Value="static member Deconstruct : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * 'T17 * 'T18 * 'T19 * 'T20 * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * 'T17 * 'T18 * 'T19 * 'T20 -&gt; unit" Usage="System.TupleExtensions.Deconstruct (value, item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12, item13, item14, item15, item16, item17, item18, item19, item20)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
        <TypeParameter Name="T20" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1" RefType="out" />
        <Parameter Name="item2" Type="T2" RefType="out" />
        <Parameter Name="item3" Type="T3" RefType="out" />
        <Parameter Name="item4" Type="T4" RefType="out" />
        <Parameter Name="item5" Type="T5" RefType="out" />
        <Parameter Name="item6" Type="T6" RefType="out" />
        <Parameter Name="item7" Type="T7" RefType="out" />
        <Parameter Name="item8" Type="T8" RefType="out" />
        <Parameter Name="item9" Type="T9" RefType="out" />
        <Parameter Name="item10" Type="T10" RefType="out" />
        <Parameter Name="item11" Type="T11" RefType="out" />
        <Parameter Name="item12" Type="T12" RefType="out" />
        <Parameter Name="item13" Type="T13" RefType="out" />
        <Parameter Name="item14" Type="T14" RefType="out" />
        <Parameter Name="item15" Type="T15" RefType="out" />
        <Parameter Name="item16" Type="T16" RefType="out" />
        <Parameter Name="item17" Type="T17" RefType="out" />
        <Parameter Name="item18" Type="T18" RefType="out" />
        <Parameter Name="item19" Type="T19" RefType="out" />
        <Parameter Name="item20" Type="T20" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型。</typeparam>
        <typeparam name="T9">第 9 个元素的类型。</typeparam>
        <typeparam name="T10">第 10 个元素的类型。</typeparam>
        <typeparam name="T11">第 11 个元素的类型。</typeparam>
        <typeparam name="T12">第 12 个元素的类型。</typeparam>
        <typeparam name="T13">第 13 个元素的类型。</typeparam>
        <typeparam name="T14">第 14 个元素的类型。</typeparam>
        <typeparam name="T15">第 15 个元素的类型。</typeparam>
        <typeparam name="T16">第 16 个元素的类型。</typeparam>
        <typeparam name="T17">第 17 个元素的类型。</typeparam>
        <typeparam name="T18">第 18 个元素的类型。</typeparam>
        <typeparam name="T19">第 19 个元素的类型。</typeparam>
        <typeparam name="T20">第 20 个元素的类型。</typeparam>
        <param name="value">要解构为 20 个不同变量的 20 元素元组。</param>
        <param name="item1">第 1 个元素的值。</param>
        <param name="item2">第 2 个元素的值。</param>
        <param name="item3">第 3 个元素的值。</param>
        <param name="item4">第 4 个元素的值。</param>
        <param name="item5">第 5 个元素的值。</param>
        <param name="item6">第 6 个元素的值。</param>
        <param name="item7">第 7 个元素的值。</param>
        <param name="item8">第 8 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item1" />。</param>
        <param name="item9">第 9 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item2" />。</param>
        <param name="item10">第 10 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item3" />。</param>
        <param name="item11">第 11 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item4" />。</param>
        <param name="item12">第 12 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item5" />。</param>
        <param name="item13">第 13 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item6" />。</param>
        <param name="item14">第 14 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item7" />。</param>
        <param name="item15">第 15 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item1" />。</param>
        <param name="item16">第 16 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item2" />。</param>
        <param name="item17">第 17 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item3" />。</param>
        <param name="item18">第 18 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item4" />。</param>
        <param name="item19">第 19 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item5" />。</param>
        <param name="item20">第 20 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item6" />。</param>
        <summary>将具有 20 个元素的元组解构为不同的变量。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})" />
      </Docs>
    </Member>
    <Member MemberName="Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21&gt;">
      <MemberSignature Language="C#" Value="public static void Deconstruct&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;) value, out T1 item1, out T2 item2, out T3 item3, out T4 item4, out T5 item5, out T6 item6, out T7 item7, out T8 item8, out T9 item9, out T10 item10, out T11 item11, out T12 item12, out T13 item13, out T14 item14, out T15 item15, out T16 item16, out T17 item17, out T18 item18, out T19 item19, out T20 item20, out T21 item21);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Deconstruct&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`7&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20, !!T21&gt;&gt;&gt; value, [out] !!T1&amp; item1, [out] !!T2&amp; item2, [out] !!T3&amp; item3, [out] !!T4&amp; item4, [out] !!T5&amp; item5, [out] !!T6&amp; item6, [out] !!T7&amp; item7, [out] !!T8&amp; item8, [out] !!T9&amp; item9, [out] !!T10&amp; item10, [out] !!T11&amp; item11, [out] !!T12&amp; item12, [out] !!T13&amp; item13, [out] !!T14&amp; item14, [out] !!T15&amp; item15, [out] !!T16&amp; item16, [out] !!T17&amp; item17, [out] !!T18&amp; item18, [out] !!T19&amp; item19, [out] !!T20&amp; item20, [out] !!T21&amp; item21) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.Deconstruct``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Deconstruct(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18, T19, T20, T21))), ByRef item1 As T1, ByRef item2 As T2, ByRef item3 As T3, ByRef item4 As T4, ByRef item5 As T5, ByRef item6 As T6, ByRef item7 As T7, ByRef item8 As T8, ByRef item9 As T9, ByRef item10 As T10, ByRef item11 As T11, ByRef item12 As T12, ByRef item13 As T13, ByRef item14 As T14, ByRef item15 As T15, ByRef item16 As T16, ByRef item17 As T17, ByRef item18 As T18, ByRef item19 As T19, ByRef item20 As T20, ByRef item21 As T21)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18, typename T19, typename T20, typename T21&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Deconstruct(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21&gt; ^&gt; ^&gt; ^ value, [Runtime::InteropServices::Out] T1 % item1, [Runtime::InteropServices::Out] T2 % item2, [Runtime::InteropServices::Out] T3 % item3, [Runtime::InteropServices::Out] T4 % item4, [Runtime::InteropServices::Out] T5 % item5, [Runtime::InteropServices::Out] T6 % item6, [Runtime::InteropServices::Out] T7 % item7, [Runtime::InteropServices::Out] T8 % item8, [Runtime::InteropServices::Out] T9 % item9, [Runtime::InteropServices::Out] T10 % item10, [Runtime::InteropServices::Out] T11 % item11, [Runtime::InteropServices::Out] T12 % item12, [Runtime::InteropServices::Out] T13 % item13, [Runtime::InteropServices::Out] T14 % item14, [Runtime::InteropServices::Out] T15 % item15, [Runtime::InteropServices::Out] T16 % item16, [Runtime::InteropServices::Out] T17 % item17, [Runtime::InteropServices::Out] T18 % item18, [Runtime::InteropServices::Out] T19 % item19, [Runtime::InteropServices::Out] T20 % item20, [Runtime::InteropServices::Out] T21 % item21);" />
      <MemberSignature Language="F#" Value="static member Deconstruct : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * 'T17 * 'T18 * 'T19 * 'T20 * 'T21 * 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * 'T17 * 'T18 * 'T19 * 'T20 * 'T21 -&gt; unit" Usage="System.TupleExtensions.Deconstruct (value, item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12, item13, item14, item15, item16, item17, item18, item19, item20, item21)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1">
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
        <TypeParameter Name="T20" />
        <TypeParameter Name="T21" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt;" RefType="this" />
        <Parameter Name="item1" Type="T1" RefType="out" />
        <Parameter Name="item2" Type="T2" RefType="out" />
        <Parameter Name="item3" Type="T3" RefType="out" />
        <Parameter Name="item4" Type="T4" RefType="out" />
        <Parameter Name="item5" Type="T5" RefType="out" />
        <Parameter Name="item6" Type="T6" RefType="out" />
        <Parameter Name="item7" Type="T7" RefType="out" />
        <Parameter Name="item8" Type="T8" RefType="out" />
        <Parameter Name="item9" Type="T9" RefType="out" />
        <Parameter Name="item10" Type="T10" RefType="out" />
        <Parameter Name="item11" Type="T11" RefType="out" />
        <Parameter Name="item12" Type="T12" RefType="out" />
        <Parameter Name="item13" Type="T13" RefType="out" />
        <Parameter Name="item14" Type="T14" RefType="out" />
        <Parameter Name="item15" Type="T15" RefType="out" />
        <Parameter Name="item16" Type="T16" RefType="out" />
        <Parameter Name="item17" Type="T17" RefType="out" />
        <Parameter Name="item18" Type="T18" RefType="out" />
        <Parameter Name="item19" Type="T19" RefType="out" />
        <Parameter Name="item20" Type="T20" RefType="out" />
        <Parameter Name="item21" Type="T21" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型。</typeparam>
        <typeparam name="T9">第 9 个元素的类型。</typeparam>
        <typeparam name="T10">第 10 个元素的类型。</typeparam>
        <typeparam name="T11">第 11 个元素的类型。</typeparam>
        <typeparam name="T12">第 12 个元素的类型。</typeparam>
        <typeparam name="T13">第 13 个元素的类型。</typeparam>
        <typeparam name="T14">第 14 个元素的类型。</typeparam>
        <typeparam name="T15">第 15 个元素的类型。</typeparam>
        <typeparam name="T16">第 16 个元素的类型。</typeparam>
        <typeparam name="T17">第 17 个元素的类型。</typeparam>
        <typeparam name="T18">第 18 个元素的类型。</typeparam>
        <typeparam name="T19">第 19 个元素的类型。</typeparam>
        <typeparam name="T20">第 20 个元素的类型。</typeparam>
        <typeparam name="T21">第 21 个元素的类型。</typeparam>
        <param name="value">要解构为 21 个不同变量的 21 元素元组。</param>
        <param name="item1">第 1 个元素的值。</param>
        <param name="item2">第 2 个元素的值。</param>
        <param name="item3">第 3 个元素的值。</param>
        <param name="item4">第 4 个元素的值。</param>
        <param name="item5">第 5 个元素的值。</param>
        <param name="item6">第 6 个元素的值。</param>
        <param name="item7">第 7 个元素的值。</param>
        <param name="item8">第 8 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item1" />。</param>
        <param name="item9">第 9 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item2" />。</param>
        <param name="item10">第 10 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item3" />。</param>
        <param name="item11">第 11 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item4" />。</param>
        <param name="item12">第 12 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item5" />。</param>
        <param name="item13">第 13 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item6" />。</param>
        <param name="item14">第 14 个元素的值，或 <paramref name="value" /><see langword=".Rest.Item7" />。</param>
        <param name="item15">第 15 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item1" />。</param>
        <param name="item16">第 16 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item2" />。</param>
        <param name="item17">第 17 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item3" />。</param>
        <param name="item18">第 18 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item4" />。</param>
        <param name="item19">第 19 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item5" />。</param>
        <param name="item20">第 20 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item6" />。</param>
        <param name="item21">第 21 个元素的值，或 <paramref name="value" /><see langword=".Rest.Rest.Item7" />。</param>
        <summary>将具有 21 个元素的元组解构为不同的变量。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要用于支持 c # 中的元组语言功能。  
  
 由于 .NET Framework 元组类型通过在中嵌套元组来实现具有超过7个元素的元组 <xref:System.Tuple%608.Rest%2A?displayProperty=nameWithType> ，因此，  `item8` 通过 `item21` 是嵌套元组的元素。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})" />
        <altmember cref="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToTuple&lt;T1&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将值元组转换为元组。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToTuple&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static (T1) ToTuple&lt;T1&gt; (this (T1) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`1&lt;!!T1&gt; ToTuple&lt;T1&gt;(valuetype System.ValueTuple`1&lt;!!T1&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``1(System.ValueTuple{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1) (value As ValueTuple(Of T1)) As Tuple(Of T1)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1&gt; ^ ToTuple(ValueTuple&lt;T1&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToTuple : ValueTuple&lt;'T1&gt; -&gt; 'T1" Usage="System.TupleExtensions.ToTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <param name="value">要转换为元组的值元组实例。</param>
        <summary>将 <see langword="ValueTuple" /> 结构的实例转换为 <see langword="Tuple" /> 类的实例。</summary>
        <returns>转换后的元组。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``1(System.Tuple{``0})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2) ToTuple&lt;T1,T2&gt; (this (T1,T2) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`2&lt;!!T1, !!T2&gt; ToTuple&lt;T1, T2&gt;(valuetype System.ValueTuple`2&lt;!!T1, !!T2&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``2(System.ValueTuple{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2) (value As ValueTuple(Of T1, T2)) As Tuple(Of T1, T2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2&gt; ^ ToTuple(ValueTuple&lt;T1, T2&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToTuple : ValueTuple&lt;'T1, 'T2&gt; -&gt; 'T1 * 'T2" Usage="System.TupleExtensions.ToTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <param name="value">要转换为元组的值元组实例。</param>
        <summary>将 <see langword="ValueTuple" /> 结构的实例转换为 <see langword="Tuple" /> 类的实例。</summary>
        <returns>转换后的元组。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``2(System.Tuple{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3) ToTuple&lt;T1,T2,T3&gt; (this (T1,T2,T3) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`3&lt;!!T1, !!T2, !!T3&gt; ToTuple&lt;T1, T2, T3&gt;(valuetype System.ValueTuple`3&lt;!!T1, !!T2, !!T3&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``3(System.ValueTuple{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3) (value As ValueTuple(Of T1, T2, T3)) As Tuple(Of T1, T2, T3)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToTuple : ValueTuple&lt;'T1, 'T2, 'T3&gt; -&gt; 'T1 * 'T2 * 'T3" Usage="System.TupleExtensions.ToTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <param name="value">要转换为元组的值元组实例。</param>
        <summary>将 <see langword="ValueTuple" /> 结构的实例转换为 <see langword="Tuple" /> 类的实例。</summary>
        <returns>转换后的元组。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``3(System.Tuple{``0,``1,``2})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4) ToTuple&lt;T1,T2,T3,T4&gt; (this (T1,T2,T3,T4) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`4&lt;!!T1, !!T2, !!T3, !!T4&gt; ToTuple&lt;T1, T2, T3, T4&gt;(valuetype System.ValueTuple`4&lt;!!T1, !!T2, !!T3, !!T4&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``4(System.ValueTuple{``0,``1,``2,``3})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4) (value As ValueTuple(Of T1, T2, T3, T4)) As Tuple(Of T1, T2, T3, T4)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToTuple : ValueTuple&lt;'T1, 'T2, 'T3, 'T4&gt; -&gt; 'T1 * 'T2 * 'T3 * 'T4" Usage="System.TupleExtensions.ToTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <param name="value">要转换为元组的值元组实例。</param>
        <summary>将 <see langword="ValueTuple" /> 结构的实例转换为 <see langword="Tuple" /> 类的实例。</summary>
        <returns>转换后的元组。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``4(System.Tuple{``0,``1,``2,``3})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5) ToTuple&lt;T1,T2,T3,T4,T5&gt; (this (T1,T2,T3,T4,T5) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; ToTuple&lt;T1, T2, T3, T4, T5&gt;(valuetype System.ValueTuple`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``5(System.ValueTuple{``0,``1,``2,``3,``4})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5) (value As ValueTuple(Of T1, T2, T3, T4, T5)) As Tuple(Of T1, T2, T3, T4, T5)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToTuple : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt; -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5" Usage="System.TupleExtensions.ToTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <param name="value">要转换为元组的值元组实例。</param>
        <summary>将 <see langword="ValueTuple" /> 结构的实例转换为 <see langword="Tuple" /> 类的实例。</summary>
        <returns>转换后的元组。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``5(System.Tuple{``0,``1,``2,``3,``4})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6) ToTuple&lt;T1,T2,T3,T4,T5,T6&gt; (this (T1,T2,T3,T4,T5,T6) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6&gt;(valuetype System.ValueTuple`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6)) As Tuple(Of T1, T2, T3, T4, T5, T6)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToTuple : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt; -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6" Usage="System.TupleExtensions.ToTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <param name="value">要转换为元组的值元组实例。</param>
        <summary>将 <see langword="ValueTuple" /> 结构的实例转换为 <see langword="Tuple" /> 类的实例。</summary>
        <returns>转换后的元组。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7) ToTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt; (this (T1,T2,T3,T4,T5,T6,T7) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;(valuetype System.ValueTuple`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7)) As Tuple(Of T1, T2, T3, T4, T5, T6, T7)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToTuple : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt; -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7" Usage="System.TupleExtensions.ToTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <param name="value">要转换为元组的值元组实例。</param>
        <summary>将 <see langword="ValueTuple" /> 结构的实例转换为 <see langword="Tuple" /> 类的实例。</summary>
        <returns>转换后的元组。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8&gt;) ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (this (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`1&lt;!!T8&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`1&lt;!!T8&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8&gt;&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToTuple : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8&gt;&gt; -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8" Usage="System.TupleExtensions.ToTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <param name="value">要转换为元组的值元组实例。</param>
        <summary>将 <see langword="ValueTuple" /> 结构的实例转换为 <see langword="Tuple" /> 类的实例。</summary>
        <returns>转换后的元组。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9&gt;) ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; (this (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`2&lt;!!T8, !!T9&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`2&lt;!!T8, !!T9&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9&gt;&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToTuple : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9&gt;&gt; -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9" Usage="System.TupleExtensions.ToTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <param name="value">要转换为元组的值元组实例。</param>
        <summary>将 <see langword="ValueTuple" /> 结构的实例转换为 <see langword="Tuple" /> 类的实例。</summary>
        <returns>转换后的元组。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10&gt;) ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; (this (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`3&lt;!!T8, !!T9, !!T10&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`3&lt;!!T8, !!T9, !!T10&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10&gt;&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToTuple : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10&gt;&gt; -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10" Usage="System.TupleExtensions.ToTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <param name="value">要转换为元组的值元组实例。</param>
        <summary>将 <see langword="ValueTuple" /> 结构的实例转换为 <see langword="Tuple" /> 类的实例。</summary>
        <returns>转换后的元组。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11&gt;) ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; (this (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`4&lt;!!T8, !!T9, !!T10, !!T11&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`4&lt;!!T8, !!T9, !!T10, !!T11&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11&gt;&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToTuple : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10, 'T11&gt;&gt; -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11" Usage="System.TupleExtensions.ToTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <typeparam name="T11">第 11 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item4" />。</typeparam>
        <param name="value">要转换为元组的值元组实例。</param>
        <summary>将 <see langword="ValueTuple" /> 结构的实例转换为 <see langword="Tuple" /> 类的实例。</summary>
        <returns>转换后的元组。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12&gt;) ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; (this (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`5&lt;!!T8, !!T9, !!T10, !!T11, !!T12&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`5&lt;!!T8, !!T9, !!T10, !!T11, !!T12&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12&gt;&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToTuple : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10, 'T11, 'T12&gt;&gt; -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12" Usage="System.TupleExtensions.ToTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <typeparam name="T11">第 11 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item4" />。</typeparam>
        <typeparam name="T12">第 12 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item5" />。</typeparam>
        <param name="value">要转换为元组的值元组实例。</param>
        <summary>将 <see langword="ValueTuple" /> 结构的实例转换为 <see langword="Tuple" /> 类的实例。</summary>
        <returns>转换后的元组。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13&gt;) ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; (this (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`6&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`6&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13&gt;&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToTuple : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10, 'T11, 'T12, 'T13&gt;&gt; -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13" Usage="System.TupleExtensions.ToTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <typeparam name="T11">第 11 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item4" />。</typeparam>
        <typeparam name="T12">第 12 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item5" />。</typeparam>
        <typeparam name="T13">第 13 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item6" />。</typeparam>
        <param name="value">要转换为元组的值元组实例。</param>
        <summary>将 <see langword="ValueTuple" /> 结构的实例转换为 <see langword="Tuple" /> 类的实例。</summary>
        <returns>转换后的元组。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;) ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; (this (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`7&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`7&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14&gt;&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToTuple : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14&gt;&gt; -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14" Usage="System.TupleExtensions.ToTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <typeparam name="T11">第 11 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item4" />。</typeparam>
        <typeparam name="T12">第 12 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item5" />。</typeparam>
        <typeparam name="T13">第 13 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item6" />。</typeparam>
        <typeparam name="T14">第 14 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item7" />。</typeparam>
        <param name="value">要转换为元组的值元组实例。</param>
        <summary>将 <see langword="ValueTuple" /> 结构的实例转换为 <see langword="Tuple" /> 类的实例。</summary>
        <returns>转换后的元组。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15&gt;&gt;) ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; (this (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15&gt;&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`1&lt;!!T15&gt;&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`1&lt;!!T15&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15)))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15&gt; ^&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15&gt;&gt;&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToTuple : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, ValueTuple&lt;'T15&gt;&gt;&gt; -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15" Usage="System.TupleExtensions.ToTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <typeparam name="T11">第 11 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item4" />。</typeparam>
        <typeparam name="T12">第 12 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item5" />。</typeparam>
        <typeparam name="T13">第 13 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item6" />。</typeparam>
        <typeparam name="T14">第 14 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item7" />。</typeparam>
        <typeparam name="T15">第十五个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item1" /> 。</typeparam>
        <param name="value">要转换为元组的值元组实例。</param>
        <summary>将 <see langword="ValueTuple" /> 结构的实例转换为 <see langword="Tuple" /> 类的实例。</summary>
        <returns>转换后的元组。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16&gt;&gt;) ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; (this (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16&gt;&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`2&lt;!!T15, !!T16&gt;&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`2&lt;!!T15, !!T16&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16)))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16&gt; ^&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16&gt;&gt;&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToTuple : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, ValueTuple&lt;'T15, 'T16&gt;&gt;&gt; -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16" Usage="System.TupleExtensions.ToTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <typeparam name="T11">第 11 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item4" />。</typeparam>
        <typeparam name="T12">第 12 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item5" />。</typeparam>
        <typeparam name="T13">第 13 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item6" />。</typeparam>
        <typeparam name="T14">第 14 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item7" />。</typeparam>
        <typeparam name="T15">第十五个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item1" /> 。</typeparam>
        <typeparam name="T16">第16个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item2" /> 。</typeparam>
        <param name="value">要转换为元组的值元组实例。</param>
        <summary>将 <see langword="ValueTuple" /> 结构的实例转换为 <see langword="Tuple" /> 类的实例。</summary>
        <returns>转换后的元组。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17&gt;&gt;) ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17&gt; (this (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17&gt;&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`3&lt;!!T15, !!T16, !!T17&gt;&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`3&lt;!!T15, !!T16, !!T17&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16, T17)))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17&gt; ^&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16, T17&gt;&gt;&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToTuple : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, ValueTuple&lt;'T15, 'T16, 'T17&gt;&gt;&gt; -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * 'T17" Usage="System.TupleExtensions.ToTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <typeparam name="T11">第 11 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item4" />。</typeparam>
        <typeparam name="T12">第 12 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item5" />。</typeparam>
        <typeparam name="T13">第 13 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item6" />。</typeparam>
        <typeparam name="T14">第 14 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item7" />。</typeparam>
        <typeparam name="T15">第十五个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item1" /> 。</typeparam>
        <typeparam name="T16">第16个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item2" /> 。</typeparam>
        <typeparam name="T17">第17个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item3" /> 。</typeparam>
        <param name="value">要转换为元组的值元组实例。</param>
        <summary>将 <see langword="ValueTuple" /> 结构的实例转换为 <see langword="Tuple" /> 类的实例。</summary>
        <returns>转换后的元组。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18&gt;&gt;) ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18&gt; (this (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18&gt;&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`4&lt;!!T15, !!T16, !!T17, !!T18&gt;&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`4&lt;!!T15, !!T16, !!T17, !!T18&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16, T17, T18)))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18&gt; ^&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16, T17, T18&gt;&gt;&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToTuple : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, ValueTuple&lt;'T15, 'T16, 'T17, 'T18&gt;&gt;&gt; -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * 'T17 * 'T18" Usage="System.TupleExtensions.ToTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <typeparam name="T11">第 11 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item4" />。</typeparam>
        <typeparam name="T12">第 12 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item5" />。</typeparam>
        <typeparam name="T13">第 13 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item6" />。</typeparam>
        <typeparam name="T14">第 14 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item7" />。</typeparam>
        <typeparam name="T15">第十五个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item1" /> 。</typeparam>
        <typeparam name="T16">第16个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item2" /> 。</typeparam>
        <typeparam name="T17">第17个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item3" /> 。</typeparam>
        <typeparam name="T18">第十八个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item4" /> 。</typeparam>
        <param name="value">要转换为元组的值元组实例。</param>
        <summary>将 <see langword="ValueTuple" /> 结构的实例转换为 <see langword="Tuple" /> 类的实例。</summary>
        <returns>转换后的元组。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19&gt;&gt;) ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19&gt; (this (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18,T19&gt;&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`5&lt;!!T15, !!T16, !!T17, !!T18, !!T19&gt;&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`5&lt;!!T15, !!T16, !!T17, !!T18, !!T19&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16, T17, T18, T19)))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18, T19)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18, typename T19&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19&gt; ^&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16, T17, T18, T19&gt;&gt;&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToTuple : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, ValueTuple&lt;'T15, 'T16, 'T17, 'T18, 'T19&gt;&gt;&gt; -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * 'T17 * 'T18 * 'T19" Usage="System.TupleExtensions.ToTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <typeparam name="T11">第 11 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item4" />。</typeparam>
        <typeparam name="T12">第 12 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item5" />。</typeparam>
        <typeparam name="T13">第 13 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item6" />。</typeparam>
        <typeparam name="T14">第 14 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item7" />。</typeparam>
        <typeparam name="T15">第十五个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item1" /> 。</typeparam>
        <typeparam name="T16">第16个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item2" /> 。</typeparam>
        <typeparam name="T17">第17个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item3" /> 。</typeparam>
        <typeparam name="T18">第十八个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item4" /> 。</typeparam>
        <typeparam name="T19">第19个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item5" /> 。</typeparam>
        <param name="value">要转换为元组的值元组实例。</param>
        <summary>将 <see langword="ValueTuple" /> 结构的实例转换为 <see langword="Tuple" /> 类的实例。</summary>
        <returns>转换后的元组。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;) ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20&gt; (this (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`6&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20&gt;&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`6&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16, T17, T18, T19, T20)))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18, T19, T20)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18, typename T19, typename T20&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20&gt; ^&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16, T17, T18, T19, T20&gt;&gt;&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToTuple : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, ValueTuple&lt;'T15, 'T16, 'T17, 'T18, 'T19, 'T20&gt;&gt;&gt; -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * 'T17 * 'T18 * 'T19 * 'T20" Usage="System.TupleExtensions.ToTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
        <TypeParameter Name="T20" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <typeparam name="T11">第 11 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item4" />。</typeparam>
        <typeparam name="T12">第 12 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item5" />。</typeparam>
        <typeparam name="T13">第 13 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item6" />。</typeparam>
        <typeparam name="T14">第 14 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item7" />。</typeparam>
        <typeparam name="T15">第十五个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item1" /> 。</typeparam>
        <typeparam name="T16">第16个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item2" /> 。</typeparam>
        <typeparam name="T17">第17个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item3" /> 。</typeparam>
        <typeparam name="T18">第十八个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item4" /> 。</typeparam>
        <typeparam name="T19">第19个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item5" /> 。</typeparam>
        <typeparam name="T20">第20个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item6" /> 。</typeparam>
        <param name="value">要转换为元组的值元组实例。</param>
        <summary>将 <see langword="ValueTuple" /> 结构的实例转换为 <see langword="Tuple" /> 类的实例。</summary>
        <returns>转换后的元组。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;) ToTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21&gt; (this (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`7&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20, !!T21&gt;&gt;&gt; ToTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21&gt;(valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`7&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20, !!T21&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) (value As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16, T17, T18, T19, T20, T21)))) As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18, T19, T20, T21)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18, typename T19, typename T20, typename T21&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21&gt; ^&gt; ^&gt; ^ ToTuple(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16, T17, T18, T19, T20, T21&gt;&gt;&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToTuple : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, ValueTuple&lt;'T15, 'T16, 'T17, 'T18, 'T19, 'T20, 'T21&gt;&gt;&gt; -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * 'T17 * 'T18 * 'T19 * 'T20 * 'T21" Usage="System.TupleExtensions.ToTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
        <TypeParameter Name="T20" />
        <TypeParameter Name="T21" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <typeparam name="T11">第 11 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item4" />。</typeparam>
        <typeparam name="T12">第 12 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item5" />。</typeparam>
        <typeparam name="T13">第 13 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item6" />。</typeparam>
        <typeparam name="T14">第 14 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item7" />。</typeparam>
        <typeparam name="T15">第十五个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item1" /> 。</typeparam>
        <typeparam name="T16">第16个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item2" /> 。</typeparam>
        <typeparam name="T17">第17个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item3" /> 。</typeparam>
        <typeparam name="T18">第十八个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item4" /> 。</typeparam>
        <typeparam name="T19">第19个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item5" /> 。</typeparam>
        <typeparam name="T20">第20个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item6" /> 。</typeparam>
        <typeparam name="T21">第20个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item7" /> 。</typeparam>
        <param name="value">要转换为元组的值元组实例。</param>
        <summary>将 <see langword="ValueTuple" /> 结构的实例转换为 <see langword="Tuple" /> 类的实例。</summary>
        <returns>转换后的元组。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToValueTuple&lt;T1&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将元组转换为值元组。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToValueTuple&lt;T1&gt;">
      <MemberSignature Language="C#" Value="public static (T1) ToValueTuple&lt;T1&gt; (this (T1) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`1&lt;!!T1&gt; ToValueTuple&lt;T1&gt;(class System.Tuple`1&lt;!!T1&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``1(System.Tuple{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1) (value As Tuple(Of T1)) As ValueTuple(Of T1)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1&gt; ToValueTuple(Tuple&lt;T1&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToValueTuple : ('T1) -&gt; ValueTuple&lt;'T1&gt;" Usage="System.TupleExtensions.ToValueTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <param name="value">要转换为值元组的元组对象</param>
        <summary>将 <see langword="Tuple" /> 类的实例转换为 <see langword="ValueTuple" /> 结构的实例。</summary>
        <returns>转换后的值元组实例。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``1(System.ValueTuple{``0})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2) ToValueTuple&lt;T1,T2&gt; (this (T1,T2) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`2&lt;!!T1, !!T2&gt; ToValueTuple&lt;T1, T2&gt;(class System.Tuple`2&lt;!!T1, !!T2&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``2(System.Tuple{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2) (value As Tuple(Of T1, T2)) As ValueTuple(Of T1, T2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2&gt; ToValueTuple(Tuple&lt;T1, T2&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToValueTuple : ('T1 * 'T2) -&gt; ValueTuple&lt;'T1, 'T2&gt;" Usage="System.TupleExtensions.ToValueTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <param name="value">要转换为值元组的元组对象</param>
        <summary>将 <see langword="Tuple" /> 类的实例转换为 <see langword="ValueTuple" /> 结构的实例。</summary>
        <returns>转换后的值元组实例。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``2(System.ValueTuple{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3) ToValueTuple&lt;T1,T2,T3&gt; (this (T1,T2,T3) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`3&lt;!!T1, !!T2, !!T3&gt; ToValueTuple&lt;T1, T2, T3&gt;(class System.Tuple`3&lt;!!T1, !!T2, !!T3&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``3(System.Tuple{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3) (value As Tuple(Of T1, T2, T3)) As ValueTuple(Of T1, T2, T3)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3&gt; ToValueTuple(Tuple&lt;T1, T2, T3&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToValueTuple : ('T1 * 'T2 * 'T3) -&gt; ValueTuple&lt;'T1, 'T2, 'T3&gt;" Usage="System.TupleExtensions.ToValueTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <param name="value">要转换为值元组的元组对象</param>
        <summary>将 <see langword="Tuple" /> 类的实例转换为 <see langword="ValueTuple" /> 结构的实例。</summary>
        <returns>转换后的值元组实例。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``3(System.ValueTuple{``0,``1,``2})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4) ToValueTuple&lt;T1,T2,T3,T4&gt; (this (T1,T2,T3,T4) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`4&lt;!!T1, !!T2, !!T3, !!T4&gt; ToValueTuple&lt;T1, T2, T3, T4&gt;(class System.Tuple`4&lt;!!T1, !!T2, !!T3, !!T4&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``4(System.Tuple{``0,``1,``2,``3})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4) (value As Tuple(Of T1, T2, T3, T4)) As ValueTuple(Of T1, T2, T3, T4)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToValueTuple : ('T1 * 'T2 * 'T3 * 'T4) -&gt; ValueTuple&lt;'T1, 'T2, 'T3, 'T4&gt;" Usage="System.TupleExtensions.ToValueTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <param name="value">要转换为值元组的元组对象</param>
        <summary>将 <see langword="Tuple" /> 类的实例转换为 <see langword="ValueTuple" /> 结构的实例。</summary>
        <returns>转换后的值元组实例。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``4(System.ValueTuple{``0,``1,``2,``3})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5) ToValueTuple&lt;T1,T2,T3,T4,T5&gt; (this (T1,T2,T3,T4,T5) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; ToValueTuple&lt;T1, T2, T3, T4, T5&gt;(class System.Tuple`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``5(System.Tuple{``0,``1,``2,``3,``4})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5) (value As Tuple(Of T1, T2, T3, T4, T5)) As ValueTuple(Of T1, T2, T3, T4, T5)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToValueTuple : ('T1 * 'T2 * 'T3 * 'T4 * 'T5) -&gt; ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5&gt;" Usage="System.TupleExtensions.ToValueTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <param name="value">要转换为值元组的元组对象</param>
        <summary>将 <see langword="Tuple" /> 类的实例转换为 <see langword="ValueTuple" /> 结构的实例。</summary>
        <returns>转换后的值元组实例。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``5(System.ValueTuple{``0,``1,``2,``3,``4})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6) ToValueTuple&lt;T1,T2,T3,T4,T5,T6&gt; (this (T1,T2,T3,T4,T5,T6) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6&gt;(class System.Tuple`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``6(System.Tuple{``0,``1,``2,``3,``4,``5})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6) (value As Tuple(Of T1, T2, T3, T4, T5, T6)) As ValueTuple(Of T1, T2, T3, T4, T5, T6)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToValueTuple : ('T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6) -&gt; ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6&gt;" Usage="System.TupleExtensions.ToValueTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <param name="value">要转换为值元组的元组对象</param>
        <summary>将 <see langword="Tuple" /> 类的实例转换为 <see langword="ValueTuple" /> 结构的实例。</summary>
        <returns>转换后的值元组实例。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7) ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt; (this (T1,T2,T3,T4,T5,T6,T7) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;(class System.Tuple`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7)) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToValueTuple : ('T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7) -&gt; ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7&gt;" Usage="System.TupleExtensions.ToValueTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <param name="value">要转换为值元组的元组对象</param>
        <summary>将 <see langword="Tuple" /> 类的实例转换为 <see langword="ValueTuple" /> 结构的实例。</summary>
        <returns>转换后的值元组实例。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8&gt;) ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`1&lt;!!T8&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`1&lt;!!T8&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8&gt; ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToValueTuple : ('T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8) -&gt; ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8&gt;&gt;" Usage="System.TupleExtensions.ToValueTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <param name="value">要转换为值元组的元组对象</param>
        <summary>将 <see langword="Tuple" /> 类的实例转换为 <see langword="ValueTuple" /> 结构的实例。</summary>
        <returns>转换后的值元组实例。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``8(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9&gt;) ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`2&lt;!!T8, !!T9&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`2&lt;!!T8, !!T9&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9&gt; ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToValueTuple : ('T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9) -&gt; ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9&gt;&gt;" Usage="System.TupleExtensions.ToValueTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <param name="value">要转换为值元组的元组对象</param>
        <summary>将 <see langword="Tuple" /> 类的实例转换为 <see langword="ValueTuple" /> 结构的实例。</summary>
        <returns>转换后的值元组实例。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``9(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10&gt;) ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`3&lt;!!T8, !!T9, !!T10&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`3&lt;!!T8, !!T9, !!T10&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10&gt; ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToValueTuple : ('T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10) -&gt; ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10&gt;&gt;" Usage="System.TupleExtensions.ToValueTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <param name="value">要转换为值元组的元组对象</param>
        <summary>将 <see langword="Tuple" /> 类的实例转换为 <see langword="ValueTuple" /> 结构的实例。</summary>
        <returns>转换后的值元组实例。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``10(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11&gt;) ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`4&lt;!!T8, !!T9, !!T10, !!T11&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`4&lt;!!T8, !!T9, !!T10, !!T11&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11&gt; ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToValueTuple : ('T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11) -&gt; ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10, 'T11&gt;&gt;" Usage="System.TupleExtensions.ToValueTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <typeparam name="T11">第 11 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item4" />。</typeparam>
        <param name="value">要转换为值元组的元组对象</param>
        <summary>将 <see langword="Tuple" /> 类的实例转换为 <see langword="ValueTuple" /> 结构的实例。</summary>
        <returns>转换后的值元组实例。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``11(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12&gt;) ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`5&lt;!!T8, !!T9, !!T10, !!T11, !!T12&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`5&lt;!!T8, !!T9, !!T10, !!T11, !!T12&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12&gt; ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToValueTuple : ('T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12) -&gt; ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10, 'T11, 'T12&gt;&gt;" Usage="System.TupleExtensions.ToValueTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <typeparam name="T11">第 11 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item4" />。</typeparam>
        <typeparam name="T12">第 12 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item5" />。</typeparam>
        <param name="value">要转换为值元组的元组对象</param>
        <summary>将 <see langword="Tuple" /> 类的实例转换为 <see langword="ValueTuple" /> 结构的实例。</summary>
        <returns>转换后的值元组实例。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``12(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13&gt;) ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`6&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`6&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13&gt; ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToValueTuple : ('T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13) -&gt; ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10, 'T11, 'T12, 'T13&gt;&gt;" Usage="System.TupleExtensions.ToValueTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <typeparam name="T11">第 11 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item4" />。</typeparam>
        <typeparam name="T12">第 12 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item5" />。</typeparam>
        <typeparam name="T13">第 13 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item6" />。</typeparam>
        <param name="value">要转换为值元组的元组对象</param>
        <summary>将 <see langword="Tuple" /> 类的实例转换为 <see langword="ValueTuple" /> 结构的实例。</summary>
        <returns>转换后的值元组实例。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``13(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;) ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`7&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`7&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14&gt; ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToValueTuple : ('T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14) -&gt; ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14&gt;&gt;" Usage="System.TupleExtensions.ToValueTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <typeparam name="T11">第 11 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item4" />。</typeparam>
        <typeparam name="T12">第 12 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item5" />。</typeparam>
        <typeparam name="T13">第 13 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item6" />。</typeparam>
        <typeparam name="T14">第 14 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item7" />。</typeparam>
        <param name="value">要转换为值元组的元组对象</param>
        <summary>将 <see langword="Tuple" /> 类的实例转换为 <see langword="ValueTuple" /> 结构的实例。</summary>
        <returns>转换后的值元组实例。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``14(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15&gt;&gt;) ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15&gt;&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`1&lt;!!T15&gt;&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`1&lt;!!T15&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15)))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15&gt;&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15&gt; ^&gt; ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToValueTuple : ('T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15) -&gt; ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, ValueTuple&lt;'T15&gt;&gt;&gt;" Usage="System.TupleExtensions.ToValueTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <typeparam name="T11">第 11 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item4" />。</typeparam>
        <typeparam name="T12">第 12 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item5" />。</typeparam>
        <typeparam name="T13">第 13 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item6" />。</typeparam>
        <typeparam name="T14">第 14 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item7" />。</typeparam>
        <typeparam name="T15">第十五个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item1" /> 。</typeparam>
        <param name="value">要转换为值元组的元组对象</param>
        <summary>将 <see langword="Tuple" /> 类的实例转换为 <see langword="ValueTuple" /> 结构的实例。</summary>
        <returns>转换后的值元组实例。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``15(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16&gt;&gt;) ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16&gt;&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`2&lt;!!T15, !!T16&gt;&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`2&lt;!!T15, !!T16&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16)))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16&gt;&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16&gt; ^&gt; ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToValueTuple : ('T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16) -&gt; ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, ValueTuple&lt;'T15, 'T16&gt;&gt;&gt;" Usage="System.TupleExtensions.ToValueTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <typeparam name="T11">第 11 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item4" />。</typeparam>
        <typeparam name="T12">第 12 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item5" />。</typeparam>
        <typeparam name="T13">第 13 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item6" />。</typeparam>
        <typeparam name="T14">第 14 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item7" />。</typeparam>
        <typeparam name="T15">第十五个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item1" /> 。</typeparam>
        <typeparam name="T16">第16个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item2" /> 。</typeparam>
        <param name="value">要转换为值元组的元组对象</param>
        <summary>将 <see langword="Tuple" /> 类的实例转换为 <see langword="ValueTuple" /> 结构的实例。</summary>
        <returns>转换后的值元组实例。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``16(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17&gt;&gt;) ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17&gt;&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`3&lt;!!T15, !!T16, !!T17&gt;&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`3&lt;!!T15, !!T16, !!T17&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17)))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16, T17)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16, T17&gt;&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17&gt; ^&gt; ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToValueTuple : ('T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * 'T17) -&gt; ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, ValueTuple&lt;'T15, 'T16, 'T17&gt;&gt;&gt;" Usage="System.TupleExtensions.ToValueTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <typeparam name="T11">第 11 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item4" />。</typeparam>
        <typeparam name="T12">第 12 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item5" />。</typeparam>
        <typeparam name="T13">第 13 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item6" />。</typeparam>
        <typeparam name="T14">第 14 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item7" />。</typeparam>
        <typeparam name="T15">第十五个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item1" /> 。</typeparam>
        <typeparam name="T16">第16个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item2" /> 。</typeparam>
        <typeparam name="T17">第17个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item3" /> 。</typeparam>
        <param name="value">要转换为值元组的元组对象</param>
        <summary>将 <see langword="Tuple" /> 类的实例转换为 <see langword="ValueTuple" /> 结构的实例。</summary>
        <returns>转换后的值元组实例。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``17(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18&gt;&gt;) ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18&gt;&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`4&lt;!!T15, !!T16, !!T17, !!T18&gt;&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`4&lt;!!T15, !!T16, !!T17, !!T18&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18)))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16, T17, T18)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16, T17, T18&gt;&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18&gt; ^&gt; ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToValueTuple : ('T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * 'T17 * 'T18) -&gt; ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, ValueTuple&lt;'T15, 'T16, 'T17, 'T18&gt;&gt;&gt;" Usage="System.TupleExtensions.ToValueTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <typeparam name="T11">第 11 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item4" />。</typeparam>
        <typeparam name="T12">第 12 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item5" />。</typeparam>
        <typeparam name="T13">第 13 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item6" />。</typeparam>
        <typeparam name="T14">第 14 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item7" />。</typeparam>
        <typeparam name="T15">第十五个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item1" /> 。</typeparam>
        <typeparam name="T16">第16个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item2" /> 。</typeparam>
        <typeparam name="T17">第17个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item3" /> 。</typeparam>
        <typeparam name="T18">第十八个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item4" /> 。</typeparam>
        <param name="value">要转换为值元组的元组对象</param>
        <summary>将 <see langword="Tuple" /> 类的实例转换为 <see langword="ValueTuple" /> 结构的实例。</summary>
        <returns>转换后的值元组实例。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``18(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18,T19&gt;&gt;) ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19&gt;&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`5&lt;!!T15, !!T16, !!T17, !!T18, !!T19&gt;&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`5&lt;!!T15, !!T16, !!T17, !!T18, !!T19&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18, T19)))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16, T17, T18, T19)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18, typename T19&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16, T17, T18, T19&gt;&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19&gt; ^&gt; ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToValueTuple : ('T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * 'T17 * 'T18 * 'T19) -&gt; ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, ValueTuple&lt;'T15, 'T16, 'T17, 'T18, 'T19&gt;&gt;&gt;" Usage="System.TupleExtensions.ToValueTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <typeparam name="T11">第 11 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item4" />。</typeparam>
        <typeparam name="T12">第 12 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item5" />。</typeparam>
        <typeparam name="T13">第 13 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item6" />。</typeparam>
        <typeparam name="T14">第 14 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item7" />。</typeparam>
        <typeparam name="T15">第十五个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item1" /> 。</typeparam>
        <typeparam name="T16">第16个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item2" /> 。</typeparam>
        <typeparam name="T17">第17个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item3" /> 。</typeparam>
        <typeparam name="T18">第十八个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item4" /> 。</typeparam>
        <typeparam name="T19">第19个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item5" /> 。</typeparam>
        <param name="value">要转换为值元组的元组对象</param>
        <summary>将 <see langword="Tuple" /> 类的实例转换为 <see langword="ValueTuple" /> 结构的实例。</summary>
        <returns>转换后的值元组实例。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``19(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;) ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`6&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20&gt;&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`6&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18, T19, T20)))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16, T17, T18, T19, T20)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18, typename T19, typename T20&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16, T17, T18, T19, T20&gt;&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20&gt; ^&gt; ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToValueTuple : ('T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * 'T17 * 'T18 * 'T19 * 'T20) -&gt; ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, ValueTuple&lt;'T15, 'T16, 'T17, 'T18, 'T19, 'T20&gt;&gt;&gt;" Usage="System.TupleExtensions.ToValueTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
        <TypeParameter Name="T20" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19,T20&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <typeparam name="T11">第 11 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item4" />。</typeparam>
        <typeparam name="T12">第 12 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item5" />。</typeparam>
        <typeparam name="T13">第 13 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item6" />。</typeparam>
        <typeparam name="T14">第 14 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item7" />。</typeparam>
        <typeparam name="T15">第十五个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item1" /> 。</typeparam>
        <typeparam name="T16">第16个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item2" /> 。</typeparam>
        <typeparam name="T17">第17个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item3" /> 。</typeparam>
        <typeparam name="T18">第十八个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item4" /> 。</typeparam>
        <typeparam name="T19">第19个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item5" /> 。</typeparam>
        <typeparam name="T20">第20个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item6" /> 。</typeparam>
        <param name="value">要转换为值元组的元组对象</param>
        <summary>将 <see langword="Tuple" /> 类的实例转换为 <see langword="ValueTuple" /> 结构的实例。</summary>
        <returns>转换后的值元组实例。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``20(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19}}})" />
      </Docs>
    </Member>
    <Member MemberName="ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21&gt;">
      <MemberSignature Language="C#" Value="public static (T1,T2,T3,T4,T5,T6,T7,ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,ValueTuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;) ToValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21&gt; (this (T1,T2,T3,T4,T5,T6,T7,Tuple&lt;T8,T9,T10,T11,T12,T13,T14,Tuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;) value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ValueTuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, valuetype System.ValueTuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, valuetype System.ValueTuple`7&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20, !!T21&gt;&gt;&gt; ToValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21&gt;(class System.Tuple`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, class System.Tuple`8&lt;!!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, class System.Tuple`7&lt;!!T15, !!T16, !!T17, !!T18, !!T19, !!T20, !!T21&gt;&gt;&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TupleExtensions.ToValueTuple``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToValueTuple(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21) (value As Tuple(Of T1, T2, T3, T4, T5, T6, T7, Tuple(Of T8, T9, T10, T11, T12, T13, T14, Tuple(Of T15, T16, T17, T18, T19, T20, T21)))) As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, ValueTuple(Of T8, T9, T10, T11, T12, T13, T14, ValueTuple(Of T15, T16, T17, T18, T19, T20, T21)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename T16, typename T17, typename T18, typename T19, typename T20, typename T21&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, ValueTuple&lt;T8, T9, T10, T11, T12, T13, T14, ValueTuple&lt;T15, T16, T17, T18, T19, T20, T21&gt;&gt;&gt; ToValueTuple(Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21&gt; ^&gt; ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToValueTuple : ('T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 * 'T16 * 'T17 * 'T18 * 'T19 * 'T20 * 'T21) -&gt; ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, ValueTuple&lt;'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, ValueTuple&lt;'T15, 'T16, 'T17, 'T18, 'T19, 'T20, 'T21&gt;&gt;&gt;" Usage="System.TupleExtensions.ToValueTuple value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,System.ValueTuple&lt;T8,T9,T10,T11,T12,T13,T14,System.ValueTuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="T17" />
        <TypeParameter Name="T18" />
        <TypeParameter Name="T19" />
        <TypeParameter Name="T20" />
        <TypeParameter Name="T21" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,System.Tuple&lt;T8,T9,T10,T11,T12,T13,T14,System.Tuple&lt;T15,T16,T17,T18,T19,T20,T21&gt;&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T1">第 1 个元素的类型。</typeparam>
        <typeparam name="T2">第 2 个元素的类型。</typeparam>
        <typeparam name="T3">第 3 个元素的类型。</typeparam>
        <typeparam name="T4">第 4 个元素的类型。</typeparam>
        <typeparam name="T5">第 5 个元素的类型。</typeparam>
        <typeparam name="T6">第 6 个元素的类型。</typeparam>
        <typeparam name="T7">第 7 个元素的类型。</typeparam>
        <typeparam name="T8">第 8 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item1" />。</typeparam>
        <typeparam name="T9">第 9 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item2" />。</typeparam>
        <typeparam name="T10">第 10 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item3" />。</typeparam>
        <typeparam name="T11">第 11 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item4" />。</typeparam>
        <typeparam name="T12">第 12 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item5" />。</typeparam>
        <typeparam name="T13">第 13 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item6" />。</typeparam>
        <typeparam name="T14">第 14 个元素的类型，或 <paramref name="value" /><see langword=".Rest.Item7" />。</typeparam>
        <typeparam name="T15">第十五个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item1" /> 。</typeparam>
        <typeparam name="T16">第16个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item2" /> 。</typeparam>
        <typeparam name="T17">第17个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item3" /> 。</typeparam>
        <typeparam name="T18">第十八个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item4" /> 。</typeparam>
        <typeparam name="T19">第19个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item5" /> 。</typeparam>
        <typeparam name="T20">第20个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item6" /> 。</typeparam>
        <typeparam name="T21">第20个元素的类型，或 <paramref name="value" /> <see langword=".Rest.Rest.Item7" /> 。</typeparam>
        <param name="value">要转换为值元组的元组对象</param>
        <summary>将 <see langword="Tuple" /> 类的实例转换为 <see langword="ValueTuple" /> 结构的实例。</summary>
        <returns>转换后的值元组实例。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.TupleExtensions.ToTuple``21(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6,System.ValueTuple{``7,``8,``9,``10,``11,``12,``13,System.ValueTuple{``14,``15,``16,``17,``18,``19,``20}}})" />
      </Docs>
    </Member>
  </Members>
</Type>
