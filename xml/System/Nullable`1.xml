<Type Name="Nullable&lt;T&gt;" FullName="System.Nullable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3fc43f7a15f1d9998578361c5cd30c739ca71141" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83899264" /></Metadata><TypeSignature Language="C#" Value="public struct Nullable&lt;T&gt; where T : struct" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Nullable`1&lt;struct .ctor (class System.ValueType) T&gt; extends System.ValueType" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Nullable`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure Nullable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : value classpublic value class Nullable" />
  <TypeSignature Language="F#" Value="type Nullable&lt;'T (requires 'T : struct)&gt; = struct" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Nullable`1&lt;struct .ctor (class System.ValueType) T&gt; extends System.ValueType" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><see cref="T:System.Nullable`1" /> 泛型类型的基础值类型。</typeparam>
    <summary>表示可分配有 <see langword="null" /> 的值类型。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果可以为类型赋值或将其分配到 `null`，则称该类型为 null，这意味着该类型没有任何值。 默认情况下，所有引用类型（如 <xref:System.String>）都可以为 null，但所有值类型（如 <xref:System.Int32>）都不是。  
  
 在C#和 Visual Basic 中，通过在值类型后使用 `?` 表示法，将值类型标记为可以为 null。 例如，在 Visual Basic 中C# `int?` 或 `Integer?` 声明可以 `null`分配的整数值类型。  
  
 <xref:System.Nullable%601> 结构支持仅将值类型用作可以为 null 的类型，因为引用类型在设计上是可以为 null 的。  
  
 <xref:System.Nullable> 类提供 <xref:System.Nullable%601> 结构的互补支持。 <xref:System.Nullable> 类支持获取可以为 null 的类型的基础类型，以及针对其基础值类型不支持泛型比较和相等运算的可以为 null 的类型对的比较和相等性运算。  
  
## <a name="fundamental-properties"></a>基本属性  
 <xref:System.Nullable%601> 结构的两个基本成员是 <xref:System.Nullable%601.HasValue%2A> 和 <xref:System.Nullable%601.Value%2A> 属性。 如果 <xref:System.Nullable%601> 对象的 <xref:System.Nullable%601.HasValue%2A> 属性为 `true`，则可以使用 <xref:System.Nullable%601.Value%2A> 属性访问对象的值。 如果 `false`<xref:System.Nullable%601.HasValue%2A> 属性，则对象的值是不确定的，尝试访问 <xref:System.Nullable%601.Value%2A> 属性将引发 <xref:System.InvalidOperationException>。  
  
## <a name="boxing-and-unboxing"></a>装箱和取消装箱  
 当对可以为 null 的类型进行装箱时，公共语言运行时将自动框 <xref:System.Nullable%601> 对象的基础值，而不是 <xref:System.Nullable%601> 对象本身。 也就是说，如果 <xref:System.Nullable%601.HasValue%2A> 属性为 `true`，则 <xref:System.Nullable%601.Value%2A> 属性的内容为装箱。 如果可以为 null 的类型的基础值为取消装箱，则公共语言运行时将创建一个新的 <xref:System.Nullable%601> 结构，该结构已初始化为基础值。  
  
 如果 `false`可以为 null 的类型的 `HasValue` 属性，则会 `null`装箱操作的结果。 因此，如果将一个装箱的可以为 null 的类型传递给需要对象参数的方法，则该方法必须准备好处理参数 `null`的情况。 将 `null` 取消装箱为可以为 null 的类型时，公共语言运行时将创建一个新的 <xref:System.Nullable%601> 结构，并将其 `HasValue` 属性初始化为 `false`。  
  
## <a name="net_v451-and-windows-runtime-components"></a>[!INCLUDE[net_v451](~/includes/net-v451-md.md)] 和 Windows 运行时组件  
 从 [!INCLUDE[net_v451](~/includes/net-v451-md.md)]开始，可以将 <xref:System.Nullable%601> 类型包含为在 WinMD 库中导出的结构的成员。 以前，此操作不受支持。  
  
   
  
## Examples  
 下面的代码示例定义了 Microsoft Pubs 示例数据库中表的三行。 该表包含两个不可为 null 的列和两个可以为 null 的列。  
  
 [!code-cpp[system.nullableOfT.class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.nullableOfT.class/cpp/tarow.cpp#1)]
 [!code-csharp[system.nullableOfT.class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.class/cs/tarow.cs#1)]
 [!code-vb[system.nullableOfT.class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.class/vb/tarow.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Nullable" />
    <related type="Article" href="https://msdn.microsoft.com/library/e473cb01-28ca-42be-9cea-f717055d72c6">可以为 null 的类型（C# 编程指南）</related>
    <related type="Article" href="https://msdn.microsoft.com/library/9ac3b602-6f96-4e6d-96f7-cd4e81c468a6">可以为 Null 的值类型 (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Nullable (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable(T value);" />
      <MemberSignature Language="F#" Value="new Nullable&lt;'T (requires 'T : struct)&gt; : 'T -&gt; Nullable&lt;'T (requires 'T : struct)&gt;" Usage="new System.Nullable&lt;'T (requires 'T : struct)&gt; value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">一个值类型。</param>
        <summary>将 <see cref="T:System.Nullable`1" /> 结构的新实例初始化为指定值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Nullable%601.%23ctor%2A> 构造函数将新 <xref:System.Nullable%601> 对象的 <xref:System.Nullable%601.HasValue%2A> 属性初始化为 `true`，并将 <xref:System.Nullable%601.Value%2A> 属性初始化为 `value` 参数的值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="nullable.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">一个 对象。</param>
        <summary>指示当前 <see cref="T:System.Nullable`1" /> 对象是否与指定的对象相等。</summary>
        <returns>如果 <paramref name="other" /> 参数等于当前的 <see cref="T:System.Nullable`1" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。  
  
此表描述如何定义所比较值的相等性： 
 <list type="table"><listheader><term> 返回值 
 </term><description> 说明 
 </description></listheader><item><term><see langword="true" /></term><description> <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="false" />，并且 <paramref name="other" /> 参数为 <see langword="null" />。 即，根据定义，两个 null 值相等。  
  
- 或 - 
<see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="true" />，并且 <see cref="P:System.Nullable`1.Value" /> 属性返回的值等于 <paramref name="other" /> 参数。  
  
 </description></item><item><term><see langword="false" /></term><description> 当前 <see cref="P:System.Nullable`1.HasValue" /> 结构的 <see cref="T:System.Nullable`1" /> 属性为 <see langword="true" />，并且 <paramref name="other" /> 参数为 <see langword="null" />。  
  
- 或 - 
当前 <see cref="P:System.Nullable`1.HasValue" /> 结构的 <see cref="T:System.Nullable`1" /> 属性为 <see langword="false" />，并且 <paramref name="other" /> 参数不为 <see langword="null" />。  
  
- 或 - 
当前 <see cref="P:System.Nullable`1.HasValue" /> 结构的 <see cref="T:System.Nullable`1" /> 属性为 <see langword="true" />，并且 <see cref="P:System.Nullable`1.Value" /> 属性返回的值不等于 <paramref name="other" /> 参数。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果当前 <xref:System.Nullable%601> 结构的 <xref:System.Nullable%601.HasValue%2A> 属性是 `true`，并且 `other` 参数不是 `null`的，则通过将 `other` 参数传递到当前 `Equals` 结构的基础值的 <xref:System.Nullable%601> 方法来确定相等性。  
  
   
  
## Examples  
 下面的代码示例确定对象和 <xref:System.Nullable%601> 对象是否等于当前的 <xref:System.Nullable%601> 对象。  
  
 [!code-csharp[system.nullableOfT.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.Equals/cs/eq.cs#1)]
 [!code-vb[system.nullableOfT.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.Equals/vb/eq.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="nullable.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索由 <see cref="P:System.Nullable`1.Value" /> 属性返回的对象的哈希代码。</summary>
        <returns>如果 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="true" />，则为 <see cref="P:System.Nullable`1.Value" /> 属性返回的对象的哈希代码；如果 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="false" />，则为零。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValueOrDefault">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>检索当前 <see cref="T:System.Nullable`1" /> 对象的值或默认值。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValueOrDefault">
      <MemberSignature Language="C#" Value="public T GetValueOrDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T GetValueOrDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.GetValueOrDefault" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueOrDefault () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetValueOrDefault();" />
      <MemberSignature Language="F#" Value="member this.GetValueOrDefault : unit -&gt; 'T" Usage="nullable.GetValueOrDefault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0">
          <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检索当前 <see cref="T:System.Nullable`1" /> 对象的值，或基础类型的默认值。</summary>
        <returns>如果 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="true" />，则为 <see cref="P:System.Nullable`1.Value" /> 属性的值；否则为基础类型的默认值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 即使 <xref:System.Nullable%601.HasValue%2A> 属性 `false` （与引发异常的 <xref:System.Nullable%601.Value%2A> 属性不同），<xref:System.Nullable%601.GetValueOrDefault%2A> 方法也会返回一个值。 如果 `false`<xref:System.Nullable%601.HasValue%2A> 属性，则该方法将返回基础类型的[默认](/dotnet/csharp/language-reference/keywords/default-values-table)值。  
  
   
  
## Examples  
 下面的代码示例检索 <xref:System.Nullable%601> 对象的值（如果定义了该值）;否则，它将检索默认值或特定的默认值。  
  
 [!code-csharp[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/cs/gvod.cs#1)]
 [!code-vb[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/vb/gvod.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Nullable`1.GetValueOrDefault(`0)" />
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault">
      <MemberSignature Language="C#" Value="public T GetValueOrDefault (T defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T GetValueOrDefault(!T defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.GetValueOrDefault(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueOrDefault (defaultValue As T) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetValueOrDefault(T defaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetValueOrDefault : 'T -&gt; 'T" Usage="nullable.GetValueOrDefault defaultValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0">
          <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValue" Type="T" />
      </Parameters>
      <Docs>
        <param name="defaultValue">如果 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="false" />，则为一个返回值。</param>
        <summary>检索当前 <see cref="T:System.Nullable`1" /> 对象的值或指定的默认值。</summary>
        <returns>如果 <see cref="P:System.Nullable`1.Value" /> 属性为 <see cref="P:System.Nullable`1.HasValue" />，则为 <see langword="true" /> 属性的值；否则为 <paramref name="defaultValue" /> 参数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 即使 <xref:System.Nullable%601.HasValue%2A> 属性 `false` （与引发异常的 <xref:System.Nullable%601.Value%2A> 属性不同），<xref:System.Nullable%601.GetValueOrDefault%2A> 方法也会返回一个值。  
  
   
  
## Examples  
 下面的代码示例检索 <xref:System.Nullable%601> 对象的值（如果定义了该值）;否则，它将检索默认值或特定的默认值。  
  
 [!code-csharp[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/cs/gvod.cs#1)]
 [!code-vb[system.nullableOfT.GetValueOrDefault#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.GetValueOrDefault/vb/gvod.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Nullable`1.GetValueOrDefault" />
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Nullable`1.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0">
          <AttributeName>get: System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="T:System.Nullable`1" /> 对象是否具有基础类型的有效值。</summary>
        <value>如果当前的 <see langword="true" /> 对象具有值，则为 <see cref="T:System.Nullable`1" />；如果当前的 <see cref="T:System.Nullable`1" /> 对象没有值，则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `true`<xref:System.Nullable%601.HasValue%2A> 属性，则可以通过 <xref:System.Nullable%601.Value%2A> 属性访问当前 <xref:System.Nullable%601> 对象的值。 否则，尝试访问其值会引发 <xref:System.InvalidOperationException> 异常。  
  
   
  
## Examples  
 下面的示例使用 `Nullable<int>` （`Nullable(Of Integer)` Visual Basic）对象中的 <xref:System.Nullable%601.HasValue%2A> 属性来确定它应显示对象的 <xref:System.Nullable%601.Value%2A> 属性还是显示其 <xref:System.Nullable%601.GetValueOrDefault%2A> 属性。  
  
 [!code-csharp[System.Nullable~1.HasValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable~1.hasvalue/cs/hasvalue2.cs#1)]
 [!code-vb[System.Nullable~1.HasValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable~1.hasvalue/vb/hasvalue2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator T (T? value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname !T op_Explicit(valuetype System.Nullable`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Nullable(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator T(Nullable&lt;T&gt; value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : Nullable&lt;'T (requires 'T : struct)&gt; -&gt; 'T" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">可以为 Null 的值。</param>
        <summary>定义 <see cref="T:System.Nullable`1" /> 实例到其基础值的显式转换。</summary>
        <returns><paramref name="value" /> 参数的 <see cref="P:System.Nullable`1.Value" /> 属性的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此运算符支持 <xref:System.Nullable%601> 实例到 `T`类型 <xref:System.Nullable%601.Value%2A>的显式转换。 此类显式转换的语法依赖于语言。 你还可以通过调用 <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> 方法来执行转换。  
  
 此运算符的等效方法是 <xref:System.Nullable%601.Value?displayProperty=nameWithType>  
  
## Examples  
 <xref:System.Nullable%601.op_Explicit%2A> 运算符可实现如下所示的代码，该代码将 `Nullable(Of Int32)` 值转换为 <xref:System.Int32> 值。  
  
 [!code-csharp[System.Nullable~1.Conversion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable~1.conversion/cs/explicit1.cs#1)]
 [!code-vb[System.Nullable~1.Conversion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable~1.conversion/vb/explicit1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator T? (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;!T&gt; op_Implicit(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As T) As Nullable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator Nullable&lt;T&gt;(T value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : 'T -&gt; Nullable&lt;'T (requires 'T : struct)&gt;" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">一个值类型。</param>
        <summary>创建一个新的 <see cref="T:System.Nullable`1" /> 对象，并将其初始化为指定的值。</summary>
        <returns>一个 <see cref="T:System.Nullable`1" /> 对象，其 <see cref="P:System.Nullable`1.Value" /> 属性使用 <paramref name="value" /> 参数进行初始化。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新的 <xref:System.Nullable%601> 值的 <xref:System.Nullable%601.Value%2A> 属性初始化为 `value` 参数，<xref:System.Nullable%601.HasValue%2A> 属性初始化为 `true`。  
  
 此运算符的等效方法是 <xref:System.Nullable%601.%23ctor%28%600%29?displayProperty=nameWithType>

> [!NOTE]
>  在C#和 Visual Basic 中，从 `T` 到 <xref:System.Nullable%601> 的隐式转换不会调用此运算符，因为这些语言具有用于转换的特殊规则。 提供此运算符是为了使没有此类特殊规则的语言受益。

> [!NOTE]
>  在C#和 Visual Basic 中，从 `null` 或 `Nothing` 文本到 <xref:System.Nullable%601> 的隐式转换将生成 <xref:System.Nullable%601> 属性初始化为 <xref:System.Nullable%601.HasValue%2A> 的 `false`值。 转换在编译时以这些语言进行，并且不调用任何运算符。

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="nullable.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回当前 <see cref="T:System.Nullable`1" /> 对象的值的文本表示形式。</summary>
        <returns>如果 <see cref="T:System.Nullable`1" /> 属性为 <see cref="P:System.Nullable`1.HasValue" />，则是当前 <see langword="true" /> 对象的值的文本表示形式；如果 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="false" />，则是一个空字符串 ("")。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Nullable%601.ToString%2A> 属性返回通过调用 <xref:System.Nullable%601.Value%2A> 属性返回的对象的 `ToString` 属性生成的字符串。  
  
   
  
## Examples  
 下面的代码示例显示当前 <xref:System.Nullable%601> 对象的值。  
  
 [!code-csharp[system.nullableOfT.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullableOfT.ToString/cs/ts.cs#1)]
 [!code-vb[system.nullableOfT.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullableOfT.ToString/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public T Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Value" />
      <MemberSignature Language="DocId" Value="P:System.Nullable`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Value { T get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : 'T" Usage="System.Nullable&lt;'T (requires 'T : struct)&gt;.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0">
          <AttributeName>get: System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前 <see cref="T:System.Nullable`1" /> 对象的值，如果它已被分配了有效的基础值。</summary>
        <value>如果 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="true" />，则为当前 <see cref="T:System.Nullable`1" /> 对象的值。 如果 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="false" />，则将引发异常。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果尚未将类型 `T` 的值分配给 <xref:System.Nullable%601> 对象，则可以将其与 `null` 和检索其 <xref:System.Nullable%601.HasValue%2A> 属性进行比较，但不能访问其 <xref:System.Nullable%601.Value%2A> 属性或调用其其他成员。  
  
   
  
## Examples  
 下面的示例使用 `Nullable<int>` （`Nullable(Of Integer)` Visual Basic）对象中的 <xref:System.Nullable%601.HasValue%2A> 属性来确定它应显示对象的 <xref:System.Nullable%601.Value%2A> 属性还是显示其 <xref:System.Nullable%601.GetValueOrDefault%2A> 属性。  
  
 [!code-csharp[System.Nullable~1.HasValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable~1.hasvalue/cs/hasvalue2.cs#1)]
 [!code-vb[System.Nullable~1.HasValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable~1.hasvalue/vb/hasvalue2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Nullable`1.HasValue" /> 属性为 <see langword="false" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
