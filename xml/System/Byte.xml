<Type Name="Byte" FullName="System.Byte">
  <Metadata><Meta Name="ms.openlocfilehash" Value="306b39b3a80dacd86208ac6a86bddaa024d62e65" /><Meta Name="ms.sourcegitcommit" Value="9a0316374d19cc78674994106d073aa5ef1bd5f3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/10/2020" /><Meta Name="ms.locfileid" Value="94480118" /></Metadata><TypeSignature Language="C#" Value="public struct Byte : IComparable, IComparable&lt;byte&gt;, IConvertible, IEquatable&lt;byte&gt;, IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit unsigned int8 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;unsigned int8&gt;, class System.IConvertible, class System.IEquatable`1&lt;unsigned int8&gt;, class System.IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Byte" />
  <TypeSignature Language="VB.NET" Value="Public Structure Byte&#xA;Implements IComparable, IComparable(Of Byte), IConvertible, IEquatable(Of Byte), IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public value class Byte : IComparable, IComparable&lt;System::Byte&gt;, IConvertible, IEquatable&lt;System::Byte&gt;, IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type byte = struct&#xA;    interface IConvertible&#xA;    interface IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C#" Value="public struct Byte : IComparable, IConvertible, IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit unsigned int8 extends System.ValueType implements class System.IComparable, class System.IConvertible, class System.IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public Structure Byte&#xA;Implements IComparable, IConvertible, IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public value class Byte : IComparable, IConvertible, IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type byte = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit unsigned int8 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;unsigned int8&gt;, class System.IConvertible, class System.IEquatable`1&lt;unsigned int8&gt;, class System.IFormattable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public struct Byte : IComparable, IComparable&lt;byte&gt;, IEquatable&lt;byte&gt;, IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit unsigned int8 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;unsigned int8&gt;, class System.IEquatable`1&lt;unsigned int8&gt;, class System.IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="VB.NET" Value="Public Structure Byte&#xA;Implements IComparable, IComparable(Of Byte), IEquatable(Of Byte), IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="C++ CLI" Value="public value class Byte : IComparable, IComparable&lt;System::Byte&gt;, IEquatable&lt;System::Byte&gt;, IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="F#" Value="type byte = struct&#xA;    interface IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.IComparable&lt;System.Byte&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.IEquatable&lt;System.Byte&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4873c-101">表示一个 8 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="4873c-101">Represents an 8-bit unsigned integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-102"><xref:System.Byte> 是一个不可变的值类型，它表示值范围为 0 (的无符号整数，该整数由 <xref:System.Byte.MinValue?displayProperty=nameWithType>) 常量) 表示的 255 (表示 <xref:System.Byte.MaxValue?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-102"><xref:System.Byte> is an immutable value type that represents unsigned integers with values that range from 0 (which is represented by the <xref:System.Byte.MinValue?displayProperty=nameWithType> constant) to 255 (which is represented by the <xref:System.Byte.MaxValue?displayProperty=nameWithType> constant).</span></span> <span data-ttu-id="4873c-103">.NET 还包括一个有符号的8位整数值类型， <xref:System.SByte> 该类型表示范围从-128 到127的值。</span><span class="sxs-lookup"><span data-stu-id="4873c-103">.NET also includes a signed 8-bit integer value type, <xref:System.SByte>, which represents values that range from -128 to 127.</span></span>

## <a name="instantiating-a-byte-value"></a><span data-ttu-id="4873c-104">实例化一个字节值</span><span class="sxs-lookup"><span data-stu-id="4873c-104">Instantiating a Byte Value</span></span>
 <span data-ttu-id="4873c-105">可以 <xref:System.Byte> 通过多种方式实例化值：</span><span class="sxs-lookup"><span data-stu-id="4873c-105">You can instantiate a <xref:System.Byte> value in several ways:</span></span>

-   <span data-ttu-id="4873c-106">您可以声明一个 <xref:System.Byte> 变量，并为其分配一个数据类型范围内的文本整数值 <xref:System.Byte> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-106">You can declare a <xref:System.Byte> variable and assign it a literal integer value that is within the range of the <xref:System.Byte> data type.</span></span> <span data-ttu-id="4873c-107">下面的示例声明了两个 <xref:System.Byte> 变量，并以这种方式为它们赋值。</span><span class="sxs-lookup"><span data-stu-id="4873c-107">The following example declares two <xref:System.Byte> variables and assigns them values in this way.</span></span>

     [!code-csharp[System.Byte.Instantiation#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.instantiation/cs/byteinstantiation1.cs#1)]
     [!code-vb[System.Byte.Instantiation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.instantiation/vb/byteinstantiate1.vb#1)]

-   <span data-ttu-id="4873c-108">可以将非字节数值分配给字节。</span><span class="sxs-lookup"><span data-stu-id="4873c-108">You can assign a non-byte numeric value to a byte.</span></span> <span data-ttu-id="4873c-109">这是一个收缩转换，因此，它需要在 c # 中使用强制转换运算符，并在中使用转换方法（如果 `Option Strict` 启用了 Visual Basic）。</span><span class="sxs-lookup"><span data-stu-id="4873c-109">This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if `Option Strict` is on.</span></span> <span data-ttu-id="4873c-110">如果非字节值是 <xref:System.Single> 包含小数部分的、 <xref:System.Double> 或 <xref:System.Decimal> 值，则其小数部分的处理取决于执行转换的编译器。</span><span class="sxs-lookup"><span data-stu-id="4873c-110">If the non-byte value is a <xref:System.Single>, <xref:System.Double>, or <xref:System.Decimal> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion.</span></span> <span data-ttu-id="4873c-111">下面的示例将几个数值赋给 <xref:System.Byte> 变量。</span><span class="sxs-lookup"><span data-stu-id="4873c-111">The following example assigns several numeric values to <xref:System.Byte> variables.</span></span>

     :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.instantiation/cs/byteinstantiation1.cs" interactive="try-dotnet-method" id="Snippet2":::
     :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.instantiation/vb/byteinstantiate1.vb" id="Snippet2":::

-   <span data-ttu-id="4873c-112">可以调用类的方法将 <xref:System.Convert> 任何支持的类型转换为 <xref:System.Byte> 值。</span><span class="sxs-lookup"><span data-stu-id="4873c-112">You can call a method of the <xref:System.Convert> class to convert any supported type to a <xref:System.Byte> value.</span></span> <span data-ttu-id="4873c-113">这是可能的，因为 <xref:System.Byte> 支持 <xref:System.IConvertible> 接口。</span><span class="sxs-lookup"><span data-stu-id="4873c-113">This is possible because <xref:System.Byte> supports the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4873c-114">下面的示例演示如何将值数组转换 <xref:System.Int32> 为 <xref:System.Byte> 值。</span><span class="sxs-lookup"><span data-stu-id="4873c-114">The following example illustrates the conversion of an array of <xref:System.Int32> values to <xref:System.Byte> values.</span></span>

     :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs" interactive="try-dotnet-method" id="Snippet4":::
     :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb" id="Snippet4":::

-   <span data-ttu-id="4873c-115">可以调用 <xref:System.Byte.Parse%2A> 或方法将 <xref:System.Byte.TryParse%2A> 值的字符串表示形式转换 <xref:System.Byte> 为 <xref:System.Byte> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-115">You can call the <xref:System.Byte.Parse%2A> or <xref:System.Byte.TryParse%2A> method to convert the string representation of a <xref:System.Byte> value to a <xref:System.Byte>.</span></span> <span data-ttu-id="4873c-116">字符串可以包含 decimal 或十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="4873c-116">The string can contain either decimal or hexadecimal digits.</span></span> <span data-ttu-id="4873c-117">下面的示例通过使用 decimal 和十六进制字符串说明了分析操作。</span><span class="sxs-lookup"><span data-stu-id="4873c-117">The following example illustrates the parse operation by using both a decimal and a hexadecimal string.</span></span>

     :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.instantiation/cs/byteinstantiation1.cs" interactive="try-dotnet-method" id="Snippet3":::
     :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.instantiation/vb/byteinstantiate1.vb" id="Snippet3":::

## <a name="performing-operations-on-byte-values"></a><span data-ttu-id="4873c-118">对字节值执行操作</span><span class="sxs-lookup"><span data-stu-id="4873c-118">Performing Operations on Byte Values</span></span>
 <span data-ttu-id="4873c-119"><xref:System.Byte>类型支持标准数学运算，如加法、减法、除法、乘法、减法、求反和一元求反。</span><span class="sxs-lookup"><span data-stu-id="4873c-119">The <xref:System.Byte> type supports standard mathematical operations such as addition, subtraction, division, multiplication, subtraction, negation, and unary negation.</span></span> <span data-ttu-id="4873c-120">与其他整型类型类似，该 <xref:System.Byte> 类型还支持按位 `AND` 、 `OR` 、 `XOR` 、左移和右移运算符。</span><span class="sxs-lookup"><span data-stu-id="4873c-120">Like the other integral types, the <xref:System.Byte> type also supports the bitwise `AND`, `OR`, `XOR`, left shift, and right shift operators.</span></span>

 <span data-ttu-id="4873c-121">可以使用标准数字运算符比较两个 <xref:System.Byte> 值，也可以调用 <xref:System.Byte.CompareTo%2A> 或 <xref:System.Byte.Equals%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-121">You can use the standard numeric operators to compare two <xref:System.Byte> values, or you can call the <xref:System.Byte.CompareTo%2A> or <xref:System.Byte.Equals%2A> method.</span></span>

 <span data-ttu-id="4873c-122">您还可以调用类的成员 <xref:System.Math> 来执行各种数值运算，包括获取数字的绝对值、计算从整数相除的商和余数、确定两个整数的最大值或最小值、获取数字的符号以及对数字进行舍入。</span><span class="sxs-lookup"><span data-stu-id="4873c-122">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.</span></span>

## <a name="representing-a-byte-as-a-string"></a><span data-ttu-id="4873c-123">将字节表示为字符串</span><span class="sxs-lookup"><span data-stu-id="4873c-123">Representing a Byte as a String</span></span>
 <span data-ttu-id="4873c-124"><xref:System.Byte>类型为标准和自定义数字格式字符串提供完全支持。</span><span class="sxs-lookup"><span data-stu-id="4873c-124">The <xref:System.Byte> type provides full support for standard and custom numeric format strings.</span></span> <span data-ttu-id="4873c-125"> (有关详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)、 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings)和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。 ) 不过，最常见的是，字节值以一位数到三位值的形式表示，无需任何其他格式，也不能是两位数的十六进制值。</span><span class="sxs-lookup"><span data-stu-id="4873c-125">(For more information, see [Formatting Types](/dotnet/standard/base-types/formatting-types), [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings), and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).) However, most commonly, byte values are represented as one-digit to three-digit values without any additional formatting, or as two-digit hexadecimal values.</span></span>

 <span data-ttu-id="4873c-126">若要将 <xref:System.Byte> 值设置为不带前导零的整数字符串，可以调用无参数 <xref:System.Byte.ToString> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-126">To format a <xref:System.Byte> value as an integral string with no leading zeros, you can call the parameterless <xref:System.Byte.ToString> method.</span></span> <span data-ttu-id="4873c-127">通过使用 "D" 格式说明符，还可以在字符串表示形式中包含指定数目的前导零。</span><span class="sxs-lookup"><span data-stu-id="4873c-127">By using the "D" format specifier, you can also include a specified number of leading zeros in the string representation.</span></span> <span data-ttu-id="4873c-128">通过使用 "X" 格式说明符，可将 <xref:System.Byte> 值表示为十六进制字符串。</span><span class="sxs-lookup"><span data-stu-id="4873c-128">By using the "X" format specifier, you can represent a <xref:System.Byte> value as a hexadecimal string.</span></span> <span data-ttu-id="4873c-129">下面的示例 <xref:System.Byte> 通过这三种方式对值数组中的元素进行格式设置。</span><span class="sxs-lookup"><span data-stu-id="4873c-129">The following example formats the elements in an array of <xref:System.Byte> values in these three ways.</span></span>

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.formatting/cs/formatting1.cs" interactive="try-dotnet-method" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.formatting/vb/formatting1.vb" id="Snippet1":::

 <span data-ttu-id="4873c-130">还可以 <xref:System.Byte> 通过调用 <xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29> 方法并提供作为方法的第二个参数的基数，将值的格式设置为二进制、八进制、十进制或十六进制字符串。</span><span class="sxs-lookup"><span data-stu-id="4873c-130">You can also format a <xref:System.Byte> value as a binary, octal, decimal, or hexadecimal string by calling the <xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29> method and supplying the base as the method's second parameter.</span></span> <span data-ttu-id="4873c-131">下面的示例调用此方法以显示字节值数组的二进制、八进制和十六进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="4873c-131">The following example calls this method to display the binary, octal, and hexadecimal representations of an array of byte values.</span></span>

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.formatting/cs/formatting1.cs" interactive="try-dotnet-method" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.formatting/vb/formatting1.vb" id="Snippet2":::

## <a name="working-with-non-decimal-byte-values"></a><span data-ttu-id="4873c-132">使用非十进制字节值</span><span class="sxs-lookup"><span data-stu-id="4873c-132">Working with Non-Decimal Byte Values</span></span>
 <span data-ttu-id="4873c-133">除了使用单个字节作为十进制值外，您可能还需要使用字节值执行按位运算，或者处理字节数组或使用字节值的二进制或十六进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="4873c-133">In addition to working with individual bytes as decimal values, you may want to perform bitwise operations with byte values, or work with byte arrays or with the binary or hexadecimal representations of byte values.</span></span> <span data-ttu-id="4873c-134">例如，方法的重载 <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> 可以将每个基元数据类型转换为一个字节数组，并且该 <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> 方法将 <xref:System.Numerics.BigInteger> 值转换为字节数组。</span><span class="sxs-lookup"><span data-stu-id="4873c-134">For example, overloads of the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method can convert each of the primitive data types to a byte array, and the <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> method converts a <xref:System.Numerics.BigInteger> value to a byte array.</span></span>

 <span data-ttu-id="4873c-135"><xref:System.Byte> 值仅按大小以8位表示，无符号位。</span><span class="sxs-lookup"><span data-stu-id="4873c-135"><xref:System.Byte> values are represented in 8 bits by their magnitude only, without a sign bit.</span></span> <span data-ttu-id="4873c-136">当你对值执行按位运算 <xref:System.Byte> 或使用单个位时，这一点很重要。</span><span class="sxs-lookup"><span data-stu-id="4873c-136">This is important to keep in mind when you perform bitwise operations on <xref:System.Byte> values or when you work with individual bits.</span></span> <span data-ttu-id="4873c-137">若要对任意两个非十进制值执行数字、布尔或比较运算，这两个值必须使用相同的表示形式。</span><span class="sxs-lookup"><span data-stu-id="4873c-137">In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.</span></span>

 <span data-ttu-id="4873c-138">对两个值执行操作时 <xref:System.Byte> ，这些值共享相同的表示形式，因此结果是准确的。</span><span class="sxs-lookup"><span data-stu-id="4873c-138">When an operation is performed on two <xref:System.Byte> values, the values share the same representation, so the result is accurate.</span></span> <span data-ttu-id="4873c-139">下面的示例对此进行了说明，该示例屏蔽了某个值的最低序位， <xref:System.Byte> 以确保该值为偶数。</span><span class="sxs-lookup"><span data-stu-id="4873c-139">This is illustrated in the following example, which masks the lowest-order bit of a <xref:System.Byte> value to ensure that it is even.</span></span>

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.bitwise/cs/bitwise1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.bitwise/vb/bitwise1.vb" id="Snippet1":::

 <span data-ttu-id="4873c-140">另一方面，当你同时使用未签名的位和有符号的位时，按位运算会比较复杂，这是因为 <xref:System.SByte> 值使用正值的符号和量表示形式，而两个的补码表示形式为负值。</span><span class="sxs-lookup"><span data-stu-id="4873c-140">On the other hand, when you work with both unsigned and signed bits, bitwise operations are complicated by the fact that the <xref:System.SByte> values use sign-and-magnitude representation for positive values, and two's complement representation for negative values.</span></span> <span data-ttu-id="4873c-141">为了执行有意义的按位运算，必须将值转换为两个等效的表示形式，并且必须保留有关符号位的信息。</span><span class="sxs-lookup"><span data-stu-id="4873c-141">In order to perform a meaningful bitwise operation, the values must be converted to two equivalent representations, and information about the sign bit must be preserved.</span></span> <span data-ttu-id="4873c-142">下面的示例执行此来掩盖8位有符号和无符号值数组的位2和4。</span><span class="sxs-lookup"><span data-stu-id="4873c-142">The following example does this to mask out bits 2 and 4 of an array of 8-bit signed and unsigned values.</span></span>

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.bitwise/cs/bitwise2.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.bitwise/vb/bitwise2.vb" id="Snippet2":::

 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="4873c-143">此类型的所有成员都是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="4873c-143">All members of this type are thread safe.</span></span> <span data-ttu-id="4873c-144">看似修改实例状态的成员实际上返回用新值初始化的新实例。</span><span class="sxs-lookup"><span data-stu-id="4873c-144">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="4873c-145">与任何其他类型一样，读取和写入包含此类型的实例的共享变量时，必须通过锁保护以保证线程安全。</span><span class="sxs-lookup"><span data-stu-id="4873c-145">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.SByte" />
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IFormattable" />
    <altmember cref="T:System.IConvertible" />
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-cs/"><span data-ttu-id="4873c-146">示例：.NET Core WinForms 格式设置实用工具 (C#)</span><span class="sxs-lookup"><span data-stu-id="4873c-146">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-vb/"><span data-ttu-id="4873c-147">示例：.NET Core WinForms 格式设置实用工具 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4873c-147">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4873c-148">将此实例与指定的对象或 <see cref="T:System.Byte" /> 进行比较，并返回二者相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="4873c-148">Compares this instance to a specified object or <see cref="T:System.Byte" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.CompareTo(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Byte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Byte value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : byte -&gt; int&#xA;override this.CompareTo : byte -&gt; int" Usage="byte.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4873c-149">要比较的 8 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="4873c-149">An 8-bit unsigned integer to compare.</span></span></param>
        <summary><span data-ttu-id="4873c-150">将此实例与指定的 8 位无符号整数进行比较并返回对其相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="4873c-150">Compares this instance to a specified 8-bit unsigned integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="4873c-151">一个有符号的整数，它指示此实例和 <paramref name="value" /> 的相对顺序。</span><span class="sxs-lookup"><span data-stu-id="4873c-151">A signed integer that indicates the relative order of this instance and <paramref name="value" />.</span></span>

 <list type="table"><listheader><term> <span data-ttu-id="4873c-152">返回值</span><span class="sxs-lookup"><span data-stu-id="4873c-152">Return Value</span></span>

 </term><description> <span data-ttu-id="4873c-153">说明</span><span class="sxs-lookup"><span data-stu-id="4873c-153">Description</span></span>

 </description></listheader><item><term> <span data-ttu-id="4873c-154">小于零</span><span class="sxs-lookup"><span data-stu-id="4873c-154">Less than zero</span></span>

 </term><description> <span data-ttu-id="4873c-155">此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-155">This instance is less than <paramref name="value" />.</span></span>

 </description></item><item><term> <span data-ttu-id="4873c-156">零</span><span class="sxs-lookup"><span data-stu-id="4873c-156">Zero</span></span>

 </term><description> <span data-ttu-id="4873c-157">此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-157">This instance is equal to <paramref name="value" />.</span></span>

 </description></item><item><term> <span data-ttu-id="4873c-158">大于零</span><span class="sxs-lookup"><span data-stu-id="4873c-158">Greater than zero</span></span>

 </term><description> <span data-ttu-id="4873c-159">此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-159">This instance is greater than <paramref name="value" />.</span></span>

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-160">此方法实现 <xref:System.IComparable%601?displayProperty=nameWithType> 接口，且执行方式略优于 <xref:System.Byte.CompareTo%28System.Object%29?displayProperty=nameWithType> 方法，因为它不必将 `value` 参数转换为对象。</span><span class="sxs-lookup"><span data-stu-id="4873c-160">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Byte.CompareTo%28System.Object%29?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>

 <span data-ttu-id="4873c-161">根据您的编程语言，可以编写一个方法，在 <xref:System.Byte.CompareTo%2A> 此方法中，参数类型 (比实例类型更窄) 位。</span><span class="sxs-lookup"><span data-stu-id="4873c-161">Depending on your programming language, it might be possible to code a <xref:System.Byte.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="4873c-162">这是可能的，因为某些编程语言会执行将参数表示为类型的隐式扩大转换，该类型的位数与实例的位数一样多。</span><span class="sxs-lookup"><span data-stu-id="4873c-162">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>

 <span data-ttu-id="4873c-163">例如，假设实例类型为 <xref:System.Int32> ，而参数类型为 <xref:System.Byte> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-163">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="4873c-164">Microsoft c # 编译器生成表示参数值的指令 <xref:System.Int32> ，然后生成一个 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> 方法，该方法将实例的值 <xref:System.Int32> 与 <xref:System.Int32> 参数表示形式进行比较。</span><span class="sxs-lookup"><span data-stu-id="4873c-164">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32>, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>

 <span data-ttu-id="4873c-165">请查阅编程语言的文档，以确定其编译器是否对数值类型执行隐式扩大转换。</span><span class="sxs-lookup"><span data-stu-id="4873c-165">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>



## Examples
 <span data-ttu-id="4873c-166">下面的代码示例演示了 `CompareTo` 多个值和引用类型的方法的泛型和非泛型版本。</span><span class="sxs-lookup"><span data-stu-id="4873c-166">The following code example demonstrates generic and non-generic versions of the `CompareTo` method for several value and reference types.</span></span>

 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Byte.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="byte.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4873c-167">要比较的对象，或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-167">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="4873c-168">将此实例与指定对象进行比较并返回一个对二者的相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="4873c-168">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="4873c-169">一个有符号的整数，它指示此实例和 <paramref name="value" /> 的相对顺序。</span><span class="sxs-lookup"><span data-stu-id="4873c-169">A signed integer that indicates the relative order of this instance and <paramref name="value" />.</span></span>

 <list type="table"><listheader><term> <span data-ttu-id="4873c-170">返回值</span><span class="sxs-lookup"><span data-stu-id="4873c-170">Return Value</span></span>

 </term><description> <span data-ttu-id="4873c-171">说明</span><span class="sxs-lookup"><span data-stu-id="4873c-171">Description</span></span>

 </description></listheader><item><term> <span data-ttu-id="4873c-172">小于零</span><span class="sxs-lookup"><span data-stu-id="4873c-172">Less than zero</span></span>

 </term><description> <span data-ttu-id="4873c-173">此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-173">This instance is less than <paramref name="value" />.</span></span>

 </description></item><item><term> <span data-ttu-id="4873c-174">零</span><span class="sxs-lookup"><span data-stu-id="4873c-174">Zero</span></span>

 </term><description> <span data-ttu-id="4873c-175">此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-175">This instance is equal to <paramref name="value" />.</span></span>

 </description></item><item><term> <span data-ttu-id="4873c-176">大于零</span><span class="sxs-lookup"><span data-stu-id="4873c-176">Greater than zero</span></span>

 </term><description> <span data-ttu-id="4873c-177">此实例大于 <paramref name="value" />，或 <paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-177">This instance is greater than <paramref name="value" />, or <paramref name="value" /> is <see langword="null" />.</span></span></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-178">`value` 必须为 `null` 或的实例 <xref:System.Byte> ; 否则，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="4873c-178">`value` must be `null` or an instance of <xref:System.Byte>; otherwise, an exception is thrown.</span></span>

 <span data-ttu-id="4873c-179">的任何实例 <xref:System.Byte> ，无论其值如何，都视为大于 `null` 。</span><span class="sxs-lookup"><span data-stu-id="4873c-179">Any instance of <xref:System.Byte>, regardless of its value, is considered greater than `null`.</span></span>

 <span data-ttu-id="4873c-180">实现此方法是为了支持 <xref:System.IComparable> 接口。</span><span class="sxs-lookup"><span data-stu-id="4873c-180">This method is implemented to support the <xref:System.IComparable> interface.</span></span>



## Examples
 <span data-ttu-id="4873c-181">下面的代码示例演示 <xref:System.Byte.CompareTo%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-181">The following code example demonstrates the <xref:System.Byte.CompareTo%2A> method.</span></span>

 [!code-cpp[System.Byte Examples#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte Examples/CPP/systembyte.cpp#3)]
 [!code-csharp[System.Byte Examples#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte Examples/CS/systembyte.cs#3)]
 [!code-vb[System.Byte Examples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte Examples/VB/systembyte.vb#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4873c-182"><paramref name="value" /> 不是 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-182"><paramref name="value" /> is not a <see cref="T:System.Byte" />.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Byte.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4873c-183">返回一个值，该值指示 <see cref="T:System.Byte" /> 的两个实例是否表示同一个值。</span><span class="sxs-lookup"><span data-stu-id="4873c-183">Returns a value indicating whether two instances of <see cref="T:System.Byte" /> represent the same value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="4873c-184">下面的代码示例确定第一个 <xref:System.Byte> 值是否等于第二个值 <xref:System.Byte> ，以及第一个值是否 <xref:System.Byte> 等于第二个值的装箱版本 <xref:System.Byte> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-184">The following code example determines whether the first <xref:System.Byte> value is equal to the second <xref:System.Byte> value, and whether the first <xref:System.Byte> value is equal to the boxed version of the second <xref:System.Byte> value.</span></span>

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.byte.equals/cpp/eq.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.equals/cs/eq.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.equals/vb/eq.vb" id="Snippet1":::

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (byte obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(unsigned int8 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.Equals(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Byte obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : byte -&gt; bool" Usage="byte.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Byte" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="4873c-185">要与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="4873c-185">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="4873c-186">返回一个值，该值指示此实例和指定的 <see cref="T:System.Byte" /> 对象是否表示相同的值。</span><span class="sxs-lookup"><span data-stu-id="4873c-186">Returns a value indicating whether this instance and a specified <see cref="T:System.Byte" /> object represent the same value.</span></span></summary>
        <returns><span data-ttu-id="4873c-187">如果 <see langword="true" /> 与此实例相等，则为 <paramref name="obj" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-187"><see langword="true" /> if <paramref name="obj" /> is equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-188">此方法实现 <xref:System.IEquatable%601?displayProperty=nameWithType> 接口，并且执行的效果略优于， <xref:System.Byte.Equals%28System.Object%29> 因为无需将 `obj` 参数转换为对象。</span><span class="sxs-lookup"><span data-stu-id="4873c-188">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Byte.Equals%28System.Object%29> because it does not have to convert the `obj` parameter to an object.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Byte.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="byte.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="4873c-189">与此实例进行比较的对象，或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-189">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="4873c-190">返回一个值，该值指示此实例是否等于指定的对象。</span><span class="sxs-lookup"><span data-stu-id="4873c-190">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="4873c-191">如果 <see langword="true" /> 是 <paramref name="obj" /> 的实例并且等于此实例的值，则为 <see cref="T:System.Byte" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-191"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Byte" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

 ]]></format>
        </remarks>
        <altmember cref="M:System.Byte.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="byte.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4873c-192">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="4873c-192">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="4873c-193">当前 <see cref="T:System.Byte" /> 的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="4873c-193">A hash code for the current <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="byte.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4873c-194">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-194">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Byte" />.</span></span></summary>
        <returns><span data-ttu-id="4873c-195">枚举常数 <see cref="F:System.TypeCode.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-195">The enumerated constant, <see cref="F:System.TypeCode.Byte" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const byte MaxValue = 255;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int8 MaxValue = unsigned int8(255)" />
      <MemberSignature Language="DocId" Value="F:System.Byte.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Byte  = 255" />
      <MemberSignature Language="C++ CLI" Value="public: System::Byte MaxValue = 255;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : byte" Usage="System.byte.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <MemberValue>255</MemberValue>
      <Docs>
        <summary><span data-ttu-id="4873c-196">表示 <see cref="T:System.Byte" /> 的最大可能值。</span><span class="sxs-lookup"><span data-stu-id="4873c-196">Represents the largest possible value of a <see cref="T:System.Byte" />.</span></span> <span data-ttu-id="4873c-197">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="4873c-197">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-198">此常量的值为 255 (十六进制 0xFF) 。</span><span class="sxs-lookup"><span data-stu-id="4873c-198">The value of this constant is 255 (hexadecimal 0xFF).</span></span>



## Examples
 <span data-ttu-id="4873c-199">下面的示例演示如何使用 <xref:System.Byte.MaxValue> 字段来对超出可能字节值范围的值的变量输入进行屏蔽。</span><span class="sxs-lookup"><span data-stu-id="4873c-199">The following example demonstrates how to use the <xref:System.Byte.MaxValue> field to screen variable inputs for values that are outside the range of possible byte values.</span></span>

 [!code-cpp[System.Byte Examples#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte Examples/CPP/systembyte.cpp#1)]
 [!code-csharp[System.Byte Examples#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte Examples/CS/systembyte.cs#1)]
 [!code-vb[System.Byte Examples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte Examples/VB/systembyte.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="F:System.Byte.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const byte MinValue = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int8 MinValue = unsigned int8(0)" />
      <MemberSignature Language="DocId" Value="F:System.Byte.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Byte  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: System::Byte MinValue = 0;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : byte" Usage="System.byte.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="4873c-200">表示 <see cref="T:System.Byte" /> 的最小可能值。</span><span class="sxs-lookup"><span data-stu-id="4873c-200">Represents the smallest possible value of a <see cref="T:System.Byte" />.</span></span> <span data-ttu-id="4873c-201">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="4873c-201">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-202">此常量的值为0。</span><span class="sxs-lookup"><span data-stu-id="4873c-202">The value of this constant is 0.</span></span>



## Examples
 <span data-ttu-id="4873c-203">下面的示例演示如何使用 <xref:System.Byte.MinValue> 字段来对超出可能字节值范围的值的变量输入进行屏蔽。</span><span class="sxs-lookup"><span data-stu-id="4873c-203">The following example demonstrates how to use the <xref:System.Byte.MinValue> field to screen variable inputs for values that are outside the range of possible byte values.</span></span>

 [!code-cpp[System.Byte Examples#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte Examples/CPP/systembyte.cpp#1)]
 [!code-csharp[System.Byte Examples#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte Examples/CS/systembyte.cs#1)]
 [!code-vb[System.Byte Examples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte Examples/VB/systembyte.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="F:System.Byte.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4873c-204">将数字的字符串表示形式转换为它的等效 <see cref="T:System.Byte" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="4873c-204">Converts the string representation of a number to its <see cref="T:System.Byte" /> equivalent.</span></span></summary>
        <altmember cref="Overload:System.Byte.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static byte Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; byte" Usage="System.byte.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="4873c-205">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="4873c-205">A string that contains a number to convert.</span></span> <span data-ttu-id="4873c-206">该字符串使用 <see cref="F:System.Globalization.NumberStyles.Integer" /> 样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="4873c-206">The string is interpreted using the <see cref="F:System.Globalization.NumberStyles.Integer" /> style.</span></span></param>
        <summary><span data-ttu-id="4873c-207">将数字的字符串表示形式转换为它的等效 <see cref="T:System.Byte" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="4873c-207">Converts the string representation of a number to its <see cref="T:System.Byte" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="4873c-208">一个字节值，它与 <paramref name="s" /> 中包含的数相等。</span><span class="sxs-lookup"><span data-stu-id="4873c-208">A byte value that is equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-209">`s`参数包含以下格式的编号：</span><span class="sxs-lookup"><span data-stu-id="4873c-209">The `s` parameter contains a number of the form:</span></span>

 <span data-ttu-id="4873c-210">ws[sign] 位数 [ws]</span><span class="sxs-lookup"><span data-stu-id="4873c-210">[ws][sign]digits[ws]</span></span>

 <span data-ttu-id="4873c-211">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="4873c-211">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="4873c-212">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="4873c-212">The following table describes each element.</span></span>

|<span data-ttu-id="4873c-213">元素</span><span class="sxs-lookup"><span data-stu-id="4873c-213">Element</span></span>|<span data-ttu-id="4873c-214">说明</span><span class="sxs-lookup"><span data-stu-id="4873c-214">Description</span></span>|
|-------------|-----------------|
|<span data-ttu-id="4873c-215">*ws*</span><span class="sxs-lookup"><span data-stu-id="4873c-215">*ws*</span></span>|<span data-ttu-id="4873c-216">可选空白。</span><span class="sxs-lookup"><span data-stu-id="4873c-216">Optional white space.</span></span>|
|<span data-ttu-id="4873c-217">*sign*</span><span class="sxs-lookup"><span data-stu-id="4873c-217">*sign*</span></span>|<span data-ttu-id="4873c-218">可选的正号或负号。</span><span class="sxs-lookup"><span data-stu-id="4873c-218">An optional positive or negative sign.</span></span>|
|<span data-ttu-id="4873c-219">*位数*</span><span class="sxs-lookup"><span data-stu-id="4873c-219">*digits*</span></span>|<span data-ttu-id="4873c-220">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="4873c-220">A sequence of digits ranging from 0 to 9.</span></span>|

 <span data-ttu-id="4873c-221">`s`使用样式对参数进行解释 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-221">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="4873c-222">除了字节值的十进制数外，只允许使用前导和尾随空格以及前导符号。</span><span class="sxs-lookup"><span data-stu-id="4873c-222">In addition to the byte value's decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="4873c-223"> (如果存在符号，则该符号必须为正号，否则方法将引发 <xref:System.OverflowException> 。 ) 若要显式定义可出现在中的样式元素 `s` ，请使用 <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> 或 <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-223">(If the sign is present, it must be a positive sign or the method throws an <xref:System.OverflowException>.) To explicitly define the style elements that can be present in `s`, use either the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>

 <span data-ttu-id="4873c-224">`s`使用为 <xref:System.Globalization.NumberFormatInfo> 当前系统区域性初始化的对象中的格式设置信息分析参数。</span><span class="sxs-lookup"><span data-stu-id="4873c-224">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="4873c-225">有关详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="4873c-225">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="4873c-226">若要使用其他某个区域性的格式设置信息分析字符串，请使用 <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-226">To parse a string using the formatting information of some other culture, use the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>



## Examples
 <span data-ttu-id="4873c-227">下面的示例演示如何使用方法将字符串值转换为字节值 <xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-227">The following example demonstrates how to convert a string value into a byte value using the <xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4873c-228">然后，将生成的字节值显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="4873c-228">The resulting byte value is then displayed to the console.</span></span>

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.Parse/cpp/parse.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.Parse/CS/parse.cs" interactive="try-dotnet-method" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.Parse/VB/parse.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4873c-229"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-229"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="4873c-230"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="4873c-230"><paramref name="s" /> is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="4873c-231"><paramref name="s" /> 表示一个小于 <see cref="F:System.Byte.MinValue" /> 或大于 <see cref="F:System.Byte.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="4873c-231"><paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Byte.ToString" />
        <altmember cref="F:System.Byte.MaxValue" />
        <altmember cref="F:System.Byte.MinValue" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="4873c-232">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="4873c-232">Parsing Numeric Strings in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="4873c-233">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="4873c-233">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static byte Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; byte" Usage="System.byte.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="4873c-234">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="4873c-234">A string that contains a number to convert.</span></span> <span data-ttu-id="4873c-235">该字符串使用由 <paramref name="style" /> 指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="4873c-235">The string is interpreted using the style specified by <paramref name="style" />.</span></span></param>
        <param name="style"><span data-ttu-id="4873c-236">枚举值的按位组合，用于指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="4873c-236">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="4873c-237">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-237">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="4873c-238">将指定样式的数字的字符串表示形式转换为它的等效 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-238">Converts the string representation of a number in a specified style to its <see cref="T:System.Byte" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="4873c-239">一个字节值，它与 <paramref name="s" /> 中包含的数相等。</span><span class="sxs-lookup"><span data-stu-id="4873c-239">A byte value that is equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-240">`style`参数定义在参数中允许的样式元素 (如空格或正号) ，以便 `s` 分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="4873c-240">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="4873c-241">它必须是枚举中的位标志的组合 <xref:System.Globalization.NumberStyles> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-241">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="4873c-242">根据的值 `style` ， `s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="4873c-242">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>

 <span data-ttu-id="4873c-243">ws[$][sign] 位数 [.fractional_digits] [e [sign] 数字] [ws]</span><span class="sxs-lookup"><span data-stu-id="4873c-243">[ws][$][sign]digits[.fractional_digits][e[sign]digits][ws]</span></span>

 <span data-ttu-id="4873c-244">或者，如果 `style` 包括 <xref:System.Globalization.NumberStyles.AllowHexSpecifier> ：</span><span class="sxs-lookup"><span data-stu-id="4873c-244">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>

 <span data-ttu-id="4873c-245">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="4873c-245">[ws]hexdigits[ws]</span></span>

 <span data-ttu-id="4873c-246">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="4873c-246">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="4873c-247">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="4873c-247">The following table describes each element.</span></span>

|<span data-ttu-id="4873c-248">元素</span><span class="sxs-lookup"><span data-stu-id="4873c-248">Element</span></span>|<span data-ttu-id="4873c-249">说明</span><span class="sxs-lookup"><span data-stu-id="4873c-249">Description</span></span>|
|-------------|-----------------|
|<span data-ttu-id="4873c-250">*ws*</span><span class="sxs-lookup"><span data-stu-id="4873c-250">*ws*</span></span>|<span data-ttu-id="4873c-251">可选空白。</span><span class="sxs-lookup"><span data-stu-id="4873c-251">Optional white space.</span></span> <span data-ttu-id="4873c-252">`s`如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 标志，或者如果 style 包含 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 标志，则空格可以出现在的开头。</span><span class="sxs-lookup"><span data-stu-id="4873c-252">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of s if style includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|
|*$*|<span data-ttu-id="4873c-253">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="4873c-253">A culture-specific currency symbol.</span></span> <span data-ttu-id="4873c-254">其在字符串中的位置由 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> 当前区域性的属性定义。</span><span class="sxs-lookup"><span data-stu-id="4873c-254">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> property of the current culture.</span></span> <span data-ttu-id="4873c-255">`s`如果包含标志，则当前区域性的货币符号可以出现在中 `style` <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-255">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="4873c-256">*sign*</span><span class="sxs-lookup"><span data-stu-id="4873c-256">*sign*</span></span>|<span data-ttu-id="4873c-257">可选正号。</span><span class="sxs-lookup"><span data-stu-id="4873c-257">An optional positive sign.</span></span> <span data-ttu-id="4873c-258"> (如果 <xref:System.OverflowException> 中存在负号，方法将引发 `s` ) 。如果 `s` `style` 包含 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 标志， `s` `style` <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 则该方法将引发; 如果包含标志，则为末尾处。</span><span class="sxs-lookup"><span data-stu-id="4873c-258">(The method throws an <xref:System.OverflowException> if a negative sign is present in `s`.) The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="4873c-259">*位数*</span><span class="sxs-lookup"><span data-stu-id="4873c-259">*digits*</span></span>|<span data-ttu-id="4873c-260">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="4873c-260">A sequence of digits from 0 through 9.</span></span>|
|<span data-ttu-id="4873c-261">*.*</span><span class="sxs-lookup"><span data-stu-id="4873c-261">*.*</span></span>|<span data-ttu-id="4873c-262">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="4873c-262">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="4873c-263">`s`如果包含标志，则当前区域性的小数点符号可以出现在中 `style` <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-263">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="4873c-264">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="4873c-264">*fractional_digits*</span></span>|<span data-ttu-id="4873c-265">数字0的一个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4873c-265">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="4873c-266">`s`仅当包含标志时，小数位才能出现在中 `style` <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-266">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="4873c-267">*e*</span><span class="sxs-lookup"><span data-stu-id="4873c-267">*e*</span></span>|<span data-ttu-id="4873c-268">E 或 E 字符，指示值以指数表示法表示。</span><span class="sxs-lookup"><span data-stu-id="4873c-268">The e or E character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="4873c-269">`s`如果包含标志，则参数可以表示指数表示法中的数字 `style` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-269">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="4873c-270">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="4873c-270">*hexdigits*</span></span>|<span data-ttu-id="4873c-271">从0到 f 的十六进制数字序列，或者从0到 F。</span><span class="sxs-lookup"><span data-stu-id="4873c-271">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|

> [!NOTE]
> <span data-ttu-id="4873c-272">`s`无论参数的值如何，分析操作都将忽略中任何终止的 NUL (U + 0000) 字符 `style` 。</span><span class="sxs-lookup"><span data-stu-id="4873c-272">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="4873c-273">只包含十进制数字的字符串 (与 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 样式) 总是成功分析的字符串。</span><span class="sxs-lookup"><span data-stu-id="4873c-273">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="4873c-274">大多数其余 <xref:System.Globalization.NumberStyles> 成员控件元素在此输入字符串中可能已存在但不是必需的。</span><span class="sxs-lookup"><span data-stu-id="4873c-274">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="4873c-275">下表指示各个成员如何 <xref:System.Globalization.NumberStyles> 影响可能出现在中的元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="4873c-275">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>

|<span data-ttu-id="4873c-276">非复合 NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="4873c-276">Non-composite NumberStyles values</span></span>|<span data-ttu-id="4873c-277">除数字外允许在 s 中使用的元素</span><span class="sxs-lookup"><span data-stu-id="4873c-277">Elements permitted in s in addition to digits</span></span>|
|----------------------------------------|---------------------------------------------------|
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="4873c-278">仅十进制数字。</span><span class="sxs-lookup"><span data-stu-id="4873c-278">Decimal digits only.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="4873c-279">*.*</span><span class="sxs-lookup"><span data-stu-id="4873c-279">The *.*</span></span> <span data-ttu-id="4873c-280">和 *fractional_digits* 元素。</span><span class="sxs-lookup"><span data-stu-id="4873c-280">and *fractional_digits* elements.</span></span> <span data-ttu-id="4873c-281">但 *fractional_digits* 只能包含一个或多个0位数字 <xref:System.OverflowException> ，否则将引发。</span><span class="sxs-lookup"><span data-stu-id="4873c-281">However, *fractional_digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="4873c-282">`s`参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="4873c-282">The `s` parameter can also use exponential notation.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="4873c-283">开头的 *ws* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="4873c-283">The *ws* element at the beginning of `s`.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="4873c-284">末尾处的 *ws* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="4873c-284">The *ws* element at the end of `s`.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="4873c-285">正负号可以出现在 *数字* 之前。</span><span class="sxs-lookup"><span data-stu-id="4873c-285">A positive sign can appear before *digits*.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="4873c-286">正负号可以出现在 *数字* 之后。</span><span class="sxs-lookup"><span data-stu-id="4873c-286">A positive sign can appear after *digits*.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="4873c-287">尽管支持此标志，但在中使用括号会 `s` 导致 <xref:System.OverflowException> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-287">Although this flag is supported, the use of parentheses in `s` results in an <xref:System.OverflowException>.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="4873c-288">尽管组分隔符符号可以出现在中 `s` ，但它前面只能有一个或多个0数字。</span><span class="sxs-lookup"><span data-stu-id="4873c-288">Although the group separator symbol can appear in `s`, it can be preceded by only one or more 0 digits.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="4873c-289">*$* 元素。</span><span class="sxs-lookup"><span data-stu-id="4873c-289">The *$* element.</span></span>|

 <span data-ttu-id="4873c-290">如果 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 使用标志，则 `s` 必须是不带前缀的十六进制值。</span><span class="sxs-lookup"><span data-stu-id="4873c-290">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="4873c-291">例如，"F3" 分析成功，但 "0xF3" 不能。</span><span class="sxs-lookup"><span data-stu-id="4873c-291">For example, "F3" parses successfully, but "0xF3" does not.</span></span> <span data-ttu-id="4873c-292">可以与之组合的其他标志只能是 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 和 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-292">The only other flags that can be combined with it are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4873c-293">枚举 (<xref:System.Globalization.NumberStyles> 包含复合数字样式， <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType> 其中包含两个空格标志。 ) </span><span class="sxs-lookup"><span data-stu-id="4873c-293">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>

 <span data-ttu-id="4873c-294">`s`使用为 <xref:System.Globalization.NumberFormatInfo> 当前系统区域性初始化的对象中的格式设置信息分析参数。</span><span class="sxs-lookup"><span data-stu-id="4873c-294">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="4873c-295">若要使用其他某个区域性的格式设置信息，请调用 <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 重载。</span><span class="sxs-lookup"><span data-stu-id="4873c-295">To use the formatting information of some other culture, call the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> overload.</span></span>



## Examples
 <span data-ttu-id="4873c-296">下面的示例通过方法分析值的字符串表示形式 `Byte` <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-296">The following example parses string representations of `Byte` values with the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4873c-297">该示例的当前区域性为 en-us。</span><span class="sxs-lookup"><span data-stu-id="4873c-297">The current culture for the example is en-US.</span></span>

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.Parse/cpp/parse.cpp" id="Snippet3":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.Parse/CS/parse.cs" interactive="try-dotnet-method" id="Snippet3":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.Parse/VB/parse.vb" id="Snippet3":::

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4873c-298"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-298"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="4873c-299"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="4873c-299"><paramref name="s" /> is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="4873c-300"><paramref name="s" /> 表示一个小于 <see cref="F:System.Byte.MinValue" /> 或大于 <see cref="F:System.Byte.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="4873c-300"><paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span>

<span data-ttu-id="4873c-301">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4873c-301">-or-</span></span>

 <span data-ttu-id="4873c-302"><paramref name="s" /> 包含非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="4873c-302"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4873c-303"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="4873c-303"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>

<span data-ttu-id="4873c-304">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4873c-304">-or-</span></span>

 <span data-ttu-id="4873c-305"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="4873c-305"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.Byte.ToString" />
        <altmember cref="Overload:System.Byte.TryParse" />
        <altmember cref="F:System.Byte.MaxValue" />
        <altmember cref="F:System.Byte.MinValue" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="4873c-306">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="4873c-306">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static byte Parse (string s, IFormatProvider provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; byte" Usage="System.byte.Parse (s, provider)" />
      <MemberSignature Language="C#" Value="public static byte Parse (string s, IFormatProvider? provider);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="4873c-307">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="4873c-307">A string that contains a number to convert.</span></span> <span data-ttu-id="4873c-308">该字符串使用 <see cref="F:System.Globalization.NumberStyles.Integer" /> 样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="4873c-308">The string is interpreted using the <see cref="F:System.Globalization.NumberStyles.Integer" /> style.</span></span></param>
        <param name="provider"><span data-ttu-id="4873c-309">一个对象，它提供有关 <paramref name="s" /> 的区域性特定分析信息。</span><span class="sxs-lookup"><span data-stu-id="4873c-309">An object that supplies culture-specific parsing information about <paramref name="s" />.</span></span> <span data-ttu-id="4873c-310">如果 <paramref name="provider" /> 为 <see langword="null" />，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="4873c-310">If <paramref name="provider" /> is <see langword="null" />, the thread current culture is used.</span></span></param>
        <summary><span data-ttu-id="4873c-311">将指定的区域性特定格式的数字字符串表示形式转换为它的等效 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-311">Converts the string representation of a number in a specified culture-specific format to its <see cref="T:System.Byte" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="4873c-312">一个字节值，它与 <paramref name="s" /> 中包含的数相等。</span><span class="sxs-lookup"><span data-stu-id="4873c-312">A byte value that is equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-313">`s`参数包含以下格式的编号：</span><span class="sxs-lookup"><span data-stu-id="4873c-313">The `s` parameter contains a number of the form:</span></span>

 <span data-ttu-id="4873c-314">ws[sign] 位数 [ws]</span><span class="sxs-lookup"><span data-stu-id="4873c-314">[ws][sign]digits[ws]</span></span>

 <span data-ttu-id="4873c-315">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="4873c-315">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="4873c-316">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="4873c-316">The following table describes each element.</span></span>

|<span data-ttu-id="4873c-317">元素</span><span class="sxs-lookup"><span data-stu-id="4873c-317">Element</span></span>|<span data-ttu-id="4873c-318">说明</span><span class="sxs-lookup"><span data-stu-id="4873c-318">Description</span></span>|
|-------------|-----------------|
|<span data-ttu-id="4873c-319">*ws*</span><span class="sxs-lookup"><span data-stu-id="4873c-319">*ws*</span></span>|<span data-ttu-id="4873c-320">可选空白。</span><span class="sxs-lookup"><span data-stu-id="4873c-320">Optional white space.</span></span>|
|<span data-ttu-id="4873c-321">*sign*</span><span class="sxs-lookup"><span data-stu-id="4873c-321">*sign*</span></span>|<span data-ttu-id="4873c-322">可选正号。</span><span class="sxs-lookup"><span data-stu-id="4873c-322">An optional positive sign.</span></span>|
|<span data-ttu-id="4873c-323">*位数*</span><span class="sxs-lookup"><span data-stu-id="4873c-323">*digits*</span></span>|<span data-ttu-id="4873c-324">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="4873c-324">A sequence of digits ranging from 0 to 9.</span></span>|

 <span data-ttu-id="4873c-325">`s`使用样式对参数进行解释 <xref:System.Globalization.NumberStyles.Integer> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-325">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer> style.</span></span> <span data-ttu-id="4873c-326">除了字节值的十进制数外，只允许使用前导和尾随空格以及前导符号。</span><span class="sxs-lookup"><span data-stu-id="4873c-326">In addition to the byte value's decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="4873c-327"> (如果存在符号，则该符号必须为正号，否则方法将引发 <xref:System.OverflowException> 。 ) 若要将样式元素与可在中存在的区域性特定格式设置信息一起显式定义 `s` ，请使用 <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-327">(If the sign is present, it must be a positive sign or the method throws an <xref:System.OverflowException>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>

 <span data-ttu-id="4873c-328">`s`使用由提供的对象中的格式设置信息分析参数 <xref:System.Globalization.NumberFormatInfo> `provider` 。</span><span class="sxs-lookup"><span data-stu-id="4873c-328">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object supplied by `provider`.</span></span> <span data-ttu-id="4873c-329">`provider`参数是 <xref:System.IFormatProvider> 一个实现，如 <xref:System.Globalization.NumberFormatInfo> 或 <xref:System.Globalization.CultureInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="4873c-329">The `provider` parameter is an <xref:System.IFormatProvider> implementation such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="4873c-330">`provider`参数提供用于分析的特定于区域性的信息。</span><span class="sxs-lookup"><span data-stu-id="4873c-330">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="4873c-331">如果 `provider` 为 `null`，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="4873c-331">If `provider` is `null`, the thread current culture is used.</span></span>



## Examples
 <span data-ttu-id="4873c-332">下面的示例通过方法分析值的字符串表示形式 `Byte` <xref:System.Byte.Parse%2A> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-332">The following example parses string representations of `Byte` values with the <xref:System.Byte.Parse%2A> method.</span></span>

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.Parse/cpp/parse.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.Parse/CS/parse.cs" interactive="try-dotnet-method" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.Parse/VB/parse.vb" id="Snippet2":::

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4873c-333"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-333"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="4873c-334"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="4873c-334"><paramref name="s" /> is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="4873c-335"><paramref name="s" /> 表示一个小于 <see cref="F:System.Byte.MinValue" /> 或大于 <see cref="F:System.Byte.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="4873c-335"><paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Byte.ToString" />
        <altmember cref="Overload:System.Byte.TryParse" />
        <altmember cref="F:System.Byte.MaxValue" />
        <altmember cref="F:System.Byte.MinValue" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="4873c-336">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="4873c-336">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static byte Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider? provider = default);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = Nothing) As Byte" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; byte" Usage="System.byte.Parse (s, style, provider)" />
      <MemberSignature Language="C#" Value="public static byte Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = default);" FrameworkAlternate="netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="4873c-337">一个范围，包含表示要转换的值的字符。</span><span class="sxs-lookup"><span data-stu-id="4873c-337">A span containing the characters representing the value to convert.</span></span></param>
        <param name="style"><span data-ttu-id="4873c-338">枚举值的按位组合，用于指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="4873c-338">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="4873c-339">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-339">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="4873c-340">一个对象，用于提供有关 <paramref name="s" /> 格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="4873c-340">An object that supplies culture-specific information about the format of <paramref name="s" />.</span></span> <span data-ttu-id="4873c-341">如果 <paramref name="provider" /> 为 <see langword="null" />，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="4873c-341">If <paramref name="provider" /> is <see langword="null" />, the thread current culture is used.</span></span></param>
        <summary><span data-ttu-id="4873c-342">将指定样式和区域性特定格式的数字的范围表示形式转换为它的等效 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-342">Converts the span representation of a number in a specified style and culture-specific format to its <see cref="T:System.Byte" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="4873c-343">一个字节值，它与 <paramref name="s" /> 中包含的数相等。</span><span class="sxs-lookup"><span data-stu-id="4873c-343">A byte value that is equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static byte Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; byte" Usage="System.byte.Parse (s, style, provider)" />
      <MemberSignature Language="C#" Value="public static byte Parse (string s, System.Globalization.NumberStyles style, IFormatProvider? provider);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="4873c-344">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="4873c-344">A string that contains a number to convert.</span></span> <span data-ttu-id="4873c-345">该字符串使用由 <paramref name="style" /> 指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="4873c-345">The string is interpreted using the style specified by <paramref name="style" />.</span></span></param>
        <param name="style"><span data-ttu-id="4873c-346">枚举值的按位组合，用于指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="4873c-346">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="4873c-347">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-347">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="4873c-348">一个对象，用于提供有关 <paramref name="s" /> 格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="4873c-348">An object that supplies culture-specific information about the format of <paramref name="s" />.</span></span> <span data-ttu-id="4873c-349">如果 <paramref name="provider" /> 为 <see langword="null" />，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="4873c-349">If <paramref name="provider" /> is <see langword="null" />, the thread current culture is used.</span></span></param>
        <summary><span data-ttu-id="4873c-350">将指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-350">Converts the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Byte" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="4873c-351">一个字节值，它与 <paramref name="s" /> 中包含的数相等。</span><span class="sxs-lookup"><span data-stu-id="4873c-351">A byte value that is equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-352">`style`参数定义在参数中允许的样式元素 (如空格或正号) ，以便 `s` 分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="4873c-352">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="4873c-353">它必须是枚举中的位标志的组合 <xref:System.Globalization.NumberStyles> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-353">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="4873c-354">根据的值 `style` ， `s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="4873c-354">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>

 <span data-ttu-id="4873c-355">ws[$][sign] 位数 [.fractional_digits] [e [sign] 数字] [ws]</span><span class="sxs-lookup"><span data-stu-id="4873c-355">[ws][$][sign]digits[.fractional_digits][e[sign]digits][ws]</span></span>

 <span data-ttu-id="4873c-356">或者，如果 `style` 参数包括 <xref:System.Globalization.NumberStyles.AllowHexSpecifier> ：</span><span class="sxs-lookup"><span data-stu-id="4873c-356">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>

 <span data-ttu-id="4873c-357">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="4873c-357">[ws]hexdigits[ws]</span></span>

 <span data-ttu-id="4873c-358">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="4873c-358">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="4873c-359">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="4873c-359">The following table describes each element.</span></span>

|<span data-ttu-id="4873c-360">元素</span><span class="sxs-lookup"><span data-stu-id="4873c-360">Element</span></span>|<span data-ttu-id="4873c-361">说明</span><span class="sxs-lookup"><span data-stu-id="4873c-361">Description</span></span>|
|-------------|-----------------|
|<span data-ttu-id="4873c-362">*ws*</span><span class="sxs-lookup"><span data-stu-id="4873c-362">*ws*</span></span>|<span data-ttu-id="4873c-363">可选空白。</span><span class="sxs-lookup"><span data-stu-id="4873c-363">Optional white space.</span></span> <span data-ttu-id="4873c-364">如果包含标志，则空白可以出现在开头; `s` `style` <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> `s` 如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 标志，则为末尾处。</span><span class="sxs-lookup"><span data-stu-id="4873c-364">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|
|*$*|<span data-ttu-id="4873c-365">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="4873c-365">A culture-specific currency symbol.</span></span> <span data-ttu-id="4873c-366">其在字符串中的位置由 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> <xref:System.Globalization.NumberFormatInfo> 参数方法返回的对象的属性定义 <xref:System.IFormatProvider.GetFormat%2A> `provider` 。</span><span class="sxs-lookup"><span data-stu-id="4873c-366">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="4873c-367">`s`如果包含标志，则货币符号可以出现在中 `style` <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-367">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="4873c-368">*sign*</span><span class="sxs-lookup"><span data-stu-id="4873c-368">*sign*</span></span>|<span data-ttu-id="4873c-369">可选正号。</span><span class="sxs-lookup"><span data-stu-id="4873c-369">An optional positive sign.</span></span> <span data-ttu-id="4873c-370"> (如果 <xref:System.OverflowException> 中存在负号，方法将引发 `s` ) 。如果 `s` `style` 包含 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 标志， `s` `style` <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 则该方法将引发; 如果包含标志，则为末尾处。</span><span class="sxs-lookup"><span data-stu-id="4873c-370">(The method throws an <xref:System.OverflowException> if a negative sign is present in `s`.) The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="4873c-371">*位数*</span><span class="sxs-lookup"><span data-stu-id="4873c-371">*digits*</span></span>|<span data-ttu-id="4873c-372">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="4873c-372">A sequence of digits from 0 through 9.</span></span>|
|<span data-ttu-id="4873c-373">*.*</span><span class="sxs-lookup"><span data-stu-id="4873c-373">*.*</span></span>|<span data-ttu-id="4873c-374">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="4873c-374">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="4873c-375">如果包含标志，则指定的区域性的小数点符号 `provider` 可以出现在中 `s` `style` <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-375">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="4873c-376">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="4873c-376">*fractional_digits*</span></span>|<span data-ttu-id="4873c-377">数字0的一个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4873c-377">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="4873c-378">`s`仅当包含标志时，小数位才能出现在中 `style` <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-378">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="4873c-379">*e*</span><span class="sxs-lookup"><span data-stu-id="4873c-379">*e*</span></span>|<span data-ttu-id="4873c-380">E 或 E 字符，指示值以指数表示法表示。</span><span class="sxs-lookup"><span data-stu-id="4873c-380">The e or E character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="4873c-381">如果包含标志，则 s 参数可以表示指数表示法中的数字 `style` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-381">The s parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="4873c-382">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="4873c-382">*hexdigits*</span></span>|<span data-ttu-id="4873c-383">从0到 f 的十六进制数字序列，或者从0到 F。</span><span class="sxs-lookup"><span data-stu-id="4873c-383">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|

> [!NOTE]
> <span data-ttu-id="4873c-384">`s`无论参数的值如何，分析操作都将忽略中任何终止的 NUL (U + 0000) 字符 `style` 。</span><span class="sxs-lookup"><span data-stu-id="4873c-384">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="4873c-385">只包含十进制数字的字符串 (与 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 样式) 总是成功分析的字符串。</span><span class="sxs-lookup"><span data-stu-id="4873c-385">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="4873c-386">大多数其余 <xref:System.Globalization.NumberStyles> 成员控件元素在此输入字符串中可能已存在但不是必需的。</span><span class="sxs-lookup"><span data-stu-id="4873c-386">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="4873c-387">下表指示各个成员如何 <xref:System.Globalization.NumberStyles> 影响可能出现在中的元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="4873c-387">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>

|<span data-ttu-id="4873c-388">非复合 NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="4873c-388">Non-composite NumberStyles values</span></span>|<span data-ttu-id="4873c-389">除数字外允许在 s 中使用的元素</span><span class="sxs-lookup"><span data-stu-id="4873c-389">Elements permitted in s in addition to digits</span></span>|
|----------------------------------------|---------------------------------------------------|
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="4873c-390">仅十进制数字。</span><span class="sxs-lookup"><span data-stu-id="4873c-390">Decimal digits only.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="4873c-391">*.*</span><span class="sxs-lookup"><span data-stu-id="4873c-391">The *.*</span></span> <span data-ttu-id="4873c-392">和 *fractional_digits* 元素。</span><span class="sxs-lookup"><span data-stu-id="4873c-392">and *fractional_digits* elements.</span></span> <span data-ttu-id="4873c-393">但 *fractional_digits* 只能包含一个或多个0位数字 <xref:System.OverflowException> ，否则将引发。</span><span class="sxs-lookup"><span data-stu-id="4873c-393">However, *fractional_digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="4873c-394">`s`参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="4873c-394">The `s` parameter can also use exponential notation.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="4873c-395">开头的 *ws* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="4873c-395">The *ws* element at the beginning of `s`.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="4873c-396">末尾处的 *ws* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="4873c-396">The *ws* element at the end of `s`.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="4873c-397">正负号可以出现在 *数字* 之前。</span><span class="sxs-lookup"><span data-stu-id="4873c-397">A positive sign can appear before *digits*.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="4873c-398">正负号可以出现在 *数字* 之后。</span><span class="sxs-lookup"><span data-stu-id="4873c-398">A positive sign can appear after *digits*.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="4873c-399">尽管支持此标志，但在中使用括号会 `s` 导致 <xref:System.OverflowException> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-399">Although this flag is supported, the use of parentheses in `s` results in an <xref:System.OverflowException>.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="4873c-400">尽管组分隔符符号可以出现在中 `s` ，但它前面只能有一个或多个0数字。</span><span class="sxs-lookup"><span data-stu-id="4873c-400">Although the group separator symbol can appear in `s`, it can be preceded by only one or more 0 digits.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="4873c-401">*$* 元素。</span><span class="sxs-lookup"><span data-stu-id="4873c-401">The *$* element.</span></span>|

 <span data-ttu-id="4873c-402">如果 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 使用标志，则 `s` 必须是不带前缀的十六进制值。</span><span class="sxs-lookup"><span data-stu-id="4873c-402">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="4873c-403">例如，"F3" 分析成功，但 "0xF3" 不能。</span><span class="sxs-lookup"><span data-stu-id="4873c-403">For example, "F3" parses successfully, but "0xF3" does not.</span></span> <span data-ttu-id="4873c-404">中可以存在的唯一其他标志 `style` 是 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 和 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-404">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4873c-405"> (<xref:System.Globalization.NumberStyles> 枚举具有复合数字样式， <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType> 其中包含两个空格标志。 ) </span><span class="sxs-lookup"><span data-stu-id="4873c-405">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>

 <span data-ttu-id="4873c-406">`provider`参数是一个 <xref:System.IFormatProvider> 实现，如 <xref:System.Globalization.NumberFormatInfo> 或 <xref:System.Globalization.CultureInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="4873c-406">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="4873c-407">`provider`参数提供用于分析的特定于区域性的信息。</span><span class="sxs-lookup"><span data-stu-id="4873c-407">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="4873c-408">如果 `provider` 为 `null`，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="4873c-408">If `provider` is `null`, the thread current culture is used.</span></span>



## Examples
 <span data-ttu-id="4873c-409">下面的代码示例 `Byte` 通过方法的此重载来分析值的字符串表示形式 <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-409">The following code example parses string representations of `Byte` values with this overload of the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.Parse/cpp/parse.cpp" id="Snippet4":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.Parse/CS/parse.cs" interactive="try-dotnet-method" id="Snippet4":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.Parse/VB/parse.vb" id="Snippet4":::

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4873c-410"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-410"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="4873c-411"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="4873c-411"><paramref name="s" /> is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="4873c-412"><paramref name="s" /> 表示一个小于 <see cref="F:System.Byte.MinValue" /> 或大于 <see cref="F:System.Byte.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="4873c-412"><paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span>

<span data-ttu-id="4873c-413">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4873c-413">-or-</span></span>

 <span data-ttu-id="4873c-414"><paramref name="s" /> 包含非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="4873c-414"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4873c-415"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="4873c-415"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>

<span data-ttu-id="4873c-416">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4873c-416">-or-</span></span>

 <span data-ttu-id="4873c-417"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="4873c-417"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.Byte.ToString" />
        <altmember cref="F:System.Byte.MaxValue" />
        <altmember cref="F:System.Byte.MinValue" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="4873c-418">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="4873c-418">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberSignature Language="F#" Value="abstract member System.IComparable.CompareTo : obj -&gt; int&#xA;override this.System.IComparable.CompareTo : obj -&gt; int" Usage="byte.System.IComparable.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4873c-419">要比较的对象。</span><span class="sxs-lookup"><span data-stu-id="4873c-419">The object to compare.</span></span></param>
        <summary><span data-ttu-id="4873c-420">将当前实例与同一类型的另一个对象进行比较，并返回一个整数，该整数指示当前实例在排序顺序中的位置是位于另一个对象之前、之后还是与其位置相同。</span><span class="sxs-lookup"><span data-stu-id="4873c-420">Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</span></span></summary>
        <returns><span data-ttu-id="4873c-421">一个值，指示要比较的对象的相对顺序。</span><span class="sxs-lookup"><span data-stu-id="4873c-421">A value that indicates the relative order of the objects being compared.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4873c-422">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="4873c-422">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4873c-423">它只能在 <xref:System.Byte> 实例被强制转换为 <xref:System.IComparable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4873c-423">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IComparable> interface.</span></span>

<span data-ttu-id="4873c-424">返回值的含义如下：</span><span class="sxs-lookup"><span data-stu-id="4873c-424">The return value has these meanings:</span></span>

| <span data-ttu-id="4873c-425">“值”</span><span class="sxs-lookup"><span data-stu-id="4873c-425">Value</span></span>             | <span data-ttu-id="4873c-426">含义</span><span class="sxs-lookup"><span data-stu-id="4873c-426">Meaning</span></span>                                                                 |
|-------------------|-------------------------------------------------------------------------|
| <span data-ttu-id="4873c-427">小于零</span><span class="sxs-lookup"><span data-stu-id="4873c-427">Less than zero</span></span>    | <span data-ttu-id="4873c-428">此实例在排序顺序中位于 `value` 之前。</span><span class="sxs-lookup"><span data-stu-id="4873c-428">This instance precedes `value` in the sort order.</span></span>                       |
| <span data-ttu-id="4873c-429">零</span><span class="sxs-lookup"><span data-stu-id="4873c-429">Zero</span></span>              | <span data-ttu-id="4873c-430">此实例在排序顺序中的位置与 `value` 相同。</span><span class="sxs-lookup"><span data-stu-id="4873c-430">This instance occurs in the same position in the sort order as `value`.</span></span> |
| <span data-ttu-id="4873c-431">大于零</span><span class="sxs-lookup"><span data-stu-id="4873c-431">Greater than zero</span></span> | <span data-ttu-id="4873c-432">此实例在排序顺序中位于 `value` 之后。</span><span class="sxs-lookup"><span data-stu-id="4873c-432">This instance follows `value` in the sort order.</span></span>                        |

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.GetTypeCode : unit -&gt; TypeCode&#xA;override this.System.IConvertible.GetTypeCode : unit -&gt; TypeCode" Usage="byte.System.IConvertible.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4873c-433">返回此实例的 <see cref="T:System.TypeCode" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-433">Returns the <see cref="T:System.TypeCode" /> for this instance.</span></span></summary>
        <returns><span data-ttu-id="4873c-434">枚举常数，它是实现该接口的类或值类型的 <see cref="T:System.TypeCode" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-434">The enumerated constant that is the <see cref="T:System.TypeCode" /> of the class or value type that implements this interface.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4873c-435">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="4873c-435">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4873c-436">它只能在 <xref:System.Boolean> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4873c-436">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToBoolean : IFormatProvider -&gt; bool&#xA;override this.System.IConvertible.ToBoolean : IFormatProvider -&gt; bool" Usage="byte.System.IConvertible.ToBoolean provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4873c-437">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="4873c-437">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4873c-438">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-438">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4873c-439">如果当前实例的值不为零，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-439"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-440">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="4873c-440">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4873c-441">它只能在 <xref:System.Byte> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4873c-441">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4873c-442">建议的替代方法是调用 <xref:System.Convert.ToBoolean%28System.Byte%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-442">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Byte%29?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToByte : IFormatProvider -&gt; byte&#xA;override this.System.IConvertible.ToByte : IFormatProvider -&gt; byte" Usage="byte.System.IConvertible.ToByte provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4873c-443">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="4873c-443">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4873c-444">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-444">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4873c-445">当前实例的值，未更改。</span><span class="sxs-lookup"><span data-stu-id="4873c-445">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-446">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="4873c-446">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4873c-447">它只能在 <xref:System.Byte> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4873c-447">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToChar : IFormatProvider -&gt; char&#xA;override this.System.IConvertible.ToChar : IFormatProvider -&gt; char" Usage="byte.System.IConvertible.ToChar provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4873c-448">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="4873c-448">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4873c-449">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-449">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4873c-450">当前实例的值，已转换为 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-450">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-451">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="4873c-451">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4873c-452">它只能在 <xref:System.Byte> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4873c-452">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4873c-453">建议的替代方法是调用 <xref:System.Convert.ToChar%28System.Byte%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-453">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Byte%29?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDateTime : IFormatProvider -&gt; DateTime&#xA;override this.System.IConvertible.ToDateTime : IFormatProvider -&gt; DateTime" Usage="byte.System.IConvertible.ToDateTime provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4873c-454">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="4873c-454">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4873c-455">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="4873c-455">This conversion is not supported.</span></span> <span data-ttu-id="4873c-456">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-456">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="4873c-457">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="4873c-457">This conversion is not supported.</span></span> <span data-ttu-id="4873c-458">不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="4873c-458">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4873c-459">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="4873c-459">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDecimal : IFormatProvider -&gt; decimal&#xA;override this.System.IConvertible.ToDecimal : IFormatProvider -&gt; decimal" Usage="byte.System.IConvertible.ToDecimal provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4873c-460">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="4873c-460">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4873c-461">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-461">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4873c-462">当前实例的值，已转换为 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-462">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-463">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="4873c-463">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4873c-464">它只能在 <xref:System.Byte> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4873c-464">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4873c-465">建议的替代方法是调用 <xref:System.Convert.ToDecimal%28System.Byte%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-465">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.Byte%29?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDouble : IFormatProvider -&gt; double&#xA;override this.System.IConvertible.ToDouble : IFormatProvider -&gt; double" Usage="byte.System.IConvertible.ToDouble provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4873c-466">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="4873c-466">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4873c-467">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-467">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4873c-468">当前实例的值，已转换为 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-468">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-469">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="4873c-469">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4873c-470">它只能在 <xref:System.Byte> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4873c-470">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4873c-471">建议的替代方法是调用 <xref:System.Convert.ToDouble%28System.Byte%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-471">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Byte%29?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt16 : IFormatProvider -&gt; int16&#xA;override this.System.IConvertible.ToInt16 : IFormatProvider -&gt; int16" Usage="byte.System.IConvertible.ToInt16 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4873c-472">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="4873c-472">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4873c-473">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-473">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4873c-474">当前实例的值，已转换为 <see cref="T:System.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-474">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-475">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="4873c-475">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4873c-476">它只能在 <xref:System.Byte> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4873c-476">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4873c-477">建议的替代方法是调用 <xref:System.Convert.ToInt16%28System.Byte%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-477">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Byte%29?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt32 : IFormatProvider -&gt; int&#xA;override this.System.IConvertible.ToInt32 : IFormatProvider -&gt; int" Usage="byte.System.IConvertible.ToInt32 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4873c-478">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="4873c-478">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4873c-479">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-479">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4873c-480">当前实例的值，已转换为 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-480">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-481">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="4873c-481">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4873c-482">它只能在 <xref:System.Byte> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4873c-482">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4873c-483">建议的替代方法是调用 <xref:System.Convert.ToInt32%28System.Byte%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-483">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Byte%29?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt64 : IFormatProvider -&gt; int64&#xA;override this.System.IConvertible.ToInt64 : IFormatProvider -&gt; int64" Usage="byte.System.IConvertible.ToInt64 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4873c-484">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="4873c-484">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4873c-485">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-485">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4873c-486">当前实例的值，已转换为 <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-486">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-487">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="4873c-487">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4873c-488">它只能在 <xref:System.Byte> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4873c-488">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4873c-489">建议的替代方法是调用 <xref:System.Convert.ToInt64%28System.Byte%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-489">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Byte%29?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToSByte : IFormatProvider -&gt; sbyte&#xA;override this.System.IConvertible.ToSByte : IFormatProvider -&gt; sbyte" Usage="byte.System.IConvertible.ToSByte provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4873c-490">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="4873c-490">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4873c-491">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-491">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4873c-492">当前实例的值，已转换为 <see cref="T:System.SByte" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-492">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-493">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="4873c-493">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4873c-494">它只能在 <xref:System.Byte> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4873c-494">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4873c-495">建议的替代方法是调用 <xref:System.Convert.ToSByte%28System.Byte%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-495">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Byte%29?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToSingle : IFormatProvider -&gt; single&#xA;override this.System.IConvertible.ToSingle : IFormatProvider -&gt; single" Usage="byte.System.IConvertible.ToSingle provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4873c-496">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="4873c-496">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4873c-497">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-497">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4873c-498">当前实例的值，已转换为 <see cref="T:System.Single" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-498">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-499">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="4873c-499">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4873c-500">它只能在 <xref:System.Byte> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4873c-500">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4873c-501">建议的替代方法是调用 <xref:System.Convert.ToSingle%28System.Byte%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-501">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Byte%29?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToType (type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToType : Type * IFormatProvider -&gt; obj&#xA;override this.System.IConvertible.ToType : Type * IFormatProvider -&gt; obj" Usage="byte.System.IConvertible.ToType (type, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="4873c-502">此 <see cref="T:System.Byte" /> 值要转换为的类型。</span><span class="sxs-lookup"><span data-stu-id="4873c-502">The type to which to convert this <see cref="T:System.Byte" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="4873c-503">一个 <see cref="T:System.IFormatProvider" /> 实现，提供有关返回值格式的信息。</span><span class="sxs-lookup"><span data-stu-id="4873c-503">An <see cref="T:System.IFormatProvider" /> implementation that supplies information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="4873c-504">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-504">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4873c-505">当前实例的值，已转换为 <paramref name="type" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-505">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-506">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="4873c-506">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4873c-507">它只能在 <xref:System.Byte> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4873c-507">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4873c-508">建议的替代项是改为 `static` 调用 `Shared` Visual Basic) 方法中的 (<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-508">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method instead.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4873c-509"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-509"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4873c-510">不支持请求的类型转换。</span><span class="sxs-lookup"><span data-stu-id="4873c-510">The requested type conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt16 : IFormatProvider -&gt; uint16&#xA;override this.System.IConvertible.ToUInt16 : IFormatProvider -&gt; uint16" Usage="byte.System.IConvertible.ToUInt16 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4873c-511">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="4873c-511">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4873c-512">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-512">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4873c-513">当前实例的值，已转换为 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-513">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-514">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="4873c-514">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4873c-515">它只能在 <xref:System.Byte> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4873c-515">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4873c-516">建议的替代方法是调用 <xref:System.Convert.ToUInt16%28System.Byte%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-516">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Byte%29?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt32 : IFormatProvider -&gt; uint32&#xA;override this.System.IConvertible.ToUInt32 : IFormatProvider -&gt; uint32" Usage="byte.System.IConvertible.ToUInt32 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4873c-517">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="4873c-517">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4873c-518">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-518">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4873c-519">当前实例的值，已转换为 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-519">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-520">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="4873c-520">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4873c-521">它只能在 <xref:System.Byte> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4873c-521">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4873c-522">建议的替代方法是调用 <xref:System.Convert.ToUInt32%28System.Byte%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-522">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Byte%29?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt64 : IFormatProvider -&gt; uint64&#xA;override this.System.IConvertible.ToUInt64 : IFormatProvider -&gt; uint64" Usage="byte.System.IConvertible.ToUInt64 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4873c-523">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="4873c-523">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="4873c-524">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-524">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="4873c-525">当前实例的值，已转换为 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-525">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-526">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="4873c-526">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="4873c-527">它只能在 <xref:System.Byte> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="4873c-527">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="4873c-528">建议的替代方法是调用 <xref:System.Convert.ToUInt64%28System.Byte%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-528">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Byte%29?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4873c-529">将当前 <see cref="T:System.Byte" /> 对象的值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="4873c-529">Converts the value of the current <see cref="T:System.Byte" /> object to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="byte.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4873c-530">将当前 <see cref="T:System.Byte" /> 对象的值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="4873c-530">Converts the value of the current <see cref="T:System.Byte" /> object to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="4873c-531">此对象的值的字符串表示形式，由一系列从 0 到 9 之间的数字组成，不包含前导零。</span><span class="sxs-lookup"><span data-stu-id="4873c-531">The string representation of the value of this object, which consists of a sequence of digits that range from 0 to 9 with no leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-532">返回值的格式为常规数值格式说明符 ( "G" ) 和 <xref:System.Globalization.NumberFormatInfo> 当前线程区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="4873c-532">The return value is formatted with the general numeric format specifier ("G") and the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture.</span></span> <span data-ttu-id="4873c-533">若要定义 <xref:System.Byte> 值的字符串表示形式的格式设置，请调用 <xref:System.Byte.ToString%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-533">To define the formatting of the <xref:System.Byte> value's string representation, call the <xref:System.Byte.ToString%2A> method.</span></span> <span data-ttu-id="4873c-534">若要同时定义用于创建值的字符串表示形式的格式说明符和区域性 <xref:System.Byte> ，请调用 <xref:System.Byte.ToString%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-534">To define both the format specifiers and culture used to create the string representation of a <xref:System.Byte> value, call the <xref:System.Byte.ToString%2A> method.</span></span>

<span data-ttu-id="4873c-535">.NET 提供广泛的格式支持，以下格式设置主题对此进行了更详细的介绍：</span><span class="sxs-lookup"><span data-stu-id="4873c-535">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>

-   <span data-ttu-id="4873c-536">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="4873c-536">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>

-   <span data-ttu-id="4873c-537">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="4873c-537">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>

 <span data-ttu-id="4873c-538">有关线程的当前区域性的信息，请参见 <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-538">For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>



## Examples
 <span data-ttu-id="4873c-539">下面的示例显示字节值的数组。</span><span class="sxs-lookup"><span data-stu-id="4873c-539">The following example displays an array of byte values.</span></span> <span data-ttu-id="4873c-540">请注意，此 <xref:System.Byte.ToString> 示例中未显式调用方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-540">Note that the <xref:System.Byte.ToString> method is not called explicitly in the example.</span></span> <span data-ttu-id="4873c-541">相反，它是隐式调用的，因为使用的是 [复合格式设置](/dotnet/standard/base-types/composite-formatting) 功能。</span><span class="sxs-lookup"><span data-stu-id="4873c-541">Instead, it is called implicitly, because of the use of the [composite formatting](/dotnet/standard/base-types/composite-formatting) feature.</span></span>

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.ToString/CPP/newbytemembers2.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.ToString/CS/NewByteMembers.cs" interactive="try-dotnet-method" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.ToString/VB/NewByteMembers.vb" id="Snippet2":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Byte.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="byte.ToString provider" />
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider? provider);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4873c-542">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="4873c-542">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="4873c-543">使用指定的区域性特定格式设置信息将当前 <see cref="T:System.Byte" /> 对象的值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="4873c-543">Converts the numeric value of the current <see cref="T:System.Byte" /> object to its equivalent string representation using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="4873c-544">此对象值的字符串表示形式，采用 <paramref name="provider" /> 参数所指定的格式。</span><span class="sxs-lookup"><span data-stu-id="4873c-544">The string representation of the value of this object in the format specified by the <paramref name="provider" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-545">返回值的格式为常规数值格式说明符 ( "G" ) 。</span><span class="sxs-lookup"><span data-stu-id="4873c-545">The return value is formatted with the general numeric format specifier ("G").</span></span>

 <span data-ttu-id="4873c-546">`provider`参数是实现接口的对象 <xref:System.IFormatProvider> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-546">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="4873c-547">其 <xref:System.IFormatProvider.GetFormat%2A> 方法返回一个 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供有关此方法返回的字符串格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="4873c-547">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="4873c-548">实现的对象 <xref:System.IFormatProvider> 可以是以下任一项：</span><span class="sxs-lookup"><span data-stu-id="4873c-548">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>

-   <span data-ttu-id="4873c-549"><xref:System.Globalization.CultureInfo>表示要使用其格式设置规则的区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="4873c-549">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>

-   <span data-ttu-id="4873c-550">一个 <xref:System.Globalization.NumberFormatInfo> 包含此值的特定数字格式信息的对象。</span><span class="sxs-lookup"><span data-stu-id="4873c-550">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>

-   <span data-ttu-id="4873c-551">实现的自定义对象 <xref:System.IFormatProvider> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-551">A custom object that implements <xref:System.IFormatProvider>.</span></span>

 <span data-ttu-id="4873c-552">如果 `provider` 为 `null` 或者 <xref:System.Globalization.NumberFormatInfo> 无法从获取对象，则 `provider` 使用当前区域性的对象的对象设置返回值的格式 <xref:System.Globalization.NumberFormatInfo> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-552">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture.</span></span> <span data-ttu-id="4873c-553">有关线程的当前区域性的信息，请参见 <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-553">For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>

<span data-ttu-id="4873c-554">.NET 提供广泛的格式支持，以下格式设置主题对此进行了更详细的介绍：</span><span class="sxs-lookup"><span data-stu-id="4873c-554">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>

-   <span data-ttu-id="4873c-555">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="4873c-555">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>

-   <span data-ttu-id="4873c-556">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="4873c-556">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>



## Examples
 <span data-ttu-id="4873c-557">下面的示例循环访问一个字节值数组，并通过 <xref:System.Byte.ToString%28System.IFormatProvider%29> 使用不同的格式提供程序调用方法，将它们显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="4873c-557">The following example iterates an array of byte values and displays each of them to the console by calling the <xref:System.Byte.ToString%28System.IFormatProvider%29> method with different format providers.</span></span>

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.ToString/CPP/newbytemembers.cpp" id="Snippet3":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.ToString/CS/NewByteMembers.cs" interactive="try-dotnet-method" id="Snippet3":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.ToString/VB/NewByteMembers.vb" id="Snippet3":::

 ]]></format>
        </remarks>
        <altmember cref="M:System.Byte.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="4873c-558">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="4873c-558">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="byte.ToString format" />
      <MemberSignature Language="C#" Value="public string ToString (string? format);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="4873c-559">一个数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="4873c-559">A numeric format string.</span></span></param>
        <summary><span data-ttu-id="4873c-560">使用指定的格式将当前 <see cref="T:System.Byte" /> 对象的值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="4873c-560">Converts the value of the current <see cref="T:System.Byte" /> object to its equivalent string representation using the specified format.</span></span></summary>
        <returns><span data-ttu-id="4873c-561">按照 <see cref="T:System.Byte" /> 参数指定的方式进行格式设置的当前 <paramref name="format" /> 对象的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="4873c-561">The string representation of the current <see cref="T:System.Byte" /> object, formatted as specified by the <paramref name="format" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-562">`format`参数可以是标准或自定义数字格式字符串。</span><span class="sxs-lookup"><span data-stu-id="4873c-562">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="4873c-563">除了 "R" (或 "r" ) 之外的所有标准数字格式字符串，都支持所有自定义数字格式字符。</span><span class="sxs-lookup"><span data-stu-id="4873c-563">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="4873c-564">如果 `format` 是 `null` 或空字符串 ( "" ) ，则返回值的格式为常规数值格式说明符 ( "G" ) 。</span><span class="sxs-lookup"><span data-stu-id="4873c-564">If `format` is `null` or an empty string (""), the return value is formatted with the general numeric format specifier ("G").</span></span>

 <span data-ttu-id="4873c-565">此函数的返回值使用线程的当前区域性的对象进行格式设置 <xref:System.Globalization.NumberFormatInfo> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-565">The return value of this function is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture.</span></span> <span data-ttu-id="4873c-566">有关线程的当前区域性的信息，请参见 <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-566">For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4873c-567">若要为当前区域性以外的区域性提供格式设置信息，请调用 <xref:System.Byte.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-567">To provide formatting information for cultures other than the current culture, call the <xref:System.Byte.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>

<span data-ttu-id="4873c-568">.NET 提供广泛的格式支持，以下格式设置主题对此进行了更详细的介绍：</span><span class="sxs-lookup"><span data-stu-id="4873c-568">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>

-   <span data-ttu-id="4873c-569">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="4873c-569">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>

-   <span data-ttu-id="4873c-570">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="4873c-570">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>



## Examples
 <span data-ttu-id="4873c-571">下面的示例 <xref:System.Byte> 使用每个受支持的标准格式字符串和一个自定义格式字符串来初始化值并将其显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="4873c-571">The following example initializes a <xref:System.Byte> value and displays it to the console using each of the supported standard format strings and a custom format string.</span></span> <span data-ttu-id="4873c-572">此示例是以 en-us 作为当前区域性运行的。</span><span class="sxs-lookup"><span data-stu-id="4873c-572">The example is run with en-US as the current culture.</span></span>

 [!code-cpp[System.Byte.ToString#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.ToString/CPP/newbytemembers2.cpp#4)]
 [!code-csharp[System.Byte.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.ToString/CS/NewByteMembers.cs#4)]
 [!code-vb[System.Byte.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.ToString/VB/NewByteMembers.vb#4)]

 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="4873c-573"><paramref name="format" /> 包含不受支持的说明符。</span><span class="sxs-lookup"><span data-stu-id="4873c-573"><paramref name="format" /> includes an unsupported specifier.</span></span> <span data-ttu-id="4873c-574">“备注”部分中列出了受支持的格式说明符。</span><span class="sxs-lookup"><span data-stu-id="4873c-574">Supported format specifiers are listed in the Remarks section.</span></span></exception>
        <related type="Article" href="/dotnet/standard/base-types/how-to-pad-a-number-with-leading-zeros"><span data-ttu-id="4873c-575">如何：用前导零填充数字</span><span class="sxs-lookup"><span data-stu-id="4873c-575">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="byte.ToString (format, provider)" />
      <MemberSignature Language="C#" Value="public string? ToString (string format, IFormatProvider provider);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="4873c-576">标准或自定义的数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="4873c-576">A standard or custom numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="4873c-577">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="4873c-577">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="4873c-578">使用指定的格式和区域性特定格式信息将当前 <see cref="T:System.Byte" /> 对象的值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="4873c-578">Converts the value of the current <see cref="T:System.Byte" /> object to its equivalent string representation using the specified format and culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="4873c-579">按照 <see cref="T:System.Byte" /> 和 <paramref name="format" /> 参数指定的方式进行格式设置的当前 <paramref name="provider" /> 对象的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="4873c-579">The string representation of the current <see cref="T:System.Byte" /> object, formatted as specified by the <paramref name="format" /> and <paramref name="provider" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-580">方法使用指定 <xref:System.Byte.ToString%28System.String%2CSystem.IFormatProvider%29> <xref:System.Byte> 的区域性的指定格式设置值的格式。</span><span class="sxs-lookup"><span data-stu-id="4873c-580">The <xref:System.Byte.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Byte> value in a specified format of a specified culture.</span></span> <span data-ttu-id="4873c-581">若要使用当前区域性的默认 ( "G" ) 格式来设置数字的格式，请调用 <xref:System.Byte.ToString> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-581">To format a number by using the default ("G") format of the current culture, call the <xref:System.Byte.ToString> method.</span></span> <span data-ttu-id="4873c-582">若要使用当前区域性的指定格式设置数字的格式，请调用 <xref:System.Byte.ToString%28System.String%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-582">To format a number by using a specified format of the current culture, call the <xref:System.Byte.ToString%28System.String%29> method.</span></span>

 <span data-ttu-id="4873c-583">`format`参数可以是标准或自定义数字格式字符串。</span><span class="sxs-lookup"><span data-stu-id="4873c-583">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="4873c-584">除了 "R" (或 "r" ) 之外的所有标准数字格式字符串，都支持所有自定义数字格式字符。</span><span class="sxs-lookup"><span data-stu-id="4873c-584">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="4873c-585">如果 `format` 是 `null` 或空字符串 ( "" ) ，则此方法的返回值的格式为常规数字格式说明符 ( "G" ) 。</span><span class="sxs-lookup"><span data-stu-id="4873c-585">If `format` is `null` or an empty string (""), the return value of this method is formatted with the general numeric format specifier ("G").</span></span>

 <span data-ttu-id="4873c-586">`provider`参数是实现接口的对象 <xref:System.IFormatProvider> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-586">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="4873c-587">其 <xref:System.IFormatProvider.GetFormat%2A> 方法返回一个 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供有关此方法返回的字符串格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="4873c-587">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="4873c-588">实现的对象 <xref:System.IFormatProvider> 可以是以下任一项：</span><span class="sxs-lookup"><span data-stu-id="4873c-588">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>

-   <span data-ttu-id="4873c-589"><xref:System.Globalization.CultureInfo>表示要使用其格式设置规则的区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="4873c-589">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>

-   <span data-ttu-id="4873c-590">一个 <xref:System.Globalization.NumberFormatInfo> 包含此值的特定数字格式信息的对象。</span><span class="sxs-lookup"><span data-stu-id="4873c-590">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>

-   <span data-ttu-id="4873c-591">实现的自定义对象 <xref:System.IFormatProvider> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-591">A custom object that implements <xref:System.IFormatProvider>.</span></span>

 <span data-ttu-id="4873c-592">如果 `provider` 为 `null` 或者 <xref:System.Globalization.NumberFormatInfo> 无法从获取对象，则 `provider` 使用当前区域性的对象的对象设置返回值的格式 <xref:System.Globalization.NumberFormatInfo> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-592">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture.</span></span> <span data-ttu-id="4873c-593">有关线程的当前区域性的信息，请参见 <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-593">For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>

<span data-ttu-id="4873c-594">.NET 提供广泛的格式支持，以下格式设置主题对此进行了更详细的介绍：</span><span class="sxs-lookup"><span data-stu-id="4873c-594">.NET provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>

-   <span data-ttu-id="4873c-595">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="4873c-595">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>

-   <span data-ttu-id="4873c-596">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="4873c-596">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>



## Examples
 <span data-ttu-id="4873c-597">下面的示例使用标准 "N" 格式字符串和四个不同 <xref:System.Globalization.CultureInfo> 的对象将字节值的字符串表示形式显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="4873c-597">The following example uses the standard "N" format string and four different <xref:System.Globalization.CultureInfo> objects to display the string representation of a byte value to the console.</span></span>

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.ToString/CPP/newbytemembers2.cpp" id="Snippet5":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.ToString/CS/NewByteMembers.cs" interactive="try-dotnet-method" id="Snippet5":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.ToString/VB/NewByteMembers.vb" id="Snippet5":::

 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="4873c-598"><paramref name="format" /> 包含不受支持的说明符。</span><span class="sxs-lookup"><span data-stu-id="4873c-598"><paramref name="format" /> includes an unsupported specifier.</span></span> <span data-ttu-id="4873c-599">“备注”部分中列出了受支持的格式说明符。</span><span class="sxs-lookup"><span data-stu-id="4873c-599">Supported format specifiers are listed in the Remarks section.</span></span></exception>
        <altmember cref="M:System.Byte.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.IFormattable" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="4873c-600">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="4873c-600">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/how-to-pad-a-number-with-leading-zeros"><span data-ttu-id="4873c-601">如何：用前导零填充数字</span><span class="sxs-lookup"><span data-stu-id="4873c-601">How to: Pad a Number with Leading Zeros</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-cs/"><span data-ttu-id="4873c-602">示例：.NET Core WinForms 格式设置实用工具 (C#)</span><span class="sxs-lookup"><span data-stu-id="4873c-602">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-vb/"><span data-ttu-id="4873c-603">示例：.NET Core WinForms 格式设置实用工具 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4873c-603">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = default, IFormatProvider? provider = default);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = Nothing, Optional provider As IFormatProvider = Nothing) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="byte.TryFormat (destination, charsWritten, format, provider)" />
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = default, IFormatProvider provider = default);" FrameworkAlternate="netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="4873c-604">此方法返回时，此实例的值将设置为字符范围格式。</span><span class="sxs-lookup"><span data-stu-id="4873c-604">When this method returns, this instance's value formatted as a span of characters.</span></span></param>
        <param name="charsWritten"><span data-ttu-id="4873c-605">此方法返回时，为写入到 <paramref name="destination" /> 的字符数。</span><span class="sxs-lookup"><span data-stu-id="4873c-605">When this method returns, the number of characters that were written in <paramref name="destination" />.</span></span></param>
        <param name="format"><span data-ttu-id="4873c-606">一个包含字符的范围，这些字符表示定义可接受的 <paramref name="destination" /> 格式的标准或自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="4873c-606">A span containing the charactes that represent a standard or custom format string that defines the acceptable format for <paramref name="destination" />.</span></span></param>
        <param name="provider"><span data-ttu-id="4873c-607">一个可选对象，提供有关 <paramref name="destination" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="4873c-607">An optional object that supplies culture-specific formatting information for <paramref name="destination" />.</span></span></param>
        <summary><span data-ttu-id="4873c-608">尝试将当前 8 位无符号整数实例的值的格式设置为提供的字符范围。</span><span class="sxs-lookup"><span data-stu-id="4873c-608">Tries to format the value of the current 8-bit unsigned integer instance into the provided span of characters.</span></span></summary>
        <returns><span data-ttu-id="4873c-609">如果格式设置成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-609"><see langword="true" /> if the formatting was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4873c-610">尝试将数字的字符串表示形式转换为它的等效 <see cref="T:System.Byte" />，并返回一个指示转换是否成功的值。</span><span class="sxs-lookup"><span data-stu-id="4873c-610">Tries to convert the string representation of a number to its <see cref="T:System.Byte" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <altmember cref="Overload:System.Byte.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out byte result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] unsigned int8&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.TryParse(System.ReadOnlySpan{System.Char},System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::Byte % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * byte -&gt; bool" Usage="System.byte.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="result" Type="System.Byte" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="4873c-611">一个范围，包含表示要转换的数字的字符。</span><span class="sxs-lookup"><span data-stu-id="4873c-611">A span containing the characters representing the number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="4873c-612">当此方法返回时，如果转换成功，则包含与 <see cref="T:System.Byte" /> 中所包含的数字等效的 <paramref name="s" /> 值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="4873c-612">When this method returns, contains the <see cref="T:System.Byte" /> value equivalent to the number contained in <paramref name="s" /> if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="4873c-613">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="4873c-613">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="4873c-614">尝试将数字的范围表示形式转换为它的等效 <see cref="T:System.Byte" />，并返回一个指示转换是否成功的值。</span><span class="sxs-lookup"><span data-stu-id="4873c-614">Tries to convert the span representation of a number to its <see cref="T:System.Byte" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="4873c-615">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-615"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out byte result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] unsigned int8&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.TryParse(System.String,System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::Byte % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * byte -&gt; bool" Usage="System.byte.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Byte" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="4873c-616">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="4873c-616">A string that contains a number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="4873c-617">当此方法返回时，如果转换成功，则包含与 <see cref="T:System.Byte" /> 中所包含的数字等效的 <paramref name="s" /> 值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="4873c-617">When this method returns, contains the <see cref="T:System.Byte" /> value equivalent to the number contained in <paramref name="s" /> if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="4873c-618">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="4873c-618">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="4873c-619">尝试将数字的字符串表示形式转换为它的等效 <see cref="T:System.Byte" />，并返回一个指示转换是否成功的值。</span><span class="sxs-lookup"><span data-stu-id="4873c-619">Tries to convert the string representation of a number to its <see cref="T:System.Byte" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="4873c-620">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-620"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-621">`false`如果 `s` 参数的格式不正确（如果是 `null` 或 <xref:System.String.Empty?displayProperty=nameWithType> ），或者如果它表示的数字小于 <xref:System.Byte.MinValue> 或大于， <xref:System.Byte.MaxValue> 则转换将失败，并且方法将返回。</span><span class="sxs-lookup"><span data-stu-id="4873c-621">The conversion fails and the method returns `false` if the `s` parameter is not in the correct format, if it is `null` or <xref:System.String.Empty?displayProperty=nameWithType>, or if it represents a number less than <xref:System.Byte.MinValue> or greater than <xref:System.Byte.MaxValue>.</span></span>

 <span data-ttu-id="4873c-622"><xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29?displayProperty=nameWithType>方法与 <xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType> 方法类似，不同的是， <xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29> 如果转换失败，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4873c-622">The <xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29?displayProperty=nameWithType> method is similar to the <xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType> method, except that <xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29> does not throw an exception if the conversion fails.</span></span>

 <span data-ttu-id="4873c-623">`s`参数应为以下形式的数字的字符串表示形式：</span><span class="sxs-lookup"><span data-stu-id="4873c-623">The `s` parameter should be the string representation of a number in the following form:</span></span>

```
[ws][sign]digits[ws]
```

 <span data-ttu-id="4873c-624">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="4873c-624">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="4873c-625">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="4873c-625">The following table describes each element.</span></span>

|<span data-ttu-id="4873c-626">元素</span><span class="sxs-lookup"><span data-stu-id="4873c-626">Element</span></span>|<span data-ttu-id="4873c-627">说明</span><span class="sxs-lookup"><span data-stu-id="4873c-627">Description</span></span>|
|-------------|-----------------|
|<span data-ttu-id="4873c-628">*ws*</span><span class="sxs-lookup"><span data-stu-id="4873c-628">*ws*</span></span>|<span data-ttu-id="4873c-629">可选空白。</span><span class="sxs-lookup"><span data-stu-id="4873c-629">Optional white space.</span></span>|
|<span data-ttu-id="4873c-630">*sign*</span><span class="sxs-lookup"><span data-stu-id="4873c-630">*sign*</span></span>|<span data-ttu-id="4873c-631">由当前区域性的属性指定的可选正号 <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-631">An optional positive sign, as specified by the <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> property of the current culture.</span></span>|
|<span data-ttu-id="4873c-632">*位数*</span><span class="sxs-lookup"><span data-stu-id="4873c-632">*digits*</span></span>|<span data-ttu-id="4873c-633">十进制数字的序列，范围为0到9。</span><span class="sxs-lookup"><span data-stu-id="4873c-633">A sequence of decimal digits that range from 0 to 9.</span></span>|

 <span data-ttu-id="4873c-634">`s`使用样式对参数进行解释 <xref:System.Globalization.NumberStyles.Integer> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-634">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer> style.</span></span> <span data-ttu-id="4873c-635">除了字节值的十进制数外，只允许使用前导和尾随空格以及前导符号。</span><span class="sxs-lookup"><span data-stu-id="4873c-635">In addition to the byte value's decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="4873c-636"> (如果存在符号，则该符号必须为正号，否则方法将引发 <xref:System.OverflowException> 。 ) 若要将样式元素与可在中存在的区域性特定格式设置信息一起显式定义 `s` ，请使用 <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-636">(If the sign is present, it must be a positive sign or the method throws an <xref:System.OverflowException>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>

 <span data-ttu-id="4873c-637">`s`使用当前区域性的对象中的格式设置信息分析参数 <xref:System.Globalization.NumberFormatInfo> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-637">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="4873c-638">有关详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4873c-638">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="4873c-639">此方法的重载将 <xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29?displayProperty=nameWithType> 参数中的所有数字解释 `s` 为十进制数字。</span><span class="sxs-lookup"><span data-stu-id="4873c-639">This overload of the <xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29?displayProperty=nameWithType> method interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="4873c-640">若要分析十六进制数的字符串表示形式，请调用 <xref:System.Byte.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Byte%40%29?displayProperty=nameWithType> 重载。</span><span class="sxs-lookup"><span data-stu-id="4873c-640">To parse the string representation of a hexadecimal number, call the <xref:System.Byte.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Byte%40%29?displayProperty=nameWithType> overload.</span></span>



## Examples
 <span data-ttu-id="4873c-641">下面的示例 <xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29> 使用多个不同的字符串值调用方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-641">The following example calls the <xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29> method with a number of different string values.</span></span>

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.TryParse/cpp/tryparse.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.TryParse/cs/TryParse.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.TryParse/vb/TryParse.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-cs/"><span data-ttu-id="4873c-642">示例：.NET Core WinForms 格式设置实用工具 (C#)</span><span class="sxs-lookup"><span data-stu-id="4873c-642">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-vb/"><span data-ttu-id="4873c-643">示例：.NET Core WinForms 格式设置实用工具 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4873c-643">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider? provider, out byte result);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int8&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Byte % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider * byte -&gt; bool" Usage="System.byte.TryParse (s, style, provider, result)" />
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out byte result);" FrameworkAlternate="netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="result" Type="System.Byte" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="4873c-644">一个范围，包含表示要转换的数字的字符。</span><span class="sxs-lookup"><span data-stu-id="4873c-644">A span containing the characters representing the number to convert.</span></span> <span data-ttu-id="4873c-645">该范围使用 <see cref="F:System.Globalization.NumberStyles.Integer" /> 样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="4873c-645">The span is interpreted using the <see cref="F:System.Globalization.NumberStyles.Integer" /> style.</span></span></param>
        <param name="style"><span data-ttu-id="4873c-646">枚举值的按位组合，用于指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="4873c-646">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="4873c-647">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-647">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="4873c-648">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="4873c-648">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span> <span data-ttu-id="4873c-649">如果 <paramref name="provider" /> 为 <see langword="null" />，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="4873c-649">If <paramref name="provider" /> is <see langword="null" />, the thread current culture is used.</span></span></param>
        <param name="result"><span data-ttu-id="4873c-650">当此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 中所含数字等效的 8 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="4873c-650">When this method returns, contains the 8-bit unsigned integer value equivalent to the number contained in <paramref name="s" /> if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="4873c-651">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式不正确，或者表示的数字小于 <see cref="F:System.Byte.MinValue" /> 或大于 <see cref="F:System.Byte.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="4873c-651">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span> <span data-ttu-id="4873c-652">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="4873c-652">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="4873c-653">将指定样式和区域性特定格式的数字的范围表示形式转换为它的等效 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-653">Converts the span representation of a number in a specified style and culture-specific format to its <see cref="T:System.Byte" /> equivalent.</span></span> <span data-ttu-id="4873c-654">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="4873c-654">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="4873c-655">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-655"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out byte result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int8&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Byte % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider * byte -&gt; bool" Usage="System.byte.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Byte" RefType="out" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="4873c-656">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="4873c-656">A string containing a number to convert.</span></span> <span data-ttu-id="4873c-657">该字符串使用由 <paramref name="style" /> 指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="4873c-657">The string is interpreted using the style specified by <paramref name="style" />.</span></span></param>
        <param name="style"><span data-ttu-id="4873c-658">枚举值的按位组合，用于指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="4873c-658">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="4873c-659">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-659">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="4873c-660">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="4873c-660">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span> <span data-ttu-id="4873c-661">如果 <paramref name="provider" /> 为 <see langword="null" />，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="4873c-661">If <paramref name="provider" /> is <see langword="null" />, the thread current culture is used.</span></span></param>
        <param name="result"><span data-ttu-id="4873c-662">当此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 中所含数字等效的 8 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="4873c-662">When this method returns, contains the 8-bit unsigned integer value equivalent to the number contained in <paramref name="s" /> if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="4873c-663">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式不正确，或者表示的数字小于 <see cref="F:System.Byte.MinValue" /> 或大于 <see cref="F:System.Byte.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="4873c-663">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span> <span data-ttu-id="4873c-664">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="4873c-664">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="4873c-665">将指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-665">Converts the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Byte" /> equivalent.</span></span> <span data-ttu-id="4873c-666">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="4873c-666">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="4873c-667">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4873c-667"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="4873c-668"><xref:System.Byte.TryParse%2A>方法与 <xref:System.Byte.Parse%2A> 方法类似，不同的是， <xref:System.Byte.TryParse%2A> 如果转换失败，方法不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4873c-668">The <xref:System.Byte.TryParse%2A> method is like the <xref:System.Byte.Parse%2A> method, except the <xref:System.Byte.TryParse%2A> method does not throw an exception if the conversion fails.</span></span>

 <span data-ttu-id="4873c-669">`s`使用参数提供的对象中的格式设置信息分析参数 <xref:System.Globalization.NumberFormatInfo> `provider` 。</span><span class="sxs-lookup"><span data-stu-id="4873c-669">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object supplied by the `provider` parameter.</span></span>

 <span data-ttu-id="4873c-670">Style 参数定义 (（如空白）或正号) 等样式元素，以便 `s` 分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="4873c-670">The style parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="4873c-671">它必须是枚举中的位标志的组合 <xref:System.Globalization.NumberStyles> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-671">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="4873c-672">根据的值 `style` ， `s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="4873c-672">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>

 <span data-ttu-id="4873c-673">ws[$][sign] 位数 [.fractional_digits] [e [sign] 数字] [ws]</span><span class="sxs-lookup"><span data-stu-id="4873c-673">[ws][$][sign]digits[.fractional_digits][e[sign]digits][ws]</span></span>

 <span data-ttu-id="4873c-674">或者，如果 `style` 参数包括 <xref:System.Globalization.NumberStyles.AllowHexSpecifier> ：</span><span class="sxs-lookup"><span data-stu-id="4873c-674">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>

 <span data-ttu-id="4873c-675">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="4873c-675">[ws]hexdigits[ws]</span></span>

 <span data-ttu-id="4873c-676">方括号 ( [和] ) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="4873c-676">Elements in square brackets ( [ and ] ) are optional.</span></span> <span data-ttu-id="4873c-677">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="4873c-677">The following table describes each element.</span></span>

|<span data-ttu-id="4873c-678">元素</span><span class="sxs-lookup"><span data-stu-id="4873c-678">Element</span></span>|<span data-ttu-id="4873c-679">说明</span><span class="sxs-lookup"><span data-stu-id="4873c-679">Description</span></span>|
|-------------|-----------------|
|<span data-ttu-id="4873c-680">*ws*</span><span class="sxs-lookup"><span data-stu-id="4873c-680">*ws*</span></span>|<span data-ttu-id="4873c-681">可选空白。</span><span class="sxs-lookup"><span data-stu-id="4873c-681">Optional white space.</span></span> <span data-ttu-id="4873c-682">`s`如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 标志，或者如果 style 包含 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 标志，则空格可以出现在的开头。</span><span class="sxs-lookup"><span data-stu-id="4873c-682">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of s if style includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|
|*$*|<span data-ttu-id="4873c-683">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="4873c-683">A culture-specific currency symbol.</span></span> <span data-ttu-id="4873c-684">其在字符串中的位置由 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> <xref:System.Globalization.NumberFormatInfo> 参数方法返回的对象的属性定义 <xref:System.IFormatProvider.GetFormat%2A> `provider` 。</span><span class="sxs-lookup"><span data-stu-id="4873c-684">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="4873c-685">`s`如果包含标志，则货币符号可以出现在中 `style` <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-685">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="4873c-686">*sign*</span><span class="sxs-lookup"><span data-stu-id="4873c-686">*sign*</span></span>|<span data-ttu-id="4873c-687">可选正号。</span><span class="sxs-lookup"><span data-stu-id="4873c-687">An optional positive sign.</span></span> <span data-ttu-id="4873c-688"> (如果中存在负号，则分析操作将失败 `s` ) 。如果包含标志，则可以在的开头显示符号 `s` `style` ; 如果 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> `s` `style` 包含 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 标志，则为末尾处。</span><span class="sxs-lookup"><span data-stu-id="4873c-688">(The parse operation fails if a negative sign is present in `s`.) The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="4873c-689">*位数*</span><span class="sxs-lookup"><span data-stu-id="4873c-689">*digits*</span></span>|<span data-ttu-id="4873c-690">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="4873c-690">A sequence of digits from 0 through 9.</span></span>|
|<span data-ttu-id="4873c-691">*.*</span><span class="sxs-lookup"><span data-stu-id="4873c-691">*.*</span></span>|<span data-ttu-id="4873c-692">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="4873c-692">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="4873c-693">如果包含标志，则指定的区域性的小数点符号 `provider` 可以出现在中 `s` `style` <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-693">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="4873c-694">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="4873c-694">*fractional_digits*</span></span>|<span data-ttu-id="4873c-695">数字0的一个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="4873c-695">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="4873c-696">`s`仅当包含标志时，小数位才能出现在中 `style` <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-696">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="4873c-697">*e*</span><span class="sxs-lookup"><span data-stu-id="4873c-697">*e*</span></span>|<span data-ttu-id="4873c-698">E 或 E 字符，指示值以指数表示法表示。</span><span class="sxs-lookup"><span data-stu-id="4873c-698">The e or E character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="4873c-699">`s`如果包含标志，则参数可以表示指数表示法中的数字 `style` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-699">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="4873c-700">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="4873c-700">*hexdigits*</span></span>|<span data-ttu-id="4873c-701">从0到 f 的十六进制数字序列，或者从0到 F。</span><span class="sxs-lookup"><span data-stu-id="4873c-701">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|

> [!NOTE]
> <span data-ttu-id="4873c-702">`s`无论参数的值如何，分析操作都将忽略中任何终止的 NUL (U + 0000) 字符 `style` 。</span><span class="sxs-lookup"><span data-stu-id="4873c-702">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="4873c-703">只包含十进制数字的字符串 (与 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 样式) 总是成功分析的字符串。</span><span class="sxs-lookup"><span data-stu-id="4873c-703">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="4873c-704">大多数其余 <xref:System.Globalization.NumberStyles> 成员控件元素在此输入字符串中可能已存在但不是必需的。</span><span class="sxs-lookup"><span data-stu-id="4873c-704">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="4873c-705">下表指示各个成员如何 <xref:System.Globalization.NumberStyles> 影响可能出现在中的元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="4873c-705">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>

|<span data-ttu-id="4873c-706">非复合 NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="4873c-706">Non-composite NumberStyles values</span></span>|<span data-ttu-id="4873c-707">除数字外允许在 s 中使用的元素</span><span class="sxs-lookup"><span data-stu-id="4873c-707">Elements permitted in s in addition to digits</span></span>|
|----------------------------------------|---------------------------------------------------|
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="4873c-708">仅十进制数字。</span><span class="sxs-lookup"><span data-stu-id="4873c-708">Decimal digits only.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="4873c-709">*.*</span><span class="sxs-lookup"><span data-stu-id="4873c-709">The *.*</span></span> <span data-ttu-id="4873c-710">和 *fractional_digits* 元素。</span><span class="sxs-lookup"><span data-stu-id="4873c-710">and *fractional_digits* elements.</span></span> <span data-ttu-id="4873c-711">但 *fractional_digits* 只能包含一个或零个数字或该方法返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="4873c-711">However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="4873c-712">`s`参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="4873c-712">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="4873c-713">如果 `s` 表示指数表示法中的数字，则该数字必须表示数据类型范围内的一个整数，该数据类型的范围内 <xref:System.Byte> 没有非零的小数部分。</span><span class="sxs-lookup"><span data-stu-id="4873c-713">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Byte> data type without a non-zero, fractional component.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="4873c-714">开头的 *ws* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="4873c-714">The *ws* element at the beginning of `s`.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="4873c-715">末尾处的 *ws* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="4873c-715">The *ws* element at the end of `s`.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="4873c-716">正负号可以出现在 *数字* 之前。</span><span class="sxs-lookup"><span data-stu-id="4873c-716">A positive sign can appear before *digits*.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="4873c-717">正负号可以出现在 *数字* 之后。</span><span class="sxs-lookup"><span data-stu-id="4873c-717">A positive sign can appear after *digits*.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="4873c-718">尽管支持此标志，但 `false` 如果中存在括号，则该方法返回 `s` 。</span><span class="sxs-lookup"><span data-stu-id="4873c-718">Although this flag is supported, the method returns `false` if parentheses are present in `s`.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="4873c-719">尽管组分隔符符号可以出现在中 `s` ，但它前面只能有一个或多个0数字。</span><span class="sxs-lookup"><span data-stu-id="4873c-719">Although the group separator symbol can appear in `s`, it can be preceded by only one or more 0 digits.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="4873c-720">*$* 元素。</span><span class="sxs-lookup"><span data-stu-id="4873c-720">The *$* element.</span></span>|

 <span data-ttu-id="4873c-721">如果 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 使用标志，则 `s` 必须是不带前缀的十六进制值。</span><span class="sxs-lookup"><span data-stu-id="4873c-721">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="4873c-722">例如，"F3" 分析成功，但 "0xF3" 不能。</span><span class="sxs-lookup"><span data-stu-id="4873c-722">For example, "F3" parses successfully, but "0xF3" does not.</span></span> <span data-ttu-id="4873c-723">中可以存在的唯一其他标志 `style` 是 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 和 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="4873c-723">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4873c-724"> (<xref:System.Globalization.NumberStyles> 枚举具有复合数字样式， <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType> 其中包含两个空格标志。 ) </span><span class="sxs-lookup"><span data-stu-id="4873c-724">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>

 <span data-ttu-id="4873c-725">`provider`参数是一个 <xref:System.IFormatProvider> 实现，例如 <xref:System.Globalization.CultureInfo> 对象或 <xref:System.Globalization.NumberFormatInfo> 对象，其 <xref:System.IFormatProvider.GetFormat%2A> 方法返回 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="4873c-725">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="4873c-726"><xref:System.Globalization.NumberFormatInfo>对象提供有关的格式的区域性特定信息 `s` 。</span><span class="sxs-lookup"><span data-stu-id="4873c-726">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span>



## Examples
 <span data-ttu-id="4873c-727">下面的示例 <xref:System.Byte.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Byte%40%29> 使用多个不同的字符串值调用方法。</span><span class="sxs-lookup"><span data-stu-id="4873c-727">The following example calls the <xref:System.Byte.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Byte%40%29> method with a number of different string values.</span></span>

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.TryParse/cpp/tryparse2.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.TryParse/cs/TryParse2.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.TryParse/vb/TryParse2.vb" id="Snippet2":::

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4873c-728"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="4873c-728"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>

<span data-ttu-id="4873c-729">- 或 -</span><span class="sxs-lookup"><span data-stu-id="4873c-729">-or-</span></span>

 <span data-ttu-id="4873c-730"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="4873c-730"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.Byte.ToString" />
        <altmember cref="F:System.Byte.MaxValue" />
        <altmember cref="F:System.Byte.MinValue" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="4873c-731">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="4873c-731">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
