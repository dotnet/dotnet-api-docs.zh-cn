<Type Name="ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;" FullName="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9eaea77694448bfe16ebbe27cfbab6ed7019d6b1" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83951865" /></Metadata><TypeSignature Language="C#" Value="public struct ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt; : IComparable, IComparable&lt;ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;&gt;, IEquatable&lt;ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;&gt;, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable, System.Runtime.CompilerServices.ITuple where TRest : struct" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ValueTuple`8&lt;T1, T2, T3, T4, T5, T6, T7, struct .ctor (class System.ValueType) TRest&gt; extends System.ValueType implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable, class System.IComparable`1&lt;valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt;&gt;, class System.IEquatable`1&lt;valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt;&gt;, class System.Runtime.CompilerServices.ITuple" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.ValueTuple`8" />
  <TypeSignature Language="VB.NET" Value="Public Structure ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)&#xA;Implements IComparable, IComparable(Of ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)), IEquatable(Of ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)), IStructuralComparable, IStructuralEquatable, ITuple" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename TRest&gt;&#xA; where TRest : value classpublic value class ValueTuple : IComparable, IComparable&lt;ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, TRest&gt;&gt;, IEquatable&lt;ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, TRest&gt;&gt;, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable, System::Runtime::CompilerServices::ITuple" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt; = struct&#xA;    interface ITuple" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
  <TypeSignature Language="C#" Value="public struct ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt; : IComparable, IComparable&lt;ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;&gt;, IEquatable&lt;ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;&gt;, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable where TRest : struct" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ValueTuple`8&lt;T1, T2, T3, T4, T5, T6, T7, struct .ctor (class System.ValueType) TRest&gt; extends System.ValueType implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable, class System.IComparable`1&lt;valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt;&gt;, class System.IEquatable`1&lt;valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt;&gt;" FrameworkAlternate="netcore-1.0;netstandard-2.0" />
  <TypeSignature Language="VB.NET" Value="Public Structure ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)&#xA;Implements IComparable, IComparable(Of ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)), IEquatable(Of ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)), IStructuralComparable, IStructuralEquatable" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename TRest&gt;&#xA; where TRest : value classpublic value class ValueTuple : IComparable, IComparable&lt;ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, TRest&gt;&gt;, IEquatable&lt;ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, TRest&gt;&gt;, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0" />
  <TypeSignature Language="F#" Value="type ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt; = struct" FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.7;netstandard-2.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ValueTuple`8&lt;T1, T2, T3, T4, T5, T6, T7, struct .ctor (class System.ValueType) TRest&gt; extends System.ValueType implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable, class System.IComparable`1&lt;valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt;&gt;, class System.IEquatable`1&lt;valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt;&gt;" FrameworkAlternate="netcore-1.1;netframework-4.7" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ValueTuple`8&lt;T1, T2, T3, T4, T5, T6, T7, struct .ctor (class System.ValueType) TRest&gt; extends System.ValueType implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable, class System.IComparable`1&lt;valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt;&gt;, class System.IEquatable`1&lt;valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt;&gt;, class System.Runtime.CompilerServices.ITuple" FrameworkAlternate="netcore-2.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ValueTuple`8&lt;T1, T2, T3, T4, T5, T6, T7, struct .ctor (class System.ValueType) TRest&gt; extends System.ValueType implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable, class System.IComparable`1&lt;valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt;&gt;, class System.IEquatable`1&lt;valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt;&gt;, class System.Runtime.CompilerServices.ITuple" FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.ValueTuple</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.ValueTuple" FromVersion="4.0.3.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.ValueTuple" FromVersion="4.0.2.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.ValueTuple" FromVersion="4.0.3.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.ValueTuple" FromVersion="4.0.3.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
    <TypeParameter Name="T4" />
    <TypeParameter Name="T5" />
    <TypeParameter Name="T6" />
    <TypeParameter Name="T7" />
    <TypeParameter Name="TRest">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.CompilerServices.ITuple</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="8b552-101">值元组的第 1 个元素的类型。</span><span class="sxs-lookup"><span data-stu-id="8b552-101">The type of the value tuple's first element.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="8b552-102">值元组的第 2 个元素的类型。</span><span class="sxs-lookup"><span data-stu-id="8b552-102">The type of the value tuple's second element.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="8b552-103">值元组的第 3 个元素的类型。</span><span class="sxs-lookup"><span data-stu-id="8b552-103">The type of the value tuple's third element.</span></span></typeparam>
    <typeparam name="T4"><span data-ttu-id="8b552-104">值元组的第 4 个元素的类型。</span><span class="sxs-lookup"><span data-stu-id="8b552-104">The type of the value tuple's fourth element.</span></span></typeparam>
    <typeparam name="T5"><span data-ttu-id="8b552-105">值元组的第 5 个元素的类型。</span><span class="sxs-lookup"><span data-stu-id="8b552-105">The type of the value tuple's fifth element.</span></span></typeparam>
    <typeparam name="T6"><span data-ttu-id="8b552-106">值元组的第 6 个元素的类型。</span><span class="sxs-lookup"><span data-stu-id="8b552-106">The type of the value tuple's sixth element.</span></span></typeparam>
    <typeparam name="T7"><span data-ttu-id="8b552-107">值元组的第 7 个元素的类型。</span><span class="sxs-lookup"><span data-stu-id="8b552-107">The type of the value tuple's seventh element.</span></span></typeparam>
    <typeparam name="TRest"><span data-ttu-id="8b552-108">泛型值元组实例，用于定义元组剩下元素的类型。</span><span class="sxs-lookup"><span data-stu-id="8b552-108">Any generic value tuple instance that defines the types of the tuple's remaining elements.</span></span></typeparam>
    <summary><span data-ttu-id="8b552-109">表示 *n* 值元组，其中 *n* 为 8 更大值。</span><span class="sxs-lookup"><span data-stu-id="8b552-109">Represents an *n*-value tuple, where *n* is 8 or greater.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b552-110">值元组是具有特定数量和值序列的数据结构。</span><span class="sxs-lookup"><span data-stu-id="8b552-110">A value tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="8b552-111"><xref:System.ValueTuple%608> 结构表示具有八个或更多元素的值元组。</span><span class="sxs-lookup"><span data-stu-id="8b552-111">The <xref:System.ValueTuple%608> structure represents a value tuple that has eight or more elements.</span></span>  
  
 <span data-ttu-id="8b552-112">值元组类型不同于元组类型（如 <xref:System.Tuple%608>），如下所示：</span><span class="sxs-lookup"><span data-stu-id="8b552-112">The value tuple types differ from the tuple types (such as <xref:System.Tuple%608>) as follows:</span></span>  
  
-   <span data-ttu-id="8b552-113">它们是结构（值类型）而不是类（引用类型）。</span><span class="sxs-lookup"><span data-stu-id="8b552-113">They are structures (value types) rather than classes (reference types).</span></span>  
  
-   <span data-ttu-id="8b552-114">成员（如 <xref:System.ValueTuple%608.Item1> 和 <xref:System.ValueTuple%608.Item2>）是字段而不是属性。</span><span class="sxs-lookup"><span data-stu-id="8b552-114">Members such as <xref:System.ValueTuple%608.Item1> and   <xref:System.ValueTuple%608.Item2> are fields rather than properties.</span></span>  
  
-   <span data-ttu-id="8b552-115">它们的字段是可变的，而不是只读的。</span><span class="sxs-lookup"><span data-stu-id="8b552-115">Their fields are mutable rather than read-only.</span></span>  
  
 <span data-ttu-id="8b552-116">值元组类型提供支持中的[元组C# ](/dotnet/csharp/tuples)和中F#的结构元组的运行时实现。</span><span class="sxs-lookup"><span data-stu-id="8b552-116">The value tuple types provide the runtime implementation that supports [tuples in C#](/dotnet/csharp/tuples) and struct tuples in F#.</span></span>  <span data-ttu-id="8b552-117">除了使用语言语法创建 <xref:System.ValueTuple%608> 实例外，还可以调用 <xref:System.ValueTuple.Create%60%608%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%2C%60%607%29?displayProperty=nameWithType> 工厂方法。</span><span class="sxs-lookup"><span data-stu-id="8b552-117">In addition to creating a <xref:System.ValueTuple%608> instance by using language syntax, you can call the <xref:System.ValueTuple.Create%60%608%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%2C%60%607%29?displayProperty=nameWithType> factory method.</span></span>  

### <a name="serialization-and-value-tuples"></a><span data-ttu-id="8b552-118">序列化和值元组</span><span class="sxs-lookup"><span data-stu-id="8b552-118">Serialization and value tuples</span></span>

<span data-ttu-id="8b552-119"><xref:System.ValueTuple%608> 类型在 .NET Core 1.x 或 .NET Framework 4.7 及更早版本中不可序列化。</span><span class="sxs-lookup"><span data-stu-id="8b552-119">The <xref:System.ValueTuple%608> type is not serializable in .NET Core 1.x or in the .NET Framework 4.7 and earlier versions.</span></span> <span data-ttu-id="8b552-120">此外，.NET Standard （包括 .NET Standard 2.0）不会强制对 <xref:System.ValueTuple%608> 实例进行序列化;<xref:System.ValueTuple%608> 实例是否可序列化取决于单个 .NET Standard 实现。</span><span class="sxs-lookup"><span data-stu-id="8b552-120">In addition, .NET Standard, including .NET Standard 2.0, does not mandate serialization of <xref:System.ValueTuple%608> instances; whether or not a <xref:System.ValueTuple%608> instance is serializable depends on the individual .NET Standard implementation.</span></span> <span data-ttu-id="8b552-121">若要确定某一 <xref:System.ValueTuple%608> 类型在特定 .NET 实现上是否可序列化，请获取表示 <xref:System.ValueTuple%608> 类型的 <xref:System.Type> 对象，并检索其 <xref:System.Type.IsSerializable%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="8b552-121">To determine whether a <xref:System.ValueTuple%608> type is serializable on a particular .NET implementation, get a <xref:System.Type> object that represents the <xref:System.ValueTuple%608> type and retrieve the value of its <xref:System.Type.IsSerializable%2A> property.</span></span> <span data-ttu-id="8b552-122">有关 .NET Core 和 .NET Framework 中的可序列化类型的列表，请参见[二进制序列化](/dotnet/standard/serialization/binary-serialization)。</span><span class="sxs-lookup"><span data-stu-id="8b552-122">For a list of serializable types in .NET Core and the .NET Framework, see [Binary Serialization](/dotnet/standard/serialization/binary-serialization).</span></span>
    
 ]]></format>
    </remarks>
    <altmember cref="T:System.ValueTuple" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueTuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3, !T4 item4, !T5 item5, !T6 item6, !T7 item7, !TRest rest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6, item7 As T7, rest As TRest)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);" />
      <MemberSignature Language="F#" Value="new ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt; : 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'Rest -&gt; ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt;" Usage="new System.ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt; (item1, item2, item3, item4, item5, item6, item7, rest)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
        <Parameter Name="item6" Type="T6" />
        <Parameter Name="item7" Type="T7" />
        <Parameter Name="rest" Type="TRest" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="8b552-123">值元组的第 1 个元素。</span><span class="sxs-lookup"><span data-stu-id="8b552-123">The value tuple's first element.</span></span></param>
        <param name="item2"><span data-ttu-id="8b552-124">值元组的第 2 个元素。</span><span class="sxs-lookup"><span data-stu-id="8b552-124">The value tuple's second element.</span></span></param>
        <param name="item3"><span data-ttu-id="8b552-125">值元组的第 3 个元素。</span><span class="sxs-lookup"><span data-stu-id="8b552-125">The value tuple's third element.</span></span></param>
        <param name="item4"><span data-ttu-id="8b552-126">值元组的第 4 个元素。</span><span class="sxs-lookup"><span data-stu-id="8b552-126">The value tuple's fourth element.</span></span></param>
        <param name="item5"><span data-ttu-id="8b552-127">值元组的第 5 个元素。</span><span class="sxs-lookup"><span data-stu-id="8b552-127">The value tuple's fifth element.</span></span></param>
        <param name="item6"><span data-ttu-id="8b552-128">值元组的第 6 个元素。</span><span class="sxs-lookup"><span data-stu-id="8b552-128">The value tuple's sixth element.</span></span></param>
        <param name="item7"><span data-ttu-id="8b552-129">值元组的第 7 个元素。</span><span class="sxs-lookup"><span data-stu-id="8b552-129">The value tuple's seventh element.</span></span></param>
        <param name="rest"><span data-ttu-id="8b552-130">值元组类型的实例，其包含值元组的剩下元素的值。</span><span class="sxs-lookup"><span data-stu-id="8b552-130">An instance of any value tuple type that contains the values of the value's tuple's remaining elements.</span></span></param>
        <summary><span data-ttu-id="8b552-131">初始化一个新 <see cref="T:System.ValueTuple`8" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="8b552-131">Initializes a new <see cref="T:System.ValueTuple`8" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b552-132">除了使用语言的对元组的内置支持，还可以通过调用静态 <xref:System.ValueTuple.Create%60%608%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%2C%60%607%29?displayProperty=nameWithType> 方法来创建值元组，而无需显式指定其元素的类型。</span><span class="sxs-lookup"><span data-stu-id="8b552-132">In addition to using your language's build-in support for tuples, you can also create a value tuple by calling the static <xref:System.ValueTuple.Create%60%608%28%60%600%2C%60%601%2C%60%602%2C%60%603%2C%60%604%2C%60%605%2C%60%606%2C%60%607%29?displayProperty=nameWithType> method without having to explicitly specify the types of its elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8b552-133"><paramref name="rest" /> 不是泛型值元组类型。</span><span class="sxs-lookup"><span data-stu-id="8b552-133"><paramref name="rest" /> is not a generic value tuple type.</span></span></exception>
        <altmember cref="M:System.ValueTuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo ((T1,T2,T3,T4,T5,T6,T7,TRest) other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`8.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, TRest&gt; other);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt; -&gt; int&#xA;override this.CompareTo : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt; -&gt; int" Usage="valueTuple.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="8b552-134">要与此实例进行比较的元组。</span><span class="sxs-lookup"><span data-stu-id="8b552-134">The tuple to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="8b552-135">将当前 <see cref="T:System.ValueTuple`8" /> 实例与指定的 <see cref="T:System.ValueTuple`8" /> 实例进行比较。</span><span class="sxs-lookup"><span data-stu-id="8b552-135">Compares the current <see cref="T:System.ValueTuple`8" /> instance to a specified <see cref="T:System.ValueTuple`8" /> instance.</span></span></summary>
        <returns><span data-ttu-id="8b552-136">一个带符号整数，指示此实例和 <paramref name="other" /> 在排序顺序中的相对位置，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="8b552-136">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="8b552-137">值</span><span class="sxs-lookup"><span data-stu-id="8b552-137">Value</span></span> 
 </term><description> <span data-ttu-id="8b552-138">说明</span><span class="sxs-lookup"><span data-stu-id="8b552-138">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="8b552-139">负整数</span><span class="sxs-lookup"><span data-stu-id="8b552-139">A negative integer</span></span> 
 </term><description> <span data-ttu-id="8b552-140">此实例位于 <paramref name="other" /> 之前。</span><span class="sxs-lookup"><span data-stu-id="8b552-140">This instance precedes <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8b552-141">零</span><span class="sxs-lookup"><span data-stu-id="8b552-141">Zero</span></span> 
 </term><description> <span data-ttu-id="8b552-142">此实例在排序顺序中的位置与 <paramref name="other" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="8b552-142">This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8b552-143">正整数</span><span class="sxs-lookup"><span data-stu-id="8b552-143">A positive integer</span></span> 
 </term><description> <span data-ttu-id="8b552-144">此实例位于 <paramref name="other" /> 之后。</span><span class="sxs-lookup"><span data-stu-id="8b552-144">This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8b552-145">返回一个值，该值指示当前 <see cref="T:System.ValueTuple`8" /> 实例是否与指定的对象相等。</span><span class="sxs-lookup"><span data-stu-id="8b552-145">Returns a value that indicates whether the current <see cref="T:System.ValueTuple`8" /> instance is equal to a specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`8.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="valueTuple.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8b552-146">要与此实例比较的对象。</span><span class="sxs-lookup"><span data-stu-id="8b552-146">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="8b552-147">返回一个值，该值指示当前 <see cref="T:System.ValueTuple`8" /> 实例是否与指定的对象相等。</span><span class="sxs-lookup"><span data-stu-id="8b552-147">Returns a value that indicates whether the current <see cref="T:System.ValueTuple`8" /> instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="8b552-148">如果当前实例等于指定对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8b552-148"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b552-149">在下列条件下，`obj` 参数被视为等于当前实例：</span><span class="sxs-lookup"><span data-stu-id="8b552-149">The `obj` argument is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="8b552-150">它是 <xref:System.ValueTuple%608> 值类型。</span><span class="sxs-lookup"><span data-stu-id="8b552-150">It is a <xref:System.ValueTuple%608> value type.</span></span>  
  
-   <span data-ttu-id="8b552-151">其组件的类型与当前实例的组件相同。</span><span class="sxs-lookup"><span data-stu-id="8b552-151">Its components are of the same types as those of the current instance.</span></span>  
  
-   <span data-ttu-id="8b552-152">其组件等于当前实例的组件。</span><span class="sxs-lookup"><span data-stu-id="8b552-152">Its components are equal to those of the current instance.</span></span> <span data-ttu-id="8b552-153">相等性取决于每个组件的默认相等比较器。</span><span class="sxs-lookup"><span data-stu-id="8b552-153">Equality is determined by the default equality comparer for each component.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals ((T1,T2,T3,T4,T5,T6,T7,TRest) other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.ValueTuple`8&lt;!T1, !T2, !T3, !T4, !T5, !T6, !T7, !TRest&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`8.Equals(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6,`7})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ValueTuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(ValueTuple&lt;T1, T2, T3, T4, T5, T6, T7, TRest&gt; other);" />
      <MemberSignature Language="F#" Value="override this.Equals : ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt; -&gt; bool" Usage="valueTuple.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="8b552-154">要与此实例进行比较的值元组。</span><span class="sxs-lookup"><span data-stu-id="8b552-154">The value tuple to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="8b552-155">返回一个值，该值指示当前 <see cref="T:System.ValueTuple`8" /> 实例是否与指定的 <see cref="T:System.ValueTuple`8" /> 实例相等。</span><span class="sxs-lookup"><span data-stu-id="8b552-155">Returns a value that indicates whether the current <see cref="T:System.ValueTuple`8" /> instance is equal to a specified <see cref="T:System.ValueTuple`8" /> instance.</span></span></summary>
        <returns><span data-ttu-id="8b552-156">如果当前实例等于指定元组，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8b552-156"><see langword="true" /> if the current instance is equal to the specified tuple; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b552-157">在下列条件下，`other` 参数被视为等于当前实例：</span><span class="sxs-lookup"><span data-stu-id="8b552-157">The `other` argument is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="8b552-158">其组件的类型与当前实例的组件相同。</span><span class="sxs-lookup"><span data-stu-id="8b552-158">Its components are of the same types as those of the current instance.</span></span>  
  
-   <span data-ttu-id="8b552-159">其组件等于当前实例的组件。</span><span class="sxs-lookup"><span data-stu-id="8b552-159">Its components are equal to those of the current instance.</span></span> <span data-ttu-id="8b552-160">相等性取决于每个组件的默认相等比较器。</span><span class="sxs-lookup"><span data-stu-id="8b552-160">Equality is determined by the default equality comparer for each component.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`8.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="valueTuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b552-161">计算当前 <see cref="T:System.ValueTuple`8" /> 实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="8b552-161">Calculates the hash code for the current <see cref="T:System.ValueTuple`8" /> instance.</span></span></summary>
        <returns><span data-ttu-id="8b552-162">当前 <see cref="T:System.ValueTuple`8" /> 实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="8b552-162">The hash code for the current <see cref="T:System.ValueTuple`8" /> instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1;" />
      <MemberSignature Language="ILAsm" Value=".field public !T1 Item1" />
      <MemberSignature Language="DocId" Value="F:System.ValueTuple`8.Item1" />
      <MemberSignature Language="VB.NET" Value="Public Item1 As T1 " />
      <MemberSignature Language="C++ CLI" Value="public: T1 Item1;" />
      <MemberSignature Language="F#" Value="val mutable Item1 : 'T1" Usage="System.ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt;.Item1" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b552-163">获取当前 <see cref="T:System.ValueTuple`8" /> 实例的第 1 个元素的值。</span><span class="sxs-lookup"><span data-stu-id="8b552-163">Gets the value of the current <see cref="T:System.ValueTuple`8" /> instance's first element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2;" />
      <MemberSignature Language="ILAsm" Value=".field public !T2 Item2" />
      <MemberSignature Language="DocId" Value="F:System.ValueTuple`8.Item2" />
      <MemberSignature Language="VB.NET" Value="Public Item2 As T2 " />
      <MemberSignature Language="C++ CLI" Value="public: T2 Item2;" />
      <MemberSignature Language="F#" Value="val mutable Item2 : 'T2" Usage="System.ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt;.Item2" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b552-164">获取当前 <see cref="T:System.ValueTuple`8" /> 实例的第 2 个元素的值。</span><span class="sxs-lookup"><span data-stu-id="8b552-164">Gets the value of the current <see cref="T:System.ValueTuple`8" /> instance's second element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3;" />
      <MemberSignature Language="ILAsm" Value=".field public !T3 Item3" />
      <MemberSignature Language="DocId" Value="F:System.ValueTuple`8.Item3" />
      <MemberSignature Language="VB.NET" Value="Public Item3 As T3 " />
      <MemberSignature Language="C++ CLI" Value="public: T3 Item3;" />
      <MemberSignature Language="F#" Value="val mutable Item3 : 'T3" Usage="System.ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt;.Item3" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b552-165">获取当前 <see cref="T:System.ValueTuple`8" /> 实例的第 3 个元素的值。</span><span class="sxs-lookup"><span data-stu-id="8b552-165">Gets the value of the current <see cref="T:System.ValueTuple`8" /> instance's third element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item4">
      <MemberSignature Language="C#" Value="public T4 Item4;" />
      <MemberSignature Language="ILAsm" Value=".field public !T4 Item4" />
      <MemberSignature Language="DocId" Value="F:System.ValueTuple`8.Item4" />
      <MemberSignature Language="VB.NET" Value="Public Item4 As T4 " />
      <MemberSignature Language="C++ CLI" Value="public: T4 Item4;" />
      <MemberSignature Language="F#" Value="val mutable Item4 : 'T4" Usage="System.ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt;.Item4" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b552-166">获取当前 <see cref="T:System.ValueTuple`8" /> 实例的第 4 个元素的值。</span><span class="sxs-lookup"><span data-stu-id="8b552-166">Gets the value of the current <see cref="T:System.ValueTuple`8" /> instance's fourth element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item5">
      <MemberSignature Language="C#" Value="public T5 Item5;" />
      <MemberSignature Language="ILAsm" Value=".field public !T5 Item5" />
      <MemberSignature Language="DocId" Value="F:System.ValueTuple`8.Item5" />
      <MemberSignature Language="VB.NET" Value="Public Item5 As T5 " />
      <MemberSignature Language="C++ CLI" Value="public: T5 Item5;" />
      <MemberSignature Language="F#" Value="val mutable Item5 : 'T5" Usage="System.ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt;.Item5" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T5</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b552-167">获取当前 <see cref="T:System.ValueTuple`8" /> 实例的第 5 个元素的值。</span><span class="sxs-lookup"><span data-stu-id="8b552-167">Gets the value of the current <see cref="T:System.ValueTuple`8" /> instance's fifth element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item6">
      <MemberSignature Language="C#" Value="public T6 Item6;" />
      <MemberSignature Language="ILAsm" Value=".field public !T6 Item6" />
      <MemberSignature Language="DocId" Value="F:System.ValueTuple`8.Item6" />
      <MemberSignature Language="VB.NET" Value="Public Item6 As T6 " />
      <MemberSignature Language="C++ CLI" Value="public: T6 Item6;" />
      <MemberSignature Language="F#" Value="val mutable Item6 : 'T6" Usage="System.ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt;.Item6" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T6</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b552-168">获取当前 <see cref="T:System.ValueTuple`8" /> 实例的第 6 个元素的值。</span><span class="sxs-lookup"><span data-stu-id="8b552-168">Gets the value of the current <see cref="T:System.ValueTuple`8" /> instance's sixth element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item7">
      <MemberSignature Language="C#" Value="public T7 Item7;" />
      <MemberSignature Language="ILAsm" Value=".field public !T7 Item7" />
      <MemberSignature Language="DocId" Value="F:System.ValueTuple`8.Item7" />
      <MemberSignature Language="VB.NET" Value="Public Item7 As T7 " />
      <MemberSignature Language="C++ CLI" Value="public: T7 Item7;" />
      <MemberSignature Language="F#" Value="val mutable Item7 : 'T7" Usage="System.ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt;.Item7" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T7</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b552-169">获取当前 <see cref="T:System.ValueTuple`8" /> 实例的第 7 个元素的值。</span><span class="sxs-lookup"><span data-stu-id="8b552-169">Gets the value of the current <see cref="T:System.ValueTuple`8" /> instance's seventh element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rest">
      <MemberSignature Language="C#" Value="public TRest Rest;" />
      <MemberSignature Language="ILAsm" Value=".field public !TRest Rest" />
      <MemberSignature Language="DocId" Value="F:System.ValueTuple`8.Rest" />
      <MemberSignature Language="VB.NET" Value="Public Rest As TRest " />
      <MemberSignature Language="C++ CLI" Value="public: TRest Rest;" />
      <MemberSignature Language="F#" Value="val mutable Rest : 'Rest" Usage="System.ValueTuple&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'Rest (requires 'Rest : struct)&gt;.Rest" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TRest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b552-170">获取当前 <see cref="T:System.ValueTuple`8" /> 实例的剩余元素。</span><span class="sxs-lookup"><span data-stu-id="8b552-170">Gets the current <see cref="T:System.ValueTuple`8" /> instance's remaining elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b552-171">"<xref:System.ValueTuple%608.Rest>" 字段返回一个嵌套值元组，该元组允许访问元组的第八个第*n*个元素。</span><span class="sxs-lookup"><span data-stu-id="8b552-171">The <xref:System.ValueTuple%608.Rest> field returns a nested value tuple that allows access to the eighth though *n*th elements of the tuple.</span></span> <span data-ttu-id="8b552-172">根据元组中元素的总数，可以通过 `Item7` 属性从嵌套值元组的 `Item1` 检索第8个到第十四个组件的值。</span><span class="sxs-lookup"><span data-stu-id="8b552-172">Depending on the total number of elements in the tuple, the values of the eighth through fourteenth components can be retrieved from the nested value tuple's `Item1` through `Item7` properties.</span></span> <span data-ttu-id="8b552-173">然后，您可以使用嵌套 <xref:System.ValueTuple%608> 对象的 <xref:System.ValueTuple%608.Rest> 属性在下一层嵌套中检索值元组。</span><span class="sxs-lookup"><span data-stu-id="8b552-173">You can then use the <xref:System.ValueTuple%608.Rest> property of a nested <xref:System.ValueTuple%608> object to retrieve the value tuple at the next level of nesting.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IStructuralComparable.CompareTo : obj * System.Collections.IComparer -&gt; int&#xA;override this.System.Collections.IStructuralComparable.CompareTo : obj * System.Collections.IComparer -&gt; int" Usage="valueTuple.System.Collections.IStructuralComparable.CompareTo (other, comparer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="8b552-174">要与当前实例比较的对象。</span><span class="sxs-lookup"><span data-stu-id="8b552-174">The object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="8b552-175">提供用于比较的自定义规则的对象。</span><span class="sxs-lookup"><span data-stu-id="8b552-175">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="8b552-176">使用指定的比较器比较当前 <see cref="T:System.ValueTuple`8" /> 实例与指定对象，并返回一个整数，该整数指示当前对象在排序顺序中的位置：是在指定对象之前、之后还是在与指定对象相同的位置。</span><span class="sxs-lookup"><span data-stu-id="8b552-176">Compares the current <see cref="T:System.ValueTuple`8" /> instance to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="8b552-177">一个带符号整数，指示此实例和 <paramref name="other" /> 在排序顺序中的相对位置，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="8b552-177">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="8b552-178">值</span><span class="sxs-lookup"><span data-stu-id="8b552-178">Value</span></span> 
 </term><description> <span data-ttu-id="8b552-179">说明</span><span class="sxs-lookup"><span data-stu-id="8b552-179">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="8b552-180">负整数</span><span class="sxs-lookup"><span data-stu-id="8b552-180">A negative integer</span></span> 
 </term><description> <span data-ttu-id="8b552-181">此实例位于 <paramref name="other" /> 之前。</span><span class="sxs-lookup"><span data-stu-id="8b552-181">This instance precedes <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8b552-182">零</span><span class="sxs-lookup"><span data-stu-id="8b552-182">Zero</span></span> 
 </term><description> <span data-ttu-id="8b552-183">此实例在排序顺序中的位置与 <paramref name="other" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="8b552-183">This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8b552-184">正整数</span><span class="sxs-lookup"><span data-stu-id="8b552-184">A positive integer</span></span> 
 </term><description> <span data-ttu-id="8b552-185">此实例位于 <paramref name="other" /> 之后。</span><span class="sxs-lookup"><span data-stu-id="8b552-185">This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b552-186">此成员是显式接口应用。</span><span class="sxs-lookup"><span data-stu-id="8b552-186">This member is an explicit interface implementation.</span></span> <span data-ttu-id="8b552-187">仅当 <xref:System.ValueTuple%608> 实例强制转换为 <xref:System.Collections.IStructuralComparable> 接口时，才能使用此方法。</span><span class="sxs-lookup"><span data-stu-id="8b552-187">It can only be used when the <xref:System.ValueTuple%608> instance is cast to an  <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="8b552-188">此方法允许您定义 <xref:System.ValueTuple%608> 对象的自定义比较。</span><span class="sxs-lookup"><span data-stu-id="8b552-188">This method lets you define customized comparisons of <xref:System.ValueTuple%608> objects.</span></span> <span data-ttu-id="8b552-189">例如，您可以使用此方法根据特定组件的值对 <xref:System.ValueTuple%608> 对象进行排序。</span><span class="sxs-lookup"><span data-stu-id="8b552-189">For example, you can use this method to order <xref:System.ValueTuple%608> objects based on the value of a specific component.</span></span>  
  
 <span data-ttu-id="8b552-190">尽管可以直接调用此方法，但它通常由包含 <xref:System.Collections.IComparer> 参数的集合排序方法调用，以对集合的成员进行排序。</span><span class="sxs-lookup"><span data-stu-id="8b552-190">Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="8b552-191">例如，它由 <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> 方法和使用 <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> 构造函数实例化的 <xref:System.Collections.SortedList> 对象的 <xref:System.Collections.SortedList.Add%2A> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="8b552-191">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8b552-192"><xref:System.ValueTuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> 方法旨在用于排序操作。</span><span class="sxs-lookup"><span data-stu-id="8b552-192">The <xref:System.ValueTuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="8b552-193">如果比较的主要目的是确定两个对象是否相等，则不应使用此方法。</span><span class="sxs-lookup"><span data-stu-id="8b552-193">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="8b552-194">若要确定两个对象是否相等，请调用 <xref:System.ValueTuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b552-194">To determine whether two objects are equal, call the <xref:System.ValueTuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8b552-195"><paramref name="other" /> 不是 <see cref="T:System.ValueTuple`8" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="8b552-195"><paramref name="other" /> is not a <see cref="T:System.ValueTuple`8" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IStructuralEquatable.Equals : obj * System.Collections.IEqualityComparer -&gt; bool&#xA;override this.System.Collections.IStructuralEquatable.Equals : obj * System.Collections.IEqualityComparer -&gt; bool" Usage="valueTuple.System.Collections.IStructuralEquatable.Equals (other, comparer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="8b552-196">要与此实例比较的对象。</span><span class="sxs-lookup"><span data-stu-id="8b552-196">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="8b552-197">一个对象，该对象定义用于评估两个对象是否相等的方法。</span><span class="sxs-lookup"><span data-stu-id="8b552-197">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="8b552-198">返回一个值，该值指示基于指定的比较方法，当前 <see cref="T:System.ValueTuple`8" /> 实例是否与指定的对象相等。</span><span class="sxs-lookup"><span data-stu-id="8b552-198">Returns a value that indicates whether the current <see cref="T:System.ValueTuple`8" /> instance is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns><span data-ttu-id="8b552-199">如果当前实例等于指定对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8b552-199"><see langword="true" /> if the current instance is equal to the specified objects; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b552-200">此成员是显式接口应用。</span><span class="sxs-lookup"><span data-stu-id="8b552-200">This member is an explicit interface implementation.</span></span> <span data-ttu-id="8b552-201">仅当 <xref:System.ValueTuple%608> 实例强制转换为 <xref:System.Collections.IStructuralEquatable> 接口时，才能使用此方法。</span><span class="sxs-lookup"><span data-stu-id="8b552-201">It can only be used when the <xref:System.ValueTuple%608> instance is cast to an  <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="8b552-202">仅当 `other` 不 `null`，并且它可以成功地强制转换为与当前实例具有相同的相同类型的组件（包括嵌套元组对象中的相同数目）的 <xref:System.ValueTuple%608> 对象时，才会调用 <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> 实现。</span><span class="sxs-lookup"><span data-stu-id="8b552-202">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if `other` is not `null`, and if it can be successfully cast to a <xref:System.ValueTuple%608> object that has the same total number of components (including those in nested tuple objects) of the same types as the current instance.</span></span> <span data-ttu-id="8b552-203"><xref:System.Collections.IStructuralEquatable.Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType> 方法首先传递要与 <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> 实现进行比较的 <xref:System.ValueTuple%608> 对象的 <xref:System.ValueTuple%608.Item1> 值。</span><span class="sxs-lookup"><span data-stu-id="8b552-203">The <xref:System.Collections.IStructuralEquatable.Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType> method first passes the <xref:System.ValueTuple%608.Item1> values of the <xref:System.ValueTuple%608> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="8b552-204">如果此方法调用返回 `true`，则再次调用方法并传递两个 <xref:System.ValueTuple%608> 对象的 <xref:System.ValueTuple%608.Item2> 值。</span><span class="sxs-lookup"><span data-stu-id="8b552-204">If this method call returns `true`, the method is called again and passed the <xref:System.ValueTuple%608.Item2> values of the two <xref:System.ValueTuple%608> objects.</span></span> <span data-ttu-id="8b552-205">这将继续，直到方法调用在比较特定对值时返回 `false`，或将两个 <xref:System.ValueTuple%608.Rest> 值传递到方法。</span><span class="sxs-lookup"><span data-stu-id="8b552-205">This continues until the method call returns `false` when it compares a specific pair of values, or the two <xref:System.ValueTuple%608.Rest> values are passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IStructuralEquatable.GetHashCode : System.Collections.IEqualityComparer -&gt; int&#xA;override this.System.Collections.IStructuralEquatable.GetHashCode : System.Collections.IEqualityComparer -&gt; int" Usage="valueTuple.System.Collections.IStructuralEquatable.GetHashCode comparer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="8b552-206">一个对象，其 <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> 方法计算当前 <see cref="T:System.ValueTuple`8" /> 实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="8b552-206">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.ValueTuple`8" /> instance.</span></span></param>
        <summary><span data-ttu-id="8b552-207">通过使用指定计算方法计算当前 <see cref="T:System.ValueTuple`8" /> 实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="8b552-207">Calculates the hash code for the current <see cref="T:System.ValueTuple`8" /> instance by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="8b552-208">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="8b552-208">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b552-209">此成员是显式接口应用。</span><span class="sxs-lookup"><span data-stu-id="8b552-209">This member is an explicit interface implementation.</span></span> <span data-ttu-id="8b552-210">仅当 <xref:System.ValueTuple%608> 实例强制转换为 <xref:System.Collections.IStructuralEquatable> 接口时，才能使用此方法。</span><span class="sxs-lookup"><span data-stu-id="8b552-210">It can only be used when the <xref:System.ValueTuple%608> instance is cast to an  <xref:System.Collections.IStructuralEquatable> interface.</span></span>  <span data-ttu-id="8b552-211">方法只是包装对 `comparer` 对象的 <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> 实现的调用。</span><span class="sxs-lookup"><span data-stu-id="8b552-211">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="8b552-212">用于计算哈希代码的算法应为被视为相等的两个 <xref:System.ValueTuple%608> 对象返回相同的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="8b552-212">The algorithm used to compute the hash code should return the same hash code for two <xref:System.ValueTuple%608> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`8.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ other) = IComparable::CompareTo;" />
      <MemberSignature Language="F#" Value="abstract member System.IComparable.CompareTo : obj -&gt; int&#xA;override this.System.IComparable.CompareTo : obj -&gt; int" Usage="valueTuple.System.IComparable.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="8b552-213">要与当前实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="8b552-213">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="8b552-214">比较当前 <see cref="T:System.ValueTuple`8" /> 对象与指定对象，并返回一个整数，该整数指示当前对象在排序顺序中的位置：是在指定对象之前、之后还是在与指定对象相同的位置。</span><span class="sxs-lookup"><span data-stu-id="8b552-214">Compares the current <see cref="T:System.ValueTuple`8" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="8b552-215">一个带符号整数，指示此实例和 <paramref name="obj" /> 在排序顺序中的相对位置，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="8b552-215">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="8b552-216">值</span><span class="sxs-lookup"><span data-stu-id="8b552-216">Value</span></span> 
 </term><description> <span data-ttu-id="8b552-217">说明</span><span class="sxs-lookup"><span data-stu-id="8b552-217">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="8b552-218">负整数</span><span class="sxs-lookup"><span data-stu-id="8b552-218">A negative integer</span></span> 
 </term><description> <span data-ttu-id="8b552-219">此实例位于 <paramref name="other" /> 之前。</span><span class="sxs-lookup"><span data-stu-id="8b552-219">This instance precedes <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8b552-220">零</span><span class="sxs-lookup"><span data-stu-id="8b552-220">Zero</span></span> 
 </term><description> <span data-ttu-id="8b552-221">此实例在排序顺序中的位置与 <paramref name="other" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="8b552-221">This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8b552-222">正整数</span><span class="sxs-lookup"><span data-stu-id="8b552-222">A positive integer</span></span> 
 </term><description> <span data-ttu-id="8b552-223">此实例位于 <paramref name="other" /> 之后。</span><span class="sxs-lookup"><span data-stu-id="8b552-223">This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b552-224">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="8b552-224">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b552-225">它只能在 <xref:System.ValueTuple%608> 实例被强制转换为 <xref:System.IComparable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8b552-225">It can be used only when the <xref:System.ValueTuple%608> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="8b552-226">此方法提供 <xref:System.ValueTuple%608> 结构的 <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> 实现。</span><span class="sxs-lookup"><span data-stu-id="8b552-226">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.ValueTuple%608> structure.</span></span> <span data-ttu-id="8b552-227">尽管可以直接调用方法，但它通常由集合排序方法（如 <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> 和 <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>）的默认重载调用，以对集合的成员进行排序。</span><span class="sxs-lookup"><span data-stu-id="8b552-227">Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8b552-228"><xref:System.ValueTuple%608.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> 方法旨在用于排序操作。</span><span class="sxs-lookup"><span data-stu-id="8b552-228">The <xref:System.ValueTuple%608.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method is intended for use in sorting operations.</span></span> <span data-ttu-id="8b552-229">如果比较的主要目的是确定两个对象是否相等，则不应使用此方法。</span><span class="sxs-lookup"><span data-stu-id="8b552-229">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="8b552-230">若要确定两个对象是否相等，请调用 <xref:System.ValueTuple%608.Equals%28System.Object%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b552-230">To determine whether two objects are equal, call the <xref:System.ValueTuple%608.Equals%28System.Object%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="8b552-231">此方法使用默认的对象比较器来比较每个组件。</span><span class="sxs-lookup"><span data-stu-id="8b552-231">This method uses the default object comparer to compare each component.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8b552-232"><paramref name="other" /> 不是 <see cref="T:System.ValueTuple`8" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="8b552-232"><paramref name="other" /> is not a <see cref="T:System.ValueTuple`8" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Runtime::CompilerServices::ITuple::Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.System.Runtime.CompilerServices.ITuple.Item(int) : obj" Usage="System.Runtime.CompilerServices.ITuple.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="8b552-233">指定 <see langword="ValueTuple" /> 元素的值。</span><span class="sxs-lookup"><span data-stu-id="8b552-233">The value of the specified <see langword="ValueTuple" /> element.</span></span> <span data-ttu-id="8b552-234"><paramref name="index" /> 的范围可以介于 0（表示 <see langword="Item1" />）到 <see langword="ValueTuple" /> 中的元素数减去一之间。</span><span class="sxs-lookup"><span data-stu-id="8b552-234"><paramref name="index" /> can range from 0 for <see langword="Item1" /> to one less than the number of elements in the <see langword="ValueTuple" />.</span></span></param>
        <summary><span data-ttu-id="8b552-235">获取指定 <see langword="ValueTuple" /> 元素的值。</span><span class="sxs-lookup"><span data-stu-id="8b552-235">Gets the value of the specified <see langword="ValueTuple" /> element.</span></span></summary>
        <value><span data-ttu-id="8b552-236">指定位置 <see langword="ValueTuple" /> 元素的值。</span><span class="sxs-lookup"><span data-stu-id="8b552-236">The value of the <see langword="ValueTuple" /> element at the specified position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b552-237"><xref:System.ValueTuple%608.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> 属性是显式接口实现。</span><span class="sxs-lookup"><span data-stu-id="8b552-237">The <xref:System.ValueTuple%608.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="8b552-238">若要调用该对象，必须将 <xref:System.ValueTuple%608> 对象强制转换或转换为 <xref:System.Runtime.CompilerServices.ITuple> 的接口对象。</span><span class="sxs-lookup"><span data-stu-id="8b552-238">To call it, you must cast or convert the <xref:System.ValueTuple%608> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="8b552-239"><paramref name="index" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="8b552-239"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="8b552-240">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8b552-240">-or-</span></span> 
 <span data-ttu-id="8b552-241"><paramref name="index" /> 大于或等于 <see cref="P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Length" />。</span><span class="sxs-lookup"><span data-stu-id="8b552-241"><paramref name="index" /> is greater than or equal to <see cref="P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Length" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.ValueTuple`8.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System::Runtime::CompilerServices::ITuple::Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Runtime.CompilerServices.ITuple.Length : int" Usage="System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b552-242">获取 <see langword="ValueTuple" /> 中的元素数。</span><span class="sxs-lookup"><span data-stu-id="8b552-242">Gets the number of elements in the <see langword="ValueTuple" />.</span></span></summary>
        <value><span data-ttu-id="8b552-243"><see langword="ValueTuple" /> 中的元素的数量。</span><span class="sxs-lookup"><span data-stu-id="8b552-243">The number of elements in the <see langword="ValueTuple" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b552-244"><xref:System.ValueTuple%608.System%23Runtime%23CompilerServices%23ITuple%23Length%2A?displayProperty=nameWithType> 属性是显式接口实现。</span><span class="sxs-lookup"><span data-stu-id="8b552-244">The <xref:System.ValueTuple%608.System%23Runtime%23CompilerServices%23ITuple%23Length%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="8b552-245">若要调用该对象，必须将 <xref:System.ValueTuple%608> 对象强制转换或转换为 <xref:System.Runtime.CompilerServices.ITuple> 的接口对象。</span><span class="sxs-lookup"><span data-stu-id="8b552-245">To call it, you must cast or convert the <xref:System.ValueTuple%608> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ValueTuple`8.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="valueTuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ValueTuple</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b552-246">返回表示此 <see cref="T:System.ValueTuple`8" /> 实例的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="8b552-246">Returns a string that represents the value of this <see cref="T:System.ValueTuple`8" /> instance.</span></span></summary>
        <returns><span data-ttu-id="8b552-247">此 <see cref="T:System.ValueTuple`8" /> 实例的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="8b552-247">The string representation of this <see cref="T:System.ValueTuple`8" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b552-248">此方法返回的字符串采用格式（*Item1*、 *Item2*、 *Item3*、 *tuple.item4*、 *tuple.item5*、 *Tuple.item6*、 *Tuple.item7*、 *Item8*...），其中*Item1*、 *Item2*、 *Item3*、 *tuple.item4*、 *tuple.item5*、 *tuple.item6*和*tuple.item7*表示 <xref:System.ValueTuple%608.Item1>、<xref:System.ValueTuple%608.Item2>、<xref:System.ValueTuple%608.Item3>、<xref:System.ValueTuple%608.Item4>、<xref:System.ValueTuple%608.Item5>、<xref:System.ValueTuple%608.Item6>和 <xref:System.ValueTuple%608.Item7> 字段的值。</span><span class="sxs-lookup"><span data-stu-id="8b552-248">The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, *Item7*, *Item8*…), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.ValueTuple%608.Item1>, <xref:System.ValueTuple%608.Item2>, <xref:System.ValueTuple%608.Item3>, <xref:System.ValueTuple%608.Item4>, <xref:System.ValueTuple%608.Item5>, <xref:System.ValueTuple%608.Item6>, and <xref:System.ValueTuple%608.Item7> fields.</span></span> <span data-ttu-id="8b552-249">*Item8*表示 <xref:System.ValueTuple%608> 实例的 `Next.Item1` 字段的值。</span><span class="sxs-lookup"><span data-stu-id="8b552-249">*Item8* represents the value of the <xref:System.ValueTuple%608> instance's `Next.Item1` field.</span></span> <span data-ttu-id="8b552-250">任何其他嵌套元素的值将在*Item8*之后。</span><span class="sxs-lookup"><span data-stu-id="8b552-250">The value of any additional nested elements follows *Item8*.</span></span> <span data-ttu-id="8b552-251">如果 `null`任何字段值，则它将表示为 <xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="8b552-251">If any of the field values is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
