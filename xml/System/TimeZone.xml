<Type Name="TimeZone" FullName="System.TimeZone">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9b2c8c4fc728818ca567df85f057629a2ec9ebc6" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100281861" /></Metadata><TypeSignature Language="C#" Value="public abstract class TimeZone" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TimeZone extends System.Object" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.TimeZone" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TimeZone" />
  <TypeSignature Language="C++ CLI" Value="public ref class TimeZone abstract" />
  <TypeSignature Language="F#" Value="type TimeZone = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit TimeZone extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1">
      <AttributeName Language="C#">[System.Obsolete("System.TimeZone has been deprecated.  Please investigate the use of System.TimeZoneInfo instead.")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("System.TimeZone has been deprecated.  Please investigate the use of System.TimeZoneInfo instead.")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示时区。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 时区是使用相同的标准时间的地理区域。  
  
> [!IMPORTANT]
>  请尽可能使用类， <xref:System.TimeZoneInfo> 而不使用 <xref:System.TimeZone> 类。  
  
 您可以使用 <xref:System.TimeZone> 类检索有关当前时区的信息，以及将时间从本地时间转换为协调世界时 (UTC) ，反之亦然。 但是，不能使用 <xref:System.TimeZone> 类来表示本地区域以外的时区，也不能将日期和时间转换从一个时区转换到另一个时区。 为此，请使用 <xref:System.TimeZoneInfo> 类。 您可以使用此类来检索在本地系统上定义的任何时区的信息，创建自定义时区，并将时间从一个时区转换到另一个时区。  
  
 <xref:System.TimeZone>类仅支持本地时区的单个夏令时调整规则。 因此，此 <xref:System.TimeZone> 类可以在最新调整规则生效的时间段内准确报告夏令时信息或者在 UTC 和本地时间之间转换。 与此相反， <xref:System.TimeZoneInfo> 类支持多个调整规则，这样就可以使用历史时区数据。  
  
   
  
## Examples  
 下面的示例引用并显示所选的 `TimeZone` 类元素。  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>除了向 <see langword="abstract" /> Visual Basic) 中标记的成员提供实现 (<see langword="MustOverride" /> ，从派生的类必须 <see cref="T:System.TimeZone" /> 重写方法的默认行为，这一点非常重要 <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> 。 这是因为 <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> .NET Framework 版本2.0 中的默认行为不依赖于对的调用 <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" /> ，就像它在 .NET Framework 版本1.0 和1.1 中那样。  有关详细信息，请参阅 <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> 方法。</para></block>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.DateTimeOffset" />
    <altmember cref="T:System.TimeZoneInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TimeZone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TimeZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.TimeZone" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentTimeZone">
      <MemberSignature Language="C#" Value="public static TimeZone CurrentTimeZone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.TimeZone CurrentTimeZone" />
      <MemberSignature Language="DocId" Value="P:System.TimeZone.CurrentTimeZone" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentTimeZone As TimeZone" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeZone ^ CurrentTimeZone { TimeZone ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentTimeZone : TimeZone" Usage="System.TimeZone.CurrentTimeZone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZone</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前计算机的时区。</summary>
        <value>一个 <see cref="T:System.TimeZone" /> 对象，表示当前的本地时区。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeZone.CurrentTimeZone%2A>属性对应于 <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> 属性。 请尽可能使用 <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> 属性。  
  
   
  
## Examples  
 下面的示例引用了 `CurrentTimeZone` 属性，并显示了用于本地时区的标准时间和夏令时的名称。  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>本地时区数据在 <see cref="P:System.TimeZone.CurrentTimeZone" /> 首次用于检索时区信息之后缓存。 如果系统的本地时区随后发生更改，则 <see cref="P:System.TimeZone.CurrentTimeZone" /> 属性不反映此更改。 如果需要在应用程序运行时处理时区更改，请使用 <see cref="T:System.TimeZoneInfo" /> 类并调用其 <see cref="M:System.TimeZoneInfo.ClearCachedData" /> 方法。</para></block>
        <altmember cref="P:System.TimeZoneInfo.Local" />
      </Docs>
    </Member>
    <Member MemberName="DaylightName">
      <MemberSignature Language="C#" Value="public abstract string DaylightName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DaylightName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZone.DaylightName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DaylightName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DaylightName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightName : string" Usage="System.TimeZone.DaylightName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取夏时制时区名称。</summary>
        <value>夏时制时区名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果时区中未使用夏令时，则返回空字符串 ( "" ) 。  
  
 <xref:System.TimeZone.DaylightName%2A>属性对应于 <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=nameWithType> 属性。 请尽可能使用 <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=nameWithType> 属性。  
  
   
  
## Examples  
 下面的示例引用并显示当前时区的 `DaylightName` 属性。  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeZoneInfo.DaylightName" />
      </Docs>
    </Member>
    <Member MemberName="GetDaylightChanges">
      <MemberSignature Language="C#" Value="public abstract System.Globalization.DaylightTime GetDaylightChanges (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.DaylightTime GetDaylightChanges(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.GetDaylightChanges(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDaylightChanges (year As Integer) As DaylightTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Globalization::DaylightTime ^ GetDaylightChanges(int year);" />
      <MemberSignature Language="F#" Value="abstract member GetDaylightChanges : int -&gt; System.Globalization.DaylightTime" Usage="timeZone.GetDaylightChanges year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DaylightTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">要应用夏时制期间的年份。</param>
        <summary>返回特定年份的夏时制期间。</summary>
        <returns>一个 <see cref="T:System.Globalization.DaylightTime" /> 对象，包含 <paramref name="year" /> 中夏时制的起始和结束日期。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅支持每年一次夏令时。  
  
 如果当前时区中未使用夏令时，则返回值为 <xref:System.Globalization.DaylightTime> 对象，其中和的值 <xref:System.Globalization.DaylightTime.Start%2A> <xref:System.Globalization.DaylightTime.End%2A> 为 <xref:System.DateTime.MinValue?displayProperty=nameWithType> ，并且的值 <xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=nameWithType> <xref:System.TimeSpan> 初始化为0刻度。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> 小于 1 或大于 9999。</exception>
        <block subset="none" type="usage"><para>由于 <see cref="T:System.TimeZone" /> 类只支持一个夏令时调整规则，因此该 <see cref="M:System.TimeZone.GetDaylightChanges(System.Int32)" /> 方法将当前调整规则应用到任何年份，无论调整规则实际上是否适用于这一年。 假设操作系统本身具有特定年份的准确数据，则可以通过使用方法返回的对象数组来获得更准确的结果 <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> <see cref="M:System.TimeZoneInfo.GetAdjustmentRules" /> 。 <see cref="P:System.Globalization.DaylightTime.Start" />、 <see cref="P:System.Globalization.DaylightTime.End" /> 和 <see cref="P:System.Globalization.DaylightTime.Delta" /> 属性与 <see cref="P:System.TimeZoneInfo.AdjustmentRule.DateStart" /> 、和属性相对应 <see cref="P:System.TimeZoneInfo.AdjustmentRule.DateEnd" /> <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> 。</para></block>
        <altmember cref="M:System.TimeZoneInfo.GetAdjustmentRules" />
      </Docs>
    </Member>
    <Member MemberName="GetUtcOffset">
      <MemberSignature Language="C#" Value="public abstract TimeSpan GetUtcOffset (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan GetUtcOffset(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUtcOffset (time As DateTime) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TimeSpan GetUtcOffset(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetUtcOffset : DateTime -&gt; TimeSpan" Usage="timeZone.GetUtcOffset time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">日期和时间值。</param>
        <summary>返回指定本地时间的协调世界时 (UTC) 偏移量。</summary>
        <returns>与 <paramref name="time" /> 相比的协调世界时 (UTC) 偏移量。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法返回参数与协调世界时之间的偏移量（或差值） `time` (UTC) 。 即：  
  
 `time` = UTC + 偏移量  
  
 方法 `time` 基于其属性解释时区 <xref:System.DateTime.Kind%2A> 。 如果属性的值 <xref:System.DateTime.Kind%2A> 为 <xref:System.DateTimeKind.Local?displayProperty=nameWithType> 或 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> ，则该方法返回本地时区的偏移量。 如果属性的值 <xref:System.DateTime.Kind%2A> 为 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType> ，则此方法返回等于的偏移量 <xref:System.TimeSpan.Zero?displayProperty=nameWithType> 。  
  
 如果本地时区遵循夏令时，则 <xref:System.TimeZone.GetUtcOffset%2A> `time` 当确定本地时区的偏移量时，将当前调整规则应用到。 也就是说，返回的偏移量 <xref:System.TimeZone.GetUtcOffset%2A> 反映的是 `time` 属于时区的标准时间还是夏时制。  
  
> [!NOTE]
>  <xref:System.TimeZone.GetUtcOffset%2A>方法仅识别本地时区的当前夏令时调整规则。 因此，只有在最新调整规则生效的时间段内，才能保证准确返回本地时间的 UTC 偏移量。 如果 `time` 是遵守先前调整规则的历史日期和时间值，则它可能会返回不正确的结果。  
  
 <xref:System.TimeZone.GetUtcOffset%2A>方法对应于 <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=nameWithType> 方法。 如果可能，请使用 <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=nameWithType> 方法。  
  
 由于所表示的日期和时间值 `time` 与此值相对于 UTC 的偏移量未紧密耦合，因此当在不同的计算机上运行或在同一台计算机上的不同时区下运行时，本地或未指定的日期和时间值可以返回不同的偏移量值。 如果不需要此行为，请改用 <xref:System.DateTimeOffset> 值。 <xref:System.DateTimeOffset>数据类型将日期和时间值与它相对于 UTC 的偏移量紧密耦合在一起。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDaylightSavingTime">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>返回一个值，用以指示指定日期和时间是否处于夏时制期间。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public virtual bool IsDaylightSavingTime (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDaylightSavingTime(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.IsDaylightSavingTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDaylightSavingTime (time As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDaylightSavingTime(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member IsDaylightSavingTime : DateTime -&gt; bool&#xA;override this.IsDaylightSavingTime : DateTime -&gt; bool" Usage="timeZone.IsDaylightSavingTime time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">日期和时间。</param>
        <summary>返回一个值，用以指示指定日期和时间是否处于夏时制期间。</summary>
        <returns>如果 <paramref name="time" /> 处于夏时制期间，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 夏时制期间适用的年份派生自 `time` 参数。  
  
 由于 <xref:System.TimeZone> 类支持单个夏令时调整规则，因此该 <xref:System.TimeZone.IsDaylightSavingTime%28System.DateTime%29> 方法将当前调整规则应用到任何日期，无论调整规则在该日期是否有效。 假设操作系统本身具有准确的历史夏令时数据，则可以通过使用方法获得更准确的结果 <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> 。 如果可能，请使用 <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> 方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public static bool IsDaylightSavingTime (DateTime time, System.Globalization.DaylightTime daylightTimes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDaylightSavingTime(valuetype System.DateTime time, class System.Globalization.DaylightTime daylightTimes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDaylightSavingTime (time As DateTime, daylightTimes As DaylightTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDaylightSavingTime(DateTime time, System::Globalization::DaylightTime ^ daylightTimes);" />
      <MemberSignature Language="F#" Value="static member IsDaylightSavingTime : DateTime * System.Globalization.DaylightTime -&gt; bool" Usage="System.TimeZone.IsDaylightSavingTime (time, daylightTimes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="daylightTimes" Type="System.Globalization.DaylightTime" />
      </Parameters>
      <Docs>
        <param name="time">日期和时间。</param>
        <param name="daylightTimes">夏时制期间。</param>
        <summary>返回一个值，用以指示指定日期和时间是否处于指定的夏时制期间。</summary>
        <returns>如果 <paramref name="time" /> 处于 <paramref name="daylightTimes" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType>方法提供与此方法重载相同的功能 <xref:System.TimeZone.IsDaylightSavingTime%2A> 。 如果可能，请使用 <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> 方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="daylightTimes" /> 为 <see langword="null" />。</exception>
        <altmember cref="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="StandardName">
      <MemberSignature Language="C#" Value="public abstract string StandardName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZone.StandardName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StandardName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ StandardName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardName : string" Usage="System.TimeZone.StandardName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取标准时区名称。</summary>
        <value>标准时区名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeZone.StandardName%2A>属性对应于 <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=nameWithType> 属性。 请尽可能使用 <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=nameWithType> 属性。  
  
   
  
## Examples  
 下面的示例引用并显示当前时区的 `StandardName` 属性。  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">尝试将该属性设置为 <see langword="null" />。</exception>
        <altmember cref="P:System.TimeZoneInfo.StandardName" />
      </Docs>
    </Member>
    <Member MemberName="ToLocalTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ToLocalTime (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToLocalTime(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.ToLocalTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToLocalTime (time As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ToLocalTime(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member ToLocalTime : DateTime -&gt; DateTime&#xA;override this.ToLocalTime : DateTime -&gt; DateTime" Usage="timeZone.ToLocalTime time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">协调世界时 (UTC) 时间。</param>
        <summary>返回对应于指定日期和时间值的本地时间。</summary>
        <returns>一个 <see cref="T:System.DateTime" /> 对象，其值为对应于 <paramref name="time" /> 的本地时间。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表显示了 `time` 此方法返回的参数和值之间的关系 <xref:System.DateTime> 。  
  
|`time` 参数|行为|返回值|  
|----------------------|--------------|------------------|  
|协调世界时 (UTC) Time (<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>) 。|将时间从 UTC 转换为本地时间。|一个 <xref:System.DateTime> 对象，其值为对应于 `time` 的本地时间。|  
|本地时间 (<xref:System.DateTimeKind.Local?displayProperty=nameWithType>) 。|无需进行任何转换。|<xref:System.DateTime>参数所表示的值相同 `time` 。|  
|未指定的时间 (<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>) 。|假设时间为 UTC，并将其从 UTC 转换为本地时间。|一个 <xref:System.DateTime> 对象，其值为对应于 `time` 的本地时间。|  
  
 如果本地时区遵循夏令时，则在 <xref:System.TimeZone.ToLocalTime%2A> 执行转换时，将当前调整规则应用到 `time` 。  
  
> [!NOTE]
>  <xref:System.TimeZone.ToLocalTime%2A>方法仅识别本地时区的当前夏令时调整规则。 因此，只有在最新调整规则生效的时间段内，才能保证精确地返回对应于特定 UTC 时间的本地时间。 如果 `time` 是遵守先前调整规则的历史日期和时间值，则它可能会返回不正确的结果。  
  
 <xref:System.TimeZone.ToLocalTime%2A>方法对应于 <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=nameWithType> 方法，其 `destinationTimeZone` 参数设置为 <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> 。 如果可能，请使用 <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=nameWithType> 方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>尽管这不是必需的，但在大多数情况下，在 .NET Framework 版本2.0 下运行的派生类应重写此方法的默认实现。 在 .NET Framework 版本1.0 和1.1 中， <see langword="ToLocalTime" /> 方法调用 <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" /> 方法，并在返回本地时间时为夏令时进行调整。 但是，从 .NET Framework 2.0 开始，默认实现的行为取决于 <see cref="P:System.DateTime.Kind" /> 参数的属性 <paramref name="time" /> 。 如果其值为 <see cref="F:System.DateTimeKind.Local" /> ，则此方法返回 <paramref name="time" /> 未更改的。 如果其值为 <see cref="F:System.DateTimeKind.Utc" /> 或 <see cref="F:System.DateTimeKind.Unspecified" /> ，则此方法假定 <paramref name="time" /> 为 UTC，并将其转换为本地系统时间，而不调用 <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" /> 方法。  
  
下面的代码提供方法的默认实现的简单重写 <see langword="ToLocalTime" /> 。 在此代码中， <see langword="internalTimeZone" /> 变量表示类的私有实例 <see langword="TimeZone" /> ： 
[！ code-csharp[datetime.tolocaltime # 1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.ToLocalTime/CS/TimeZone_ToLocalTime.cs#1)][！ code-vb[datetime.tolocaltime # 1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.ToLocalTime/VB/TimeZone_ToLocalTime.vb#1)]</para></block>
        <altmember cref="M:System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUniversalTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ToUniversalTime (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToUniversalTime(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.ToUniversalTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToUniversalTime (time As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ToUniversalTime(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member ToUniversalTime : DateTime -&gt; DateTime&#xA;override this.ToUniversalTime : DateTime -&gt; DateTime" Usage="timeZone.ToUniversalTime time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">日期和时间。</param>
        <summary>返回对应于指定时间的协调世界时 (UTC)。</summary>
        <returns>一个 <see cref="T:System.DateTime" /> 对象，其值为对应于 <paramref name="time" /> 的协调世界时 (UTC)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果本地时区遵循夏令时，则在 <xref:System.TimeZone.ToUniversalTime%2A> 执行转换时，将当前调整规则应用到 `time` 参数。  
  
> [!NOTE]
>  <xref:System.TimeZone.ToUniversalTime%2A>方法仅识别本地时区的当前夏令时调整规则。 因此，确保仅在最新调整规则生效的时间段内，才能准确地返回协调世界时 (UTC) 对应于特定的本地时间。 如果 `time` 是遵守先前调整规则的历史日期和时间值，则它可能会返回不正确的结果。  
  
 如果 `time` 参数不明确，则该方法假定它是标准时间。  (不明确的时间是指可以映射到标准时间或本地时区的夏令时的时间。 ) 如果 `time` 是无效时间，此方法只需将本地时区的 UTC 偏移量减去本地时间以返回 utc。  (无效时间是由于应用夏令时调整规则而不存在的时间。 )   
  
 由于与 `time` 当前系统上的当前时区相关联，因此，如果应用程序在不同的计算机上运行或在同一台计算机上具有不同的时区，则此方法返回的日期和时间可能会有所不同。 对于日期和时间值必须表示单个明确时间点的情况，请使用 <xref:System.DateTimeOffset> 值来表示本地时间。  
  
 <xref:System.TimeZone.ToUniversalTime%2A>方法对应于 <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=nameWithType> 方法重载， <xref:System.DateTime> 其 <xref:System.DateTime.Kind%2A> 属性不相等 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType> 。 如果可能，请使用 <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=nameWithType> 方法重载。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime)" />
      </Docs>
    </Member>
  </Members>
</Type>
