<Type Name="AttributeUsageAttribute" FullName="System.AttributeUsageAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a97b93141f6ded0e87d72ead38743521e288ff5b" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89838643" /></Metadata><TypeSignature Language="C#" Value="public sealed class AttributeUsageAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AttributeUsageAttribute extends System.Attribute" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.AttributeUsageAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AttributeUsageAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributeUsageAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AttributeUsageAttribute = class&#xA;    inherit Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit AttributeUsageAttribute extends System.Attribute" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Class, Inherited=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Class, Inherited=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f5cd9-101">指定另一个属性类的用法。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-101">Specifies the usage of another attribute class.</span></span> <span data-ttu-id="f5cd9-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5cd9-103">定义自己的属性类时，可以通过 <xref:System.AttributeUsageAttribute> 在属性类上放置来控制使用它的方式。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-103">When you are defining your own attribute class, you can control the manner in which it is used by placing an <xref:System.AttributeUsageAttribute> on your attribute class.</span></span> <span data-ttu-id="f5cd9-104">指示的特性类必须 <xref:System.Attribute> 直接或间接从派生。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-104">The indicated attribute class must derive from <xref:System.Attribute>, either directly or indirectly.</span></span>  
  
 <span data-ttu-id="f5cd9-105">特性类具有位置和命名参数。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-105">Attribute classes have positional and named parameters.</span></span> <span data-ttu-id="f5cd9-106">特性类的每个公共构造函数定义该类的有效位置参数序列。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-106">Each public constructor for an attribute class defines a valid sequence of positional parameters for that class.</span></span> <span data-ttu-id="f5cd9-107">命名参数由特性类的非静态、公共和读/写字段或属性定义。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-107">Named parameters are defined by the non-static, public, and read-write fields or properties of the attribute class.</span></span>  
  
 <span data-ttu-id="f5cd9-108">的三个属性 <xref:System.AttributeUsageAttribute> 是通过定义以下参数设置的：</span><span class="sxs-lookup"><span data-stu-id="f5cd9-108">The three properties of <xref:System.AttributeUsageAttribute> are set by defining the following parameters:</span></span>  
  
-   <xref:System.AttributeUsageAttribute.ValidOn%2A>  
  
 <span data-ttu-id="f5cd9-109">此位置参数指定指示的属性可放置到的程序元素。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-109">This positional parameter specifies the program elements that the indicated attribute can be placed on.</span></span> <span data-ttu-id="f5cd9-110">枚举中列出了可以放置属性的所有可能元素的集合 <xref:System.AttributeTargets> 。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-110">The set of all possible elements that you can place an attribute on is listed in the <xref:System.AttributeTargets> enumeration.</span></span> <span data-ttu-id="f5cd9-111">可以 <xref:System.AttributeTargets> 使用按位 "或" 运算组合几个值，以获取所需的有效程序元素组合。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-111">You can combine several <xref:System.AttributeTargets> values using a bitwise OR operation to get the desired combination of valid program elements.</span></span>  
  
-   <xref:System.AttributeUsageAttribute.AllowMultiple%2A>  
  
 <span data-ttu-id="f5cd9-112">此命名参数指定是否可为给定的程序元素多次指定指定的属性。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-112">This named parameter specifies whether the indicated attribute can be specified more than once for a given program element.</span></span>  
  
-   <xref:System.AttributeUsageAttribute.Inherited%2A>  
  
 <span data-ttu-id="f5cd9-113">此命名参数指定所指示的属性是否可由派生类和重写成员继承。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-113">This named parameter specifies whether the indicated attribute can be inherited by derived classes and overriding members.</span></span>  
  
 <span data-ttu-id="f5cd9-114">有关使用特性的详细信息，请参阅 <xref:System.Attribute> 和 [特性](/dotnet/standard/attributes/)。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-114">For more information about using attributes, see <xref:System.Attribute> and [Attributes](/dotnet/standard/attributes/).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.AttributeTargets" />
    <related type="Article" href="/dotnet/standard/attributes/"><span data-ttu-id="f5cd9-115">利用特性扩展元数据</span><span class="sxs-lookup"><span data-stu-id="f5cd9-115">Extending Metadata Using Attributes</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeUsageAttribute (AttributeTargets validOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.AttributeTargets validOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validOn As AttributeTargets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttributeUsageAttribute(AttributeTargets validOn);" />
      <MemberSignature Language="F#" Value="new AttributeUsageAttribute : AttributeTargets -&gt; AttributeUsageAttribute" Usage="new System.AttributeUsageAttribute validOn" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validOn" Type="System.AttributeTargets" />
      </Parameters>
      <Docs>
        <param name="validOn"><span data-ttu-id="f5cd9-116">使用按位"或"运算符组合的一组值，用于指示哪些程序元素是有效的。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-116">The set of values combined using a bitwise OR operation to indicate which program elements are valid.</span></span></param>
        <summary><span data-ttu-id="f5cd9-117">用指定的 <see cref="T:System.AttributeUsageAttribute" />、<see cref="T:System.AttributeTargets" /> 值和 <see cref="P:System.AttributeUsageAttribute.AllowMultiple" /> 值列表初始化 <see cref="P:System.AttributeUsageAttribute.Inherited" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-117">Initializes a new instance of the <see cref="T:System.AttributeUsageAttribute" /> class with the specified list of <see cref="T:System.AttributeTargets" />, the <see cref="P:System.AttributeUsageAttribute.AllowMultiple" /> value, and the <see cref="P:System.AttributeUsageAttribute.Inherited" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5cd9-118">可以 <xref:System.AttributeTargets> 使用按位 "或" 运算组合几个值，以获取所需的有效程序元素组合。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-118">You can combine several <xref:System.AttributeTargets> values using a bitwise OR operation to get the desired combination of valid program elements.</span></span>  
  
 <span data-ttu-id="f5cd9-119">对于默认属性值，请参阅 <xref:System.AttributeUsageAttribute.ValidOn%2A> 、 <xref:System.AttributeUsageAttribute.AllowMultiple%2A> 和 <xref:System.AttributeUsageAttribute.Inherited%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-119">For default property values, see the <xref:System.AttributeUsageAttribute.ValidOn%2A>, <xref:System.AttributeUsageAttribute.AllowMultiple%2A>, and <xref:System.AttributeUsageAttribute.Inherited%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5cd9-120">DispId 特性的定义阐释了如何使用按位 "或" 运算组合多个 <xref:System.AttributeTargets> 值。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-120">The definition of the DispId attribute illustrates the use of a bitwise OR operation to combine several <xref:System.AttributeTargets> values.</span></span>  
  
 [!code-cpp[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.AttributeTargets" />
      </Docs>
    </Member>
    <Member MemberName="AllowMultiple">
      <MemberSignature Language="C#" Value="public bool AllowMultiple { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultiple" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.AllowMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowMultiple { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowMultiple : bool with get, set" Usage="System.AttributeUsageAttribute.AllowMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f5cd9-121">获取或设置一个布尔值，该值指示能否为一个程序元素指定多个指示属性实例。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-121">Gets or sets a Boolean value indicating whether more than one instance of the indicated attribute can be specified for a single program element.</span></span></summary>
        <value><span data-ttu-id="f5cd9-122">如果允许指定多个实例，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-122"><see langword="true" /> if more than one instance is allowed to be specified; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f5cd9-123">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-123">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5cd9-124">可为程序元素多次指定的特性称为多用途特性。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-124">An attribute that can be specified more than once for a program element is called a multi-use attribute.</span></span> <span data-ttu-id="f5cd9-125">只能指定一次的属性称为单用途属性。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-125">An attribute that can be specified only once is called a single-use attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Inherited">
      <MemberSignature Language="C#" Value="public bool Inherited { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Inherited" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.Inherited" />
      <MemberSignature Language="VB.NET" Value="Public Property Inherited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Inherited { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Inherited : bool with get, set" Usage="System.AttributeUsageAttribute.Inherited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f5cd9-126">获取或设置 <see cref="T:System.Boolean" /> 值，该值确定指示的属性是否由派生类和重写成员继承。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-126">Gets or sets a <see cref="T:System.Boolean" /> value that determines whether the indicated attribute is inherited by derived classes and overriding members.</span></span></summary>
        <value><span data-ttu-id="f5cd9-127">如果该属性可以由派生类和重写成员继承，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-127"><see langword="true" /> if the attribute can be inherited by derived classes and overriding members; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f5cd9-128">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-128">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5cd9-129"><xref:System.AttributeUsageAttribute.Inherited%2A>属性确定：</span><span class="sxs-lookup"><span data-stu-id="f5cd9-129">The <xref:System.AttributeUsageAttribute.Inherited%2A> property determines:</span></span>  
  
-   <span data-ttu-id="f5cd9-130">从用特性标记的基类派生的类是否 <xref:System.AttributeUsageAttribute> 继承该特性。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-130">Whether classes derived from a base class tagged with the attribute to which the <xref:System.AttributeUsageAttribute> attribute is applied inherit that attribute.</span></span>  
  
-   <span data-ttu-id="f5cd9-131">派生类的方法（这些方法重写用特性标记的基类方法）是否 <xref:System.AttributeUsageAttribute> 继承了该特性。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-131">Whether methods of derived classes that override a base class method tagged with the attribute to which the <xref:System.AttributeUsageAttribute> attribute is applied inherit that attribute.</span></span>  <span data-ttu-id="f5cd9-132"> (如果某个类继承基类成员，则它还将继承应用于该成员的任何属性。 ) </span><span class="sxs-lookup"><span data-stu-id="f5cd9-132">(If a class inherits a base class member, it also inherits any attributes applied to that member.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5cd9-133">下面的示例说明了属性值为的特性应用于的特性与 <xref:System.AttributeUsageAttribute> <xref:System.AttributeUsageAttribute.Inherited%2A> 应用了 `true` 其  <xref:System.AttributeUsageAttribute> <xref:System.AttributeUsageAttribute.Inherited%2A> 属性值的 `false` 特性之间的差异。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-133">The following example illustrates the difference between an attribute to which an <xref:System.AttributeUsageAttribute> attribute with an <xref:System.AttributeUsageAttribute.Inherited%2A> property value of `true` is applied and one to which  <xref:System.AttributeUsageAttribute> attribute with an <xref:System.AttributeUsageAttribute.Inherited%2A> property value of `false` is applied.</span></span> <span data-ttu-id="f5cd9-134">此示例定义了两个属性： `InheritedAttribute` 和 `NotInheritedAttribute` 。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-134">The example defines two attributes, `InheritedAttribute` and `NotInheritedAttribute`.</span></span> <span data-ttu-id="f5cd9-135">这两个特性可应用于类和方法。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-135">Both attributes can apply to classes and methods.</span></span> <span data-ttu-id="f5cd9-136">由于应用于的 <xref:System.AttributeUsageAttribute.Inherited%2A> 特性的属性 <xref:System.AttributeUsageAttribute> `InheritedAttribute` 为，因此 `true` 它由派生类和重写基类方法的派生类的成员继承。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-136">Because the <xref:System.AttributeUsageAttribute.Inherited%2A> property of the <xref:System.AttributeUsageAttribute> attribute applied to `InheritedAttribute` is `true`, it is inherited by derived classes and the members of derived classes that override the base class method.</span></span>  <span data-ttu-id="f5cd9-137">另一方面，因为应用于的属性的 <xref:System.AttributeUsageAttribute.Inherited%2A> 属性 <xref:System.AttributeUsageAttribute> `NotInheritedAttribute` 为 `false` ，所以它不会由派生类和重写基类方法的派生类的成员继承。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-137">On the other hand, because the <xref:System.AttributeUsageAttribute.Inherited%2A> property of the <xref:System.AttributeUsageAttribute> attribute applied to `NotInheritedAttribute` is `false`, it is not inherited by derived classes and the members of derived classes that override the base class method.</span></span>  
  
 [!code-csharp[System.AttributeUsageAttribute.Inherited#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/cs/Inherited1.cs#1)]
 [!code-vb[System.AttributeUsageAttribute.Inherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/vb/Inherited1.vb#1)]  
  
 <span data-ttu-id="f5cd9-138">然后，该示例定义两个基类。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-138">The example then defines two  base classes.</span></span> <span data-ttu-id="f5cd9-139">第一 `BaseA` 种是，有一个方法 `MethodA` 。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-139">The first, `BaseA`, has a single method, `MethodA`.</span></span>  <span data-ttu-id="f5cd9-140">第二个 `BaseB` 是，有一个方法 `MethodB` 。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-140">The second, `BaseB`, has a single method, `MethodB`.</span></span> <span data-ttu-id="f5cd9-141">`BaseA` 和 `MethodA` 是用特性标记的 `InheritedAttribute` ，并且 `BaseB` 和 `MethodB` 是用特性标记的 `NotInheritedAttribute` 。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-141">`BaseA` and `MethodA` are tagged with the `InheritedAttribute` attribute, and `BaseB` and `MethodB` are tagged with the `NotInheritedAttribute` attribute.</span></span> <span data-ttu-id="f5cd9-142">`DerivedA` 继承自 `BaseA` 并重写其 `MethodA` 方法。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-142">`DerivedA` inherits from `BaseA` and overrides its `MethodA` method.</span></span> <span data-ttu-id="f5cd9-143">`DerivedB` 继承自 `BaseB` 并重写其 `MethodB` 方法。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-143">`DerivedB` inherits from `BaseB` and overrides its `MethodB` method.</span></span>  
  
 [!code-csharp[System.AttributeUsageAttribute.Inherited#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/cs/Inherited1.cs#2)]
 [!code-vb[System.AttributeUsageAttribute.Inherited#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/vb/Inherited1.vb#2)]  
  
 <span data-ttu-id="f5cd9-144">如示例的输出所示， `DerivedA` 和 `DerivedA.MethodA` 继承 `InheritedAttribute` 属性，但 `DerivedB` 并 `DerivedB.MethodB` 不继承 `NotInheritedAttribute` 属性。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-144">As the output from the example shows, `DerivedA` and `DerivedA.MethodA` inherit the `InheritedAttribute` attribute, but `DerivedB` and `DerivedB.MethodB` do not inherit the `NotInheritedAttribute` attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="ValidOn">
      <MemberSignature Language="C#" Value="public AttributeTargets ValidOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AttributeTargets ValidOn" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.ValidOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidOn As AttributeTargets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AttributeTargets ValidOn { AttributeTargets get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidOn : AttributeTargets" Usage="System.AttributeUsageAttribute.ValidOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AttributeTargets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f5cd9-145">获取一组值，这组值标识指示的属性可应用到的程序元素。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-145">Gets a set of values identifying which program elements that the indicated attribute can be applied to.</span></span></summary>
        <value><span data-ttu-id="f5cd9-146">一个或多个 <see cref="T:System.AttributeTargets" /> 值。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-146">One or several <see cref="T:System.AttributeTargets" /> values.</span></span> <span data-ttu-id="f5cd9-147">默认值为 <see langword="All" />。</span><span class="sxs-lookup"><span data-stu-id="f5cd9-147">The default is <see langword="All" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.AttributeTargets" />
      </Docs>
    </Member>
  </Members>
</Type>
