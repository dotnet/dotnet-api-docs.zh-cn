<Type Name="UInt32" FullName="System.UInt32">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aa380d02b13743b428806732ca73bbd2948970d3" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83956786" /></Metadata><TypeSignature Language="C#" Value="public struct UInt32 : IComparable, IComparable&lt;uint&gt;, IConvertible, IEquatable&lt;uint&gt;, IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit unsigned int32 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;unsigned int32&gt;, class System.IConvertible, class System.IEquatable`1&lt;unsigned int32&gt;, class System.IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.UInt32" />
  <TypeSignature Language="VB.NET" Value="Public Structure UInt32&#xA;Implements IComparable, IComparable(Of UInteger), IConvertible, IEquatable(Of UInteger), IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public value class UInt32 : IComparable, IComparable&lt;System::UInt32&gt;, IConvertible, IEquatable&lt;System::UInt32&gt;, IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type uint32 = struct&#xA;    interface IConvertible&#xA;    interface IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C#" Value="public struct UInt32 : IComparable, IConvertible, IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit unsigned int32 extends System.ValueType implements class System.IComparable, class System.IConvertible, class System.IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public Structure UInt32&#xA;Implements IComparable, IConvertible, IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public value class UInt32 : IComparable, IConvertible, IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type uint32 = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit unsigned int32 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;unsigned int32&gt;, class System.IConvertible, class System.IEquatable`1&lt;unsigned int32&gt;, class System.IFormattable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public struct UInt32 : IComparable, IComparable&lt;uint&gt;, IEquatable&lt;uint&gt;, IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit unsigned int32 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;unsigned int32&gt;, class System.IEquatable`1&lt;unsigned int32&gt;, class System.IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="VB.NET" Value="Public Structure UInt32&#xA;Implements IComparable, IComparable(Of UInteger), IEquatable(Of UInteger), IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="C++ CLI" Value="public value class UInt32 : IComparable, IComparable&lt;System::UInt32&gt;, IEquatable&lt;System::UInt32&gt;, IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="F#" Value="type uint32 = struct&#xA;    interface IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.UInt32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.UInt32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="46202-101">表示 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="46202-101">Represents a 32-bit unsigned integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-102">`UInt32` 值类型表示其值范围从0到4294967295的无符号整数。</span><span class="sxs-lookup"><span data-stu-id="46202-102">The `UInt32` value type represents unsigned integers with values ranging from 0 to 4,294,967,295.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="46202-103"><xref:System.UInt32> 类型不符合 CLS。</span><span class="sxs-lookup"><span data-stu-id="46202-103">The <xref:System.UInt32> type is not CLS-compliant.</span></span> <span data-ttu-id="46202-104">符合 CLS 的替代类型为 <xref:System.Int64>。</span><span class="sxs-lookup"><span data-stu-id="46202-104">The CLS-compliant alternative type is <xref:System.Int64>.</span></span> <span data-ttu-id="46202-105">可以改为使用 <xref:System.Int32> 来替换介于零到 <xref:System.Int32.MaxValue>之间的 <xref:System.UInt32> 值。</span><span class="sxs-lookup"><span data-stu-id="46202-105"><xref:System.Int32> can be used instead to replace a <xref:System.UInt32> value that ranges from zero to <xref:System.Int32.MaxValue>.</span></span> <span data-ttu-id="46202-106">有关 CLS 遵从性的详细信息，请参阅[语言独立性和与语言无关的组件](/dotnet/standard/language-independence-and-language-independent-components)。</span><span class="sxs-lookup"><span data-stu-id="46202-106">For more information about CLS compliance, see [Language Independence and Language-Independent Components](/dotnet/standard/language-independence-and-language-independent-components).</span></span>  
  
 <span data-ttu-id="46202-107">`UInt32` 提供了一些方法，用于比较此类型的实例，将实例的值转换为其 <xref:System.String> 表示形式，并将数字的 <xref:System.String> 表示形式转换为此类型的实例。</span><span class="sxs-lookup"><span data-stu-id="46202-107">`UInt32` provides methods to compare instances of this type, convert the value of an instance to its <xref:System.String> representation, and convert the <xref:System.String> representation of a number to an instance of this type.</span></span>  
  
 <span data-ttu-id="46202-108">有关格式规范代码如何控制值类型的 <xref:System.String> 表示形式的信息，请参阅[格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="46202-108">For information about how format specification codes control the <xref:System.String> representation of value types, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="46202-109">此类型的所有成员都是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="46202-109">All members of this type are thread safe.</span></span> <span data-ttu-id="46202-110">看似修改实例状态的成员实际上返回用新值初始化的新实例。</span><span class="sxs-lookup"><span data-stu-id="46202-110">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="46202-111">与任何其他类型一样，读取和写入包含此类型的实例的共享变量时，必须通过锁保护以保证线程安全。</span><span class="sxs-lookup"><span data-stu-id="46202-111">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.Int32" />
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-cs/"><span data-ttu-id="46202-112">示例： .NET Core WinForms 格式设置实用工具C#（）</span><span class="sxs-lookup"><span data-stu-id="46202-112">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-vb/"><span data-ttu-id="46202-113">示例： .NET Core WinForms 格式设置实用工具（Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="46202-113">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="46202-114">将此实例与指定的对象或 <see cref="T:System.UInt32" /> 进行比较，并返回二者相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="46202-114">Compares this instance to a specified object or <see cref="T:System.UInt32" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="uint32.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="46202-115">要比较的对象，或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="46202-115">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="46202-116">将此实例与指定对象进行比较并返回一个对二者的相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="46202-116">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="46202-117">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="46202-117">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="46202-118">返回值</span><span class="sxs-lookup"><span data-stu-id="46202-118">Return Value</span></span> 
 </term><description> <span data-ttu-id="46202-119">说明</span><span class="sxs-lookup"><span data-stu-id="46202-119">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="46202-120">小于零</span><span class="sxs-lookup"><span data-stu-id="46202-120">Less than zero</span></span> 
 </term><description> <span data-ttu-id="46202-121">此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="46202-121">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="46202-122">零</span><span class="sxs-lookup"><span data-stu-id="46202-122">Zero</span></span> 
 </term><description> <span data-ttu-id="46202-123">此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="46202-123">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="46202-124">大于零</span><span class="sxs-lookup"><span data-stu-id="46202-124">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="46202-125">此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="46202-125">This instance is greater than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="46202-126">-或-</span><span class="sxs-lookup"><span data-stu-id="46202-126">-or-</span></span> 
 <span data-ttu-id="46202-127"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="46202-127"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-128">无论其值如何，<xref:System.UInt32>的任何实例都视为大于 `null`。</span><span class="sxs-lookup"><span data-stu-id="46202-128">Any instance of <xref:System.UInt32>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="46202-129">`value` 参数必须 `null` 或 <xref:System.UInt32>的实例;否则，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="46202-129">The `value` parameter must be `null` or an instance of <xref:System.UInt32>; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46202-130">下面的代码示例演示 <xref:System.UInt32.CompareTo%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-130">The following code example demonstrates the <xref:System.UInt32.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[UInt32 Example#3](~/samples/snippets/cpp/VS_Snippets_CLR/UInt32 Example/CPP/source.cpp#3)]
 [!code-csharp[UInt32 Example#3](~/samples/snippets/csharp/VS_Snippets_CLR/UInt32 Example/CS/source.cs#3)]
 [!code-vb[UInt32 Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt32 Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46202-131"><paramref name="value" /> 不是 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="46202-131"><paramref name="value" /> is not a <see cref="T:System.UInt32" />.</span></span></exception>
        <altmember cref="M:System.UInt32.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.CompareTo(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : uint32 -&gt; int&#xA;override this.CompareTo : uint32 -&gt; int" Usage="uint32.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="46202-132">要比较的无符号整数。</span><span class="sxs-lookup"><span data-stu-id="46202-132">An unsigned integer to compare.</span></span></param>
        <summary><span data-ttu-id="46202-133">将此实例与指定的 32 位无符号整数进行比较并返回对其相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="46202-133">Compares this instance to a specified 32-bit unsigned integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="46202-134">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="46202-134">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="46202-135">返回值</span><span class="sxs-lookup"><span data-stu-id="46202-135">Return value</span></span> 
 </term><description> <span data-ttu-id="46202-136">说明</span><span class="sxs-lookup"><span data-stu-id="46202-136">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="46202-137">小于零</span><span class="sxs-lookup"><span data-stu-id="46202-137">Less than zero</span></span> 
 </term><description> <span data-ttu-id="46202-138">此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="46202-138">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="46202-139">零</span><span class="sxs-lookup"><span data-stu-id="46202-139">Zero</span></span> 
 </term><description> <span data-ttu-id="46202-140">此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="46202-140">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="46202-141">大于零</span><span class="sxs-lookup"><span data-stu-id="46202-141">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="46202-142">此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="46202-142">This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-143">此方法实现 <xref:System.IComparable%601?displayProperty=nameWithType> 接口，并比 <xref:System.UInt32.CompareTo%2A?displayProperty=nameWithType> 方法稍微好些，因为它不必将 `value` 参数转换为对象。</span><span class="sxs-lookup"><span data-stu-id="46202-143">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.UInt32.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="46202-144">根据您的编程语言，可能会编写一个 <xref:System.UInt32.CompareTo%2A> 方法，其中参数类型的位数（比实例类型小）。</span><span class="sxs-lookup"><span data-stu-id="46202-144">Depending on your programming language, it might be possible to code a <xref:System.UInt32.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="46202-145">这是可能的，因为某些编程语言会执行将参数表示为类型的隐式扩大转换，该类型的位数与实例的位数一样多。</span><span class="sxs-lookup"><span data-stu-id="46202-145">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="46202-146">例如，假设实例类型为 <xref:System.Int32> 并且参数类型为 <xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="46202-146">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="46202-147">Microsoft C#编译器生成说明，以将参数的值表示为 <xref:System.Int32> 对象，然后生成 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> 方法来比较 <xref:System.Int32> 实例的值和 <xref:System.Int32> 参数表示形式。</span><span class="sxs-lookup"><span data-stu-id="46202-147">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="46202-148">请查阅编程语言的文档，以确定其编译器是否对数值类型执行隐式扩大转换。</span><span class="sxs-lookup"><span data-stu-id="46202-148">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46202-149">下面的代码示例演示了多个值和引用类型的 <xref:System.UInt32.CompareTo%2A> 方法的泛型和非泛型版本。</span><span class="sxs-lookup"><span data-stu-id="46202-149">The following code example demonstrates generic and nongeneric versions of the <xref:System.UInt32.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt32.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="46202-150">返回一个值，该值指示此实例是否与指定的对象或 <see cref="T:System.UInt32" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="46202-150">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.UInt32" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uint32.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="46202-151">一个要与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="46202-151">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="46202-152">返回一个值，该值指示此实例是否等于指定对象。</span><span class="sxs-lookup"><span data-stu-id="46202-152">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="46202-153">如果 <see langword="true" /> 是 <paramref name="obj" /> 的实例并且等于此实例的值，则为 <see cref="T:System.UInt32" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46202-153"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.UInt32" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="46202-154">下面的代码示例演示 <xref:System.UInt32.Equals%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-154">The following code example demonstrates the <xref:System.UInt32.Equals%2A> method.</span></span>  
  
 [!code-cpp[UInt32_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/UInt32_Equals/CPP/uint32_equals.cpp#1)]
 [!code-csharp[UInt32_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/UInt32_Equals/CS/uint32_equals.cs#1)]
 [!code-vb[UInt32_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt32_Equals/VB/uint32_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="46202-155">编译器重载决策可能会考虑两个 <see cref="M:System.UInt32.Equals(System.UInt32)" /> 方法重载的行为中的明显差异。</span><span class="sxs-lookup"><span data-stu-id="46202-155">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt32.Equals(System.UInt32)" /> method overloads.</span></span> <span data-ttu-id="46202-156">如果定义了 <paramref name="obj" /> 参数与 <see cref="T:System.UInt32" /> 之间的隐式转换，并且参数未类型化为 <see cref="T:System.Object" />，则编译器会执行隐式转换并调用 <see cref="M:System.UInt32.Equals(System.UInt32)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-156">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt32" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt32.Equals(System.UInt32)" /> method.</span></span> <span data-ttu-id="46202-157">否则，它们调用 <see cref="M:System.UInt32.Equals(System.Object)" /> 方法，如果其 <paramref name="obj" /> 参数不是 <see cref="T:System.UInt32" /> 值，则它始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46202-157">Otherwise, they call the <see cref="M:System.UInt32.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt32" /> value.</span></span> <span data-ttu-id="46202-158">下面的示例演示两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="46202-158">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="46202-159">在 <see cref="T:System.Byte" /> 和 <see cref="T:System.UInt16" /> 值的情况下，第一次比较将返回 <see langword="true" />，因为编译器会自动执行扩大转换并调用 <see cref="M:System.UInt32.Equals(System.UInt32)" /> 方法，而第二个比较返回 <see langword="false" />，因为编译器会调用 <see cref="M:System.UInt32.Equals(System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-159">In the case of <see cref="T:System.Byte" /> and <see cref="T:System.UInt16" /> values,  the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt32.Equals(System.UInt32)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt32.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="46202-160">[！ code-csharp[system.web. Equals # 1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.equals/cs/equalsoverl.cs#1)][！ code-vb[system.web. Equals # 1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.equals/vb/equalsoverl.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="46202-160">[!code-csharp[System.UInt32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.equals/cs/equalsoverl.cs#1)] [!code-vb[System.UInt32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.equals/vb/equalsoverl.vb#1)]</span></span></para></block>
        <altmember cref="M:System.UInt32.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (uint obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(unsigned int32 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.Equals(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::UInt32 obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : uint32 -&gt; bool" Usage="uint32.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.UInt32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="46202-161">要与此实例进行比较的值。</span><span class="sxs-lookup"><span data-stu-id="46202-161">A value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="46202-162">返回一个值，该值指示此实例是否与指定的 <see cref="T:System.UInt32" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="46202-162">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.UInt32" />.</span></span></summary>
        <returns><span data-ttu-id="46202-163">如果 <see langword="true" /> 的值与此实例相同，则为 <paramref name="obj" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46202-163"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-164">此方法实现 <xref:System.IEquatable%601?displayProperty=nameWithType> 接口，并比 <xref:System.UInt32.Equals%28System.Object%29> 方法稍微好一些，因为它不必将 `obj` 参数转换为对象。</span><span class="sxs-lookup"><span data-stu-id="46202-164">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than the <xref:System.UInt32.Equals%28System.Object%29> method because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="46202-165">编译器重载决策可能会考虑两个 <see cref="M:System.UInt32.Equals(System.UInt32)" /> 方法重载的行为中的明显差异。</span><span class="sxs-lookup"><span data-stu-id="46202-165">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt32.Equals(System.UInt32)" /> method overloads.</span></span> <span data-ttu-id="46202-166">如果定义了 <paramref name="obj" /> 参数与 <see cref="T:System.UInt32" /> 之间的隐式转换，并且参数未类型化为 <see cref="T:System.Object" />，则编译器会执行隐式转换并调用 <see cref="M:System.UInt32.Equals(System.UInt32)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-166">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt32" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt32.Equals(System.UInt32)" /> method.</span></span> <span data-ttu-id="46202-167">否则，它们调用 <see cref="M:System.UInt32.Equals(System.Object)" /> 方法，如果其 <paramref name="obj" /> 参数不是 <see cref="T:System.UInt32" /> 值，则它始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46202-167">Otherwise, they call the <see cref="M:System.UInt32.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt32" /> value.</span></span> <span data-ttu-id="46202-168">下面的示例演示两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="46202-168">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="46202-169">在 <see cref="T:System.Byte" /> 和 <see cref="T:System.UInt16" /> 值的情况下，第一次比较将返回 <see langword="true" />，因为编译器会自动执行扩大转换并调用 <see cref="M:System.UInt32.Equals(System.UInt32)" /> 方法，而第二个比较返回 <see langword="false" />，因为编译器会调用 <see cref="M:System.UInt32.Equals(System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-169">In the case of <see cref="T:System.Byte" /> and <see cref="T:System.UInt16" /> values,  the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt32.Equals(System.UInt32)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt32.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="46202-170">[！ code-csharp[system.web. Equals # 1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.equals/cs/equalsoverl.cs#1)][！ code-vb[system.web. Equals # 1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.equals/vb/equalsoverl.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="46202-170">[!code-csharp[System.UInt32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.equals/cs/equalsoverl.cs#1)] [!code-vb[System.UInt32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.equals/vb/equalsoverl.vb#1)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uint32.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="46202-171">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="46202-171">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="46202-172">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="46202-172">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="uint32.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="46202-173">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="46202-173">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.UInt32" />.</span></span></summary>
        <returns><span data-ttu-id="46202-174">枚举常数 <see cref="F:System.TypeCode.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="46202-174">The enumerated constant, <see cref="F:System.TypeCode.UInt32" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const uint MaxValue = 4294967295;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int32 MaxValue = unsigned int32(4294967295)" />
      <MemberSignature Language="DocId" Value="F:System.UInt32.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As UInteger  = 4294967295" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt32 MaxValue = 4294967295;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : uint32" Usage="System.uint32.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <MemberValue>4294967295</MemberValue>
      <Docs>
        <summary><span data-ttu-id="46202-175">表示 <see cref="T:System.UInt32" /> 的最大可能值。</span><span class="sxs-lookup"><span data-stu-id="46202-175">Represents the largest possible value of <see cref="T:System.UInt32" />.</span></span> <span data-ttu-id="46202-176">此字段是常量。</span><span class="sxs-lookup"><span data-stu-id="46202-176">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-177">此常量的值为 4294967295;即十六进制0xFFFFFFFF。</span><span class="sxs-lookup"><span data-stu-id="46202-177">The value of this constant is 4,294,967,295; that is, hexadecimal 0xFFFFFFFF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46202-178">下面的示例使用 <xref:System.UInt32.MinValue> 和 <xref:System.UInt32.MaxValue> 字段在执行类型转换之前验证 <xref:System.Int64> 值是否在 <xref:System.UInt32> 类型的范围内。</span><span class="sxs-lookup"><span data-stu-id="46202-178">The following example uses the <xref:System.UInt32.MinValue> and <xref:System.UInt32.MaxValue> fields to verify that an <xref:System.Int64> value is within the range of the <xref:System.UInt32> type before it performs a type conversion.</span></span> <span data-ttu-id="46202-179">此验证可防止在运行时 <xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="46202-179">This verification prevents an <xref:System.OverflowException> at run time.</span></span>  
  
 [!code-csharp[System.UInt32.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt32.MaxValue/cs/MaxValue1.cs#1)]
 [!code-vb[System.UInt32.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt32.MaxValue/vb/MaxValue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt32.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const uint MinValue = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int32 MinValue = unsigned int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.UInt32.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As UInteger  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt32 MinValue = 0;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : uint32" Usage="System.uint32.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="46202-180">表示 <see cref="T:System.UInt32" /> 的最小可能值。</span><span class="sxs-lookup"><span data-stu-id="46202-180">Represents the smallest possible value of <see cref="T:System.UInt32" />.</span></span> <span data-ttu-id="46202-181">此字段是常量。</span><span class="sxs-lookup"><span data-stu-id="46202-181">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-182">此常量的值为0。</span><span class="sxs-lookup"><span data-stu-id="46202-182">The value of this constant is 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46202-183">下面的示例演示如何使用 <xref:System.UInt32.MinValue> 字段显示 <xref:System.UInt32> 变量的最小可能值。</span><span class="sxs-lookup"><span data-stu-id="46202-183">The following example demonstrates how to use the <xref:System.UInt32.MinValue> field to display the smallest possible value of a <xref:System.UInt32> variable.</span></span>  
  
 [!code-cpp[UInt32 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR/UInt32 Example/CPP/source.cpp#2)]
 [!code-csharp[UInt32 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR/UInt32 Example/CS/source.cs#2)]
 [!code-vb[UInt32 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt32 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt32.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="46202-184">将数字的字符串表示形式转换为它的等效 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="46202-184">Converts the string representation of a number to its 32-bit unsigned integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.UInt32.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static uint Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; uint32" Usage="System.uint32.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="46202-185">一个字符串，表示要转换的数字。</span><span class="sxs-lookup"><span data-stu-id="46202-185">A string representing the number to convert.</span></span></param>
        <summary><span data-ttu-id="46202-186">将数字的字符串表示形式转换为它的等效 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="46202-186">Converts the string representation of a number to its 32-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="46202-187">与 <paramref name="s" /> 中包含的数字等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="46202-187">A 32-bit unsigned integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-188">`s` 参数应为以下形式的数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="46202-188">The `s` parameter should be the string representation of a number in the following form.</span></span>  
  
 <span data-ttu-id="46202-189">[*ws*][*sign*]*数字*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="46202-189">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="46202-190">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="46202-190">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="46202-191">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="46202-191">The following table describes each element.</span></span>  
  
|<span data-ttu-id="46202-192">元素</span><span class="sxs-lookup"><span data-stu-id="46202-192">Element</span></span>|<span data-ttu-id="46202-193">说明</span><span class="sxs-lookup"><span data-stu-id="46202-193">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="46202-194">*ws*</span><span class="sxs-lookup"><span data-stu-id="46202-194">*ws*</span></span>|<span data-ttu-id="46202-195">可选空白。</span><span class="sxs-lookup"><span data-stu-id="46202-195">Optional white space.</span></span>|  
|<span data-ttu-id="46202-196">*sign*</span><span class="sxs-lookup"><span data-stu-id="46202-196">*sign*</span></span>|<span data-ttu-id="46202-197">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="46202-197">An optional sign.</span></span> <span data-ttu-id="46202-198">有效的符号字符由当前区域性的 <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> 和 <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> 属性确定。</span><span class="sxs-lookup"><span data-stu-id="46202-198">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="46202-199">但负号符号只能与零一起使用;否则，该方法将引发 <xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="46202-199">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="46202-200">*digits*</span><span class="sxs-lookup"><span data-stu-id="46202-200">*digits*</span></span>|<span data-ttu-id="46202-201">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="46202-201">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="46202-202">任何前导零都将被忽略。</span><span class="sxs-lookup"><span data-stu-id="46202-202">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="46202-203">使用 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 样式来解释由 `s` 参数指定的字符串。</span><span class="sxs-lookup"><span data-stu-id="46202-203">The string specified by the `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="46202-204">它不能包含任何组分隔符或小数分隔符，也不能包含小数部分。</span><span class="sxs-lookup"><span data-stu-id="46202-204">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="46202-205">`s` 参数是使用为当前系统区域性初始化 <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> 对象中的格式设置信息分析的。</span><span class="sxs-lookup"><span data-stu-id="46202-205">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> object that is initialized for the current system culture.</span></span> <span data-ttu-id="46202-206">有关详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="46202-206">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46202-207">若要通过使用特定区域性的格式设置信息分析字符串，请使用 <xref:System.UInt32.Parse%28System.String%2CSystem.IFormatProvider%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-207">To parse a string by using the formatting information of a specific culture, use the <xref:System.UInt32.Parse%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46202-208">下面的示例使用 <xref:System.UInt32.Parse%28System.String%29> 方法分析字符串值的数组。</span><span class="sxs-lookup"><span data-stu-id="46202-208">The following example uses the <xref:System.UInt32.Parse%28System.String%29> method to parse an array of string values.</span></span>  
  
 [!code-csharp[System.UInt32.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.parse/cs/parse1.cs#1)]
 [!code-vb[System.UInt32.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.parse/vb/parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int64.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="46202-209">
          <paramref name="s" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="46202-209">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="46202-210">参数 <paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="46202-210">The <paramref name="s" /> parameter is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="46202-211">参数 <paramref name="s" /> 表示一个小于 <see cref="F:System.UInt32.MinValue" /> 或大于 <see cref="F:System.UInt32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="46202-211">The <paramref name="s" /> parameter represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.UInt32.ToString" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="46202-212">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="46202-212">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static uint Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; uint32" Usage="System.uint32.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="46202-213">一个字符串，表示要转换的数字。</span><span class="sxs-lookup"><span data-stu-id="46202-213">A string representing the number to convert.</span></span> <span data-ttu-id="46202-214">该字符串使用由 <paramref name="style" /> 参数指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="46202-214">The string is interpreted by using the style specified by the <paramref name="style" /> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="46202-215">枚举值的按位组合，这些枚举值指定 <paramref name="s" /> 所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="46202-215">A bitwise combination of the enumeration values that specify the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="46202-216">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="46202-216">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="46202-217">将指定样式的数字的字符串表示形式转换为它的等效 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="46202-217">Converts the string representation of a number in a specified style to its 32-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="46202-218">与 <paramref name="s" /> 中指定的数字等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="46202-218">A 32-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-219">`style` 参数定义在 `s` 参数中允许的样式元素（如空格、正号或负号符号、组分隔符符号或小数点符号），以便分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="46202-219">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="46202-220">`style` 必须是 <xref:System.Globalization.NumberStyles> 枚举中的位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="46202-220">`style` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="46202-221">当 `s` 包含十六进制值的字符串表示形式时，`style` 参数会使此方法重载非常有用，当 `s` 表示的数值系统（十进制或十六进制）仅在运行时已知，或者您想要禁止在 `s`中使用空格或符号符号时。</span><span class="sxs-lookup"><span data-stu-id="46202-221">The `style` parameter makes this method overload useful when `s` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `s` is known only at run time, or when you want to disallow white space or a sign symbol in `s`.</span></span>  
  
 <span data-ttu-id="46202-222">根据 `style`的值，`s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="46202-222">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="46202-223">[*ws*][*$*][*sign*][*数字*，]*位数*[。*fractional_digits*] [E [*sign*]*exponential_digits*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="46202-223">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="46202-224">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="46202-224">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="46202-225">如果 `style` 包括 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>，则 `s` 参数可能包含以下元素：</span><span class="sxs-lookup"><span data-stu-id="46202-225">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="46202-226">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="46202-226">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="46202-227">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="46202-227">The following table describes each element.</span></span>  
  
|<span data-ttu-id="46202-228">元素</span><span class="sxs-lookup"><span data-stu-id="46202-228">Element</span></span>|<span data-ttu-id="46202-229">说明</span><span class="sxs-lookup"><span data-stu-id="46202-229">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="46202-230">*ws*</span><span class="sxs-lookup"><span data-stu-id="46202-230">*ws*</span></span>|<span data-ttu-id="46202-231">可选空白。</span><span class="sxs-lookup"><span data-stu-id="46202-231">Optional white space.</span></span> <span data-ttu-id="46202-232">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 标志，则空格可以出现在 `s` 的开头，如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 标志，则它可以出现在 `s` 的末尾。</span><span class="sxs-lookup"><span data-stu-id="46202-232">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="46202-233">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="46202-233">A culture-specific currency symbol.</span></span> <span data-ttu-id="46202-234">其在字符串中的位置由当前区域性的 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> 和 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> 属性定义。</span><span class="sxs-lookup"><span data-stu-id="46202-234">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="46202-235">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 标志，当前区域性的货币符号可以出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="46202-235">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="46202-236">*sign*</span><span class="sxs-lookup"><span data-stu-id="46202-236">*sign*</span></span>|<span data-ttu-id="46202-237">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="46202-237">An optional sign.</span></span> <span data-ttu-id="46202-238">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 标志，则符号会出现在 `s` 的开头，如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 标志，则它可以出现在 `s` 的末尾。</span><span class="sxs-lookup"><span data-stu-id="46202-238">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="46202-239">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 标志，则可以在 `s` 中使用括号来表示负值。</span><span class="sxs-lookup"><span data-stu-id="46202-239">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="46202-240">但负号符号只能与零一起使用;否则，该方法将引发 <xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="46202-240">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="46202-241">*digits*</span><span class="sxs-lookup"><span data-stu-id="46202-241">*digits*</span></span><br /><br /> <span data-ttu-id="46202-242">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="46202-242">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="46202-243">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="46202-243">*exponential_digits*</span></span>|<span data-ttu-id="46202-244">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="46202-244">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="46202-245">对于*fractional_digits*，只有数字0有效。</span><span class="sxs-lookup"><span data-stu-id="46202-245">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="46202-246">*、*</span><span class="sxs-lookup"><span data-stu-id="46202-246">*,*</span></span>|<span data-ttu-id="46202-247">区域性特定的组分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="46202-247">A culture-specific group separator symbol.</span></span> <span data-ttu-id="46202-248">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 标志，当前区域性的组分隔符可能出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="46202-248">The current culture's group separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="46202-249">*。*</span><span class="sxs-lookup"><span data-stu-id="46202-249">*.*</span></span>|<span data-ttu-id="46202-250">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="46202-250">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="46202-251">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 标志，当前区域性的小数点符号会出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="46202-251">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="46202-252">只有数字0才能作为小数位出现，以便分析操作成功;如果*fractional_digits*包含任何其他数字，则会引发 <xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="46202-252">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="46202-253">E</span><span class="sxs-lookup"><span data-stu-id="46202-253">E</span></span>|<span data-ttu-id="46202-254">"E" 或 "E" 字符，指示值以指数（科学型）表示法表示。</span><span class="sxs-lookup"><span data-stu-id="46202-254">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="46202-255">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 标志，则 `s` 参数可以表示指数表示法中的数字。</span><span class="sxs-lookup"><span data-stu-id="46202-255">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="46202-256">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="46202-256">*hexdigits*</span></span>|<span data-ttu-id="46202-257">从0到 f 的十六进制数字序列，或者从0到 F。</span><span class="sxs-lookup"><span data-stu-id="46202-257">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="46202-258">无论 `style` 参数的值是什么，分析操作都将忽略 `s` 中任何终止的 NUL （U + 0000）字符。</span><span class="sxs-lookup"><span data-stu-id="46202-258">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="46202-259">只有数字（对应于 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 样式）的字符串在 <xref:System.UInt32> 类型的范围内时才会成功进行分析。</span><span class="sxs-lookup"><span data-stu-id="46202-259">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully  if it is in the range of the <xref:System.UInt32> type.</span></span> <span data-ttu-id="46202-260">大多数其余 <xref:System.Globalization.NumberStyles> 成员控制可能存在但不需要存在于输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="46202-260">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="46202-261">下表指示单个 <xref:System.Globalization.NumberStyles> 成员如何影响可能出现在 `s`中的元素。</span><span class="sxs-lookup"><span data-stu-id="46202-261">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="46202-262">`NumberStyles` 值</span><span class="sxs-lookup"><span data-stu-id="46202-262">`NumberStyles` value</span></span>|<span data-ttu-id="46202-263">`s` 中允许的元素以及数字</span><span class="sxs-lookup"><span data-stu-id="46202-263">Elements permitted in `s` in addition to digits</span></span>|  
|--------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="46202-264">仅限*数字*元素。</span><span class="sxs-lookup"><span data-stu-id="46202-264">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="46202-265">小数点（.）和*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="46202-265">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="46202-266">"E" 或 "E" 字符（指示指数表示法）以及*exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="46202-266">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="46202-267">`s`开头的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="46202-267">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="46202-268">`s`末尾的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="46202-268">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="46202-269">`s`开头的*sign*元素。</span><span class="sxs-lookup"><span data-stu-id="46202-269">The *sign* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="46202-270">`s`末尾的*sign*元素。</span><span class="sxs-lookup"><span data-stu-id="46202-270">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="46202-271">用括号括起数值的*符号*元素。</span><span class="sxs-lookup"><span data-stu-id="46202-271">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="46202-272">组分隔符（，）元素。</span><span class="sxs-lookup"><span data-stu-id="46202-272">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="46202-273">货币符号（$）。</span><span class="sxs-lookup"><span data-stu-id="46202-273">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="46202-274">所有元素。</span><span class="sxs-lookup"><span data-stu-id="46202-274">All elements.</span></span> <span data-ttu-id="46202-275">但是，`s` 不能表示十六进制数或以指数表示法表示的数字。</span><span class="sxs-lookup"><span data-stu-id="46202-275">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="46202-276">`s`开头或结尾处的*ws*元素，在 `s`开头处进行签名，并在小数点（*.*）符号处进行*签名*。</span><span class="sxs-lookup"><span data-stu-id="46202-276">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="46202-277">`s` 参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="46202-277">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="46202-278">`ws`、`sign`、组分隔符（*、*）和小数点（*.*）元素。</span><span class="sxs-lookup"><span data-stu-id="46202-278">The `ws`, `sign`, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="46202-279">所有元素。</span><span class="sxs-lookup"><span data-stu-id="46202-279">All elements.</span></span> <span data-ttu-id="46202-280">但 `s` 不能表示十六进制数。</span><span class="sxs-lookup"><span data-stu-id="46202-280">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="46202-281">不同于其他 <xref:System.Globalization.NumberStyles> 值，它们允许但不要求在 `s`中存在特定样式元素，<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 样式值表示 `s` 中的单个数字字符始终解释为十六进制字符。</span><span class="sxs-lookup"><span data-stu-id="46202-281">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for, but do not require, the presence of particular style elements in `s`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `s` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="46202-282">有效的十六进制字符为0-9、A-f 和 a-f。</span><span class="sxs-lookup"><span data-stu-id="46202-282">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="46202-283">不允许使用前缀，如 "0x"。</span><span class="sxs-lookup"><span data-stu-id="46202-283">A prefix, such as "0x", is not allowed.</span></span> <span data-ttu-id="46202-284">可以与 `style` 参数组合的其他标志仅 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 并 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="46202-284">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46202-285">（<xref:System.Globalization.NumberStyles> 枚举包含复合数字样式，<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含两个空白标志。）</span><span class="sxs-lookup"><span data-stu-id="46202-285">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
 <span data-ttu-id="46202-286">可以与 `style` 参数组合的其他标志仅 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 并 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="46202-286">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46202-287">（<xref:System.Globalization.NumberStyles> 枚举包含复合数字样式，<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含两个空白标志。）</span><span class="sxs-lookup"><span data-stu-id="46202-287">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="46202-288">如果 `s` 是十六进制数的字符串表示形式，则它的前面不能有将其视为十六进制数的任何修饰（如 `0x` 或 `&h`）。</span><span class="sxs-lookup"><span data-stu-id="46202-288">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="46202-289">这将导致转换失败。</span><span class="sxs-lookup"><span data-stu-id="46202-289">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="46202-290">`s` 参数是使用为当前系统区域性初始化 <xref:System.Globalization.NumberFormatInfo> 对象中的格式设置信息分析的。</span><span class="sxs-lookup"><span data-stu-id="46202-290">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="46202-291">若要指定其格式设置信息用于分析操作的区域性，请调用 <xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> 重载。</span><span class="sxs-lookup"><span data-stu-id="46202-291">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46202-292">下面的示例尝试使用许多 <xref:System.Globalization.NumberStyles> 值来分析字符串数组中的每个元素。</span><span class="sxs-lookup"><span data-stu-id="46202-292">The following example tries to parse each element in a string array by using a number of <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt32.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.parse/cs/parseex2.cs#2)]
 [!code-vb[System.UInt32.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.parse/vb/parseex2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int64.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="46202-293"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="46202-293"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46202-294"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="46202-294"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="46202-295">-或-</span><span class="sxs-lookup"><span data-stu-id="46202-295">-or-</span></span> 
 <span data-ttu-id="46202-296"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="46202-296"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="46202-297"><paramref name="s" /> 的格式不符合 <paramref name="style" />。</span><span class="sxs-lookup"><span data-stu-id="46202-297"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="46202-298"><paramref name="s" /> 表示一个小于 <see cref="F:System.UInt32.MinValue" /> 或大于 <see cref="F:System.UInt32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="46202-298"><paramref name="s" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span>  
  
<span data-ttu-id="46202-299">-或-</span><span class="sxs-lookup"><span data-stu-id="46202-299">-or-</span></span> 
 <span data-ttu-id="46202-300"><paramref name="s" /> 包含非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="46202-300"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.UInt32.ToString" />
        <altmember cref="Overload:System.UInt32.TryParse" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="46202-301">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="46202-301">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static uint Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; uint32" Usage="System.uint32.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="46202-302">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="46202-302">A string that represents the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="46202-303">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="46202-303">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="46202-304">将指定区域性特定格式的数字的字符串表示形式转换为它的等效 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="46202-304">Converts the string representation of a number in a specified culture-specific format to its 32-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="46202-305">与 <paramref name="s" /> 中指定的数字等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="46202-305">A 32-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-306">`s` 参数包含如下格式：</span><span class="sxs-lookup"><span data-stu-id="46202-306">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="46202-307">[*ws*][*sign*]*数字*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="46202-307">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="46202-308">方括号（[和]）中的项是可选的。</span><span class="sxs-lookup"><span data-stu-id="46202-308">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="46202-309">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="46202-309">The following table describes each element.</span></span>  
  
|<span data-ttu-id="46202-310">元素</span><span class="sxs-lookup"><span data-stu-id="46202-310">Element</span></span>|<span data-ttu-id="46202-311">说明</span><span class="sxs-lookup"><span data-stu-id="46202-311">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="46202-312">*ws*</span><span class="sxs-lookup"><span data-stu-id="46202-312">*ws*</span></span>|<span data-ttu-id="46202-313">可选空白。</span><span class="sxs-lookup"><span data-stu-id="46202-313">Optional white space.</span></span>|  
|<span data-ttu-id="46202-314">*sign*</span><span class="sxs-lookup"><span data-stu-id="46202-314">*sign*</span></span>|<span data-ttu-id="46202-315">可选符号，如果 `s` 表示值零，则为负号。</span><span class="sxs-lookup"><span data-stu-id="46202-315">An optional sign, or a negative sign if `s` represents the value zero.</span></span>|  
|<span data-ttu-id="46202-316">*digits*</span><span class="sxs-lookup"><span data-stu-id="46202-316">*digits*</span></span>|<span data-ttu-id="46202-317">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="46202-317">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="46202-318">使用 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 样式来解释 s 参数。</span><span class="sxs-lookup"><span data-stu-id="46202-318">The s parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="46202-319">除了无符号整数值的十进制数字外，只允许使用前导和尾随空格以及前导符号。</span><span class="sxs-lookup"><span data-stu-id="46202-319">In addition to the unsigned integer value's decimal digits, only leading and trailing spaces along with a leading sign is allowed.</span></span> <span data-ttu-id="46202-320">（如果存在负号，则 `s` 必须表示值为零，否则方法将引发 <xref:System.OverflowException>。）若要将样式元素与 `s`中可以存在的区域性特定格式设置信息一起显式定义，请使用 <xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-320">(If the negative sign is present, `s` must represent a value of zero, or the method throws an <xref:System.OverflowException>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="46202-321">`provider` 参数是其 <xref:System.IFormatProvider.GetFormat%2A> 方法返回 <xref:System.Globalization.NumberFormatInfo> 对象的 <xref:System.IFormatProvider> 实现，该对象提供有关 `s`格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="46202-321">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="46202-322">有三种方法可以使用 `provider` 参数向分析操作提供自定义格式设置信息：</span><span class="sxs-lookup"><span data-stu-id="46202-322">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="46202-323">可以传递提供格式设置信息的实际 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="46202-323">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="46202-324">（其 <xref:System.IFormatProvider.GetFormat%2A> 的实现只返回自身。）</span><span class="sxs-lookup"><span data-stu-id="46202-324">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="46202-325">可以传递一个 <xref:System.Globalization.CultureInfo> 对象，该对象指定要使用其格式设置的区域性。</span><span class="sxs-lookup"><span data-stu-id="46202-325">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="46202-326">它的 <xref:System.Globalization.CultureInfo.NumberFormat%2A> 属性提供格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="46202-326">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="46202-327">可以传递自定义 <xref:System.IFormatProvider> 实现。</span><span class="sxs-lookup"><span data-stu-id="46202-327">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="46202-328">它的 <xref:System.IFormatProvider.GetFormat%2A> 方法必须实例化并返回提供格式设置信息的 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="46202-328">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="46202-329">如果 `null``provider`，则使用当前区域性的 <xref:System.Globalization.NumberFormatInfo>。</span><span class="sxs-lookup"><span data-stu-id="46202-329">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46202-330">下面的示例是 Web 窗体的按钮单击事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="46202-330">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="46202-331">它使用 <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> 属性返回的数组来确定用户的区域设置。</span><span class="sxs-lookup"><span data-stu-id="46202-331">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="46202-332">然后，它将实例化与该区域设置相对应的 <xref:System.Globalization.CultureInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="46202-332">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="46202-333">然后，将属于该 <xref:System.Globalization.CultureInfo> 对象的 <xref:System.Globalization.NumberFormatInfo> 对象传递到 <xref:System.UInt32.Parse%28System.String%2CSystem.IFormatProvider%29> 方法，以将用户的输入转换为 <xref:System.UInt32> 值。</span><span class="sxs-lookup"><span data-stu-id="46202-333">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.UInt32.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to a <xref:System.UInt32> value.</span></span>  
  
 [!code-csharp[ParseMethod#6](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#6)]
 [!code-vb[ParseMethod#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#6)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int64.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="46202-334"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="46202-334"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="46202-335"><paramref name="s" /> 的样式不正确。</span><span class="sxs-lookup"><span data-stu-id="46202-335"><paramref name="s" /> is not in the correct style.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="46202-336"><paramref name="s" /> 表示一个小于 <see cref="F:System.UInt32.MinValue" /> 或大于 <see cref="F:System.UInt32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="46202-336"><paramref name="s" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.UInt32.ToString" />
        <altmember cref="Overload:System.UInt32.TryParse" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="46202-337">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="46202-337">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static uint Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As UInteger" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; uint32" Usage="System.uint32.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="46202-338">一个范围，包含表示要转换的数字的字符。</span><span class="sxs-lookup"><span data-stu-id="46202-338">A span containing the characters that represent the number to convert.</span></span> <span data-ttu-id="46202-339">该范围使用由 <paramref name="style" /> 参数指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="46202-339">The span is interpreted by using the style specified by the <paramref name="style" /> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="46202-340">枚举值的按位组合，用于指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="46202-340">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="46202-341">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="46202-341">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="46202-342">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="46202-342">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="46202-343">将指定样式和区域性特定格式的数字的范围表示形式转换为其等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="46202-343">Converts the span representation of a number in a specified style and culture-specific format to its 32-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="46202-344">与 <paramref name="s" /> 中指定的数字等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="46202-344">A 32-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static uint Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; uint32" Usage="System.uint32.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="46202-345">一个字符串，表示要转换的数字。</span><span class="sxs-lookup"><span data-stu-id="46202-345">A string representing the number to convert.</span></span> <span data-ttu-id="46202-346">该字符串使用由 <paramref name="style" /> 参数指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="46202-346">The string is interpreted by using the style specified by the <paramref name="style" /> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="46202-347">枚举值的按位组合，用于指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="46202-347">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="46202-348">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="46202-348">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="46202-349">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="46202-349">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="46202-350">将指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="46202-350">Converts the string representation of a number in a specified style and culture-specific format to its 32-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="46202-351">与 <paramref name="s" /> 中指定的数字等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="46202-351">A 32-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-352">`style` 参数定义在 `s` 参数中允许的样式元素（如空格或正号或负号符号），以便分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="46202-352">The `style` parameter defines the style elements (such as white space or the positive or negative sign symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="46202-353">它必须是 <xref:System.Globalization.NumberStyles> 枚举中的位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="46202-353">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span>  
  
 <span data-ttu-id="46202-354">根据 `style`的值，`s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="46202-354">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="46202-355">[*ws*][*$*][*sign*]*位数*[。*fractional_digits*] [E [*sign*]*exponential_digits*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="46202-355">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="46202-356">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="46202-356">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="46202-357">如果 `style` 包括 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>，则 `s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="46202-357">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="46202-358">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="46202-358">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="46202-359">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="46202-359">The following table describes each element.</span></span>  
  
|<span data-ttu-id="46202-360">元素</span><span class="sxs-lookup"><span data-stu-id="46202-360">Element</span></span>|<span data-ttu-id="46202-361">说明</span><span class="sxs-lookup"><span data-stu-id="46202-361">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="46202-362">*ws*</span><span class="sxs-lookup"><span data-stu-id="46202-362">*ws*</span></span>|<span data-ttu-id="46202-363">可选空白。</span><span class="sxs-lookup"><span data-stu-id="46202-363">Optional white space.</span></span> <span data-ttu-id="46202-364">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 标志，则空格可以出现在 `s` 的开头，如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 标志，则它可以出现在 `s` 的末尾。</span><span class="sxs-lookup"><span data-stu-id="46202-364">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="46202-365">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="46202-365">A culture-specific currency symbol.</span></span> <span data-ttu-id="46202-366">其在字符串中的位置由 `provider` 参数的 <xref:System.IFormatProvider.GetFormat%2A> 方法返回的 <xref:System.Globalization.NumberFormatInfo> 对象的 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> 属性定义。</span><span class="sxs-lookup"><span data-stu-id="46202-366">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object that is returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="46202-367">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 标志，货币符号可以出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="46202-367">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="46202-368">*sign*</span><span class="sxs-lookup"><span data-stu-id="46202-368">*sign*</span></span>|<span data-ttu-id="46202-369">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="46202-369">An optional sign.</span></span> <span data-ttu-id="46202-370">（如果 `s` 包含负号并表示一个非零数字，则该方法将引发 <xref:System.OverflowException>。）如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 标志，则符号会出现在 `s` 的开头，如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 标志，则它可能会显示 `s` 的结尾。</span><span class="sxs-lookup"><span data-stu-id="46202-370">(The method throws an <xref:System.OverflowException> if `s` includes a negative sign and represents a non-zero number.) The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="46202-371">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 标志，则可以在 `s` 中使用括号来表示负值。</span><span class="sxs-lookup"><span data-stu-id="46202-371">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="46202-372">*digits*</span><span class="sxs-lookup"><span data-stu-id="46202-372">*digits*</span></span>|<span data-ttu-id="46202-373">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="46202-373">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="46202-374">*。*</span><span class="sxs-lookup"><span data-stu-id="46202-374">*.*</span></span>|<span data-ttu-id="46202-375">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="46202-375">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="46202-376">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 标志，当前区域性的小数点符号会出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="46202-376">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="46202-377">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="46202-377">*fractional_digits*</span></span>|<span data-ttu-id="46202-378">如果 `style` 包括 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 标志，则为数字0-9 的一个或多个匹配项; 如果不是，则为数字0的一个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="46202-378">One or more occurrences of the digit 0-9 if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, or one or more occurrences of the digit 0 if it does not.</span></span> <span data-ttu-id="46202-379">仅当 `style` 包含 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 标志时，小数位才能出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="46202-379">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="46202-380">E</span><span class="sxs-lookup"><span data-stu-id="46202-380">E</span></span>|<span data-ttu-id="46202-381">"E" 或 "E" 字符，指示值以指数（科学型）表示法表示。</span><span class="sxs-lookup"><span data-stu-id="46202-381">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="46202-382">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 标志，则 `s` 参数可以表示指数表示法中的数字。</span><span class="sxs-lookup"><span data-stu-id="46202-382">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="46202-383">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="46202-383">*exponential_digits*</span></span>|<span data-ttu-id="46202-384">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="46202-384">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="46202-385">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 标志，则 `s` 参数可以表示指数表示法中的数字。</span><span class="sxs-lookup"><span data-stu-id="46202-385">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="46202-386">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="46202-386">*hexdigits*</span></span>|<span data-ttu-id="46202-387">从0到 f 的十六进制数字序列，或者从0到 F。</span><span class="sxs-lookup"><span data-stu-id="46202-387">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="46202-388">无论 `style` 参数的值是什么，分析操作都将忽略 `s` 中任何终止的 NUL （U + 0000）字符。</span><span class="sxs-lookup"><span data-stu-id="46202-388">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="46202-389">仅包含十进制数字的字符串（对应于 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 样式）始终会成功分析。</span><span class="sxs-lookup"><span data-stu-id="46202-389">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="46202-390">大多数其余 <xref:System.Globalization.NumberStyles> 成员控制可能存在但不需要存在于此输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="46202-390">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="46202-391">下表指示单个 <xref:System.Globalization.NumberStyles> 成员如何影响可能出现在 `s`中的元素。</span><span class="sxs-lookup"><span data-stu-id="46202-391">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="46202-392">非复合 `NumberStyles` 值</span><span class="sxs-lookup"><span data-stu-id="46202-392">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="46202-393">`s` 中允许的元素以及数字</span><span class="sxs-lookup"><span data-stu-id="46202-393">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="46202-394">仅十进制数字。</span><span class="sxs-lookup"><span data-stu-id="46202-394">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="46202-395">小数点（*.*）和*fractional_digits*元素。</span><span class="sxs-lookup"><span data-stu-id="46202-395">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="46202-396">但是，如果样式不包含 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 标志，则*fractional_digits*必须只包含一个或多个0位数;否则，会引发 <xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="46202-396">However, if style does not include the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, *fractional_digits* must consist of only one or more 0 digits; otherwise, an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="46202-397">"E" 或 "E" 字符（指示指数表示法）以及*exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="46202-397">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="46202-398">`s`开头的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="46202-398">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="46202-399">`s`末尾的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="46202-399">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="46202-400">*数字*之前的符号。</span><span class="sxs-lookup"><span data-stu-id="46202-400">A sign before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="46202-401">*数字*后的符号。</span><span class="sxs-lookup"><span data-stu-id="46202-401">A sign after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="46202-402">用于指示负值的*位数*前后的括号。</span><span class="sxs-lookup"><span data-stu-id="46202-402">Parentheses before and after *digits* to indicate a negative value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="46202-403">组分隔符（*，*）元素。</span><span class="sxs-lookup"><span data-stu-id="46202-403">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="46202-404">货币（*$*）元素。</span><span class="sxs-lookup"><span data-stu-id="46202-404">The currency (*$*) element.</span></span>|  
  
 <span data-ttu-id="46202-405">如果使用 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 标志，则 `s` 必须是十六进制值。</span><span class="sxs-lookup"><span data-stu-id="46202-405">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="46202-406">可以与它组合的其他标志仅 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 和 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="46202-406">The only other flags that can be combined with it are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46202-407">（<xref:System.Globalization.NumberStyles> 枚举包含复合数字样式，<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含两个空白标志。）</span><span class="sxs-lookup"><span data-stu-id="46202-407">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="46202-408">如果 `s` 参数是十六进制数的字符串表示形式，则它的前面不能有将其视为十六进制数的任何修饰（如 `0x` 或 `&h`）。</span><span class="sxs-lookup"><span data-stu-id="46202-408">If the `s` parameter is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="46202-409">这将导致分析操作引发异常。</span><span class="sxs-lookup"><span data-stu-id="46202-409">This causes the parse operation to throw an exception.</span></span>  
  
 <span data-ttu-id="46202-410">`provider` 参数是其 <xref:System.IFormatProvider.GetFormat%2A> 方法返回 <xref:System.Globalization.NumberFormatInfo> 对象的 <xref:System.IFormatProvider> 实现，该对象提供有关 `s`格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="46202-410">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="46202-411">有三种方法可以使用 `provider` 参数向分析操作提供自定义格式设置信息：</span><span class="sxs-lookup"><span data-stu-id="46202-411">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="46202-412">可以传递提供格式设置信息的实际 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="46202-412">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="46202-413">（其 <xref:System.IFormatProvider.GetFormat%2A> 的实现只返回自身。）</span><span class="sxs-lookup"><span data-stu-id="46202-413">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="46202-414">可以传递一个 <xref:System.Globalization.CultureInfo> 对象，该对象指定要使用其格式设置的区域性。</span><span class="sxs-lookup"><span data-stu-id="46202-414">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="46202-415">它的 <xref:System.Globalization.CultureInfo.NumberFormat%2A> 属性提供格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="46202-415">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="46202-416">可以传递自定义 <xref:System.IFormatProvider> 实现。</span><span class="sxs-lookup"><span data-stu-id="46202-416">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="46202-417">它的 <xref:System.IFormatProvider.GetFormat%2A> 方法必须实例化并返回提供格式设置信息的 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="46202-417">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="46202-418">如果 `null``provider`，则使用当前区域性的 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="46202-418">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46202-419">下面的示例使用 <xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> 方法将数字的各种字符串表示形式转换为32位无符号整数值。</span><span class="sxs-lookup"><span data-stu-id="46202-419">The following example uses the <xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method to convert various string representations of numbers to 32-bit unsigned integer values.</span></span>  
  
 [!code-csharp[System.UInt32.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.parse/cs/parseex4.cs#4)]
 [!code-vb[System.UInt32.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.parse/vb/parseex4.vb#4)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int64.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="46202-420"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="46202-420"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46202-421"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="46202-421"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="46202-422">-或-</span><span class="sxs-lookup"><span data-stu-id="46202-422">-or-</span></span> 
 <span data-ttu-id="46202-423"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="46202-423"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="46202-424"><paramref name="s" /> 的格式不符合 <paramref name="style" />。</span><span class="sxs-lookup"><span data-stu-id="46202-424"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="46202-425"><paramref name="s" /> 表示一个小于 <see cref="F:System.UInt32.MinValue" /> 或大于 <see cref="F:System.UInt32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="46202-425"><paramref name="s" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span>  
  
<span data-ttu-id="46202-426">-或-</span><span class="sxs-lookup"><span data-stu-id="46202-426">-or-</span></span> 
 <span data-ttu-id="46202-427"><paramref name="s" /> 包含非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="46202-427"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.UInt32.ToString" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="46202-428">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="46202-428">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberSignature Language="F#" Value="abstract member System.IComparable.CompareTo : obj -&gt; int&#xA;override this.System.IComparable.CompareTo : obj -&gt; int" Usage="uint32.System.IComparable.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="46202-429">要比较的对象，或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="46202-429">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="46202-430">将此实例与指定对象进行比较并返回一个对二者的相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="46202-430">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="46202-431">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="46202-431">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>
          <list type="table"><listheader><term><span data-ttu-id="46202-432">返回值</span><span class="sxs-lookup"><span data-stu-id="46202-432">Return Value</span></span></term><description><span data-ttu-id="46202-433">说明</span><span class="sxs-lookup"><span data-stu-id="46202-433">Description</span></span></description></listheader><item><term><span data-ttu-id="46202-434">小于零</span><span class="sxs-lookup"><span data-stu-id="46202-434">Less than zero</span></span></term><description><span data-ttu-id="46202-435">此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="46202-435">This instance is less than <paramref name="value" />.</span></span></description></item><item><term><span data-ttu-id="46202-436">零</span><span class="sxs-lookup"><span data-stu-id="46202-436">Zero</span></span></term><description><span data-ttu-id="46202-437">此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="46202-437">This instance is equal to <paramref name="value" />.</span></span></description></item><item><term><span data-ttu-id="46202-438">大于零</span><span class="sxs-lookup"><span data-stu-id="46202-438">Greater than zero</span></span></term><description><span data-ttu-id="46202-439">此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="46202-439">This instance is greater than <paramref name="value" />.</span></span>

<span data-ttu-id="46202-440">-或-</span><span class="sxs-lookup"><span data-stu-id="46202-440">-or-</span></span>

<span data-ttu-id="46202-441"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="46202-441"><paramref name="value" /> is <see langword="null" />.</span></span></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="46202-442">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="46202-442">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="46202-443">它只能在 <xref:System.UInt32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="46202-443">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span>

<span data-ttu-id="46202-444">无论其值如何，<xref:System.UInt32>的任何实例都视为大于 `null`。</span><span class="sxs-lookup"><span data-stu-id="46202-444">Any instance of <xref:System.UInt32>, regardless of its value, is considered greater than `null`.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46202-445"><paramref name="value" /> 不是 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="46202-445"><paramref name="value" /> is not a <see cref="T:System.UInt32" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.GetTypeCode : unit -&gt; TypeCode&#xA;override this.System.IConvertible.GetTypeCode : unit -&gt; TypeCode" Usage="uint32.System.IConvertible.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="46202-446">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="46202-446">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.UInt32" />.</span></span></summary>
        <returns><span data-ttu-id="46202-447">枚举常数 <see cref="F:System.TypeCode.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="46202-447">The enumerated constant, <see cref="F:System.TypeCode.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="46202-448">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="46202-448">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="46202-449">它只能在 <xref:System.UInt32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="46202-449">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToBoolean : IFormatProvider -&gt; bool&#xA;override this.System.IConvertible.ToBoolean : IFormatProvider -&gt; bool" Usage="uint32.System.IConvertible.ToBoolean provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46202-450">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="46202-450">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="46202-451">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="46202-451">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="46202-452">如果当前实例的值不为零，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46202-452"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-453">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="46202-453">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="46202-454">它只能在 <xref:System.UInt32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="46202-454">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="46202-455">建议的替代项是调用 <xref:System.Convert.ToBoolean%28System.UInt32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-455">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToByte : IFormatProvider -&gt; byte&#xA;override this.System.IConvertible.ToByte : IFormatProvider -&gt; byte" Usage="uint32.System.IConvertible.ToByte provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46202-456">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="46202-456">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="46202-457">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="46202-457">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="46202-458">当前实例的值，已转换为 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="46202-458">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-459">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="46202-459">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="46202-460">它只能在 <xref:System.UInt32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="46202-460">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="46202-461">建议的替代项是调用 <xref:System.Convert.ToByte%28System.UInt32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-461">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToChar : IFormatProvider -&gt; char&#xA;override this.System.IConvertible.ToChar : IFormatProvider -&gt; char" Usage="uint32.System.IConvertible.ToChar provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46202-462">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="46202-462">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="46202-463">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="46202-463">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="46202-464">当前实例的值，已转换为 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="46202-464">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-465">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="46202-465">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="46202-466">它只能在 <xref:System.UInt32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="46202-466">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="46202-467">建议的替代项是调用 <xref:System.Convert.ToChar%28System.UInt32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-467">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDateTime : IFormatProvider -&gt; DateTime&#xA;override this.System.IConvertible.ToDateTime : IFormatProvider -&gt; DateTime" Usage="uint32.System.IConvertible.ToDateTime provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46202-468">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="46202-468">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="46202-469">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="46202-469">This conversion is not supported.</span></span> <span data-ttu-id="46202-470">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="46202-470">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="46202-471">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="46202-471">This conversion is not supported.</span></span> <span data-ttu-id="46202-472">不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="46202-472">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="46202-473">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="46202-473">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDecimal : IFormatProvider -&gt; decimal&#xA;override this.System.IConvertible.ToDecimal : IFormatProvider -&gt; decimal" Usage="uint32.System.IConvertible.ToDecimal provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46202-474">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="46202-474">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="46202-475">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="46202-475">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="46202-476">当前实例的值，已转换为 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="46202-476">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-477">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="46202-477">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="46202-478">它只能在 <xref:System.UInt32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="46202-478">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="46202-479">建议的替代项是调用 <xref:System.Convert.ToDecimal%28System.UInt32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-479">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDouble : IFormatProvider -&gt; double&#xA;override this.System.IConvertible.ToDouble : IFormatProvider -&gt; double" Usage="uint32.System.IConvertible.ToDouble provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46202-480">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="46202-480">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="46202-481">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="46202-481">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="46202-482">当前实例的值，已转换为 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="46202-482">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-483">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="46202-483">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="46202-484">它只能在 <xref:System.UInt32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="46202-484">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="46202-485">建议的替代项是调用 <xref:System.Convert.ToDouble%28System.UInt32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-485">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt16 : IFormatProvider -&gt; int16&#xA;override this.System.IConvertible.ToInt16 : IFormatProvider -&gt; int16" Usage="uint32.System.IConvertible.ToInt16 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46202-486">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="46202-486">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="46202-487">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="46202-487">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="46202-488">当前实例的值，已转换为 <see cref="T:System.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="46202-488">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-489">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="46202-489">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="46202-490">它只能在 <xref:System.UInt32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="46202-490">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="46202-491">建议的替代项是调用 <xref:System.Convert.ToInt16%28System.UInt32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-491">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt32 : IFormatProvider -&gt; int&#xA;override this.System.IConvertible.ToInt32 : IFormatProvider -&gt; int" Usage="uint32.System.IConvertible.ToInt32 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46202-492">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="46202-492">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="46202-493">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="46202-493">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="46202-494">当前实例的值，已转换为 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="46202-494">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-495">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="46202-495">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="46202-496">它只能在 <xref:System.UInt32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="46202-496">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="46202-497">建议的替代项是调用 <xref:System.Convert.ToInt32%28System.UInt32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-497">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt64 : IFormatProvider -&gt; int64&#xA;override this.System.IConvertible.ToInt64 : IFormatProvider -&gt; int64" Usage="uint32.System.IConvertible.ToInt64 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46202-498">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="46202-498">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="46202-499">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="46202-499">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="46202-500">当前实例的值，已转换为 <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="46202-500">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-501">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="46202-501">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="46202-502">它只能在 <xref:System.UInt32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="46202-502">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="46202-503">建议的替代项是调用 <xref:System.Convert.ToInt64%28System.UInt32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-503">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToSByte : IFormatProvider -&gt; sbyte&#xA;override this.System.IConvertible.ToSByte : IFormatProvider -&gt; sbyte" Usage="uint32.System.IConvertible.ToSByte provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46202-504">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="46202-504">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="46202-505">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="46202-505">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="46202-506">当前实例的值，已转换为 <see cref="T:System.SByte" />。</span><span class="sxs-lookup"><span data-stu-id="46202-506">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-507">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="46202-507">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="46202-508">它只能在 <xref:System.UInt32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="46202-508">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="46202-509">建议的替代项是调用 <xref:System.Convert.ToSByte%28System.UInt32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-509">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToSingle : IFormatProvider -&gt; single&#xA;override this.System.IConvertible.ToSingle : IFormatProvider -&gt; single" Usage="uint32.System.IConvertible.ToSingle provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46202-510">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="46202-510">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="46202-511">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="46202-511">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="46202-512">当前实例的值，已转换为 <see cref="T:System.Single" />。</span><span class="sxs-lookup"><span data-stu-id="46202-512">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-513">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="46202-513">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="46202-514">它只能在 <xref:System.UInt32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="46202-514">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="46202-515">建议的替代项是调用 <xref:System.Convert.ToSingle%28System.UInt32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-515">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToType (type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToType : Type * IFormatProvider -&gt; obj&#xA;override this.System.IConvertible.ToType : Type * IFormatProvider -&gt; obj" Usage="uint32.System.IConvertible.ToType (type, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="46202-516">此 <see cref="T:System.UInt32" /> 值要转换为的类型。</span><span class="sxs-lookup"><span data-stu-id="46202-516">The type to which to convert this <see cref="T:System.UInt32" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="46202-517">一个 <see cref="T:System.IFormatProvider" /> 实现，提供有关返回值格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="46202-517">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="46202-518">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="46202-518">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="46202-519">当前实例的值，已转换为 <paramref name="type" />。</span><span class="sxs-lookup"><span data-stu-id="46202-519">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-520">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="46202-520">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="46202-521">它只能在 <xref:System.UInt32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="46202-521">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="46202-522">建议的替代方法是调用 `static` （Visual Basic） <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> 方法中的`Shared`。</span><span class="sxs-lookup"><span data-stu-id="46202-522">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt16 : IFormatProvider -&gt; uint16&#xA;override this.System.IConvertible.ToUInt16 : IFormatProvider -&gt; uint16" Usage="uint32.System.IConvertible.ToUInt16 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46202-523">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="46202-523">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="46202-524">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="46202-524">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="46202-525">当前实例的值，已转换为 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="46202-525">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-526">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="46202-526">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="46202-527">它只能在 <xref:System.UInt32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="46202-527">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="46202-528">建议的替代项是调用 <xref:System.Convert.ToUInt16%28System.UInt32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-528">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt32 : IFormatProvider -&gt; uint32&#xA;override this.System.IConvertible.ToUInt32 : IFormatProvider -&gt; uint32" Usage="uint32.System.IConvertible.ToUInt32 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46202-529">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="46202-529">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="46202-530">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="46202-530">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="46202-531">当前实例的值，未更改。</span><span class="sxs-lookup"><span data-stu-id="46202-531">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-532">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="46202-532">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="46202-533">它只能在 <xref:System.UInt32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="46202-533">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt64 : IFormatProvider -&gt; uint64&#xA;override this.System.IConvertible.ToUInt64 : IFormatProvider -&gt; uint64" Usage="uint32.System.IConvertible.ToUInt64 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46202-534">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="46202-534">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="46202-535">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="46202-535">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="46202-536">当前实例的值，已转换为 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="46202-536">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-537">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="46202-537">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="46202-538">它只能在 <xref:System.UInt32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="46202-538">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="46202-539">建议的替代项是调用 <xref:System.Convert.ToUInt64%28System.UInt32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-539">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="46202-540">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="46202-540">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="uint32.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="46202-541">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="46202-541">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="46202-542">此实例的值的字符串表示形式，由一系列从 0 到 9 之间的数字组成，不包含符号或前导零。</span><span class="sxs-lookup"><span data-stu-id="46202-542">The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-543"><xref:System.UInt32.ToString> 方法使用当前区域性的 <xref:System.Globalization.NumberFormatInfo> 对象，设置默认值（"G" 或 "常规"）格式的 <xref:System.UInt32> 值的格式。</span><span class="sxs-lookup"><span data-stu-id="46202-543">The <xref:System.UInt32.ToString> method formats a <xref:System.UInt32> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="46202-544">如果要指定其他格式或区域性，请使用 <xref:System.UInt32.ToString%2A> 方法的其他重载，如下所示：</span><span class="sxs-lookup"><span data-stu-id="46202-544">If you want to specify a different format or culture, use the other overloads of the <xref:System.UInt32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="46202-545">使用格式</span><span class="sxs-lookup"><span data-stu-id="46202-545">To use format</span></span>|<span data-ttu-id="46202-546">对于区域性</span><span class="sxs-lookup"><span data-stu-id="46202-546">For culture</span></span>|<span data-ttu-id="46202-547">使用重载</span><span class="sxs-lookup"><span data-stu-id="46202-547">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="46202-548">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="46202-548">Default ("G") format</span></span>|<span data-ttu-id="46202-549">特定区域性</span><span class="sxs-lookup"><span data-stu-id="46202-549">A specific culture</span></span>|<xref:System.UInt32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="46202-550">特定格式</span><span class="sxs-lookup"><span data-stu-id="46202-550">A specific format</span></span>|<span data-ttu-id="46202-551">默认（当前）区域性</span><span class="sxs-lookup"><span data-stu-id="46202-551">Default (current) culture</span></span>|<xref:System.UInt32.ToString%28System.String%29>|  
|<span data-ttu-id="46202-552">特定格式</span><span class="sxs-lookup"><span data-stu-id="46202-552">A specific format</span></span>|<span data-ttu-id="46202-553">特定区域性</span><span class="sxs-lookup"><span data-stu-id="46202-553">A specific culture</span></span>|<xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
   
  
## Examples  
 <span data-ttu-id="46202-554">下面的示例使用默认的 <xref:System.UInt32.ToString> 方法显示 <xref:System.UInt32> 值。</span><span class="sxs-lookup"><span data-stu-id="46202-554">The following example displays a <xref:System.UInt32> value by using the default <xref:System.UInt32.ToString> method.</span></span> <span data-ttu-id="46202-555">它还显示了使用某些标准格式说明符生成的 <xref:System.UInt32> 值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="46202-555">It also displays the string representations of the <xref:System.UInt32> value that results from using some standard format specifiers.</span></span> <span data-ttu-id="46202-556">这些示例使用 en-us 区域性的格式设置约定来显示。</span><span class="sxs-lookup"><span data-stu-id="46202-556">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.UInt32.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.UInt32.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt32.Parse(System.String)" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="46202-557">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="46202-557">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="uint32.ToString provider" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="46202-558">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="46202-558">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="46202-559">使用指定的区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="46202-559">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="46202-560">此实例的值的字符串表示形式，由范围从 0 到 9 的数字序列组成，不包含符号或前导零。</span><span class="sxs-lookup"><span data-stu-id="46202-560">The string representation of the value of this instance, which consists of a sequence of digits ranging from 0 to 9, without a sign or leading zeros.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-561"><xref:System.UInt32.ToString%28System.IFormatProvider%29> 方法通过使用指定区域性的 <xref:System.Globalization.NumberFormatInfo> 对象，设置默认值（"G" 或 "常规"）格式的 <xref:System.UInt32> 值的格式。</span><span class="sxs-lookup"><span data-stu-id="46202-561">The <xref:System.UInt32.ToString%28System.IFormatProvider%29> method formats a <xref:System.UInt32> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="46202-562">如果要指定其他格式或当前区域性，请使用 <xref:System.UInt32.ToString%2A> 方法的其他重载，如下所示：</span><span class="sxs-lookup"><span data-stu-id="46202-562">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.UInt32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="46202-563">使用格式</span><span class="sxs-lookup"><span data-stu-id="46202-563">To use format</span></span>|<span data-ttu-id="46202-564">对于区域性</span><span class="sxs-lookup"><span data-stu-id="46202-564">For culture</span></span>|<span data-ttu-id="46202-565">使用重载</span><span class="sxs-lookup"><span data-stu-id="46202-565">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="46202-566">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="46202-566">Default ("G") format</span></span>|<span data-ttu-id="46202-567">默认（当前）区域性</span><span class="sxs-lookup"><span data-stu-id="46202-567">Default (current) culture</span></span>|<xref:System.UInt32.ToString>|  
|<span data-ttu-id="46202-568">特定格式</span><span class="sxs-lookup"><span data-stu-id="46202-568">A specific format</span></span>|<span data-ttu-id="46202-569">默认（当前）区域性</span><span class="sxs-lookup"><span data-stu-id="46202-569">Default (current) culture</span></span>|<xref:System.UInt32.ToString%28System.String%29>|  
|<span data-ttu-id="46202-570">特定格式</span><span class="sxs-lookup"><span data-stu-id="46202-570">A specific format</span></span>|<span data-ttu-id="46202-571">特定区域性</span><span class="sxs-lookup"><span data-stu-id="46202-571">A specific culture</span></span>|<xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="46202-572">`provider` 参数是一个 <xref:System.IFormatProvider> 实现。</span><span class="sxs-lookup"><span data-stu-id="46202-572">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="46202-573">它的 <xref:System.IFormatProvider.GetFormat%2A> 方法返回一个 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供区域性特定的格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="46202-573">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="46202-574">但是，在使用一般数值格式说明符（"G"）进行格式设置时，不会使用 <xref:System.Globalization.NumberFormatInfo> 的任何属性。</span><span class="sxs-lookup"><span data-stu-id="46202-574">However, none of the properties of the <xref:System.Globalization.NumberFormatInfo> are used when formatting with the general numeric format specifier ("G").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46202-575">下面的示例使用多个格式提供程序（包括一个用于固定区域性的格式提供程序）设置16位带符号整数值的格式。</span><span class="sxs-lookup"><span data-stu-id="46202-575">The following example formats a 16-bit signed integer value by using several format providers, including one for the invariant culture.</span></span> <span data-ttu-id="46202-576">该示例的输出说明，无论格式提供程序是什么，<xref:System.UInt32.ToString%28System.IFormatProvider%29> 方法返回的格式化字符串都是相同的。</span><span class="sxs-lookup"><span data-stu-id="46202-576">The output from the example illustrates that the formatted string returned by the <xref:System.UInt32.ToString%28System.IFormatProvider%29> method is the same regardless of the format provider.</span></span>  
  
 [!code-csharp[System.UInt32.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.tostring/cs/tostring2.cs#2)]
 [!code-vb[System.UInt32.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.tostring/vb/tostring2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt32.Parse(System.String)" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="46202-577">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="46202-577">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="uint32.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="46202-578">一个数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="46202-578">A numeric format string.</span></span></param>
        <summary><span data-ttu-id="46202-579">使用指定的格式将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="46202-579">Converts the numeric value of this instance to its equivalent string representation using the specified format.</span></span></summary>
        <returns><span data-ttu-id="46202-580">此实例的值的字符串表示形式，由 <paramref name="format" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="46202-580">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-581"><xref:System.UInt32.ToString%28System.String%29> 方法通过使用表示当前区域性约定的 <xref:System.Globalization.NumberFormatInfo> 对象来设置指定格式的 <xref:System.UInt32> 值的格式。</span><span class="sxs-lookup"><span data-stu-id="46202-581">The <xref:System.UInt32.ToString%28System.String%29> method formats a <xref:System.UInt32> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="46202-582">如果要使用默认格式（"G" 或 "常规"）或指定不同的区域性，请使用 <xref:System.UInt32.ToString%2A> 方法的其他重载，如下所示：</span><span class="sxs-lookup"><span data-stu-id="46202-582">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.UInt32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="46202-583">使用格式</span><span class="sxs-lookup"><span data-stu-id="46202-583">To use format</span></span>|<span data-ttu-id="46202-584">对于区域性</span><span class="sxs-lookup"><span data-stu-id="46202-584">For culture</span></span>|<span data-ttu-id="46202-585">使用重载</span><span class="sxs-lookup"><span data-stu-id="46202-585">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="46202-586">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="46202-586">Default ("G") format</span></span>|<span data-ttu-id="46202-587">默认（当前）区域性</span><span class="sxs-lookup"><span data-stu-id="46202-587">Default (current) culture</span></span>|<xref:System.UInt32.ToString>|  
|<span data-ttu-id="46202-588">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="46202-588">Default ("G") format</span></span>|<span data-ttu-id="46202-589">特定区域性</span><span class="sxs-lookup"><span data-stu-id="46202-589">A specific culture</span></span>|<xref:System.UInt32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="46202-590">特定格式</span><span class="sxs-lookup"><span data-stu-id="46202-590">A specific format</span></span>|<span data-ttu-id="46202-591">特定区域性</span><span class="sxs-lookup"><span data-stu-id="46202-591">A specific culture</span></span>|<xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="46202-592">`format` 参数可以是任何有效的[标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings)，也可以是[自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)的任意组合。</span><span class="sxs-lookup"><span data-stu-id="46202-592">The `format` parameter can be any valid [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings), or any combination of [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span> <span data-ttu-id="46202-593">如果 `format` 等于 <xref:System.String.Empty?displayProperty=nameWithType> 或 `null`，则当前 <xref:System.UInt32> 对象的返回值将用常规格式说明符（"G"）进行格式设置。</span><span class="sxs-lookup"><span data-stu-id="46202-593">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt32> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="46202-594">如果 `format` 为任何其他值，则该方法将引发 <xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="46202-594">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="46202-595">.NET Framework 提供了广泛的格式设置支持，以下格式设置主题更详细地介绍了这些支持：</span><span class="sxs-lookup"><span data-stu-id="46202-595">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="46202-596">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings)和[自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="46202-596">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="46202-597">有关 .NET Framework 中的格式设置的详细信息，请参阅[格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="46202-597">For more information about support for formatting in the .NET Framework, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="46202-598">返回的字符串的格式由当前区域性的 <xref:System.Globalization.NumberFormatInfo> 对象确定。</span><span class="sxs-lookup"><span data-stu-id="46202-598">The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="46202-599">根据 `format` 参数，此对象控制输出字符串中的符号，如组分隔符和小数点符号。</span><span class="sxs-lookup"><span data-stu-id="46202-599">Depending on the `format` parameter, this object controls symbols such as the group separator and the decimal point symbol in the output string.</span></span> <span data-ttu-id="46202-600">若要为当前区域性以外的区域性提供格式设置信息，请调用 <xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29> 重载。</span><span class="sxs-lookup"><span data-stu-id="46202-600">To provide formatting information for cultures other than the current culture, call the <xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46202-601">下面的示例通过使用每个标准格式字符串和一些自定义格式字符串来显示32位无符号整数值。</span><span class="sxs-lookup"><span data-stu-id="46202-601">The following example displays a 32-bit unsigned integer value by using each standard format string and some custom format strings.</span></span>  
  
 [!code-csharp[System.UInt32.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.tostring/cs/tostring3.cs#3)]
 [!code-vb[System.UInt32.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.tostring/vb/tostring3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="46202-602"><paramref name="format" /> 参数无效。</span><span class="sxs-lookup"><span data-stu-id="46202-602">The <paramref name="format" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.UInt32.Parse(System.String)" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="46202-603">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="46202-603">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/how-to-pad-a-number-with-leading-zeros"><span data-ttu-id="46202-604">如何：用前导零填充数字</span><span class="sxs-lookup"><span data-stu-id="46202-604">How to: Pad a Number with Leading Zeroes</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="uint32.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="46202-605">一个数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="46202-605">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="46202-606">一个对象，它提供有关此实例的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="46202-606">An object that supplies culture-specific formatting information about this instance.</span></span></param>
        <summary><span data-ttu-id="46202-607">使用指定的格式和区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="46202-607">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="46202-608">此实例的值的字符串表示形式，由 <paramref name="format" /> 和 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="46202-608">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-609"><xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29> 方法通过使用指定区域性的 <xref:System.Globalization.NumberFormatInfo> 对象来设置指定格式的 <xref:System.UInt32> 值的格式。</span><span class="sxs-lookup"><span data-stu-id="46202-609">The <xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.UInt32> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="46202-610">如果要使用默认格式或区域性设置，请使用 <xref:System.UInt32.ToString%2A> 方法的其他重载，如下所示：</span><span class="sxs-lookup"><span data-stu-id="46202-610">If you want to use default format or culture settings, use the other overloads of the <xref:System.UInt32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="46202-611">使用格式</span><span class="sxs-lookup"><span data-stu-id="46202-611">To use format</span></span>|<span data-ttu-id="46202-612">对于区域性</span><span class="sxs-lookup"><span data-stu-id="46202-612">For culture</span></span>|<span data-ttu-id="46202-613">使用重载</span><span class="sxs-lookup"><span data-stu-id="46202-613">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="46202-614">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="46202-614">Default ("G") format</span></span>|<span data-ttu-id="46202-615">默认（当前）区域性</span><span class="sxs-lookup"><span data-stu-id="46202-615">Default (current) culture</span></span>|<xref:System.UInt32.ToString>|  
|<span data-ttu-id="46202-616">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="46202-616">Default ("G") format</span></span>|<span data-ttu-id="46202-617">特定区域性</span><span class="sxs-lookup"><span data-stu-id="46202-617">A specific culture</span></span>|<xref:System.UInt32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="46202-618">特定格式</span><span class="sxs-lookup"><span data-stu-id="46202-618">A specific format</span></span>|<span data-ttu-id="46202-619">默认（当前）区域性</span><span class="sxs-lookup"><span data-stu-id="46202-619">Default (current) culture</span></span>|<xref:System.UInt32.ToString%28System.String%29>|  
  
 <span data-ttu-id="46202-620">`format` 参数可以是任何有效的[标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings)，也可以是[自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)的任意组合。</span><span class="sxs-lookup"><span data-stu-id="46202-620">The `format` parameter can be any valid [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings), or any combination of [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span> <span data-ttu-id="46202-621">如果 `format` 等于 <xref:System.String.Empty?displayProperty=nameWithType> 或 `null`，则当前 <xref:System.UInt32> 对象的返回值将用常规格式说明符（"G"）进行格式设置。</span><span class="sxs-lookup"><span data-stu-id="46202-621">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt32> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="46202-622">如果 `format` 为任何其他值，则该方法将引发 <xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="46202-622">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="46202-623">.NET Framework 提供了广泛的格式设置支持，以下格式设置主题更详细地介绍了这些支持：</span><span class="sxs-lookup"><span data-stu-id="46202-623">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="46202-624">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings)和[自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="46202-624">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="46202-625">有关格式设置的详细信息，请参阅[格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="46202-625">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="46202-626">`provider` 参数是一个 <xref:System.IFormatProvider> 实现。</span><span class="sxs-lookup"><span data-stu-id="46202-626">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="46202-627">它的 <xref:System.IFormatProvider.GetFormat%2A> 方法返回一个 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供有关此方法返回的字符串格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="46202-627">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="46202-628">调用 <xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29> 方法时，它将调用 `provider` 参数的 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 方法，并向其传递一个表示 <xref:System.Globalization.NumberFormatInfo> 类型的 <xref:System.Type> 对象。</span><span class="sxs-lookup"><span data-stu-id="46202-628">When the <xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="46202-629">然后 <xref:System.IFormatProvider.GetFormat%2A> 方法返回 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供用于设置当前 <xref:System.UInt32> 值的格式的信息，如组分隔符符号或小数点符号。</span><span class="sxs-lookup"><span data-stu-id="46202-629">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information for formatting the current <xref:System.UInt32> value, such as the group separator symbol or the decimal point symbol.</span></span> <span data-ttu-id="46202-630">使用 `provider` 参数向 <xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29> 方法提供格式设置信息的方法有三种：</span><span class="sxs-lookup"><span data-stu-id="46202-630">There are three ways to use the `provider` parameter to supply formatting information to the <xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29> method:</span></span>  
  
-   <span data-ttu-id="46202-631">可以传递表示提供格式设置信息的区域性的 <xref:System.Globalization.CultureInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="46202-631">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="46202-632">它的 <xref:System.Globalization.CultureInfo.GetFormat%2A> 方法返回 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供该区域性的数字格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="46202-632">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="46202-633">可以传递提供数字格式设置信息的实际 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="46202-633">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="46202-634">（其 <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> 的实现只返回自身。）</span><span class="sxs-lookup"><span data-stu-id="46202-634">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="46202-635">可以传递实现 <xref:System.IFormatProvider>的自定义对象。</span><span class="sxs-lookup"><span data-stu-id="46202-635">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="46202-636">它的 <xref:System.IFormatProvider.GetFormat%2A> 方法实例化并返回提供格式设置信息的 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="46202-636">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="46202-637">如果 `null``provider`，则返回的字符串的格式将基于当前区域性的 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="46202-637">If `provider` is `null`, the formatting of the returned string is based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46202-638">下面的示例使用标准数值格式说明符和多个特定 <xref:System.Globalization.CultureInfo> 对象显示32位无符号整数值。</span><span class="sxs-lookup"><span data-stu-id="46202-638">The following example displays a 32-bit unsigned integer value by using the standard numeric format specifiers and a number of specific <xref:System.Globalization.CultureInfo> objects.</span></span>  
  
 [!code-csharp[System.UInt32.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.tostring/cs/tostring4.cs#4)]
 [!code-vb[System.UInt32.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.tostring/vb/tostring4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="46202-639"><paramref name="format" /> 参数无效。</span><span class="sxs-lookup"><span data-stu-id="46202-639">The <paramref name="format" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.UInt32.Parse(System.String)" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="46202-640">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="46202-640">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/how-to-pad-a-number-with-leading-zeros"><span data-ttu-id="46202-641">如何：用前导零填充数字</span><span class="sxs-lookup"><span data-stu-id="46202-641">How to: Pad a Number with Leading Zeros</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-cs/"><span data-ttu-id="46202-642">示例： .NET Core WinForms 格式设置实用工具C#（）</span><span class="sxs-lookup"><span data-stu-id="46202-642">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-vb/"><span data-ttu-id="46202-643">示例： .NET Core WinForms 格式设置实用工具（Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="46202-643">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = default, IFormatProvider provider = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="uint32.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="46202-644">&gt;此方法返回时，此实例的值设置为字符范围格式。</span><span class="sxs-lookup"><span data-stu-id="46202-644">&gt;When this method returns, this instance's value formatted as a span of characters.</span></span></param>
        <param name="charsWritten"><span data-ttu-id="46202-645">此方法返回时，为写入到 <paramref name="destination" /> 的字符数。</span><span class="sxs-lookup"><span data-stu-id="46202-645">When this method returns, the number of characters that were written in <paramref name="destination" />.</span></span></param>
        <param name="format"><span data-ttu-id="46202-646">一个包含字符的范围，这些字符表示定义可接受的 <paramref name="destination" /> 格式的标准或自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="46202-646">A span containing the charactes that represent a standard or custom format string that defines the acceptable format for <paramref name="destination" />.</span></span></param>
        <param name="provider"><span data-ttu-id="46202-647">一个可选对象，提供有关 <paramref name="destination" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="46202-647">An optional object that supplies culture-specific formatting information for <paramref name="destination" />.</span></span></param>
        <summary><span data-ttu-id="46202-648">尝试将当前无符号整数数字实例的值的格式设置为提供的字符范围。</span><span class="sxs-lookup"><span data-stu-id="46202-648">Tries to format the value of the current unsigned integer number instance into the provided span of characters.</span></span></summary>
        <returns><span data-ttu-id="46202-649">如果格式设置成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46202-649"><see langword="true" /> if the formatting was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="46202-650">尝试将数字的字符串表示形式转换为等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="46202-650">Tries to convert the string representation of a number to its 32-bit unsigned integer equivalent.</span></span> <span data-ttu-id="46202-651">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="46202-651">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.UInt32.Parse" />
        <remarks>To be added.</remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out uint result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] unsigned int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.TryParse(System.ReadOnlySpan{System.Char},System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::UInt32 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * uint32 -&gt; bool" Usage="System.uint32.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="result" Type="System.UInt32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="46202-652">一个范围，包含表示要转换的数字的字符。</span><span class="sxs-lookup"><span data-stu-id="46202-652">A span containing the characters that represent the number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="46202-653">当此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 中所含数字等效的 32 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="46202-653">When this method returns, contains the 32-bit unsigned integer value that is equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="46202-654">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式不正确，或者表示的数字小于 <see cref="F:System.UInt32.MinValue" /> 或大于 <see cref="F:System.UInt32.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="46202-654">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span> <span data-ttu-id="46202-655">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="46202-655">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="46202-656">尝试将数字的范围表示形式转换为其等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="46202-656">Tries to convert the span representation of a number to its 32-bit unsigned integer equivalent.</span></span> <span data-ttu-id="46202-657">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="46202-657">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="46202-658">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46202-658"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out uint result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] unsigned int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.TryParse(System.String,System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::UInt32 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * uint32 -&gt; bool" Usage="System.uint32.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.UInt32" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="46202-659">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="46202-659">A string that represents the number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="46202-660">当此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 中所含数字等效的 32 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="46202-660">When this method returns, contains the 32-bit unsigned integer value that is equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="46202-661">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式不正确，或者表示的数字小于 <see cref="F:System.UInt32.MinValue" /> 或大于 <see cref="F:System.UInt32.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="46202-661">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span> <span data-ttu-id="46202-662">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="46202-662">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="46202-663">尝试将数字的字符串表示形式转换为等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="46202-663">Tries to convert the string representation of a number to its 32-bit unsigned integer equivalent.</span></span> <span data-ttu-id="46202-664">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="46202-664">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="46202-665">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46202-665"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-666"><xref:System.UInt32.TryParse%2A> 方法与 <xref:System.UInt32.Parse%2A> 方法类似，不同之处在于，如果转换失败，则它不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="46202-666">The <xref:System.UInt32.TryParse%2A> method is like the <xref:System.UInt32.Parse%2A> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="46202-667">如果 `s` 无效且无法成功分析，则此方法无需使用异常处理来测试 <xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="46202-667">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="46202-668">`s` 参数应为以下形式的十进制数的字符串表示形式：</span><span class="sxs-lookup"><span data-stu-id="46202-668">The `s` parameter should be the string representation of a decimal number in the following form:</span></span>  
  
 <span data-ttu-id="46202-669">[*ws*][*sign*]*数字*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="46202-669">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="46202-670">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="46202-670">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="46202-671">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="46202-671">The following table describes each element.</span></span>  
  
|<span data-ttu-id="46202-672">元素</span><span class="sxs-lookup"><span data-stu-id="46202-672">Element</span></span>|<span data-ttu-id="46202-673">说明</span><span class="sxs-lookup"><span data-stu-id="46202-673">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="46202-674">*ws*</span><span class="sxs-lookup"><span data-stu-id="46202-674">*ws*</span></span>|<span data-ttu-id="46202-675">可选空白。</span><span class="sxs-lookup"><span data-stu-id="46202-675">Optional white space.</span></span>|  
|<span data-ttu-id="46202-676">*sign*</span><span class="sxs-lookup"><span data-stu-id="46202-676">*sign*</span></span>|<span data-ttu-id="46202-677">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="46202-677">An optional sign.</span></span> <span data-ttu-id="46202-678">有效的符号字符由当前区域性的 <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> 和 <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> 属性确定。</span><span class="sxs-lookup"><span data-stu-id="46202-678">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="46202-679">*digits*</span><span class="sxs-lookup"><span data-stu-id="46202-679">*digits*</span></span>|<span data-ttu-id="46202-680">十进制数字的序列，范围为0到9。</span><span class="sxs-lookup"><span data-stu-id="46202-680">A sequence of decimal digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="46202-681">使用 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 样式对 `s` 参数进行解释。</span><span class="sxs-lookup"><span data-stu-id="46202-681">The `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="46202-682">除十进制数字外，只允许使用前导符号和尾随空格。</span><span class="sxs-lookup"><span data-stu-id="46202-682">In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</span></span> <span data-ttu-id="46202-683">若要显式定义具有可在 `s`中显示的区域性特定格式设置信息的样式元素，请调用 <xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-683">To explicitly define the style elements with the culture-specific formatting information that can be present in `s`, call the <xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="46202-684">`s` 参数指定的字符串不能包含任何组分隔符或小数分隔符，并且它不能包含小数部分。</span><span class="sxs-lookup"><span data-stu-id="46202-684">The string specified by the `s` parameter cannot contain any group separators or decimal separator, and it cannot have a fractional portion.</span></span>  
  
 <span data-ttu-id="46202-685">使用当前系统区域性的 <xref:System.Globalization.NumberFormatInfo> 对象中的格式设置信息对 `s` 参数进行分析。</span><span class="sxs-lookup"><span data-stu-id="46202-685">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object for the current system culture.</span></span> <span data-ttu-id="46202-686">有关详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="46202-686">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="46202-687">此重载将 `s` 参数中的所有数字解释为十进制数字。</span><span class="sxs-lookup"><span data-stu-id="46202-687">This overload interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="46202-688">若要分析十六进制数的字符串表示形式，请改为调用 <xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29> 重载。</span><span class="sxs-lookup"><span data-stu-id="46202-688">To parse the string representation of a hexadecimal number, call the <xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29> overload instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46202-689">下面的示例为字符串数组中的每个元素调用一次 <xref:System.UInt32.TryParse%28System.String%2CSystem.UInt32%40%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-689">The following example calls the <xref:System.UInt32.TryParse%28System.String%2CSystem.UInt32%40%29> method once for each element in a string array.</span></span>  
  
 [!code-csharp-interactive[System.UInt32.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.UInt32.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int64.TryParse(System.String,System.Int64@)" />
        <altmember cref="M:System.UInt32.Parse(System.String)" />
        <altmember cref="M:System.UInt32.ToString" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="46202-690">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="46202-690">Parsing Numeric Strings in .NET</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-cs/"><span data-ttu-id="46202-691">示例： .NET Core WinForms 格式设置实用工具C#（）</span><span class="sxs-lookup"><span data-stu-id="46202-691">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-vb/"><span data-ttu-id="46202-692">示例： .NET Core WinForms 格式设置实用工具（Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="46202-692">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out uint result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt32 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider * uint32 -&gt; bool" Usage="System.uint32.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="result" Type="System.UInt32" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="46202-693">一个范围，包含表示要转换的数字的字符。</span><span class="sxs-lookup"><span data-stu-id="46202-693">A span containing the characters that represent the number to convert.</span></span> <span data-ttu-id="46202-694">该范围使用由 <paramref name="style" /> 参数指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="46202-694">The span is interpreted by using the style specified by the <paramref name="style" /> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="46202-695">枚举值的一个按位组合，指示 <paramref name="s" /> 所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="46202-695">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="46202-696">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="46202-696">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="46202-697">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="46202-697">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="46202-698">当此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 中所含数字等效的 32 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="46202-698">When this method returns, contains the 32-bit unsigned integer value equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="46202-699">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式不符合 <paramref name="style" />，或者表示的数字小于 <see cref="F:System.UInt32.MinValue" /> 或大于 <see cref="F:System.UInt32.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="46202-699">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span> <span data-ttu-id="46202-700">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="46202-700">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="46202-701">尝试将指定样式和区域性特定格式的数字的范围表示形式转换为其等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="46202-701">Tries to convert the span representation of a number in a specified style and culture-specific format to its 32-bit unsigned integer equivalent.</span></span> <span data-ttu-id="46202-702">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="46202-702">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="46202-703">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46202-703"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out uint result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt32 % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider * uint32 -&gt; bool" Usage="System.uint32.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.UInt32" RefType="out" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="46202-704">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="46202-704">A string that represents the number to convert.</span></span> <span data-ttu-id="46202-705">该字符串使用由 <paramref name="style" /> 参数指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="46202-705">The string is interpreted by using the style specified by the <paramref name="style" /> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="46202-706">枚举值的一个按位组合，指示 <paramref name="s" /> 所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="46202-706">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="46202-707">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="46202-707">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="46202-708">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="46202-708">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="46202-709">当此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 中所含数字等效的 32 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="46202-709">When this method returns, contains the 32-bit unsigned integer value equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="46202-710">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式不符合 <paramref name="style" />，或者表示的数字小于 <see cref="F:System.UInt32.MinValue" /> 或大于 <see cref="F:System.UInt32.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="46202-710">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span> <span data-ttu-id="46202-711">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="46202-711">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="46202-712">尝试将数字的指定样式和区域性特定格式的字符串表示形式转换为其等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="46202-712">Tries to convert the string representation of a number in a specified style and culture-specific format to its 32-bit unsigned integer equivalent.</span></span> <span data-ttu-id="46202-713">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="46202-713">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="46202-714">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="46202-714"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46202-715"><xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29> 方法与 <xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> 方法类似，不同之处在于，如果转换失败，则它不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="46202-715">The <xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29> method is like the <xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="46202-716">如果 `s` 无效且无法成功分析，则此方法无需使用异常处理来测试 <xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="46202-716">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="46202-717">`style` 参数定义在 `s` 参数中允许的样式元素（如空格或正号或负号），以便分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="46202-717">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="46202-718">它必须是 <xref:System.Globalization.NumberStyles> 枚举中的位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="46202-718">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="46202-719">根据 `style`的值，`s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="46202-719">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="46202-720">[*ws*][*$*][*sign*][*数字*，]*位数*[。*fractional_digits*] [E [*sign*]*exponential_digits*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="46202-720">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="46202-721">方括号（[和]）中的项是可选的。</span><span class="sxs-lookup"><span data-stu-id="46202-721">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="46202-722">或者，如果 `style` 参数包括 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>，则 `s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="46202-722">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="46202-723">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="46202-723">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="46202-724">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="46202-724">The following table describes each element.</span></span>  
  
|<span data-ttu-id="46202-725">元素</span><span class="sxs-lookup"><span data-stu-id="46202-725">Element</span></span>|<span data-ttu-id="46202-726">说明</span><span class="sxs-lookup"><span data-stu-id="46202-726">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="46202-727">*ws*</span><span class="sxs-lookup"><span data-stu-id="46202-727">*ws*</span></span>|<span data-ttu-id="46202-728">可选空白。</span><span class="sxs-lookup"><span data-stu-id="46202-728">Optional white space.</span></span> <span data-ttu-id="46202-729">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 标志，`s` 或者如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 标志，则在 `s` 的开头可以出现空白。</span><span class="sxs-lookup"><span data-stu-id="46202-729">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="46202-730">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="46202-730">A culture-specific currency symbol.</span></span> <span data-ttu-id="46202-731">其在字符串中的位置由 `provider` 参数的 <xref:System.IFormatProvider.GetFormat%2A> 方法返回的 <xref:System.Globalization.NumberFormatInfo> 对象的 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> 属性定义。</span><span class="sxs-lookup"><span data-stu-id="46202-731">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="46202-732">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 标志，货币符号可以出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="46202-732">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="46202-733">*sign*</span><span class="sxs-lookup"><span data-stu-id="46202-733">*sign*</span></span>|<span data-ttu-id="46202-734">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="46202-734">An optional sign.</span></span> <span data-ttu-id="46202-735">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 标志，则符号会出现在 `s` 的开头，如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 标志，则它可以出现在 `s` 的末尾。</span><span class="sxs-lookup"><span data-stu-id="46202-735">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="46202-736">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 标志，则可以在 `s` 中使用括号来表示负值。</span><span class="sxs-lookup"><span data-stu-id="46202-736">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="46202-737">但是，如果存在负号，`s` 只能表示值零，分析操作才能成功。</span><span class="sxs-lookup"><span data-stu-id="46202-737">However, if the negative sign is present, `s` can only represent the value zero for the parse operation to succeed.</span></span>|  
|<span data-ttu-id="46202-738">*digits*</span><span class="sxs-lookup"><span data-stu-id="46202-738">*digits*</span></span>|<span data-ttu-id="46202-739">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="46202-739">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="46202-740">*、*</span><span class="sxs-lookup"><span data-stu-id="46202-740">*,*</span></span>|<span data-ttu-id="46202-741">区域性特定的组分隔符。</span><span class="sxs-lookup"><span data-stu-id="46202-741">A culture-specific group separator.</span></span> <span data-ttu-id="46202-742">如果 `style` 包括 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 标志，则 `provider` 指定的区域性的组分隔符可以出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="46202-742">The group separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="46202-743">*。*</span><span class="sxs-lookup"><span data-stu-id="46202-743">*.*</span></span>|<span data-ttu-id="46202-744">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="46202-744">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="46202-745">如果 `style` 包括 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 标志，则 `provider` 指定的区域性的小数点符号可以出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="46202-745">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="46202-746">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="46202-746">*fractional_digits*</span></span>|<span data-ttu-id="46202-747">数字0的一个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="46202-747">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="46202-748">仅当 `style` 包含 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 标志时，小数位才能出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="46202-748">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="46202-749">E</span><span class="sxs-lookup"><span data-stu-id="46202-749">E</span></span>|<span data-ttu-id="46202-750">"E" 或 "E" 字符，指示值以指数（科学型）表示法表示。</span><span class="sxs-lookup"><span data-stu-id="46202-750">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="46202-751">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 标志，则 `s` 参数可以表示指数表示法中的数字。</span><span class="sxs-lookup"><span data-stu-id="46202-751">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="46202-752">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="46202-752">*exponential_digits*</span></span>|<span data-ttu-id="46202-753">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="46202-753">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="46202-754">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 标志，则 `s` 参数可以表示指数表示法中的数字。</span><span class="sxs-lookup"><span data-stu-id="46202-754">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="46202-755">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="46202-755">*hexdigits*</span></span>|<span data-ttu-id="46202-756">从0到 f 的十六进制数字序列，或者从0到 F。</span><span class="sxs-lookup"><span data-stu-id="46202-756">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="46202-757">无论 `style` 参数的值是什么，分析操作都将忽略 `s` 中任何终止的 NUL （U + 0000）字符。</span><span class="sxs-lookup"><span data-stu-id="46202-757">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="46202-758">仅包含十进制数字的字符串（对应于 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 标志）始终分析成功。</span><span class="sxs-lookup"><span data-stu-id="46202-758">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="46202-759">大多数其余 <xref:System.Globalization.NumberStyles> 成员控制可能存在但不需要存在于此输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="46202-759">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="46202-760">下表指示单个 <xref:System.Globalization.NumberStyles> 成员如何影响可能出现在 `s`中的元素。</span><span class="sxs-lookup"><span data-stu-id="46202-760">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="46202-761">非复合 `NumberStyles` 值</span><span class="sxs-lookup"><span data-stu-id="46202-761">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="46202-762">除了数字以外，还允许在值中使用元素</span><span class="sxs-lookup"><span data-stu-id="46202-762">Elements permitted in value in addition to digits</span></span>|  
|------------------------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="46202-763">仅十进制数字。</span><span class="sxs-lookup"><span data-stu-id="46202-763">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="46202-764">小数点（*.*）和*fractional_digits*元素。</span><span class="sxs-lookup"><span data-stu-id="46202-764">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="46202-765">但*fractional_digits*只能包含一个或多个0位数，或者该方法返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="46202-765">However, *fractional_digits* must consist of only one or more 0 digits, or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="46202-766">"E" 或 "E" 字符（指示指数表示法）以及*exponential_digits*。</span><span class="sxs-lookup"><span data-stu-id="46202-766">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span> <span data-ttu-id="46202-767">如果 `s` 表示指数表示法中的数字，则它不能包含非零的小数部分。</span><span class="sxs-lookup"><span data-stu-id="46202-767">If `s` represents a number in exponential notation, it cannot have a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="46202-768">`s`开头的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="46202-768">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="46202-769">`s`末尾的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="46202-769">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="46202-770">*数字*前面的*sign*元素。</span><span class="sxs-lookup"><span data-stu-id="46202-770">The *sign* element before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="46202-771">*数字*后的*符号*元素。</span><span class="sxs-lookup"><span data-stu-id="46202-771">The *sign* element after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="46202-772">用括号括起零数值的*符号*元素。</span><span class="sxs-lookup"><span data-stu-id="46202-772">The *sign* element in the form of parentheses enclosing a zero numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="46202-773">组分隔符（*，*）元素。</span><span class="sxs-lookup"><span data-stu-id="46202-773">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="46202-774">货币（*$*）元素。</span><span class="sxs-lookup"><span data-stu-id="46202-774">The currency (*$*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="46202-775">所有元素。</span><span class="sxs-lookup"><span data-stu-id="46202-775">All elements.</span></span> <span data-ttu-id="46202-776">但是，`s` 不能表示十六进制数或以指数表示法表示的数字。</span><span class="sxs-lookup"><span data-stu-id="46202-776">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="46202-777">`s`开头或结尾处的*ws*元素，在 `s`开头处进行签名，并在小数点（*.*）符号处进行*签名*。</span><span class="sxs-lookup"><span data-stu-id="46202-777">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="46202-778">`s` 参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="46202-778">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="46202-779">*Ws*、 *sign*、group 分隔符（*，*）和小数点（*.*）元素。</span><span class="sxs-lookup"><span data-stu-id="46202-779">The *ws*, *sign*, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="46202-780">所有元素。</span><span class="sxs-lookup"><span data-stu-id="46202-780">All elements.</span></span> <span data-ttu-id="46202-781">但 `s` 不能表示十六进制数。</span><span class="sxs-lookup"><span data-stu-id="46202-781">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="46202-782">如果使用 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 标志，则 `s` 必须是十六进制值。</span><span class="sxs-lookup"><span data-stu-id="46202-782">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="46202-783">`style` 中的唯一其他标志 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 并 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="46202-783">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46202-784">（<xref:System.Globalization.NumberStyles> 枚举具有复合样式，<xref:System.Globalization.NumberStyles.HexNumber>，它包含两个空白标志。）</span><span class="sxs-lookup"><span data-stu-id="46202-784">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="46202-785">如果 `s` 是十六进制数的字符串表示形式，则它的前面不能有将其视为十六进制数的任何修饰（如 `0x` 或 `&h`）。</span><span class="sxs-lookup"><span data-stu-id="46202-785">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="46202-786">这将导致转换失败。</span><span class="sxs-lookup"><span data-stu-id="46202-786">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="46202-787">`provider` 参数是一个 <xref:System.IFormatProvider> 实现。</span><span class="sxs-lookup"><span data-stu-id="46202-787">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="46202-788">它的 <xref:System.IFormatProvider.GetFormat%2A> 方法返回一个 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供有关 `s`格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="46202-788">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="46202-789">`provider` 参数可以是以下任一项：</span><span class="sxs-lookup"><span data-stu-id="46202-789">The `provider` parameter can be any one of the following:</span></span>  
  
-   <span data-ttu-id="46202-790">一个 <xref:System.Globalization.CultureInfo> 对象，该对象表示提供格式设置信息的区域性。</span><span class="sxs-lookup"><span data-stu-id="46202-790">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="46202-791">它的 <xref:System.Globalization.CultureInfo.GetFormat%2A> 方法返回 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供该区域性的数字格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="46202-791">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="46202-792">提供数字格式设置信息的 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="46202-792">A <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="46202-793">（其 <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> 的实现只返回自身。）</span><span class="sxs-lookup"><span data-stu-id="46202-793">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="46202-794">一个实现 <xref:System.IFormatProvider>的自定义对象。</span><span class="sxs-lookup"><span data-stu-id="46202-794">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="46202-795">它的 <xref:System.IFormatProvider.GetFormat%2A> 方法实例化并返回提供格式设置信息的 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="46202-795">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="46202-796">如果 `null``provider`，则使用当前区域性的 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="46202-796">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46202-797">下面的示例使用多个不同的字符串和 <xref:System.Globalization.NumberStyles> 值调用 <xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="46202-797">The following example calls the <xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29> method with a number of different strings and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt32.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.tryparse/cs/tryparse2.cs#2)]
 [!code-vb[System.UInt32.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.tryparse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int64.TryParse(System.String,System.Int64@)" />
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46202-798"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="46202-798"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="46202-799">-或-</span><span class="sxs-lookup"><span data-stu-id="46202-799">-or-</span></span> 
 <span data-ttu-id="46202-800"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="46202-800"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.UInt32.Parse(System.String)" />
        <altmember cref="M:System.UInt32.ToString" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="46202-801">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="46202-801">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
