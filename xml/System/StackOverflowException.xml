<Type Name="StackOverflowException" FullName="System.StackOverflowException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="51f9cccd0b1ac9c82626690f193ab580afa0ffb9" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86600741" /></Metadata><TypeSignature Language="C#" Value="public sealed class StackOverflowException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit StackOverflowException extends System.SystemException" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.StackOverflowException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StackOverflowException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class StackOverflowException sealed : SystemException" />
  <TypeSignature Language="F#" Value="type StackOverflowException = class&#xA;    inherit SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit StackOverflowException extends System.SystemException" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1aafb-101">因包含的嵌套方法调用过多而导致执行堆栈溢出时引发的异常。</span><span class="sxs-lookup"><span data-stu-id="1aafb-101">The exception that is thrown when the execution stack overflows because it contains too many nested method calls.</span></span> <span data-ttu-id="1aafb-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="1aafb-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1aafb-103">`StackOverflowException` 对于执行堆栈溢出错误引发，通常在非常深或未绑定递归时引发。</span><span class="sxs-lookup"><span data-stu-id="1aafb-103">`StackOverflowException` is thrown for execution stack overflow errors, typically in case of a very deep or unbounded recursion.</span></span> <span data-ttu-id="1aafb-104">因此，请确保您的代码没有无限循环或无限递归。</span><span class="sxs-lookup"><span data-stu-id="1aafb-104">So make sure your code doesn't have an infinite loop or infinite recursion.</span></span>
  
 <span data-ttu-id="1aafb-105">`StackOverflowException` 使用 HRESULT COR_E_STACKOVERFLOW，其值为0x800703E9。</span><span class="sxs-lookup"><span data-stu-id="1aafb-105">`StackOverflowException` uses the HRESULT COR_E_STACKOVERFLOW, which has the value 0x800703E9.</span></span> <span data-ttu-id="1aafb-106"><xref:System.Reflection.Emit.OpCodes.Localloc>中间语言 (IL) 指令引发 `StackOverflowException` 。</span><span class="sxs-lookup"><span data-stu-id="1aafb-106">The <xref:System.Reflection.Emit.OpCodes.Localloc> intermediate language (IL) instruction throws `StackOverflowException`.</span></span> <span data-ttu-id="1aafb-107">有关对象的初始属性值的列表 `StackOverflowException` ，请参见 <xref:System.StackOverflowException.%23ctor%2A> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="1aafb-107">For a list of initial property values for a `StackOverflowException` object, see the <xref:System.StackOverflowException.%23ctor%2A> constructors.</span></span>  
  
 <span data-ttu-id="1aafb-108">从 .NET Framework 2.0 开始，不能 `StackOverflowException` 使用块捕获对象 `try` / `catch` ，并且在默认情况下会终止相应的进程。</span><span class="sxs-lookup"><span data-stu-id="1aafb-108">Starting with the .NET Framework 2.0, you can't catch a `StackOverflowException` object with a `try`/`catch` block, and the corresponding process is terminated by default.</span></span> <span data-ttu-id="1aafb-109">因此，您应该编写代码来检测和阻止堆栈溢出。</span><span class="sxs-lookup"><span data-stu-id="1aafb-109">Consequently, you should write your code to detect and prevent a stack overflow.</span></span> <span data-ttu-id="1aafb-110">例如，如果您的应用程序依赖于递归，则使用计数器或状态条件来终止递归循环。</span><span class="sxs-lookup"><span data-stu-id="1aafb-110">For example, if your app depends on recursion, use a counter or a state condition to terminate the recursive loop.</span></span>
<span data-ttu-id="1aafb-111">有关此方法的说明，请参阅 " [示例](#examples) " 部分。</span><span class="sxs-lookup"><span data-stu-id="1aafb-111">See the [Examples](#examples) section for an illustration of this technique.</span></span>
 
> [!NOTE]
>  <span data-ttu-id="1aafb-112">将 <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> 特性应用于引发的方法 `StackOverflowException` 不起作用。</span><span class="sxs-lookup"><span data-stu-id="1aafb-112">Applying the <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> attribute to a method that throws a `StackOverflowException` has no effect.</span></span> <span data-ttu-id="1aafb-113">你仍无法处理用户代码中的异常。</span><span class="sxs-lookup"><span data-stu-id="1aafb-113">You still cannot handle the exception from user code.</span></span>

 <span data-ttu-id="1aafb-114">如果你的应用程序承载公共语言运行时 (CLR) ，则它可以指定 CLR 应卸载发生堆栈溢出异常的应用程序域，并让相应的进程继续。</span><span class="sxs-lookup"><span data-stu-id="1aafb-114">If your app hosts the common language runtime (CLR), it can specify that the CLR should unload the application domain where the stack overflow exception occurs and let the corresponding process continue.</span></span> <span data-ttu-id="1aafb-115">有关详细信息，请参阅 [ICLRPolicyManager 接口](/dotnet/framework/unmanaged-api/hosting/iclrpolicymanager-interface)。</span><span class="sxs-lookup"><span data-stu-id="1aafb-115">For more information, see [ICLRPolicyManager Interface](/dotnet/framework/unmanaged-api/hosting/iclrpolicymanager-interface).</span></span>

## Examples

 <span data-ttu-id="1aafb-116">下面的示例使用计数器，以确保对方法的递归调用次数 `Execute` 不超过 MAX_RECURSIVE_CALLS 常量定义的最大值。</span><span class="sxs-lookup"><span data-stu-id="1aafb-116">The following example uses a counter to ensure that the number of recursive calls to the `Execute` method do not exceed a maximum defined by the MAX_RECURSIVE_CALLS constant.</span></span>
  
 [!code-csharp[System.StackOverflowException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.stackoverflowexception.class/cs/example1a.cs#1)]
 [!code-vb[System.StackOverflowException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.stackoverflowexception.class/vb/example1a.vb#1)]  

 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="/dotnet/standard/exceptions/"><span data-ttu-id="1aafb-117">处理和引发异常</span><span class="sxs-lookup"><span data-stu-id="1aafb-117">Handling and Throwing Exceptions</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1aafb-118">初始化 <see cref="T:System.StackOverflowException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1aafb-118">Initializes a new instance of the <see cref="T:System.StackOverflowException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackOverflowException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StackOverflowException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackOverflowException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1aafb-119">初始化 <see cref="T:System.StackOverflowException" /> 类的新实例，将新实例的 <see cref="P:System.Exception.Message" /> 属性设置为系统提供的描述错误的消息，如“所请求的操作导致堆栈溢出”。</span><span class="sxs-lookup"><span data-stu-id="1aafb-119">Initializes a new instance of the <see cref="T:System.StackOverflowException" /> class, setting the <see cref="P:System.Exception.Message" /> property of the new instance to a system-supplied message that describes the error, such as "The requested operation caused a stack overflow."</span></span> <span data-ttu-id="1aafb-120">此消息会考虑当前系统区域性。</span><span class="sxs-lookup"><span data-stu-id="1aafb-120">This message takes into account the current system culture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1aafb-121">下表显示了 <xref:System.StackOverflowException> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="1aafb-121">The following table shows the initial property values for an instance of <xref:System.StackOverflowException>.</span></span>  
  
|<span data-ttu-id="1aafb-122">properties</span><span class="sxs-lookup"><span data-stu-id="1aafb-122">Property</span></span>|<span data-ttu-id="1aafb-123">值</span><span class="sxs-lookup"><span data-stu-id="1aafb-123">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="1aafb-124">`null`.</span><span class="sxs-lookup"><span data-stu-id="1aafb-124">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="1aafb-125">本地化的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="1aafb-125">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackOverflowException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StackOverflowException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackOverflowException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new StackOverflowException : string -&gt; StackOverflowException" Usage="new System.StackOverflowException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="1aafb-126">描述该错误的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="1aafb-126">A <see cref="T:System.String" /> that describes the error.</span></span> <span data-ttu-id="1aafb-127">消息的内容被设计为人可理解的形式。</span><span class="sxs-lookup"><span data-stu-id="1aafb-127">The content of message is intended to be understood by humans.</span></span> <span data-ttu-id="1aafb-128">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="1aafb-128">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span></param>
        <summary><span data-ttu-id="1aafb-129">用指定的错误消息初始化 <see cref="T:System.StackOverflowException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1aafb-129">Initializes a new instance of the <see cref="T:System.StackOverflowException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1aafb-130">下表显示了 <xref:System.StackOverflowException> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="1aafb-130">The following table shows the initial property values for an instance of <xref:System.StackOverflowException>.</span></span>  
  
|<span data-ttu-id="1aafb-131">properties</span><span class="sxs-lookup"><span data-stu-id="1aafb-131">Property</span></span>|<span data-ttu-id="1aafb-132">值</span><span class="sxs-lookup"><span data-stu-id="1aafb-132">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="1aafb-133">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="1aafb-133">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="1aafb-134">错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="1aafb-134">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackOverflowException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StackOverflowException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackOverflowException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new StackOverflowException : string * Exception -&gt; StackOverflowException" Usage="new System.StackOverflowException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="1aafb-135">解释异常原因的错误消息。</span><span class="sxs-lookup"><span data-stu-id="1aafb-135">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="1aafb-136">导致当前异常的异常。</span><span class="sxs-lookup"><span data-stu-id="1aafb-136">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="1aafb-137">如果 <paramref name="innerException" /> 参数不是 null 引用（在 Visual Basic 中为 <see langword="Nothing" />），则在处理内部异常的 <see langword="catch" /> 块中引发当前异常。</span><span class="sxs-lookup"><span data-stu-id="1aafb-137">If the <paramref name="innerException" /> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="1aafb-138">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.StackOverflowException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1aafb-138">Initializes a new instance of the <see cref="T:System.StackOverflowException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1aafb-139">因前一个异常而直接引发的异常可以在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。</span><span class="sxs-lookup"><span data-stu-id="1aafb-139">An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="1aafb-140"><xref:System.Exception.InnerException%2A> 属性返回传递到构造函数中的相同值，或者如果 `Nothing` 属性不向构造函数提供内部异常值，则为空引用（在 Visual Basic 中为 <xref:System.Exception.InnerException%2A>）。</span><span class="sxs-lookup"><span data-stu-id="1aafb-140">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="1aafb-141">下表显示了 <xref:System.StackOverflowException> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="1aafb-141">The following table shows the initial property values for an instance of <xref:System.StackOverflowException>.</span></span>  
  
|<span data-ttu-id="1aafb-142">properties</span><span class="sxs-lookup"><span data-stu-id="1aafb-142">Property</span></span>|<span data-ttu-id="1aafb-143">“值”</span><span class="sxs-lookup"><span data-stu-id="1aafb-143">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="1aafb-144">内部异常引用。</span><span class="sxs-lookup"><span data-stu-id="1aafb-144">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="1aafb-145">错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="1aafb-145">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="/dotnet/standard/exceptions/"><span data-ttu-id="1aafb-146">处理和引发异常</span><span class="sxs-lookup"><span data-stu-id="1aafb-146">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
