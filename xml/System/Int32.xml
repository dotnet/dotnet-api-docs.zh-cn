<Type Name="Int32" FullName="System.Int32">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cd1fc2f3fa063ea34f8da9919278af23d8c64216" /><Meta Name="ms.sourcegitcommit" Value="943c8cdbe5b47c6c296a6f4b73038bbd43da0dd2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/12/2021" /><Meta Name="ms.locfileid" Value="100329587" /></Metadata><TypeSignature Language="C#" Value="public struct Int32 : IComparable, IComparable&lt;int&gt;, IConvertible, IEquatable&lt;int&gt;, IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit int32 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;int32&gt;, class System.IConvertible, class System.IEquatable`1&lt;int32&gt;, class System.IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Int32" />
  <TypeSignature Language="VB.NET" Value="Public Structure Int32&#xA;Implements IComparable, IComparable(Of Integer), IConvertible, IEquatable(Of Integer), IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public value class Int32 : IComparable, IComparable&lt;int&gt;, IConvertible, IEquatable&lt;int&gt;, IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type int = struct&#xA;    interface IConvertible&#xA;    interface IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C#" Value="public struct Int32 : IComparable, IConvertible, IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit int32 extends System.ValueType implements class System.IComparable, class System.IConvertible, class System.IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public Structure Int32&#xA;Implements IComparable, IConvertible, IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public value class Int32 : IComparable, IConvertible, IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type int = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit int32 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;int32&gt;, class System.IConvertible, class System.IEquatable`1&lt;int32&gt;, class System.IFormattable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public struct Int32 : IComparable, IComparable&lt;int&gt;, IEquatable&lt;int&gt;, IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit int32 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;int32&gt;, class System.IEquatable`1&lt;int32&gt;, class System.IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="VB.NET" Value="Public Structure Int32&#xA;Implements IComparable, IComparable(Of Integer), IEquatable(Of Integer), IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="C++ CLI" Value="public value class Int32 : IComparable, IComparable&lt;int&gt;, IEquatable&lt;int&gt;, IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="F#" Value="type int = struct&#xA;    interface IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.IComparable&lt;System.Int32&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.IEquatable&lt;System.Int32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8b4f7-101">表示 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-101">Represents a 32-bit signed integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-102"><xref:System.Int32> 是一个不可变的值类型，它表示具有从负 2147483648 (范围内的值的有符号整数，该整数由 <xref:System.Int32.MinValue?displayProperty=nameWithType> 常数) 到正 2147483647 (，由 <xref:System.Int32.MaxValue?displayProperty=nameWithType> 常数表示。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-102"><xref:System.Int32> is an immutable value type that represents signed integers with values that range from negative 2,147,483,648 (which is represented by the <xref:System.Int32.MinValue?displayProperty=nameWithType> constant) through positive 2,147,483,647 (which is represented by the <xref:System.Int32.MaxValue?displayProperty=nameWithType> constant.</span></span> <span data-ttu-id="8b4f7-103">.NET Framework 还包括一个未签名的32位整数值类型， <xref:System.UInt32> 该类型表示范围为0到4294967295的值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-103">The .NET Framework also includes an unsigned 32-bit integer value type, <xref:System.UInt32>, which represents values that range from 0 to 4,294,967,295.</span></span>  
  
## <a name="instantiating-an-int32-value"></a><span data-ttu-id="8b4f7-104">实例化 Int32 值</span><span class="sxs-lookup"><span data-stu-id="8b4f7-104">Instantiating an Int32 Value</span></span>  
 <span data-ttu-id="8b4f7-105">可以 <xref:System.Int32> 通过多种方式实例化值：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-105">You can instantiate an <xref:System.Int32> value in several ways:</span></span>  
  
-   <span data-ttu-id="8b4f7-106">您可以声明一个 <xref:System.Int32> 变量，并为其分配一个数据类型范围内的文本整数值 <xref:System.Int32> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-106">You can declare an <xref:System.Int32> variable and assign it a literal integer value that is within the range of the <xref:System.Int32> data type.</span></span> <span data-ttu-id="8b4f7-107">下面的示例声明了两个 <xref:System.Int32> 变量，并以这种方式为它们赋值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-107">The following example declares two <xref:System.Int32> variables and assigns them values in this way.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#1)]
     [!code-vb[System.Int32.Instantiation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#1)]  
  
-   <span data-ttu-id="8b4f7-108">可以分配一个整数类型的值，该类型的范围是类型的子集 <xref:System.Int32> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-108">You can assign the value of an integer type whose range is a subset of the <xref:System.Int32> type.</span></span> <span data-ttu-id="8b4f7-109">这是一种扩大转换，不需要在 c # 中使用强制转换运算符，也不需要 Visual Basic 中的转换方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-109">This is a widening conversion that does not require a cast operator in C# or a conversion method in Visual Basic.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#4)]
     [!code-vb[System.Int32.Instantiation#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#4)]  
  
-   <span data-ttu-id="8b4f7-110">可以指定数值类型的值，该数值类型的范围超出了该 <xref:System.Int32> 类型的范围。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-110">You can assign the value of a numeric type whose range exceeds that of the <xref:System.Int32> type.</span></span> <span data-ttu-id="8b4f7-111">这是一个收缩转换，因此，它需要在 c # 中使用强制转换运算符，并在中使用转换方法（如果 `Option Strict` 启用了 Visual Basic）。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-111">This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if `Option Strict` is on.</span></span> <span data-ttu-id="8b4f7-112">如果数值是 <xref:System.Single> 包含小数部分的、 <xref:System.Double> 或 <xref:System.Decimal> 值，则其小数部分的处理取决于执行转换的编译器。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-112">If the numeric value is a <xref:System.Single>, <xref:System.Double>, or <xref:System.Decimal> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion.</span></span> <span data-ttu-id="8b4f7-113">下面的示例执行收缩转换，以将多个数值赋给 <xref:System.Int32> 变量。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-113">The following example performs narrowing conversions to assign several numeric values to <xref:System.Int32> variables.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#2)]
     [!code-vb[System.Int32.Instantiation#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#2)]  
  
-   <span data-ttu-id="8b4f7-114">可以调用类的方法将 <xref:System.Convert> 任何支持的类型转换为 <xref:System.Int32> 值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-114">You can call a method of the <xref:System.Convert> class to convert any supported type to an <xref:System.Int32> value.</span></span> <span data-ttu-id="8b4f7-115">这是可能的，因为 <xref:System.Int32> 支持 <xref:System.IConvertible> 接口。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-115">This is possible because <xref:System.Int32> supports the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8b4f7-116">下面的示例演示如何将值数组转换 <xref:System.Decimal> 为 <xref:System.Int32> 值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-116">The following example illustrates the conversion of an array of <xref:System.Decimal> values to <xref:System.Int32> values.</span></span>  
  
     :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs" interactive="try-dotnet-method" id="Snippet4":::
     :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb" id="Snippet4":::
  
-   <span data-ttu-id="8b4f7-117">可以调用 <xref:System.Int32.Parse%2A> 或方法将 <xref:System.Int32.TryParse%2A> 值的字符串表示形式转换 <xref:System.Int32> 为 <xref:System.Int32> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-117">You can call the <xref:System.Int32.Parse%2A> or <xref:System.Int32.TryParse%2A> method to convert the string representation of an <xref:System.Int32> value to an <xref:System.Int32>.</span></span> <span data-ttu-id="8b4f7-118">字符串可以包含 decimal 或十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-118">The string can contain either decimal or hexadecimal digits.</span></span> <span data-ttu-id="8b4f7-119">下面的示例通过使用 decimal 和十六进制字符串说明了分析操作。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-119">The following example illustrates the parse operation by using both a decimal and a hexadecimal string.</span></span>  
  
     :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs" interactive="try-dotnet-method" id="Snippet3":::
     :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb" id="Snippet3":::

## <a name="performing-operations-on-int32-values"></a><span data-ttu-id="8b4f7-120">对 Int32 值执行运算</span><span class="sxs-lookup"><span data-stu-id="8b4f7-120">Performing Operations on Int32 Values</span></span>  
 <span data-ttu-id="8b4f7-121"><xref:System.Int32>类型支持标准数学运算，如加法、减法、除法、乘法、求反和一元求反。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-121">The <xref:System.Int32> type supports standard mathematical operations such as addition, subtraction, division, multiplication, negation, and unary negation.</span></span> <span data-ttu-id="8b4f7-122">与其他整型类型类似，该 <xref:System.Int32> 类型还支持按位 `AND` 、 `OR` 、 `XOR` 、左移和右移运算符。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-122">Like the other integral types, the <xref:System.Int32> type also supports the bitwise `AND`, `OR`, `XOR`, left shift, and right shift operators.</span></span>  
  
 <span data-ttu-id="8b4f7-123">可以使用标准数字运算符比较两个 <xref:System.Int32> 值，也可以调用 <xref:System.Int32.CompareTo%2A> 或 <xref:System.Int32.Equals%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-123">You can use the standard numeric operators to compare two <xref:System.Int32> values, or you can call the <xref:System.Int32.CompareTo%2A> or <xref:System.Int32.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="8b4f7-124">您还可以调用类的成员 <xref:System.Math> 来执行各种数值运算，包括获取数字的绝对值、计算从整数相除的商和余数、确定两个整数的最大值或最小值、获取数字的符号以及对数字进行舍入。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-124">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.</span></span>  
  
## <a name="representing-an-int32-as-a-string"></a><span data-ttu-id="8b4f7-125">将 Int32 表示为字符串</span><span class="sxs-lookup"><span data-stu-id="8b4f7-125">Representing an Int32 as a String</span></span>  
 <span data-ttu-id="8b4f7-126"><xref:System.Int32>类型为标准和自定义数字格式字符串提供完全支持。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-126">The <xref:System.Int32> type provides full support for standard and custom numeric format strings.</span></span> <span data-ttu-id="8b4f7-127"> (有关详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)、 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings)和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。 ) </span><span class="sxs-lookup"><span data-stu-id="8b4f7-127">(For more information, see [Formatting Types](/dotnet/standard/base-types/formatting-types), [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings), and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).)</span></span>  
  
 <span data-ttu-id="8b4f7-128">若要将 <xref:System.Int32> 值设置为不带前导零的整数字符串，可以调用无参数 <xref:System.Int32.ToString> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-128">To format an <xref:System.Int32> value as an integral string with no leading zeros, you can call the parameterless <xref:System.Int32.ToString> method.</span></span> <span data-ttu-id="8b4f7-129">通过使用 "D" 格式说明符，还可以在字符串表示形式中包含指定数目的前导零。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-129">By using the "D" format specifier, you can also include a specified number of leading zeros in the string representation.</span></span> <span data-ttu-id="8b4f7-130">通过使用 "N" 格式说明符，你可以包含组分隔符，并指定要在数字的字符串表示形式中显示的小数位数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-130">By using the "N" format specifier, you can include group separators and specify the number of decimal digits to appear in the string representation of the number.</span></span> <span data-ttu-id="8b4f7-131">通过使用 "X" 格式说明符，可将 <xref:System.Int32> 值表示为十六进制字符串。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-131">By using the "X" format specifier, you can represent an <xref:System.Int32> value as a hexadecimal string.</span></span> <span data-ttu-id="8b4f7-132">下面的示例 <xref:System.Int32> 采用这四种方式设置值数组中的元素的格式。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-132">The following example formats the elements in an array of <xref:System.Int32> values in these four ways.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs" interactive="try-dotnet-method" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb" id="Snippet1":::
  
 <span data-ttu-id="8b4f7-133">还可以 <xref:System.Int32> 通过调用 <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> 方法并提供作为方法的第二个参数的基数，将值的格式设置为二进制、八进制、十进制或十六进制字符串。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-133">You can also format an <xref:System.Int32> value as a binary, octal, decimal, or hexadecimal string by calling the <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> method and supplying the base as the method's second parameter.</span></span> <span data-ttu-id="8b4f7-134">下面的示例调用此方法以显示整数值数组的二进制、八进制和十六进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-134">The following example calls this method to display the binary, octal, and hexadecimal representations of an array of integer values.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs" interactive="try-dotnet-method" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb" id="Snippet2":::
  
## <a name="working-with-non-decimal-32-bit-integer-values"></a><span data-ttu-id="8b4f7-135">使用非十进制32位整数值</span><span class="sxs-lookup"><span data-stu-id="8b4f7-135">Working with Non-Decimal 32-Bit Integer Values</span></span>  
 <span data-ttu-id="8b4f7-136">除了使用单个整数作为十进制值，还可以使用整数值执行位运算，或使用整数值的二进制或十六进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-136">In addition to working with individual integers as decimal values, you may want to perform bitwise operations with integer values, or work with the binary or hexadecimal representations of integer values.</span></span> <span data-ttu-id="8b4f7-137"><xref:System.Int32> 值用31位表示，使用三十秒位作为符号位。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-137"><xref:System.Int32> values are represented in 31 bits, with the thirty-second bit used as a sign bit.</span></span> <span data-ttu-id="8b4f7-138">正值是使用符号和量表示法表示的。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-138">Positive values are represented by using sign-and-magnitude representation.</span></span> <span data-ttu-id="8b4f7-139">负值的表示形式分为两种。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-139">Negative values are in two's complement representation.</span></span> <span data-ttu-id="8b4f7-140">当你对值执行按位运算 <xref:System.Int32> 或使用单个位时，这一点很重要。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-140">This is important to keep in mind when you perform bitwise operations on <xref:System.Int32> values or when you work with individual bits.</span></span> <span data-ttu-id="8b4f7-141">若要对任意两个非十进制值执行数字、布尔或比较运算，这两个值必须使用相同的表示形式。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-141">In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="8b4f7-142">此类型的所有成员都是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-142">All members of this type are thread safe.</span></span> <span data-ttu-id="8b4f7-143">看似修改实例状态的成员实际上返回用新值初始化的新实例。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-143">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="8b4f7-144">与任何其他类型一样，读取和写入包含此类型的实例的共享变量时，必须通过锁保护以保证线程安全。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-144">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.UInt32" />
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-cs/"><span data-ttu-id="8b4f7-145">示例：.NET Core WinForms 格式设置实用工具 (C#)</span><span class="sxs-lookup"><span data-stu-id="8b4f7-145">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-vb/"><span data-ttu-id="8b4f7-146">示例：.NET Core WinForms 格式设置实用工具 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8b4f7-146">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8b4f7-147">将此实例与指定的 32 位有符号整数进行比较并返回对其相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-147">Compares this instance to a specified 32-bit signed integer and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.CompareTo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(int value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : int -&gt; int&#xA;override this.CompareTo : int -&gt; int" Usage="int.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8b4f7-148">要比较的整数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-148">An integer to compare.</span></span></param>
        <summary><span data-ttu-id="8b4f7-149">将此实例与指定的 32 位有符号整数进行比较并返回对其相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-149">Compares this instance to a specified 32-bit signed integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-150">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-150">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="8b4f7-151">返回值</span><span class="sxs-lookup"><span data-stu-id="8b4f7-151">Return Value</span></span> 
 </term><description> <span data-ttu-id="8b4f7-152">说明</span><span class="sxs-lookup"><span data-stu-id="8b4f7-152">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="8b4f7-153">小于零</span><span class="sxs-lookup"><span data-stu-id="8b4f7-153">Less than zero</span></span> 
 </term><description> <span data-ttu-id="8b4f7-154">此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-154">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8b4f7-155">零</span><span class="sxs-lookup"><span data-stu-id="8b4f7-155">Zero</span></span> 
 </term><description> <span data-ttu-id="8b4f7-156">此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-156">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8b4f7-157">大于零</span><span class="sxs-lookup"><span data-stu-id="8b4f7-157">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="8b4f7-158">此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-158">This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-159">此方法实现 <xref:System.IComparable%601?displayProperty=nameWithType> 接口，且执行方式略优于 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> 方法，因为它不必将 `value` 参数转换为对象。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-159">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="8b4f7-160">根据您的编程语言，可以编写一个方法，在 <xref:System.Int32.CompareTo%2A> 此方法中，参数类型 (比实例类型更窄) 位。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-160">Depending on your programming language, it might be possible to code a <xref:System.Int32.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="8b4f7-161">这是可能的，因为某些编程语言会执行将参数表示为类型的隐式扩大转换，该类型的位数与实例的位数一样多。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-161">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="8b4f7-162">例如，假设实例类型为 <xref:System.Int32> ，而参数类型为 <xref:System.Byte> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-162">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="8b4f7-163">Microsoft c # 编译器生成表示参数值的指令 <xref:System.Int32> ，然后生成一个 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> 方法，该方法将实例的值 <xref:System.Int32> 与 <xref:System.Int32> 参数表示形式进行比较。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-163">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32>, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="8b4f7-164">请查阅编程语言的文档，以确定其编译器是否对数值类型执行隐式扩大转换。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-164">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b4f7-165">下面的示例演示 <xref:System.Int32.CompareTo%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-165">The following example demonstrates the <xref:System.Int32.CompareTo%28System.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8b4f7-166">除了显示方法为四个不同的比较返回的值外，还会将返回值转换为自定义枚举的成员 `Comparison` （其值也将显示）。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-166">In addition to displaying the value returned by the method for four different comparisons, it converts the return value to a member of the custom `Comparison` enumeration, whose value it also displays.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.CompareTo/cs/CompareTo1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.CompareTo/vb/CompareTo1.vb" id="Snippet1":::  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Int32.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object? value);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="int.CompareTo value" />
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8b4f7-167">要比较的对象，或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-167">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8b4f7-168">将此实例与指定对象进行比较并返回一个对二者的相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-168">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-169">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-169">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="8b4f7-170">返回值</span><span class="sxs-lookup"><span data-stu-id="8b4f7-170">Return Value</span></span> 
 </term><description> <span data-ttu-id="8b4f7-171">说明</span><span class="sxs-lookup"><span data-stu-id="8b4f7-171">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="8b4f7-172">小于零</span><span class="sxs-lookup"><span data-stu-id="8b4f7-172">Less than zero</span></span> 
 </term><description> <span data-ttu-id="8b4f7-173">此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-173">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8b4f7-174">零</span><span class="sxs-lookup"><span data-stu-id="8b4f7-174">Zero</span></span> 
 </term><description> <span data-ttu-id="8b4f7-175">此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-175">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8b4f7-176">大于零</span><span class="sxs-lookup"><span data-stu-id="8b4f7-176">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="8b4f7-177">此实例大于 <paramref name="value" />，或 <paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-177">This instance is greater than <paramref name="value" />, or <paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-178">的任何实例 <xref:System.Int32> ，无论其值如何，都视为大于 `null` 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-178">Any instance of <xref:System.Int32>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="8b4f7-179">`value` 必须为 `null` 或的实例 <xref:System.Int32> ; 否则，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-179">`value` must be `null` or an instance of <xref:System.Int32>; otherwise, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8b4f7-180"><paramref name="value" /> 不是 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-180"><paramref name="value" /> is not an <see cref="T:System.Int32" />.</span></span></exception>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Int32.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8b4f7-181">返回一个值，该值指示此实例是否等于指定的 <see cref="T:System.Int32" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-181">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Int32" /> value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (int obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(int32 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Equals(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(int obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : int -&gt; bool" Usage="int.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8b4f7-182">要与此实例进行比较的 <see cref="T:System.Int32" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-182">An <see cref="T:System.Int32" /> value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="8b4f7-183">返回一个值，该值指示此实例是否等于指定的 <see cref="T:System.Int32" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-183">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Int32" /> value.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-184">如果 <see langword="true" /> 的值与此实例相同，则为 <paramref name="obj" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-184"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-185">此方法实现 <xref:System.IEquatable%601?displayProperty=nameWithType> 接口，并且执行的效果略优于， <xref:System.Int32.Equals%28System.Object%29?displayProperty=nameWithType> 因为无需将 `obj` 参数转换为对象。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-185">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Int32.Equals%28System.Object%29?displayProperty=nameWithType> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="8b4f7-186">编译器重载决策可能会考虑两种方法重载行为中的明显差异 <see cref="M:System.Int32.Equals(System.Int32)" /> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-186">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int32.Equals(System.Int32)" /> method overloads.</span></span> <span data-ttu-id="8b4f7-187">如果定义了参数与之间的隐式转换， <paramref name="obj" /> <see cref="T:System.Int32" /> 并且参数未键入为 <see cref="T:System.Object" /> ，则编译器会执行隐式转换并调用 <see cref="M:System.Int32.Equals(System.Int32)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-187">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int32" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int32.Equals(System.Int32)" /> method.</span></span> <span data-ttu-id="8b4f7-188">否则，它们调用 <see cref="M:System.Int32.Equals(System.Object)" /> 方法， <see langword="false" /> 如果其 <paramref name="obj" /> 参数不是值，则总是返回 <see cref="T:System.Int32" /> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-188">Otherwise, they call the <see cref="M:System.Int32.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int32" /> value.</span></span> <span data-ttu-id="8b4f7-189">下面的示例演示两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-189">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="8b4f7-190">对于 <see cref="T:System.Byte" /> 、 <see cref="T:System.Int16" /> 、 <see cref="T:System.SByte" /> 和 <see cref="T:System.UInt16" /> 值，第一次比较返回，这是 <see langword="true" /> 因为编译器会自动执行扩大转换并调用 <see cref="M:System.Int32.Equals(System.Int32)" /> 方法，而第二次比较返回， <see langword="false" /> 因为编译器调用 <see cref="M:System.Int32.Equals(System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-190">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.SByte" />, and <see cref="T:System.UInt16" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int32.Equals(System.Int32)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int32.Equals(System.Object)" /> method.</span></span>  

<span data-ttu-id="8b4f7-191">：：： code language = "csharp" source = "~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs" interactive = "dotnet" id = "Snippet1"：：：：：： code language = "vb" source = "~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb" id = "Snippet1"：：：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-191">:::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs" interactive="try-dotnet" id="Snippet1"::: :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb" id="Snippet1":::</span></span>

          </para></block>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="int.Equals obj" />
      <MemberSignature Language="C#" Value="public override bool Equals (object? obj);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8b4f7-192">与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-192">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="8b4f7-193">返回一个值，该值指示此实例是否等于指定的对象。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-193">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-194">如果 <see langword="true" /> 是 <paramref name="obj" /> 的实例并且等于此实例的值，则为 <see cref="T:System.Int32" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-194"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Int32" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8b4f7-195">下面的示例阐释了在的 `Equals` 上下文中的用法 `Int32` ，比较两个 `int` 值，并在 `true` 它们表示相同的数字时返回; `false` 否则，将返回。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-195">The following example illustrates the use of `Equals` in the context of `Int32`, comparing two `int` values and returning `true` if they represent the same number, or `false` if they do not.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/Int32_Equals/CPP/int32_equals.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/Int32_Equals/CS/int32_equals.cs" interactive="try-dotnet-method" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/Int32_Equals/VB/int32_equals.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="8b4f7-196">编译器重载决策可能会考虑两种方法重载行为中的明显差异 <see cref="M:System.Int32.Equals(System.Int32)" /> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-196">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int32.Equals(System.Int32)" /> method overloads.</span></span> <span data-ttu-id="8b4f7-197">如果定义了参数与之间的隐式转换， <paramref name="obj" /> <see cref="T:System.Int32" /> 并且参数未键入为 <see cref="T:System.Object" /> ，则编译器会执行隐式转换并调用 <see cref="M:System.Int32.Equals(System.Int32)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-197">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int32" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int32.Equals(System.Int32)" /> method.</span></span> <span data-ttu-id="8b4f7-198">否则，它们调用 <see cref="M:System.Int32.Equals(System.Object)" /> 方法， <see langword="false" /> 如果其 <paramref name="obj" /> 参数不是值，则总是返回 <see cref="T:System.Int32" /> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-198">Otherwise, they call the <see cref="M:System.Int32.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int32" /> value.</span></span> <span data-ttu-id="8b4f7-199">下面的示例演示两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-199">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="8b4f7-200">对于 <see cref="T:System.Byte" /> 、 <see cref="T:System.Int16" /> 、 <see cref="T:System.SByte" /> 和 <see cref="T:System.UInt16" /> 值，第一次比较返回，这是 <see langword="true" /> 因为编译器会自动执行扩大转换并调用 <see cref="M:System.Int32.Equals(System.Int32)" /> 方法，而第二次比较返回， <see langword="false" /> 因为编译器调用 <see cref="M:System.Int32.Equals(System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-200">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.SByte" />, and <see cref="T:System.UInt16" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int32.Equals(System.Int32)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int32.Equals(System.Object)" /> method.</span></span>  

<span data-ttu-id="8b4f7-201">：：： code language = "csharp" source = "~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs" interactive = "dotnet" id = "Snippet1"：：：：：： code language = "vb" source = "~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb" id = "Snippet1"：：：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-201">:::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs" interactive="try-dotnet" id="Snippet1"::: :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb" id="Snippet1":::</span></span>

          </para></block>
        <altmember cref="M:System.Int32.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="int.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b4f7-202">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-202">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-203">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-203">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="int.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b4f7-204">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-204">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-205">枚举常数 <see cref="F:System.TypeCode.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-205">The enumerated constant, <see cref="F:System.TypeCode.Int32" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const int MaxValue = 2147483647;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxValue = int32(2147483647)" />
      <MemberSignature Language="DocId" Value="F:System.Int32.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Integer  = 2147483647" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxValue = 2147483647;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : int" Usage="System.int.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2147483647</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8b4f7-206">表示 <see cref="T:System.Int32" /> 的最大可能值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-206">Represents the largest possible value of an <see cref="T:System.Int32" />.</span></span> <span data-ttu-id="8b4f7-207">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-207">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-208">此常量的值为 2147483647;即十六进制0x7FFFFFFF。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-208">The value of this constant is 2,147,483,647; that is, hexadecimal 0x7FFFFFFF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b4f7-209">下面的示例使用 <xref:System.Int32.MaxValue> 属性，以防止 <xref:System.OverflowException> 在转换为值时出现 <xref:System.Int32> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-209">The following example uses the <xref:System.Int32.MaxValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int32> value.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.int32.maxvalue/cpp/maxvalue1.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.maxvalue/cs/maxvalue1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.maxvalue/vb/maxvalue1.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int32.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const int MinValue = -2147483648;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinValue = int32(-2147483648)" />
      <MemberSignature Language="DocId" Value="F:System.Int32.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Integer  = -2147483648" />
      <MemberSignature Language="C++ CLI" Value="public: int MinValue = -2147483648;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : int" Usage="System.int.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2147483648</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8b4f7-210">表示 <see cref="T:System.Int32" /> 的最小可能值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-210">Represents the smallest possible value of <see cref="T:System.Int32" />.</span></span> <span data-ttu-id="8b4f7-211">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-211">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-212">此常量的值为-2147483648;即十六进制0x80000000。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-212">The value of this constant is -2,147,483,648; that is, hexadecimal 0x80000000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b4f7-213">下面的示例使用 <xref:System.Int32.MinValue> 属性，以防止 <xref:System.OverflowException> 在转换为值时出现 <xref:System.Int32> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-213">The following example uses the <xref:System.Int32.MinValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int32> value.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.int32.maxvalue/cpp/maxvalue1.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.maxvalue/cs/maxvalue1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.maxvalue/vb/maxvalue1.vb" id="Snippet1"::: 
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int32.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8b4f7-214">将数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-214">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.Int32.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; int" Usage="System.int.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8b4f7-215">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-215">A string containing a number to convert.</span></span></param>
        <summary><span data-ttu-id="8b4f7-216">将数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-216">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-217">与 <paramref name="s" /> 中包含的数字等效的 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-217">A 32-bit signed integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-218">`s`参数包含以下格式的编号：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-218">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="8b4f7-219">ws[sign] 位数 [ws]</span><span class="sxs-lookup"><span data-stu-id="8b4f7-219">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="8b4f7-220">方括号 ( [和] ) 中的项是可选的。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-220">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8b4f7-221">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-221">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8b4f7-222">元素</span><span class="sxs-lookup"><span data-stu-id="8b4f7-222">Element</span></span>|<span data-ttu-id="8b4f7-223">说明</span><span class="sxs-lookup"><span data-stu-id="8b4f7-223">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8b4f7-224">ws</span><span class="sxs-lookup"><span data-stu-id="8b4f7-224">ws</span></span>|<span data-ttu-id="8b4f7-225">可选空白。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-225">Optional white space.</span></span>|  
|<span data-ttu-id="8b4f7-226">签名</span><span class="sxs-lookup"><span data-stu-id="8b4f7-226">sign</span></span>|<span data-ttu-id="8b4f7-227">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-227">An optional sign.</span></span>|  
|<span data-ttu-id="8b4f7-228">位数</span><span class="sxs-lookup"><span data-stu-id="8b4f7-228">digits</span></span>|<span data-ttu-id="8b4f7-229">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-229">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="8b4f7-230">`s`使用样式对参数进行解释 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-230">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="8b4f7-231">除了十进制数字外，只允许使用前导和尾随空格以及前导符号。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-231">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="8b4f7-232">若要显式定义可出现在中的样式元素 `s` ，请使用 <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> 或 <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-232">To explicitly define the style elements that can be present in `s`, use either the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="8b4f7-233">`s`使用 <xref:System.Globalization.NumberFormatInfo> 为当前系统区域性初始化的对象中的格式设置信息分析参数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-233">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="8b4f7-234">有关详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-234">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="8b4f7-235">若要使用其他某个区域性的格式设置信息分析字符串，请使用 <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-235">To parse a string using the formatting information of some other culture, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b4f7-236">下面的示例演示如何使用方法将字符串值转换为32位带符号整数值 <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-236">The following example demonstrates how to convert a string value into a 32-bit signed integer value using the <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8b4f7-237">然后，将生成的整数值显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-237">The resulting integer value is then displayed to the console.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse1.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse1.vb" id="Snippet1"::: 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8b4f7-238"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-238"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8b4f7-239"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-239"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8b4f7-240"><paramref name="s" /> 表示一个小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-240"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="8b4f7-241">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="8b4f7-241">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; int" Usage="System.int.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8b4f7-242">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-242">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="8b4f7-243">枚举值的按位组合，用于指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-243">A bitwise combination of the enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="8b4f7-244">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-244">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="8b4f7-245">将指定样式的数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-245">Converts the string representation of a number in a specified style to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-246">与 <paramref name="s" /> 中指定的数字等效的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-246">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-247">`style`参数定义 (如空格、正号或负号符号或千位分隔符符号) 的样式元素，以便 `s` 分析操作成功的参数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-247">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, or the thousands separator symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="8b4f7-248">它必须是枚举中的位标志的组合 <xref:System.Globalization.NumberStyles> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-248">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="8b4f7-249">根据的值 `style` ， `s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-249">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="8b4f7-250">ws[$]表明[数字，] 位数 [.fractional_digits] [e [sign] exponential_digits] [ws]</span><span class="sxs-lookup"><span data-stu-id="8b4f7-250">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="8b4f7-251">或者，如果 `style` 包括 <xref:System.Globalization.NumberStyles.AllowHexSpecifier> ：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-251">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="8b4f7-252">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="8b4f7-252">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="8b4f7-253">方括号 ( [和] ) 中的项是可选的。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-253">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8b4f7-254">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-254">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8b4f7-255">元素</span><span class="sxs-lookup"><span data-stu-id="8b4f7-255">Element</span></span>|<span data-ttu-id="8b4f7-256">说明</span><span class="sxs-lookup"><span data-stu-id="8b4f7-256">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8b4f7-257">*ws*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-257">*ws*</span></span>|<span data-ttu-id="8b4f7-258">可选空白。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-258">Optional white space.</span></span> <span data-ttu-id="8b4f7-259">如果包含标志，则空格可以出现在的开头 `s` `style` <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> ，如果包含标志，则可以在的末尾出现空白 `s` `style` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-259">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="8b4f7-260">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-260">A culture-specific currency symbol.</span></span> <span data-ttu-id="8b4f7-261">其在字符串中的位置由 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> 当前区域性的和属性定义。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-261">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="8b4f7-262">`s`如果包含标志，则当前区域性的货币符号可以出现在中 `style` <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-262">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8b4f7-263">*sign*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-263">*sign*</span></span>|<span data-ttu-id="8b4f7-264">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-264">An optional sign.</span></span> <span data-ttu-id="8b4f7-265">如果包含标志，则符号可以出现在的开头 `s` `style` <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> ，如果包含标志，则它可以出现在的末尾 `s` `style` <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-265">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8b4f7-266">如果包含标志，则可以在中使用括号 `s` 来表示负值 `style` <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-266">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8b4f7-267">*位数*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-267">*digits*</span></span><br /><br /> <span data-ttu-id="8b4f7-268">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-268">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="8b4f7-269">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-269">*exponential_digits*</span></span>|<span data-ttu-id="8b4f7-270">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-270">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="8b4f7-271">对于 *fractional_digits*，只有数字0有效。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-271">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="8b4f7-272">*,*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-272">*,*</span></span>|<span data-ttu-id="8b4f7-273">区域性特定的千位分隔符。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-273">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="8b4f7-274">`s`如果包含标志，则当前区域性的千位分隔符可以出现在中 `style` <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-274">The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8b4f7-275">*.*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-275">*.*</span></span>|<span data-ttu-id="8b4f7-276">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-276">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="8b4f7-277">`s`如果包含标志，则当前区域性的小数点符号可以出现在中 `style` <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-277">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8b4f7-278">只有数字0才能作为小数位出现，以便分析操作成功;如果 *fractional_digits* 包含任何其他数字， <xref:System.OverflowException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-278">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="8b4f7-279">*e*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-279">*e*</span></span>|<span data-ttu-id="8b4f7-280">"E" 或 "E" 字符，指示值以指数表示法表示。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-280">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="8b4f7-281">`s`如果包含标志，则参数可以表示指数表示法中的数字 `style` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-281">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8b4f7-282">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-282">*hexdigits*</span></span>|<span data-ttu-id="8b4f7-283">从0到 f 的十六进制数字序列，或者从0到 F。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-283">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="8b4f7-284">`s`无论参数的值如何，分析操作都将忽略中任何终止的 NUL (U + 0000) 字符 `style` 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-284">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="8b4f7-285">只包含数字的字符串 (与样式相对应 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>) 始终在类型范围内分析成功 <xref:System.Int32> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-285">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfull if it is in the range of the <xref:System.Int32> type.</span></span> <span data-ttu-id="8b4f7-286">大多数其余 <xref:System.Globalization.NumberStyles> 成员控件元素在输入字符串中可能存在但不是必需的。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-286">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="8b4f7-287">下表指示各个成员如何 <xref:System.Globalization.NumberStyles> 影响可能出现在中的元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-287">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="8b4f7-288">NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="8b4f7-288">NumberStyles value</span></span>|<span data-ttu-id="8b4f7-289">除数字外允许在 s 中使用的元素</span><span class="sxs-lookup"><span data-stu-id="8b4f7-289">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="8b4f7-290">仅限 *数字* 元素。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-290">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="8b4f7-291">小数点 ( *。*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-291">The decimal point ( *.*</span></span> <span data-ttu-id="8b4f7-292">) 和 *小数位数* 元素。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-292">) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="8b4f7-293">`s`参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-293">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="8b4f7-294">开头的 *ws* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-294">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="8b4f7-295">末尾处的 *ws* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-295">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="8b4f7-296">开头的 *sign* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-296">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="8b4f7-297">末尾的 *sign* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-297">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="8b4f7-298">用括号括起数值的 *符号* 元素。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-298">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="8b4f7-299">千位分隔符 ( *，* ) 元素。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-299">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="8b4f7-300">*$* 元素。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-300">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="8b4f7-301">全部。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-301">All.</span></span> <span data-ttu-id="8b4f7-302">`s`参数不能表示十六进制数或以指数表示法表示的数字。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-302">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="8b4f7-303">在开头或结尾处的 *ws* 元素，在 `s` 的开头处进行 *签名* ， `s` 而小数点 ( *。*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-303">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point ( *.*</span></span> <span data-ttu-id="8b4f7-304">) 符号。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-304">) symbol.</span></span> <span data-ttu-id="8b4f7-305">`s`参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-305">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="8b4f7-306">`ws` (、 `sign` ) 和小数点 ( 的、千位分隔符 *。*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-306">The `ws`, `sign`, thousands separator ( *,* ), and decimal point ( *.*</span></span> <span data-ttu-id="8b4f7-307">) 元素。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-307">) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="8b4f7-308">除之外的所有样式都 `s` 不能表示十六进制数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-308">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="8b4f7-309">如果 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 使用标志，则 `s` 必须是不带前缀的十六进制值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-309">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="8b4f7-310">例如，"C9AF3" 分析成功，但 "0xC9AF3" 不能。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-310">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="8b4f7-311">可以与参数组合在一起的其他标志 `s` 是 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 和 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-311">The only other flags that can be combined with the `s` parameter it are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8b4f7-312">枚举 (<xref:System.Globalization.NumberStyles> 包含复合数字样式， <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType> 其中包含两个空格标志。 ) </span><span class="sxs-lookup"><span data-stu-id="8b4f7-312">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="8b4f7-313">`s`使用为 <xref:System.Globalization.NumberFormatInfo> 当前系统区域性初始化的对象中的格式设置信息分析参数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-313">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="8b4f7-314">若要指定其格式设置信息用于分析操作的区域性，请调用 <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 重载。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-314">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b4f7-315">下面的示例使用 <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> 方法分析多个值的字符串表示形式 <xref:System.Int32> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-315">The following example uses the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> method to parse the string representations of several <xref:System.Int32> values.</span></span> <span data-ttu-id="8b4f7-316">该示例的当前区域性为 en-us。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-316">The current culture for the example is en-US.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse2.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse2.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse2.vb" id="Snippet2":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8b4f7-317"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-317"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8b4f7-318"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-318"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="8b4f7-319">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8b4f7-319">-or-</span></span> 
 <span data-ttu-id="8b4f7-320"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-320"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8b4f7-321"><paramref name="s" /> 的格式不符合 <paramref name="style" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-321"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8b4f7-322"><paramref name="s" /> 表示一个小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-322"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
<span data-ttu-id="8b4f7-323">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8b4f7-323">-or-</span></span> 
 <span data-ttu-id="8b4f7-324"><paramref name="s" /> 包含非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-324"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
        <altmember cref="Overload:System.Int32.TryParse" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="8b4f7-325">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="8b4f7-325">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, IFormatProvider provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; int" Usage="System.int.Parse (s, provider)" />
      <MemberSignature Language="C#" Value="public static int Parse (string s, IFormatProvider? provider);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8b4f7-326">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-326">A string containing a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="8b4f7-327">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-327">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="8b4f7-328">将指定的区域性特定格式的数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-328">Converts the string representation of a number in a specified culture-specific format to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-329">与 <paramref name="s" /> 中指定的数字等效的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-329">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-330">此方法的重载 <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> 通常用于将可以多种方式设置格式的文本转换为 <xref:System.Int32> 值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-330">This overload of the <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to an <xref:System.Int32> value.</span></span> <span data-ttu-id="8b4f7-331">例如，它可用于将用户输入的文本转换为一个数字值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-331">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="8b4f7-332">`s`参数包含以下格式的编号：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-332">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="8b4f7-333">ws[sign] 位数 [ws]</span><span class="sxs-lookup"><span data-stu-id="8b4f7-333">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="8b4f7-334">方括号 ( [和] ) 中的项是可选的。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-334">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8b4f7-335">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-335">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8b4f7-336">元素</span><span class="sxs-lookup"><span data-stu-id="8b4f7-336">Element</span></span>|<span data-ttu-id="8b4f7-337">说明</span><span class="sxs-lookup"><span data-stu-id="8b4f7-337">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8b4f7-338">*ws*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-338">*ws*</span></span>|<span data-ttu-id="8b4f7-339">可选空白。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-339">Optional white space.</span></span>|  
|<span data-ttu-id="8b4f7-340">*sign*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-340">*sign*</span></span>|<span data-ttu-id="8b4f7-341">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-341">An optional sign.</span></span>|  
|<span data-ttu-id="8b4f7-342">*位数*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-342">*digits*</span></span>|<span data-ttu-id="8b4f7-343">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-343">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="8b4f7-344">`s`使用样式对参数进行解释 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-344">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="8b4f7-345">除了十进制数字外，只允许使用前导和尾随空格以及前导符号。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-345">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="8b4f7-346">若要显式定义可出现在中的样式元素 `s` ，请使用 <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-346">To explicitly define the style elements that can be present in `s`, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="8b4f7-347">`provider`参数是一个 <xref:System.IFormatProvider> 实现，如 <xref:System.Globalization.NumberFormatInfo> 或 <xref:System.Globalization.CultureInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-347">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="8b4f7-348">`provider`参数提供有关的格式的区域性特定信息 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-348">The `provider` parameter supplies culture-specific information about the format of `s`.</span></span> <span data-ttu-id="8b4f7-349">如果 `provider` 为 `null` ，则 <xref:System.Globalization.NumberFormatInfo> 使用当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-349">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b4f7-350">下面的示例是 Web 窗体的按钮单击事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-350">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="8b4f7-351">它使用属性返回的数组 <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> 来确定用户的区域设置。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-351">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="8b4f7-352">然后，它将实例化 <xref:System.Globalization.CultureInfo> 对应于该区域设置的对象。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-352">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="8b4f7-353">然后，将 <xref:System.Globalization.NumberFormatInfo> 属于该对象的对象 <xref:System.Globalization.CultureInfo> 传递给 <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> 方法，以将用户的输入转换为 <xref:System.Int32> 值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-353">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to an <xref:System.Int32> value.</span></span>  
  
 [!code-csharp[ParseMethod#4](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#4)]
 [!code-vb[ParseMethod#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8b4f7-354"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-354"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8b4f7-355"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-355"><paramref name="s" /> is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8b4f7-356"><paramref name="s" /> 表示一个小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-356"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
        <altmember cref="Overload:System.Int32.TryParse" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="8b4f7-357">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="8b4f7-357">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider? provider = default);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = Nothing) As Integer" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; int" Usage="System.int.Parse (s, style, provider)" />
      <MemberSignature Language="C#" Value="public static int Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = default);" FrameworkAlternate="netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8b4f7-358">一个范围，包含表示要转换的数字的字符。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-358">A span containing the characters representing the number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="8b4f7-359">枚举值的按位组合，用于指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-359">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="8b4f7-360">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-360">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="8b4f7-361">一个对象，用于提供有关 <paramref name="s" /> 格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-361">An object that supplies culture-specific information about the format of <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="8b4f7-362">将指定样式和区域性特定格式的数字的范围表示形式转换为其等效的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-362">Converts the span representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-363">与 <paramref name="s" /> 中指定的数字等效的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-363">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; int" Usage="System.int.Parse (s, style, provider)" />
      <MemberSignature Language="C#" Value="public static int Parse (string s, System.Globalization.NumberStyles style, IFormatProvider? provider);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8b4f7-364">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-364">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="8b4f7-365">枚举值的按位组合，用于指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-365">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="8b4f7-366">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-366">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="8b4f7-367">一个对象，用于提供有关 <paramref name="s" /> 格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-367">An object that supplies culture-specific information about the format of <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="8b4f7-368">将指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-368">Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-369">与 <paramref name="s" /> 中指定的数字等效的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-369">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-370">`style`参数定义在参数中允许的样式元素 (如空格或正号) ，以便 `s` 分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-370">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="8b4f7-371">它必须是枚举中的位标志的组合 <xref:System.Globalization.NumberStyles> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-371">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="8b4f7-372">根据的值 `style` ， `s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-372">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="8b4f7-373">ws[$]表明[数字，] 位数 [.fractional_digist] [e [sign] exponential_digits] [ws]</span><span class="sxs-lookup"><span data-stu-id="8b4f7-373">[ws][$][sign][digits,]digits[.fractional_digist][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="8b4f7-374">或者，如果 `style` 包括 <xref:System.Globalization.NumberStyles.AllowHexSpecifier> ：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-374">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="8b4f7-375">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="8b4f7-375">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="8b4f7-376">方括号 ( [和] ) 中的项是可选的。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-376">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8b4f7-377">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-377">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8b4f7-378">元素</span><span class="sxs-lookup"><span data-stu-id="8b4f7-378">Element</span></span>|<span data-ttu-id="8b4f7-379">说明</span><span class="sxs-lookup"><span data-stu-id="8b4f7-379">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8b4f7-380">*ws*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-380">*ws*</span></span>|<span data-ttu-id="8b4f7-381">可选空白。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-381">Optional white space.</span></span> <span data-ttu-id="8b4f7-382">如果包含标志，则空格可以出现在的开头 `s` `style` <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> ，如果包含标志，则可以在的末尾出现空白 `s` `style` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-382">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="8b4f7-383">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-383">A culture-specific currency symbol.</span></span> <span data-ttu-id="8b4f7-384">其在字符串中的位置由 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> <xref:System.Globalization.NumberFormatInfo> 参数方法返回的对象的属性定义 <xref:System.IFormatProvider.GetFormat%2A> `provider` 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-384">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="8b4f7-385">`s`如果包含标志，则货币符号可以出现在中 `style` <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-385">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8b4f7-386">*sign*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-386">*sign*</span></span>|<span data-ttu-id="8b4f7-387">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-387">An optional sign.</span></span> <span data-ttu-id="8b4f7-388">`s`如果包含 `style` <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 标志或的末尾 `s` `style` <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 包含标志，则符号可以出现在的开头。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-388">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8b4f7-389">如果包含标志，则可以在中使用括号 `s` 来表示负值 `style` <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-389">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8b4f7-390">*位数*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-390">*digits*</span></span><br /><br /> <span data-ttu-id="8b4f7-391">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-391">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="8b4f7-392">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-392">*exponential_digits*</span></span>|<span data-ttu-id="8b4f7-393">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-393">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="8b4f7-394">对于 *fractional_digits*，只有数字0有效。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-394">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="8b4f7-395">*,*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-395">*,*</span></span>|<span data-ttu-id="8b4f7-396">区域性特定的千位分隔符。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-396">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="8b4f7-397">如果包含标志，则指定的区域性的千位分隔符 `provider` 可以出现在中 `s` `style` <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-397">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8b4f7-398">*.*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-398">*.*</span></span>|<span data-ttu-id="8b4f7-399">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-399">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="8b4f7-400">如果包含标志，则指定的区域性的小数点符号 `provider` 可以出现在中 `s` `style` <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-400">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span><br /><br /> <span data-ttu-id="8b4f7-401">只有数字0才能作为小数位出现，以便分析操作成功;如果 *fractional_digits* 包含任何其他数字， <xref:System.OverflowException> 则会引发。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-401">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="8b4f7-402">*e*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-402">*e*</span></span>|<span data-ttu-id="8b4f7-403">"E" 或 "E" 字符，指示值以指数表示法表示。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-403">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="8b4f7-404">`s`如果包含标志，则参数可以表示指数表示法中的数字 `style` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-404">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8b4f7-405">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-405">*hexdigits*</span></span>|<span data-ttu-id="8b4f7-406">从0到 f 的十六进制数字序列，或者从0到 F。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-406">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="8b4f7-407">`s`无论参数的值如何，分析操作都将忽略中任何终止的 NUL (U + 0000) 字符 `style` 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-407">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="8b4f7-408">仅包含十进制数字的字符串 (与 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 样式) 总是在该类型的范围内分析成功 <xref:System.Int32> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-408">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully if it is in the range of the <xref:System.Int32> type.</span></span> <span data-ttu-id="8b4f7-409">大多数其余 <xref:System.Globalization.NumberStyles> 成员控件元素在此输入字符串中可能已存在但不是必需的。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-409">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="8b4f7-410">下表指示各个成员如何 <xref:System.Globalization.NumberStyles> 影响可能出现在中的元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-410">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="8b4f7-411">非复合 NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="8b4f7-411">Non-composite NumberStyles values</span></span>|<span data-ttu-id="8b4f7-412">除数字外允许在 s 中使用的元素</span><span class="sxs-lookup"><span data-stu-id="8b4f7-412">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-413">仅十进制数字。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-413">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-414">小数点 ( *。*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-414">The decimal point ( *.*</span></span> <span data-ttu-id="8b4f7-415">) 和 *小数位数* 元素。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-415">) and *fractional-digits* elements.</span></span> <span data-ttu-id="8b4f7-416">但是， *小数位数* 必须仅包含一个或多个0位数字，否则 <xref:System.OverflowException> 将引发。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-416">However, *fractional-digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-417">`s`参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-417">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="8b4f7-418">如果 `s` 表示指数表示法中的数字，则该数字必须表示数据类型范围内的一个整数，该数据类型的范围内 <xref:System.Int32> 没有非零的小数部分。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-418">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-419">开头的 *ws* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-419">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-420">末尾处的 *ws* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-420">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-421">正负号可以出现在 *数字* 之前。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-421">A positive sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-422">正负号可以出现在 *数字* 之后。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-422">A positive sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-423">用括号括起数值的 *符号* 元素。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-423">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-424">千位分隔符 ( *，* ) 元素。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-424">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-425">*$* 元素。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-425">The *$* element.</span></span>|  
  
 <span data-ttu-id="8b4f7-426">如果 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 使用标志，则 `s` 必须是不带前缀的十六进制值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-426">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="8b4f7-427">例如，"C9AF3" 分析成功，但 "0xC9AF3" 不能。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-427">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="8b4f7-428">中可以存在的唯一其他标志 `style` 是 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 和 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-428">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8b4f7-429"> (<xref:System.Globalization.NumberStyles> 枚举具有复合数字样式， <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType> 其中包含两个空格标志。 ) </span><span class="sxs-lookup"><span data-stu-id="8b4f7-429">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="8b4f7-430">`provider`参数是一个 <xref:System.IFormatProvider> 实现，如 <xref:System.Globalization.NumberFormatInfo> 或 <xref:System.Globalization.CultureInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-430">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="8b4f7-431">`provider`参数提供用于分析的特定于区域性的信息。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-431">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="8b4f7-432">如果 `provider` 为 `null` ，则 <xref:System.Globalization.NumberFormatInfo> 使用当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-432">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b4f7-433">下面的示例使用各种 `style` 和 `provider` 参数来分析值的字符串表示形式 <xref:System.Int32> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-433">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Int32> values.</span></span> <span data-ttu-id="8b4f7-434">它还说明了根据用于分析操作的格式设置信息的区域性，可解释相同字符串的一些不同方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-434">It also illustrates some of the different ways the same string can be interpreted depending on the culture whose formatting information is used for the parsing operation.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse3.cpp" id="Snippet3":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse3.cs" interactive="try-dotnet" id="Snippet3":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse3.vb" id="Snippet3":::  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8b4f7-435"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-435"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8b4f7-436"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-436"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="8b4f7-437">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8b4f7-437">-or-</span></span> 
 <span data-ttu-id="8b4f7-438"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-438"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8b4f7-439"><paramref name="s" /> 的格式不符合 <paramref name="style" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-439"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8b4f7-440"><paramref name="s" /> 表示一个小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-440"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
<span data-ttu-id="8b4f7-441">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8b4f7-441">-or-</span></span> 
 <span data-ttu-id="8b4f7-442"><paramref name="s" /> 包含非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-442"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="8b4f7-443">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="8b4f7-443">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberSignature Language="F#" Value="abstract member System.IComparable.CompareTo : obj -&gt; int&#xA;override this.System.IComparable.CompareTo : obj -&gt; int" Usage="int.System.IComparable.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8b4f7-444">要比较的对象，或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-444">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8b4f7-445">将此实例与指定对象进行比较并返回一个对二者的相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-445">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-446">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-446">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>
          <list type="table"><listheader><term><span data-ttu-id="8b4f7-447">返回值</span><span class="sxs-lookup"><span data-stu-id="8b4f7-447">Return Value</span></span></term><description><span data-ttu-id="8b4f7-448">说明</span><span class="sxs-lookup"><span data-stu-id="8b4f7-448">Description</span></span></description></listheader><item><term><span data-ttu-id="8b4f7-449">小于零</span><span class="sxs-lookup"><span data-stu-id="8b4f7-449">Less than zero</span></span></term><description><span data-ttu-id="8b4f7-450">此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-450">This instance is less than <paramref name="value" />.</span></span></description></item><item><term><span data-ttu-id="8b4f7-451">零</span><span class="sxs-lookup"><span data-stu-id="8b4f7-451">Zero</span></span></term><description><span data-ttu-id="8b4f7-452">此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-452">This instance is equal to <paramref name="value" />.</span></span></description></item><item><term><span data-ttu-id="8b4f7-453">大于零</span><span class="sxs-lookup"><span data-stu-id="8b4f7-453">Greater than zero</span></span></term><description><span data-ttu-id="8b4f7-454">此实例大于 <paramref name="value" />，或 <paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-454">This instance is greater than <paramref name="value" />, or <paramref name="value" /> is <see langword="null" />.</span></span></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="8b4f7-455">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-455">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b4f7-456">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-456">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span>

<span data-ttu-id="8b4f7-457">的任何实例 <xref:System.Int32> ，无论其值如何，都视为大于 `null` 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-457">Any instance of <xref:System.Int32>, regardless of its value, is considered greater than `null`.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8b4f7-458"><paramref name="value" /> 不是 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-458"><paramref name="value" /> is not an <see cref="T:System.Int32" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.GetTypeCode : unit -&gt; TypeCode&#xA;override this.System.IConvertible.GetTypeCode : unit -&gt; TypeCode" Usage="int.System.IConvertible.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b4f7-459">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-459">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-460">枚举常数 <see cref="F:System.TypeCode.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-460">The enumerated constant, <see cref="F:System.TypeCode.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="8b4f7-461">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-461">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b4f7-462">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-462">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToBoolean : IFormatProvider -&gt; bool&#xA;override this.System.IConvertible.ToBoolean : IFormatProvider -&gt; bool" Usage="int.System.IConvertible.ToBoolean provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8b4f7-463">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-463">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8b4f7-464">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-464">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-465">如果当前实例的值不为零，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-465"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-466">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-466">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b4f7-467">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-467">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8b4f7-468">建议的替代方法是调用 <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-468">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToByte : IFormatProvider -&gt; byte&#xA;override this.System.IConvertible.ToByte : IFormatProvider -&gt; byte" Usage="int.System.IConvertible.ToByte provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8b4f7-469">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-469">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8b4f7-470">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-470">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-471">当前实例的值，已转换为 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-471">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-472">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-472">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b4f7-473">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-473">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8b4f7-474">建议的替代方法是调用 <xref:System.Convert.ToByte%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-474">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToChar : IFormatProvider -&gt; char&#xA;override this.System.IConvertible.ToChar : IFormatProvider -&gt; char" Usage="int.System.IConvertible.ToChar provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8b4f7-475">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-475">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8b4f7-476">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-476">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-477">当前实例的值，已转换为 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-477">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-478">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-478">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b4f7-479">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-479">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8b4f7-480">建议的替代方法是调用 <xref:System.Convert.ToChar%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-480">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDateTime : IFormatProvider -&gt; DateTime&#xA;override this.System.IConvertible.ToDateTime : IFormatProvider -&gt; DateTime" Usage="int.System.IConvertible.ToDateTime provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8b4f7-481">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-481">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8b4f7-482">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-482">This conversion is not supported.</span></span> <span data-ttu-id="8b4f7-483">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-483">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-484">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-484">This conversion is not supported.</span></span> <span data-ttu-id="8b4f7-485">不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-485">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="8b4f7-486">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-486">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDecimal : IFormatProvider -&gt; decimal&#xA;override this.System.IConvertible.ToDecimal : IFormatProvider -&gt; decimal" Usage="int.System.IConvertible.ToDecimal provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8b4f7-487">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-487">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8b4f7-488">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-488">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-489">当前实例的值，已转换为 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-489">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-490">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-490">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b4f7-491">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-491">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8b4f7-492">建议的替代方法是调用 <xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-492">The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDouble : IFormatProvider -&gt; double&#xA;override this.System.IConvertible.ToDouble : IFormatProvider -&gt; double" Usage="int.System.IConvertible.ToDouble provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8b4f7-493">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-493">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8b4f7-494">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-494">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-495">当前实例的值，已转换为 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-495">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-496">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-496">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b4f7-497">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-497">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8b4f7-498">建议的替代方法是调用 <xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-498">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt16 : IFormatProvider -&gt; int16&#xA;override this.System.IConvertible.ToInt16 : IFormatProvider -&gt; int16" Usage="int.System.IConvertible.ToInt16 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8b4f7-499">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-499">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8b4f7-500">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-500">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-501">当前实例的值，已转换为 <see cref="T:System.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-501">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-502">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-502">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b4f7-503">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-503">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8b4f7-504">建议的替代方法是调用 <xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-504">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt32 : IFormatProvider -&gt; int&#xA;override this.System.IConvertible.ToInt32 : IFormatProvider -&gt; int" Usage="int.System.IConvertible.ToInt32 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8b4f7-505">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-505">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8b4f7-506">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-506">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-507">当前实例的值，未更改。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-507">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-508">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-508">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b4f7-509">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-509">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt64 : IFormatProvider -&gt; int64&#xA;override this.System.IConvertible.ToInt64 : IFormatProvider -&gt; int64" Usage="int.System.IConvertible.ToInt64 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8b4f7-510">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-510">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8b4f7-511">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-511">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-512">当前实例的值，已转换为 <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-512">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-513">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-513">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b4f7-514">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-514">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8b4f7-515">建议的替代方法是调用 <xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-515">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToSByte : IFormatProvider -&gt; sbyte&#xA;override this.System.IConvertible.ToSByte : IFormatProvider -&gt; sbyte" Usage="int.System.IConvertible.ToSByte provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8b4f7-516">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-516">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8b4f7-517">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-517">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-518">当前实例的值，已转换为 <see cref="T:System.SByte" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-518">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-519">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-519">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b4f7-520">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-520">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8b4f7-521">建议的替代方法是调用 <xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-521">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToSingle : IFormatProvider -&gt; single&#xA;override this.System.IConvertible.ToSingle : IFormatProvider -&gt; single" Usage="int.System.IConvertible.ToSingle provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8b4f7-522">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-522">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8b4f7-523">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-523">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-524">当前实例的值，已转换为 <see cref="T:System.Single" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-524">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-525">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-525">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b4f7-526">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-526">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8b4f7-527">建议的替代方法是调用 <xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-527">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToType (type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToType : Type * IFormatProvider -&gt; obj&#xA;override this.System.IConvertible.ToType : Type * IFormatProvider -&gt; obj" Usage="int.System.IConvertible.ToType (type, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="8b4f7-528">此 <see cref="T:System.Int32" /> 值要转换为的类型。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-528">The type to which to convert this <see cref="T:System.Int32" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="8b4f7-529">一个对象，用于提供有关返回值格式的信息。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-529">An object that provides information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="8b4f7-530">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-530">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-531">当前实例的值，已转换为 <paramref name="type" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-531">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-532">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-532">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b4f7-533">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-533">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8b4f7-534">建议的替代项是改为 `static` 调用 `Shared` Visual Basic) 方法中的 (<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-534">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt16 : IFormatProvider -&gt; uint16&#xA;override this.System.IConvertible.ToUInt16 : IFormatProvider -&gt; uint16" Usage="int.System.IConvertible.ToUInt16 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8b4f7-535">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-535">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8b4f7-536">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-536">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-537">当前实例的值，已转换为 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-537">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-538">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-538">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b4f7-539">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-539">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8b4f7-540">建议的替代方法是调用 <xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-540">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt32 : IFormatProvider -&gt; uint32&#xA;override this.System.IConvertible.ToUInt32 : IFormatProvider -&gt; uint32" Usage="int.System.IConvertible.ToUInt32 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8b4f7-541">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-541">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8b4f7-542">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-542">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-543">当前实例的值，已转换为 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-543">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-544">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-544">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b4f7-545">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-545">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8b4f7-546">建议的替代方法是调用 <xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-546">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt64 : IFormatProvider -&gt; uint64&#xA;override this.System.IConvertible.ToUInt64 : IFormatProvider -&gt; uint64" Usage="int.System.IConvertible.ToUInt64 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8b4f7-547">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-547">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8b4f7-548">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-548">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-549">当前实例的值，已转换为 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-549">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-550">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-550">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8b4f7-551">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-551">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8b4f7-552">建议的替代方法是调用 <xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-552">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8b4f7-553">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-553">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="int.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b4f7-554">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-554">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-555">此实例的值的字符串表示形式，由减号（如果值为负）和没有前导零的从 0 到 9 的数字序列组成。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-555">The string representation of the value of this instance, consisting of a negative sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-556"><xref:System.Int32.ToString>方法 <xref:System.Int32> 使用当前区域性的对象设置默认 ( "G" 或常规) 格式的值的格式 <xref:System.Globalization.NumberFormatInfo> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-556">The <xref:System.Int32.ToString> method formats an <xref:System.Int32> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="8b4f7-557">如果要指定其他格式或区域性，请使用方法的其他重载 <xref:System.Int32.ToString%2A> ，如下所示：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-557">If you want to specify a different format or culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="8b4f7-558">使用格式</span><span class="sxs-lookup"><span data-stu-id="8b4f7-558">To use format</span></span>|<span data-ttu-id="8b4f7-559">对于区域性</span><span class="sxs-lookup"><span data-stu-id="8b4f7-559">For culture</span></span>|<span data-ttu-id="8b4f7-560">使用重载</span><span class="sxs-lookup"><span data-stu-id="8b4f7-560">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="8b4f7-561">默认 ( "G" ) 格式</span><span class="sxs-lookup"><span data-stu-id="8b4f7-561">Default ("G") format</span></span>|<span data-ttu-id="8b4f7-562">特定区域性</span><span class="sxs-lookup"><span data-stu-id="8b4f7-562">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="8b4f7-563">特定格式</span><span class="sxs-lookup"><span data-stu-id="8b4f7-563">A specific format</span></span>|<span data-ttu-id="8b4f7-564">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="8b4f7-564">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
|<span data-ttu-id="8b4f7-565">特定格式</span><span class="sxs-lookup"><span data-stu-id="8b4f7-565">A specific format</span></span>|<span data-ttu-id="8b4f7-566">特定区域性</span><span class="sxs-lookup"><span data-stu-id="8b4f7-566">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="8b4f7-567">.NET Framework 提供了广泛的格式设置支持，以下格式设置主题更详细地介绍了这些支持：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-567">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="8b4f7-568">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-568">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="8b4f7-569">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-569">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b4f7-570">下面的示例 <xref:System.Int32> 使用默认方法显示一个值 <xref:System.Int32.ToString> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-570">The following example displays an <xref:System.Int32> value using the default <xref:System.Int32.ToString> method.</span></span> <span data-ttu-id="8b4f7-571">它还显示 <xref:System.Int32> 使用多个标准格式说明符生成的值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-571">It also displays the string representations of the <xref:System.Int32> value that results from using a number of standard format specifiers.</span></span> <span data-ttu-id="8b4f7-572">这些示例使用 en-us 区域性的格式设置约定来显示。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-572">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-cpp[System.Int32.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString1.cpp#1)]
 [!code-csharp[System.Int32.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#1)]
 [!code-vb[System.Int32.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="8b4f7-573">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="8b4f7-573">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="int.ToString provider" />
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider? provider);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8b4f7-574">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-574">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="8b4f7-575">使用指定的区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-575">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-576">此实例的值的字符串表示形式，由 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-576">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-577"><xref:System.Int32.ToString%28System.IFormatProvider%29>方法 <xref:System.Int32> 使用指定区域性的对象设置默认 ( "G" 或常规) 格式的值的格式 <xref:System.Globalization.NumberFormatInfo> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-577">The <xref:System.Int32.ToString%28System.IFormatProvider%29> method formats an <xref:System.Int32> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="8b4f7-578">如果要指定其他格式或当前区域性，请使用方法的其他重载，如下所示 <xref:System.Int32.ToString%2A> ：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-578">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="8b4f7-579">使用格式</span><span class="sxs-lookup"><span data-stu-id="8b4f7-579">To use format</span></span>|<span data-ttu-id="8b4f7-580">对于区域性</span><span class="sxs-lookup"><span data-stu-id="8b4f7-580">For culture</span></span>|<span data-ttu-id="8b4f7-581">使用重载</span><span class="sxs-lookup"><span data-stu-id="8b4f7-581">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="8b4f7-582">默认 ( "G" ) 格式</span><span class="sxs-lookup"><span data-stu-id="8b4f7-582">Default ("G") format</span></span>|<span data-ttu-id="8b4f7-583">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="8b4f7-583">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="8b4f7-584">特定格式</span><span class="sxs-lookup"><span data-stu-id="8b4f7-584">A specific format</span></span>|<span data-ttu-id="8b4f7-585">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="8b4f7-585">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
|<span data-ttu-id="8b4f7-586">特定格式</span><span class="sxs-lookup"><span data-stu-id="8b4f7-586">A specific format</span></span>|<span data-ttu-id="8b4f7-587">特定区域性</span><span class="sxs-lookup"><span data-stu-id="8b4f7-587">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="8b4f7-588">`provider`参数是实现接口的对象 <xref:System.IFormatProvider> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-588">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="8b4f7-589">其 <xref:System.IFormatProvider.GetFormat%2A> 方法返回一个 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供有关此方法返回的字符串格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-589">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="8b4f7-590">实现的对象 <xref:System.IFormatProvider> 可以是以下任一项：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-590">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="8b4f7-591"><xref:System.Globalization.CultureInfo>表示要使用其格式设置规则的区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-591">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="8b4f7-592">一个 <xref:System.Globalization.NumberFormatInfo> 包含此值的特定数字格式信息的对象。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-592">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="8b4f7-593">一个自定义对象，该对象实现 <xref:System.IFormatProvider> ，其 <xref:System.IFormatProvider.GetFormat%2A> 方法返回 <xref:System.Globalization.NumberFormatInfo> 提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-593">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="8b4f7-594">如果 `provider` 为 `null` 或者 <xref:System.Globalization.NumberFormatInfo> 无法从获取对象，则 `provider` 使用当前区域性的对象的对象设置返回值的格式 <xref:System.Globalization.NumberFormatInfo> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-594">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture.</span></span> <span data-ttu-id="8b4f7-595">有关线程的当前区域性的信息，请参见 <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-595">For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8b4f7-596">.NET Framework 提供了广泛的格式设置支持，以下格式设置主题更详细地介绍了这些支持：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-596">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="8b4f7-597">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-597">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="8b4f7-598">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-598">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b4f7-599">下面的示例 <xref:System.Int32> 使用 <xref:System.Globalization.CultureInfo> 表示多个不同区域性的对象显示值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-599">The following example displays the string representation of an <xref:System.Int32> value using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString2.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs" interactive="try-dotnet-method" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb" id="Snippet2":::
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="8b4f7-600">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="8b4f7-600">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="int.ToString format" />
      <MemberSignature Language="C#" Value="public string ToString (string? format);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="8b4f7-601">标准或自定义的数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-601">A standard or custom numeric format string.</span></span></param>
        <summary><span data-ttu-id="8b4f7-602">使用指定的格式，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-602">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-603">此实例的值的字符串表示形式，由 <paramref name="format" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-603">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-604"><xref:System.Int32.ToString%28System.String%29>方法 <xref:System.Int32> 使用 <xref:System.Globalization.NumberFormatInfo> 表示当前区域性约定的对象来设置指定格式的值的格式。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-604">The <xref:System.Int32.ToString%28System.String%29> method formats an <xref:System.Int32> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="8b4f7-605">如果要使用默认 ( "G" 或常规) 格式或指定不同的区域性，请使用方法的其他重载，如下所示 <xref:System.Int32.ToString%2A> ：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-605">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="8b4f7-606">使用格式</span><span class="sxs-lookup"><span data-stu-id="8b4f7-606">To use format</span></span>|<span data-ttu-id="8b4f7-607">对于区域性</span><span class="sxs-lookup"><span data-stu-id="8b4f7-607">For culture</span></span>|<span data-ttu-id="8b4f7-608">使用重载</span><span class="sxs-lookup"><span data-stu-id="8b4f7-608">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="8b4f7-609">默认 ( "G" ) 格式</span><span class="sxs-lookup"><span data-stu-id="8b4f7-609">Default ("G") format</span></span>|<span data-ttu-id="8b4f7-610">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="8b4f7-610">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="8b4f7-611">默认 ( "G" ) 格式</span><span class="sxs-lookup"><span data-stu-id="8b4f7-611">Default ("G") format</span></span>|<span data-ttu-id="8b4f7-612">特定区域性</span><span class="sxs-lookup"><span data-stu-id="8b4f7-612">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="8b4f7-613">特定格式</span><span class="sxs-lookup"><span data-stu-id="8b4f7-613">A specific format</span></span>|<span data-ttu-id="8b4f7-614">特定区域性</span><span class="sxs-lookup"><span data-stu-id="8b4f7-614">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="8b4f7-615">`format`参数可以是任何有效的标准数值格式说明符（"R" 除外）以及自定义数字格式说明符的任意组合。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-615">The `format` parameter can be any valid standard numeric format specifier except for "R", as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="8b4f7-616">如果 `format` 是 `null` 或空字符串 ( "" ) ，则此实例的返回值的格式为常规数值格式说明符 ( "G" ) 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-616">If `format` is `null` or an empty string (""), the return value of this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="8b4f7-617">.NET Framework 提供了广泛的格式设置支持，以下格式设置主题更详细地介绍了这些支持：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-617">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="8b4f7-618">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-618">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="8b4f7-619">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-619">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="8b4f7-620">此实例的返回值的格式为 <xref:System.Globalization.NumberFormatInfo> 当前区域性的。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-620">The return value of this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b4f7-621">下面的示例 <xref:System.Int32> 使用每个受支持的标准数值格式说明符和两个自定义数字格式字符串来显示值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-621">The following example displays an <xref:System.Int32> value using each of the supported standard numeric format specifiers, together with two custom numeric format strings.</span></span> <span data-ttu-id="8b4f7-622">将数值转换为字符串时，此示例使用 en-us 区域性的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-622">In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString3.cpp" id="Snippet3":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs" interactive="try-dotnet-method" id="Snippet3":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb" id="Snippet3"::: 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="8b4f7-623"><paramref name="format" /> 无效或不受支持。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-623"><paramref name="format" /> is invalid or not supported.</span></span></exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="8b4f7-624">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="8b4f7-624">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings"><span data-ttu-id="8b4f7-625">标准数字格式字符串</span><span class="sxs-lookup"><span data-stu-id="8b4f7-625">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings"><span data-ttu-id="8b4f7-626">自定义数字格式字符串</span><span class="sxs-lookup"><span data-stu-id="8b4f7-626">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/how-to-pad-a-number-with-leading-zeros"><span data-ttu-id="8b4f7-627">如何：用前导零填充数字</span><span class="sxs-lookup"><span data-stu-id="8b4f7-627">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="int.ToString (format, provider)" />
      <MemberSignature Language="C#" Value="public string ToString (string? format, IFormatProvider? provider);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="8b4f7-628">标准或自定义的数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-628">A standard or custom numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="8b4f7-629">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-629">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="8b4f7-630">使用指定的格式和区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-630">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-631">此实例的值的字符串表示形式，由 <paramref name="format" /> 和 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-631">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-632"><xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>方法 <xref:System.Int32> 使用 <xref:System.Globalization.NumberFormatInfo> 指定的区域性的对象设置指定格式的值的格式。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-632">The <xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29> method formats an <xref:System.Int32> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="8b4f7-633">如果要使用默认格式或区域性设置，请使用方法的其他重载 <xref:System.Int32.ToString%2A> ，如下所示：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-633">If you want to use default format or culture settings, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="8b4f7-634">使用格式</span><span class="sxs-lookup"><span data-stu-id="8b4f7-634">To use format</span></span>|<span data-ttu-id="8b4f7-635">对于区域性</span><span class="sxs-lookup"><span data-stu-id="8b4f7-635">For culture</span></span>|<span data-ttu-id="8b4f7-636">使用重载</span><span class="sxs-lookup"><span data-stu-id="8b4f7-636">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="8b4f7-637">默认 ( "G" ) 格式</span><span class="sxs-lookup"><span data-stu-id="8b4f7-637">Default ("G") format</span></span>|<span data-ttu-id="8b4f7-638">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="8b4f7-638">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="8b4f7-639">默认 ( "G" ) 格式</span><span class="sxs-lookup"><span data-stu-id="8b4f7-639">Default ("G") format</span></span>|<span data-ttu-id="8b4f7-640">特定区域性</span><span class="sxs-lookup"><span data-stu-id="8b4f7-640">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="8b4f7-641">特定格式</span><span class="sxs-lookup"><span data-stu-id="8b4f7-641">A specific format</span></span>|<span data-ttu-id="8b4f7-642">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="8b4f7-642">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
  
 <span data-ttu-id="8b4f7-643">`format`参数可以是标准或自定义数字格式字符串。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-643">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="8b4f7-644">除了 "R" (或 "r" ) 之外的所有标准数字格式字符串，都支持所有自定义数字格式字符。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-644">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="8b4f7-645">如果 `format` 是 `null` 或空字符串 ( "" ) ，则此实例的返回值的格式为常规数值格式说明符 ( "G" ) 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-645">If `format` is `null` or an empty string (""), the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="8b4f7-646">`provider`参数是实现接口的对象 <xref:System.IFormatProvider> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-646">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="8b4f7-647">其 <xref:System.IFormatProvider.GetFormat%2A> 方法返回一个 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供有关此方法返回的字符串格式的区域性特定格式信息。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-647">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific format information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="8b4f7-648">实现的对象 <xref:System.IFormatProvider> 可以是以下任一项：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-648">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="8b4f7-649"><xref:System.Globalization.CultureInfo>表示要使用其格式设置规则的区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-649">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="8b4f7-650">一个 <xref:System.Globalization.NumberFormatInfo> 包含此值的特定数字格式信息的对象。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-650">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="8b4f7-651">一个自定义对象，该对象实现 <xref:System.IFormatProvider> ，其 <xref:System.IFormatProvider.GetFormat%2A> 方法返回 <xref:System.Globalization.NumberFormatInfo> 提供格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-651">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="8b4f7-652">如果 `provider` 为 `null` 或者 <xref:System.Globalization.NumberFormatInfo> 无法从获取对象，则 `provider` 此实例的返回值将使用 <xref:System.Globalization.NumberFormatInfo> 当前区域性的进行格式化。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-652">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value for this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
 <span data-ttu-id="8b4f7-653">.NET Framework 提供了广泛的格式设置支持，以下格式设置主题更详细地介绍了这些支持：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-653">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="8b4f7-654">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-654">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="8b4f7-655">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-655">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b4f7-656">下面的示例使用三个不同区域性的每个受支持的标准数值格式说明符显示正值和负值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-656">The following example displays a positive and a negative value using each of the supported standard numeric format specifiers for three different cultures.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString4.cpp" id="Snippet4":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs" interactive="try-dotnet-method" id="Snippet4":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb" id="Snippet4"::: 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="8b4f7-657"><paramref name="format" /> 无效或不受支持。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-657"><paramref name="format" /> is invalid or not supported.</span></span></exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="8b4f7-658">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="8b4f7-658">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings"><span data-ttu-id="8b4f7-659">标准数字格式字符串</span><span class="sxs-lookup"><span data-stu-id="8b4f7-659">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings"><span data-ttu-id="8b4f7-660">自定义数字格式字符串</span><span class="sxs-lookup"><span data-stu-id="8b4f7-660">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/how-to-pad-a-number-with-leading-zeros"><span data-ttu-id="8b4f7-661">如何：用前导零填充数字</span><span class="sxs-lookup"><span data-stu-id="8b4f7-661">How to: Pad a Number with Leading Zeros</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-cs/"><span data-ttu-id="8b4f7-662">示例：.NET Core WinForms 格式设置实用工具 (C#)</span><span class="sxs-lookup"><span data-stu-id="8b4f7-662">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-vb/"><span data-ttu-id="8b4f7-663">示例：.NET Core WinForms 格式设置实用工具 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8b4f7-663">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = default, IFormatProvider? provider = default);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = Nothing, Optional provider As IFormatProvider = Nothing) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="int.TryFormat (destination, charsWritten, format, provider)" />
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = default, IFormatProvider provider = default);" FrameworkAlternate="netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="8b4f7-664">此方法返回时，此实例的值将设置为字符范围格式。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-664">When this method returns, this instance's value formatted as a span of characters.</span></span></param>
        <param name="charsWritten"><span data-ttu-id="8b4f7-665">此方法返回时，为写入到 <paramref name="destination" /> 的字符数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-665">When this method returns, the number of characters that were written in <paramref name="destination" />.</span></span></param>
        <param name="format"><span data-ttu-id="8b4f7-666">一个包含字符的范围，这些字符表示定义可接受的 <paramref name="destination" /> 格式的标准或自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-666">A span containing the charactes that represent a standard or custom format string that defines the acceptable format for <paramref name="destination" />.</span></span></param>
        <param name="provider"><span data-ttu-id="8b4f7-667">一个可选对象，提供有关 <paramref name="destination" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-667">An optional object that supplies culture-specific formatting information for <paramref name="destination" />.</span></span></param>
        <summary><span data-ttu-id="8b4f7-668">尝试将当前整数数字实例的值的格式设置为提供的字符范围。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-668">Tries to format the value of the current integer number instance into the provided span of characters.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-669">如果格式设置成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-669"><see langword="true" /> if the formatting was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8b4f7-670">将数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-670">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="8b4f7-671">一个指示操作是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-671">A return value indicates whether the operation succeeded.</span></span></summary>
        <altmember cref="Overload:System.Int32.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * int -&gt; bool" Usage="System.int.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="result" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8b4f7-672">一个范围，包含表示要转换的数字的字符。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-672">A span containing the characters that represent the number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="8b4f7-673">当此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 中所包含的数字等效的 32 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-673">When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="8b4f7-674">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式不符合 <paramref name="style" />，或者表示的数字小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-674">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="8b4f7-675">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-675">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="8b4f7-676">将指定样式和区域性特定格式的数字的范围表示形式转换为其等效的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-676">Converts the span representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="8b4f7-677">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-677">A return value indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-678">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-678"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out int result);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.String,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * int -&gt; bool" Usage="System.int.TryParse (s, result)" />
      <MemberSignature Language="C#" Value="public static bool TryParse (string? s, out int? result);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8b4f7-679">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-679">A string containing a number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="8b4f7-680">当此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 中所包含的数字等效的 32 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-680">When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="8b4f7-681">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式不正确，或者表示的数字小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-681">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="8b4f7-682">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-682">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="8b4f7-683">将数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-683">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="8b4f7-684">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-684">A return value indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-685">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-685"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-686"><xref:System.Int32.TryParse%2A>方法与 <xref:System.Int32.Parse%2A> 方法类似，不同的是， <xref:System.Int32.TryParse%2A> 如果转换失败，方法不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-686">The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="8b4f7-687">这样，便无需使用异常处理来测试无效的 <xref:System.FormatException> 事件， `s` 也不能成功分析。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-687">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="8b4f7-688">`s`参数包含以下格式的编号：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-688">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="8b4f7-689">ws[sign] 位数 [ws]</span><span class="sxs-lookup"><span data-stu-id="8b4f7-689">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="8b4f7-690">方括号 ( [和] ) 中的项是可选的。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-690">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8b4f7-691">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-691">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8b4f7-692">元素</span><span class="sxs-lookup"><span data-stu-id="8b4f7-692">Element</span></span>|<span data-ttu-id="8b4f7-693">说明</span><span class="sxs-lookup"><span data-stu-id="8b4f7-693">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8b4f7-694">*ws*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-694">*ws*</span></span>|<span data-ttu-id="8b4f7-695">可选空白。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-695">Optional white space.</span></span>|  
|<span data-ttu-id="8b4f7-696">*sign*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-696">*sign*</span></span>|<span data-ttu-id="8b4f7-697">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-697">An optional sign.</span></span>|  
|<span data-ttu-id="8b4f7-698">*位数*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-698">*digits*</span></span>|<span data-ttu-id="8b4f7-699">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-699">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="8b4f7-700">`s`使用样式对参数进行解释 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-700">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="8b4f7-701">除十进制数字外，只允许使用前导和尾随空格以及前导符号。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-701">In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="8b4f7-702">若要使用中提供的区域性特定格式设置信息显式定义样式元素 `s` ，请使用 <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-702">To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="8b4f7-703">`s`使用 <xref:System.Globalization.NumberFormatInfo> 为当前系统区域性初始化的对象中的格式设置信息分析参数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-703">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="8b4f7-704">有关详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-704">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="8b4f7-705">此方法的重载将 <xref:System.Int32.TryParse%2A> 参数中的所有数字解释 `s` 为十进制数字。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-705">This overload of the <xref:System.Int32.TryParse%2A> method interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="8b4f7-706">若要分析十六进制数的字符串表示形式，请调用 <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> 重载。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-706">To parse the string representation of a hexadecimal number, call the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b4f7-707">下面的示例 <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29?displayProperty=nameWithType> 使用多个不同的字符串值调用方法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-707">The following example calls the <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29?displayProperty=nameWithType> method with a number of different string values.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.TryParse/cpp/int32.tryparse1.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.TryParse/cs/TryParse1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.TryParse/vb/TryParse1.vb" id="Snippet1":::
  
 <span data-ttu-id="8b4f7-708"><xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29>在此示例中，此方法无法转换的某些字符串是：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-708">Some of the strings that the <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29> method is unable to convert in this example are:</span></span>  
  
-   <span data-ttu-id="8b4f7-709">"9432.0".</span><span class="sxs-lookup"><span data-stu-id="8b4f7-709">"9432.0".</span></span> <span data-ttu-id="8b4f7-710">转换失败，因为字符串不能包含小数分隔符;它必须仅包含整数位数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-710">The conversion fails because the string cannot contain a decimal separator; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="8b4f7-711">"16,667".</span><span class="sxs-lookup"><span data-stu-id="8b4f7-711">"16,667".</span></span> <span data-ttu-id="8b4f7-712">转换失败，因为字符串不能包含组分隔符;它必须仅包含整数位数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-712">The conversion fails because the string cannot contain group separators; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="8b4f7-713">"(100)".</span><span class="sxs-lookup"><span data-stu-id="8b4f7-713">"(100)".</span></span> <span data-ttu-id="8b4f7-714">转换失败，因为该字符串不能包含由当前区域性的和属性定义的负号 <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-714">The conversion fails because the string cannot contain a negative sign other than the one defined by the current culture's <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> properties.</span></span>  
  
-   <span data-ttu-id="8b4f7-715">"01FA".</span><span class="sxs-lookup"><span data-stu-id="8b4f7-715">"01FA".</span></span> <span data-ttu-id="8b4f7-716">转换失败，因为字符串不能包含十六进制数字;它只能包含十进制数字。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-716">The conversion fails because the string cannot contain hexadecimal digits; it must contain decimal digits only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="M:System.Int32.ToString" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="8b4f7-717">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="8b4f7-717">Parsing Numeric Strings in .NET</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-cs/"><span data-ttu-id="8b4f7-718">示例：.NET Core WinForms 格式设置实用工具 (C#)</span><span class="sxs-lookup"><span data-stu-id="8b4f7-718">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-vb/"><span data-ttu-id="8b4f7-719">示例：.NET Core WinForms 格式设置实用工具 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8b4f7-719">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider? provider, out int result);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider * int -&gt; bool" Usage="System.int.TryParse (s, style, provider, result)" />
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out int result);" FrameworkAlternate="netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="result" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8b4f7-720">一个范围，包含表示要转换的数字的字符。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-720">A span containing the characters that represent the number to convert.</span></span> <span data-ttu-id="8b4f7-721">该范围使用由 <paramref name="style" /> 指定的样式来进行解释</span><span class="sxs-lookup"><span data-stu-id="8b4f7-721">The span is interpreted using the style specified by <paramref name="style" /></span></span></param>
        <param name="style"><span data-ttu-id="8b4f7-722">枚举值的按位组合，用于指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-722">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="8b4f7-723">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-723">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="8b4f7-724">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-724">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="8b4f7-725">当此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 中所包含的数字等效的 32 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-725">When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="8b4f7-726">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式不符合 <paramref name="style" />，或者表示的数字小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-726">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="8b4f7-727">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-727">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="8b4f7-728">将指定样式和区域性特定格式的数字的范围表示形式转换为其等效的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-728">Converts the span representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="8b4f7-729">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-729">A return value indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-730">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-730"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out int result);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider * int -&gt; bool" Usage="System.int.TryParse (s, style, provider, result)" />
      <MemberSignature Language="C#" Value="public static bool TryParse (string? s, System.Globalization.NumberStyles style, IFormatProvider? provider, out int? result);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8b4f7-731">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-731">A string containing a number to convert.</span></span> <span data-ttu-id="8b4f7-732">该字符串使用由 <paramref name="style" /> 指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-732">The string is interpreted using the style specified by <paramref name="style" />.</span></span></param>
        <param name="style"><span data-ttu-id="8b4f7-733">枚举值的按位组合，用于指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-733">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="8b4f7-734">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-734">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="8b4f7-735">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-735">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="8b4f7-736">当此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 中所包含的数字等效的 32 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-736">When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="8b4f7-737">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式不符合 <paramref name="style" />，或者表示的数字小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-737">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="8b4f7-738">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-738">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="8b4f7-739">将指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-739">Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="8b4f7-740">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-740">A return value indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="8b4f7-741">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-741"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b4f7-742"><xref:System.Int32.TryParse%2A>方法与 <xref:System.Int32.Parse%2A> 方法类似，不同的是， <xref:System.Int32.TryParse%2A> 如果转换失败，方法不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-742">The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="8b4f7-743">这样，便无需使用异常处理来测试无效的 <xref:System.FormatException> 事件， `s` 也不能成功分析。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-743">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="8b4f7-744">`style`参数定义 (（如空白）或正号或负号) 等样式元素，以便 `s` 分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-744">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="8b4f7-745">它必须是枚举中的位标志的组合 <xref:System.Globalization.NumberStyles> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-745">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="8b4f7-746">根据的值 `style` ， `s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-746">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="8b4f7-747">ws[$]表明[数字，] 位数 [.fractional_digits] [e [sign] 数字] [ws]</span><span class="sxs-lookup"><span data-stu-id="8b4f7-747">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="8b4f7-748">或者，如果 `style` 参数包括 <xref:System.Globalization.NumberStyles.AllowHexSpecifier> ：</span><span class="sxs-lookup"><span data-stu-id="8b4f7-748">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="8b4f7-749">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="8b4f7-749">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="8b4f7-750">方括号 ( [和] ) 中的项是可选的。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-750">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8b4f7-751">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-751">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8b4f7-752">元素</span><span class="sxs-lookup"><span data-stu-id="8b4f7-752">Element</span></span>|<span data-ttu-id="8b4f7-753">说明</span><span class="sxs-lookup"><span data-stu-id="8b4f7-753">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8b4f7-754">*ws*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-754">*ws*</span></span>|<span data-ttu-id="8b4f7-755">可选空白。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-755">Optional white space.</span></span> <span data-ttu-id="8b4f7-756">如果包含标志，则空白可以出现在开头; `s` `style` <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> `s` 如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 标志，则为末尾处。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-756">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="8b4f7-757">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-757">A culture-specific currency symbol.</span></span> <span data-ttu-id="8b4f7-758">其在字符串中的位置由 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> <xref:System.Globalization.NumberFormatInfo> 参数方法返回的对象的属性定义 <xref:System.IFormatProvider.GetFormat%2A> `provider` 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-758">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="8b4f7-759">`s`如果包含标志，则货币符号可以出现在中 `style` <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-759">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8b4f7-760">*sign*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-760">*sign*</span></span>|<span data-ttu-id="8b4f7-761">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-761">An optional sign.</span></span> <span data-ttu-id="8b4f7-762">`s`如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 或标志，则符号符号可以出现在中 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-762">A sign symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> or <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flags.</span></span>|  
|<span data-ttu-id="8b4f7-763">*位数*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-763">*digits*</span></span>|<span data-ttu-id="8b4f7-764">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-764">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="8b4f7-765">*,*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-765">*,*</span></span>|<span data-ttu-id="8b4f7-766">区域性特定的千位分隔符。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-766">A culture-specific thousands separator.</span></span> <span data-ttu-id="8b4f7-767">如果包含标志，则指定的区域性的千位分隔符 `provider` 可以出现在中 `s` `style` <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-767">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8b4f7-768">*.*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-768">*.*</span></span>|<span data-ttu-id="8b4f7-769">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-769">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="8b4f7-770">如果包含标志，则指定的区域性的小数点符号 `provider` 可以出现在中 `s` `style` <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-770">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8b4f7-771">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-771">*fractional_digits*</span></span>|<span data-ttu-id="8b4f7-772">数字0的一个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-772">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="8b4f7-773">`s`仅当包含标志时，小数位才能出现在中 `style` <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-773">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8b4f7-774">*e*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-774">*e*</span></span>|<span data-ttu-id="8b4f7-775">"E" 或 "E" 字符，指示值以指数表示法表示。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-775">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="8b4f7-776">`s`如果包含标志，则参数可以表示指数表示法中的数字 `style` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-776">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="8b4f7-777">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-777">*hexdigits*</span></span>|<span data-ttu-id="8b4f7-778">从0到 f 的十六进制数字序列，或者从0到 F。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-778">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="8b4f7-779">`s`无论参数的值如何，分析操作都将忽略中任何终止的 NUL (U + 0000) 字符 `style` 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-779">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="8b4f7-780">只包含十进制数字的字符串 (对应于 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 标记) 总是成功分析。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-780">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="8b4f7-781">大多数其余 <xref:System.Globalization.NumberStyles> 成员控件元素在此输入字符串中可能已存在但不是必需的。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-781">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="8b4f7-782">下表指示各个成员如何 <xref:System.Globalization.NumberStyles> 影响可能出现在中的元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-782">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="8b4f7-783">非复合 NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="8b4f7-783">Non-composite NumberStyles values</span></span>|<span data-ttu-id="8b4f7-784">除数字外允许在 s 中使用的元素</span><span class="sxs-lookup"><span data-stu-id="8b4f7-784">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-785">仅十进制数字。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-785">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-786">小数点 () 和 *fractional_digits* *元素。*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-786">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="8b4f7-787">但 *fractional_digits* 只能包含一个或零个数字或该方法返回 `false` 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-787">However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-788">`s`参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-788">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="8b4f7-789">如果 `s` 表示指数表示法中的数字，则该数字必须表示数据类型范围内的一个整数，该数据类型的范围内 <xref:System.Int32> 没有非零的小数部分。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-789">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-790">开头的 *ws* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-790">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-791">末尾处的 *ws* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-791">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-792">符号可以出现在 *数字* 之前。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-792">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-793">符号可以出现在 *数字* 之后。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-793">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-794">用括号括起数值的 *符号* 元素。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-794">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-795">千位分隔符 (*，*) 元素。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-795">The thousands separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-796">*$* 元素。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-796">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-797">所有元素。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-797">All elements.</span></span> <span data-ttu-id="8b4f7-798">`s`参数不能表示十六进制数或以指数表示法表示的数字。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-798">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-799">在开头或结尾处的 *ws* 元素，在 `s` 的开头处 *符号*， `s` 小数点 () 符号。 </span><span class="sxs-lookup"><span data-stu-id="8b4f7-799">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="8b4f7-800">`s`参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-800">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-801">*Ws*、 *sign*、千位分隔符 (*、*) 和 *小数点 () 元素。*</span><span class="sxs-lookup"><span data-stu-id="8b4f7-801">The *ws*, *sign*, thousands separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any?displayProperty=nameWithType>|<span data-ttu-id="8b4f7-802">除之外的所有样式都 `s` 不能表示十六进制数。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-802">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="8b4f7-803">如果 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 使用标志，则 `s` 必须是不带前缀的十六进制值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-803">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="8b4f7-804">例如，"C9AF3" 分析成功，但 "0xC9AF3" 不能。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-804">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="8b4f7-805">中可以存在的唯一其他标志 `style` 是 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 和 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-805">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="8b4f7-806"> (<xref:System.Globalization.NumberStyles> 枚举具有复合样式， <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType> 其中包含两个空格标志。 ) </span><span class="sxs-lookup"><span data-stu-id="8b4f7-806">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="8b4f7-807">`provider`参数是一个 <xref:System.IFormatProvider> 实现，例如 <xref:System.Globalization.CultureInfo> 对象或 <xref:System.Globalization.NumberFormatInfo> 对象，其 <xref:System.IFormatProvider.GetFormat%2A> 方法返回 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-807">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="8b4f7-808"><xref:System.Globalization.NumberFormatInfo>对象提供有关的格式的区域性特定信息 `s` 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-808">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="8b4f7-809">如果 `provider` 为 `null` ，则 <xref:System.Globalization.NumberFormatInfo> 使用当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-809">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b4f7-810">下面的示例 <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> 使用多个不同的字符串和值调用方法 <xref:System.Globalization.NumberStyles> 。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-810">The following example calls the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> method with a number of different string and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.TryParse/cpp/int32.tryparse2.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.TryParse/cs/TryParse2.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.TryParse/vb/TryParse2.vb" id="Snippet2":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8b4f7-811"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-811"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="8b4f7-812">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8b4f7-812">-or-</span></span> 
 <span data-ttu-id="8b4f7-813"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="8b4f7-813"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int32.ToString" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="8b4f7-814">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="8b4f7-814">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
