<Type Name="Int32" FullName="System.Int32">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2b4da2dc068a29a1b35e629f208d604ee07562c5" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83952030" /></Metadata><TypeSignature Language="C#" Value="public struct Int32 : IComparable, IComparable&lt;int&gt;, IConvertible, IEquatable&lt;int&gt;, IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit int32 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;int32&gt;, class System.IConvertible, class System.IEquatable`1&lt;int32&gt;, class System.IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Int32" />
  <TypeSignature Language="VB.NET" Value="Public Structure Int32&#xA;Implements IComparable, IComparable(Of Integer), IConvertible, IEquatable(Of Integer), IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public value class Int32 : IComparable, IComparable&lt;int&gt;, IConvertible, IEquatable&lt;int&gt;, IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type int = struct&#xA;    interface IConvertible&#xA;    interface IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C#" Value="public struct Int32 : IComparable, IConvertible, IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit int32 extends System.ValueType implements class System.IComparable, class System.IConvertible, class System.IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public Structure Int32&#xA;Implements IComparable, IConvertible, IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public value class Int32 : IComparable, IConvertible, IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type int = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit int32 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;int32&gt;, class System.IConvertible, class System.IEquatable`1&lt;int32&gt;, class System.IFormattable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public struct Int32 : IComparable, IComparable&lt;int&gt;, IEquatable&lt;int&gt;, IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit int32 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;int32&gt;, class System.IEquatable`1&lt;int32&gt;, class System.IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="VB.NET" Value="Public Structure Int32&#xA;Implements IComparable, IComparable(Of Integer), IEquatable(Of Integer), IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="C++ CLI" Value="public value class Int32 : IComparable, IComparable&lt;int&gt;, IEquatable&lt;int&gt;, IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="F#" Value="type int = struct&#xA;    interface IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Int32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Int32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2eb62-101">表示 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-101">Represents a 32-bit signed integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-102"><xref:System.Int32> 是一个不可变的值类型，它表示值范围从负2147483648（由 <xref:System.Int32.MinValue?displayProperty=nameWithType> 常数表示）到正2147483647（由 <xref:System.Int32.MaxValue?displayProperty=nameWithType> 常数表示）的有符号整数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-102"><xref:System.Int32> is an immutable value type that represents signed integers with values that range from negative 2,147,483,648 (which is represented by the <xref:System.Int32.MinValue?displayProperty=nameWithType> constant) through positive 2,147,483,647 (which is represented by the <xref:System.Int32.MaxValue?displayProperty=nameWithType> constant.</span></span> <span data-ttu-id="2eb62-103">.NET Framework 还包括一个未签名的32位整数值类型，<xref:System.UInt32>，它表示范围为0到4294967295的值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-103">The .NET Framework also includes an unsigned 32-bit integer value type, <xref:System.UInt32>, which represents values that range from 0 to 4,294,967,295.</span></span>  
  
## <a name="instantiating-an-int32-value"></a><span data-ttu-id="2eb62-104">实例化 Int32 值</span><span class="sxs-lookup"><span data-stu-id="2eb62-104">Instantiating an Int32 Value</span></span>  
 <span data-ttu-id="2eb62-105">可以通过多种方式实例化 <xref:System.Int32> 值：</span><span class="sxs-lookup"><span data-stu-id="2eb62-105">You can instantiate an <xref:System.Int32> value in several ways:</span></span>  
  
-   <span data-ttu-id="2eb62-106">您可以声明一个 <xref:System.Int32> 变量，并为其分配一个在 <xref:System.Int32> 数据类型范围内的文本整数值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-106">You can declare an <xref:System.Int32> variable and assign it a literal integer value that is within the range of the <xref:System.Int32> data type.</span></span> <span data-ttu-id="2eb62-107">下面的示例声明两个 <xref:System.Int32> 变量并以这种方式为它们赋值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-107">The following example declares two <xref:System.Int32> variables and assigns them values in this way.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#1)]
     [!code-vb[System.Int32.Instantiation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#1)]  
  
-   <span data-ttu-id="2eb62-108">可以指定整数类型的值，其范围为 <xref:System.Int32> 类型的子集。</span><span class="sxs-lookup"><span data-stu-id="2eb62-108">You can assign the value of an integer type whose range is a subset of the <xref:System.Int32> type.</span></span> <span data-ttu-id="2eb62-109">这是一种扩大转换，不需要在中C#使用强制转换运算符，也不需要 Visual Basic 中的转换方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-109">This is a widening conversion that does not require a cast operator in C# or a conversion method in Visual Basic.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#4)]
     [!code-vb[System.Int32.Instantiation#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#4)]  
  
-   <span data-ttu-id="2eb62-110">可以指定数值类型的值，该数值类型的范围超出 <xref:System.Int32> 类型的范围。</span><span class="sxs-lookup"><span data-stu-id="2eb62-110">You can assign the value of a numeric type whose range exceeds that of the <xref:System.Int32> type.</span></span> <span data-ttu-id="2eb62-111">这是一种收缩转换，因此它需要中C#的强制转换运算符和 Visual Basic 中的转换方法（如果 `Option Strict` 为 on）。</span><span class="sxs-lookup"><span data-stu-id="2eb62-111">This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if `Option Strict` is on.</span></span> <span data-ttu-id="2eb62-112">如果数值是包含小数部分的 <xref:System.Single>、<xref:System.Double>或 <xref:System.Decimal> 值，则其小数部分的处理取决于执行转换的编译器。</span><span class="sxs-lookup"><span data-stu-id="2eb62-112">If the numeric value is a <xref:System.Single>, <xref:System.Double>, or <xref:System.Decimal> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion.</span></span> <span data-ttu-id="2eb62-113">下面的示例执行收缩转换，以将多个数值赋值给 <xref:System.Int32> 变量。</span><span class="sxs-lookup"><span data-stu-id="2eb62-113">The following example performs narrowing conversions to assign several numeric values to <xref:System.Int32> variables.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#2)]
     [!code-vb[System.Int32.Instantiation#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#2)]  
  
-   <span data-ttu-id="2eb62-114">可以调用 <xref:System.Convert> 类的方法，将任何支持的类型转换为 <xref:System.Int32> 值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-114">You can call a method of the <xref:System.Convert> class to convert any supported type to an <xref:System.Int32> value.</span></span> <span data-ttu-id="2eb62-115">这是可能的，因为 <xref:System.Int32> 支持 <xref:System.IConvertible> 接口。</span><span class="sxs-lookup"><span data-stu-id="2eb62-115">This is possible because <xref:System.Int32> supports the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2eb62-116">下面的示例演示如何将 <xref:System.Decimal> 值数组转换为 <xref:System.Int32> 值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-116">The following example illustrates the conversion of an array of <xref:System.Decimal> values to <xref:System.Int32> values.</span></span>  
  
     :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs" interactive="try-dotnet-method" id="Snippet4":::
     :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb" id="Snippet4":::
  
-   <span data-ttu-id="2eb62-117">可以调用 <xref:System.Int32.Parse%2A> 或 <xref:System.Int32.TryParse%2A> 方法将 <xref:System.Int32> 值的字符串表示形式转换为 <xref:System.Int32>。</span><span class="sxs-lookup"><span data-stu-id="2eb62-117">You can call the <xref:System.Int32.Parse%2A> or <xref:System.Int32.TryParse%2A> method to convert the string representation of an <xref:System.Int32> value to an <xref:System.Int32>.</span></span> <span data-ttu-id="2eb62-118">字符串可以包含 decimal 或十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="2eb62-118">The string can contain either decimal or hexadecimal digits.</span></span> <span data-ttu-id="2eb62-119">下面的示例通过使用 decimal 和十六进制字符串说明了分析操作。</span><span class="sxs-lookup"><span data-stu-id="2eb62-119">The following example illustrates the parse operation by using both a decimal and a hexadecimal string.</span></span>  
  
     :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs" interactive="try-dotnet-method" id="Snippet3":::
     :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb" id="Snippet3":::

## <a name="performing-operations-on-int32-values"></a><span data-ttu-id="2eb62-120">对 Int32 值执行运算</span><span class="sxs-lookup"><span data-stu-id="2eb62-120">Performing Operations on Int32 Values</span></span>  
 <span data-ttu-id="2eb62-121"><xref:System.Int32> 类型支持标准数学运算，如加法、减法、除法、乘法、求反和一元求反。</span><span class="sxs-lookup"><span data-stu-id="2eb62-121">The <xref:System.Int32> type supports standard mathematical operations such as addition, subtraction, division, multiplication, negation, and unary negation.</span></span> <span data-ttu-id="2eb62-122">与其他整型类型一样，<xref:System.Int32> 类型还支持按位 `AND`、`OR`、`XOR`、左移和右移运算符。</span><span class="sxs-lookup"><span data-stu-id="2eb62-122">Like the other integral types, the <xref:System.Int32> type also supports the bitwise `AND`, `OR`, `XOR`, left shift, and right shift operators.</span></span>  
  
 <span data-ttu-id="2eb62-123">可以使用标准数字运算符比较两个 <xref:System.Int32> 值，也可以调用 <xref:System.Int32.CompareTo%2A> 或 <xref:System.Int32.Equals%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-123">You can use the standard numeric operators to compare two <xref:System.Int32> values, or you can call the <xref:System.Int32.CompareTo%2A> or <xref:System.Int32.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="2eb62-124">您还可以调用 <xref:System.Math> 类的成员来执行各种数值运算，包括获取数值的绝对值、计算两个整数的最大值或最小值、获取数字的符号以及对数字进行舍入。</span><span class="sxs-lookup"><span data-stu-id="2eb62-124">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.</span></span>  
  
## <a name="representing-an-int32-as-a-string"></a><span data-ttu-id="2eb62-125">将 Int32 表示为字符串</span><span class="sxs-lookup"><span data-stu-id="2eb62-125">Representing an Int32 as a String</span></span>  
 <span data-ttu-id="2eb62-126"><xref:System.Int32> 类型完全支持标准和自定义数字格式字符串。</span><span class="sxs-lookup"><span data-stu-id="2eb62-126">The <xref:System.Int32> type provides full support for standard and custom numeric format strings.</span></span> <span data-ttu-id="2eb62-127">（有关详细信息，请参阅[格式设置类型](/dotnet/standard/base-types/formatting-types)、[标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings)和[自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。）</span><span class="sxs-lookup"><span data-stu-id="2eb62-127">(For more information, see [Formatting Types](/dotnet/standard/base-types/formatting-types), [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings), and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).)</span></span>  
  
 <span data-ttu-id="2eb62-128">若要将 <xref:System.Int32> 值的格式设置为不带前导零的整数字符串，可以调用无参数的 <xref:System.Int32.ToString> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-128">To format an <xref:System.Int32> value as an integral string with no leading zeros, you can call the parameterless <xref:System.Int32.ToString> method.</span></span> <span data-ttu-id="2eb62-129">通过使用 "D" 格式说明符，还可以在字符串表示形式中包含指定数目的前导零。</span><span class="sxs-lookup"><span data-stu-id="2eb62-129">By using the "D" format specifier, you can also include a specified number of leading zeros in the string representation.</span></span> <span data-ttu-id="2eb62-130">通过使用 "N" 格式说明符，你可以包含组分隔符，并指定要在数字的字符串表示形式中显示的小数位数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-130">By using the "N" format specifier, you can include group separators and specify the number of decimal digits to appear in the string representation of the number.</span></span> <span data-ttu-id="2eb62-131">通过使用 "X" 格式说明符，可将 <xref:System.Int32> 值表示为十六进制字符串。</span><span class="sxs-lookup"><span data-stu-id="2eb62-131">By using the "X" format specifier, you can represent an <xref:System.Int32> value as a hexadecimal string.</span></span> <span data-ttu-id="2eb62-132">下面的示例采用这四种方式设置 <xref:System.Int32> 值数组中的元素的格式。</span><span class="sxs-lookup"><span data-stu-id="2eb62-132">The following example formats the elements in an array of <xref:System.Int32> values in these four ways.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs" interactive="try-dotnet-method" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb" id="Snippet1":::
  
 <span data-ttu-id="2eb62-133">还可以通过调用 <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> 方法并提供作为方法的第二个参数的基数，将 <xref:System.Int32> 值的格式设置为二进制、八进制、十进制或十六进制字符串。</span><span class="sxs-lookup"><span data-stu-id="2eb62-133">You can also format an <xref:System.Int32> value as a binary, octal, decimal, or hexadecimal string by calling the <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> method and supplying the base as the method's second parameter.</span></span> <span data-ttu-id="2eb62-134">下面的示例调用此方法以显示整数值数组的二进制、八进制和十六进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="2eb62-134">The following example calls this method to display the binary, octal, and hexadecimal representations of an array of integer values.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs" interactive="try-dotnet-method" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb" id="Snippet2":::
  
## <a name="working-with-non-decimal-32-bit-integer-values"></a><span data-ttu-id="2eb62-135">使用非十进制32位整数值</span><span class="sxs-lookup"><span data-stu-id="2eb62-135">Working with Non-Decimal 32-Bit Integer Values</span></span>  
 <span data-ttu-id="2eb62-136">除了使用单个整数作为十进制值，还可以使用整数值执行位运算，或使用整数值的二进制或十六进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="2eb62-136">In addition to working with individual integers as decimal values, you may want to perform bitwise operations with integer values, or work with the binary or hexadecimal representations of integer values.</span></span> <span data-ttu-id="2eb62-137"><xref:System.Int32> 值用31位表示，而30秒位则用作符号位。</span><span class="sxs-lookup"><span data-stu-id="2eb62-137"><xref:System.Int32> values are represented in 31 bits, with the thirty-second bit used as a sign bit.</span></span> <span data-ttu-id="2eb62-138">正值是使用符号和量表示法表示的。</span><span class="sxs-lookup"><span data-stu-id="2eb62-138">Positive values are represented by using sign-and-magnitude representation.</span></span> <span data-ttu-id="2eb62-139">负值的表示形式分为两种。</span><span class="sxs-lookup"><span data-stu-id="2eb62-139">Negative values are in two's complement representation.</span></span> <span data-ttu-id="2eb62-140">当你对 <xref:System.Int32> 值或使用单个位执行按位运算时，这一点很重要。</span><span class="sxs-lookup"><span data-stu-id="2eb62-140">This is important to keep in mind when you perform bitwise operations on <xref:System.Int32> values or when you work with individual bits.</span></span> <span data-ttu-id="2eb62-141">若要对任意两个非十进制值执行数字、布尔或比较运算，这两个值必须使用相同的表示形式。</span><span class="sxs-lookup"><span data-stu-id="2eb62-141">In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="2eb62-142">此类型的所有成员都是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="2eb62-142">All members of this type are thread safe.</span></span> <span data-ttu-id="2eb62-143">看似修改实例状态的成员实际上返回用新值初始化的新实例。</span><span class="sxs-lookup"><span data-stu-id="2eb62-143">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="2eb62-144">与任何其他类型一样，读取和写入包含此类型的实例的共享变量时，必须通过锁保护以保证线程安全。</span><span class="sxs-lookup"><span data-stu-id="2eb62-144">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.UInt32" />
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-cs/"><span data-ttu-id="2eb62-145">示例： .NET Core WinForms 格式设置实用工具C#（）</span><span class="sxs-lookup"><span data-stu-id="2eb62-145">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-vb/"><span data-ttu-id="2eb62-146">示例： .NET Core WinForms 格式设置实用工具（Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="2eb62-146">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2eb62-147">将此实例与指定的对象或 <see cref="T:System.Int32" /> 进行比较，并返回二者相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="2eb62-147">Compares this instance to a specified object or <see cref="T:System.Int32" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.CompareTo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(int value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : int -&gt; int&#xA;override this.CompareTo : int -&gt; int" Usage="int.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2eb62-148">要比较的整数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-148">An integer to compare.</span></span></param>
        <summary><span data-ttu-id="2eb62-149">将此实例与指定的 32 位有符号整数进行比较并返回对其相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="2eb62-149">Compares this instance to a specified 32-bit signed integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="2eb62-150">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-150">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="2eb62-151">返回值</span><span class="sxs-lookup"><span data-stu-id="2eb62-151">Return Value</span></span> 
 </term><description> <span data-ttu-id="2eb62-152">说明</span><span class="sxs-lookup"><span data-stu-id="2eb62-152">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="2eb62-153">小于零</span><span class="sxs-lookup"><span data-stu-id="2eb62-153">Less than zero</span></span> 
 </term><description> <span data-ttu-id="2eb62-154">此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-154">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="2eb62-155">零</span><span class="sxs-lookup"><span data-stu-id="2eb62-155">Zero</span></span> 
 </term><description> <span data-ttu-id="2eb62-156">此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-156">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="2eb62-157">大于零</span><span class="sxs-lookup"><span data-stu-id="2eb62-157">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="2eb62-158">此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-158">This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-159">此方法实现 <xref:System.IComparable%601?displayProperty=nameWithType> 接口，并比 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> 方法稍微好些，因为它不必将 `value` 参数转换为对象。</span><span class="sxs-lookup"><span data-stu-id="2eb62-159">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="2eb62-160">根据您的编程语言，可能会编写一个 <xref:System.Int32.CompareTo%2A> 方法，其中参数类型的位数（比实例类型小）。</span><span class="sxs-lookup"><span data-stu-id="2eb62-160">Depending on your programming language, it might be possible to code a <xref:System.Int32.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="2eb62-161">这是可能的，因为某些编程语言会执行将参数表示为类型的隐式扩大转换，该类型的位数与实例的位数一样多。</span><span class="sxs-lookup"><span data-stu-id="2eb62-161">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="2eb62-162">例如，假设实例类型为 <xref:System.Int32> 并且参数类型为 <xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="2eb62-162">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="2eb62-163">Microsoft C#编译器生成说明，以将参数的值表示为 <xref:System.Int32>，然后生成 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> 方法来比较 <xref:System.Int32> 实例的值和 <xref:System.Int32> 参数表示形式。</span><span class="sxs-lookup"><span data-stu-id="2eb62-163">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32>, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="2eb62-164">请查阅编程语言的文档，以确定其编译器是否对数值类型执行隐式扩大转换。</span><span class="sxs-lookup"><span data-stu-id="2eb62-164">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eb62-165">下面的示例演示 <xref:System.Int32.CompareTo%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-165">The following example demonstrates the <xref:System.Int32.CompareTo%28System.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="2eb62-166">除了显示方法为四个不同的比较返回的值外，还会将返回值转换为自定义 `Comparison` 枚举的成员（其值也将显示）。</span><span class="sxs-lookup"><span data-stu-id="2eb62-166">In addition to displaying the value returned by the method for four different comparisons, it converts the return value to a member of the custom `Comparison` enumeration, whose value it also displays.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.CompareTo/cs/CompareTo1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.CompareTo/vb/CompareTo1.vb" id="Snippet1":::  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Int32.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="int.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2eb62-167">要比较的对象，或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-167">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="2eb62-168">将此实例与指定对象进行比较并返回一个对二者的相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="2eb62-168">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="2eb62-169">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-169">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="2eb62-170">返回值</span><span class="sxs-lookup"><span data-stu-id="2eb62-170">Return Value</span></span> 
 </term><description> <span data-ttu-id="2eb62-171">说明</span><span class="sxs-lookup"><span data-stu-id="2eb62-171">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="2eb62-172">小于零</span><span class="sxs-lookup"><span data-stu-id="2eb62-172">Less than zero</span></span> 
 </term><description> <span data-ttu-id="2eb62-173">此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-173">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="2eb62-174">零</span><span class="sxs-lookup"><span data-stu-id="2eb62-174">Zero</span></span> 
 </term><description> <span data-ttu-id="2eb62-175">此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-175">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="2eb62-176">大于零</span><span class="sxs-lookup"><span data-stu-id="2eb62-176">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="2eb62-177">此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-177">This instance is greater than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="2eb62-178">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2eb62-178">-or-</span></span> 
 <span data-ttu-id="2eb62-179"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-179"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-180">无论其值如何，<xref:System.Int32>的任何实例都视为大于 `null`。</span><span class="sxs-lookup"><span data-stu-id="2eb62-180">Any instance of <xref:System.Int32>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="2eb62-181">`value` 必须 `null` 或 <xref:System.Int32>的实例;否则，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="2eb62-181">`value` must be `null` or an instance of <xref:System.Int32>; otherwise, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2eb62-182"><paramref name="value" /> 不是 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-182"><paramref name="value" /> is not an <see cref="T:System.Int32" />.</span></span></exception>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Int32.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2eb62-183">返回一个值，该值指示此实例是否与指定的对象或 <see cref="T:System.Int32" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="2eb62-183">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Int32" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (int obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(int32 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Equals(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(int obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : int -&gt; bool" Usage="int.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2eb62-184">要与此实例进行比较的 <see cref="T:System.Int32" /> 值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-184">An <see cref="T:System.Int32" /> value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="2eb62-185">返回一个值，该值指示此实例是否等于指定的 <see cref="T:System.Int32" /> 值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-185">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Int32" /> value.</span></span></summary>
        <returns><span data-ttu-id="2eb62-186">如果 <see langword="true" /> 的值与此实例相同，则为 <paramref name="obj" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-186"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-187">此方法实现 <xref:System.IEquatable%601?displayProperty=nameWithType> 接口，并且执行的效果略优于 <xref:System.Int32.Equals%28System.Object%29?displayProperty=nameWithType>，因为它不必将 `obj` 参数转换为对象。</span><span class="sxs-lookup"><span data-stu-id="2eb62-187">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Int32.Equals%28System.Object%29?displayProperty=nameWithType> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="2eb62-188">编译器重载决策可能会考虑两个 <see cref="M:System.Int32.Equals(System.Int32)" /> 方法重载的行为中的明显差异。</span><span class="sxs-lookup"><span data-stu-id="2eb62-188">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int32.Equals(System.Int32)" /> method overloads.</span></span> <span data-ttu-id="2eb62-189">如果定义了 <paramref name="obj" /> 参数与 <see cref="T:System.Int32" /> 之间的隐式转换，并且参数未类型化为 <see cref="T:System.Object" />，则编译器会执行隐式转换并调用 <see cref="M:System.Int32.Equals(System.Int32)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-189">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int32" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int32.Equals(System.Int32)" /> method.</span></span> <span data-ttu-id="2eb62-190">否则，它们调用 <see cref="M:System.Int32.Equals(System.Object)" /> 方法，如果其 <paramref name="obj" /> 参数不是 <see cref="T:System.Int32" /> 值，则它始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-190">Otherwise, they call the <see cref="M:System.Int32.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int32" /> value.</span></span> <span data-ttu-id="2eb62-191">下面的示例演示两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="2eb62-191">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="2eb62-192">对于 <see cref="T:System.Byte" />、<see cref="T:System.Int16" />、<see cref="T:System.SByte" />和 <see cref="T:System.UInt16" /> 值，第一次比较将返回 <see langword="true" />，因为编译器会自动执行扩大转换并调用 <see cref="M:System.Int32.Equals(System.Int32)" /> 方法，而第二次比较将返回 <see langword="false" />，因为编译器会调用 <see cref="M:System.Int32.Equals(System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-192">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.SByte" />, and <see cref="T:System.UInt16" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int32.Equals(System.Int32)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int32.Equals(System.Object)" /> method.</span></span>  

<span data-ttu-id="2eb62-193">：：： code language = "csharp" source = "~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs" interactive = "dotnet" id = "Snippet1"：：：：：： code language = "vb" source = "~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb" id = "Snippet1"：：：</span><span class="sxs-lookup"><span data-stu-id="2eb62-193">:::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs" interactive="try-dotnet" id="Snippet1"::: :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb" id="Snippet1":::</span></span>

          </para></block>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="int.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2eb62-194">一个要与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="2eb62-194">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="2eb62-195">返回一个值，该值指示此实例是否等于指定对象。</span><span class="sxs-lookup"><span data-stu-id="2eb62-195">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="2eb62-196">如果 <see langword="true" /> 是 <paramref name="obj" /> 的实例并且等于此实例的值，则为 <see cref="T:System.Int32" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-196"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Int32" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2eb62-197">下面的示例说明了如何在 `Int32`的上下文中使用 `Equals`，比较两个 `int` 值，并在它们表示相同数字的情况下返回 `true`，如果不是，则为 `false`。</span><span class="sxs-lookup"><span data-stu-id="2eb62-197">The following example illustrates the use of `Equals` in the context of `Int32`, comparing two `int` values and returning `true` if they represent the same number, or `false` if they do not.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/Int32_Equals/CPP/int32_equals.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/Int32_Equals/CS/int32_equals.cs" interactive="try-dotnet-method" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/Int32_Equals/VB/int32_equals.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="2eb62-198">编译器重载决策可能会考虑两个 <see cref="M:System.Int32.Equals(System.Int32)" /> 方法重载的行为中的明显差异。</span><span class="sxs-lookup"><span data-stu-id="2eb62-198">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int32.Equals(System.Int32)" /> method overloads.</span></span> <span data-ttu-id="2eb62-199">如果定义了 <paramref name="obj" /> 参数与 <see cref="T:System.Int32" /> 之间的隐式转换，并且参数未类型化为 <see cref="T:System.Object" />，则编译器会执行隐式转换并调用 <see cref="M:System.Int32.Equals(System.Int32)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-199">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int32" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int32.Equals(System.Int32)" /> method.</span></span> <span data-ttu-id="2eb62-200">否则，它们调用 <see cref="M:System.Int32.Equals(System.Object)" /> 方法，如果其 <paramref name="obj" /> 参数不是 <see cref="T:System.Int32" /> 值，则它始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-200">Otherwise, they call the <see cref="M:System.Int32.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int32" /> value.</span></span> <span data-ttu-id="2eb62-201">下面的示例演示两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="2eb62-201">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="2eb62-202">对于 <see cref="T:System.Byte" />、<see cref="T:System.Int16" />、<see cref="T:System.SByte" />和 <see cref="T:System.UInt16" /> 值，第一次比较将返回 <see langword="true" />，因为编译器会自动执行扩大转换并调用 <see cref="M:System.Int32.Equals(System.Int32)" /> 方法，而第二次比较将返回 <see langword="false" />，因为编译器会调用 <see cref="M:System.Int32.Equals(System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-202">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.SByte" />, and <see cref="T:System.UInt16" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int32.Equals(System.Int32)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int32.Equals(System.Object)" /> method.</span></span>  

<span data-ttu-id="2eb62-203">：：： code language = "csharp" source = "~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs" interactive = "dotnet" id = "Snippet1"：：：：：： code language = "vb" source = "~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb" id = "Snippet1"：：：</span><span class="sxs-lookup"><span data-stu-id="2eb62-203">:::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs" interactive="try-dotnet" id="Snippet1"::: :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb" id="Snippet1":::</span></span>

          </para></block>
        <altmember cref="M:System.Int32.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="int.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2eb62-204">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="2eb62-204">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="2eb62-205">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="2eb62-205">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="int.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2eb62-206">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-206">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="2eb62-207">枚举常数 <see cref="F:System.TypeCode.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-207">The enumerated constant, <see cref="F:System.TypeCode.Int32" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const int MaxValue = 2147483647;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxValue = int32(2147483647)" />
      <MemberSignature Language="DocId" Value="F:System.Int32.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Integer  = 2147483647" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxValue = 2147483647;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : int" Usage="System.int.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2147483647</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2eb62-208">表示 <see cref="T:System.Int32" /> 的最大可能值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-208">Represents the largest possible value of an <see cref="T:System.Int32" />.</span></span> <span data-ttu-id="2eb62-209">此字段是常量。</span><span class="sxs-lookup"><span data-stu-id="2eb62-209">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-210">此常量的值为 2147483647;即十六进制0x7FFFFFFF。</span><span class="sxs-lookup"><span data-stu-id="2eb62-210">The value of this constant is 2,147,483,647; that is, hexadecimal 0x7FFFFFFF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eb62-211">下面的示例使用 <xref:System.Int32.MaxValue> 属性来防止 <xref:System.OverflowException> 转换为 <xref:System.Int32> 值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-211">The following example uses the <xref:System.Int32.MaxValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int32> value.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.int32.maxvalue/cpp/maxvalue1.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.maxvalue/cs/maxvalue1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.maxvalue/vb/maxvalue1.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int32.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const int MinValue = -2147483648;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinValue = int32(-2147483648)" />
      <MemberSignature Language="DocId" Value="F:System.Int32.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Integer  = -2147483648" />
      <MemberSignature Language="C++ CLI" Value="public: int MinValue = -2147483648;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : int" Usage="System.int.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2147483648</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2eb62-212">表示 <see cref="T:System.Int32" /> 的最小可能值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-212">Represents the smallest possible value of <see cref="T:System.Int32" />.</span></span> <span data-ttu-id="2eb62-213">此字段是常量。</span><span class="sxs-lookup"><span data-stu-id="2eb62-213">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-214">此常量的值为-2147483648;即十六进制0x80000000。</span><span class="sxs-lookup"><span data-stu-id="2eb62-214">The value of this constant is -2,147,483,648; that is, hexadecimal 0x80000000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eb62-215">下面的示例使用 <xref:System.Int32.MinValue> 属性来防止 <xref:System.OverflowException> 转换为 <xref:System.Int32> 值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-215">The following example uses the <xref:System.Int32.MinValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int32> value.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.int32.maxvalue/cpp/maxvalue1.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.maxvalue/cs/maxvalue1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.maxvalue/vb/maxvalue1.vb" id="Snippet1"::: 
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int32.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2eb62-216">将数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-216">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.Int32.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; int" Usage="System.int.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="2eb62-217">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="2eb62-217">A string containing a number to convert.</span></span></param>
        <summary><span data-ttu-id="2eb62-218">将数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-218">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="2eb62-219">与 <paramref name="s" /> 中包含的数字等效的 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-219">A 32-bit signed integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-220">`s` 参数包含如下格式：</span><span class="sxs-lookup"><span data-stu-id="2eb62-220">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="2eb62-221">[ws][sign]digits[ws]</span><span class="sxs-lookup"><span data-stu-id="2eb62-221">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="2eb62-222">方括号（[和]）中的项是可选的。</span><span class="sxs-lookup"><span data-stu-id="2eb62-222">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="2eb62-223">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="2eb62-223">The following table describes each element.</span></span>  
  
|<span data-ttu-id="2eb62-224">元素</span><span class="sxs-lookup"><span data-stu-id="2eb62-224">Element</span></span>|<span data-ttu-id="2eb62-225">说明</span><span class="sxs-lookup"><span data-stu-id="2eb62-225">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="2eb62-226">ws</span><span class="sxs-lookup"><span data-stu-id="2eb62-226">ws</span></span>|<span data-ttu-id="2eb62-227">可选空白。</span><span class="sxs-lookup"><span data-stu-id="2eb62-227">Optional white space.</span></span>|  
|<span data-ttu-id="2eb62-228">签名</span><span class="sxs-lookup"><span data-stu-id="2eb62-228">sign</span></span>|<span data-ttu-id="2eb62-229">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="2eb62-229">An optional sign.</span></span>|  
|<span data-ttu-id="2eb62-230">位数</span><span class="sxs-lookup"><span data-stu-id="2eb62-230">digits</span></span>|<span data-ttu-id="2eb62-231">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="2eb62-231">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="2eb62-232">使用 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 样式对 `s` 参数进行解释。</span><span class="sxs-lookup"><span data-stu-id="2eb62-232">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="2eb62-233">除了十进制数字外，只允许使用前导和尾随空格以及前导符号。</span><span class="sxs-lookup"><span data-stu-id="2eb62-233">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="2eb62-234">若要显式定义可出现在 `s`中的样式元素，请使用 <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> 或 <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-234">To explicitly define the style elements that can be present in `s`, use either the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2eb62-235">使用为当前系统区域性初始化的 <xref:System.Globalization.NumberFormatInfo> 对象中的格式设置信息对 `s` 参数进行分析。</span><span class="sxs-lookup"><span data-stu-id="2eb62-235">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="2eb62-236">有关详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="2eb62-236">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="2eb62-237">若要使用其他某个区域性的格式设置信息分析字符串，请使用 <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-237">To parse a string using the formatting information of some other culture, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eb62-238">下面的示例演示如何使用 <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType> 方法将字符串值转换为32位带符号整数值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-238">The following example demonstrates how to convert a string value into a 32-bit signed integer value using the <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="2eb62-239">然后，将生成的整数值显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="2eb62-239">The resulting integer value is then displayed to the console.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse1.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse1.vb" id="Snippet1"::: 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2eb62-240"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-240"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="2eb62-241"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="2eb62-241"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="2eb62-242"><paramref name="s" /> 表示一个小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="2eb62-242"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="2eb62-243">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="2eb62-243">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; int" Usage="System.int.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="2eb62-244">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="2eb62-244">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="2eb62-245">枚举值的按位组合，用于指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-245">A bitwise combination of the enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="2eb62-246">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-246">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="2eb62-247">将指定样式的数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-247">Converts the string representation of a number in a specified style to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="2eb62-248">与 <paramref name="s" /> 中指定的数字等效的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-248">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-249">`style` 参数定义在 `s` 参数中允许的样式元素（如空格、正负号或千位分隔符符号），以便分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="2eb62-249">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, or the thousands separator symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="2eb62-250">它必须是 <xref:System.Globalization.NumberStyles> 枚举中的位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="2eb62-250">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="2eb62-251">根据 `style`的值，`s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="2eb62-251">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="2eb62-252">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span><span class="sxs-lookup"><span data-stu-id="2eb62-252">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="2eb62-253">如果 `style` 包括 <xref:System.Globalization.NumberStyles.AllowHexSpecifier>，则为; 否则为：</span><span class="sxs-lookup"><span data-stu-id="2eb62-253">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="2eb62-254">[ws]hexdigits[ws]</span><span class="sxs-lookup"><span data-stu-id="2eb62-254">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="2eb62-255">方括号（[和]）中的项是可选的。</span><span class="sxs-lookup"><span data-stu-id="2eb62-255">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="2eb62-256">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="2eb62-256">The following table describes each element.</span></span>  
  
|<span data-ttu-id="2eb62-257">元素</span><span class="sxs-lookup"><span data-stu-id="2eb62-257">Element</span></span>|<span data-ttu-id="2eb62-258">说明</span><span class="sxs-lookup"><span data-stu-id="2eb62-258">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="2eb62-259">*ws*</span><span class="sxs-lookup"><span data-stu-id="2eb62-259">*ws*</span></span>|<span data-ttu-id="2eb62-260">可选空白。</span><span class="sxs-lookup"><span data-stu-id="2eb62-260">Optional white space.</span></span> <span data-ttu-id="2eb62-261">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 标志，则空格可以出现在 `s` 的开头，如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 标志，则它可以出现在 `s` 的末尾。</span><span class="sxs-lookup"><span data-stu-id="2eb62-261">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="2eb62-262">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="2eb62-262">A culture-specific currency symbol.</span></span> <span data-ttu-id="2eb62-263">其在字符串中的位置由当前区域性的 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> 和 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> 属性定义。</span><span class="sxs-lookup"><span data-stu-id="2eb62-263">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="2eb62-264">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 标志，当前区域性的货币符号可以出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="2eb62-264">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="2eb62-265">*sign*</span><span class="sxs-lookup"><span data-stu-id="2eb62-265">*sign*</span></span>|<span data-ttu-id="2eb62-266">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="2eb62-266">An optional sign.</span></span> <span data-ttu-id="2eb62-267">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 标志，则符号会出现在 `s` 的开头，如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 标志，则它可以出现在 `s` 的末尾处。</span><span class="sxs-lookup"><span data-stu-id="2eb62-267">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="2eb62-268">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 标志，则可以在 `s` 中使用括号来表示负值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-268">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="2eb62-269">*digits*</span><span class="sxs-lookup"><span data-stu-id="2eb62-269">*digits*</span></span><br /><br /> <span data-ttu-id="2eb62-270">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="2eb62-270">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="2eb62-271">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="2eb62-271">*exponential_digits*</span></span>|<span data-ttu-id="2eb62-272">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="2eb62-272">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="2eb62-273">对于*fractional_digits*，只有数字0有效。</span><span class="sxs-lookup"><span data-stu-id="2eb62-273">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="2eb62-274">*、*</span><span class="sxs-lookup"><span data-stu-id="2eb62-274">*,*</span></span>|<span data-ttu-id="2eb62-275">区域性特定的千位分隔符。</span><span class="sxs-lookup"><span data-stu-id="2eb62-275">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="2eb62-276">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 标志，当前区域性的千位分隔符可以出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="2eb62-276">The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="2eb62-277">*。*</span><span class="sxs-lookup"><span data-stu-id="2eb62-277">*.*</span></span>|<span data-ttu-id="2eb62-278">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="2eb62-278">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="2eb62-279">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 标志，当前区域性的小数点符号会出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="2eb62-279">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="2eb62-280">只有数字0才能作为小数位出现，以便分析操作成功;如果*fractional_digits*包含任何其他数字，则会引发 <xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="2eb62-280">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="2eb62-281">*e*</span><span class="sxs-lookup"><span data-stu-id="2eb62-281">*e*</span></span>|<span data-ttu-id="2eb62-282">"E" 或 "E" 字符，指示值以指数表示法表示。</span><span class="sxs-lookup"><span data-stu-id="2eb62-282">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="2eb62-283">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 标志，则 `s` 参数可以表示指数表示法中的数字。</span><span class="sxs-lookup"><span data-stu-id="2eb62-283">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="2eb62-284">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="2eb62-284">*hexdigits*</span></span>|<span data-ttu-id="2eb62-285">从0到 f 的十六进制数字序列，或者从0到 F。</span><span class="sxs-lookup"><span data-stu-id="2eb62-285">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="2eb62-286">无论 `style` 参数的值是什么，分析操作都将忽略 `s` 中任何终止的 NUL （U + 0000）字符。</span><span class="sxs-lookup"><span data-stu-id="2eb62-286">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="2eb62-287">仅带数字的字符串（对应于 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 样式）在 <xref:System.Int32> 类型的范围内，始终分析是否成功。</span><span class="sxs-lookup"><span data-stu-id="2eb62-287">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfull if it is in the range of the <xref:System.Int32> type.</span></span> <span data-ttu-id="2eb62-288">大多数其余 <xref:System.Globalization.NumberStyles> 成员控制可能但不要求出现在输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-288">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="2eb62-289">下表指示单个 <xref:System.Globalization.NumberStyles> 成员如何影响可能出现在 `s`中的元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-289">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="2eb62-290">NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="2eb62-290">NumberStyles value</span></span>|<span data-ttu-id="2eb62-291">除数字外允许在 s 中使用的元素</span><span class="sxs-lookup"><span data-stu-id="2eb62-291">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="2eb62-292">仅限*数字*元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-292">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="2eb62-293">小数点（ *.*</span><span class="sxs-lookup"><span data-stu-id="2eb62-293">The decimal point ( *.*</span></span> <span data-ttu-id="2eb62-294">）和*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-294">) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="2eb62-295">`s` 参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-295">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="2eb62-296">`s`开头的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-296">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="2eb62-297">`s`末尾的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-297">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="2eb62-298">`s`开头的*sign*元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-298">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="2eb62-299">`s`末尾的*sign*元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-299">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="2eb62-300">用括号括起数值的*符号*元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-300">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="2eb62-301">千位分隔符（ *，* ）元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-301">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="2eb62-302">*$* 元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-302">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="2eb62-303">“全部”。</span><span class="sxs-lookup"><span data-stu-id="2eb62-303">All.</span></span> <span data-ttu-id="2eb62-304">`s` 参数不能表示十六进制数或以指数表示法表示的数字。</span><span class="sxs-lookup"><span data-stu-id="2eb62-304">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="2eb62-305">`s`开头或结尾处的*ws*元素、`s`开头的*符号*和小数点（ *。*</span><span class="sxs-lookup"><span data-stu-id="2eb62-305">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point ( *.*</span></span> <span data-ttu-id="2eb62-306">代号.</span><span class="sxs-lookup"><span data-stu-id="2eb62-306">) symbol.</span></span> <span data-ttu-id="2eb62-307">`s` 参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-307">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="2eb62-308">`ws`、`sign`、千位分隔符（ *、* ）和小数点（ *。*</span><span class="sxs-lookup"><span data-stu-id="2eb62-308">The `ws`, `sign`, thousands separator ( *,* ), and decimal point ( *.*</span></span> <span data-ttu-id="2eb62-309">单元.</span><span class="sxs-lookup"><span data-stu-id="2eb62-309">) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="2eb62-310">除 `s` 之外的所有样式不能表示十六进制数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-310">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="2eb62-311">如果使用 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 标志，则 `s` 必须是不带前缀的十六进制值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-311">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="2eb62-312">例如，"C9AF3" 分析成功，但 "0xC9AF3" 不能。</span><span class="sxs-lookup"><span data-stu-id="2eb62-312">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="2eb62-313">可以与 `s` 参数组合在一起的其他标志 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 并 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="2eb62-313">The only other flags that can be combined with the `s` parameter it are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2eb62-314">（<xref:System.Globalization.NumberStyles> 枚举包含复合数字样式，<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，其中包含两个空格标志。）</span><span class="sxs-lookup"><span data-stu-id="2eb62-314">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="2eb62-315">`s` 参数是使用为当前系统区域性初始化 <xref:System.Globalization.NumberFormatInfo> 对象中的格式设置信息分析的。</span><span class="sxs-lookup"><span data-stu-id="2eb62-315">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="2eb62-316">若要指定其格式设置信息用于分析操作的区域性，请调用 <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 重载。</span><span class="sxs-lookup"><span data-stu-id="2eb62-316">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eb62-317">下面的示例使用 <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> 方法分析多个 <xref:System.Int32> 值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2eb62-317">The following example uses the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> method to parse the string representations of several <xref:System.Int32> values.</span></span> <span data-ttu-id="2eb62-318">该示例的当前区域性为 en-us。</span><span class="sxs-lookup"><span data-stu-id="2eb62-318">The current culture for the example is en-US.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse2.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse2.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse2.vb" id="Snippet2":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2eb62-319"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-319"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2eb62-320"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-320"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="2eb62-321">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2eb62-321">-or-</span></span> 
 <span data-ttu-id="2eb62-322"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="2eb62-322"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="2eb62-323"><paramref name="s" /> 的格式不符合 <paramref name="style" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-323"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="2eb62-324"><paramref name="s" /> 表示一个小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="2eb62-324"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
<span data-ttu-id="2eb62-325">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2eb62-325">-or-</span></span> 
 <span data-ttu-id="2eb62-326"><paramref name="s" /> 包含非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="2eb62-326"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
        <altmember cref="Overload:System.Int32.TryParse" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="2eb62-327">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="2eb62-327">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; int" Usage="System.int.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="2eb62-328">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="2eb62-328">A string containing a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="2eb62-329">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="2eb62-329">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="2eb62-330">将指定的区域性特定格式的数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-330">Converts the string representation of a number in a specified culture-specific format to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="2eb62-331">与 <paramref name="s" /> 中指定的数字等效的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-331">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-332"><xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> 方法的此重载通常用于将可通过多种方式设置格式的文本转换为 <xref:System.Int32> 值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-332">This overload of the <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to an <xref:System.Int32> value.</span></span> <span data-ttu-id="2eb62-333">例如，它可用于将用户输入的文本转换为一个数字值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-333">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="2eb62-334">`s` 参数包含如下格式：</span><span class="sxs-lookup"><span data-stu-id="2eb62-334">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="2eb62-335">[ws][sign]digits[ws]</span><span class="sxs-lookup"><span data-stu-id="2eb62-335">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="2eb62-336">方括号（[和]）中的项是可选的。</span><span class="sxs-lookup"><span data-stu-id="2eb62-336">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="2eb62-337">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="2eb62-337">The following table describes each element.</span></span>  
  
|<span data-ttu-id="2eb62-338">元素</span><span class="sxs-lookup"><span data-stu-id="2eb62-338">Element</span></span>|<span data-ttu-id="2eb62-339">说明</span><span class="sxs-lookup"><span data-stu-id="2eb62-339">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="2eb62-340">*ws*</span><span class="sxs-lookup"><span data-stu-id="2eb62-340">*ws*</span></span>|<span data-ttu-id="2eb62-341">可选空白。</span><span class="sxs-lookup"><span data-stu-id="2eb62-341">Optional white space.</span></span>|  
|<span data-ttu-id="2eb62-342">*sign*</span><span class="sxs-lookup"><span data-stu-id="2eb62-342">*sign*</span></span>|<span data-ttu-id="2eb62-343">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="2eb62-343">An optional sign.</span></span>|  
|<span data-ttu-id="2eb62-344">*digits*</span><span class="sxs-lookup"><span data-stu-id="2eb62-344">*digits*</span></span>|<span data-ttu-id="2eb62-345">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="2eb62-345">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="2eb62-346">使用 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 样式对 `s` 参数进行解释。</span><span class="sxs-lookup"><span data-stu-id="2eb62-346">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="2eb62-347">除了十进制数字外，只允许使用前导和尾随空格以及前导符号。</span><span class="sxs-lookup"><span data-stu-id="2eb62-347">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="2eb62-348">若要显式定义可出现在 `s`中的样式元素，请使用 <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-348">To explicitly define the style elements that can be present in `s`, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2eb62-349">`provider` 参数是一个 <xref:System.IFormatProvider> 实现，如 <xref:System.Globalization.NumberFormatInfo> 或 <xref:System.Globalization.CultureInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="2eb62-349">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="2eb62-350">`provider` 参数提供有关 `s`格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="2eb62-350">The `provider` parameter supplies culture-specific information about the format of `s`.</span></span> <span data-ttu-id="2eb62-351">如果 `null``provider`，则使用当前区域性的 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="2eb62-351">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eb62-352">下面的示例是 Web 窗体的按钮单击事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="2eb62-352">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="2eb62-353">它使用 <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> 属性返回的数组来确定用户的区域设置。</span><span class="sxs-lookup"><span data-stu-id="2eb62-353">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="2eb62-354">然后，它将实例化与该区域设置相对应的 <xref:System.Globalization.CultureInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="2eb62-354">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="2eb62-355">然后，将属于该 <xref:System.Globalization.CultureInfo> 对象的 <xref:System.Globalization.NumberFormatInfo> 对象传递到 <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> 方法，以将用户的输入转换为 <xref:System.Int32> 值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-355">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to an <xref:System.Int32> value.</span></span>  
  
 [!code-csharp[ParseMethod#4](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#4)]
 [!code-vb[ParseMethod#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2eb62-356"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-356"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="2eb62-357"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="2eb62-357"><paramref name="s" /> is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="2eb62-358"><paramref name="s" /> 表示一个小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="2eb62-358"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
        <altmember cref="Overload:System.Int32.TryParse" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="2eb62-359">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="2eb62-359">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Integer" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; int" Usage="System.int.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="2eb62-360">一个范围，包含表示要转换的数字的字符。</span><span class="sxs-lookup"><span data-stu-id="2eb62-360">A span containing the characters representing the number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="2eb62-361">枚举值的按位组合，用于指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-361">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="2eb62-362">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-362">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="2eb62-363">一个对象，用于提供有关 <paramref name="s" /> 格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="2eb62-363">An object that supplies culture-specific information about the format of <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="2eb62-364">将指定样式和区域性特定格式的数字的范围表示形式转换为其等效的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-364">Converts the span representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="2eb62-365">与 <paramref name="s" /> 中指定的数字等效的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-365">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; int" Usage="System.int.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="2eb62-366">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="2eb62-366">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="2eb62-367">枚举值的按位组合，用于指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-367">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="2eb62-368">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-368">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="2eb62-369">一个对象，用于提供有关 <paramref name="s" /> 格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="2eb62-369">An object that supplies culture-specific information about the format of <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="2eb62-370">将指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-370">Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="2eb62-371">与 <paramref name="s" /> 中指定的数字等效的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-371">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-372">`style` 参数定义在 `s` 参数中允许的样式元素（如空格或正号），以便分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="2eb62-372">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="2eb62-373">它必须是 <xref:System.Globalization.NumberStyles> 枚举中的位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="2eb62-373">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="2eb62-374">根据 `style`的值，`s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="2eb62-374">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="2eb62-375">[ws][$][sign][digits,]digits[.fractional_digist][e[sign]exponential_digits][ws]</span><span class="sxs-lookup"><span data-stu-id="2eb62-375">[ws][$][sign][digits,]digits[.fractional_digist][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="2eb62-376">如果 `style` 包括 <xref:System.Globalization.NumberStyles.AllowHexSpecifier>，则为; 否则为：</span><span class="sxs-lookup"><span data-stu-id="2eb62-376">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="2eb62-377">[ws]hexdigits[ws]</span><span class="sxs-lookup"><span data-stu-id="2eb62-377">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="2eb62-378">方括号（[和]）中的项是可选的。</span><span class="sxs-lookup"><span data-stu-id="2eb62-378">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="2eb62-379">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="2eb62-379">The following table describes each element.</span></span>  
  
|<span data-ttu-id="2eb62-380">元素</span><span class="sxs-lookup"><span data-stu-id="2eb62-380">Element</span></span>|<span data-ttu-id="2eb62-381">说明</span><span class="sxs-lookup"><span data-stu-id="2eb62-381">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="2eb62-382">*ws*</span><span class="sxs-lookup"><span data-stu-id="2eb62-382">*ws*</span></span>|<span data-ttu-id="2eb62-383">可选空白。</span><span class="sxs-lookup"><span data-stu-id="2eb62-383">Optional white space.</span></span> <span data-ttu-id="2eb62-384">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 标志，则空格可以出现在 `s` 的开头，如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 标志，则它可以出现在 `s` 的末尾。</span><span class="sxs-lookup"><span data-stu-id="2eb62-384">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="2eb62-385">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="2eb62-385">A culture-specific currency symbol.</span></span> <span data-ttu-id="2eb62-386">其在字符串中的位置由 `provider` 参数的 <xref:System.IFormatProvider.GetFormat%2A> 方法返回的 <xref:System.Globalization.NumberFormatInfo> 对象的 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> 属性定义。</span><span class="sxs-lookup"><span data-stu-id="2eb62-386">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="2eb62-387">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 标志，货币符号可以出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="2eb62-387">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="2eb62-388">*sign*</span><span class="sxs-lookup"><span data-stu-id="2eb62-388">*sign*</span></span>|<span data-ttu-id="2eb62-389">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="2eb62-389">An optional sign.</span></span> <span data-ttu-id="2eb62-390">如果 `style` 包括 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 标志，`s` 或者如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 标志，则符号会出现在 `s` 的开头。</span><span class="sxs-lookup"><span data-stu-id="2eb62-390">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="2eb62-391">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 标志，则可以在 `s` 中使用括号来表示负值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-391">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="2eb62-392">*digits*</span><span class="sxs-lookup"><span data-stu-id="2eb62-392">*digits*</span></span><br /><br /> <span data-ttu-id="2eb62-393">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="2eb62-393">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="2eb62-394">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="2eb62-394">*exponential_digits*</span></span>|<span data-ttu-id="2eb62-395">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="2eb62-395">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="2eb62-396">对于*fractional_digits*，只有数字0有效。</span><span class="sxs-lookup"><span data-stu-id="2eb62-396">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="2eb62-397">*、*</span><span class="sxs-lookup"><span data-stu-id="2eb62-397">*,*</span></span>|<span data-ttu-id="2eb62-398">区域性特定的千位分隔符。</span><span class="sxs-lookup"><span data-stu-id="2eb62-398">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="2eb62-399">如果 `style` 包括 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 标志，则 `provider` 指定的区域性的千位分隔符可以出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="2eb62-399">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="2eb62-400">*。*</span><span class="sxs-lookup"><span data-stu-id="2eb62-400">*.*</span></span>|<span data-ttu-id="2eb62-401">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="2eb62-401">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="2eb62-402">如果 `style` 包括 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 标志，则 `provider` 指定的区域性的小数点符号可以出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="2eb62-402">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span><br /><br /> <span data-ttu-id="2eb62-403">只有数字0才能作为小数位出现，以便分析操作成功;如果*fractional_digits*包含任何其他数字，则会引发 <xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="2eb62-403">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="2eb62-404">*e*</span><span class="sxs-lookup"><span data-stu-id="2eb62-404">*e*</span></span>|<span data-ttu-id="2eb62-405">"E" 或 "E" 字符，指示值以指数表示法表示。</span><span class="sxs-lookup"><span data-stu-id="2eb62-405">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="2eb62-406">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 标志，则 `s` 参数可以表示指数表示法中的数字。</span><span class="sxs-lookup"><span data-stu-id="2eb62-406">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="2eb62-407">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="2eb62-407">*hexdigits*</span></span>|<span data-ttu-id="2eb62-408">从0到 f 的十六进制数字序列，或者从0到 F。</span><span class="sxs-lookup"><span data-stu-id="2eb62-408">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="2eb62-409">无论 `style` 参数的值是什么，分析操作都将忽略 `s` 中任何终止的 NUL （U + 0000）字符。</span><span class="sxs-lookup"><span data-stu-id="2eb62-409">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="2eb62-410">仅带十进制数字的字符串（对应于 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 样式）始终在 <xref:System.Int32> 类型的范围内成功进行分析。</span><span class="sxs-lookup"><span data-stu-id="2eb62-410">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully if it is in the range of the <xref:System.Int32> type.</span></span> <span data-ttu-id="2eb62-411">大多数其余 <xref:System.Globalization.NumberStyles> 成员控制可能但不要求出现在此输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-411">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="2eb62-412">下表指示单个 <xref:System.Globalization.NumberStyles> 成员如何影响可能出现在 `s`中的元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-412">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="2eb62-413">非复合 NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="2eb62-413">Non-composite NumberStyles values</span></span>|<span data-ttu-id="2eb62-414">除数字外允许在 s 中使用的元素</span><span class="sxs-lookup"><span data-stu-id="2eb62-414">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="2eb62-415">仅十进制数字。</span><span class="sxs-lookup"><span data-stu-id="2eb62-415">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="2eb62-416">小数点（ *.*</span><span class="sxs-lookup"><span data-stu-id="2eb62-416">The decimal point ( *.*</span></span> <span data-ttu-id="2eb62-417">）和*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-417">) and *fractional-digits* elements.</span></span> <span data-ttu-id="2eb62-418">但是，*小数位数*必须仅包含一个或多个0位数，否则会引发 <xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="2eb62-418">However, *fractional-digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="2eb62-419">`s` 参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-419">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="2eb62-420">如果 `s` 表示指数表示法中的数字，则它必须表示 <xref:System.Int32> 数据类型范围内的一个整数，而不包含非零的小数部分。</span><span class="sxs-lookup"><span data-stu-id="2eb62-420">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="2eb62-421">`s`开头的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-421">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="2eb62-422">`s`末尾的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-422">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="2eb62-423">正负号可以出现在*数字*之前。</span><span class="sxs-lookup"><span data-stu-id="2eb62-423">A positive sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="2eb62-424">正负号可以出现在*数字*之后。</span><span class="sxs-lookup"><span data-stu-id="2eb62-424">A positive sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="2eb62-425">用括号括起数值的*符号*元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-425">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="2eb62-426">千位分隔符（ *，* ）元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-426">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="2eb62-427">*$* 元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-427">The *$* element.</span></span>|  
  
 <span data-ttu-id="2eb62-428">如果使用 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 标志，则 `s` 必须是不带前缀的十六进制值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-428">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="2eb62-429">例如，"C9AF3" 分析成功，但 "0xC9AF3" 不能。</span><span class="sxs-lookup"><span data-stu-id="2eb62-429">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="2eb62-430">`style` 中的唯一其他标志 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 并 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="2eb62-430">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2eb62-431">（<xref:System.Globalization.NumberStyles> 枚举具有复合数字样式，<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，它包含两个空格标志。）</span><span class="sxs-lookup"><span data-stu-id="2eb62-431">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="2eb62-432">`provider` 参数是一个 <xref:System.IFormatProvider> 实现，如 <xref:System.Globalization.NumberFormatInfo> 或 <xref:System.Globalization.CultureInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="2eb62-432">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="2eb62-433">`provider` 参数提供用于分析的特定于区域性的信息。</span><span class="sxs-lookup"><span data-stu-id="2eb62-433">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="2eb62-434">如果 `null``provider`，则使用当前区域性的 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="2eb62-434">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eb62-435">下面的示例使用各种 `style` 和 `provider` 参数来分析 <xref:System.Int32> 值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2eb62-435">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Int32> values.</span></span> <span data-ttu-id="2eb62-436">它还说明了根据用于分析操作的格式设置信息的区域性，可解释相同字符串的一些不同方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-436">It also illustrates some of the different ways the same string can be interpreted depending on the culture whose formatting information is used for the parsing operation.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse3.cpp" id="Snippet3":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse3.cs" interactive="try-dotnet" id="Snippet3":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse3.vb" id="Snippet3":::  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2eb62-437"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-437"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2eb62-438"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-438"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="2eb62-439">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2eb62-439">-or-</span></span> 
 <span data-ttu-id="2eb62-440"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="2eb62-440"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="2eb62-441"><paramref name="s" /> 的格式不符合 <paramref name="style" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-441"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="2eb62-442"><paramref name="s" /> 表示一个小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="2eb62-442"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
<span data-ttu-id="2eb62-443">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2eb62-443">-or-</span></span> 
 <span data-ttu-id="2eb62-444"><paramref name="s" /> 包含非零的小数位。</span><span class="sxs-lookup"><span data-stu-id="2eb62-444"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="2eb62-445">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="2eb62-445">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberSignature Language="F#" Value="abstract member System.IComparable.CompareTo : obj -&gt; int&#xA;override this.System.IComparable.CompareTo : obj -&gt; int" Usage="int.System.IComparable.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2eb62-446">要比较的对象，或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-446">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="2eb62-447">将此实例与指定对象进行比较并返回一个对二者的相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="2eb62-447">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="2eb62-448">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-448">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>
          <list type="table"><listheader><term><span data-ttu-id="2eb62-449">返回值</span><span class="sxs-lookup"><span data-stu-id="2eb62-449">Return Value</span></span></term><description><span data-ttu-id="2eb62-450">说明</span><span class="sxs-lookup"><span data-stu-id="2eb62-450">Description</span></span></description></listheader><item><term><span data-ttu-id="2eb62-451">小于零</span><span class="sxs-lookup"><span data-stu-id="2eb62-451">Less than zero</span></span></term><description><span data-ttu-id="2eb62-452">此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-452">This instance is less than <paramref name="value" />.</span></span></description></item><item><term><span data-ttu-id="2eb62-453">零</span><span class="sxs-lookup"><span data-stu-id="2eb62-453">Zero</span></span></term><description><span data-ttu-id="2eb62-454">此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-454">This instance is equal to <paramref name="value" />.</span></span></description></item><item><term><span data-ttu-id="2eb62-455">大于零</span><span class="sxs-lookup"><span data-stu-id="2eb62-455">Greater than zero</span></span></term><description><span data-ttu-id="2eb62-456">此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-456">This instance is greater than <paramref name="value" />.</span></span>

<span data-ttu-id="2eb62-457">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2eb62-457">-or-</span></span>

<span data-ttu-id="2eb62-458"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-458"><paramref name="value" /> is <see langword="null" />.</span></span></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="2eb62-459">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="2eb62-459">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2eb62-460">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="2eb62-460">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span>

<span data-ttu-id="2eb62-461">无论其值如何，<xref:System.Int32>的任何实例都视为大于 `null`。</span><span class="sxs-lookup"><span data-stu-id="2eb62-461">Any instance of <xref:System.Int32>, regardless of its value, is considered greater than `null`.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2eb62-462"><paramref name="value" /> 不是 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-462"><paramref name="value" /> is not an <see cref="T:System.Int32" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.GetTypeCode : unit -&gt; TypeCode&#xA;override this.System.IConvertible.GetTypeCode : unit -&gt; TypeCode" Usage="int.System.IConvertible.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2eb62-463">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-463">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="2eb62-464">枚举常数 <see cref="F:System.TypeCode.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-464">The enumerated constant, <see cref="F:System.TypeCode.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="2eb62-465">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="2eb62-465">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2eb62-466">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="2eb62-466">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToBoolean : IFormatProvider -&gt; bool&#xA;override this.System.IConvertible.ToBoolean : IFormatProvider -&gt; bool" Usage="int.System.IConvertible.ToBoolean provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="2eb62-467">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="2eb62-467">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="2eb62-468">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-468">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="2eb62-469">如果当前实例的值不为零，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-469"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-470">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="2eb62-470">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2eb62-471">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="2eb62-471">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2eb62-472">建议的替代项是调用 <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-472">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToByte : IFormatProvider -&gt; byte&#xA;override this.System.IConvertible.ToByte : IFormatProvider -&gt; byte" Usage="int.System.IConvertible.ToByte provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="2eb62-473">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="2eb62-473">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="2eb62-474">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-474">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="2eb62-475">当前实例的值，已转换为 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-475">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-476">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="2eb62-476">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2eb62-477">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="2eb62-477">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2eb62-478">建议的替代项是调用 <xref:System.Convert.ToByte%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-478">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToChar : IFormatProvider -&gt; char&#xA;override this.System.IConvertible.ToChar : IFormatProvider -&gt; char" Usage="int.System.IConvertible.ToChar provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="2eb62-479">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="2eb62-479">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="2eb62-480">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-480">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="2eb62-481">当前实例的值，已转换为 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-481">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-482">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="2eb62-482">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2eb62-483">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="2eb62-483">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2eb62-484">建议的替代项是调用 <xref:System.Convert.ToChar%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-484">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDateTime : IFormatProvider -&gt; DateTime&#xA;override this.System.IConvertible.ToDateTime : IFormatProvider -&gt; DateTime" Usage="int.System.IConvertible.ToDateTime provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="2eb62-485">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="2eb62-485">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="2eb62-486">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="2eb62-486">This conversion is not supported.</span></span> <span data-ttu-id="2eb62-487">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-487">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="2eb62-488">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="2eb62-488">This conversion is not supported.</span></span> <span data-ttu-id="2eb62-489">不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-489">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="2eb62-490">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="2eb62-490">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDecimal : IFormatProvider -&gt; decimal&#xA;override this.System.IConvertible.ToDecimal : IFormatProvider -&gt; decimal" Usage="int.System.IConvertible.ToDecimal provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="2eb62-491">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="2eb62-491">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="2eb62-492">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-492">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="2eb62-493">当前实例的值，已转换为 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-493">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-494">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="2eb62-494">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2eb62-495">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="2eb62-495">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2eb62-496">建议的替代项是调用 <xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-496">The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDouble : IFormatProvider -&gt; double&#xA;override this.System.IConvertible.ToDouble : IFormatProvider -&gt; double" Usage="int.System.IConvertible.ToDouble provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="2eb62-497">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="2eb62-497">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="2eb62-498">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-498">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="2eb62-499">当前实例的值，已转换为 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-499">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-500">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="2eb62-500">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2eb62-501">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="2eb62-501">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2eb62-502">建议的替代项是调用 <xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-502">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt16 : IFormatProvider -&gt; int16&#xA;override this.System.IConvertible.ToInt16 : IFormatProvider -&gt; int16" Usage="int.System.IConvertible.ToInt16 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="2eb62-503">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="2eb62-503">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="2eb62-504">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-504">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="2eb62-505">当前实例的值，已转换为 <see cref="T:System.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-505">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-506">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="2eb62-506">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2eb62-507">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="2eb62-507">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2eb62-508">建议的替代项是调用 <xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-508">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt32 : IFormatProvider -&gt; int&#xA;override this.System.IConvertible.ToInt32 : IFormatProvider -&gt; int" Usage="int.System.IConvertible.ToInt32 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="2eb62-509">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="2eb62-509">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="2eb62-510">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-510">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="2eb62-511">当前实例的值，未更改。</span><span class="sxs-lookup"><span data-stu-id="2eb62-511">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-512">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="2eb62-512">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2eb62-513">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="2eb62-513">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt64 : IFormatProvider -&gt; int64&#xA;override this.System.IConvertible.ToInt64 : IFormatProvider -&gt; int64" Usage="int.System.IConvertible.ToInt64 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="2eb62-514">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="2eb62-514">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="2eb62-515">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-515">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="2eb62-516">当前实例的值，已转换为 <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-516">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-517">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="2eb62-517">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2eb62-518">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="2eb62-518">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2eb62-519">建议的替代项是调用 <xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-519">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToSByte : IFormatProvider -&gt; sbyte&#xA;override this.System.IConvertible.ToSByte : IFormatProvider -&gt; sbyte" Usage="int.System.IConvertible.ToSByte provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="2eb62-520">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="2eb62-520">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="2eb62-521">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-521">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="2eb62-522">当前实例的值，已转换为 <see cref="T:System.SByte" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-522">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-523">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="2eb62-523">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2eb62-524">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="2eb62-524">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2eb62-525">建议的替代项是调用 <xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-525">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToSingle : IFormatProvider -&gt; single&#xA;override this.System.IConvertible.ToSingle : IFormatProvider -&gt; single" Usage="int.System.IConvertible.ToSingle provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="2eb62-526">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="2eb62-526">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="2eb62-527">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-527">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="2eb62-528">当前实例的值，已转换为 <see cref="T:System.Single" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-528">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-529">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="2eb62-529">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2eb62-530">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="2eb62-530">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2eb62-531">建议的替代项是调用 <xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-531">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToType (type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToType : Type * IFormatProvider -&gt; obj&#xA;override this.System.IConvertible.ToType : Type * IFormatProvider -&gt; obj" Usage="int.System.IConvertible.ToType (type, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2eb62-532">此 <see cref="T:System.Int32" /> 值要转换为的类型。</span><span class="sxs-lookup"><span data-stu-id="2eb62-532">The type to which to convert this <see cref="T:System.Int32" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="2eb62-533">一个对象，用于提供有关返回值格式的信息。</span><span class="sxs-lookup"><span data-stu-id="2eb62-533">An object that provides information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="2eb62-534">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-534">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="2eb62-535">当前实例的值，已转换为 <paramref name="type" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-535">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-536">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="2eb62-536">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2eb62-537">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="2eb62-537">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2eb62-538">建议的替代方法是改为调用 `static` （Visual Basic） <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> 方法中的`Shared`。</span><span class="sxs-lookup"><span data-stu-id="2eb62-538">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt16 : IFormatProvider -&gt; uint16&#xA;override this.System.IConvertible.ToUInt16 : IFormatProvider -&gt; uint16" Usage="int.System.IConvertible.ToUInt16 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="2eb62-539">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="2eb62-539">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="2eb62-540">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-540">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="2eb62-541">当前实例的值，已转换为 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-541">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-542">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="2eb62-542">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2eb62-543">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="2eb62-543">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2eb62-544">建议的替代项是调用 <xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-544">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt32 : IFormatProvider -&gt; uint32&#xA;override this.System.IConvertible.ToUInt32 : IFormatProvider -&gt; uint32" Usage="int.System.IConvertible.ToUInt32 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="2eb62-545">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="2eb62-545">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="2eb62-546">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-546">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="2eb62-547">当前实例的值，已转换为 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-547">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-548">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="2eb62-548">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2eb62-549">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="2eb62-549">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2eb62-550">建议的替代项是调用 <xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-550">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt64 : IFormatProvider -&gt; uint64&#xA;override this.System.IConvertible.ToUInt64 : IFormatProvider -&gt; uint64" Usage="int.System.IConvertible.ToUInt64 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="2eb62-551">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="2eb62-551">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="2eb62-552">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-552">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="2eb62-553">当前实例的值，已转换为 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-553">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-554">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="2eb62-554">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2eb62-555">它只能在 <xref:System.Int32> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="2eb62-555">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="2eb62-556">建议的替代项是调用 <xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-556">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2eb62-557">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2eb62-557">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="int.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2eb62-558">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2eb62-558">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="2eb62-559">此实例的值的字符串表示形式，由减号（如果值为负）和没有前导零的从 0 到 9 的数字序列组成。</span><span class="sxs-lookup"><span data-stu-id="2eb62-559">The string representation of the value of this instance, consisting of a negative sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-560"><xref:System.Int32.ToString> 方法使用当前区域性的 <xref:System.Globalization.NumberFormatInfo> 对象，设置默认值（"G" 或 "常规"）格式的 <xref:System.Int32> 值的格式。</span><span class="sxs-lookup"><span data-stu-id="2eb62-560">The <xref:System.Int32.ToString> method formats an <xref:System.Int32> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="2eb62-561">如果要指定其他格式或区域性，请使用 <xref:System.Int32.ToString%2A> 方法的其他重载，如下所示：</span><span class="sxs-lookup"><span data-stu-id="2eb62-561">If you want to specify a different format or culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="2eb62-562">使用格式</span><span class="sxs-lookup"><span data-stu-id="2eb62-562">To use format</span></span>|<span data-ttu-id="2eb62-563">对于区域性</span><span class="sxs-lookup"><span data-stu-id="2eb62-563">For culture</span></span>|<span data-ttu-id="2eb62-564">使用重载</span><span class="sxs-lookup"><span data-stu-id="2eb62-564">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="2eb62-565">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="2eb62-565">Default ("G") format</span></span>|<span data-ttu-id="2eb62-566">特定区域性</span><span class="sxs-lookup"><span data-stu-id="2eb62-566">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="2eb62-567">特定格式</span><span class="sxs-lookup"><span data-stu-id="2eb62-567">A specific format</span></span>|<span data-ttu-id="2eb62-568">默认（当前）区域性</span><span class="sxs-lookup"><span data-stu-id="2eb62-568">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
|<span data-ttu-id="2eb62-569">特定格式</span><span class="sxs-lookup"><span data-stu-id="2eb62-569">A specific format</span></span>|<span data-ttu-id="2eb62-570">特定区域性</span><span class="sxs-lookup"><span data-stu-id="2eb62-570">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="2eb62-571">.NET Framework 提供了广泛的格式设置支持，以下格式设置主题更详细地介绍了这些支持：</span><span class="sxs-lookup"><span data-stu-id="2eb62-571">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="2eb62-572">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings)和[自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="2eb62-572">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="2eb62-573">有关格式设置的详细信息，请参阅[格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="2eb62-573">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eb62-574">下面的示例使用默认的 <xref:System.Int32.ToString> 方法显示 <xref:System.Int32> 值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-574">The following example displays an <xref:System.Int32> value using the default <xref:System.Int32.ToString> method.</span></span> <span data-ttu-id="2eb62-575">它还显示了使用一些标准格式说明符生成的 <xref:System.Int32> 值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2eb62-575">It also displays the string representations of the <xref:System.Int32> value that results from using a number of standard format specifiers.</span></span> <span data-ttu-id="2eb62-576">这些示例使用 en-us 区域性的格式设置约定来显示。</span><span class="sxs-lookup"><span data-stu-id="2eb62-576">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-cpp[System.Int32.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString1.cpp#1)]
 [!code-csharp[System.Int32.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#1)]
 [!code-vb[System.Int32.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="2eb62-577">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="2eb62-577">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="int.ToString provider" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="2eb62-578">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="2eb62-578">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="2eb62-579">使用指定的区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2eb62-579">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="2eb62-580">此实例的值的字符串表示形式，由 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="2eb62-580">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-581"><xref:System.Int32.ToString%28System.IFormatProvider%29> 方法通过使用指定区域性的 <xref:System.Globalization.NumberFormatInfo> 对象，设置默认值（"G" 或 "常规"）格式的 <xref:System.Int32> 值的格式。</span><span class="sxs-lookup"><span data-stu-id="2eb62-581">The <xref:System.Int32.ToString%28System.IFormatProvider%29> method formats an <xref:System.Int32> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="2eb62-582">如果要指定其他格式或当前区域性，请使用 <xref:System.Int32.ToString%2A> 方法的其他重载，如下所示：</span><span class="sxs-lookup"><span data-stu-id="2eb62-582">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="2eb62-583">使用格式</span><span class="sxs-lookup"><span data-stu-id="2eb62-583">To use format</span></span>|<span data-ttu-id="2eb62-584">对于区域性</span><span class="sxs-lookup"><span data-stu-id="2eb62-584">For culture</span></span>|<span data-ttu-id="2eb62-585">使用重载</span><span class="sxs-lookup"><span data-stu-id="2eb62-585">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="2eb62-586">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="2eb62-586">Default ("G") format</span></span>|<span data-ttu-id="2eb62-587">默认（当前）区域性</span><span class="sxs-lookup"><span data-stu-id="2eb62-587">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="2eb62-588">特定格式</span><span class="sxs-lookup"><span data-stu-id="2eb62-588">A specific format</span></span>|<span data-ttu-id="2eb62-589">默认（当前）区域性</span><span class="sxs-lookup"><span data-stu-id="2eb62-589">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
|<span data-ttu-id="2eb62-590">特定格式</span><span class="sxs-lookup"><span data-stu-id="2eb62-590">A specific format</span></span>|<span data-ttu-id="2eb62-591">特定区域性</span><span class="sxs-lookup"><span data-stu-id="2eb62-591">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="2eb62-592">`provider` 参数是实现 <xref:System.IFormatProvider> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="2eb62-592">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="2eb62-593">它的 <xref:System.IFormatProvider.GetFormat%2A> 方法返回一个 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供有关此方法返回的字符串格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="2eb62-593">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="2eb62-594">实现 <xref:System.IFormatProvider> 的对象可以是以下任一项：</span><span class="sxs-lookup"><span data-stu-id="2eb62-594">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="2eb62-595">一个表示要使用其格式设置规则的区域性的 <xref:System.Globalization.CultureInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="2eb62-595">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="2eb62-596">一个包含此值的特定数字格式信息的 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="2eb62-596">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="2eb62-597">一个实现 <xref:System.IFormatProvider> 且其 <xref:System.IFormatProvider.GetFormat%2A> 方法返回提供格式设置信息的 <xref:System.Globalization.NumberFormatInfo> 对象的自定义对象。</span><span class="sxs-lookup"><span data-stu-id="2eb62-597">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="2eb62-598">如果 `provider` `null` 或无法从 `provider`获取 <xref:System.Globalization.NumberFormatInfo> 对象，则使用当前区域性的 <xref:System.Globalization.NumberFormatInfo> 对象对返回值进行格式设置。</span><span class="sxs-lookup"><span data-stu-id="2eb62-598">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture.</span></span> <span data-ttu-id="2eb62-599">有关线程的当前区域性的信息，请参阅 <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="2eb62-599">For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2eb62-600">.NET Framework 提供了广泛的格式设置支持，以下格式设置主题更详细地介绍了这些支持：</span><span class="sxs-lookup"><span data-stu-id="2eb62-600">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="2eb62-601">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings)和[自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="2eb62-601">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="2eb62-602">有关格式设置的详细信息，请参阅[格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="2eb62-602">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eb62-603">下面的示例使用表示多个不同区域性的 <xref:System.Globalization.CultureInfo> 对象显示 <xref:System.Int32> 值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2eb62-603">The following example displays the string representation of an <xref:System.Int32> value using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString2.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs" interactive="try-dotnet-method" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb" id="Snippet2":::
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="2eb62-604">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="2eb62-604">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="int.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="2eb62-605">标准或自定义的数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="2eb62-605">A standard or custom numeric format string.</span></span></param>
        <summary><span data-ttu-id="2eb62-606">使用指定的格式，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2eb62-606">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span></span></summary>
        <returns><span data-ttu-id="2eb62-607">此实例的值的字符串表示形式，由 <paramref name="format" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="2eb62-607">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-608"><xref:System.Int32.ToString%28System.String%29> 方法通过使用表示当前区域性约定的 <xref:System.Globalization.NumberFormatInfo> 对象来设置指定格式的 <xref:System.Int32> 值的格式。</span><span class="sxs-lookup"><span data-stu-id="2eb62-608">The <xref:System.Int32.ToString%28System.String%29> method formats an <xref:System.Int32> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="2eb62-609">如果要使用默认格式（"G" 或 "常规"）或指定不同的区域性，请使用 <xref:System.Int32.ToString%2A> 方法的其他重载，如下所示：</span><span class="sxs-lookup"><span data-stu-id="2eb62-609">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="2eb62-610">使用格式</span><span class="sxs-lookup"><span data-stu-id="2eb62-610">To use format</span></span>|<span data-ttu-id="2eb62-611">对于区域性</span><span class="sxs-lookup"><span data-stu-id="2eb62-611">For culture</span></span>|<span data-ttu-id="2eb62-612">使用重载</span><span class="sxs-lookup"><span data-stu-id="2eb62-612">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="2eb62-613">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="2eb62-613">Default ("G") format</span></span>|<span data-ttu-id="2eb62-614">默认（当前）区域性</span><span class="sxs-lookup"><span data-stu-id="2eb62-614">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="2eb62-615">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="2eb62-615">Default ("G") format</span></span>|<span data-ttu-id="2eb62-616">特定区域性</span><span class="sxs-lookup"><span data-stu-id="2eb62-616">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="2eb62-617">特定格式</span><span class="sxs-lookup"><span data-stu-id="2eb62-617">A specific format</span></span>|<span data-ttu-id="2eb62-618">特定区域性</span><span class="sxs-lookup"><span data-stu-id="2eb62-618">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="2eb62-619">`format` 参数可以是任何有效的标准数值格式说明符（"R" 除外）以及自定义数字格式说明符的任意组合。</span><span class="sxs-lookup"><span data-stu-id="2eb62-619">The `format` parameter can be any valid standard numeric format specifier except for "R", as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="2eb62-620">如果 `format` `null` 或空字符串（""），则此实例的返回值将使用通用数值格式说明符（"G"）进行格式设置。</span><span class="sxs-lookup"><span data-stu-id="2eb62-620">If `format` is `null` or an empty string (""), the return value of this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="2eb62-621">.NET Framework 提供了广泛的格式设置支持，以下格式设置主题更详细地介绍了这些支持：</span><span class="sxs-lookup"><span data-stu-id="2eb62-621">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="2eb62-622">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings)和[自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="2eb62-622">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="2eb62-623">有关格式设置的详细信息，请参阅[格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="2eb62-623">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="2eb62-624">此实例的返回值的格式为当前区域性的 <xref:System.Globalization.NumberFormatInfo>。</span><span class="sxs-lookup"><span data-stu-id="2eb62-624">The return value of this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eb62-625">下面的示例使用每个受支持的标准数值格式说明符和两个自定义数字格式字符串来显示 <xref:System.Int32> 值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-625">The following example displays an <xref:System.Int32> value using each of the supported standard numeric format specifiers, together with two custom numeric format strings.</span></span> <span data-ttu-id="2eb62-626">将数值转换为字符串时，此示例使用 en-us 区域性的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="2eb62-626">In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString3.cpp" id="Snippet3":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs" interactive="try-dotnet-method" id="Snippet3":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb" id="Snippet3"::: 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="2eb62-627"><paramref name="format" /> 无效或不受支持。</span><span class="sxs-lookup"><span data-stu-id="2eb62-627"><paramref name="format" /> is invalid or not supported.</span></span></exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="2eb62-628">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="2eb62-628">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings"><span data-ttu-id="2eb62-629">标准数字格式字符串</span><span class="sxs-lookup"><span data-stu-id="2eb62-629">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings"><span data-ttu-id="2eb62-630">自定义数字格式字符串</span><span class="sxs-lookup"><span data-stu-id="2eb62-630">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/how-to-pad-a-number-with-leading-zeros"><span data-ttu-id="2eb62-631">如何：用前导零填充数字</span><span class="sxs-lookup"><span data-stu-id="2eb62-631">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="int.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="2eb62-632">标准或自定义的数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="2eb62-632">A standard or custom numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="2eb62-633">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="2eb62-633">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="2eb62-634">使用指定的格式和区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="2eb62-634">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="2eb62-635">此实例的值的字符串表示形式，由 <paramref name="format" /> 和 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="2eb62-635">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-636"><xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29> 方法通过使用指定区域性的 <xref:System.Globalization.NumberFormatInfo> 对象来设置指定格式的 <xref:System.Int32> 值的格式。</span><span class="sxs-lookup"><span data-stu-id="2eb62-636">The <xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29> method formats an <xref:System.Int32> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="2eb62-637">如果要使用默认格式或区域性设置，请使用 <xref:System.Int32.ToString%2A> 方法的其他重载，如下所示：</span><span class="sxs-lookup"><span data-stu-id="2eb62-637">If you want to use default format or culture settings, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="2eb62-638">使用格式</span><span class="sxs-lookup"><span data-stu-id="2eb62-638">To use format</span></span>|<span data-ttu-id="2eb62-639">对于区域性</span><span class="sxs-lookup"><span data-stu-id="2eb62-639">For culture</span></span>|<span data-ttu-id="2eb62-640">使用重载</span><span class="sxs-lookup"><span data-stu-id="2eb62-640">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="2eb62-641">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="2eb62-641">Default ("G") format</span></span>|<span data-ttu-id="2eb62-642">默认（当前）区域性</span><span class="sxs-lookup"><span data-stu-id="2eb62-642">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="2eb62-643">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="2eb62-643">Default ("G") format</span></span>|<span data-ttu-id="2eb62-644">特定区域性</span><span class="sxs-lookup"><span data-stu-id="2eb62-644">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="2eb62-645">特定格式</span><span class="sxs-lookup"><span data-stu-id="2eb62-645">A specific format</span></span>|<span data-ttu-id="2eb62-646">默认（当前）区域性</span><span class="sxs-lookup"><span data-stu-id="2eb62-646">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
  
 <span data-ttu-id="2eb62-647">`format` 参数可以是标准或自定义数字格式字符串。</span><span class="sxs-lookup"><span data-stu-id="2eb62-647">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="2eb62-648">除了 "R" （或 "r"）以外的所有标准数字格式字符串，都支持所有自定义数字格式字符。</span><span class="sxs-lookup"><span data-stu-id="2eb62-648">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="2eb62-649">如果 `format` `null` 或空字符串（""），则此实例的返回值将使用通用数值格式说明符（"G"）进行格式设置。</span><span class="sxs-lookup"><span data-stu-id="2eb62-649">If `format` is `null` or an empty string (""), the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="2eb62-650">`provider` 参数是实现 <xref:System.IFormatProvider> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="2eb62-650">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="2eb62-651">它的 <xref:System.IFormatProvider.GetFormat%2A> 方法返回一个 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供有关此方法返回的字符串格式的区域性特定格式信息。</span><span class="sxs-lookup"><span data-stu-id="2eb62-651">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific format information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="2eb62-652">实现 <xref:System.IFormatProvider> 的对象可以是以下任一项：</span><span class="sxs-lookup"><span data-stu-id="2eb62-652">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="2eb62-653">一个表示要使用其格式设置规则的区域性的 <xref:System.Globalization.CultureInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="2eb62-653">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="2eb62-654">一个包含此值的特定数字格式信息的 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="2eb62-654">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="2eb62-655">一个实现 <xref:System.IFormatProvider> 且其 <xref:System.IFormatProvider.GetFormat%2A> 方法返回提供格式设置信息的 <xref:System.Globalization.NumberFormatInfo> 对象的自定义对象。</span><span class="sxs-lookup"><span data-stu-id="2eb62-655">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="2eb62-656">如果 `provider` `null` 或无法从 `provider`获取 <xref:System.Globalization.NumberFormatInfo> 对象，则此实例的返回值将使用当前区域性的 <xref:System.Globalization.NumberFormatInfo> 进行格式设置。</span><span class="sxs-lookup"><span data-stu-id="2eb62-656">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value for this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
 <span data-ttu-id="2eb62-657">.NET Framework 提供了广泛的格式设置支持，以下格式设置主题更详细地介绍了这些支持：</span><span class="sxs-lookup"><span data-stu-id="2eb62-657">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="2eb62-658">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings)和[自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="2eb62-658">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="2eb62-659">有关格式设置的详细信息，请参阅[格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="2eb62-659">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eb62-660">下面的示例使用三个不同区域性的每个受支持的标准数值格式说明符显示正值和负值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-660">The following example displays a positive and a negative value using each of the supported standard numeric format specifiers for three different cultures.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString4.cpp" id="Snippet4":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs" interactive="try-dotnet-method" id="Snippet4":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb" id="Snippet4"::: 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="2eb62-661"><paramref name="format" /> 无效或不受支持。</span><span class="sxs-lookup"><span data-stu-id="2eb62-661"><paramref name="format" /> is invalid or not supported.</span></span></exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="2eb62-662">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="2eb62-662">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings"><span data-ttu-id="2eb62-663">标准数字格式字符串</span><span class="sxs-lookup"><span data-stu-id="2eb62-663">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings"><span data-ttu-id="2eb62-664">自定义数字格式字符串</span><span class="sxs-lookup"><span data-stu-id="2eb62-664">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/how-to-pad-a-number-with-leading-zeros"><span data-ttu-id="2eb62-665">如何：用前导零填充数字</span><span class="sxs-lookup"><span data-stu-id="2eb62-665">How to: Pad a Number with Leading Zeros</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-cs/"><span data-ttu-id="2eb62-666">示例： .NET Core WinForms 格式设置实用工具C#（）</span><span class="sxs-lookup"><span data-stu-id="2eb62-666">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-vb/"><span data-ttu-id="2eb62-667">示例： .NET Core WinForms 格式设置实用工具（Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="2eb62-667">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = default, IFormatProvider provider = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="int.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="2eb62-668">此方法返回时，此实例的值将设置为字符范围格式。</span><span class="sxs-lookup"><span data-stu-id="2eb62-668">When this method returns, this instance's value formatted as a span of characters.</span></span></param>
        <param name="charsWritten"><span data-ttu-id="2eb62-669">此方法返回时，为写入到 <paramref name="destination" /> 的字符数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-669">When this method returns, the number of characters that were written in <paramref name="destination" />.</span></span></param>
        <param name="format"><span data-ttu-id="2eb62-670">一个包含字符的范围，这些字符表示定义可接受的 <paramref name="destination" /> 格式的标准或自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="2eb62-670">A span containing the charactes that represent a standard or custom format string that defines the acceptable format for <paramref name="destination" />.</span></span></param>
        <param name="provider"><span data-ttu-id="2eb62-671">一个可选对象，提供有关 <paramref name="destination" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="2eb62-671">An optional object that supplies culture-specific formatting information for <paramref name="destination" />.</span></span></param>
        <summary><span data-ttu-id="2eb62-672">尝试将当前整数数字实例的值的格式设置为提供的字符范围。</span><span class="sxs-lookup"><span data-stu-id="2eb62-672">Tries to format the value of the current integer number instance into the provided span of characters.</span></span></summary>
        <returns><span data-ttu-id="2eb62-673">如果格式设置成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-673"><see langword="true" /> if the formatting was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2eb62-674">将数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-674">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="2eb62-675">一个指示操作是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-675">A return value indicates whether the operation succeeded.</span></span></summary>
        <altmember cref="Overload:System.Int32.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * int -&gt; bool" Usage="System.int.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="result" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="2eb62-676">一个范围，包含表示要转换的数字的字符。</span><span class="sxs-lookup"><span data-stu-id="2eb62-676">A span containing the characters that represent the number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="2eb62-677">当此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 中所包含的数字等效的 32 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="2eb62-677">When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="2eb62-678">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式不符合 <paramref name="style" />，或者表示的数字小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="2eb62-678">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="2eb62-679">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="2eb62-679">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="2eb62-680">将指定样式和区域性特定格式的数字的范围表示形式转换为其等效的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-680">Converts the span representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="2eb62-681">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-681">A return value indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="2eb62-682">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-682"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.String,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * int -&gt; bool" Usage="System.int.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="2eb62-683">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="2eb62-683">A string containing a number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="2eb62-684">当此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 中所包含的数字等效的 32 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="2eb62-684">When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="2eb62-685">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式不正确，或者表示的数字小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="2eb62-685">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="2eb62-686">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="2eb62-686">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="2eb62-687">将数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-687">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="2eb62-688">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-688">A return value indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="2eb62-689">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-689"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-690"><xref:System.Int32.TryParse%2A> 方法类似于 <xref:System.Int32.Parse%2A> 方法，但如果转换失败，则 <xref:System.Int32.TryParse%2A> 方法不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="2eb62-690">The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="2eb62-691">当 `s` 无效且无法成功分析时，无需使用异常处理来测试 <xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="2eb62-691">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="2eb62-692">`s` 参数包含如下格式：</span><span class="sxs-lookup"><span data-stu-id="2eb62-692">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="2eb62-693">[ws][sign]digits[ws]</span><span class="sxs-lookup"><span data-stu-id="2eb62-693">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="2eb62-694">方括号（[和]）中的项是可选的。</span><span class="sxs-lookup"><span data-stu-id="2eb62-694">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="2eb62-695">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="2eb62-695">The following table describes each element.</span></span>  
  
|<span data-ttu-id="2eb62-696">元素</span><span class="sxs-lookup"><span data-stu-id="2eb62-696">Element</span></span>|<span data-ttu-id="2eb62-697">说明</span><span class="sxs-lookup"><span data-stu-id="2eb62-697">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="2eb62-698">*ws*</span><span class="sxs-lookup"><span data-stu-id="2eb62-698">*ws*</span></span>|<span data-ttu-id="2eb62-699">可选空白。</span><span class="sxs-lookup"><span data-stu-id="2eb62-699">Optional white space.</span></span>|  
|<span data-ttu-id="2eb62-700">*sign*</span><span class="sxs-lookup"><span data-stu-id="2eb62-700">*sign*</span></span>|<span data-ttu-id="2eb62-701">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="2eb62-701">An optional sign.</span></span>|  
|<span data-ttu-id="2eb62-702">*digits*</span><span class="sxs-lookup"><span data-stu-id="2eb62-702">*digits*</span></span>|<span data-ttu-id="2eb62-703">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="2eb62-703">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="2eb62-704">使用 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> 样式对 `s` 参数进行解释。</span><span class="sxs-lookup"><span data-stu-id="2eb62-704">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="2eb62-705">除十进制数字外，只允许使用前导和尾随空格以及前导符号。</span><span class="sxs-lookup"><span data-stu-id="2eb62-705">In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="2eb62-706">若要将样式元素与 `s`中可以存在的区域性特定格式设置信息一起显式定义，请使用 <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-706">To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2eb62-707">使用为当前系统区域性初始化的 <xref:System.Globalization.NumberFormatInfo> 对象中的格式设置信息对 `s` 参数进行分析。</span><span class="sxs-lookup"><span data-stu-id="2eb62-707">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="2eb62-708">有关详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="2eb62-708">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="2eb62-709"><xref:System.Int32.TryParse%2A> 方法的此重载将 `s` 参数中的所有数字解释为十进制数字。</span><span class="sxs-lookup"><span data-stu-id="2eb62-709">This overload of the <xref:System.Int32.TryParse%2A> method interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="2eb62-710">若要分析十六进制数的字符串表示形式，请调用 <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> 重载。</span><span class="sxs-lookup"><span data-stu-id="2eb62-710">To parse the string representation of a hexadecimal number, call the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eb62-711">下面的示例使用多个不同的字符串值调用 <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-711">The following example calls the <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29?displayProperty=nameWithType> method with a number of different string values.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.TryParse/cpp/int32.tryparse1.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.TryParse/cs/TryParse1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.TryParse/vb/TryParse1.vb" id="Snippet1":::
  
 <span data-ttu-id="2eb62-712">在此示例中，<xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29> 方法无法转换的某些字符串是：</span><span class="sxs-lookup"><span data-stu-id="2eb62-712">Some of the strings that the <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29> method is unable to convert in this example are:</span></span>  
  
-   <span data-ttu-id="2eb62-713">"9432.0".</span><span class="sxs-lookup"><span data-stu-id="2eb62-713">"9432.0".</span></span> <span data-ttu-id="2eb62-714">转换失败，因为字符串不能包含小数分隔符;它必须仅包含整数位数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-714">The conversion fails because the string cannot contain a decimal separator; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="2eb62-715">"16,667".</span><span class="sxs-lookup"><span data-stu-id="2eb62-715">"16,667".</span></span> <span data-ttu-id="2eb62-716">转换失败，因为字符串不能包含组分隔符;它必须仅包含整数位数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-716">The conversion fails because the string cannot contain group separators; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="2eb62-717">"(100)".</span><span class="sxs-lookup"><span data-stu-id="2eb62-717">"(100)".</span></span> <span data-ttu-id="2eb62-718">转换失败的原因是，字符串不能包含由当前区域性的 <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> 和 <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> 属性所定义的负号。</span><span class="sxs-lookup"><span data-stu-id="2eb62-718">The conversion fails because the string cannot contain a negative sign other than the one defined by the current culture's <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> properties.</span></span>  
  
-   <span data-ttu-id="2eb62-719">"01FA".</span><span class="sxs-lookup"><span data-stu-id="2eb62-719">"01FA".</span></span> <span data-ttu-id="2eb62-720">转换失败，因为字符串不能包含十六进制数字;它只能包含十进制数字。</span><span class="sxs-lookup"><span data-stu-id="2eb62-720">The conversion fails because the string cannot contain hexadecimal digits; it must contain decimal digits only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="M:System.Int32.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="2eb62-721">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="2eb62-721">Parsing Numeric Strings in .NET</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-cs/"><span data-ttu-id="2eb62-722">示例： .NET Core WinForms 格式设置实用工具C#（）</span><span class="sxs-lookup"><span data-stu-id="2eb62-722">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/windowsforms-formatting-utility-vb/"><span data-ttu-id="2eb62-723">示例： .NET Core WinForms 格式设置实用工具（Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="2eb62-723">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider * int -&gt; bool" Usage="System.int.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="result" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="2eb62-724">一个范围，包含表示要转换的数字的字符。</span><span class="sxs-lookup"><span data-stu-id="2eb62-724">A span containing the characters that represent the number to convert.</span></span> <span data-ttu-id="2eb62-725">该范围使用由 <paramref name="style" /> 指定的样式来进行解释</span><span class="sxs-lookup"><span data-stu-id="2eb62-725">The span is interpreted using the style specified by <paramref name="style" /></span></span></param>
        <param name="style"><span data-ttu-id="2eb62-726">枚举值的按位组合，用于指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-726">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="2eb62-727">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-727">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="2eb62-728">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="2eb62-728">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="2eb62-729">当此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 中所包含的数字等效的 32 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="2eb62-729">When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="2eb62-730">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式不符合 <paramref name="style" />，或者表示的数字小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="2eb62-730">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="2eb62-731">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="2eb62-731">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="2eb62-732">将指定样式和区域性特定格式的数字的范围表示形式转换为其等效的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-732">Converts the span representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="2eb62-733">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-733">A return value indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="2eb62-734">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-734"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider * int -&gt; bool" Usage="System.int.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="2eb62-735">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="2eb62-735">A string containing a number to convert.</span></span> <span data-ttu-id="2eb62-736">该字符串使用由 <paramref name="style" /> 指定的样式来进行解释。</span><span class="sxs-lookup"><span data-stu-id="2eb62-736">The string is interpreted using the style specified by <paramref name="style" />.</span></span></param>
        <param name="style"><span data-ttu-id="2eb62-737">枚举值的按位组合，用于指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-737">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="2eb62-738">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Integer" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-738">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="2eb62-739">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="2eb62-739">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="2eb62-740">当此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 中所包含的数字等效的 32 位无符号整数值；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="2eb62-740">When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="2eb62-741">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式不符合 <paramref name="style" />，或者表示的数字小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="2eb62-741">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="2eb62-742">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="2eb62-742">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="2eb62-743">将指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-743">Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="2eb62-744">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-744">A return value indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="2eb62-745">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2eb62-745"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2eb62-746"><xref:System.Int32.TryParse%2A> 方法类似于 <xref:System.Int32.Parse%2A> 方法，但如果转换失败，则 <xref:System.Int32.TryParse%2A> 方法不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="2eb62-746">The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="2eb62-747">当 `s` 无效且无法成功分析时，无需使用异常处理来测试 <xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="2eb62-747">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="2eb62-748">`style` 参数定义在 `s` 参数中允许的样式元素（如空格或正号或负号），以便分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="2eb62-748">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="2eb62-749">它必须是 <xref:System.Globalization.NumberStyles> 枚举中的位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="2eb62-749">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="2eb62-750">根据 `style`的值，`s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="2eb62-750">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="2eb62-751">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span><span class="sxs-lookup"><span data-stu-id="2eb62-751">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="2eb62-752">如果 `style` 参数包括 <xref:System.Globalization.NumberStyles.AllowHexSpecifier>，则为; 否则为：</span><span class="sxs-lookup"><span data-stu-id="2eb62-752">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="2eb62-753">[ws]hexdigits[ws]</span><span class="sxs-lookup"><span data-stu-id="2eb62-753">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="2eb62-754">方括号（[和]）中的项是可选的。</span><span class="sxs-lookup"><span data-stu-id="2eb62-754">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="2eb62-755">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="2eb62-755">The following table describes each element.</span></span>  
  
|<span data-ttu-id="2eb62-756">元素</span><span class="sxs-lookup"><span data-stu-id="2eb62-756">Element</span></span>|<span data-ttu-id="2eb62-757">说明</span><span class="sxs-lookup"><span data-stu-id="2eb62-757">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="2eb62-758">*ws*</span><span class="sxs-lookup"><span data-stu-id="2eb62-758">*ws*</span></span>|<span data-ttu-id="2eb62-759">可选空白。</span><span class="sxs-lookup"><span data-stu-id="2eb62-759">Optional white space.</span></span> <span data-ttu-id="2eb62-760">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 标志，`s` 或者如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 标志，则空格可以出现在 `s` 的开头。</span><span class="sxs-lookup"><span data-stu-id="2eb62-760">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="2eb62-761">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="2eb62-761">A culture-specific currency symbol.</span></span> <span data-ttu-id="2eb62-762">其在字符串中的位置由 `provider` 参数的 <xref:System.IFormatProvider.GetFormat%2A> 方法返回的 <xref:System.Globalization.NumberFormatInfo> 对象的 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> 属性定义。</span><span class="sxs-lookup"><span data-stu-id="2eb62-762">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="2eb62-763">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 标志，货币符号可以出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="2eb62-763">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="2eb62-764">*sign*</span><span class="sxs-lookup"><span data-stu-id="2eb62-764">*sign*</span></span>|<span data-ttu-id="2eb62-765">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="2eb62-765">An optional sign.</span></span> <span data-ttu-id="2eb62-766">如果 `style` 包括 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 或 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 标志，则符号符号会出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="2eb62-766">A sign symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> or <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flags.</span></span>|  
|<span data-ttu-id="2eb62-767">*digits*</span><span class="sxs-lookup"><span data-stu-id="2eb62-767">*digits*</span></span>|<span data-ttu-id="2eb62-768">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="2eb62-768">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="2eb62-769">*、*</span><span class="sxs-lookup"><span data-stu-id="2eb62-769">*,*</span></span>|<span data-ttu-id="2eb62-770">区域性特定的千位分隔符。</span><span class="sxs-lookup"><span data-stu-id="2eb62-770">A culture-specific thousands separator.</span></span> <span data-ttu-id="2eb62-771">如果 `style` 包括 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 标志，则 `provider` 指定的区域性的千位分隔符可以出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="2eb62-771">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="2eb62-772">*。*</span><span class="sxs-lookup"><span data-stu-id="2eb62-772">*.*</span></span>|<span data-ttu-id="2eb62-773">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="2eb62-773">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="2eb62-774">如果 `style` 包括 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 标志，则 `provider` 指定的区域性的小数点符号可以出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="2eb62-774">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="2eb62-775">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="2eb62-775">*fractional_digits*</span></span>|<span data-ttu-id="2eb62-776">数字0的一个或多个匹配项。</span><span class="sxs-lookup"><span data-stu-id="2eb62-776">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="2eb62-777">仅当 `style` 包含 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 标志时，小数位才能出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="2eb62-777">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="2eb62-778">*e*</span><span class="sxs-lookup"><span data-stu-id="2eb62-778">*e*</span></span>|<span data-ttu-id="2eb62-779">"E" 或 "E" 字符，指示值以指数表示法表示。</span><span class="sxs-lookup"><span data-stu-id="2eb62-779">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="2eb62-780">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 标志，则 `s` 参数可以表示指数表示法中的数字。</span><span class="sxs-lookup"><span data-stu-id="2eb62-780">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="2eb62-781">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="2eb62-781">*hexdigits*</span></span>|<span data-ttu-id="2eb62-782">从0到 f 的十六进制数字序列，或者从0到 F。</span><span class="sxs-lookup"><span data-stu-id="2eb62-782">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="2eb62-783">无论 `style` 参数的值是什么，分析操作都将忽略 `s` 中任何终止的 NUL （U + 0000）字符。</span><span class="sxs-lookup"><span data-stu-id="2eb62-783">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="2eb62-784">仅包含十进制数字的字符串（对应于 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 标志）始终分析成功。</span><span class="sxs-lookup"><span data-stu-id="2eb62-784">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="2eb62-785">大多数其余 <xref:System.Globalization.NumberStyles> 成员控制可能但不要求出现在此输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-785">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="2eb62-786">下表指示单个 <xref:System.Globalization.NumberStyles> 成员如何影响可能出现在 `s`中的元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-786">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="2eb62-787">非复合 NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="2eb62-787">Non-composite NumberStyles values</span></span>|<span data-ttu-id="2eb62-788">除数字外允许在 s 中使用的元素</span><span class="sxs-lookup"><span data-stu-id="2eb62-788">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="2eb62-789">仅十进制数字。</span><span class="sxs-lookup"><span data-stu-id="2eb62-789">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="2eb62-790">小数点（*.*）和*fractional_digits*元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-790">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="2eb62-791">但*fractional_digits*只能包含一个或多个0位数，否则该方法将返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="2eb62-791">However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="2eb62-792">`s` 参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-792">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="2eb62-793">如果 `s` 表示指数表示法中的数字，则它必须表示 <xref:System.Int32> 数据类型范围内的一个整数，而不包含非零的小数部分。</span><span class="sxs-lookup"><span data-stu-id="2eb62-793">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="2eb62-794">`s`开头的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-794">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="2eb62-795">`s`末尾的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-795">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="2eb62-796">符号可以出现在*数字*之前。</span><span class="sxs-lookup"><span data-stu-id="2eb62-796">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="2eb62-797">符号可以出现在*数字*之后。</span><span class="sxs-lookup"><span data-stu-id="2eb62-797">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="2eb62-798">用括号括起数值的*符号*元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-798">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="2eb62-799">千位分隔符（*，*）元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-799">The thousands separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="2eb62-800">*$* 元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-800">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency?displayProperty=nameWithType>|<span data-ttu-id="2eb62-801">所有元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-801">All elements.</span></span> <span data-ttu-id="2eb62-802">`s` 参数不能表示十六进制数或以指数表示法表示的数字。</span><span class="sxs-lookup"><span data-stu-id="2eb62-802">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>|<span data-ttu-id="2eb62-803">`s`开头或结尾处的*ws*元素、`s`开头的*符号*，以及小数点（*.*）符号。</span><span class="sxs-lookup"><span data-stu-id="2eb62-803">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="2eb62-804">`s` 参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-804">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>|<span data-ttu-id="2eb62-805">*Ws*、 *sign*、千位分隔符（*，*）和小数点（*.*）元素。</span><span class="sxs-lookup"><span data-stu-id="2eb62-805">The *ws*, *sign*, thousands separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any?displayProperty=nameWithType>|<span data-ttu-id="2eb62-806">除 `s` 之外的所有样式不能表示十六进制数。</span><span class="sxs-lookup"><span data-stu-id="2eb62-806">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="2eb62-807">如果使用 <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> 标志，则 `s` 必须是不带前缀的十六进制值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-807">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="2eb62-808">例如，"C9AF3" 分析成功，但 "0xC9AF3" 不能。</span><span class="sxs-lookup"><span data-stu-id="2eb62-808">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="2eb62-809">`style` 中的唯一其他标志 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 并 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="2eb62-809">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2eb62-810">（<xref:System.Globalization.NumberStyles> 枚举具有复合样式，<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>，它包含两个空格标志。）</span><span class="sxs-lookup"><span data-stu-id="2eb62-810">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="2eb62-811">`provider` 参数是一个 <xref:System.IFormatProvider> 实现，如 <xref:System.Globalization.CultureInfo> 对象或 <xref:System.Globalization.NumberFormatInfo> 对象，其 <xref:System.IFormatProvider.GetFormat%2A> 方法返回 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="2eb62-811">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="2eb62-812"><xref:System.Globalization.NumberFormatInfo> 对象提供有关 `s`格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="2eb62-812">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="2eb62-813">如果 `null``provider`，则使用当前区域性的 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="2eb62-813">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2eb62-814">下面的示例使用几个不同的字符串和 <xref:System.Globalization.NumberStyles> 值调用 <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="2eb62-814">The following example calls the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> method with a number of different string and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.TryParse/cpp/int32.tryparse2.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.TryParse/cs/TryParse2.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.TryParse/vb/TryParse2.vb" id="Snippet2":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2eb62-815"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="2eb62-815"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="2eb62-816">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2eb62-816">-or-</span></span> 
 <span data-ttu-id="2eb62-817"><paramref name="style" /> 不是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 和 <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 值的组合。</span><span class="sxs-lookup"><span data-stu-id="2eb62-817"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int32.ToString" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="2eb62-818">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="2eb62-818">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
