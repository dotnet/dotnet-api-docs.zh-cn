<Type Name="IFormattable" FullName="System.IFormattable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f00f8b60370029f631cfbabfa5f322211cc40e23" /><Meta Name="ms.sourcegitcommit" Value="c982ad9e10a242d90f1e631b5981570f9e5d9f34" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="09/10/2020" /><Meta Name="ms.locfileid" Value="89828383" /></Metadata><TypeSignature Language="C#" Value="public interface IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.IFormattable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFormattable" />
  <TypeSignature Language="F#" Value="type IFormattable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="77fb9-101">提供一种功能，用以将对象的值格式化为字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="77fb9-101">Provides functionality to format the value of an object into a string representation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77fb9-102"><xref:System.IFormattable>接口根据格式字符串和格式提供程序，将对象转换为其字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="77fb9-102">The <xref:System.IFormattable> interface converts an object to its string representation based on a format string and a format provider.</span></span>  
  
 <span data-ttu-id="77fb9-103">格式字符串通常定义对象的一般外观。</span><span class="sxs-lookup"><span data-stu-id="77fb9-103">A format string typically defines the general appearance of an object.</span></span> <span data-ttu-id="77fb9-104">例如，.NET Framework 支持以下各项：</span><span class="sxs-lookup"><span data-stu-id="77fb9-104">For example, the .NET Framework supports the following:</span></span>  
  
-   <span data-ttu-id="77fb9-105">用于对枚举值进行格式设置的标准格式字符串 (参阅) 的 [枚举格式字符串](/dotnet/standard/base-types/enumeration-format-strings) 。</span><span class="sxs-lookup"><span data-stu-id="77fb9-105">Standard format strings for formatting enumeration values (see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings)).</span></span>  
  
-   <span data-ttu-id="77fb9-106">用于格式化数值的标准和自定义格式字符串 (参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)) 。</span><span class="sxs-lookup"><span data-stu-id="77fb9-106">Standard and custom format strings for formatting numeric values (see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings)).</span></span>  
  
-   <span data-ttu-id="77fb9-107">用于格式化日期和时间值的标准和自定义格式字符串 (参阅 [标准日期和时间格式字符串](/dotnet/standard/base-types/standard-date-and-time-format-strings) 和 [自定义日期和时间格式字符串](/dotnet/standard/base-types/custom-date-and-time-format-strings)) 。</span><span class="sxs-lookup"><span data-stu-id="77fb9-107">Standard and custom format strings for formatting date and time values (see [Standard Date and Time Format Strings](/dotnet/standard/base-types/standard-date-and-time-format-strings) and [Custom Date and Time Format Strings](/dotnet/standard/base-types/custom-date-and-time-format-strings)).</span></span>  
  
-   <span data-ttu-id="77fb9-108">格式化时间间隔的标准和自定义格式字符串 (参阅 [标准 Timespan 格式字符串](/dotnet/standard/base-types/standard-timespan-format-strings) 和 [自定义的 timespan 格式字符串](/dotnet/standard/base-types/custom-timespan-format-strings)) 。</span><span class="sxs-lookup"><span data-stu-id="77fb9-108">Standard and custom format strings for formatting time intervals (see [Standard TimeSpan Format Strings](/dotnet/standard/base-types/standard-timespan-format-strings) and [Custom TimeSpan Format Strings](/dotnet/standard/base-types/custom-timespan-format-strings)).</span></span>  
  
 <span data-ttu-id="77fb9-109">你还可以定义自己的格式字符串以支持应用程序定义类型的格式设置。</span><span class="sxs-lookup"><span data-stu-id="77fb9-109">You can also define your own format strings to support formatting of your application-defined types.</span></span>  
  
 <span data-ttu-id="77fb9-110">格式提供程序返回一个格式设置对象，该对象通常定义用于将对象转换为其字符串表示形式的符号。</span><span class="sxs-lookup"><span data-stu-id="77fb9-110">A format provider returns a formatting object that typically defines the symbols used in converting an object to its string representation.</span></span> <span data-ttu-id="77fb9-111">例如，在将数字转换为货币值时，格式提供程序将定义显示在结果字符串中的货币符号。</span><span class="sxs-lookup"><span data-stu-id="77fb9-111">For example, when you convert a number to a currency value, a format provider defines the currency symbol that appears in the result string.</span></span> <span data-ttu-id="77fb9-112">.NET Framework 定义了三种格式提供程序：</span><span class="sxs-lookup"><span data-stu-id="77fb9-112">The .NET Framework defines three format providers:</span></span>  
  
-   <span data-ttu-id="77fb9-113"><xref:System.Globalization.CultureInfo?displayProperty=nameWithType>类，它返回 <xref:System.Globalization.NumberFormatInfo> 用于设置数值格式的对象，或 <xref:System.Globalization.DateTimeFormatInfo> 用于设置日期和时间值格式的对象。</span><span class="sxs-lookup"><span data-stu-id="77fb9-113">The <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> class, which returns either a <xref:System.Globalization.NumberFormatInfo> object for formatting numeric values, or a <xref:System.Globalization.DateTimeFormatInfo> object for formatting date and time values.</span></span>  
  
-   <span data-ttu-id="77fb9-114"><xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType>类，它返回自身的实例以设置数值的格式。</span><span class="sxs-lookup"><span data-stu-id="77fb9-114">The <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> class, which returns an instance of itself for formatting numeric values.</span></span>  
  
-   <span data-ttu-id="77fb9-115"><xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType>类，它为日期和时间值的格式返回自身的实例。</span><span class="sxs-lookup"><span data-stu-id="77fb9-115">The <xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType> class, which returns an instance of itself for formatting date and time values.</span></span>  
  
 <span data-ttu-id="77fb9-116">此外，还可以定义自己的自定义格式提供程序，以提供用于格式设置的特定于区域性的特定于职业的特定信息或行业特定的信息。</span><span class="sxs-lookup"><span data-stu-id="77fb9-116">In addition, you can define your own custom format providers to supply culture-specific, profession-specific, or industry-specific information used in formatting.</span></span> <span data-ttu-id="77fb9-117">有关使用自定义格式提供程序实现自定义格式设置的详细信息，请参阅 <xref:System.ICustomFormatter> 。</span><span class="sxs-lookup"><span data-stu-id="77fb9-117">For more information about implementing custom formatting by using a custom format provider, see <xref:System.ICustomFormatter>.</span></span>  
  
 <span data-ttu-id="77fb9-118"><xref:System.IFormattable>接口定义一个方法，该方法 <xref:System.IFormattable.ToString%2A> 为实现类型提供格式设置服务。</span><span class="sxs-lookup"><span data-stu-id="77fb9-118">The <xref:System.IFormattable> interface defines a single method, <xref:System.IFormattable.ToString%2A>, that supplies formatting services for the implementing type.</span></span> <span data-ttu-id="77fb9-119"><xref:System.IFormattable.ToString%2A>可以直接调用方法。</span><span class="sxs-lookup"><span data-stu-id="77fb9-119">The <xref:System.IFormattable.ToString%2A> method can be called directly.</span></span> <span data-ttu-id="77fb9-120">此外，通过 <xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType> 和 <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 方法以及在 .NET Framework 中使用 [复合格式设置功能](/dotnet/standard/base-types/composite-formatting) 的方法，将自动调用此方法。</span><span class="sxs-lookup"><span data-stu-id="77fb9-120">In addition, it is called automatically by the <xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType> and <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> methods, and by methods that use the [composite formatting feature](/dotnet/standard/base-types/composite-formatting) in the .NET Framework.</span></span> <span data-ttu-id="77fb9-121">此类方法包括 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=nameWithType> 、 <xref:System.String.Format%2A?displayProperty=nameWithType> 、和 <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="77fb9-121">Such methods include <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=nameWithType>, <xref:System.String.Format%2A?displayProperty=nameWithType>, and <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=nameWithType>, among others.</span></span> <span data-ttu-id="77fb9-122">为 <xref:System.IFormattable.ToString%2A> 方法的格式字符串中的每个格式项调用方法。</span><span class="sxs-lookup"><span data-stu-id="77fb9-122">The <xref:System.IFormattable.ToString%2A> method is called for each format item in the method's format string.</span></span>  
  
 <span data-ttu-id="77fb9-123"><xref:System.IFormattable>接口由基本数据类型实现。</span><span class="sxs-lookup"><span data-stu-id="77fb9-123">The <xref:System.IFormattable> interface is implemented by the base data types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77fb9-124">下面的示例定义一个实现 `Temperature` 接口的 <xref:System.IFormattable> 类。</span><span class="sxs-lookup"><span data-stu-id="77fb9-124">The following example defines a `Temperature` class that implements the <xref:System.IFormattable> interface.</span></span> <span data-ttu-id="77fb9-125">类支持四种格式说明符： "G" 和 "C"，指示温度以摄氏显示;"F"，指示温度将以华氏显示;和 "K"，表示温度显示为 "开氏"。</span><span class="sxs-lookup"><span data-stu-id="77fb9-125">The class supports four format specifiers: "G" and "C", which indicate that the temperature is to be displayed in Celsius; "F", which indicates that the temperature is to be displayed in Fahrenheit; and "K", which indicates that the temperature is to be displayed in Kelvin.</span></span> <span data-ttu-id="77fb9-126">此外， <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 实现还可以处理为或空的格式字符串 `null` 。</span><span class="sxs-lookup"><span data-stu-id="77fb9-126">In addition, the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation also can handle a format string that is `null` or empty.</span></span> <span data-ttu-id="77fb9-127">类定义的其他两种 `ToString` 方法 `Temperature` 只是包装对实现的调用 <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="77fb9-127">The other two `ToString` methods defined by the `Temperature` class simply wrap a call to the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 [!code-csharp[System.IFormattable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#1)]
 [!code-vb[System.IFormattable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#1)]  
  
 <span data-ttu-id="77fb9-128">然后，下面的示例将 <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 直接或通过使用复合格式字符串调用实现。</span><span class="sxs-lookup"><span data-stu-id="77fb9-128">The following example then calls the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation either directly or by using a composite format string.</span></span>  
  
 [!code-csharp[System.IFormattable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#2)]
 [!code-vb[System.IFormattable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="77fb9-129">需要更好地控制字符串格式的类 <see cref="M:System.Object.ToString" /> 应实现 <see cref="T:System.IFormattable" /> 。</span><span class="sxs-lookup"><span data-stu-id="77fb9-129">Classes that require more control over the formatting of strings than <see cref="M:System.Object.ToString" /> provides should implement <see cref="T:System.IFormattable" />.</span></span>  
  
<span data-ttu-id="77fb9-130">实现的类 <see cref="T:System.IFormattable" /> 必须支持 (常规) 格式说明符的 "G"。</span><span class="sxs-lookup"><span data-stu-id="77fb9-130">A class that implements <see cref="T:System.IFormattable" /> must support the "G" (general) format specifier.</span></span> <span data-ttu-id="77fb9-131">除了 "G" 说明符以外，类还可以定义它所支持的格式说明符的列表。</span><span class="sxs-lookup"><span data-stu-id="77fb9-131">Besides the "G" specifier, the class can define the list of format specifiers that it supports.</span></span> <span data-ttu-id="77fb9-132">此外，类必须准备好处理的格式说明符 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="77fb9-132">In addition, the class must be prepared to handle a format specifier that is <see langword="null" />.</span></span> <span data-ttu-id="77fb9-133">有关格式设置和格式设置代码的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)</span><span class="sxs-lookup"><span data-stu-id="77fb9-133">For more information about formatting and formatting codes, see [Formatting Types](/dotnet/standard/base-types/formatting-types)</span></span></para></block>
    <altmember cref="T:System.IFormatProvider" />
    <altmember cref="M:System.Object.ToString" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
    <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="77fb9-134">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="77fb9-134">Formatting Types in .NET</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="abstract member ToString : string * IFormatProvider -&gt; string" Usage="iFormattable.ToString (format, formatProvider)" />
      <MemberSignature Language="C#" Value="public string? ToString (string format, IFormatProvider formatProvider);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="77fb9-135">要使用的格式。</span><span class="sxs-lookup"><span data-stu-id="77fb9-135">The format to use.</span></span>  
  
<span data-ttu-id="77fb9-136">- 或 -</span><span class="sxs-lookup"><span data-stu-id="77fb9-136">-or-</span></span> 
<span data-ttu-id="77fb9-137">null 引用（在 Visual Basic 中为 <see langword="Nothing" />），用于使用为 <see cref="T:System.IFormattable" /> 实现的类型定义的默认格式。</span><span class="sxs-lookup"><span data-stu-id="77fb9-137">A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="77fb9-138">要用于格式化值的提供程序。</span><span class="sxs-lookup"><span data-stu-id="77fb9-138">The provider to use to format the value.</span></span>  
  
<span data-ttu-id="77fb9-139">- 或 -</span><span class="sxs-lookup"><span data-stu-id="77fb9-139">-or-</span></span> 
<span data-ttu-id="77fb9-140">null 引用（在 Visual Basic 中为 <see langword="Nothing" />），用于从操作系统的当前区域设置获取数字格式信息。</span><span class="sxs-lookup"><span data-stu-id="77fb9-140">A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</span></span></param>
        <summary><span data-ttu-id="77fb9-141">使用指定格式对当前实例的值设置格式。</span><span class="sxs-lookup"><span data-stu-id="77fb9-141">Formats the value of the current instance using the specified format.</span></span></summary>
        <returns><span data-ttu-id="77fb9-142">采用指定格式的当前实例的值。</span><span class="sxs-lookup"><span data-stu-id="77fb9-142">The value of the current instance in the specified format.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77fb9-143"><xref:System.IFormattable.ToString%2A>方法将值转换为可通过多种方式表示的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="77fb9-143">The <xref:System.IFormattable.ToString%2A> method converts a value to a string representation that can be expressed in multiple ways.</span></span> <span data-ttu-id="77fb9-144">其精确格式取决于特定的符号或特定区域性、职业或行业定义的指定顺序。</span><span class="sxs-lookup"><span data-stu-id="77fb9-144">Its precise format depends on specific symbols or a specified order defined by specific cultures, professions, or industries.</span></span> <span data-ttu-id="77fb9-145">可以直接调用方法。</span><span class="sxs-lookup"><span data-stu-id="77fb9-145">You can call the method directly.</span></span> <span data-ttu-id="77fb9-146">它还由和方法自动调用 <xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType> ， <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 以及在 .NET Framework 中使用复合格式设置功能的方法，例如 <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> 、 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> 和 <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="77fb9-146">It is also called automatically by the <xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType> and <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> methods, and by methods that use the composite formatting feature in the .NET Framework, such as <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, and <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="77fb9-147"> (有关详细信息，请参阅 [复合格式设置](/dotnet/standard/base-types/composite-formatting)。 ) </span><span class="sxs-lookup"><span data-stu-id="77fb9-147">(For more information, see [Composite Formatting](/dotnet/standard/base-types/composite-formatting).)</span></span>  
  
 <span data-ttu-id="77fb9-148">复合格式设置方法 <xref:System.IFormattable.ToString%2A> 为格式字符串中的每个格式项调用方法一次。</span><span class="sxs-lookup"><span data-stu-id="77fb9-148">Composite formatting methods call the <xref:System.IFormattable.ToString%2A> method once for each format item in a format string.</span></span> <span data-ttu-id="77fb9-149">传递给方法的参数取决于在格式项的内容上调用和的特定格式设置方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="77fb9-149">The parameters passed to the method depend on the specific formatting method that is called and on the content of the format item, as follows:</span></span>  
  
-   <span data-ttu-id="77fb9-150">如果格式项不包含格式字符串 (例如，如果仅) 格式项 `{0}` ，则会将其 `null` 作为参数的值传递 <xref:System.String?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="77fb9-150">If the format item does not include a format string (for example, if the format item is simply `{0}`), it is passed `null` as the value of the <xref:System.String?displayProperty=nameWithType> parameter.</span></span>  
  
-   <span data-ttu-id="77fb9-151">如果格式项包含格式字符串 (例如 `{0:G}`) ，则该格式字符串将作为参数的值传递 <xref:System.String?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="77fb9-151">If the format item includes a format string (for example, `{0:G}`), that format string is passed as the value of the <xref:System.String?displayProperty=nameWithType> parameter.</span></span>  
  
-   <span data-ttu-id="77fb9-152">如果原始方法调用不包含 <xref:System.IFormatProvider?displayProperty=nameWithType> 参数， <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> 则将作为参数的值传递 <xref:System.IFormatProvider?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="77fb9-152">If the original method call does not include an <xref:System.IFormatProvider?displayProperty=nameWithType> parameter, <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> is passed as the value of the <xref:System.IFormatProvider?displayProperty=nameWithType> parameter.</span></span>  
  
-   <span data-ttu-id="77fb9-153">如果原始方法调用包含 <xref:System.IFormatProvider?displayProperty=nameWithType> 参数，则方法调用中提供的提供程序将作为参数的值传递 <xref:System.IFormatProvider?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="77fb9-153">If the original method call includes an <xref:System.IFormatProvider?displayProperty=nameWithType> parameter, the provider that is supplied in the method call is passed as the value of the <xref:System.IFormatProvider?displayProperty=nameWithType> parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77fb9-154"><xref:System.IFormattable.ToString%2A>仅当对象未传递 <xref:System.ICustomFormatter> 格式提供程序或 <xref:System.ICustomFormatter.Format%2A> 自定义格式提供程序的方法返回时，复合格式设置方法才能调用该对象的实现 `null` 。</span><span class="sxs-lookup"><span data-stu-id="77fb9-154">An object's <xref:System.IFormattable.ToString%2A> implementation is called by composite formatting methods only if they are not passed an <xref:System.ICustomFormatter> format provider, or if the <xref:System.ICustomFormatter.Format%2A> method of the custom format provider returns `null`.</span></span>  
  
 <span data-ttu-id="77fb9-155">.NET Framework 包括三种格式提供程序，它们都实现 <xref:System.IFormatProvider> 接口：</span><span class="sxs-lookup"><span data-stu-id="77fb9-155">The .NET Framework includes three format providers, all of which implement the <xref:System.IFormatProvider> interface:</span></span>  
  
-   <span data-ttu-id="77fb9-156"><xref:System.Globalization.NumberFormatInfo> 提供数字格式设置信息，如用于小数点和组分隔符的字符，以及货币值中的货币符号的拼写和位置。</span><span class="sxs-lookup"><span data-stu-id="77fb9-156"><xref:System.Globalization.NumberFormatInfo> supplies numeric formatting information, such as the characters to use for decimal and group separators, and the spelling and placement of currency symbols in monetary values.</span></span>  
  
-   <span data-ttu-id="77fb9-157"><xref:System.Globalization.DateTimeFormatInfo> 提供日期相关和与时间相关的格式设置信息，例如日期模式中月份、日期和年份的位置。</span><span class="sxs-lookup"><span data-stu-id="77fb9-157"><xref:System.Globalization.DateTimeFormatInfo> supplies date-related and time-related formatting information, such as the position of the month, the day, and the year in a date pattern.</span></span>  
  
-   <span data-ttu-id="77fb9-158"><xref:System.Globalization.CultureInfo> 包含特定区域性中的默认格式设置信息，包括数字格式信息以及与日期相关的格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="77fb9-158"><xref:System.Globalization.CultureInfo> contains the default formatting information in a specific culture, including the numeric format information, and date-related and time-related formatting information.</span></span>  
  
 <span data-ttu-id="77fb9-159">此外，还可以定义自己的自定义格式提供程序。</span><span class="sxs-lookup"><span data-stu-id="77fb9-159">In addition, you can define your own custom format provider.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77fb9-160">下面的示例演示 `Temperature` 实现方法的类 <xref:System.IFormattable.ToString%2A> 。</span><span class="sxs-lookup"><span data-stu-id="77fb9-160">The following example demonstrates a `Temperature` class that implements the <xref:System.IFormattable.ToString%2A> method.</span></span> <span data-ttu-id="77fb9-161">此代码示例是为类提供的更大示例的一部分 <xref:System.IFormattable> 。</span><span class="sxs-lookup"><span data-stu-id="77fb9-161">This code example is part of a larger example provided for the <xref:System.IFormattable> class.</span></span>  
  
 [!code-csharp[System.IFormattable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#1)]
 [!code-vb[System.IFormattable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="77fb9-162"><see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />方法必须支持 (常规) 格式说明符的 "G"。</span><span class="sxs-lookup"><span data-stu-id="77fb9-162">The <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /> method must support the "G" (general) format specifier.</span></span> <span data-ttu-id="77fb9-163">除了 "G" 说明符以外，类还可以定义它所支持的格式说明符的列表。</span><span class="sxs-lookup"><span data-stu-id="77fb9-163">Besides the "G" specifier, the class can define the list of format specifiers that it supports.</span></span> <span data-ttu-id="77fb9-164">此外，类必须准备好处理的格式说明符 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="77fb9-164">In addition, the class must be prepared to handle a format specifier that is <see langword="null" />.</span></span> <span data-ttu-id="77fb9-165">有关格式设置和格式设置代码的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="77fb9-165">For more information about formatting and formatting codes, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span></para></block>
        <altmember cref="T:System.String" />
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>
