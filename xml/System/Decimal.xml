<Type Name="Decimal" FullName="System.Decimal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="09cecd1386aa184e68a4b3297a9fcc05a7a4f7ac" /><Meta Name="ms.sourcegitcommit" Value="16f06f9c8ac498a4f3a6a6c7867fe06d4d6a5f06" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/01/2020" /><Meta Name="ms.locfileid" Value="96438388" /></Metadata><TypeSignature Language="C#" Value="public struct Decimal : IComparable, IComparable&lt;decimal&gt;, IConvertible, IEquatable&lt;decimal&gt;, IFormattable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Decimal extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Decimal&gt;, class System.IConvertible, class System.IEquatable`1&lt;valuetype System.Decimal&gt;, class System.IFormattable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="DocId" Value="T:System.Decimal" />
  <TypeSignature Language="VB.NET" Value="Public Structure Decimal&#xA;Implements IComparable, IComparable(Of Decimal), IConvertible, IEquatable(Of Decimal), IFormattable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="C++ CLI" Value="public value class Decimal : IComparable, IComparable&lt;System::Decimal&gt;, IConvertible, IEquatable&lt;System::Decimal&gt;, IFormattable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="F#" Value="type decimal = struct&#xA;    interface IConvertible&#xA;    interface IFormattable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
  <TypeSignature Language="C#" Value="public struct Decimal : IComparable, IComparable&lt;decimal&gt;, IConvertible, IEquatable&lt;decimal&gt;, IFormattable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Decimal extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Decimal&gt;, class System.IConvertible, class System.IEquatable`1&lt;valuetype System.Decimal&gt;, class System.IFormattable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="VB.NET" Value="Public Structure Decimal&#xA;Implements IComparable, IComparable(Of Decimal), IConvertible, IDeserializationCallback, IEquatable(Of Decimal), IFormattable, ISerializable" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="C++ CLI" Value="public value class Decimal : IComparable, IComparable&lt;System::Decimal&gt;, IConvertible, IEquatable&lt;System::Decimal&gt;, IFormattable, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="F#" Value="type decimal = struct&#xA;    interface IConvertible&#xA;    interface IFormattable&#xA;    interface IDeserializationCallback&#xA;    interface ISerializable" FrameworkAlternate="net-5.0" />
  <TypeSignature Language="C#" Value="public struct Decimal : IComparable, IComparable&lt;decimal&gt;, IConvertible, IEquatable&lt;decimal&gt;, IFormattable, System.Runtime.Serialization.IDeserializationCallback" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Decimal extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Decimal&gt;, class System.IConvertible, class System.IEquatable`1&lt;valuetype System.Decimal&gt;, class System.IFormattable, class System.Runtime.Serialization.IDeserializationCallback" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public Structure Decimal&#xA;Implements IComparable, IComparable(Of Decimal), IConvertible, IDeserializationCallback, IEquatable(Of Decimal), IFormattable" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public value class Decimal : IComparable, IComparable&lt;System::Decimal&gt;, IConvertible, IEquatable&lt;System::Decimal&gt;, IFormattable, System::Runtime::Serialization::IDeserializationCallback" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type decimal = struct&#xA;    interface IConvertible&#xA;    interface IFormattable&#xA;    interface IDeserializationCallback" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C#" Value="public struct Decimal : IComparable, IConvertible, IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Decimal extends System.ValueType implements class System.IComparable, class System.IConvertible, class System.IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public Structure Decimal&#xA;Implements IComparable, IConvertible, IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public value class Decimal : IComparable, IConvertible, IFormattable" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type decimal = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Decimal extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Decimal&gt;, class System.IConvertible, class System.IEquatable`1&lt;valuetype System.Decimal&gt;, class System.IFormattable" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Decimal extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Decimal&gt;, class System.IConvertible, class System.IEquatable`1&lt;valuetype System.Decimal&gt;, class System.IFormattable, class System.Runtime.Serialization.IDeserializationCallback" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type decimal = struct&#xA;    interface IFormattable&#xA;    interface IConvertible&#xA;    interface IDeserializationCallback" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public struct Decimal : IComparable, IComparable&lt;decimal&gt;, IEquatable&lt;decimal&gt;, IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Decimal extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Decimal&gt;, class System.IEquatable`1&lt;valuetype System.Decimal&gt;, class System.IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="VB.NET" Value="Public Structure Decimal&#xA;Implements IComparable, IComparable(Of Decimal), IEquatable(Of Decimal), IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="C++ CLI" Value="public value class Decimal : IComparable, IComparable&lt;System::Decimal&gt;, IEquatable&lt;System::Decimal&gt;, IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="F#" Value="type decimal = struct&#xA;    interface IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.IComparable&lt;System.Decimal&gt;</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.IEquatable&lt;System.Decimal&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="net-5.0">
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cf2bf-101">表示十进制浮点数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-101">Represents a decimal floating-point number.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-102"><xref:System.Decimal> 值类型表示介于正 79,228,162,514,264,337,593,543,950,335 和负 79,228,162,514,264,337,593,543,950,335 之间的十进制数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-102">The <xref:System.Decimal> value type represents decimal numbers ranging from positive 79,228,162,514,264,337,593,543,950,335 to negative 79,228,162,514,264,337,593,543,950,335.</span></span> <span data-ttu-id="cf2bf-103">`Decimal` 的默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-103">The default value of a `Decimal` is 0.</span></span> <span data-ttu-id="cf2bf-104"><xref:System.Decimal>值类型适用于需要大量重要整数和小数位且不会出现舍入错误的财务计算。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-104">The <xref:System.Decimal> value type is appropriate for financial calculations that require large numbers of significant integral and fractional digits and no round-off errors.</span></span> <span data-ttu-id="cf2bf-105"><xref:System.Decimal> 类型仍需要舍入，但它最大限度地减少了因舍入而导致的错误。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-105">The <xref:System.Decimal> type does not eliminate the need for rounding.</span></span> <span data-ttu-id="cf2bf-106">相反，它最大限度地减少了因舍入而导致的错误。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-106">Rather, it minimizes errors due to rounding.</span></span> <span data-ttu-id="cf2bf-107">例如，下面的代码生成 0.9999999999999999999999999999 的结果，而不是 1。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-107">For example, the following code produces a result of 0.9999999999999999999999999999 instead of 1.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Class/cpp/decimal1.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Class/cs/DecimalDivision_46630_1.cs" interactive="try-dotnet-method" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Class/vb/DecimalDivision_46630_1.vb" id="Snippet1":::
  
 <span data-ttu-id="cf2bf-108">当除法和乘法的结果传递给 <xref:System.Math.Round%2A> 方法时，结果将不会产生精度损失，如以下代码所示。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-108">When the result of the division and multiplication is passed to the <xref:System.Math.Round%2A> method, the result suffers no loss of precision, as the following code shows.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Class/cpp/decimal2.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Class/cs/DecimalDivision_46630_1.cs" interactive="try-dotnet-method" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Class/vb/DecimalDivision_46630_1.vb" id="Snippet2":::  
  
 <span data-ttu-id="cf2bf-109">小数是一个浮点值，其中包含一个符号、一个数字值，其中的每个数字的范围为0到9，后者指示用于分隔数值的整数部分和小数部分的浮点的位置。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-109">A decimal number is a floating-point value that consists of a sign, a numeric value where each digit in the value ranges from 0 to 9, and a scaling factor that indicates the position of a floating decimal point that separates the integral and fractional parts of the numeric value.</span></span>  
  
 <span data-ttu-id="cf2bf-110">值的二进制表示形式 <xref:System.Decimal> 由1位符号、96位整数和比例因子组成，用于划分96位整数，并指定它的哪一部分是小数部分。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-110">The binary representation of a <xref:System.Decimal> value consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the 96-bit integer and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="cf2bf-111">缩放系数隐式为数字10，指数范围为0到28。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-111">The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</span></span> <span data-ttu-id="cf2bf-112">因此， <xref:System.Decimal> 值为的二进制表示形式， ( # A1-2<sup>96</sup> 到 2<sup>96</sup>) /10<sup> (0 到 28) </sup>) ，其中- (2<sup>96</sup>-1) 等于 <xref:System.Decimal.MinValue> ，2<sup>96</sup>-1 等于 <xref:System.Decimal.MaxValue> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-112">Therefore, the binary representation of a <xref:System.Decimal> value  the form, ((-2<sup>96</sup> to 2<sup>96</sup>) / 10<sup>(0 to 28)</sup>), where -(2<sup>96</sup>-1) is equal to <xref:System.Decimal.MinValue>, and 2<sup>96</sup>-1 is equal to <xref:System.Decimal.MaxValue>.</span></span> <span data-ttu-id="cf2bf-113">有关值的二进制表示形式和示例的详细信息 <xref:System.Decimal> ，请参阅 <xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29> 构造函数和 <xref:System.Decimal.GetBits%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-113">For more information about the binary representation of <xref:System.Decimal> values and an example, see the <xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29> constructor and the <xref:System.Decimal.GetBits%2A> method.</span></span>  
  
 <span data-ttu-id="cf2bf-114">缩放系数还保留数字中的任何尾随零 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-114">The scaling factor  also preserves any trailing zeros in a <xref:System.Decimal> number.</span></span> <span data-ttu-id="cf2bf-115">尾随零不会影响 <xref:System.Decimal> 算术或比较运算中数值的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-115">Trailing zeros do not affect the value of a <xref:System.Decimal> number in arithmetic or comparison operations.</span></span> <span data-ttu-id="cf2bf-116">但是， <xref:System.Decimal.ToString%2A> 如果应用了适当的格式字符串，则方法可能会显示尾随零。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-116">However, trailing zeros might be revealed by the <xref:System.Decimal.ToString%2A> method if an appropriate format string is applied.</span></span>  
  
## <a name="conversion-considerations"></a><span data-ttu-id="cf2bf-117">转换注意事项</span><span class="sxs-lookup"><span data-stu-id="cf2bf-117">Conversion Considerations</span></span>  
 <span data-ttu-id="cf2bf-118">此类型提供将 <xref:System.Decimal> 值与、、、、、、 <xref:System.SByte> <xref:System.Int16> <xref:System.Int32> <xref:System.Int64> <xref:System.Byte> <xref:System.UInt16> <xref:System.UInt32> 和 <xref:System.UInt64> 值相互转换的方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-118">This type provides methods that convert <xref:System.Decimal> values to and from <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Byte>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64> values.</span></span> <span data-ttu-id="cf2bf-119">从这些整型类型到的转换是不会 <xref:System.Decimal> 丢失信息或引发异常的扩大转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-119">Conversions from these integral types to <xref:System.Decimal> are widening conversions that never lose information or throw exceptions.</span></span>  
  
 <span data-ttu-id="cf2bf-120">从 <xref:System.Decimal> 到任何整型的转换都是将值舍入 <xref:System.Decimal> 为最接近的整数值的收缩转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-120">Conversions from <xref:System.Decimal> to any of the integral types are narrowing conversions that round the <xref:System.Decimal> value to the nearest integer value toward zero.</span></span> <span data-ttu-id="cf2bf-121">某些语言（如 c #）还支持将值转换 <xref:System.Decimal> 为 <xref:System.Char> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-121">Some languages, such as C#, also support the conversion of <xref:System.Decimal> values to <xref:System.Char> values.</span></span> <span data-ttu-id="cf2bf-122">如果无法在目标类型中表示这些转换的结果，则 <xref:System.OverflowException> 会引发异常。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-122">If the result of these conversions cannot be represented in the destination type, an <xref:System.OverflowException> exception is thrown.</span></span>  
  
 <span data-ttu-id="cf2bf-123">该 <xref:System.Decimal> 类型还提供了一些方法，这些方法 <xref:System.Decimal> 可将值转换为和源 <xref:System.Single> 和 <xref:System.Double> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-123">The <xref:System.Decimal> type also provides methods that convert <xref:System.Decimal> values to and from <xref:System.Single> and <xref:System.Double> values.</span></span> <span data-ttu-id="cf2bf-124">从转换 <xref:System.Decimal> 为 <xref:System.Single> 或 <xref:System.Double> 是收缩转换，这些转换可能会丢失精度，而不是有关转换后的值的大小的信息。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-124">Conversions from <xref:System.Decimal> to <xref:System.Single> or <xref:System.Double> are narrowing conversions that might lose precision but not information about the magnitude of the converted value.</span></span> <span data-ttu-id="cf2bf-125">转换不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-125">The conversion does not throw an exception.</span></span>  
  
 <span data-ttu-id="cf2bf-126"><xref:System.Single> <xref:System.Double> <xref:System.Decimal> <xref:System.OverflowException> 如果转换结果不能表示为，则从或到的转换会引发异常 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-126">Conversions from <xref:System.Single> or <xref:System.Double> to <xref:System.Decimal> throw an <xref:System.OverflowException> exception if the result of the conversion cannot be represented as a <xref:System.Decimal>.</span></span>  
  
## <a name="performing-operations-on-decimal-values"></a><span data-ttu-id="cf2bf-127">对十进制值执行运算</span><span class="sxs-lookup"><span data-stu-id="cf2bf-127">Performing Operations on Decimal Values</span></span>  
 <span data-ttu-id="cf2bf-128"><xref:System.Decimal>类型支持标准数学运算，如加法、减法、除法、乘法和一元求反。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-128">The <xref:System.Decimal> type supports standard mathematical operations such as addition, subtraction, division, multiplication, and unary negation.</span></span> <span data-ttu-id="cf2bf-129">通过调用方法，还可以直接使用值的二进制表示形式 <xref:System.Decimal> <xref:System.Decimal.GetBits%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-129">You can also work directly with the binary representation of a <xref:System.Decimal> value by calling the <xref:System.Decimal.GetBits%2A> method.</span></span>  
  
 <span data-ttu-id="cf2bf-130">若要比较两个 <xref:System.Decimal> 值，可以使用标准数值比较运算符，也可以调用 <xref:System.Decimal.CompareTo%2A> 或 <xref:System.Decimal.Equals%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-130">To compare two <xref:System.Decimal> values, you can use the standard numeric comparison operators, or you can call the <xref:System.Decimal.CompareTo%2A> or <xref:System.Decimal.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="cf2bf-131">您还可以调用类的成员 <xref:System.Math> 来执行各种数字运算，包括获取数字的绝对值、确定两个值的最大值或最小值 <xref:System.Decimal> 、获取数字的符号以及对数字进行舍入。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-131">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, determining the maximum or minimum value of two <xref:System.Decimal> values, getting the sign of a number, and rounding a number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-132">以下代码示例演示了 <xref:System.Decimal> 的用法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-132">The following code example demonstrates the use of <xref:System.Decimal>.</span></span>  
  
 [!code-cpp[Decimal Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#1)]
 [!code-csharp[Decimal Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#1)]
 [!code-vb[Decimal Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="cf2bf-133">此类型的所有成员都是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-133">All members of this type are thread safe.</span></span> <span data-ttu-id="cf2bf-134">看似修改实例状态的成员实际上返回用新值初始化的新实例。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-134">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="cf2bf-135">与任何其他类型一样，读取和写入包含此类型的实例的共享变量时，必须通过锁保护以保证线程安全。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-135">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.SByte" />
    <altmember cref="T:System.Int16" />
    <altmember cref="T:System.Int32" />
    <altmember cref="T:System.Int64" />
    <altmember cref="T:System.Byte" />
    <altmember cref="T:System.UInt16" />
    <altmember cref="T:System.UInt32" />
    <altmember cref="T:System.UInt64" />
    <altmember cref="T:System.Single" />
    <altmember cref="T:System.Double" />
    <altmember cref="T:System.Char" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cf2bf-136">初始化 <see cref="T:System.Decimal" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-136">Initializes a new instance of <see cref="T:System.Decimal" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(double value);" />
      <MemberSignature Language="F#" Value="new decimal : double -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-137">要表示为 <see cref="T:System.Decimal" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-137">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="cf2bf-138">将 <see cref="T:System.Decimal" /> 的新实例初始化为指定的双精度浮点数的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-138">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified double-precision floating-point number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-139">此构造函数 `value` 使用舍入到最近的舍入到15个有效位。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-139">This constructor rounds `value` to 15 significant digits using rounding to nearest.</span></span> <span data-ttu-id="cf2bf-140">即使数字的位数超过15位并且有效位数不是零，此操作也是如此。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-140">This is done even if the number has more than 15 digits and the less significant digits are zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-141">下面的代码示例 `Decimal` 使用构造函数重载创建了多个数字，此重载使用 `Decimal` 值初始化结构 <xref:System.Double> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-141">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.Double> value.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CPP/ctordo.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CS/ctordo.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/VB/ctordo.vb" id="Snippet2":::

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-142"><paramref name="value" /> 大于 <see cref="F:System.Decimal.MaxValue" /> 或小于 <see cref="F:System.Decimal.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-142"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span>  
  
<span data-ttu-id="cf2bf-143">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cf2bf-143">-or-</span></span> 
 <span data-ttu-id="cf2bf-144"><paramref name="value" /> 为 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.PositiveInfinity" /> 或 <see cref="F:System.Double.NegativeInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-144"><paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(int value);" />
      <MemberSignature Language="F#" Value="new decimal : int -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-145">要表示为 <see cref="T:System.Decimal" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-145">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="cf2bf-146">将 <see cref="T:System.Decimal" /> 的新实例初始化为指定的 32 位有符号整数的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-146">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 32-bit signed integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf2bf-147">下面的代码示例 `Decimal` 使用构造函数重载创建了多个数字，此重载 `Decimal` 用 <xref:System.Int32> 值初始化结构。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-147">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an <xref:System.Int32> value.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctori.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctori.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctori.vb" id="Snippet1":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (int[] bits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32[] bits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bits As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(cli::array &lt;int&gt; ^ bits);" />
      <MemberSignature Language="F#" Value="new decimal : int[] -&gt; decimal" Usage="new System.decimal bits" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bits" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="bits"><span data-ttu-id="cf2bf-148">包含十进制值表示形式的 32 位有符号整数的数组。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-148">An array of 32-bit signed integers containing a representation of a decimal value.</span></span></param>
        <summary><span data-ttu-id="cf2bf-149">将 <see cref="T:System.Decimal" /> 的新实例初始化为以二进制表示的、包含在指定数组中的十进制值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-149">Initializes a new instance of <see cref="T:System.Decimal" /> to a decimal value represented in binary and contained in a specified array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-150">数字的二进制表示形式 <xref:System.Decimal> 由1位符号、96位整数和比例因子组成，用于划分整数号，并指定它的哪一部分是小数部分。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-150">The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="cf2bf-151">缩放系数隐式为数字10，指数范围为0到28。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-151">The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</span></span>  
  
 <span data-ttu-id="cf2bf-152">`bits` 由四个元素组成的长度为32位有符号整数的数组。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-152">`bits` is a four-element long array of 32-bit signed integers.</span></span>  
  
 <span data-ttu-id="cf2bf-153">`bits` [0]， `bits` [1] 和 `bits` [2] 包含96位整数的低、中和高32位。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-153">`bits` [0], `bits` [1], and `bits` [2] contain the low, middle, and high 32 bits of the 96-bit integer number.</span></span>  
  
 <span data-ttu-id="cf2bf-154">`bits` [3] 包含缩放系数和符号，由以下部分组成：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-154">`bits` [3] contains the scale factor and sign, and consists of following parts:</span></span>  
  
 <span data-ttu-id="cf2bf-155">位0到15是未使用的，并且必须为零。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-155">Bits 0 to 15, the lower word, are unused and must be zero.</span></span>  
  
 <span data-ttu-id="cf2bf-156">位16到23必须包含一个介于0到28之间的指数，该指数指示10的幂来除以整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-156">Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.</span></span>  
  
 <span data-ttu-id="cf2bf-157">不使用 Bits 24 到30，并且必须为零。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-157">Bits 24 to 30 are unused and must be zero.</span></span>  
  
 <span data-ttu-id="cf2bf-158">位31包含符号;0表示正，1表示负。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-158">Bit 31 contains the sign; 0 meaning positive, and 1 meaning negative.</span></span>  
  
 <span data-ttu-id="cf2bf-159">一个数值可能有几个可能的二进制表示形式;都是相同的有效和数值等效的。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-159">A numeric value might have several possible binary representations; all are equally valid and numerically equivalent.</span></span> <span data-ttu-id="cf2bf-160">请注意，位表示形式区分负数和正零。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-160">Note that the bit representation differentiates between negative and positive zero.</span></span> <span data-ttu-id="cf2bf-161">在所有操作中，这些值被视为相等。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-161">These values are treated as being equal in all operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-162">下面的代码示例 `Decimal` 使用构造函数重载创建几个数字，该重载使用 `Decimal` 一个包含四个值的数组来初始化结构 <xref:System.Int32> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-162">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an array of four <xref:System.Int32> values.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CPP/ctoriarr.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CS/ctoriarr.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/VB/ctoriarr.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cf2bf-163"><paramref name="bits" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-163"><paramref name="bits" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf2bf-164"><paramref name="bits" /> 的长度不为 4。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-164">The length of the <paramref name="bits" /> is not 4.</span></span>  
  
<span data-ttu-id="cf2bf-165">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cf2bf-165">-or-</span></span> 
<span data-ttu-id="cf2bf-166"><paramref name="bits" /> 中的十进制值的表示形式无效。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-166">The representation of the decimal value in <paramref name="bits" /> is not valid.</span></span></exception>
        <altmember cref="M:System.Decimal.GetBits(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(long value);" />
      <MemberSignature Language="F#" Value="new decimal : int64 -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-167">要表示为 <see cref="T:System.Decimal" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-167">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="cf2bf-168">将 <see cref="T:System.Decimal" /> 的新实例初始化为指定的 64 位有符号整数的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-168">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 64-bit signed integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf2bf-169">下面的代码示例 `Decimal` 使用构造函数重载创建了多个数字，此重载 `Decimal` 用 <xref:System.Int64> 值初始化结构。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-169">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an <xref:System.Int64> value.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorl.cpp" id="Snippet3":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorl.cs" interactive="try-dotnet" id="Snippet3":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorl.vb" id="Snippet3"::: 

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (ReadOnlySpan&lt;int&gt; bits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlySpan`1&lt;int32&gt; bits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.ReadOnlySpan{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bits As ReadOnlySpan(Of Integer))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(ReadOnlySpan&lt;int&gt; bits);" />
      <MemberSignature Language="F#" Value="new decimal : ReadOnlySpan&lt;int&gt; -&gt; decimal" Usage="new System.decimal bits" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bits" Type="System.ReadOnlySpan&lt;System.Int32&gt;" Index="0" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="bits"><span data-ttu-id="cf2bf-170">四个 <see cref="T:System.Int32" /> 值的范围，包含十进制值的二进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-170">A span of four <see cref="T:System.Int32" /> values that contains a binary representation of a decimal value.</span></span></param>
        <summary><span data-ttu-id="cf2bf-171">将 <see cref="T:System.Decimal" /> 的新实例初始化为以二进制表示的、包含在指定范围中的十进制值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-171">Initializes a new instance of <see cref="T:System.Decimal" /> to a decimal value represented in binary and contained in the specified span.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf2bf-172"><paramref name="bits" /> 的长度不是 4 或 <paramref name="bits" /> 中的十进制值的表示形式无效。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-172">The length of <paramref name="bits" /> is not 4, or the representation of the decimal value in <paramref name="bits" /> is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(float value);" />
      <MemberSignature Language="F#" Value="new decimal : single -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-173">要表示为 <see cref="T:System.Decimal" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-173">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="cf2bf-174">将 <see cref="T:System.Decimal" /> 的新实例初始化为指定的单精度浮点数的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-174">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified single-precision floating-point number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-175">此构造函数 `value` 使用舍入到最近的舍入到7个有效位。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-175">This constructor rounds `value` to 7 significant digits using rounding to nearest.</span></span> <span data-ttu-id="cf2bf-176">即使数字的位数超过7位数并且有效位数不是零，此操作也是如此。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-176">This is done even if the number has more than 7 digits and the less significant digits are zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-177">下面的代码示例 `Decimal` 使用构造函数重载创建了多个数字，此重载使用 `Decimal` 值初始化结构 <xref:System.Single> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-177">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.Single> value.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CPP/ctors.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CS/ctors.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/VB/ctors.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-178"><paramref name="value" /> 大于 <see cref="F:System.Decimal.MaxValue" /> 或小于 <see cref="F:System.Decimal.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-178"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span>  
  
<span data-ttu-id="cf2bf-179">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cf2bf-179">-or-</span></span> 
 <span data-ttu-id="cf2bf-180"><paramref name="value" /> 为 <see cref="F:System.Single.NaN" />、<see cref="F:System.Single.PositiveInfinity" /> 或 <see cref="F:System.Single.NegativeInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-180"><paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="new decimal : uint32 -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-181">要表示为 <see cref="T:System.Decimal" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-181">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="cf2bf-182">将 <see cref="T:System.Decimal" /> 的新实例初始化为指定的 32 位无符号整数的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-182">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 32-bit unsigned integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf2bf-183">下面的代码示例 `Decimal` 使用构造函数重载创建了多个数字，此重载使用 `Decimal` 值初始化结构 <xref:System.UInt32> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-183">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.UInt32> value.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorui.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorui.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorui.vb" id="Snippet2":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="new decimal : uint64 -&gt; decimal" Usage="new System.decimal value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-184">要表示为 <see cref="T:System.Decimal" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-184">The value to represent as a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="cf2bf-185">将 <see cref="T:System.Decimal" /> 的新实例初始化为指定的 64 位无符号整数的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-185">Initializes a new instance of <see cref="T:System.Decimal" /> to the value of the specified 64-bit unsigned integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf2bf-186">下面的代码示例 `Decimal` 使用构造函数重载创建了多个数字，此重载使用 `Decimal` 值初始化结构 <xref:System.UInt64> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-186">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.UInt64> value.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorul.cpp" id="Snippet4":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorul.cs" interactive="try-dotnet" id="Snippet4":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorul.vb" id="Snippet4":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Decimal (int lo, int mid, int hi, bool isNegative, byte scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 lo, int32 mid, int32 hi, bool isNegative, unsigned int8 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (lo As Integer, mid As Integer, hi As Integer, isNegative As Boolean, scale As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Decimal(int lo, int mid, int hi, bool isNegative, System::Byte scale);" />
      <MemberSignature Language="F#" Value="new decimal : int * int * int * bool * byte -&gt; decimal" Usage="new System.decimal (lo, mid, hi, isNegative, scale)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="lo" Type="System.Int32" />
        <Parameter Name="mid" Type="System.Int32" />
        <Parameter Name="hi" Type="System.Int32" />
        <Parameter Name="isNegative" Type="System.Boolean" />
        <Parameter Name="scale" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="lo"><span data-ttu-id="cf2bf-187">96 位整数的低 32 位。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-187">The low 32 bits of a 96-bit integer.</span></span></param>
        <param name="mid"><span data-ttu-id="cf2bf-188">96 位整数的中间 32 位。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-188">The middle 32 bits of a 96-bit integer.</span></span></param>
        <param name="hi"><span data-ttu-id="cf2bf-189">96 位整数的高 32 位。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-189">The high 32 bits of a 96-bit integer.</span></span></param>
        <param name="isNegative"><span data-ttu-id="cf2bf-190">若要指示负数，则为 <see langword="true" />；若要指示正数，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-190"><see langword="true" /> to indicate a negative number; <see langword="false" /> to indicate a positive number.</span></span></param>
        <param name="scale"><span data-ttu-id="cf2bf-191">10 的指数（0 到 28 之间）。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-191">A power of 10 ranging from 0 to 28.</span></span></param>
        <summary><span data-ttu-id="cf2bf-192">用指定实例构成部分的参数来初始化 <see cref="T:System.Decimal" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-192">Initializes a new instance of <see cref="T:System.Decimal" /> from parameters specifying the instance's constituent parts.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-193">数字的二进制表示形式 <xref:System.Decimal> 由1位符号、96位整数和比例因子组成，用于划分整数号，并指定它的哪一部分是小数部分。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-193">The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="cf2bf-194">缩放系数隐式地将数字10的数字从0到28。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-194">The scaling factor is implicitly the number 10 raised to an exponent ranging from 0 to 28.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-195">下面的代码示例 `Decimal` 使用构造函数重载创建几个数字，该重载使用 `Decimal` 三个 <xref:System.Int32> 值词、一个 <xref:System.Boolean> 符号和一个 <xref:System.Byte> 比例因子初始化结构。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-195">The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with three <xref:System.Int32> value words, a <xref:System.Boolean> sign, and a <xref:System.Byte> scale factor.</span></span>  
 
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CPP/ctoriiibby.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CS/ctoriiibby.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/VB/ctoriiibby.vb" id="Snippet2"::: 

 <span data-ttu-id="cf2bf-196">下面的示例使用 <xref:System.Decimal.GetBits%2A> 方法检索数组的组件部分。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-196">The following example uses the <xref:System.Decimal.GetBits%2A> method to retrieve the component parts of an array.</span></span> <span data-ttu-id="cf2bf-197">然后，在对构造函数的调用中使用此数组 <xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29> 来实例化新的 <xref:System.Decimal> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-197">It then uses this array in the call to the <xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29> constructor to instantiate a new <xref:System.Decimal> value.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.ctor/cs/ctor2a.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.ctor/vb/ctor2a.vb" id="Snippet1"::: 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cf2bf-198"><paramref name="scale" /> 大于 28。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-198"><paramref name="scale" /> is greater than 28.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static decimal Add (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Add(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Add(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Add : decimal * decimal -&gt; decimal" Usage="System.decimal.Add (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="cf2bf-199">要相加的第一个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-199">The first value to add.</span></span></param>
        <param name="d2"><span data-ttu-id="cf2bf-200">要相加的第二个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-200">The second value to add.</span></span></param>
        <summary><span data-ttu-id="cf2bf-201">将两个指定的 <see cref="T:System.Decimal" /> 值相加。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-201">Adds two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-202"><paramref name="d1" /> 与 <paramref name="d2" /> 的和。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-202">The sum of <paramref name="d1" /> and <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-203">下面的代码示例演示了如何使用 `Add` ：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-203">The following code sample illustrates the use of `Add` :</span></span>  
  
 [!code-cpp[Decimal Example#5](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#5)]
 [!code-csharp[Decimal Example#5](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#5)]
 [!code-vb[Decimal Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-204"><paramref name="d1" /> 与 <paramref name="d2" /> 的和小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-204">The sum of <paramref name="d1" /> and <paramref name="d2" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static decimal Ceiling (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Ceiling(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Ceiling(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Ceiling(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Ceiling : decimal -&gt; decimal" Usage="System.decimal.Ceiling d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf2bf-205">十进制数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-205">A decimal number.</span></span></param>
        <summary><span data-ttu-id="cf2bf-206">返回大于或等于指定的十进制数的最小整数值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-206">Returns the smallest integral value that is greater than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-207">大于或等于 <paramref name="d" /> 参数的最小整数值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-207">The smallest integral value that is greater than or equal to the <paramref name="d" /> parameter.</span></span> <span data-ttu-id="cf2bf-208">请注意，此方法返回 <see cref="T:System.Decimal" />，而不是整数类型。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-208">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-209">此方法的行为遵循 IEEE 标准754第4部分。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-209">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="cf2bf-210">这种类型的舍入有时称作向正无穷舍入。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-210">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="cf2bf-211">换言之，如果 `d` 为正，则任何小数部分的存在都会导致 `d` 舍入到下一个最大的整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-211">In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer.</span></span> <span data-ttu-id="cf2bf-212">如果 `d` 为负，则舍入操作将导致丢弃的任何小数部分 `d` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-212">If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded.</span></span> <span data-ttu-id="cf2bf-213">此方法的操作不同于 <xref:System.Decimal.Floor%2A> 方法，后者支持向负无穷舍入。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-213">The operation of this method differs from the <xref:System.Decimal.Floor%2A> method, which supports rounding toward negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-214">下面的示例演示 <xref:System.Decimal.Ceiling%2A> 方法，并将其与方法进行比较 <xref:System.Decimal.Floor%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-214">The following example illustrates the <xref:System.Decimal.Ceiling%2A> method and contrasts it with the <xref:System.Decimal.Floor%2A> method.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ceiling/cs/ceiling1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ceiling/vb/Ceiling1.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (d1 As Decimal, d2 As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Compare : decimal * decimal -&gt; int" Usage="System.decimal.Compare (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="cf2bf-215">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-215">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="cf2bf-216">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-216">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="cf2bf-217">比较两个指定的 <see cref="T:System.Decimal" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-217">Compares two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-218">有符号数字，指示 <paramref name="d1" /> 和 <paramref name="d2" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-218">A signed number indicating the relative values of <paramref name="d1" /> and <paramref name="d2" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="cf2bf-219">返回值</span><span class="sxs-lookup"><span data-stu-id="cf2bf-219">Return value</span></span> 
 </term><description> <span data-ttu-id="cf2bf-220">含义</span><span class="sxs-lookup"><span data-stu-id="cf2bf-220">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="cf2bf-221">小于零</span><span class="sxs-lookup"><span data-stu-id="cf2bf-221">Less than zero</span></span> 
 </term><description><span data-ttu-id="cf2bf-222"><paramref name="d1" /> 小于 <paramref name="d2" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-222"><paramref name="d1" /> is less than <paramref name="d2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cf2bf-223">零</span><span class="sxs-lookup"><span data-stu-id="cf2bf-223">Zero</span></span> 
 </term><description><span data-ttu-id="cf2bf-224"><paramref name="d1" /> 与 <paramref name="d2" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-224"><paramref name="d1" /> and <paramref name="d2" /> are equal.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cf2bf-225">大于零</span><span class="sxs-lookup"><span data-stu-id="cf2bf-225">Greater than zero</span></span> 
 </term><description><span data-ttu-id="cf2bf-226"><paramref name="d1" /> 大于 <paramref name="d2" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-226"><paramref name="d1" /> is greater than <paramref name="d2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf2bf-227">下面的示例比较了多个 <xref:System.Decimal> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-227">The following example compares several <xref:System.Decimal> values.</span></span> <span data-ttu-id="cf2bf-228">请注意，第一个比较表明这两个值相等，尽管对该变量执行了减法运算 `value2` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-228">Note that the first comparison indicates that the two values are equal despite the subtraction operation performed on the `value2` variable.</span></span> <span data-ttu-id="cf2bf-229">这是因为 <xref:System.Decimal> 类型的精度为29位，而这两个值之间的差异只能检测到30位精度。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-229">This is because the <xref:System.Decimal> type has 29 digits of precision, whereas a difference between these two values can be detected only with 30 digits of precision.</span></span>  
  
 [!code-csharp[System.Decimal.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Compare/cs/Compare1.cs#1)]
 [!code-vb[System.Decimal.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Compare/vb/Compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.CompareTo(System.Object)" />
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cf2bf-230">将此实例与指定的对象或 <see cref="T:System.Decimal" /> 进行比较，并返回二者相对值的指示。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-230">Compares this instance to a specified object or <see cref="T:System.Decimal" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.CompareTo(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Decimal value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : decimal -&gt; int&#xA;override this.CompareTo : decimal -&gt; int" Usage="decimal.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-231">与该实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-231">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="cf2bf-232">将此实例与指定的 <see cref="T:System.Decimal" /> 对象进行比较并返回一个对二者的相对值的比较。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-232">Compares this instance to a specified <see cref="T:System.Decimal" /> object and returns a comparison of their relative values.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-233">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-233">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="cf2bf-234">返回值</span><span class="sxs-lookup"><span data-stu-id="cf2bf-234">Return value</span></span> 
 </term><description> <span data-ttu-id="cf2bf-235">含义</span><span class="sxs-lookup"><span data-stu-id="cf2bf-235">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="cf2bf-236">小于零</span><span class="sxs-lookup"><span data-stu-id="cf2bf-236">Less than zero</span></span> 
 </term><description> <span data-ttu-id="cf2bf-237">此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-237">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cf2bf-238">零</span><span class="sxs-lookup"><span data-stu-id="cf2bf-238">Zero</span></span> 
 </term><description> <span data-ttu-id="cf2bf-239">此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-239">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cf2bf-240">大于零</span><span class="sxs-lookup"><span data-stu-id="cf2bf-240">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="cf2bf-241">此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-241">This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-242">此方法实现 <xref:System.IComparable%601?displayProperty=nameWithType> 接口，且执行方式略优于 <xref:System.Decimal.CompareTo%2A?displayProperty=nameWithType> 方法，因为它不必将 `value` 参数转换为对象。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-242">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Decimal.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="cf2bf-243">根据您的编程语言，可以编写一个方法，在 <xref:System.Decimal.CompareTo%2A> 此方法中，参数类型 (比实例类型更窄) 位。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-243">Depending on your programming language, it might be possible to code a <xref:System.Decimal.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="cf2bf-244">这是可能的，因为某些编程语言会执行将参数表示为类型的隐式扩大转换，该类型的位数与实例的位数一样多。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-244">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="cf2bf-245">例如，假设实例类型为 <xref:System.Int32> ，而参数类型为 <xref:System.Byte> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-245">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="cf2bf-246">Microsoft c # 编译器生成指令以将参数表示为 <xref:System.Int32> 对象，然后生成一个 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> 方法来比较实例的值 <xref:System.Int32> 和 <xref:System.Int32> 参数表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-246">The Microsoft C# compiler generates instructions to represent the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method to compare the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="cf2bf-247">请查阅编程语言的文档，以确定其编译器是否对数值类型执行隐式扩大转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-247">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-248">下面的代码示例演示了 <xref:System.Decimal.CompareTo%2A> 多个值和引用类型的方法的泛型和非泛型版本。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-248">The following code example demonstrates generic and nongeneric versions of the <xref:System.Decimal.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="decimal.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-249">要与此实例进行比较的对象，或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-249">The object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="cf2bf-250">将此实例与指定对象进行比较并返回一个对二者的相对值的比较。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-250">Compares this instance to a specified object and returns a comparison of their relative values.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-251">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-251">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="cf2bf-252">返回值</span><span class="sxs-lookup"><span data-stu-id="cf2bf-252">Return value</span></span> 
 </term><description> <span data-ttu-id="cf2bf-253">含义</span><span class="sxs-lookup"><span data-stu-id="cf2bf-253">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="cf2bf-254">小于零</span><span class="sxs-lookup"><span data-stu-id="cf2bf-254">Less than zero</span></span> 
 </term><description> <span data-ttu-id="cf2bf-255">此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-255">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cf2bf-256">零</span><span class="sxs-lookup"><span data-stu-id="cf2bf-256">Zero</span></span> 
 </term><description> <span data-ttu-id="cf2bf-257">此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-257">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="cf2bf-258">大于零</span><span class="sxs-lookup"><span data-stu-id="cf2bf-258">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="cf2bf-259">此实例大于 <paramref name="value" />，或 <paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-259">This instance is greater than <paramref name="value" />, or <paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-260">的任何实例 <xref:System.Decimal> ，无论其值如何，都视为大于 `null` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-260">Any instance of <xref:System.Decimal>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="cf2bf-261">参数 `value` 必须为 `null` 或实例 <xref:System.Decimal> ; 否则，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-261">Parameter `value` must be `null` or an instance of <xref:System.Decimal>; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-262">下面的代码示例使用方法将多个 `Decimal` 和其他对象与一个引用值进行比较 `Decimal` `CompareTo` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-262">The following code example compares several `Decimal` and other objects to a reference `Decimal` value using the `CompareTo` method.</span></span>  
  
 [!code-cpp[System.Decimal.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/cto_eq_obj.cpp#1)]
 [!code-csharp[System.Decimal.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/cto_eq_obj.cs#1)]
 [!code-vb[System.Decimal.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/cto_eq_obj.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf2bf-263"><paramref name="value" /> 不是 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-263"><paramref name="value" /> is not a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static decimal Divide (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Divide(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Divide(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Divide : decimal * decimal -&gt; decimal" Usage="System.decimal.Divide (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="cf2bf-264">被除数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-264">The dividend.</span></span></param>
        <param name="d2"><span data-ttu-id="cf2bf-265">除数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-265">The divisor.</span></span></param>
        <summary><span data-ttu-id="cf2bf-266">将两个指定的 <see cref="T:System.Decimal" /> 值相除。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-266">Divides two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-267"><paramref name="d1" /> 除以 <paramref name="d2" /> 的结果。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-267">The result of dividing <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf2bf-268">下面的示例调用 <xref:System.Decimal.Divide%2A> 方法将值范围除以22.1。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-268">The following example calls the <xref:System.Decimal.Divide%2A> method to divide a range of values by 22.1.</span></span>  
  
 [!code-csharp[System.Decimal.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Decimal.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="cf2bf-269"><paramref name="d2" /> 为零。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-269"><paramref name="d2" /> is zero.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-270">返回值（即：商）小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-270">The return value (that is, the quotient) is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cf2bf-271">返回一个值，该值指示 <see cref="T:System.Decimal" /> 的两个实例是否表示同一个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-271">Returns a value indicating whether two instances of <see cref="T:System.Decimal" /> represent the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Equals(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Decimal value);" />
      <MemberSignature Language="F#" Value="override this.Equals : decimal -&gt; bool" Usage="decimal.Equals value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-272">要与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-272">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="cf2bf-273">返回一个值，该值指示此实例和指定的 <see cref="T:System.Decimal" /> 对象是否表示相同的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-273">Returns a value indicating whether this instance and a specified <see cref="T:System.Decimal" /> object represent the same value.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-274">如果 <see langword="true" /> 与此实例相等，则为 <paramref name="value" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-274"><see langword="true" /> if <paramref name="value" /> is equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-275">此方法实现 <xref:System.IEquatable%601?displayProperty=nameWithType> 接口，并且执行的效果略优于， <xref:System.Decimal.Equals%2A> 因为无需将 `value` 参数转换为对象。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-275">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Decimal.Equals%2A> because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="cf2bf-276">如果 `value` (比实例类型更窄) ，则某些编程语言会执行隐式的扩大转换，该转换将参数的值转换为具有更多位数的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-276">If `value` has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>  
  
 <span data-ttu-id="cf2bf-277">例如，假设实例类型为 <xref:System.Int32> ，而参数类型为 <xref:System.Byte> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-277">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="cf2bf-278">Microsoft c # 编译器生成指令，以将参数的值表示为 <xref:System.Int32> 对象，然后生成 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> 用于比较 <xref:System.Int32> 实例和参数表示形式的方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-278">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method to compare the <xref:System.Int32> instance and parameter representation.</span></span>  
  
 <span data-ttu-id="cf2bf-279">请查阅编程语言的文档，以确定其编译器是否对数值类型执行隐式扩大转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-279">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="cf2bf-280">编译器重载决策可能会考虑两种方法重载行为中的明显差异 <see cref="M:System.Decimal.Equals(System.Object)" /> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-280">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Decimal.Equals(System.Object)" /> method overloads.</span></span> <span data-ttu-id="cf2bf-281">如果定义了参数和 a 之间的隐式转换， <paramref name="obj" /> <see cref="T:System.Decimal" /> 并且参数未键入为，则 <see cref="T:System.Object" /> 编译器可能会执行隐式转换并调用 <see cref="M:System.Decimal.Equals(System.Decimal)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-281">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Decimal" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method.</span></span> <span data-ttu-id="cf2bf-282">否则，它们调用 <see cref="M:System.Decimal.Equals(System.Object)" /> 方法， <see langword="false" /> 如果其 <paramref name="obj" /> 参数不是值，则总是返回 <see cref="T:System.Decimal" /> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-282">Otherwise, they call the <see cref="M:System.Decimal.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Decimal" /> value.</span></span> <span data-ttu-id="cf2bf-283">下面的示例演示两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-283">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="cf2bf-284">对于所有基元整型类型（包括有符号和无符号类型），第一次比较将返回，这是 <see langword="true" /> 因为编译器会自动执行扩大转换并调用 <see cref="M:System.Decimal.Equals(System.Decimal)" /> 方法，而第二次比较返回，这是 <see langword="false" /> 因为编译器调用了 <see cref="M:System.Decimal.Equals(System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-284">In the case of all primitive integral types, including both signed and unsigned types, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Decimal.Equals(System.Object)" /> method.</span></span>  
 
<span data-ttu-id="cf2bf-285">：：： code language = "csharp" source = "~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs" interactive = "dotnet" id = "Snippet2"：：：：：： code language = "vb" source = "~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb" id = "Snippet2"：：：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-285">:::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs" interactive="try-dotnet" id="Snippet2"::: :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb" id="Snippet2":::</span></span></para></block>
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
        <altmember cref="Overload:System.Decimal.CompareTo" />
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="decimal.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-286">与该实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-286">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="cf2bf-287">返回一个值，该值指示此实例和指定的 <see cref="T:System.Object" /> 是否表示相同的类型和值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-287">Returns a value indicating whether this instance and a specified <see cref="T:System.Object" /> represent the same type and value.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-288">如果 <paramref name="value" /> 是一个 <see cref="T:System.Decimal" /> 且与此实例相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-288"><see langword="true" /> if <paramref name="value" /> is a <see cref="T:System.Decimal" /> and equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf2bf-289">下面的代码示例使用方法将多个 `Decimal` 和其他对象与一个引用值进行比较 `Decimal` `Equals` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-289">The following code example compares several `Decimal` and other objects to a reference `Decimal` value using the `Equals` method.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/cto_eq_obj.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/cto_eq_obj.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/cto_eq_obj.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="cf2bf-290">编译器重载决策可能会考虑两种方法重载行为中的明显差异 <see cref="M:System.Decimal.Equals(System.Object)" /> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-290">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Decimal.Equals(System.Object)" /> method overloads.</span></span> <span data-ttu-id="cf2bf-291">如果定义了参数和 a 之间的隐式转换， <paramref name="obj" /> <see cref="T:System.Decimal" /> 并且参数未键入为，则 <see cref="T:System.Object" /> 编译器可能会执行隐式转换并调用 <see cref="M:System.Decimal.Equals(System.Decimal)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-291">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Decimal" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method.</span></span> <span data-ttu-id="cf2bf-292">否则，它们调用 <see cref="M:System.Decimal.Equals(System.Object)" /> 方法， <see langword="false" /> 如果其 <paramref name="obj" /> 参数不是值，则总是返回 <see cref="T:System.Decimal" /> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-292">Otherwise, they call the <see cref="M:System.Decimal.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Decimal" /> value.</span></span> <span data-ttu-id="cf2bf-293">下面的示例演示两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-293">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="cf2bf-294">对于所有基元整型类型（包括有符号和无符号类型），第一次比较将返回，这是 <see langword="true" /> 因为编译器会自动执行扩大转换并调用 <see cref="M:System.Decimal.Equals(System.Decimal)" /> 方法，而第二次比较返回，这是 <see langword="false" /> 因为编译器调用了 <see cref="M:System.Decimal.Equals(System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-294">In the case of all primitive integral types, including both signed and unsigned types, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Decimal.Equals(System.Decimal)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Decimal.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="cf2bf-295">：：： code language = "csharp" source = "~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs" interactive = "dotnet" id = "Snippet2"：：：：：： code language = "vb" source = "~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb" id = "Snippet2"：：：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-295">:::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.equals/cs/equalsoverl.cs" interactive="try-dotnet" id="Snippet2"::: :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.equals/vb/equalsoverl.vb" id="Snippet2":::</span></span></para></block>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Equals(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Equals : decimal * decimal -&gt; bool" Usage="System.decimal.Equals (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="cf2bf-296">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-296">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="cf2bf-297">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-297">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="cf2bf-298">返回一个值，该值指示 <see cref="T:System.Decimal" /> 的两个指定实例是否表示同一个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-298">Returns a value indicating whether two specified instances of <see cref="T:System.Decimal" /> represent the same value.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-299">如果 <paramref name="d1" /> 和 <paramref name="d2" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-299"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf2bf-300">下面的代码示例 `Decimal` 使用静态方法比较引用值的多个值 `Decimal` `Equals` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-300">The following code example compares several `Decimal` values to a reference `Decimal` value using the static `Equals` method.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/comp_equal.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/comp_equal.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/comp_equal.vb" id="Snippet2":::

 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static decimal Floor (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Floor(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Floor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Floor(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Floor : decimal -&gt; decimal" Usage="System.decimal.Floor d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf2bf-301">要舍入的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-301">The value to round.</span></span></param>
        <summary><span data-ttu-id="cf2bf-302">将指定的 <see cref="T:System.Decimal" /> 数字向负无穷方向舍入为最接近的整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-302">Rounds a specified <see cref="T:System.Decimal" /> number to the closest integer toward negative infinity.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-303">如果 <paramref name="d" /> 有小数部分，则为负无穷方向上小于 <paramref name="d" /> 的下一个整 <see cref="T:System.Decimal" /> 数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-303">If <paramref name="d" /> has a fractional part, the next whole <see cref="T:System.Decimal" /> number toward negative infinity that is less than <paramref name="d" />.</span></span>  
  
<span data-ttu-id="cf2bf-304">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cf2bf-304">-or-</span></span> 
<span data-ttu-id="cf2bf-305">如果 <paramref name="d" /> 没有小数部分，则 <paramref name="d" /> 原样返回。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-305">If <paramref name="d" /> doesn't have a fractional part, <paramref name="d" /> is returned unchanged.</span></span> <span data-ttu-id="cf2bf-306">请注意，该方法将返回 <see cref="T:System.Decimal" /> 类型的整数值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-306">Note that the method returns an integral value of type <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-307">此方法的行为遵循 IEEE 标准754第4部分。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-307">The behavior of this method follows IEEE Standard 754, Section 4.</span></span> <span data-ttu-id="cf2bf-308">这种舍入有时称为舍入向负无穷。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-308">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="cf2bf-309">换言之，如果 `d` 为正，则会截断任何小数部分。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-309">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="cf2bf-310">如果 `d` 为负，则任何小数部分的存在都将导致它舍入为较小的整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-310">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="cf2bf-311">此方法的操作不同于 <xref:System.Decimal.Ceiling%2A> 方法，后者支持向正无穷舍入。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-311">The operation of this method differs from the <xref:System.Decimal.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-312">下面的示例演示 <xref:System.Decimal.Floor%2A> 方法，并将其与方法进行比较 <xref:System.Decimal.Ceiling%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-312">The following example illustrates the <xref:System.Decimal.Floor%2A> method and contrasts it with the <xref:System.Decimal.Ceiling%2A> method.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ceiling/cs/ceiling1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ceiling/vb/Ceiling1.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
        <altmember cref="M:System.Decimal.Truncate(System.Decimal)" />
        <altmember cref="M:System.Decimal.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="FromOACurrency">
      <MemberSignature Language="C#" Value="public static decimal FromOACurrency (long cy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal FromOACurrency(int64 cy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.FromOACurrency(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromOACurrency (cy As Long) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal FromOACurrency(long cy);" />
      <MemberSignature Language="F#" Value="static member FromOACurrency : int64 -&gt; decimal" Usage="System.decimal.FromOACurrency cy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cy" Type="System.Int64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="cy"><span data-ttu-id="cf2bf-313">一个 OLE 自动化货币值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-313">An OLE Automation Currency value.</span></span></param>
        <summary><span data-ttu-id="cf2bf-314">将指定的 64 位有符号整数（它包含 OLE 自动化货币值）转换为等效的 <see cref="T:System.Decimal" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-314">Converts the specified 64-bit signed integer, which contains an OLE Automation Currency value, to the equivalent <see cref="T:System.Decimal" /> value.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-315">包含 <see cref="T:System.Decimal" /> 的等效数的 <paramref name="cy" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-315">A <see cref="T:System.Decimal" /> that contains the equivalent of <paramref name="cy" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf2bf-316">下面的代码示例使用 `FromOACurrency` 方法将 <xref:System.Int64> 包含 OLE 自动化货币值的字段转换为等效的 `Decimal` 数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-316">The following code example uses the `FromOACurrency` method to convert <xref:System.Int64> fields that contain OLE Automation Currency values to the equivalent `Decimal` numbers.</span></span>  
  
 [!code-cpp[System.Decimal.OACurrency#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CPP/fromoacurrency.cpp#2)]
 [!code-csharp[System.Decimal.OACurrency#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CS/fromoacurrency.cs#2)]
 [!code-vb[System.Decimal.OACurrency#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.OACurrency/VB/fromoacurrency.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.ToOACurrency(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="GetBits">
      <MemberSignature Language="C#" Value="public static int[] GetBits (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] GetBits(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.GetBits(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBits (d As Decimal) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ GetBits(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member GetBits : decimal -&gt; int[]" Usage="System.decimal.GetBits d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf2bf-317">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-317">The value to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-318">将 <see cref="T:System.Decimal" /> 的指定实例的值转换为其等效的二进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-318">Converts the value of a specified instance of <see cref="T:System.Decimal" /> to its equivalent binary representation.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-319">包含 <paramref name="d" /> 二进制表示形式、由四个元素组成的 32 位有符号整数数组。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-319">A 32-bit signed integer array with four elements that contain the binary representation of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-320">数字的二进制表示形式 <xref:System.Decimal> 由1位符号、96位整数和比例因子组成，用于划分整数号，并指定它的哪一部分是小数部分。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-320">The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.</span></span> <span data-ttu-id="cf2bf-321">缩放系数隐式为数字10，指数范围为0到28。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-321">The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.</span></span>  
  
 <span data-ttu-id="cf2bf-322">返回值是一个四元素数组，其中包含32位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-322">The return value is a four-element array of 32-bit signed integers.</span></span>  
  
 <span data-ttu-id="cf2bf-323">返回数组的第一个、第二个和第三个元素包含96位整数的低、中和高32位。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-323">The first, second, and third elements of the returned array contain the low, middle, and high 32 bits of the 96-bit integer number.</span></span>  
  
 <span data-ttu-id="cf2bf-324">返回数组的第四个元素包含刻度因子和符号。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-324">The fourth element of the returned array contains the scale factor and sign.</span></span> <span data-ttu-id="cf2bf-325">它由以下部分组成：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-325">It consists of the following parts:</span></span>  
  
 <span data-ttu-id="cf2bf-326">位0到15是未使用的，并且必须为零。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-326">Bits 0 to 15, the lower word, are unused and must be zero.</span></span>  
  
 <span data-ttu-id="cf2bf-327">位16到23必须包含一个介于0到28之间的指数，该指数指示10的幂来除以整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-327">Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.</span></span>  
  
 <span data-ttu-id="cf2bf-328">不使用 Bits 24 到30，并且必须为零。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-328">Bits 24 to 30 are unused and must be zero.</span></span>  
  
 <span data-ttu-id="cf2bf-329">第31位包含符号：0表示正，1表示负。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-329">Bit 31 contains the sign: 0 mean positive, and 1 means negative.</span></span>  
  
 <span data-ttu-id="cf2bf-330">请注意，位表示形式区分负数和正零。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-330">Note that the bit representation differentiates between negative and positive zero.</span></span> <span data-ttu-id="cf2bf-331">在所有操作中，这些值被视为相等。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-331">These values are treated as being equal in all operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-332">下面的示例使用 `GetBits` 方法将多个 `Decimal` 值转换为其等效的二进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-332">The following example uses the `GetBits` method to convert several `Decimal` values to their equivalent binary representations.</span></span> <span data-ttu-id="cf2bf-333">然后，它显示方法返回的数组中的元素的十进制值和十六进制值 <xref:System.Decimal.GetBits%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-333">It then displays the decimal values and the hexadecimal value of the elements in the array returned by the <xref:System.Decimal.GetBits%2A> method.</span></span>  
  
 [!code-cpp[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CPP/getbits.cpp#2)]
 [!code-csharp[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CS/getbits.cs#2)]
 [!code-vb[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/VB/getbits.vb#2)]  
  
 <span data-ttu-id="cf2bf-334">下面的示例使用 <xref:System.Decimal.GetBits%2A> 方法检索数组的组件部分。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-334">The following example uses the <xref:System.Decimal.GetBits%2A> method to retrieve the component parts of an array.</span></span> <span data-ttu-id="cf2bf-335">然后，在对构造函数的调用中使用此数组 <xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29> 来实例化新的 <xref:System.Decimal> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-335">It then uses this array in the call to the <xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29> constructor to instantiate a new <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Decimal.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.ctor/cs/ctor2a.cs#1)]
 [!code-vb[System.Decimal.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.ctor/vb/ctor2a.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Decimal.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="GetBits">
      <MemberSignature Language="C#" Value="public static int GetBits (decimal d, Span&lt;int&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetBits(valuetype System.Decimal d, valuetype System.Span`1&lt;int32&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.GetBits(System.Decimal,System.Span{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBits (d As Decimal, destination As Span(Of Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetBits(System::Decimal d, Span&lt;int&gt; destination);" />
      <MemberSignature Language="F#" Value="static member GetBits : decimal * Span&lt;int&gt; -&gt; int" Usage="System.decimal.GetBits (d, destination)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="destination" Type="System.Span&lt;System.Int32&gt;" Index="1" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf2bf-336">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-336">The value to convert.</span></span></param>
        <param name="destination"><span data-ttu-id="cf2bf-337">要用于存储四整数二进制表示形式的范围。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-337">The span into which to store the four-integer binary representation.</span></span></param>
        <summary><span data-ttu-id="cf2bf-338">将 <see cref="T:System.Decimal" /> 的指定实例的值转换为其等效的二进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-338">Converts the value of a specified instance of <see cref="T:System.Decimal" /> to its equivalent binary representation.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-339"><see langword="4" />，是二进制表示形式的整数的数目。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-339"><see langword="4" />, which is the number of integers in the binary representation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf2bf-340">目标范围不够长，无法存储二进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-340">The destination span was not long enough to store the binary representation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="decimal.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf2bf-341">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-341">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-342">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-342">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="decimal.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf2bf-343">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-343">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-344">枚举常数 <see cref="F:System.TypeCode.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-344">The enumerated constant <see cref="F:System.TypeCode.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf2bf-345">下面的代码示例使用 `GetTypeCode` 方法返回值类型的类型代码 `Decimal` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-345">The following code example uses the `GetTypeCode` method to return the type code for `Decimal` value type.</span></span>  
  
 [!code-cpp[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CPP/gettypecode.cpp#3)]
 [!code-csharp[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CS/gettypecode.cs#3)]
 [!code-vb[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/VB/gettypecode.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly decimal MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxValue As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal MaxValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxValue : decimal" Usage="System.decimal.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf2bf-346">表示 <see cref="T:System.Decimal" /> 的最大可能值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-346">Represents the largest possible value of <see cref="T:System.Decimal" />.</span></span> <span data-ttu-id="cf2bf-347">该字段是常数且为只读。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-347">This field is constant and read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-348">此常量的值为正79228162514264337593543950335。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-348">The value of this constant is positive 79,228,162,514,264,337,593,543,950,335.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-349">下面的代码示例演示了如何使用 `MaxValue` ：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-349">The following code sample illustrates the use of `MaxValue` :</span></span>  
  
 [!code-cpp[Decimal Example#2](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#2)]
 [!code-csharp[Decimal Example#2](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#2)]
 [!code-vb[Decimal Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinusOne">
      <MemberSignature Language="C#" Value="public static readonly decimal MinusOne;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal MinusOne" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.MinusOne" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinusOne As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal MinusOne;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinusOne : decimal" Usage="System.decimal.MinusOne" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf2bf-350">表示数字负一 (-1)。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-350">Represents the number negative one (-1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf2bf-351">下面的代码示例演示如何使用 `MinusOne` 字段。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-351">The following code example illustrates the use of the `MinusOne` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MaxValue" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly decimal MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal MinValue" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinValue As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal MinValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinValue : decimal" Usage="System.decimal.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf2bf-352">表示 <see cref="T:System.Decimal" /> 的最小可能值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-352">Represents the smallest possible value of <see cref="T:System.Decimal" />.</span></span> <span data-ttu-id="cf2bf-353">该字段是常数且为只读。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-353">This field is constant and read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-354">此常量的值为负79228162514264337593543950335。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-354">The value of this constant is negative 79,228,162,514,264,337,593,543,950,335.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-355">下面的代码示例演示如何使用 `MinValue` 字段。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-355">The following code example illustrates the use of the `MinValue` field.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static decimal Multiply (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Multiply(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Multiply(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Multiply : decimal * decimal -&gt; decimal" Usage="System.decimal.Multiply (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="cf2bf-356">被乘数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-356">The multiplicand.</span></span></param>
        <param name="d2"><span data-ttu-id="cf2bf-357">乘数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-357">The multiplier.</span></span></param>
        <summary><span data-ttu-id="cf2bf-358">两个指定的 <see cref="T:System.Decimal" /> 值相乘。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-358">Multiplies two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-359"><paramref name="d1" /> 与 <paramref name="d2" /> 相乘的结果。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-359">The result of multiplying <paramref name="d1" /> and <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf2bf-360">下面的代码示例创建几对 `Decimal` 值，并通过方法计算其产品 `Multiply` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-360">The following code example creates several pairs of `Decimal` values and calculates their products with the `Multiply` method.</span></span>  
  
 [!code-cpp[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/CPP/mul_div_rem.cpp#1)]
 [!code-csharp[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/CS/mul_div_rem.cs#1)]
 [!code-vb[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/VB/mul_div_rem.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-361">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-361">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static decimal Negate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Negate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Negate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Negate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Negate(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Negate : decimal -&gt; decimal" Usage="System.decimal.Negate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf2bf-362">要求反的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-362">The value to negate.</span></span></param>
        <summary><span data-ttu-id="cf2bf-363">返回指定的 <see cref="T:System.Decimal" /> 值乘以 -1 的结果。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-363">Returns the result of multiplying the specified <see cref="T:System.Decimal" /> value by negative one.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-364">具有 <paramref name="d" /> 的值，但符号相反的十进制数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-364">A decimal number with the value of <paramref name="d" />, but the opposite sign.</span></span>  
  
<span data-ttu-id="cf2bf-365">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cf2bf-365">-or-</span></span> 
<span data-ttu-id="cf2bf-366">如果 <paramref name="d" /> 为零，则为零。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-366">Zero, if <paramref name="d" /> is zero.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf2bf-367">下面的代码示例使用 `Negate` 方法更改几个值的符号 `Decimal` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-367">The following code example uses the `Negate` method to change the sign of several `Decimal` values.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CPP/floor_neg_trunc.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CS/floor_neg_trunc.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/VB/floor_neg_trunc.vb" id="Snippet1":::

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static readonly decimal One;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal One" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.One" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly One As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal One;" />
      <MemberSignature Language="F#" Value=" staticval mutable One : decimal" Usage="System.decimal.One" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf2bf-368">表示数字一 (1)。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-368">Represents the number one (1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf2bf-369">下面的代码示例演示如何使用 `One` 字段。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-369">The following code example illustrates the use of the `One` field.</span></span>  
  
 [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]
 [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.Zero" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MaxValue" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static decimal operator + (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Addition(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator +(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( + ) : decimal * decimal -&gt; decimal" Usage="d1 + d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="cf2bf-370">要相加的第一个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-370">The first value to add.</span></span></param>
        <param name="d2"><span data-ttu-id="cf2bf-371">要相加的第二个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-371">The second value to add.</span></span></param>
        <summary><span data-ttu-id="cf2bf-372">将两个指定的 <see cref="T:System.Decimal" /> 值相加。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-372">Adds two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-373"><paramref name="d1" /> 与 <paramref name="d2" /> 相加的结果。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-373">The result of adding <paramref name="d1" /> and <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-374"><xref:System.Decimal.op_Addition%2A>方法定义了值的加法运算符的运算 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-374">The <xref:System.Decimal.op_Addition%2A> method defines the operation of the addition operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="cf2bf-375">它可以实现如下所示的代码：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-375">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/addition1.cs#3)]
 [!code-vb[System.Decimal.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/addition1.vb#3)]  
  
 <span data-ttu-id="cf2bf-376">如果正在使用的语言不支持自定义运算符，请改为调用 <xref:System.Decimal.Add%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-376">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Add%2A> method instead.</span></span>  
  
 <span data-ttu-id="cf2bf-377">此运算符的等效方法是 <xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cf2bf-377">The equivalent method for this operator is <xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-378">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-378">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Decrement">
      <MemberSignature Language="C#" Value="public static decimal operator -- (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Decrement(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Decrement(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Decrement (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator --(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member op_Decrement : decimal -&gt; decimal" Usage="System.decimal.op_Decrement d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf2bf-379">要递减的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-379">The value to decrement.</span></span></param>
        <summary><span data-ttu-id="cf2bf-380"><see cref="T:System.Decimal" /> 操作数减 1。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-380">Decrements the <see cref="T:System.Decimal" /> operand by one.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-381"><paramref name="d" /> 减 1 所得的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-381">The value of <paramref name="d" /> decremented by 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-382"><xref:System.Decimal.op_Decrement%2A>方法为值定义减量运算符的运算 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-382">The <xref:System.Decimal.op_Decrement%2A> method defines the operation of the decrement operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="cf2bf-383">它可以实现如下所示的代码：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-383">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/decrement1.cs#4)]  
  
 <span data-ttu-id="cf2bf-384">某些语言 (如缺少增量运算符的 Visual Basic) 可以 <xref:System.Decimal.op_Decrement%2A> 直接调用方法，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-384">Some languages (such as Visual Basic) that lack an increment operator can call the <xref:System.Decimal.op_Decrement%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/decrement1.vb#5)]  
  
 <span data-ttu-id="cf2bf-385">如果你的语言不支持自定义运算符，请 <xref:System.Decimal.Subtract%2A> 改为调用方法，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-385">If your language does not support custom operators, call the <xref:System.Decimal.Subtract%2A> method instead, as the following example shows.</span></span>  
  
 [!code-csharp[System.Decimal.Operators#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/decrement2.cs#6)]
 [!code-vb[System.Decimal.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/decrement2.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-386">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-386">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static decimal operator / (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Division(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Division(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator /(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( / ) : decimal * decimal -&gt; decimal" Usage="d1 / d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="cf2bf-387">被除数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-387">The dividend.</span></span></param>
        <param name="d2"><span data-ttu-id="cf2bf-388">除数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-388">The divisor.</span></span></param>
        <summary><span data-ttu-id="cf2bf-389">将两个指定的 <see cref="T:System.Decimal" /> 值相除。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-389">Divides two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-390"><paramref name="d1" /> 除以 <paramref name="d2" /> 的结果。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-390">The result of dividing <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-391"><xref:System.Decimal.op_Division%2A>方法为值定义除法运算符的运算 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-391">The <xref:System.Decimal.op_Division%2A> method defines the operation of the division operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="cf2bf-392">它可以实现如下所示的代码：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-392">It enables code such as the following:</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/division1.cs" interactive="try-dotnet" id="Snippet7":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/division1.vb" id="Snippet7":::

 <span data-ttu-id="cf2bf-393">如果正在使用的语言不支持自定义运算符，请改为调用 <xref:System.Decimal.Divide%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-393">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Divide%2A> method instead.</span></span>  
  
 <span data-ttu-id="cf2bf-394">此运算符的等效方法是 <xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cf2bf-394">The equivalent method for this operator is <xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="cf2bf-395"><paramref name="d2" /> 为零。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-395"><paramref name="d2" /> is zero.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-396">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-396">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : decimal * decimal -&gt; bool" Usage="d1 = d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="cf2bf-397">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-397">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="cf2bf-398">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-398">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="cf2bf-399">返回一个值，该值指示两个 <see cref="T:System.Decimal" /> 值是否相等。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-399">Returns a value that indicates whether two <see cref="T:System.Decimal" /> values are equal.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-400">如果 <paramref name="d1" /> 和 <paramref name="d2" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-400"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-401"><xref:System.Decimal.op_Equality%2A>方法定义了值的相等运算符的运算 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-401">The <xref:System.Decimal.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="cf2bf-402">它可以实现如下所示的代码：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-402">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/equality1.cs#1)]
 [!code-vb[System.Decimal.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/equality1.vb#1)]  
  
 <span data-ttu-id="cf2bf-403">如果正在使用的语言不支持自定义运算符，请改为调用 <xref:System.Decimal.Equals%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-403">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Equals%2A> method instead.</span></span>  
  
 <span data-ttu-id="cf2bf-404">此运算符的等效方法是 <xref:System.Decimal.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cf2bf-404">The equivalent method for this operator is <xref:System.Decimal.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
        <altmember cref="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cf2bf-405">定义 <see cref="T:System.Decimal" /> 对象与其他类型之间的显式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-405">Defines an explicit conversion between a <see cref="T:System.Decimal" /> object and another type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator byte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Byte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; byte" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-406">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-406">The value to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-407">定义从 <see cref="T:System.Decimal" /> 到 8 位无符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-407">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to an 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-408">8 位无符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-408">An 8-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-409">此运算符支持将显式转换 <xref:System.Decimal> 为 <xref:System.Byte> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-409">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Byte>.</span></span> <span data-ttu-id="cf2bf-410">此类显式转换的语法依赖于语言，而各个语言编译器可提供不同的实现并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-410">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="cf2bf-411">当你 <xref:System.Decimal> <xref:System.Byte> 使用 c #、c + + 和 Visual Basic 将值显式转换为值时，此示例演示了不同的返回值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-411">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Byte> value by using C#, C++, and Visual Basic.</span></span> <span data-ttu-id="cf2bf-412">若要执行独立于语言的转换，可以调用 <xref:System.Decimal.ToByte%28System.Decimal%29?displayProperty=nameWithType> 或 <xref:System.Convert.ToByte%28System.Decimal%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-412">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToByte%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToByte%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples 
 <span data-ttu-id="cf2bf-413">下面的示例 <xref:System.Decimal> <xref:System.Byte> 使用 explicit <xref:System.Decimal> to 转换运算符将数字转换为值 <xref:System.Byte> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-413">The following example converts <xref:System.Decimal> numbers to <xref:System.Byte> values by using the explicit <xref:System.Decimal> to <xref:System.Byte> conversion operator.</span></span>

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctos_byte.cpp" id="Snippet4":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctos_byte.cs" interactive="try-dotnet" id="Snippet4":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctos_byte.vb" id="Snippet4":::

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-414"><paramref name="value" /> 小于 <see cref="F:System.Byte.MinValue" /> 或大于 <see cref="F:System.Byte.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-414"><paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator char (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname char op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Char" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator char(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; char" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-415">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-415">The value to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-416">定义从 Unicode 字符到 <see cref="T:System.Decimal" /> 的显式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-416">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a Unicode character.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-417">表示转换后的 <see cref="T:System.Decimal" /> 的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-417">A Unicode character that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-418">此运算符支持将显式转换 <xref:System.Decimal> 为 <xref:System.Char> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-418">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Char>.</span></span> <span data-ttu-id="cf2bf-419">此类显式转换的语法是依赖于语言的，并且各语言编译器可以提供不同的实现并返回不同的结果，也可能根本不支持转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-419">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results, or might not support the conversion at all.</span></span> <span data-ttu-id="cf2bf-420">例如，Visual Basic 和 c + + 编译器不支持显式 <xref:System.Decimal> <xref:System.Char> 转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-420">For example, the Visual Basic and C++ compilers do not support an explicit <xref:System.Decimal> to a <xref:System.Char> conversion.</span></span>
 

## Examples 
 <span data-ttu-id="cf2bf-421">下面的示例 <xref:System.Decimal> <xref:System.Char> 使用 explicit <xref:System.Decimal> to 转换运算符) 将数字转换为 (Unicode 字符的值 <xref:System.Char> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-421">The following example converts <xref:System.Decimal> numbers to <xref:System.Char> values (Unicode characters) by using the explicit <xref:System.Decimal> to <xref:System.Char> conversion operator.</span></span>

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctochar.cs" interactive="try-dotnet" id="Snippet6":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctochar.vb" id="Snippet6":::

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-422"><paramref name="value" /> 小于 <see cref="F:System.Char.MinValue" /> 或大于 <see cref="F:System.Char.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-422"><paramref name="value" /> is less than <see cref="F:System.Char.MinValue" /> or greater than <see cref="F:System.Char.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator double (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Double" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator double(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; double" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-423">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-423">The value to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-424">定义从 <see cref="T:System.Decimal" /> 到双精度浮点数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-424">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-425">双精度浮点数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-425">A double-precision floating-point number that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-426">此操作可能会导致精度损失，因为双精度浮点数的有效位数少于 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-426">This operation can result in a loss of precision, because a double-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>
 
 <span data-ttu-id="cf2bf-427">此运算符支持将显式转换 <xref:System.Decimal> 为 <xref:System.Double> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-427">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Double>.</span></span> <span data-ttu-id="cf2bf-428">此类显式转换的语法依赖于语言，而各个语言编译器可提供不同的实现并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-428">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="cf2bf-429">当你 <xref:System.Decimal> <xref:System.Double> 使用 c #、c + + 和 Visual Basic 将值显式转换为值时，此示例演示了不同的返回值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-429">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Double> value by using C#, C++, and Visual Basic.</span></span> <span data-ttu-id="cf2bf-430">若要执行独立于语言的转换，可以调用 <xref:System.Decimal.ToDouble%28System.Decimal%29?displayProperty=nameWithType> 或 <xref:System.Convert.ToDouble%28System.Decimal%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-430">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToDouble%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToDouble%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="cf2bf-431">下面的示例 <xref:System.Decimal> <xref:System.Double> 使用 explicit <xref:System.Decimal> to 转换运算符将数字转换为值 <xref:System.Double> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-431">The following example converts <xref:System.Decimal> numbers to <xref:System.Double> values by using the explicit <xref:System.Decimal> to <xref:System.Double> conversion operator.</span></span>

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctosgl_dbl.cpp" id="Snippet5":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctosgl_dbl.cs" interactive="try-dotnet" id="Snippet5":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctosgl_dbl.vb" id="Snippet5":::

 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator short (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int16 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator short(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; int16" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-432">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-432">The value to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-433">定义从 <see cref="T:System.Decimal" /> 到 16 位有符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-433">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-434">16 位有符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-434">A 16-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="cf2bf-435">此运算符支持将显式转换 <xref:System.Decimal> 为 <xref:System.Int16> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-435">This operator supports the explicit conversion of a <xref:System.Decimal> to an <xref:System.Int16>.</span></span> <span data-ttu-id="cf2bf-436">此类显式转换的语法依赖于语言，而各个语言编译器可提供不同的实现并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-436">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="cf2bf-437">当你 <xref:System.Decimal> <xref:System.Int16> 使用 c #、Visual Basic 和 c + + 将值显式转换为值时，此示例演示了不同的返回值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-437">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to an <xref:System.Int16> value by using C#, Visual Basic, and C++.</span></span> <span data-ttu-id="cf2bf-438">若要执行独立于语言的转换，可以调用 <xref:System.Decimal.ToInt16%28System.Decimal%29?displayProperty=nameWithType> 或 <xref:System.Convert.ToInt16%28System.Decimal%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-438">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToInt16%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToInt16%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="cf2bf-439">下面的示例 <xref:System.Decimal> <xref:System.Int16> 使用 explicit <xref:System.Decimal> to 转换运算符将数字转换为值 <xref:System.Int16> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-439">The following example converts <xref:System.Decimal> numbers to <xref:System.Int16> values by using the explicit <xref:System.Decimal> to <xref:System.Int16> conversion operator.</span></span>

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int16.cpp" id="Snippet3":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int16.cs" interactive="try-dotnet" id="Snippet3":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int16.vb" id="Snippet3":::

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-440"><paramref name="value" /> 小于 <see cref="F:System.Int16.MinValue" /> 或大于 <see cref="F:System.Int16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-440"><paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator int (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator int(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; int" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-441">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-441">The value to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-442">定义从 <see cref="T:System.Decimal" /> 到 32 位有符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-442">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-443">32 位有符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-443">A 32-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-444">此运算符支持将显式转换 <xref:System.Decimal> 为 <xref:System.Int32> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-444">This operator supports the explicit conversion of a <xref:System.Decimal> to an <xref:System.Int32>.</span></span> <span data-ttu-id="cf2bf-445">此类显式转换的语法依赖于语言，而各个语言编译器可提供不同的实现并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-445">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="cf2bf-446">当你 <xref:System.Decimal> <xref:System.Int32> 使用 c #、c + + 和 Visual Basic 将值显式转换为值时，此示例演示了不同的返回值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-446">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to an <xref:System.Int32> value by using C#, C++, and Visual Basic.</span></span> <span data-ttu-id="cf2bf-447">若要执行独立于语言的转换，可以调用 <xref:System.Decimal.ToInt32%28System.Decimal%29?displayProperty=nameWithType> 或 <xref:System.Convert.ToInt32%28System.Decimal%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-447">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToInt32%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToInt32%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="cf2bf-448">下面的示例 <xref:System.Decimal> <xref:System.Int32> 使用 explicit <xref:System.Decimal> to 转换运算符将数字转换为值 <xref:System.Int32> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-448">The following example converts <xref:System.Decimal> numbers to <xref:System.Int32> values by using the explicit <xref:System.Decimal> to <xref:System.Int32> conversion operator.</span></span>

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int32.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int32.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int32.vb" id="Snippet2":::

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-449"><paramref name="value" /> 小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-449"><paramref name="value" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator long (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator long(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; int64" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-450">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-450">The value to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-451">定义从 <see cref="T:System.Decimal" /> 到 64 位有符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-451">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-452">64 位有符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-452">A 64-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-453">此运算符支持将显式转换 <xref:System.Decimal> 为 <xref:System.Int64> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-453">This operator supports the explicit conversion of a <xref:System.Decimal> to an <xref:System.Int64>.</span></span> <span data-ttu-id="cf2bf-454">此类显式转换的语法依赖于语言，而各个语言编译器可提供不同的实现并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-454">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="cf2bf-455">当你 <xref:System.Decimal> <xref:System.Int64> 使用 c # 和 Visual Basic 将值显式转换为值时，此示例演示了不同的返回值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-455">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to an <xref:System.Int64> value by using C# and Visual Basic.</span></span> <span data-ttu-id="cf2bf-456">若要执行独立于语言的转换，可以调用 <xref:System.Decimal.ToInt64%28System.Decimal%29?displayProperty=nameWithType> 或 <xref:System.Convert.ToInt64%28System.Decimal%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-456">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToInt64%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToInt64%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 
## Examples
 <span data-ttu-id="cf2bf-457">下面的示例 <xref:System.Decimal> <xref:System.Int64> 使用 explicit <xref:System.Decimal> to 转换运算符将数字转换为值 <xref:System.Int64> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-457">The following example converts <xref:System.Decimal> numbers to <xref:System.Int64> values by using the explicit <xref:System.Decimal> to <xref:System.Int64> conversion operator.</span></span>

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int64.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int64.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int64.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-458"><paramref name="value" /> 小于 <see cref="F:System.Int64.MinValue" /> 或大于 <see cref="F:System.Int64.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-458"><paramref name="value" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator sbyte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int8 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::SByte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; sbyte" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-459">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-459">The value to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-460">定义从 <see cref="T:System.Decimal" /> 到 8 位有符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-460">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to an 8-bit signed integer.</span></span>  
  
<span data-ttu-id="cf2bf-461">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-461">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-462">8 位有符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-462">An 8-bit signed integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-463">此运算符支持将显式转换 <xref:System.Decimal> 为 <xref:System.SByte> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-463">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.SByte>.</span></span> <span data-ttu-id="cf2bf-464">此类显式转换的语法依赖于语言，而各个语言编译器可提供不同的实现并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-464">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="cf2bf-465">当你 <xref:System.Decimal> <xref:System.Byte> <xref:System.SByte> 使用 c # 和 Visual Basic 将值显式转换为和值时，此示例演示了不同的返回值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-465">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Byte> and an <xref:System.SByte> value by using C# and Visual Basic.</span></span> <span data-ttu-id="cf2bf-466">若要执行独立于语言的转换，可以调用 <xref:System.Decimal.ToSByte%28System.Decimal%29?displayProperty=nameWithType> 方法或 <xref:System.Convert.ToSByte%28System.Decimal%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-466">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToSByte%28System.Decimal%29?displayProperty=nameWithType> method or the <xref:System.Convert.ToSByte%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>   


## Examples 
 <span data-ttu-id="cf2bf-467">下面的示例 <xref:System.Decimal> <xref:System.SByte> 使用 explicit <xref:System.Decimal> to 转换运算符将数字转换为值 <xref:System.SByte> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-467">The following example converts <xref:System.Decimal> numbers to <xref:System.SByte> values by using the explicit <xref:System.Decimal> to <xref:System.SByte> conversion operator.</span></span>

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cpp/tosbyte.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cs/tosbyte.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators.explicit/vb/tosbyte.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-468"><paramref name="value" /> 小于 <see cref="F:System.SByte.MinValue" /> 或大于 <see cref="F:System.SByte.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-468"><paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
        <altCompliant cref="M:System.Decimal.ToInt16(System.Decimal)" />
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator float (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.Single" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator float(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; single" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-469">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-469">The value to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-470">定义从 <see cref="T:System.Decimal" /> 到单精度浮点数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-470">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-471">单精度浮点数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-471">A single-precision floating-point number that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-472">此操作可能会导致精度损失，因为单精度浮点数的有效位数少于 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-472">This operation can result in a loss of precision, because a single-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>

 <span data-ttu-id="cf2bf-473">此运算符支持将显式转换 <xref:System.Decimal> 为 <xref:System.Single> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-473">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.Single>.</span></span> <span data-ttu-id="cf2bf-474">此类显式转换的语法依赖于语言，而各个语言编译器可提供不同的实现并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-474">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="cf2bf-475">当你 <xref:System.Decimal> <xref:System.Single> 使用 c # 和 Visual Basic 将值显式转换为值时，此示例演示了不同的返回值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-475">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.Single> value by using C# and Visual Basic.</span></span> <span data-ttu-id="cf2bf-476">若要执行独立于语言的转换，可以调用 <xref:System.Decimal.ToSingle%28System.Decimal%29?displayProperty=nameWithType> 或 <xref:System.Convert.ToSingle%28System.Decimal%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-476">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToSingle%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToSingle%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="cf2bf-477">下面的示例 <xref:System.Decimal> <xref:System.Single> 使用 explicit <xref:System.Decimal> to 转换运算符将数字转换为值 <xref:System.Single> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-477">The following example converts <xref:System.Decimal> numbers to <xref:System.Single> values by using the explicit <xref:System.Decimal> to <xref:System.Single> conversion operator.</span></span>

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cpp/tosingle1.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators.explicit/cs/tosingle1.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators.explicit/vb/tosingle1.vb" id="Snippet2":::

 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ushort (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int16 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt16(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; uint16" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-478">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-478">The value to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-479">定义从 <see cref="T:System.Decimal" /> 到 16 位无符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-479">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 16-bit unsigned integer.</span></span>  
  
<span data-ttu-id="cf2bf-480">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-480">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-481">16 位无符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-481">A 16-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-482">此运算符支持将显式转换 <xref:System.Decimal> 为 <xref:System.UInt16> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-482">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.UInt16>.</span></span> <span data-ttu-id="cf2bf-483">此类显式转换的语法依赖于语言，而各个语言编译器可提供不同的实现并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-483">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="cf2bf-484">当你 <xref:System.Decimal> <xref:System.UInt16> 使用 c # 和 Visual Basic 将值显式转换为值时，此示例演示了不同的返回值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-484">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.UInt16> value by using C# and Visual Basic.</span></span> <span data-ttu-id="cf2bf-485">若要执行独立于语言的转换，可以调用 <xref:System.Decimal.ToUInt16%28System.Decimal%29?displayProperty=nameWithType> 或 <xref:System.Convert.ToUInt16%28System.Decimal%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-485">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToUInt16%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToUInt16%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>
 

## Examples
 <span data-ttu-id="cf2bf-486">下面的示例 <xref:System.Decimal> <xref:System.UInt16> 使用 explicit <xref:System.Decimal> to 转换运算符将数字转换为值 <xref:System.UInt16> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-486">The following example converts <xref:System.Decimal> numbers to <xref:System.UInt16> values by using the explicit <xref:System.Decimal> to <xref:System.UInt16> conversion operator.</span></span>

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int16.cpp" id="Snippet3":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int16.cs" interactive="try-dotnet" id="Snippet3":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int16.vb" id="Snippet3":::

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-487"><paramref name="value" /> 小于 <see cref="F:System.UInt16.MinValue" /> 或大于 <see cref="F:System.UInt16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-487"><paramref name="value" /> is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator uint (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int32 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt32(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; uint32" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-488">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-488">The value to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-489">定义从 <see cref="T:System.Decimal" /> 到 32 位无符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-489">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 32-bit unsigned integer.</span></span>  
  
<span data-ttu-id="cf2bf-490">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-490">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-491">32 位无符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-491">A 32-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-492">此运算符支持将显式转换 <xref:System.Decimal> 为 <xref:System.UInt32> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-492">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.UInt32>.</span></span> <span data-ttu-id="cf2bf-493">此类显式转换的语法依赖于语言，而各个语言编译器可提供不同的实现并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-493">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="cf2bf-494">当你 <xref:System.Decimal> <xref:System.UInt32> 使用 c # 和 Visual Basic 将值显式转换为值时，此示例演示了不同的返回值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-494">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.UInt32> value by using C# and Visual Basic.</span></span> <span data-ttu-id="cf2bf-495">若要执行独立于语言的转换，可以调用 <xref:System.Decimal.ToUInt32%28System.Decimal%29?displayProperty=nameWithType> 或 <xref:System.Convert.ToUInt32%28System.Decimal%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-495">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToUInt32%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToUInt32%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>


## Examples
 <span data-ttu-id="cf2bf-496">下面的示例 <xref:System.Decimal> <xref:System.UInt32> 使用 explicit <xref:System.Decimal> to 转换运算符将数字转换为值 <xref:System.UInt32> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-496">The following example converts <xref:System.Decimal> numbers to <xref:System.UInt32> values by using the explicit <xref:System.Decimal> to <xref:System.UInt32> conversion operator.</span></span>

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int32.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int32.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int32.vb" id="Snippet2":::

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-497"><paramref name="value" /> 小于 <see cref="F:System.UInt32.MinValue" /> 或大于 <see cref="F:System.UInt32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-497"><paramref name="value" /> is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altCompliant cref="M:System.Decimal.ToInt64(System.Decimal)" />
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ulong (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int64 op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt64(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; uint64" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-498">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-498">The value to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-499">定义从 <see cref="T:System.Decimal" /> 到 64 位无符号整数的显式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-499">Defines an explicit conversion of a <see cref="T:System.Decimal" /> to a 64-bit unsigned integer.</span></span>  
  
<span data-ttu-id="cf2bf-500">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-500">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-501">64 位无符号整数，它表示转换后的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-501">A 64-bit unsigned integer that represents the converted <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-502">此运算符支持将显式转换 <xref:System.Decimal> 为 <xref:System.UInt64> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-502">This operator supports the explicit conversion of a <xref:System.Decimal> to a <xref:System.UInt64>.</span></span> <span data-ttu-id="cf2bf-503">此类显式转换的语法依赖于语言，而各个语言编译器可提供不同的实现并返回不同的结果。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-503">The syntax for such explicit conversions is language-dependent, and individual language compilers can provide different implementations and return different results.</span></span> <span data-ttu-id="cf2bf-504">当你 <xref:System.Decimal> <xref:System.UInt64> 使用 c # 和 Visual Basic 将值显式转换为值时，此示例演示了不同的返回值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-504">The example illustrates the different return values when you explicitly convert a <xref:System.Decimal> value to a <xref:System.UInt64> value by using C# and Visual Basic.</span></span> <span data-ttu-id="cf2bf-505">若要执行独立于语言的转换，可以调用 <xref:System.Decimal.ToUInt64%28System.Decimal%29?displayProperty=nameWithType> 或 <xref:System.Convert.ToUInt64%28System.Decimal%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-505">To perform a conversion that is independent of language, you can call the <xref:System.Decimal.ToUInt64%28System.Decimal%29?displayProperty=nameWithType> or the <xref:System.Convert.ToUInt64%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>


## Examples 
 <span data-ttu-id="cf2bf-506">下面的示例 <xref:System.Decimal> <xref:System.UInt64> 使用 explicit <xref:System.Decimal> to 转换运算符将数字转换为值 <xref:System.UInt64> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-506">The following example converts <xref:System.Decimal> numbers to <xref:System.UInt64> values by using the explicit <xref:System.Decimal> to <xref:System.UInt64> conversion operator.</span></span>

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CPP/ctou_int64.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvTo/CS/ctou_int64.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvTo/VB/ctou_int64.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-507"><paramref name="value" /> 为负数或大于 <see cref="F:System.UInt64.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-507"><paramref name="value" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Double)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Double) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(double value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : double -&gt; decimal" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-508">要转换的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-508">The double-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-509">定义从双精度浮点数到 <see cref="T:System.Decimal" /> 的显式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-509">Defines an explicit conversion of a double-precision floating-point number to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-510">已转换的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-510">The converted double-precision floating point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  

 <span data-ttu-id="cf2bf-511">下面的示例 <xref:System.Double> <xref:System.Decimal> 使用 <xref:System.Double> to 转换运算符将值转换为数字 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-511">The following example converts <xref:System.Double> values to <xref:System.Decimal> numbers by using the <xref:System.Double> to <xref:System.Decimal> conversion operator.</span></span> <span data-ttu-id="cf2bf-512">此转换需要 Visual Basic 中的 op_Explicit 运算符。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-512">This conversion requires the op_Explicit operator in Visual Basic.</span></span>

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CPP/cfromdouble.cpp" id="Snippet2":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CS/cfromdouble.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/VB/cfromdouble.vb" id="Snippet2":::

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-513"><paramref name="value" /> 大于 <see cref="F:System.Decimal.MaxValue" /> 或小于 <see cref="F:System.Decimal.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-513"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span>  
  
<span data-ttu-id="cf2bf-514">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cf2bf-514">-or-</span></span> 
 <span data-ttu-id="cf2bf-515"><paramref name="value" /> 为 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.PositiveInfinity" /> 或 <see cref="F:System.Double.NegativeInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-515"><paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />.</span></span></exception>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Explicit(System.Single)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Single) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(float value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : single -&gt; decimal" Usage="System.decimal.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-516">要转换的单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-516">The single-precision floating-point number to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-517">定义从单精度浮点数到 <see cref="T:System.Decimal" /> 的显式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-517">Defines an explicit conversion of a single-precision floating-point number to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-518">已转换的单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-518">The converted single-precision floating point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf2bf-519">下面的示例 <xref:System.Single> <xref:System.Decimal> 使用 <xref:System.Single> to 转换运算符将值转换为数字 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-519">The following example converts <xref:System.Single> values to <xref:System.Decimal> numbers by using the <xref:System.Single> to <xref:System.Decimal> conversion operator.</span></span> <span data-ttu-id="cf2bf-520">此转换需要 Visual Basic 中的 op_Explicit 运算符。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-520">This conversion requires the op_Explicit operator in Visual Basic.</span></span>

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CPP/cfromsingle.cpp" id="Snippet3":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CS/cfromsingle.cs" interactive="try-dotnet" id="Snippet3":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/VB/cfromsingle.vb" id="Snippet3":::

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-521"><paramref name="value" /> 大于 <see cref="F:System.Decimal.MaxValue" /> 或小于 <see cref="F:System.Decimal.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-521"><paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" /> or less than <see cref="F:System.Decimal.MinValue" />.</span></span>  
  
<span data-ttu-id="cf2bf-522">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cf2bf-522">-or-</span></span> 
 <span data-ttu-id="cf2bf-523"><paramref name="value" /> 为 <see cref="F:System.Single.NaN" />、<see cref="F:System.Single.PositiveInfinity" /> 或 <see cref="F:System.Single.NegativeInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-523"><paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />.</span></span></exception>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : decimal * decimal -&gt; bool" Usage="d1 &gt; d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="cf2bf-524">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-524">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="cf2bf-525">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-525">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="cf2bf-526">返回一个值，该值指示指定的 <see cref="T:System.Decimal" /> 是否大于另一个指定的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-526">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is greater than another specified <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-527">如果 <see langword="true" /> 大于 <paramref name="d1" />，则为 <paramref name="d2" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-527"><see langword="true" /> if <paramref name="d1" /> is greater than <paramref name="d2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-528"><xref:System.Decimal.op_GreaterThan%2A>方法为值定义大于运算符的运算 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-528">The <xref:System.Decimal.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="cf2bf-529">它可以实现如下所示的代码：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-529">It enables code such as the following:</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/greaterthan1.cs" interactive="try-dotnet" id="Snippet8":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthan1.vb" id="Snippet8":::

 <span data-ttu-id="cf2bf-530">不支持自定义运算符的语言可以改为调用 <xref:System.Decimal.Compare%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-530">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="cf2bf-531">它们还可以 <xref:System.Decimal.op_GreaterThan%2A> 直接调用方法，如下例所示。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-531">They may also be able to call the <xref:System.Decimal.op_GreaterThan%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthan2.vb#9)]  
  
 <span data-ttu-id="cf2bf-532">此运算符的等效方法是 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cf2bf-532">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : decimal * decimal -&gt; bool" Usage="d1 &gt;= d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="cf2bf-533">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-533">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="cf2bf-534">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-534">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="cf2bf-535">返回一个值，该值指示指定的 <see cref="T:System.Decimal" /> 是否大于等于另一个指定的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-535">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is greater than or equal to another specified <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-536">如果 <paramref name="d1" /> 大于等于 <paramref name="d2" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-536"><see langword="true" /> if <paramref name="d1" /> is greater than or equal to <paramref name="d2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-537"><xref:System.Decimal.op_GreaterThanOrEqual%2A>方法为值定义大于或等于运算符的运算 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-537">The <xref:System.Decimal.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="cf2bf-538">它可以实现如下所示的代码：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-538">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/greaterthanorequal1.cs#10)]
 [!code-vb[System.Decimal.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthanorequal1.vb#10)]  
  
 <span data-ttu-id="cf2bf-539">不支持自定义运算符的语言可以改为调用 <xref:System.Decimal.Compare%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-539">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="cf2bf-540">它们还可以 <xref:System.Decimal.op_GreaterThanOrEqual%2A> 直接调用方法，如下例所示。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-540">They may also be able to call the <xref:System.Decimal.op_GreaterThanOrEqual%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthanorequal2.vb#11)]  
  
 <span data-ttu-id="cf2bf-541">此运算符的等效方法是 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cf2bf-541">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cf2bf-542">定义从类型值到 <see cref="T:System.Decimal" /> 值的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-542">Defines an implicit conversion of the value of a type to a <see cref="T:System.Decimal" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-543">方法的重载 <xref:System.Decimal.op_Implicit%2A> 定义类型，编译器可以 <xref:System.Decimal> 在 c # ) 中自动转换值而不使用显式强制转换 (运算符，也可以在 Visual Basic) 中 (调用转换函数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-543">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="cf2bf-544">它们是不涉及数据丢失的扩大转换，不会引发 <xref:System.OverflowException> 异常。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-544">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Byte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : byte -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-545">要转换的 8 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-545">The 8-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-546">定义从 8 位无符号整数到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-546">Defines an implicit conversion of an 8-bit unsigned integer to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-547">已转换的 8 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-547">The converted 8-bit unsigned integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-548">方法的重载 <xref:System.Decimal.op_Implicit%2A> 定义类型，编译器可以 <xref:System.Decimal> 在 c # ) 中自动转换值而不使用显式强制转换 (运算符，也可以在 Visual Basic) 中 (调用转换函数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-548">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="cf2bf-549">它们是不涉及数据丢失的扩大转换，不会引发 <xref:System.OverflowException> 异常。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-549">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="cf2bf-550">下面的示例将 <xref:System.Byte> 值转换为 <xref:System.Decimal> 数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-550">The following example converts <xref:System.Byte> values to <xref:System.Decimal> numbers.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.UInts#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfrombyte.cpp#4)]
 [!code-csharp[System.Decimal.ConvFrom.UInts#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfrombyte.cs#4)]
 [!code-vb[System.Decimal.ConvFrom.UInts#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfrombyte.vb#4)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Char)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Char) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(char value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : char -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-551">要转换的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-551">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-552">定义从 Unicode 字符到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-552">Defines an implicit conversion of a Unicode character to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-553">转换后的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-553">The converted Unicode character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-554">方法的重载 <xref:System.Decimal.op_Implicit%2A> 定义类型，编译器可以 <xref:System.Decimal> 在 c # ) 中自动转换值而不使用显式强制转换 (运算符，也可以在 Visual Basic) 中 (调用转换函数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-554">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="cf2bf-555">它们是不涉及数据丢失的扩大转换，不会引发 <xref:System.OverflowException> 异常。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-555">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="cf2bf-556">下面的示例将 <xref:System.Char>)  (Unicode 字符的值转换为 <xref:System.Decimal> 数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-556">The following example converts <xref:System.Char> values (Unicode characters) to <xref:System.Decimal> numbers.</span></span> <span data-ttu-id="cf2bf-557">此转换需要 Visual Basic 中的 op_Implicit 运算符，但不需要在 c # 和 c + + 中。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-557">This conversion requires the op_Implicit operator in Visual Basic, but not in C# and C++.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.Others#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CPP/cfromchar.cpp#1)]
 [!code-csharp[System.Decimal.ConvFrom.Others#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/CS/cfromchar.cs#1)]
 [!code-vb[System.Decimal.ConvFrom.Others#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.Others/VB/cfromchar.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Short) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(short value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int16 -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-558">要转换的 16 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-558">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-559">定义从 16 位有符号整数到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-559">Defines an implicit conversion of a 16-bit signed integer to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-560">转换后的 16 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-560">The converted 16-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-561">方法的重载 <xref:System.Decimal.op_Implicit%2A> 定义类型，编译器可以 <xref:System.Decimal> 在 c # ) 中自动转换值而不使用显式强制转换 (运算符，也可以在 Visual Basic) 中 (调用转换函数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-561">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="cf2bf-562">它们是不涉及数据丢失的扩大转换，不会引发 <xref:System.OverflowException> 异常。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-562">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="cf2bf-563">下面的示例将 <xref:System.Int16> 值转换为 <xref:System.Decimal> 数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-563">The following example converts <xref:System.Int16> values to <xref:System.Decimal> numbers.</span></span> <span data-ttu-id="cf2bf-564">此转换需要 Visual Basic 中的 op_Implicit 运算符，但不需要在 c # 和 c + + 中。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-564">This conversion requires the op_Implicit operator in Visual Basic, but not in C# and C++.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromint16.cpp#3)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromint16.cs#3)]
 [!code-vb[System.Decimal.ConvFrom.SInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromint16.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(int value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-565">要转换的 32 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-565">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-566">定义从 32 位有符号整数到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-566">Defines an implicit conversion of a 32-bit signed integer to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-567">转换后的 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-567">The converted 32-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-568">方法的重载 <xref:System.Decimal.op_Implicit%2A> 定义类型，编译器可以 <xref:System.Decimal> 在 c # ) 中自动转换值而不使用显式强制转换 (运算符，也可以在 Visual Basic) 中 (调用转换函数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-568">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="cf2bf-569">它们是不涉及数据丢失的扩大转换，不会引发 <xref:System.OverflowException> 异常。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-569">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="cf2bf-570">下面的示例将 <xref:System.Int32> 值转换为 <xref:System.Decimal> 数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-570">The following example converts <xref:System.Int32> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromint32.cpp#2)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromint32.cs#2)]
 [!code-vb[System.Decimal.ConvFrom.SInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromint32.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Long) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(long value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int64 -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-571">要转换的 64 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-571">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-572">定义从 64 位有符号整数到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-572">Defines an implicit conversion of a 64-bit signed integer to a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-573">转换后的 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-573">The converted 64-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-574">方法的重载 <xref:System.Decimal.op_Implicit%2A> 定义类型，编译器可以 <xref:System.Decimal> 在 c # ) 中自动转换值而不使用显式强制转换 (运算符，也可以在 Visual Basic) 中 (调用转换函数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-574">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="cf2bf-575">它们是不涉及数据丢失的扩大转换，不会引发 <xref:System.OverflowException> 异常。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-575">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="cf2bf-576">下面的示例将 <xref:System.Int64> 值转换为 <xref:System.Decimal> 数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-576">The following example converts <xref:System.Int64> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromint64.cpp#1)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromint64.cs#1)]
 [!code-vb[System.Decimal.ConvFrom.SInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromint64.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As SByte) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : sbyte -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-577">要转换的 8 位带符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-577">The 8-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-578">定义从 8 位有符号整数到 <see cref="T:System.Decimal" /> 值的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-578">Defines an implicit conversion of an 8-bit signed integer to a <see cref="T:System.Decimal" />.</span></span>  
  
<span data-ttu-id="cf2bf-579">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-579">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-580">转换后的 8 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-580">The converted 8-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-581">方法的重载 <xref:System.Decimal.op_Implicit%2A> 定义类型，编译器可以 <xref:System.Decimal> 在 c # ) 中自动转换值而不使用显式强制转换 (运算符，也可以在 Visual Basic) 中 (调用转换函数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-581">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="cf2bf-582">它们是不涉及数据丢失的扩大转换，不会引发 <xref:System.OverflowException> 异常。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-582">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="cf2bf-583">下面的示例将 <xref:System.SByte> 值转换为 <xref:System.Decimal> 数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-583">The following example converts <xref:System.SByte> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.SInts#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CPP/cfromsbyte.cpp#4)]
 [!code-csharp[System.Decimal.ConvFrom.SInts#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/CS/cfromsbyte.cs#4)]
 [!code-vb[System.Decimal.ConvFrom.SInts#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.SInts/VB/cfromsbyte.vb#4)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UShort) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint16 -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-584">要转换的 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-584">The 16-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-585">定义从 16 位无符号整数到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-585">Defines an implicit conversion of a 16-bit unsigned integer to a <see cref="T:System.Decimal" />.</span></span>  
  
<span data-ttu-id="cf2bf-586">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-586">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-587">已转换的 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-587">The converted 16-bit unsigned integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-588">方法的重载 <xref:System.Decimal.op_Implicit%2A> 定义类型，编译器可以 <xref:System.Decimal> 在 c # ) 中自动转换值而不使用显式强制转换 (运算符，也可以在 Visual Basic) 中 (调用转换函数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-588">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="cf2bf-589">它们是不涉及数据丢失的扩大转换，不会引发 <xref:System.OverflowException> 异常。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-589">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="cf2bf-590">下面的示例将 <xref:System.UInt16> 值转换为 <xref:System.Decimal> 数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-590">The following example converts <xref:System.UInt16> values to <xref:System.Decimal> numbers.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.UInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfromuint16.cpp#3)]
 [!code-csharp[System.Decimal.ConvFrom.UInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfromuint16.cs#3)]
 [!code-vb[System.Decimal.ConvFrom.UInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfromuint16.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UInteger) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint32 -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-591">要转换的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-591">The 32-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-592">定义从 32 位无符号整数到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-592">Defines an implicit conversion of a 32-bit unsigned integer to a <see cref="T:System.Decimal" />.</span></span>  
  
<span data-ttu-id="cf2bf-593">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-593">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-594">已转换的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-594">The converted 32-bit unsigned integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-595">方法的重载 <xref:System.Decimal.op_Implicit%2A> 定义类型，编译器可以 <xref:System.Decimal> 在 c # ) 中自动转换值而不使用显式强制转换 (运算符，也可以在 Visual Basic) 中 (调用转换函数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-595">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="cf2bf-596">它们是不涉及数据丢失的扩大转换，不会引发 <xref:System.OverflowException> 异常。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-596">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="cf2bf-597">下面的示例将 <xref:System.UInt32> 值转换为 <xref:System.Decimal> 数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-597">The following example converts <xref:System.UInt32> values to <xref:System.Decimal> numbers.</span></span>

 [!code-cpp[System.Decimal.ConvFrom.UInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfromuint32.cpp#2)] 
 [!code-csharp[System.Decimal.ConvFrom.UInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfromuint32.cs#2)] 
 [!code-vb[System.Decimal.ConvFrom.UInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfromuint32.vb#2)]   

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator decimal (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Implicit(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As ULong) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Decimal(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint64 -&gt; decimal" Usage="System.decimal.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-598">要转换的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-598">The 64-bit unsigned integer to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-599">定义从 64 位无符号整数到 <see cref="T:System.Decimal" /> 的隐式转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-599">Defines an implicit conversion of a 64-bit unsigned integer to a <see cref="T:System.Decimal" />.</span></span>  
  
<span data-ttu-id="cf2bf-600">此 API 不兼容 CLS。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-600">This API is not CLS-compliant.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-601">已转换的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-601">The converted 64-bit unsigned integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-602">方法的重载 <xref:System.Decimal.op_Implicit%2A> 定义类型，编译器可以 <xref:System.Decimal> 在 c # ) 中自动转换值而不使用显式强制转换 (运算符，也可以在 Visual Basic) 中 (调用转换函数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-602">The overloads of the <xref:System.Decimal.op_Implicit%2A> method define the types from which the compiler can automatically convert a <xref:System.Decimal> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="cf2bf-603">它们是不涉及数据丢失的扩大转换，不会引发 <xref:System.OverflowException> 异常。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-603">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException> exception.</span></span>  


## Examples
 <span data-ttu-id="cf2bf-604">下面的示例 <xref:System.UInt64> <xref:System.Decimal> 使用 <xref:System.UInt64> to 转换运算符将值转换为数字 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-604">The following example converts <xref:System.UInt64> values to <xref:System.Decimal> numbers by using the <xref:System.UInt64> to <xref:System.Decimal> conversion operator.</span></span> 

 [!code-cpp[System.Decimal.ConvFrom.UInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CPP/cfromuint64.cpp#1)] 
 [!code-csharp[System.Decimal.ConvFrom.UInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/CS/cfromuint64.cs#1)] 
 [!code-vb[System.Decimal.ConvFrom.UInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.ConvFrom.UInts/VB/cfromuint64.vb#1)]   

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="op_Increment">
      <MemberSignature Language="C#" Value="public static decimal operator ++ (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Increment(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Increment(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Increment (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator ++(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member op_Increment : decimal -&gt; decimal" Usage="System.decimal.op_Increment d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf2bf-605">要递增的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-605">The value to increment.</span></span></param>
        <summary><span data-ttu-id="cf2bf-606">将 <see cref="T:System.Decimal" /> 操作数增加 1。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-606">Increments the <see cref="T:System.Decimal" /> operand by 1.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-607"><paramref name="d" /> 增加 1 后的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-607">The value of <paramref name="d" /> incremented by 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-608"><xref:System.Decimal.op_Increment%2A>方法为值定义增量运算符的运算 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-608">The <xref:System.Decimal.op_Increment%2A> method defines the operation of the increment operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="cf2bf-609">它可以实现如下所示的代码：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-609">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/increment1.cs#12)]  
  
 <span data-ttu-id="cf2bf-610">某些语言 (如缺少增量运算符的 Visual Basic) 可以 <xref:System.Decimal.op_Increment%2A> 直接调用方法，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-610">Some languages (such as Visual Basic) that lack an increment operator can call the <xref:System.Decimal.op_Increment%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/increment1.vb#13)]  
  
 <span data-ttu-id="cf2bf-611">如果你的语言不支持自定义运算符，请 <xref:System.Decimal.Add%2A> 改为调用方法，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-611">If your language does not support custom operators, call the <xref:System.Decimal.Add%2A> method instead, as the following example shows.</span></span>  
  
 [!code-csharp[System.Decimal.Operators#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/increment2.cs#14)]
 [!code-vb[System.Decimal.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/increment2.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-612">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-612">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : decimal * decimal -&gt; bool" Usage="System.decimal.op_Inequality (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="cf2bf-613">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-613">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="cf2bf-614">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-614">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="cf2bf-615">返回一个值，该值指示两个 <see cref="T:System.Decimal" /> 对象是否具有不同的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-615">Returns a value that indicates whether two <see cref="T:System.Decimal" /> objects have different values.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-616">如果 <paramref name="d1" /> 和 <paramref name="d2" /> 不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-616"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-617"><xref:System.Decimal.op_Inequality%2A>方法为值定义不相等运算符的运算 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-617">The <xref:System.Decimal.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="cf2bf-618">它可以实现如下所示的代码：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-618">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/inequality1.cs#2)]
 [!code-vb[System.Decimal.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/inequality1.vb#2)]  
  
 <span data-ttu-id="cf2bf-619">如果正在使用的语言不支持自定义运算符，可以使用以下方法之一来测试是否不相等：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-619">If the language you're using doesn't support custom operators, you can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="cf2bf-620">调用 <xref:System.Decimal.Compare%2A> 方法，它指示两个值之间的关系 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-620">Calling the <xref:System.Decimal.Compare%2A> method, which indicates the relationship between two <xref:System.Decimal> values.</span></span>  
  
-   <span data-ttu-id="cf2bf-621">调用 <xref:System.Decimal.Equals%2A> 方法并反转其值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-621">Calling the <xref:System.Decimal.Equals%2A> method and reversing its value.</span></span>  
  
 <span data-ttu-id="cf2bf-622">此运算符的等效方法是 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cf2bf-622">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Equals(System.Object)" />
        <altmember cref="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : decimal * decimal -&gt; bool" Usage="d1 &lt; d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="cf2bf-623">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-623">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="cf2bf-624">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-624">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="cf2bf-625">返回一个值，该值指示指定的 <see cref="T:System.Decimal" /> 是否小于另一个指定的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-625">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is less than another specified <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-626">如果 <paramref name="d1" /> 小于 <paramref name="d2" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-626"><see langword="true" /> if <paramref name="d1" /> is less than <paramref name="d2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-627"><xref:System.Decimal.op_LessThan%2A>方法为值定义小于运算符的运算 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-627">The <xref:System.Decimal.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="cf2bf-628">它可以实现如下所示的代码：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-628">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/lessthan1.cs#15)]
 [!code-vb[System.Decimal.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthan1.vb#15)]  
  
 <span data-ttu-id="cf2bf-629">不支持自定义运算符的语言可以改为调用 <xref:System.Decimal.Compare%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-629">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="cf2bf-630">它们还可以 <xref:System.Decimal.op_LessThan%2A> 直接调用方法，如下例所示。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-630">They may also be able to call the <xref:System.Decimal.op_LessThan%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthan2.vb#16)]  
  
 <span data-ttu-id="cf2bf-631">此运算符的等效方法是 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cf2bf-631">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (d1 As Decimal, d2 As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : decimal * decimal -&gt; bool" Usage="d1 &lt;= d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="cf2bf-632">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-632">The first value to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="cf2bf-633">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-633">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="cf2bf-634">返回一个值，该值指示指定的 <see cref="T:System.Decimal" /> 是小于还是等于另一个指定的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-634">Returns a value indicating whether a specified <see cref="T:System.Decimal" /> is less than or equal to another specified <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-635">如果 <paramref name="d1" /> 小于等于 <paramref name="d2" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-635"><see langword="true" /> if <paramref name="d1" /> is less than or equal to <paramref name="d2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-636"><xref:System.Decimal.op_LessThanOrEqual%2A>方法为值定义了小于或等于运算符的运算 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-636">The <xref:System.Decimal.op_LessThanOrEqual%2A> method defines the operation of the less than or equal operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="cf2bf-637">它可以实现如下所示的代码：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-637">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/lessthanorequal1.cs#17)]
 [!code-vb[System.Decimal.Operators#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthanorequal1.vb#17)]  
  
 <span data-ttu-id="cf2bf-638">不支持自定义运算符的语言可以改为调用 <xref:System.Decimal.Compare%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-638">Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead.</span></span> <span data-ttu-id="cf2bf-639">它们还可以 <xref:System.Decimal.op_LessThanOrEqual%2A> 直接调用方法，如下例所示。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-639">They may also be able to call the <xref:System.Decimal.op_LessThanOrEqual%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Decimal.Operators#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthanorequal2.vb#18)]  
  
 <span data-ttu-id="cf2bf-640">此运算符的等效方法是 <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cf2bf-640">The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Compare(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Modulus">
      <MemberSignature Language="C#" Value="public static decimal operator % (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Modulus(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Mod (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator %(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( % ) : decimal * decimal -&gt; decimal" Usage="d1 % d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="cf2bf-641">被除数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-641">The dividend.</span></span></param>
        <param name="d2"><span data-ttu-id="cf2bf-642">除数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-642">The divisor.</span></span></param>
        <summary><span data-ttu-id="cf2bf-643">返回两个指定 <see cref="T:System.Decimal" /> 值相除所得的余数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-643">Returns the remainder resulting from dividing two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-644">该余数是由 <paramref name="d1" /> 除以 <paramref name="d2" /> 所得。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-644">The remainder resulting from dividing <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-645"><xref:System.Decimal.op_Modulus%2A>运算符定义余数运算，该操作返回两个指定值相除所得的余数 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-645">The <xref:System.Decimal.op_Modulus%2A> operator defines the remainder operation that returns the remainder resulting from dividing two specified <xref:System.Decimal> values.</span></span> <span data-ttu-id="cf2bf-646">它可以实现如下所示的代码：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-646">It enables code such as the following:</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/modulus1.cs" interactive="try-dotnet" id="Snippet19":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/modulus1.vb" id="Snippet19":::
  
 <span data-ttu-id="cf2bf-647">余数操作返回的值的符号取决于被除数的符号。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-647">The sign of the value returned by the remainder operation depends on the sign of dividend.</span></span> <span data-ttu-id="cf2bf-648">如果被除数为正，则余数操作返回正结果;如果为负，则余数操作返回一个负面结果。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-648">If dividend is positive, the remainder operation returns a positive result; if it is negative, the remainder operation returns a negative result.</span></span>  
  
 <span data-ttu-id="cf2bf-649">此运算符的等效方法为 <xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-649">The equivalent method for this operator is <xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cf2bf-650">如果正在使用的语言不支持自定义运算符，请改为调用 <xref:System.Decimal.Remainder%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-650">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Remainder%2A> method instead.</span></span>  
         ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="cf2bf-651"><paramref name="d2" /> 为 <see langword="zero" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-651"><paramref name="d2" /> is <see langword="zero" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-652">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-652">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Remainder(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static decimal operator * (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Multiply(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator *(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( * ) : decimal * decimal -&gt; decimal" Usage="d1 * d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="cf2bf-653">要相乘的第一个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-653">The first value to multiply.</span></span></param>
        <param name="d2"><span data-ttu-id="cf2bf-654">要相乘的第二个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-654">The second value to multiply.</span></span></param>
        <summary><span data-ttu-id="cf2bf-655">两个指定的 <see cref="T:System.Decimal" /> 值相乘。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-655">Multiplies two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-656"><paramref name="d1" /> 与 <paramref name="d2" /> 相乘的结果。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-656">The result of multiplying <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-657"><xref:System.Decimal.op_Multiply%2A>方法定义了值的乘法运算符的运算 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-657">The <xref:System.Decimal.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="cf2bf-658">它可以实现如下所示的代码：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-658">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/multiply1.cs#20)]
 [!code-vb[System.Decimal.Operators#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/multiply1.vb#20)]  
  
 <span data-ttu-id="cf2bf-659">如果正在使用的语言不支持自定义运算符，请改为调用 <xref:System.Decimal.Multiply%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-659">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Multiply%2A> method instead.</span></span>  
  
 <span data-ttu-id="cf2bf-660">此运算符的等效方法是 <xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cf2bf-660">The equivalent method for this operator is <xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-661">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-661">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static decimal operator - (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Subtraction(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator -(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member ( - ) : decimal * decimal -&gt; decimal" Usage="d1 - d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="cf2bf-662">被减数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-662">The minuend.</span></span></param>
        <param name="d2"><span data-ttu-id="cf2bf-663">减数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-663">The subtrahend.</span></span></param>
        <summary><span data-ttu-id="cf2bf-664">将两个指定的 <see cref="T:System.Decimal" /> 值相减。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-664">Subtracts two specified <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-665"><paramref name="d2" /> 减 <paramref name="d1" /> 所得的结果。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-665">The result of subtracting <paramref name="d2" /> from <paramref name="d1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-666"><xref:System.Decimal.op_Subtraction%2A>方法为值定义减法运算符的运算 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-666">The <xref:System.Decimal.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Decimal> values.</span></span> <span data-ttu-id="cf2bf-667">它可以实现如下所示的代码：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-667">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Decimal.Operators#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/subtraction1.cs#21)]
 [!code-vb[System.Decimal.Operators#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/subtraction1.vb#21)]  
  
 <span data-ttu-id="cf2bf-668">如果正在使用的语言不支持自定义运算符，请改为调用 <xref:System.Decimal.Subtract%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-668">If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Subtract%2A> method instead.</span></span>  
  
 <span data-ttu-id="cf2bf-669">此运算符的等效方法是 <xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cf2bf-669">The equivalent method for this operator is <xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-670">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-670">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static decimal operator - (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_UnaryNegation(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_UnaryNegation(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator -(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : decimal -&gt; decimal" Usage="- d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf2bf-671">要求反的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-671">The value to negate.</span></span></param>
        <summary><span data-ttu-id="cf2bf-672">对指定 <see cref="T:System.Decimal" /> 操作数的值求反。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-672">Negates the value of the specified <see cref="T:System.Decimal" /> operand.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-673"><paramref name="d" /> 乘以负一 (-1) 的结果。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-673">The result of <paramref name="d" /> multiplied by negative one (-1).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-674"><xref:System.Decimal.op_UnaryPlus%2A>方法定义一元求反运算符的运算 (或值的加法反运算符) <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-674">The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary negation operator (or the additive inverse operator) for <xref:System.Decimal> values.</span></span> <span data-ttu-id="cf2bf-675">此操作生成一个值，该值会在将其添加到原始数字时导致 0 (零) 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-675">The operation produces a value that results in 0 (zero) when it is added to the original number.</span></span> <span data-ttu-id="cf2bf-676">不支持自定义运算符的语言可以改为调用 <xref:System.Decimal.Negate%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-676">Languages that do not support custom operators can call the <xref:System.Decimal.Negate%2A> method instead.</span></span>  
  
 <span data-ttu-id="cf2bf-677">此运算符的等效方法是 <xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="cf2bf-677">The equivalent method for this operator is <xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Negate(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static decimal operator + (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_UnaryPlus(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.op_UnaryPlus(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal operator +(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ( ~+ ) : decimal -&gt; decimal" Usage="+ d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf2bf-678">要返回的操作数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-678">The operand to return.</span></span></param>
        <summary><span data-ttu-id="cf2bf-679">返回 <see cref="T:System.Decimal" /> 操作数的值（操作数符号不变）。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-679">Returns the value of the <see cref="T:System.Decimal" /> operand (the sign of the operand is unchanged).</span></span></summary>
        <returns><span data-ttu-id="cf2bf-680">操作数 <paramref name="d" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-680">The value of the operand, <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-681"><xref:System.Decimal.op_UnaryPlus%2A>方法为值定义一元正运算符的运算 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-681">The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary positive operator for <xref:System.Decimal> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cf2bf-682">将数字的字符串表示形式转换为它的等效 <see cref="T:System.Decimal" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-682">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span></span></summary>
        <altmember cref="Overload:System.Decimal.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; decimal" Usage="System.decimal.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="cf2bf-683">要转换的数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-683">The string representation of the number to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-684">将数字的字符串表示形式转换为它的等效 <see cref="T:System.Decimal" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-684">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-685"><paramref name="s" /> 中包含的数字的等效值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-685">The equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-686">参数 `s` 包含以下格式的编号：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-686">Parameter `s` contains a number of the form:</span></span>  
  
 <span data-ttu-id="cf2bf-687">ws表明[数字，] 位数 [. 分式] [ws]</span><span class="sxs-lookup"><span data-stu-id="cf2bf-687">[ws][sign][digits,]digits[.fractional-digits][ws]</span></span>  
  
 <span data-ttu-id="cf2bf-688">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-688">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="cf2bf-689">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-689">The following table describes each element.</span></span>  
  
|<span data-ttu-id="cf2bf-690">元素</span><span class="sxs-lookup"><span data-stu-id="cf2bf-690">Element</span></span>|<span data-ttu-id="cf2bf-691">描述</span><span class="sxs-lookup"><span data-stu-id="cf2bf-691">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="cf2bf-692">*ws*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-692">*ws*</span></span>|<span data-ttu-id="cf2bf-693">可选空白。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-693">Optional white space.</span></span>|  
|<span data-ttu-id="cf2bf-694">*sign*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-694">*sign*</span></span>|<span data-ttu-id="cf2bf-695">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-695">An optional sign.</span></span>|  
|<span data-ttu-id="cf2bf-696">*位数*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-696">*digits*</span></span>|<span data-ttu-id="cf2bf-697">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-697">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="cf2bf-698">*，*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-698">*,*</span></span>|<span data-ttu-id="cf2bf-699">区域性特定的千位分隔符。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-699">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="cf2bf-700">*.*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-700">*.*</span></span>|<span data-ttu-id="cf2bf-701">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-701">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="cf2bf-702">*小数位数*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-702">*fractional-digits*</span></span>|<span data-ttu-id="cf2bf-703">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-703">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="cf2bf-704">`s`使用样式对参数进行解释 <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-704">Parameter `s` is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="cf2bf-705">这意味着允许使用空格和千位分隔符，但不允许货币符号。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-705">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="cf2bf-706">若要显式定义可在中存在的元素 (如货币符号、千位分隔符和空格) `s` ，请使用 <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> 或 <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-706">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use either the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="cf2bf-707">参数 `s` 使用 <xref:System.Globalization.NumberFormatInfo> 针对当前系统区域性初始化的格式设置信息进行分析。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-707">Parameter `s` is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> initialized for the current system culture.</span></span> <span data-ttu-id="cf2bf-708">有关详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-708">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="cf2bf-709">若要使用其他某个区域性的格式设置信息分析字符串，请使用 <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 或 <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-709">To parse a string using the formatting information of some other culture, use the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> or <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="cf2bf-710">如有必要， `s` 将使用舍入到最接近的值舍入值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-710">If necessary, the value of `s` is rounded using rounding to nearest.</span></span>  
  
 <span data-ttu-id="cf2bf-711">的 <xref:System.Decimal> 精度为29位。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-711">A <xref:System.Decimal> has 29 digits of precision.</span></span> <span data-ttu-id="cf2bf-712">如果 `s` 表示的数字的位数超过29个，但包含小数部分并且在和范围内 <xref:System.Decimal.MaxValue> <xref:System.Decimal.MinValue> ，则将使用舍入到最接近的数字对数字进行舍入，而不是截断到29位数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-712">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="cf2bf-713">在分析操作期间，如果在参数中遇到分隔符 `s` ，并且适用的货币或小数和组分隔符相同，则分析操作将假定分隔符是小数点分隔符，而不是组分隔符。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-713">If during a parse operation a separator is encountered in the `s` parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="cf2bf-714">有关分隔符的详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> 、、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> 和 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-714">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-715">下面的代码示例使用 <xref:System.Decimal.Parse%28System.String%29> 方法来分析值的字符串表示形式 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-715">The following code example uses the <xref:System.Decimal.Parse%28System.String%29> method to parse string representations of <xref:System.Decimal> values.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs" interactive="try-dotnet-method" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cf2bf-716"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-716"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cf2bf-717"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-717"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-718"><paramref name="s" /> 表示一个小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-718"><paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="cf2bf-719">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="cf2bf-719">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; decimal" Usage="System.decimal.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="cf2bf-720">要转换的数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-720">The string representation of the number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="cf2bf-721"><see cref="T:System.Globalization.NumberStyles" /> 值的按位组合，指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-721">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="cf2bf-722">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-722">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span></span></param>
        <summary><span data-ttu-id="cf2bf-723">将指定样式的数字的字符串表示形式转换为它的等效 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-723">Converts the string representation of a number in a specified style to its <see cref="T:System.Decimal" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-724"><see cref="T:System.Decimal" /> 数，它与由 <paramref name="s" /> 所指定的 <paramref name="style" /> 中包含的数字等效。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-724">The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="style" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-725">`style`参数定义允许在参数中使用的样式元素 (如千位分隔符、空格和货币符号) ，以便 `s` 分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-725">The `style` parameter defines the style elements (such as thousands separators, white space, and currency symbols) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="cf2bf-726">它必须是枚举中的位标志的组合 <xref:System.Globalization.NumberStyles> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-726">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="cf2bf-727"><xref:System.Globalization.NumberStyles>不支持以下成员：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-727">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="cf2bf-728">根据的值 `style` ， `s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-728">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="cf2bf-729">ws[$]表明[数字，] 位数 [. 小数] [e [sign] 数字] [ws]</span><span class="sxs-lookup"><span data-stu-id="cf2bf-729">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="cf2bf-730">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-730">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="cf2bf-731">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-731">The following table describes each element.</span></span>  
  
|<span data-ttu-id="cf2bf-732">元素</span><span class="sxs-lookup"><span data-stu-id="cf2bf-732">Element</span></span>|<span data-ttu-id="cf2bf-733">描述</span><span class="sxs-lookup"><span data-stu-id="cf2bf-733">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="cf2bf-734">*ws*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-734">*ws*</span></span>|<span data-ttu-id="cf2bf-735">可选空白。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-735">Optional white space.</span></span> <span data-ttu-id="cf2bf-736">如果包含标志，则空格可以出现在的开头 `s` `style` <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> ，如果包含标志，则可以在的末尾出现空白 `s` `style` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-736">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="cf2bf-737">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-737">A culture-specific currency symbol.</span></span> <span data-ttu-id="cf2bf-738">其在字符串中的位置由 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> 当前区域性的和属性定义。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-738">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="cf2bf-739">`s`如果包含标志，则当前区域性的货币符号可以出现在中 `style` <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-739">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="cf2bf-740">*sign*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-740">*sign*</span></span>|<span data-ttu-id="cf2bf-741">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-741">An optional sign.</span></span> <span data-ttu-id="cf2bf-742">如果包含标志，则符号可以出现在的开头 `s` `style` <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> ，如果包含标志，则它可以出现在的末尾 `s` `style` <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-742">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="cf2bf-743">如果包含标志，则可以在中使用括号 `s` 来表示负值 `style` <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-743">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="cf2bf-744">*位数*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-744">*digits*</span></span>|<span data-ttu-id="cf2bf-745">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-745">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="cf2bf-746">*，*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-746">*,*</span></span>|<span data-ttu-id="cf2bf-747">区域性特定的千位分隔符。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-747">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="cf2bf-748">`s`如果包含标志，则当前区域性的千位分隔符可以出现在中 `style` <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-748">The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="cf2bf-749">*.*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-749">*.*</span></span>|<span data-ttu-id="cf2bf-750">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-750">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="cf2bf-751">`s`如果包含标志，则当前区域性的小数点符号可以出现在中 `style` <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-751">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="cf2bf-752">*小数位数*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-752">*fractional-digits*</span></span>|<span data-ttu-id="cf2bf-753">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-753">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="cf2bf-754">`s`仅当包含标志时，小数位才能出现在中 `style` <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-754">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="cf2bf-755">*e*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-755">*e*</span></span>|<span data-ttu-id="cf2bf-756">"E" 或 "E" 字符，指示值以指数表示法表示。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-756">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="cf2bf-757">`s`如果包含标志，则参数可以表示指数表示法中的数字 `style` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-757">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="cf2bf-758">`s`无论参数的值如何，分析操作都将忽略中任何终止的 NUL (U + 0000) 字符 `style` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-758">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="cf2bf-759">只包含数字的字符串 (与 <xref:System.Globalization.NumberStyles.None> 样式) 始终在类型范围内分析成功 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-759">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None> style) always parses successfully if it is in the range of the <xref:System.Decimal> type.</span></span> <span data-ttu-id="cf2bf-760">其余 <xref:System.Globalization.NumberStyles> 成员控件元素，这些元素可能但不要求出现在输入字符串中。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-760">The remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="cf2bf-761">下表指示各个成员如何 <xref:System.Globalization.NumberStyles> 影响可能出现在中的元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-761">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="cf2bf-762">NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="cf2bf-762">NumberStyles value</span></span>|<span data-ttu-id="cf2bf-763">除数字外允许在 s 中使用的元素</span><span class="sxs-lookup"><span data-stu-id="cf2bf-763">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="cf2bf-764">仅限 *数字* 元素。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-764">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="cf2bf-765">*.*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-765">The *.*</span></span> <span data-ttu-id="cf2bf-766">和 *小数位数* 元素。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-766">and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="cf2bf-767">`s`参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-767">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="cf2bf-768">此标志支持格式 *为 E\*\*位* 的值;若要成功地分析具有正数或负号和小数点符号等元素的字符串，需要其他标志。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-768">This flag supports values in the form *digits* E *digits*; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="cf2bf-769">开头的 *ws* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-769">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="cf2bf-770">末尾处的 *ws* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-770">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="cf2bf-771">开头的 *sign* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-771">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="cf2bf-772">末尾的 *sign* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-772">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="cf2bf-773">用括号括起数值的 *符号* 元素。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-773">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="cf2bf-774">*，* 元素。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-774">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="cf2bf-775">*$* 元素。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-775">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="cf2bf-776">全部。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-776">All.</span></span> <span data-ttu-id="cf2bf-777">`s`参数不能表示十六进制数或以指数表示法表示的数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-777">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="cf2bf-778">在开头或结尾处的 *ws* 元素， `s` 在 *sign* 开头 `s` 和符号之间进行签名 `.` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-778">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the `.` symbol.</span></span> <span data-ttu-id="cf2bf-779">`s`参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-779">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="cf2bf-780">`ws`、 `sign` `,` 和 `.` 元素。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-780">The `ws`, `sign`, `,` and `.` elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="cf2bf-781">除之外的所有样式都 `s` 不能表示十六进制数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-781">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="cf2bf-782">`s`使用 <xref:System.Globalization.NumberFormatInfo> 为当前系统区域性初始化的对象中的格式设置信息分析参数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-782">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="cf2bf-783">有关详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-783">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="cf2bf-784">的 <xref:System.Decimal> 精度为29位。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-784">A <xref:System.Decimal> has 29 digits of precision.</span></span> <span data-ttu-id="cf2bf-785">如果 `s` 表示的数字的位数超过29个，但包含小数部分并且在和范围内 <xref:System.Decimal.MaxValue> <xref:System.Decimal.MinValue> ，则将使用舍入到最接近的数字对数字进行舍入，而不是截断到29位数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-785">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="cf2bf-786">如果在 `s` 分析操作期间在参数中遇到分隔符，则 `styles` 包括 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 和 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 值，适用的货币或小数和组分隔符相同，分析操作将假定分隔符是小数点分隔符，而不是组分隔符。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-786">If a separator is encountered in the `s` parameter during a parse operation, `styles` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> values, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="cf2bf-787">有关分隔符的详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> 、、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> 和 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-787">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-788">下面的代码示例使用 <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> 方法来分析使用 en-us 区域性的值的字符串表示形式 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-788">The following code example uses the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method to parse the string representations of <xref:System.Decimal> values using the en-US culture.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs" interactive="try-dotnet-method" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb" id="Snippet2":::

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cf2bf-789"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-789"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf2bf-790"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-790"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="cf2bf-791">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cf2bf-791">-or-</span></span> 
 <span data-ttu-id="cf2bf-792"><paramref name="style" /> 是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-792"><paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cf2bf-793"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-793"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-794"><paramref name="s" /> 表示一个小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" /> 的数字</span><span class="sxs-lookup"><span data-stu-id="cf2bf-794"><paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" /></span></span></exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="cf2bf-795">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="cf2bf-795">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, IFormatProvider provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; decimal" Usage="System.decimal.Parse (s, provider)" />
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, IFormatProvider? provider);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="cf2bf-796">要转换的数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-796">The string representation of the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="cf2bf-797">一个 <see cref="T:System.IFormatProvider" />，它提供有关 <paramref name="s" /> 的区域性特定分析信息。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-797">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific parsing information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="cf2bf-798">使用指定的区域性特定格式信息将数字的字符串表示形式转换为其 <see cref="T:System.Decimal" /> 等效项。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-798">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-799"><see cref="T:System.Decimal" /> 数，它与由 <paramref name="s" /> 所指定的 <paramref name="provider" /> 中包含的数字等效。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-799">The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-800">此方法的重载 <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> 通常用于将可以多种方式设置格式的文本转换为 <xref:System.Decimal> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-800">This overload of the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> method is commonly used to convert text that can be formatted in a variety of ways to a <xref:System.Decimal> value.</span></span> <span data-ttu-id="cf2bf-801">例如，它可用于将用户输入的文本转换为一个数字值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-801">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="cf2bf-802">`s`参数包含以下格式的编号：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-802">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="cf2bf-803">ws表明[数字，] 位数 [. 分式] [ws]</span><span class="sxs-lookup"><span data-stu-id="cf2bf-803">[ws][sign][digits,]digits[.fractional-digits][ws]</span></span>  
  
 <span data-ttu-id="cf2bf-804">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-804">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="cf2bf-805">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-805">The following table describes each element.</span></span>  
  
|<span data-ttu-id="cf2bf-806">元素</span><span class="sxs-lookup"><span data-stu-id="cf2bf-806">Element</span></span>|<span data-ttu-id="cf2bf-807">描述</span><span class="sxs-lookup"><span data-stu-id="cf2bf-807">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="cf2bf-808">*ws*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-808">*ws*</span></span>|<span data-ttu-id="cf2bf-809">可选空白。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-809">Optional white space.</span></span>|  
|<span data-ttu-id="cf2bf-810">*sign*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-810">*sign*</span></span>|<span data-ttu-id="cf2bf-811">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-811">An optional sign.</span></span>|  
|<span data-ttu-id="cf2bf-812">*位数*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-812">*digits*</span></span>|<span data-ttu-id="cf2bf-813">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-813">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="cf2bf-814">*，*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-814">*,*</span></span>|<span data-ttu-id="cf2bf-815">区域性特定的千位分隔符。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-815">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="cf2bf-816">*.*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-816">*.*</span></span>|<span data-ttu-id="cf2bf-817">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-817">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="cf2bf-818">*小数位数*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-818">*fractional-digits*</span></span>|<span data-ttu-id="cf2bf-819">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-819">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="cf2bf-820">`s`使用样式对参数进行解释 <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-820">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="cf2bf-821">这意味着允许使用空格和千位分隔符，但不允许货币符号。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-821">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="cf2bf-822">若要显式定义可在中存在的元素 (如货币符号、千位分隔符和空格) `s` ，请使用 <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-822">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="cf2bf-823">`provider`参数是一个 <xref:System.IFormatProvider> 实现，如 <xref:System.Globalization.NumberFormatInfo> 或 <xref:System.Globalization.CultureInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-823">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="cf2bf-824">`provider`参数提供用于分析的特定于区域性的信息。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-824">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="cf2bf-825">如果 `provider` 为 `null`，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-825">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="cf2bf-826"><xref:System.Decimal>对象的精度为29位。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-826">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="cf2bf-827">如果 `s` 表示的数字的位数超过29个，但包含小数部分并且在和范围内 <xref:System.Decimal.MaxValue> <xref:System.Decimal.MinValue> ，则将使用舍入到最接近的数字对数字进行舍入，而不是截断到29位数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-827">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="cf2bf-828">如果在分析操作过程中在参数中遇到分隔符 `s` ，并且适用的货币或小数分隔符和组分隔符相同，则分析操作将假定分隔符是小数点分隔符，而不是组分隔符。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-828">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="cf2bf-829">有关分隔符的详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> 、、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> 和 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-829">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-830">下面的示例是 Web 窗体的按钮单击事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-830">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="cf2bf-831">它使用属性返回的数组 <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> 来确定用户的区域设置。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-831">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="cf2bf-832">然后，它将实例化 <xref:System.Globalization.CultureInfo> 对应于该区域设置的对象。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-832">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="cf2bf-833">然后，将 <xref:System.Globalization.NumberFormatInfo> 属于该对象的对象 <xref:System.Globalization.CultureInfo> 传递给 <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> 方法，以将用户的输入转换为 <xref:System.Decimal> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-833">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to a <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[ParseMethod#3](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#3)]
 [!code-vb[ParseMethod#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cf2bf-834"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-834"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="cf2bf-835"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-835"><paramref name="s" /> is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-836"><paramref name="s" /> 表示一个小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-836"><paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="cf2bf-837">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="cf2bf-837">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Number, IFormatProvider? provider = default);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Number, Optional provider As IFormatProvider = Nothing) As Decimal" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; decimal" Usage="System.decimal.Parse (s, style, provider)" />
      <MemberSignature Language="C#" Value="public static decimal Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Number, IFormatProvider provider = default);" FrameworkAlternate="netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="cf2bf-838">一个范围，包含表示要转换的数字的字符。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-838">The span containing the characters representing the number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="cf2bf-839"><see cref="T:System.Globalization.NumberStyles" /> 值的按位组合，指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-839">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="cf2bf-840">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-840">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span></span></param>
        <param name="provider"><span data-ttu-id="cf2bf-841">一个 <see cref="T:System.IFormatProvider" /> 对象，用于提供有关 <paramref name="s" /> 格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-841">An <see cref="T:System.IFormatProvider" /> object that supplies culture-specific information about the format of <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="cf2bf-842">使用指定样式和区域性特定格式将数字的范围表示形式转换为其 <see cref="T:System.Decimal" /> 等效项。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-842">Converts the span representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified style and culture-specific format.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-843"><see cref="T:System.Decimal" /> 数，它与 <paramref name="s" /> 和 <paramref name="style" /> 所指定的 <paramref name="provider" /> 中包含的数字等效。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-843">The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="style" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; decimal" Usage="System.decimal.Parse (s, style, provider)" />
      <MemberSignature Language="C#" Value="public static decimal Parse (string s, System.Globalization.NumberStyles style, IFormatProvider? provider);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="cf2bf-844">要转换的数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-844">The string representation of the number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="cf2bf-845"><see cref="T:System.Globalization.NumberStyles" /> 值的按位组合，指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-845">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="cf2bf-846">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-846">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span></span></param>
        <param name="provider"><span data-ttu-id="cf2bf-847">一个 <see cref="T:System.IFormatProvider" /> 对象，用于提供有关 <paramref name="s" /> 格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-847">An <see cref="T:System.IFormatProvider" /> object that supplies culture-specific information about the format of <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="cf2bf-848">使用指定样式和区域性特定格式将数字的字符串表示形式转换为其 <see cref="T:System.Decimal" /> 等效项。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-848">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified style and culture-specific format.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-849"><see cref="T:System.Decimal" /> 数，它与 <paramref name="s" /> 和 <paramref name="style" /> 所指定的 <paramref name="provider" /> 中包含的数字等效。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-849">The <see cref="T:System.Decimal" /> number equivalent to the number contained in <paramref name="s" /> as specified by <paramref name="style" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-850">`style`参数定义允许的参数的格式，以便 `s` 分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-850">The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="cf2bf-851">它必须是枚举中的位标志的组合 <xref:System.Globalization.NumberStyles> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-851">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="cf2bf-852"><xref:System.Globalization.NumberStyles>不支持以下成员：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-852">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="cf2bf-853">根据的值 `style` ， `s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-853">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="cf2bf-854">ws[$]表明[数字，] 位数 [. 小数] [e [sign] 数字] [ws]</span><span class="sxs-lookup"><span data-stu-id="cf2bf-854">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="cf2bf-855">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-855">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="cf2bf-856">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-856">The following table describes each element.</span></span>  
  
|<span data-ttu-id="cf2bf-857">元素</span><span class="sxs-lookup"><span data-stu-id="cf2bf-857">Element</span></span>|<span data-ttu-id="cf2bf-858">描述</span><span class="sxs-lookup"><span data-stu-id="cf2bf-858">Description</span></span>|  
|-------------|-----------------|  
|*$*|<span data-ttu-id="cf2bf-859">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-859">A culture-specific currency symbol.</span></span> <span data-ttu-id="cf2bf-860">其在字符串中的位置由 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> <xref:System.Globalization.NumberFormatInfo> 参数方法返回的对象的和属性定义 <xref:System.IFormatProvider.GetFormat%2A> `provider` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-860">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="cf2bf-861">`s`如果包含标志，则货币符号可以出现在中 `style` <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-861">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="cf2bf-862">*ws*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-862">*ws*</span></span>|<span data-ttu-id="cf2bf-863">可选空白。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-863">Optional white space.</span></span> <span data-ttu-id="cf2bf-864">如果包含标志，则空格可以出现在的开头 `s` `style` <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> ，如果包含标志，则可以在的末尾出现空白 `s` `style` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-864">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="cf2bf-865">*sign*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-865">*sign*</span></span>|<span data-ttu-id="cf2bf-866">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-866">An optional sign.</span></span> <span data-ttu-id="cf2bf-867">如果包含标志，则符号可以出现在的开头 `s` `style` <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> ，如果包含标志，则它可以出现在的末尾 `s` `style` <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-867">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="cf2bf-868">如果包含标志，则可以在中使用括号 `s` 来表示负值 `style` <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-868">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="cf2bf-869">*位数*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-869">*digits*</span></span>|<span data-ttu-id="cf2bf-870">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-870">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="cf2bf-871">*，*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-871">*,*</span></span>|<span data-ttu-id="cf2bf-872">区域性特定的千位分隔符。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-872">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="cf2bf-873">如果包含标志，则定义的区域性的千位分隔符 `provider` 可以出现在中 `s` `style` <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-873">The thousands separator of the culture defined by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="cf2bf-874">*.*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-874">*.*</span></span>|<span data-ttu-id="cf2bf-875">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-875">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="cf2bf-876">如果包含标志，则定义的区域性的小数点符号 `provider` 可以出现在中 `s` `style` <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-876">The decimal point symbol of the culture defined by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="cf2bf-877">*小数位数*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-877">*fractional-digits*</span></span>|<span data-ttu-id="cf2bf-878">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-878">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="cf2bf-879">`s`仅当包含标志时，小数位才能出现在中 `style` <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-879">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="cf2bf-880">*e*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-880">*e*</span></span>|<span data-ttu-id="cf2bf-881">"E" 或 "E" 字符，指示值以指数表示法表示。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-881">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="cf2bf-882">`s`如果包含标志，则参数可以表示指数表示法中的数字 `style` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-882">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="cf2bf-883">`s`无论参数的值如何，分析操作都将忽略中任何终止的 NUL (U + 0000) 字符 `style` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-883">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="cf2bf-884">只包含数字的字符串 (与 <xref:System.Globalization.NumberStyles.None> 样式) 始终在类型范围内分析成功 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-884">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None> style) always parses successfully if it is in the range of the <xref:System.Decimal> type.</span></span> <span data-ttu-id="cf2bf-885">其余 <xref:System.Globalization.NumberStyles> 成员控件元素，这些元素可能但不要求出现在输入字符串中。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-885">The remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="cf2bf-886">下表指示各个成员如何 <xref:System.Globalization.NumberStyles> 影响可能出现在中的元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-886">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="cf2bf-887">NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="cf2bf-887">NumberStyles value</span></span>|<span data-ttu-id="cf2bf-888">除数字外允许在 s 中使用的元素</span><span class="sxs-lookup"><span data-stu-id="cf2bf-888">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="cf2bf-889">仅限 *数字* 元素。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-889">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="cf2bf-890">*.*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-890">The *.*</span></span> <span data-ttu-id="cf2bf-891">和 *小数位数* 元素。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-891">and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="cf2bf-892">`s`参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-892">The `s` parameter can also use exponential notation.</span></span>  <span data-ttu-id="cf2bf-893">此标志支持格式 *为 E\*\*位* 的值;若要成功地分析具有正数或负号和小数点符号等元素的字符串，需要其他标志。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-893">This flag supports values in the form *digits* E *digits*; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="cf2bf-894">开头的 *ws* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-894">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="cf2bf-895">末尾处的 *ws* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-895">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="cf2bf-896">开头的 *sign* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-896">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="cf2bf-897">末尾的 *sign* 元素 `s` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-897">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="cf2bf-898">用括号括起数值的 *符号* 元素。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-898">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="cf2bf-899">*，* 元素。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-899">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="cf2bf-900">*$* 元素。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-900">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="cf2bf-901">全部。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-901">All.</span></span> <span data-ttu-id="cf2bf-902">`s`参数不能表示十六进制数或以指数表示法表示的数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-902">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="cf2bf-903">在开头或结尾处的 *ws* 元素，在 `s` 的开头处进行 *签名* `s` *。*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-903">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*</span></span> <span data-ttu-id="cf2bf-904">符号开头。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-904">symbol.</span></span> <span data-ttu-id="cf2bf-905">`s`参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-905">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="cf2bf-906">、、、 `ws` `sign` 和 *。* *,*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-906">The `ws`, `sign`, *,*, and *.*</span></span> <span data-ttu-id="cf2bf-907">位置。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-907">elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="cf2bf-908">除之外的所有样式都 `s` 不能表示十六进制数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-908">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="cf2bf-909">`provider`参数是一个 <xref:System.IFormatProvider> 实现，如 <xref:System.Globalization.NumberFormatInfo> 或 <xref:System.Globalization.CultureInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-909">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="cf2bf-910">`provider`参数提供用于分析的特定于区域性的信息。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-910">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="cf2bf-911">如果 `provider` 为 `null`，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-911">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="cf2bf-912"><xref:System.Decimal>对象的精度为29位。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-912">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="cf2bf-913">如果 `s` 表示的数字的位数超过29个，但包含小数部分并且在和范围内 <xref:System.Decimal.MaxValue> <xref:System.Decimal.MinValue> ，则将使用舍入到最接近的数字对数字进行舍入，而不是截断到29位数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-913">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="cf2bf-914">如果在分析操作过程中在参数中遇到分隔符 `s` ，并且适用的货币或小数分隔符和组分隔符相同，则分析操作将假定分隔符是小数点分隔符，而不是组分隔符。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-914">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="cf2bf-915">有关分隔符的详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> 、、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> 和 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-915">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-916">下面的示例使用各种 `style` 和 `provider` 参数来分析值的字符串表示形式 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-916">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Decimal> values.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs" interactive="try-dotnet-method" id="Snippet3"::: 
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb" id="Snippet3"::: 
 
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="cf2bf-917"><paramref name="s" /> 的格式不正确。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-917"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-918"><paramref name="s" /> 表示一个小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-918"><paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cf2bf-919"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-919"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf2bf-920"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-920"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="cf2bf-921">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cf2bf-921">-or-</span></span> 
 <span data-ttu-id="cf2bf-922"><paramref name="style" /> 是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-922"><paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span></span></exception>
        <altmember cref="Overload:System.Decimal.TryParse" />
        <altmember cref="M:System.Decimal.ToString" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="cf2bf-923">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="cf2bf-923">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Remainder">
      <MemberSignature Language="C#" Value="public static decimal Remainder (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Remainder(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Remainder(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Remainder (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Remainder(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Remainder : decimal * decimal -&gt; decimal" Usage="System.decimal.Remainder (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="cf2bf-924">被除数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-924">The dividend.</span></span></param>
        <param name="d2"><span data-ttu-id="cf2bf-925">除数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-925">The divisor.</span></span></param>
        <summary><span data-ttu-id="cf2bf-926">计算两个 <see cref="T:System.Decimal" /> 值相除后的余数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-926">Computes the remainder after dividing two <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-927">将 <paramref name="d1" /> 除以 <paramref name="d2" /> 后的余数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-927">The remainder after dividing <paramref name="d1" /> by <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf2bf-928">下面的示例使用 <xref:System.Decimal.Remainder%2A> 方法来计算一系列除法运算的余数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-928">The following example uses the <xref:System.Decimal.Remainder%2A> method to calculate the remainder in a series of division operations.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.remainder/cs/remainder.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.remainder/vb/remainder.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="cf2bf-929"><paramref name="d2" /> 为零。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-929"><paramref name="d2" /> is zero.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-930">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-930">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cf2bf-931">将值舍入到最接近的整数或指定的小数位数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-931">Rounds a value to the nearest integer or specified number of decimal places.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Round : decimal -&gt; decimal" Usage="System.decimal.Round d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf2bf-932">要舍入的小数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-932">A decimal number to round.</span></span></param>
        <summary><span data-ttu-id="cf2bf-933">将小数值舍入到最接近的整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-933">Rounds a decimal value to the nearest integer.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-934">最接近 <paramref name="d" /> 参数的整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-934">The integer that is nearest to the <paramref name="d" /> parameter.</span></span> <span data-ttu-id="cf2bf-935">如果 <paramref name="d" /> 正好处于两个整数中间，其中一个整数为偶数，另一个整数为奇数，则返回偶数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-935">If <paramref name="d" /> is halfway between two integers, one of which is even and the other odd, the even number is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-936">此方法的行为遵循 IEEE 标准754第4部分。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-936">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="cf2bf-937">这种类型的舍入有时称为 " *整半角"，甚至* 称为 " *银行家舍入*"。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-937">This kind of rounding is sometimes called *round half to even* or *banker's rounding*.</span></span> <span data-ttu-id="cf2bf-938">它最大程度地减少了通过以单方向持续舍入点值而导致的舍入误差。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-938">It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.</span></span> <span data-ttu-id="cf2bf-939">它等效于 <xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29> 使用参数调用方法 `mode` <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-939">It is equivalent to calling the <xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-940">下面的示例将 <xref:System.Decimal> 介于100和102之间的值范围舍入到最接近的整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-940">The following example rounds a range of <xref:System.Decimal> values between 100 and 102 to the nearest integer.</span></span> <span data-ttu-id="cf2bf-941">由于方法使用的是 "中舍入"，因此请注意，100.5 舍入为100，101.5 舍入到102。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-941">Because the method uses banker's rounding, note that 100.5 rounds to 100 and 101.5 rounds to 102.</span></span>  
  
 [!code-csharp[System.Decimal.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Round/cs/Round1.cs#1)]
 [!code-vb[System.Decimal.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Round/vb/Round1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-942">结果在 <see cref="T:System.Decimal" /> 值范围之外。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-942">The result is outside the range of a <see cref="T:System.Decimal" /> value.</span></span></exception>
        <altmember cref="M:System.Math.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int -&gt; decimal" Usage="System.decimal.Round (d, decimals)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="decimals" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf2bf-943">要舍入的小数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-943">A decimal number to round.</span></span></param>
        <param name="decimals"><span data-ttu-id="cf2bf-944">指定数字要舍入到的小数位数的值，范围从 0 到 28。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-944">A value from 0 to 28 that specifies the number of decimal places to round to.</span></span></param>
        <summary><span data-ttu-id="cf2bf-945">将 <see cref="T:System.Decimal" /> 值舍入到指定的小数位数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-945">Rounds a <see cref="T:System.Decimal" /> value to a specified number of decimal places.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-946">舍入到 <paramref name="d" /> 的小数位数等于 <paramref name="decimals" /> 的小数位数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-946">The decimal number equivalent to <paramref name="d" /> rounded to <paramref name="decimals" /> number of decimal places.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-947">此方法等效于 <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> 使用参数调用方法 `mode` <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> 。当 `d` 正好处于两个舍入值的正中间值时，结果是在最右小数点位置有偶数位的舍入值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-947">This method is equivalent to calling the <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.When `d` is exactly halfway between two rounded values, the result is the rounded value that has an even digit in the far right decimal position.</span></span> <span data-ttu-id="cf2bf-948">例如，当舍入为两位小数时，值 2.345 变成 2.34，而值 2.355 变成 2.36。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-948">For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.</span></span> <span data-ttu-id="cf2bf-949">此过程称为 *甚至舍\*\*入的舍入*。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-949">This process is known as *rounding toward even*, or *banker's rounding*.</span></span> <span data-ttu-id="cf2bf-950">它最大程度地减少了通过以单方向持续舍入点值而导致的舍入误差。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-950">It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-951">下面的示例使用方法将多个值舍入 `Decimal` 到指定的小数位数 `Round` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-951">The following example rounds several `Decimal` values to a specified number of decimal places using the `Round` method.</span></span>  
  
 [!code-csharp[System.Decimal.Round#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Round/cs/Round12.cs#12)]
 [!code-vb[System.Decimal.Round#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Round/vb/Round12.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cf2bf-952"><paramref name="decimals" /> 不是一个介于 0 到 28 的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-952"><paramref name="decimals" /> is not a value from 0 to 28.</span></span></exception>
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
        <altmember cref="M:System.Decimal.Truncate(System.Decimal)" />
        <altmember cref="M:System.Math.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * MidpointRounding -&gt; decimal" Usage="System.decimal.Round (d, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="mode" Type="System.MidpointRounding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf2bf-953">要舍入的小数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-953">A decimal number to round.</span></span></param>
        <param name="mode"><span data-ttu-id="cf2bf-954">一个值，指定当 <paramref name="d" /> 正好处于另两个数字中间时如何舍入。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-954">A value that specifies how to round <paramref name="d" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="cf2bf-955">将小数值舍入到最接近的整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-955">Rounds a decimal value to the nearest integer.</span></span> <span data-ttu-id="cf2bf-956">一个参数，指定当一个值正好处于另两个数中间时如何舍入这个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-956">A parameter specifies how to round the value if it is midway between two other numbers.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-957">最接近 <paramref name="d" /> 参数的整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-957">The integer that is nearest to the <paramref name="d" /> parameter.</span></span> <span data-ttu-id="cf2bf-958">如果 <paramref name="d" /> 位于两个数字的中间，其中一个为偶数，另一个为奇数，则 <paramref name="mode" /> 参数确定返回这两个数字中的哪一个。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-958">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, the <paramref name="mode" /> parameter determines which of the two numbers is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-959">在中点值中，结果中的最小有效位后的值在两个数字之间精确到了一半。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-959">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="cf2bf-960">例如，如果要将舍入为整数，7.5 是中值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-960">For example, 7.5 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="cf2bf-961">对于中点值，不能轻松地识别最接近的值，因为它是由参数指定的 `mode` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-961">For midpoint values, the nearest value can't be easily identified without a rounding convention, which is specified by the `mode` argument.</span></span> <span data-ttu-id="cf2bf-962"><xref:System.Decimal.Round%2A>方法支持两个用于处理中点值的舍入约定。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-962">The <xref:System.Decimal.Round%2A> method supports two rounding conventions for handling midpoint values.</span></span>  
  
 <span data-ttu-id="cf2bf-963">远离零的舍入。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-963">Rounding away from zero.</span></span>  
 <span data-ttu-id="cf2bf-964">中值舍入到下一个数字，而不是零。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-964">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="cf2bf-965">例如，3.5 舍入为4，4.5 舍入为5，-3.5 舍入到-4，-4.5 舍入到-5。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-965">For example, 3.5 rounds to 4, 4.5 rounds to 5, -3.5 rounds to -4, and -4.5 rounds to -5.</span></span> <span data-ttu-id="cf2bf-966">这种形式的舍入由 <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> 枚举成员表示。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-966">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="cf2bf-967">远离零的舍入是最广泛的舍入形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-967">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
 <span data-ttu-id="cf2bf-968">舍入为偶数或按下舍入</span><span class="sxs-lookup"><span data-stu-id="cf2bf-968">Rounding to even, or banker's rounding</span></span>  
 <span data-ttu-id="cf2bf-969">中值舍入为最接近的偶数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-969">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="cf2bf-970">例如，3.5 和4.5 舍入为4，-3.5 和-4.5 舍入到-4。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-970">For example, both 3.5 and 4.5 round to 4, and both -3.5 and -4.5 round to -4.</span></span> <span data-ttu-id="cf2bf-971">这种形式的舍入由 <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> 枚举成员表示。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-971">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="cf2bf-972">舍入到最接近的是在财务和统计操作中使用的标准舍入形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-972">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="cf2bf-973">它符合 IEEE Standard 754，第4部分。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-973">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="cf2bf-974">当在多个舍入操作中使用时，它可减少因按单一方向持续舍入点值而导致的舍入误差。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-974">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="cf2bf-975">在某些情况下，此舍入误差很重要。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-975">In some cases, this rounding error can be significant.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-976">下面的示例显示方法返回的值 <xref:System.Math.Round%28System.Decimal%29> 、 <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> 包含 `mode` 参数的方法 <xref:System.MidpointRounding.ToEven> 以及 <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> 具有 `mode` 参数的方法 <xref:System.MidpointRounding.AwayFromZero> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-976">The following example displays values returned by the <xref:System.Math.Round%28System.Decimal%29> method, the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint1.cs#5)]
 [!code-vb[System.Math.Round.Overload#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf2bf-977"><paramref name="mode" /> 不是 <see cref="T:System.MidpointRounding" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-977"><paramref name="mode" /> is not a <see cref="T:System.MidpointRounding" /> value.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-978">结果在 <see cref="T:System.Decimal" /> 对象范围之外。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-978">The result is outside the range of a <see cref="T:System.Decimal" /> object.</span></span></exception>
        <altmember cref="M:System.Math.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int * MidpointRounding -&gt; decimal" Usage="System.decimal.Round (d, decimals, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="decimals" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="mode" Type="System.MidpointRounding" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf2bf-979">要舍入的小数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-979">A decimal number to round.</span></span></param>
        <param name="decimals"><span data-ttu-id="cf2bf-980">返回值中的有效小数位数（精度）。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-980">The number of significant decimal places (precision) in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="cf2bf-981">一个值，指定当 <paramref name="d" /> 正好处于另两个数字中间时如何舍入。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-981">A value that specifies how to round <paramref name="d" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="cf2bf-982">将小数值舍入到指定精度。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-982">Rounds a decimal value to a specified precision.</span></span> <span data-ttu-id="cf2bf-983">一个参数，指定当一个值正好处于另两个数中间时如何舍入这个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-983">A parameter specifies how to round the value if it is midway between two other numbers.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-984">最接近 <paramref name="d" /> 参数的数字，其精度等于 <paramref name="decimals" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-984">The number that is nearest to the <paramref name="d" /> parameter with a precision equal to the <paramref name="decimals" /> parameter.</span></span> <span data-ttu-id="cf2bf-985">如果 <paramref name="d" /> 位于两个数字的中间，其中一个为偶数，另一个为奇数，则 <paramref name="mode" /> 参数确定返回这两个数字中的哪一个。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-985">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, the <paramref name="mode" /> parameter determines which of the two numbers is returned.</span></span> <span data-ttu-id="cf2bf-986">如果 <paramref name="d" /> 的精度小于 <paramref name="decimals" />，则原样返回 <paramref name="d" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-986">If the precision of <paramref name="d" /> is less than <paramref name="decimals" />, <paramref name="d" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-987">`decimals`参数指定返回值中的有效小数位数，范围从0到28。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-987">The `decimals` parameter specifies the number of significant decimal places in the return value and ranges from 0 to 28.</span></span> <span data-ttu-id="cf2bf-988">如果 `decimals` 为零，则返回整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-988">If `decimals` is zero, an integer is returned.</span></span>  
  
 <span data-ttu-id="cf2bf-989">在中点值中，结果中的最小有效位后的值在两个数字之间精确到了一半。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-989">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="cf2bf-990">例如，如果要将两个小数位舍入，3.47500 是中值，如果要将它舍入到整数，则7.500 为中点值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-990">For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="cf2bf-991">在这些情况下，如果没有舍入约定，则不能轻松地识别最接近的值 `mode` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-991">In these cases, the nearest value can't be easily identified without a rounding convention, which is specified by the `mode` argument.</span></span> <span data-ttu-id="cf2bf-992"><xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>方法支持两个用于处理中点值的舍入约定。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-992">The <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method supports two rounding conventions for handling midpoint values.</span></span>  
  
 <span data-ttu-id="cf2bf-993">远离零的舍入。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-993">Rounding away from zero.</span></span>  
 <span data-ttu-id="cf2bf-994">中值舍入到下一个数字，而不是零。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-994">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="cf2bf-995">例如，3.75 舍入为3.8，3.85 舍入到3.9，-3.75 舍入到-3.8，-3.85 舍入到-3.9。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-995">For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.</span></span> <span data-ttu-id="cf2bf-996">这种形式的舍入由 <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> 枚举成员表示。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-996">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="cf2bf-997">远离零的舍入是最广泛的舍入形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-997">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
 <span data-ttu-id="cf2bf-998">舍入为偶数或按下舍入</span><span class="sxs-lookup"><span data-stu-id="cf2bf-998">Rounding to even, or banker's rounding</span></span>  
 <span data-ttu-id="cf2bf-999">中值舍入为最接近的偶数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-999">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="cf2bf-1000">例如，3.75 和3.85 舍入为3.8，-3.75 和-3.85 舍入到-3.8。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1000">For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.</span></span> <span data-ttu-id="cf2bf-1001">这种形式的舍入由 <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> 枚举成员表示。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1001">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="cf2bf-1002">舍入到最接近的是在财务和统计操作中使用的标准舍入形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1002">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="cf2bf-1003">它符合 IEEE Standard 754，第4部分。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1003">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="cf2bf-1004">当在多个舍入操作中使用时，它可减少因按单一方向持续舍入点值而导致的舍入误差。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1004">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="cf2bf-1005">在某些情况下，此舍入误差很重要。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1005">In some cases, this rounding error can be significant.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-1006">下面的示例演示如何将 <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> 方法与枚举一起使用 <xref:System.MidpointRounding> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1006">The following example demonstrates how to use the <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
 [!code-csharp[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
 [!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cf2bf-1007"><paramref name="decimals" /> 小于 0 或大于 28。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1007"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf2bf-1008"><paramref name="mode" /> 不是 <see cref="T:System.MidpointRounding" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1008"><paramref name="mode" /> is not a <see cref="T:System.MidpointRounding" /> value.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-1009">结果在 <see cref="T:System.Decimal" /> 对象范围之外。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1009">The result is outside the range of a <see cref="T:System.Decimal" /> object.</span></span></exception>
        <altmember cref="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static decimal Subtract (decimal d1, decimal d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Subtract(valuetype System.Decimal d1, valuetype System.Decimal d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Subtract(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (d1 As Decimal, d2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Subtract(System::Decimal d1, System::Decimal d2);" />
      <MemberSignature Language="F#" Value="static member Subtract : decimal * decimal -&gt; decimal" Usage="System.decimal.Subtract (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Decimal" />
        <Parameter Name="d2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="cf2bf-1010">被减数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1010">The minuend.</span></span></param>
        <param name="d2"><span data-ttu-id="cf2bf-1011">减数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1011">The subtrahend.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1012">从一个 <see cref="T:System.Decimal" /> 值中减去指定的另一个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1012">Subtracts one specified <see cref="T:System.Decimal" /> value from another.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1013"><paramref name="d2" /> 减 <paramref name="d1" /> 所得的结果。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1013">The result of subtracting <paramref name="d2" /> from <paramref name="d1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf2bf-1014">以下示例说明了 `Subtract` 的用法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1014">The following example illustrates the use of `Subtract`.</span></span>  
  
 [!code-cpp[Decimal Example#4](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#4)]
 [!code-csharp[Decimal Example#4](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#4)]
 [!code-vb[Decimal Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-1015">返回值小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1015">The return value is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Decimal.Add(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Multiply(System.Decimal,System.Decimal)" />
        <altmember cref="M:System.Decimal.Divide(System.Decimal,System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberSignature Language="F#" Value="abstract member System.IComparable.CompareTo : obj -&gt; int&#xA;override this.System.IComparable.CompareTo : obj -&gt; int" Usage="decimal.System.IComparable.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-1016">要比较的对象。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1016">The object to compare.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1017">将当前实例与同一类型的另一个对象进行比较，并返回一个整数，该整数指示当前实例在排序顺序中的位置是位于另一个对象之前、之后还是与其位置相同。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1017">Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1018">一个值，指示要比较的对象的相对顺序。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1018">A value that indicates the relative order of the objects being compared.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cf2bf-1019">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1019">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cf2bf-1020">它只能在 <xref:System.Decimal> 实例被强制转换为 <xref:System.IComparable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1020">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IComparable> interface.</span></span>

<span data-ttu-id="cf2bf-1021">返回值的含义如下：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1021">The return value has these meanings:</span></span>

| <span data-ttu-id="cf2bf-1022">“值”</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1022">Value</span></span>             | <span data-ttu-id="cf2bf-1023">含义</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1023">Meaning</span></span>                                                                 |
|-------------------|-------------------------------------------------------------------------|
| <span data-ttu-id="cf2bf-1024">小于零</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1024">Less than zero</span></span>    | <span data-ttu-id="cf2bf-1025">此实例在排序顺序中位于 `value` 之前。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1025">This instance precedes `value` in the sort order.</span></span>                       |
| <span data-ttu-id="cf2bf-1026">零</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1026">Zero</span></span>              | <span data-ttu-id="cf2bf-1027">此实例在排序顺序中的位置与 `value` 相同。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1027">This instance occurs in the same position in the sort order as `value`.</span></span> |
| <span data-ttu-id="cf2bf-1028">大于零</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1028">Greater than zero</span></span> | <span data-ttu-id="cf2bf-1029">此实例在排序顺序中位于 `value` 之后。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1029">This instance follows `value` in the sort order.</span></span>                        |

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.GetTypeCode : unit -&gt; TypeCode&#xA;override this.System.IConvertible.GetTypeCode : unit -&gt; TypeCode" Usage="decimal.System.IConvertible.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf2bf-1030">返回此实例的 <see cref="T:System.TypeCode" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1030">Returns the <see cref="T:System.TypeCode" /> for this instance.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1031">枚举常数，它是实现该接口的类或值类型的 <see cref="T:System.TypeCode" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1031">The enumerated constant that is the <see cref="T:System.TypeCode" /> of the class or value type that implements this interface.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="cf2bf-1032">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1032">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cf2bf-1033">它只能在 <xref:System.Decimal> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1033">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToBoolean : IFormatProvider -&gt; bool&#xA;override this.System.IConvertible.ToBoolean : IFormatProvider -&gt; bool" Usage="decimal.System.IConvertible.ToBoolean provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cf2bf-1034">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1034">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1035">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1035">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1036">如果当前实例的值不为零，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1036"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1037">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1037">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cf2bf-1038">它只能在 <xref:System.Decimal> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1038">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="cf2bf-1039">建议的替代方法是调用 <xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1039">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToByte : IFormatProvider -&gt; byte&#xA;override this.System.IConvertible.ToByte : IFormatProvider -&gt; byte" Usage="decimal.System.IConvertible.ToByte provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cf2bf-1040">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1040">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1041">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1041">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1042">当前实例的值，已转换为 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1042">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1043">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1043">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cf2bf-1044">它只能在 <xref:System.Decimal> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1044">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="cf2bf-1045">建议的替代方法是调用 <xref:System.Decimal.ToByte%2A?displayProperty=nameWithType> 方法或 <xref:System.Convert.ToByte%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1045">The recommended alternative is to call either the <xref:System.Decimal.ToByte%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToByte%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-1046">生成的整数值小于 <see cref="F:System.Byte.MinValue" /> 或大于 <see cref="F:System.Byte.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1046">The resulting integer value is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToChar : IFormatProvider -&gt; char&#xA;override this.System.IConvertible.ToChar : IFormatProvider -&gt; char" Usage="decimal.System.IConvertible.ToChar provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cf2bf-1047">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1047">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1048">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1048">This conversion is not supported.</span></span> <span data-ttu-id="cf2bf-1049">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1049">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1050">无。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1050">None.</span></span> <span data-ttu-id="cf2bf-1051">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1051">This conversion is not supported.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cf2bf-1052">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1052">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDateTime : IFormatProvider -&gt; DateTime&#xA;override this.System.IConvertible.ToDateTime : IFormatProvider -&gt; DateTime" Usage="decimal.System.IConvertible.ToDateTime provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cf2bf-1053">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1053">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1054">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1054">This conversion is not supported.</span></span> <span data-ttu-id="cf2bf-1055">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1055">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1056">无。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1056">None.</span></span> <span data-ttu-id="cf2bf-1057">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1057">This conversion is not supported.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cf2bf-1058">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1058">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDecimal : IFormatProvider -&gt; decimal&#xA;override this.System.IConvertible.ToDecimal : IFormatProvider -&gt; decimal" Usage="decimal.System.IConvertible.ToDecimal provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cf2bf-1059">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1059">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1060">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1060">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1061">当前实例的值，未更改。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1061">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1062">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1062">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cf2bf-1063">它只能在 <xref:System.Decimal> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1063">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDouble : IFormatProvider -&gt; double&#xA;override this.System.IConvertible.ToDouble : IFormatProvider -&gt; double" Usage="decimal.System.IConvertible.ToDouble provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cf2bf-1064">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1064">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1065">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1065">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1066">当前实例的值，已转换为 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1066">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1067">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1067">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cf2bf-1068">它只能在 <xref:System.Decimal> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1068">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="cf2bf-1069">建议的替代方法是调用 <xref:System.Decimal.ToDouble%2A?displayProperty=nameWithType> 方法或 <xref:System.Convert.ToDouble%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1069">The recommended alternative is to call either the <xref:System.Decimal.ToDouble%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToDouble%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="cf2bf-1070">由于的 <xref:System.Double> 有效位数少于 a <xref:System.Decimal> ，此操作可能会产生舍入错误。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1070">Because a <xref:System.Double> has fewer significant digits than a <xref:System.Decimal>, this operation may produce round-off errors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt16 : IFormatProvider -&gt; int16&#xA;override this.System.IConvertible.ToInt16 : IFormatProvider -&gt; int16" Usage="decimal.System.IConvertible.ToInt16 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cf2bf-1071">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1071">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1072">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1072">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1073">当前实例的值，已转换为 <see cref="T:System.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1073">The value of the current instance, converted to a <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1074">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1074">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cf2bf-1075">它只能在 <xref:System.Decimal> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1075">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="cf2bf-1076">建议的替代方法是调用 <xref:System.Decimal.ToInt16%2A?displayProperty=nameWithType> 方法或 <xref:System.Convert.ToInt16%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1076">The recommended alternative is to call either the <xref:System.Decimal.ToInt16%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToInt16%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="cf2bf-1077"><xref:System.Decimal>该值向零舍入到最接近的整数值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1077">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-1078">生成的整数值小于 <see cref="F:System.Int16.MinValue" /> 或大于 <see cref="F:System.Int16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1078">The resulting integer value is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt32 : IFormatProvider -&gt; int&#xA;override this.System.IConvertible.ToInt32 : IFormatProvider -&gt; int" Usage="decimal.System.IConvertible.ToInt32 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cf2bf-1079">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1079">The parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1080">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1080">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1081">当前实例的值，已转换为 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1081">The value of the current instance, converted to a <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1082">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1082">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cf2bf-1083">它只能在 <xref:System.Decimal> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1083">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="cf2bf-1084">建议的替代方法是调用 <xref:System.Decimal.ToInt32%2A?displayProperty=nameWithType> 方法或 <xref:System.Convert.ToInt32%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1084">The recommended alternative is to call either the <xref:System.Decimal.ToInt32%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToInt32%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="cf2bf-1085"><xref:System.Decimal>该值向零舍入到最接近的整数值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1085">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-1086">生成的整数值小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1086">The resulting integer value is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt64 : IFormatProvider -&gt; int64&#xA;override this.System.IConvertible.ToInt64 : IFormatProvider -&gt; int64" Usage="decimal.System.IConvertible.ToInt64 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cf2bf-1087">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1087">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1088">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1088">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1089">当前实例的值，已转换为 <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1089">The value of the current instance, converted to a <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1090">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1090">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cf2bf-1091">它只能在 <xref:System.Decimal> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1091">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="cf2bf-1092">建议的替代方法是调用 <xref:System.Decimal.ToInt64%2A?displayProperty=nameWithType> 方法或 <xref:System.Convert.ToInt64%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1092">The recommended alternative is to call either the <xref:System.Decimal.ToInt64%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToInt64%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-1093">生成的整数值小于 <see cref="F:System.Int64.MinValue" /> 或大于 <see cref="F:System.Int64.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1093">The resulting integer value is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToSByte : IFormatProvider -&gt; sbyte&#xA;override this.System.IConvertible.ToSByte : IFormatProvider -&gt; sbyte" Usage="decimal.System.IConvertible.ToSByte provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cf2bf-1094">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1094">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1095">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1095">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1096">当前实例的值，已转换为 <see cref="T:System.SByte" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1096">The value of the current instance, converted to a <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1097">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1097">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cf2bf-1098">它只能在 <xref:System.Decimal> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1098">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="cf2bf-1099">建议的替代方法是调用 <xref:System.Decimal.ToSByte%2A?displayProperty=nameWithType> 方法或 <xref:System.Convert.ToSByte%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1099">The recommended alternative is to call either the <xref:System.Decimal.ToSByte%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToSByte%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-1100">生成的整数值小于 <see cref="F:System.SByte.MinValue" /> 或大于 <see cref="F:System.SByte.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1100">The resulting integer value is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToSingle : IFormatProvider -&gt; single&#xA;override this.System.IConvertible.ToSingle : IFormatProvider -&gt; single" Usage="decimal.System.IConvertible.ToSingle provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cf2bf-1101">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1101">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1102">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1102">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1103">当前实例的值，已转换为 <see cref="T:System.Single" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1103">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1104">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1104">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cf2bf-1105">它只能在 <xref:System.Decimal> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1105">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="cf2bf-1106">建议的替代方法是调用 <xref:System.Decimal.ToSingle%2A?displayProperty=nameWithType> 方法或 <xref:System.Convert.ToSingle%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1106">The recommended alternative is to call either the <xref:System.Decimal.ToSingle%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToSingle%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToType (type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToType : Type * IFormatProvider -&gt; obj&#xA;override this.System.IConvertible.ToType : Type * IFormatProvider -&gt; obj" Usage="decimal.System.IConvertible.ToType (type, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="cf2bf-1107">要将此 <see cref="T:System.Decimal" /> 实例的值转换为的类型。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1107">The type to which to convert the value of this <see cref="T:System.Decimal" /> instance.</span></span></param>
        <param name="provider"><span data-ttu-id="cf2bf-1108">一个 <see cref="T:System.IFormatProvider" /> 实现，提供有关返回值格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1108">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1109">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1109">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1110">当前实例的值，已转换为 <paramref name="type" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1110">The value of the current instance, converted to a <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1111">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1111">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cf2bf-1112">它只能在 <xref:System.Decimal> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1112">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="cf2bf-1113">建议的替代项是改为 `static` 调用 `Shared` Visual Basic) 方法中的 (<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1113">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cf2bf-1114"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1114"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cf2bf-1115">不支持请求的类型转换。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1115">The requested type conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt16 : IFormatProvider -&gt; uint16&#xA;override this.System.IConvertible.ToUInt16 : IFormatProvider -&gt; uint16" Usage="decimal.System.IConvertible.ToUInt16 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cf2bf-1116">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1116">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1117">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1117">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1118">当前实例的值，已转换为 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1118">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1119">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1119">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cf2bf-1120">它只能在 <xref:System.Decimal> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1120">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="cf2bf-1121">建议的替代方法是调用 <xref:System.Decimal.ToUInt16%2A?displayProperty=nameWithType> 方法或 <xref:System.Convert.ToUInt16%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1121">The recommended alternative is to call either the <xref:System.Decimal.ToUInt16%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToUInt16%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-1122">生成的整数值小于 <see cref="F:System.UInt16.MinValue" /> 或大于 <see cref="F:System.UInt16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1122">The resulting integer value is less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt32 : IFormatProvider -&gt; uint32&#xA;override this.System.IConvertible.ToUInt32 : IFormatProvider -&gt; uint32" Usage="decimal.System.IConvertible.ToUInt32 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cf2bf-1123">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1123">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1124">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1124">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1125">当前实例的值，已转换为 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1125">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1126">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1126">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cf2bf-1127">它只能在 <xref:System.Decimal> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1127">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="cf2bf-1128">建议的替代方法是调用 <xref:System.Decimal.ToUInt32%2A?displayProperty=nameWithType> 方法或 <xref:System.Convert.ToUInt32%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1128">The recommended alternative is to call either the <xref:System.Decimal.ToUInt32%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToUInt32%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="cf2bf-1129"><xref:System.Decimal>该值向零舍入到最接近的整数值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1129">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-1130">生成的整数值小于 <see cref="F:System.UInt32.MinValue" /> 或大于 <see cref="F:System.UInt32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1130">The resulting integer value is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt64 : IFormatProvider -&gt; uint64&#xA;override this.System.IConvertible.ToUInt64 : IFormatProvider -&gt; uint64" Usage="decimal.System.IConvertible.ToUInt64 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cf2bf-1131">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1131">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1132">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1132">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1133">当前实例的值，已转换为 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1133">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1134">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1134">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cf2bf-1135">它只能在 <xref:System.Decimal> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1135">It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="cf2bf-1136">建议的替代方法是调用 <xref:System.Decimal.ToUInt64%2A?displayProperty=nameWithType> 方法或 <xref:System.Convert.ToUInt64%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1136">The recommended alternative is to call either the <xref:System.Decimal.ToUInt64%2A?displayProperty=nameWithType> method or the <xref:System.Convert.ToUInt64%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="cf2bf-1137"><xref:System.Decimal>该值向零舍入到最接近的整数值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1137">The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-1138">生成的整数值小于 <see cref="F:System.UInt64.MinValue" /> 或大于 <see cref="F:System.UInt64.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1138">The resulting integer value is less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.Serialization.IDeserializationCallback.OnDeserialization : obj -&gt; unit&#xA;override this.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization : obj -&gt; unit" Usage="decimal.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization sender" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="cf2bf-1139">启动回调的对象。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1139">The object that initiated the callback.</span></span> <span data-ttu-id="cf2bf-1140">当前未实现该参数的功能。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1140">The functionality for this parameter is not currently implemented.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1141">在对象的反序列化完成时运行。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1141">Runs when the deserialization of an object has been completed.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="cf2bf-1142"><see cref="T:System.Decimal" /> 对象包含无效或已损坏的数据。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1142">The <see cref="T:System.Decimal" /> object contains invalid or corrupted data.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="decimal.System.Runtime.Serialization.ISerializable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="cf2bf-1143">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1143">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="cf2bf-1144">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1144">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1145">使用将目标对象序列化所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1145">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (value As Decimal) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToByte : decimal -&gt; byte" Usage="System.decimal.ToByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-1146">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1146">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1147">将指定的 <see cref="T:System.Decimal" /> 的值转换为等效的 8 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1147">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 8-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1148">等效于 <paramref name="value" /> 的 8 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1148">An 8-bit unsigned integer equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1149">参数 `value` 舍入为最接近零的整数值，并返回该结果。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1149">Parameter `value` is rounded to the nearest integer value toward zero, and that result is returned.</span></span>  
  
 <span data-ttu-id="cf2bf-1150">还可以 <xref:System.Decimal> 使用赋值运算符将值转换为8位无符号整数 <xref:System.Decimal.op_Explicit%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1150">You can also convert a <xref:System.Decimal> value to an 8-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="cf2bf-1151">由于运算符执行收缩转换，因此必须在 c # 中使用强制转换运算符或在 Visual Basic 中使用转换函数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1151">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-1152">下面的示例使用 <xref:System.Decimal.ToByte%2A> 方法将十进制数字转换为 <xref:System.Byte> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1152">The following example uses the <xref:System.Decimal.ToByte%2A> method to convert decimal numbers to <xref:System.Byte> values.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.tobyte/cs/tobyte_1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.tobyte/vb/tobyte_1.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-1153"><paramref name="value" /> 小于 <see cref="F:System.Byte.MinValue" /> 或大于 <see cref="F:System.Byte.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1153"><paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToDouble(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (d As Decimal) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToDouble : decimal -&gt; double" Usage="System.decimal.ToDouble d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf2bf-1154">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1154">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1155">将指定的 <see cref="T:System.Decimal" /> 的值转换为等效的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1155">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1156">与 <paramref name="d" /> 等效的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1156">A double-precision floating-point number equivalent to <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1157">此操作可能会产生舍入错误，因为双精度浮点数的有效位数少于 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1157">This operation can produce round-off errors because a double-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>  
  
 <span data-ttu-id="cf2bf-1158">还可以 <xref:System.Decimal> <xref:System.Double> 使用赋值运算符将转换为值 <xref:System.Decimal.op_Explicit%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1158">You can also convert a <xref:System.Decimal> to a <xref:System.Double> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="cf2bf-1159">因为转换可能会丢失精度，所以必须在 c # 中使用强制转换运算符或在 Visual Basic 中使用转换函数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1159">Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-1160">下面的代码示例 `Decimal` 使用方法将数字转换为 <xref:System.Double> 值 `ToDouble` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1160">The following code example converts `Decimal` numbers to <xref:System.Double> values using `ToDouble` method.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CPP/tosgl_dbl.cpp" id="Snippet5":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CS/tosgl_dbl.cs" interactive="try-dotnet" id="Snippet5":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToXXX/VB/tosgl_dbl.vb" id="Snippet5":::
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Decimal) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : decimal -&gt; int16" Usage="System.decimal.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-1161">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1161">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1162">将指定的 <see cref="T:System.Decimal" /> 值转换为等效的 16 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1162">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1163">等效于 <paramref name="value" /> 的 16 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1163">A 16-bit signed integer equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1164">还可以 <xref:System.Decimal> 使用赋值运算符将值转换为16位整数 <xref:System.Decimal.op_Explicit%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1164">You can also convert a <xref:System.Decimal> value to a 16-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="cf2bf-1165">由于运算符执行收缩转换，因此必须在 c # 中使用强制转换运算符或在 Visual Basic 中使用转换函数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1165">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-1166">下面的示例使用 <xref:System.Decimal.ToInt16%2A> 方法将十进制数字转换为 <xref:System.Int16> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1166">The following example uses the <xref:System.Decimal.ToInt16%2A> method to convert decimal numbers to <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint16/cs/toint16_1.cs#1)]
 [!code-vb[System.Decimal.ToInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint16/vb/toint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-1167"><paramref name="value" /> 小于 <see cref="F:System.Int16.MinValue" /> 或大于 <see cref="F:System.Int16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1167"><paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (d As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : decimal -&gt; int" Usage="System.decimal.ToInt32 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf2bf-1168">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1168">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1169">将指定的 <see cref="T:System.Decimal" /> 值转换为等效的 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1169">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1170">与 <paramref name="d" /> 的值等效的 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1170">A 32-bit signed integer equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1171">返回值为十进制值的整数部分;小数位被截断。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1171">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="cf2bf-1172">还可以 <xref:System.Decimal> 使用赋值运算符将值转换为32位整数 <xref:System.Decimal.op_Explicit%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1172">You can also convert a <xref:System.Decimal> value to a 32-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="cf2bf-1173">由于运算符执行收缩转换，因此必须在 c # 中使用强制转换运算符或在 Visual Basic 中使用转换函数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1173">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-1174">下面的示例使用 <xref:System.Decimal.ToInt32%2A> 方法将十进制数字转换为 <xref:System.Int32> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1174">The following example uses the <xref:System.Decimal.ToInt32%2A> method to convert decimal numbers to <xref:System.Int32> values.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint32/cs/toint32_1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint32/vb/toint32_1.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-1175"><paramref name="d" /> 小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1175"><paramref name="d" /> is less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (d As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : decimal -&gt; int64" Usage="System.decimal.ToInt64 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf2bf-1176">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1176">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1177">将指定的 <see cref="T:System.Decimal" /> 值转换为等效的 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1177">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1178">与 <paramref name="d" /> 的值等效的 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1178">A 64-bit signed integer equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1179">返回值为十进制值的整数部分;小数位被截断。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1179">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="cf2bf-1180">还可以 <xref:System.Decimal> 使用赋值运算符将值转换为64位整数 <xref:System.Decimal.op_Explicit%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1180">You can also convert a <xref:System.Decimal> value to a 64-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="cf2bf-1181">由于运算符执行收缩转换，因此必须在 c # 中使用强制转换运算符或在 Visual Basic 中使用转换函数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1181">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-1182">下面的示例使用 <xref:System.Decimal.ToInt64%2A> 方法将十进制数字转换为 <xref:System.Int64> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1182">The following example uses the <xref:System.Decimal.ToInt64%2A> method to convert decimal numbers to <xref:System.Int64> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint64/cs/toint64_1.cs#1)]
 [!code-vb[System.Decimal.ToInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint64/vb/toint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-1183"><paramref name="d" /> 小于 <see cref="F:System.Int64.MinValue" /> 或大于 <see cref="F:System.Int64.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1183"><paramref name="d" /> is less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="ToOACurrency">
      <MemberSignature Language="C#" Value="public static long ToOACurrency (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToOACurrency(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToOACurrency(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToOACurrency (value As Decimal) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToOACurrency(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToOACurrency : decimal -&gt; int64" Usage="System.decimal.ToOACurrency value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-1184">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1184">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1185">将指定的 <see cref="T:System.Decimal" /> 值转换为等效的 OLE 自动化货币值，该值包含在一个 64 位有符号整数中。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1185">Converts the specified <see cref="T:System.Decimal" /> value to the equivalent OLE Automation Currency value, which is contained in a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1186">包含 <paramref name="value" /> 的 OLE 自动化等效值的 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1186">A 64-bit signed integer that contains the OLE Automation equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf2bf-1187">下面的代码示例使用 `ToOACurrency` 方法将数字转换 `Decimal` 为字段中包含的等效 OLE 自动化货币值 <xref:System.Int64> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1187">The following code example uses the `ToOACurrency` method to convert `Decimal` numbers to the equivalent OLE Automation Currency values that are contained in <xref:System.Int64> fields.</span></span>  
  
 [!code-cpp[System.Decimal.OACurrency#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CPP/tooacurrency.cpp#1)]
 [!code-csharp[System.Decimal.OACurrency#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CS/tooacurrency.cs#1)]
 [!code-vb[System.Decimal.OACurrency#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.OACurrency/VB/tooacurrency.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.FromOACurrency(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToSByte(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (value As Decimal) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToSByte : decimal -&gt; sbyte" Usage="System.decimal.ToSByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-1188">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1188">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1189">将指定的 <see cref="T:System.Decimal" /> 值转换为等效的 8 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1189">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1190">等效于 <paramref name="value" /> 的 8 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1190">An 8-bit signed integer equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1191">还可以 <xref:System.Decimal> 使用赋值运算符将值转换为8位有符号整数 <xref:System.Decimal.op_Explicit%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1191">You can also convert a <xref:System.Decimal> value to an 8-bit signed integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="cf2bf-1192">由于运算符执行收缩转换，因此必须在 c # 中使用强制转换运算符或在 Visual Basic 中使用转换函数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1192">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-1193">下面的示例使用 <xref:System.Decimal.ToSByte%2A> 方法将十进制数字转换为 <xref:System.SByte> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1193">The following example uses the <xref:System.Decimal.ToSByte%2A> method to convert decimal numbers to <xref:System.SByte> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToSByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.tosbyte/cs/tosbyte1.cs#1)]
 [!code-vb[System.Decimal.ToSByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.tosbyte/vb/tosbyte1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.ToInt16(System.Decimal)" />
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-1194"><paramref name="value" /> 小于 <see cref="F:System.SByte.MinValue" /> 或大于 <see cref="F:System.SByte.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1194"><paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToSingle(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (d As Decimal) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToSingle : decimal -&gt; single" Usage="System.decimal.ToSingle d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf2bf-1195">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1195">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1196">将指定的 <see cref="T:System.Decimal" /> 的值转换为等效的单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1196">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1197">等效于 <paramref name="d" /> 的值的单精度浮点数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1197">A single-precision floating-point number equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1198">此操作可能会产生舍入错误，因为单精度浮点数的有效位数少于 <xref:System.Decimal> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1198">This operation can produce round-off errors because a single-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.</span></span>  
  
 <span data-ttu-id="cf2bf-1199">还可以 <xref:System.Decimal> <xref:System.Single> 使用赋值运算符将转换为值 <xref:System.Decimal.op_Explicit%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1199">You can also convert a <xref:System.Decimal> to a <xref:System.Single> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="cf2bf-1200">因为转换可能会丢失精度，所以必须在 c # 中使用强制转换运算符或在 Visual Basic 中使用转换函数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1200">Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-1201">下面的代码示例 `Decimal` 使用方法将数字转换为 <xref:System.Single> 值 `ToSingle` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1201">The following code example converts `Decimal` numbers to <xref:System.Single> values using the `ToSingle` method.</span></span>  
  
 [!code-cpp[System.Decimal.ToXXX#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CPP/tosgl_dbl.cpp#5)]
 [!code-csharp[System.Decimal.ToXXX#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CS/tosgl_dbl.cs#5)]
 [!code-vb[System.Decimal.ToXXX#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToXXX/VB/tosgl_dbl.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cf2bf-1202">将此实例的数字值转换为其等效的 <see cref="T:System.String" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1202">Converts the numeric value of this instance to its equivalent <see cref="T:System.String" /> representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="decimal.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf2bf-1203">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1203">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1204">表示此实例的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1204">A string that represents the value of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1205"><xref:System.Decimal.ToString>方法使用 <xref:System.Decimal> 当前区域性的默认 ( "G" 或常规) 格式设置值的格式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1205">The <xref:System.Decimal.ToString> method formats a <xref:System.Decimal> value in the default ("G", or general) format of the current culture.</span></span> <span data-ttu-id="cf2bf-1206">如果要指定其他格式或区域性，请使用方法的其他重载 <xref:System.Decimal.ToString%2A> ，如下所示：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1206">If you want to specify a different format or culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="cf2bf-1207">使用格式</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1207">To use format</span></span>|<span data-ttu-id="cf2bf-1208">对于区域性</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1208">For culture</span></span>|<span data-ttu-id="cf2bf-1209">使用重载</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1209">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="cf2bf-1210">默认 ( "G" ) 格式</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1210">Default ("G") format</span></span>|<span data-ttu-id="cf2bf-1211">特定区域性</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1211">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="cf2bf-1212">特定格式</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1212">A specific format</span></span>|<span data-ttu-id="cf2bf-1213">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1213">Default (current) culture</span></span>|<xref:System.Decimal.ToString%28System.String%29>|  
|<span data-ttu-id="cf2bf-1214">特定格式</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1214">A specific format</span></span>|<span data-ttu-id="cf2bf-1215">特定区域性</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1215">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="cf2bf-1216">.NET Framework 提供了广泛的格式设置支持，以下格式设置主题更详细地介绍了这些支持：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1216">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="cf2bf-1217">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1217">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="cf2bf-1218">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1218">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-1219">下面的示例 <xref:System.Decimal> 使用默认方法显示一个值 <xref:System.Decimal.ToString> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1219">The following example displays a <xref:System.Decimal> value using the default <xref:System.Decimal.ToString> method.</span></span> <span data-ttu-id="cf2bf-1220">它还显示 <xref:System.Decimal> 使用多个标准格式说明符生成的值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1220">It also displays the string representations of the <xref:System.Decimal> value that result from using a number of standard format specifiers.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#2)]
 [!code-vb[System.Decimal.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#2)]  
  
 <span data-ttu-id="cf2bf-1221">下面的示例显示帐户中的资金量。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1221">The following example displays the amount of money in an account.</span></span>  
  
 [!code-cpp[Decimal Example#5](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#5)]
 [!code-csharp[Decimal Example#5](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#5)]
 [!code-vb[Decimal Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="cf2bf-1222">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1222">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings"><span data-ttu-id="cf2bf-1223">标准数字格式字符串</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1223">Standard Numeric Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="decimal.ToString provider" />
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider? provider);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="cf2bf-1224">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1224">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1225">使用指定的区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1225">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1226">此实例的值的字符串表示形式，由 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1226">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1227"><xref:System.Decimal.ToString%28System.IFormatProvider%29>方法将 <xref:System.Decimal> 默认 ( "G" 中的值的格式设置为指定区域性的常规) 格式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1227">The <xref:System.Decimal.ToString%28System.IFormatProvider%29> method formats a <xref:System.Decimal> value in the default ("G", or general) format of a specified culture.</span></span> <span data-ttu-id="cf2bf-1228">如果要指定其他格式或当前区域性，请使用方法的其他重载，如下所示 <xref:System.Decimal.ToString%2A> ：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1228">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="cf2bf-1229">使用格式</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1229">To use format</span></span>|<span data-ttu-id="cf2bf-1230">对于区域性</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1230">For culture</span></span>|<span data-ttu-id="cf2bf-1231">使用重载</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1231">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="cf2bf-1232">默认 ( "G" ) 格式</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1232">Default ("G") format</span></span>|<span data-ttu-id="cf2bf-1233">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1233">Default (current) culture</span></span>|<xref:System.Decimal.ToString>|  
|<span data-ttu-id="cf2bf-1234">特定格式</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1234">A specific format</span></span>|<span data-ttu-id="cf2bf-1235">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1235">Default (current) culture</span></span>|<xref:System.Decimal.ToString%28System.String%29>|  
|<span data-ttu-id="cf2bf-1236">特定格式</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1236">A specific format</span></span>|<span data-ttu-id="cf2bf-1237">特定区域性</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1237">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="cf2bf-1238">.NET Framework 提供了广泛的格式设置支持，以下格式设置主题更详细地介绍了这些支持：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1238">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="cf2bf-1239">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1239">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="cf2bf-1240">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1240">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="cf2bf-1241">`provider`参数是一个 <xref:System.IFormatProvider> 实现，其 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 方法返回 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1241">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="cf2bf-1242">通常， `provider` 是 <xref:System.Globalization.NumberFormatInfo> 对象或 <xref:System.Globalization.CultureInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1242">Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> object or a <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="cf2bf-1243">`provider`参数提供用于设置格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1243">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="cf2bf-1244">如果 `provider` 为 `null`，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1244">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="cf2bf-1245">若要 <xref:System.Decimal> 使用指定的区域性和特定格式字符串将值转换为其字符串表示形式，请调用 <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1245">To convert a <xref:System.Decimal> value to its string representation using a specified culture and a specific format string, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-1246">下面的示例 <xref:System.Decimal> 使用 <xref:System.Globalization.CultureInfo> 表示多个不同区域性的对象显示值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1246">The following example displays the string representation of a <xref:System.Decimal> value using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs" interactive="try-dotnet-method" id="Snippet3":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb" id="Snippet3"::: 
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="cf2bf-1247">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1247">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings"><span data-ttu-id="cf2bf-1248">标准数字格式字符串</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1248">Standard Numeric Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="decimal.ToString format" />
      <MemberSignature Language="C#" Value="public string ToString (string? format);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="cf2bf-1249">标准或自定义的数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1249">A standard or custom numeric format string.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1250">使用指定的格式，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1250">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1251">此实例的值的字符串表示形式，由 <paramref name="format" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1251">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1252"><xref:System.Decimal.ToString%28System.String%29>方法 <xref:System.Decimal> 使用当前区域性的约定来设置指定格式的值的格式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1252">The <xref:System.Decimal.ToString%28System.String%29> method formats a <xref:System.Decimal> value in a specified format by using the conventions of the current culture.</span></span> <span data-ttu-id="cf2bf-1253">如果要使用默认 ( "G" 或常规) 格式或指定不同的区域性，请使用方法的其他重载，如下所示 <xref:System.Decimal.ToString%2A> ：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1253">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="cf2bf-1254">使用格式</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1254">To use format</span></span>|<span data-ttu-id="cf2bf-1255">对于区域性</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1255">For culture</span></span>|<span data-ttu-id="cf2bf-1256">使用重载</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1256">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="cf2bf-1257">默认 ( "G" ) 格式</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1257">Default ("G") format</span></span>|<span data-ttu-id="cf2bf-1258">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1258">Default (current) culture</span></span>|<xref:System.Decimal.ToString>|  
|<span data-ttu-id="cf2bf-1259">默认 ( "G" ) 格式</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1259">Default ("G") format</span></span>|<span data-ttu-id="cf2bf-1260">特定区域性</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1260">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="cf2bf-1261">特定格式</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1261">A specific format</span></span>|<span data-ttu-id="cf2bf-1262">特定区域性</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1262">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="cf2bf-1263"><xref:System.Decimal.ToString%2A>方法使用参数指定的标准或自定义数字格式字符串 `format` 将当前实例的值转换为其字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1263">The <xref:System.Decimal.ToString%2A> method uses the standard or custom numeric format string specified by the `format` parameter to convert the value of the current instance into its string representation.</span></span> <span data-ttu-id="cf2bf-1264">`format`参数可以是任何有效的[标准数值格式说明符](/dotnet/standard/base-types/standard-numeric-format-strings)（D、R 和 X 除外）以及[自定义数字格式说明符](/dotnet/standard/base-types/custom-numeric-format-strings)的任意组合。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1264">The `format` parameter can be any valid [standard numeric format specifier](/dotnet/standard/base-types/standard-numeric-format-strings) except for D, R, and X, as well as any combination of [custom numeric format specifiers](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span> <span data-ttu-id="cf2bf-1265">如果 `format` 为 `null` 或空字符串，则此实例的返回值使用一般数值格式说明符进行格式设置 (G) 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1265">If `format` is `null` or an empty string, the return value of this instance is formatted with the general numeric format specifier (G).</span></span>  
  
 <span data-ttu-id="cf2bf-1266">.NET Framework 提供了广泛的格式设置支持，以下格式设置主题更详细地介绍了这些支持：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1266">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="cf2bf-1267">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1267">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="cf2bf-1268">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1268">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="cf2bf-1269">使用当前区域性的对象对返回值进行格式设置 <xref:System.Globalization.NumberFormatInfo> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1269">The return value is formatted by using the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="cf2bf-1270">若要应用指定区域性的格式设置约定，请调用 <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1270">To apply the formatting conventions of a specified culture, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-1271">下面的示例 <xref:System.Decimal> 使用每个受支持的标准数值格式说明符和两个自定义数字格式字符串来显示值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1271">The following example displays a <xref:System.Decimal> value using each of the supported standard numeric format specifiers, together with two custom numeric format strings.</span></span> <span data-ttu-id="cf2bf-1272">将数值转换为字符串时，此示例使用 en-us 区域性的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1272">In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Decimal.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#4)]
 [!code-vb[System.Decimal.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="cf2bf-1273"><paramref name="format" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1273"><paramref name="format" /> is invalid.</span></span></exception>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="cf2bf-1274">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1274">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings"><span data-ttu-id="cf2bf-1275">标准数字格式字符串</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1275">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings"><span data-ttu-id="cf2bf-1276">自定义数字格式字符串</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1276">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/how-to-pad-a-number-with-leading-zeros"><span data-ttu-id="cf2bf-1277">如何：用前导零填充数字</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1277">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="decimal.ToString (format, provider)" />
      <MemberSignature Language="C#" Value="public string? ToString (string format, IFormatProvider provider);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="cf2bf-1278">一个数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1278">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="cf2bf-1279">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1279">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1280">使用指定的格式和区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1280">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1281">此实例的值的字符串表示形式，由 <paramref name="format" /> 和 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1281">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1282">方法使用指定 <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29> <xref:System.Decimal> 的区域性的指定格式设置值的格式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1282">The <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Decimal> value in a specified format of a specified culture.</span></span> <span data-ttu-id="cf2bf-1283">如果要使用默认格式或区域性设置，请使用方法的其他重载 <xref:System.Decimal.ToString%2A> ，如下所示：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1283">If you want to use default format or culture settings, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="cf2bf-1284">使用格式</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1284">To use format</span></span>|<span data-ttu-id="cf2bf-1285">对于区域性</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1285">For culture</span></span>|<span data-ttu-id="cf2bf-1286">使用重载</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1286">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="cf2bf-1287">默认 ( "G" ) 格式</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1287">Default ("G") format</span></span>|<span data-ttu-id="cf2bf-1288">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1288">Default (current) culture</span></span>|<xref:System.Decimal.ToString>|  
|<span data-ttu-id="cf2bf-1289">默认 ( "G" ) 格式</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1289">Default ("G") format</span></span>|<span data-ttu-id="cf2bf-1290">特定区域性</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1290">A specific culture</span></span>|<xref:System.Decimal.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="cf2bf-1291">特定格式</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1291">A specific format</span></span>|<span data-ttu-id="cf2bf-1292">默认 (当前) 区域性</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1292">Default (current) culture</span></span>|<xref:System.Decimal.ToString%28System.String%29>|  
  
 <span data-ttu-id="cf2bf-1293">`format`参数可以是任何有效的标准数值格式说明符（D、R 和 X 除外）以及自定义数字格式说明符的任意组合。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1293">The `format` parameter can be any valid standard numeric format specifier except for D, R, and X, as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="cf2bf-1294">如果 `format` 为 `null` 或空字符串，则此实例的返回值的格式为常规数值格式说明符 ( "G" ) 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1294">If `format` is `null` or an empty string, the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="cf2bf-1295">.NET Framework 提供了广泛的格式设置支持，以下格式设置主题更详细地介绍了这些支持：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1295">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="cf2bf-1296">有关数字格式说明符的详细信息，请参阅 [标准数字格式字符串](/dotnet/standard/base-types/standard-numeric-format-strings) 和 [自定义数字格式字符串](/dotnet/standard/base-types/custom-numeric-format-strings)。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1296">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="cf2bf-1297">有关格式设置的详细信息，请参阅 [格式设置类型](/dotnet/standard/base-types/formatting-types)。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1297">For more information about formatting, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="cf2bf-1298">`provider`参数是一个 <xref:System.IFormatProvider> 实现，其 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 方法返回 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1298">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="cf2bf-1299">通常， `provider` 是 <xref:System.Globalization.NumberFormatInfo> 或 <xref:System.Globalization.CultureInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1299">Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="cf2bf-1300">`provider`参数提供用于设置格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1300">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="cf2bf-1301">如果 `provider` 为 `null`，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1301">If `provider` is `null`, the thread current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-1302">下面的示例 <xref:System.Decimal> 使用多个不同区域性的每个受支持的标准数值格式说明符显示一个值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1302">The following example displays a <xref:System.Decimal> value using each of the supported standard numeric format specifiers for several different cultures.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs" interactive="try-dotnet-method" id="Snippet5":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb" id="Snippet5":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="cf2bf-1303"><paramref name="format" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1303"><paramref name="format" /> is invalid.</span></span></exception>
        <altmember cref="M:System.Decimal.Parse(System.String)" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="cf2bf-1304">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1304">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings"><span data-ttu-id="cf2bf-1305">标准数字格式字符串</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1305">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings"><span data-ttu-id="cf2bf-1306">自定义数字格式字符串</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1306">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/how-to-pad-a-number-with-leading-zeros"><span data-ttu-id="cf2bf-1307">如何：用前导零填充数字</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1307">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToUInt16(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Decimal) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : decimal -&gt; uint16" Usage="System.decimal.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf2bf-1308">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1308">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1309">将指定的 <see cref="T:System.Decimal" /> 的值转换为等效的 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1309">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1310">与 <paramref name="value" /> 的值等效的 16 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1310">A 16-bit unsigned integer equivalent to the value of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1311">返回值为十进制值的整数部分;小数位被截断。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1311">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="cf2bf-1312">还可以 <xref:System.Decimal> 使用赋值运算符将值转换为16位无符号整数 <xref:System.Decimal.op_Explicit%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1312">You can also convert a <xref:System.Decimal> value to a 16-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="cf2bf-1313">由于运算符执行收缩转换，因此必须在 c # 中使用强制转换运算符或在 Visual Basic 中使用转换函数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1313">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-1314">下面的示例使用 <xref:System.Decimal.ToUInt16%2A> 方法将十进制数字转换为 <xref:System.UInt16> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1314">The following example uses the <xref:System.Decimal.ToUInt16%2A> method to convert decimal numbers to <xref:System.UInt16> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToUInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint16/cs/touint16_1.cs#1)]
 [!code-vb[System.Decimal.ToUInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint16/vb/touint16_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.ToInt32(System.Decimal)" />
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-1315"><paramref name="value" /> 大于 <see cref="F:System.UInt16.MaxValue" /> 或小于 <see cref="F:System.UInt16.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1315"><paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />.</span></span></exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToUInt32(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (d As Decimal) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : decimal -&gt; uint32" Usage="System.decimal.ToUInt32 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf2bf-1316">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1316">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1317">将指定的 <see cref="T:System.Decimal" /> 的值转换为等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1317">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1318">与 <paramref name="d" /> 的值等效的 32 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1318">A 32-bit unsigned integer equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1319">返回值为十进制值的整数部分;小数位被截断。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1319">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="cf2bf-1320">还可以 <xref:System.Decimal> 使用赋值运算符将值转换为32位无符号整数 <xref:System.Decimal.op_Explicit%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1320">You can also convert a <xref:System.Decimal> value to an 32-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="cf2bf-1321">由于运算符执行收缩转换，因此必须在 c # 中使用强制转换运算符或在 Visual Basic 中使用转换函数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1321">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-1322">下面的示例使用 <xref:System.Decimal.ToUInt32%2A> 方法将十进制数字转换为 <xref:System.UInt32> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1322">The following example uses the <xref:System.Decimal.ToUInt32%2A> method to convert decimal numbers to <xref:System.UInt32> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToUInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint32/cs/touint32_1.cs#1)]
 [!code-vb[System.Decimal.ToUInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint32/vb/touint32_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Decimal.ToInt64(System.Decimal)" />
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-1323"><paramref name="d" /> 为负数或大于 <see cref="F:System.UInt32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1323"><paramref name="d" /> is negative or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.ToUInt64(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (d As Decimal) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : decimal -&gt; uint64" Usage="System.decimal.ToUInt64 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf2bf-1324">要转换的十进制数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1324">The decimal number to convert.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1325">将指定的 <see cref="T:System.Decimal" /> 的值转换为等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1325">Converts the value of the specified <see cref="T:System.Decimal" /> to the equivalent 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1326">与 <paramref name="d" /> 的值等效的 64 位无符号整数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1326">A 64-bit unsigned integer equivalent to the value of <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1327">返回值为十进制值的整数部分;小数位被截断。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1327">The return value is the integral part of the decimal value; fractional digits are truncated.</span></span>  
  
 <span data-ttu-id="cf2bf-1328">还可以 <xref:System.Decimal> 使用赋值运算符将值转换为64位无符号整数 <xref:System.Decimal.op_Explicit%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1328">You can also convert a <xref:System.Decimal> value to an 64-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator.</span></span> <span data-ttu-id="cf2bf-1329">由于运算符执行收缩转换，因此必须在 c # 中使用强制转换运算符或在 Visual Basic 中使用转换函数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1329">Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-1330">下面的示例使用 <xref:System.Decimal.ToUInt64%2A> 方法将十进制数字转换为 <xref:System.UInt64> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1330">The following example uses the <xref:System.Decimal.ToUInt64%2A> method to convert decimal numbers to <xref:System.UInt64> values.</span></span>  
  
 [!code-csharp[System.Decimal.ToUInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint64/cs/touint64_1.cs#1)]
 [!code-vb[System.Decimal.ToUInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint64/vb/touint64_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="cf2bf-1331"><paramref name="d" /> 为负数或大于 <see cref="F:System.UInt64.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1331"><paramref name="d" /> is negative or greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static decimal Truncate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Truncate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.Truncate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Truncate(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Truncate : decimal -&gt; decimal" Usage="System.decimal.Truncate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf2bf-1332">要截断的十进制数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1332">The decimal number to truncate.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1333">返回指定的 <see cref="T:System.Decimal" /> 的整数位，所有小数位均被放弃。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1333">Returns the integral digits of the specified <see cref="T:System.Decimal" />; any fractional digits are discarded.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1334"><paramref name="d" /> 向零舍入为最接近的整数后的结果。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1334">The result of <paramref name="d" /> rounded toward zero, to the nearest whole number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1335">此方法向 `d` 零舍入到最接近的整数，这对应于放弃小数点后的任何数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1335">This method rounds `d` toward zero, to the nearest whole number, which corresponds to discarding any digits after the decimal point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-1336">下面的代码示例使用 `Truncate` 方法丢弃几个值的小数位数 `Decimal` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1336">The following code example uses the `Truncate` method to discard the fractional digits of several `Decimal` values.</span></span>  
  
 [!code-cpp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CPP/floor_neg_trunc.cpp#1)]
 [!code-csharp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CS/floor_neg_trunc.cs#1)]
 [!code-vb[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/VB/floor_neg_trunc.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = default, IFormatProvider? provider = default);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = Nothing, Optional provider As IFormatProvider = Nothing) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="decimal.TryFormat (destination, charsWritten, format, provider)" />
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = default, IFormatProvider provider = default);" FrameworkAlternate="netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="cf2bf-1337">此方法返回时，此实例的值将设置为字符范围格式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1337">When this method returns, this instance's value formatted as a span of characters.</span></span></param>
        <param name="charsWritten"><span data-ttu-id="cf2bf-1338">此方法返回时，为写入到 <paramref name="destination" /> 的字符数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1338">When this method returns, the number of characters that were written in <paramref name="destination" />.</span></span></param>
        <param name="format"><span data-ttu-id="cf2bf-1339">一个包含字符的范围，这些字符表示定义可接受的 <paramref name="destination" /> 格式的标准或自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1339">A span containing the charactes that represent a standard or custom format string that defines the acceptable format for <paramref name="destination" />.</span></span></param>
        <param name="provider"><span data-ttu-id="cf2bf-1340">一个可选对象，提供有关 <paramref name="destination" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1340">An optional object that supplies culture-specific formatting information for <paramref name="destination" />.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1341">尝试将当前十进制实例的值的格式设置为提供的字符范围。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1341">Tries to format the value of the current decimal instance into the provided span of characters.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1342">如果格式设置成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1342"><see langword="true" /> if the formatting was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetBits">
      <MemberSignature Language="C#" Value="public static bool TryGetBits (decimal d, Span&lt;int&gt; destination, out int valuesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetBits(valuetype System.Decimal d, valuetype System.Span`1&lt;int32&gt; destination, [out] int32&amp; valuesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryGetBits(System.Decimal,System.Span{System.Int32},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetBits (d As Decimal, destination As Span(Of Integer), ByRef valuesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetBits(System::Decimal d, Span&lt;int&gt; destination, [Runtime::InteropServices::Out] int % valuesWritten);" />
      <MemberSignature Language="F#" Value="static member TryGetBits : decimal * Span&lt;int&gt; * int -&gt; bool" Usage="System.decimal.TryGetBits (d, destination, valuesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="destination" Type="System.Span&lt;System.Int32&gt;" Index="1" FrameworkAlternate="net-5.0" />
        <Parameter Name="valuesWritten" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="net-5.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf2bf-1343">要转换的值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1343">The value to convert.</span></span></param>
        <param name="destination"><span data-ttu-id="cf2bf-1344">要用于存储二进制表示形式的范围。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1344">The span into which to store the binary representation.</span></span></param>
        <param name="valuesWritten"><span data-ttu-id="cf2bf-1345">要写入目标的整数的数目。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1345">The number of integers written to the destination.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1346">尝试将 <see cref="T:System.Decimal" /> 的指定实例的值转换为其等效的二进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1346">Tries to convert the value of a specified instance of <see cref="T:System.Decimal" /> to its equivalent binary representation.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1347">如果将十进制的二进制表示形式写入了目标，则为 <see langword="true" />；如果目标不够长，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1347"><see langword="true" /> if the decimal's binary representation was written to the destination; <see langword="false" /> if the destination wasn't long enough.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cf2bf-1348">将数字的字符串表示形式转换为它的等效 <see cref="T:System.Decimal" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1348">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span></span> <span data-ttu-id="cf2bf-1349">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1349">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.Decimal.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.ReadOnlySpan{System.Char},System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * decimal -&gt; bool" Usage="System.decimal.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="result" Type="System.Decimal" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="cf2bf-1350">一个范围，包含表示要转换的数字的字符。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1350">A span containing the characters representing the number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="cf2bf-1351">如果转换成功，此方法返回与 <paramref name="s" /> 中所含数值相当的 <see cref="T:System.Decimal" /> 数；如果转换失败，此方法返回零。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1351">When this method returns, contains the <see cref="T:System.Decimal" /> number that is equivalent to the numeric value contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="cf2bf-1352">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、不是格式符合 <paramref name="style" /> 的数字、表示小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" /> 的数字，表明转换失败。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1352">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not a number in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span> <span data-ttu-id="cf2bf-1353">此参数未经初始化即进行传递；<paramref name="result" /> 中最初提供的任何值都会遭覆盖。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1353">This parameter is passed uininitialized; any value originally supplied in <paramref name="result" /> is overwritten.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1354">使用指定样式和区域性特定格式将数字的范围表示形式转换为其 <see cref="T:System.Decimal" /> 等效项。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1354">Converts the span representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified style and culture-specific format.</span></span> <span data-ttu-id="cf2bf-1355">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1355">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1356">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1356"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.String,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * decimal -&gt; bool" Usage="System.decimal.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Decimal" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="cf2bf-1357">要转换的数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1357">The string representation of the number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="cf2bf-1358">如果转换成功，此方法返回与 <paramref name="s" /> 中所含数值相当的 <see cref="T:System.Decimal" /> 数；如果转换失败，此方法返回零。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1358">When this method returns, contains the <see cref="T:System.Decimal" /> number that is equivalent to the numeric value contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="cf2bf-1359">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、不是有效格式的数字，或者表示的数字小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1359">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not a number in a valid format, or represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span> <span data-ttu-id="cf2bf-1360">此参数未经初始化即进行传递；<paramref name="result" /> 中最初提供的任何值都会遭覆盖。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1360">This parameter is passed uininitialized; any value originally supplied in <paramref name="result" /> is overwritten.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1361">将数字的字符串表示形式转换为它的等效 <see cref="T:System.Decimal" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1361">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent.</span></span> <span data-ttu-id="cf2bf-1362">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1362">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1363">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1363"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1364">此重载与方法的不同之处在于， <xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType> 返回一个布尔值，该值指示分析操作是否成功，而不是返回已分析的数值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1364">This overload differs from the <xref:System.Decimal.Parse%28System.String%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</span></span> <span data-ttu-id="cf2bf-1365">这样，便无需使用异常处理来测试无效的 <xref:System.FormatException> 事件， `s` 也不能成功分析。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1365">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="cf2bf-1366">参数 `s` 包含以下格式的编号：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1366">Parameter `s` contains a number of the form:</span></span>  
  
 <span data-ttu-id="cf2bf-1367">ws表明[数字，] 位数 [. 分式] [ws]</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1367">[ws][sign][digits,]digits[.fractional-digits][ws]</span></span>  
  
 <span data-ttu-id="cf2bf-1368">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1368">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="cf2bf-1369">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1369">The following table describes each element.</span></span>  
  
|<span data-ttu-id="cf2bf-1370">元素</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1370">Element</span></span>|<span data-ttu-id="cf2bf-1371">描述</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1371">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="cf2bf-1372">*ws*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1372">*ws*</span></span>|<span data-ttu-id="cf2bf-1373">可选空白。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1373">Optional white space.</span></span>|  
|<span data-ttu-id="cf2bf-1374">*sign*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1374">*sign*</span></span>|<span data-ttu-id="cf2bf-1375">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1375">An optional sign.</span></span>|  
|<span data-ttu-id="cf2bf-1376">*位数*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1376">*digits*</span></span>|<span data-ttu-id="cf2bf-1377">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1377">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="cf2bf-1378">*,*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1378">*,*</span></span>|<span data-ttu-id="cf2bf-1379">区域性特定的千位分隔符。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1379">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="cf2bf-1380">*.*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1380">*.*</span></span>|<span data-ttu-id="cf2bf-1381">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1381">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="cf2bf-1382">*小数位数*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1382">*fractional-digits*</span></span>|<span data-ttu-id="cf2bf-1383">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1383">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="cf2bf-1384">`s`使用样式对参数进行解释 <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1384">Parameter `s` is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="cf2bf-1385">这意味着允许使用空格和千位分隔符，但不允许货币符号。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1385">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="cf2bf-1386">若要显式定义可在中存在的元素 (如货币符号、千位分隔符和空格) `s` ，请使用 <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType> 方法重载。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1386">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="cf2bf-1387">`s`使用 <xref:System.Globalization.NumberFormatInfo> 为当前系统区域性初始化的对象中的格式设置信息分析参数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1387">Parameter `s` is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="cf2bf-1388">有关详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1388">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="cf2bf-1389">若要使用某些其他指定的区域性的格式设置信息分析字符串，请使用 <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType> 方法重载。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1389">To parse a string using the formatting information of some other specified culture, use the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="cf2bf-1390">如有必要， `s` 将使用舍入到最接近的值舍入值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1390">If necessary, the value of `s` is rounded using rounding to nearest.</span></span>  
  
 <span data-ttu-id="cf2bf-1391"><xref:System.Decimal>对象的精度为29位。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1391">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="cf2bf-1392">如果 `s` 表示的数字的位数超过29个，但包含小数部分并且在和范围内 <xref:System.Decimal.MaxValue> <xref:System.Decimal.MinValue> ，则将使用舍入到最接近的数字对数字进行舍入，而不是截断到29位数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1392">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="cf2bf-1393">在分析操作期间，如果在参数中遇到分隔符 `s` ，并且适用的货币或小数和组分隔符相同，则分析操作将假定分隔符是小数点分隔符，而不是组分隔符。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1393">If during a parse operation a separator is encountered in the `s` parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="cf2bf-1394">有关分隔符的详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> 、、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> 和 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1394">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-1395">下面的示例使用 <xref:System.Decimal.TryParse%28System.String%2CSystem.Decimal%40%29?displayProperty=nameWithType> 方法将数值的字符串表示形式转换为 <xref:System.Decimal> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1395">The following example uses the <xref:System.Decimal.TryParse%28System.String%2CSystem.Decimal%40%29?displayProperty=nameWithType> method to convert the string representations of numeric values to <xref:System.Decimal> values.</span></span> <span data-ttu-id="cf2bf-1396">它假定 en-us 为当前区域性。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1396">It assumes that en-US is the current culture.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.TryParse/cs/TryParse.cs" interactive="try-dotnet-method" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.TryParse/vb/TryParse.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Decimal.Parse" />
        <altmember cref="M:System.Decimal.ToString" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="cf2bf-1397">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1397">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider? provider, out decimal result);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider * decimal -&gt; bool" Usage="System.decimal.TryParse (s, style, provider, result)" />
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out decimal result);" FrameworkAlternate="netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="result" Type="System.Decimal" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="cf2bf-1398">一个范围，包含表示要转换的数字的字符。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1398">A span containing the characters representing the number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="cf2bf-1399">枚举值的一个按位组合，指示 <paramref name="s" /> 所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1399">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="cf2bf-1400">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1400">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span></span></param>
        <param name="provider"><span data-ttu-id="cf2bf-1401">一个对象，它提供有关 <paramref name="s" /> 的区域性特定分析信息。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1401">An object that supplies culture-specific parsing information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="cf2bf-1402">如果转换成功，此方法返回与 <paramref name="s" /> 中所含数值相当的 <see cref="T:System.Decimal" /> 数；如果转换失败，此方法返回零。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1402">When this method returns, contains the <see cref="T:System.Decimal" /> number that is equivalent to the numeric value contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="cf2bf-1403">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、不是格式符合 <paramref name="style" /> 的数字、表示小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" /> 的数字，表明转换失败。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1403">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not a number in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span> <span data-ttu-id="cf2bf-1404">此参数未经初始化即进行传递；<paramref name="result" /> 中最初提供的任何值都会遭覆盖。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1404">This parameter is passed uininitialized; any value originally supplied in <paramref name="result" /> is overwritten.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1405">使用指定样式和区域性特定格式将数字的范围表示形式转换为其 <see cref="T:System.Decimal" /> 等效项。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1405">Converts the span representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified style and culture-specific format.</span></span> <span data-ttu-id="cf2bf-1406">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1406">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1407">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1407"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out decimal result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Decimal&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Decimal % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider * decimal -&gt; bool" Usage="System.decimal.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Decimal" RefType="out" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="cf2bf-1408">要转换的数字的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1408">The string representation of the number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="cf2bf-1409">枚举值的一个按位组合，指示 <paramref name="s" /> 所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1409">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="cf2bf-1410">要指定的一个典型值为 <see cref="F:System.Globalization.NumberStyles.Number" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1410">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Number" />.</span></span></param>
        <param name="provider"><span data-ttu-id="cf2bf-1411">一个对象，它提供有关 <paramref name="s" /> 的区域性特定分析信息。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1411">An object that supplies culture-specific parsing information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="cf2bf-1412">如果转换成功，此方法返回与 <paramref name="s" /> 中所含数值相当的 <see cref="T:System.Decimal" /> 数；如果转换失败，此方法返回零。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1412">When this method returns, contains the <see cref="T:System.Decimal" /> number that is equivalent to the numeric value contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="cf2bf-1413">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、不是格式符合 <paramref name="style" /> 的数字、表示小于 <see cref="F:System.Decimal.MinValue" /> 或大于 <see cref="F:System.Decimal.MaxValue" /> 的数字，表明转换失败。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1413">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not a number in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span> <span data-ttu-id="cf2bf-1414">此参数未经初始化即进行传递；<paramref name="result" /> 中最初提供的任何值都会遭覆盖。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1414">This parameter is passed uininitialized; any value originally supplied in <paramref name="result" /> is overwritten.</span></span></param>
        <summary><span data-ttu-id="cf2bf-1415">使用指定样式和区域性特定格式将数字的字符串表示形式转换为其 <see cref="T:System.Decimal" /> 等效项。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1415">Converts the string representation of a number to its <see cref="T:System.Decimal" /> equivalent using the specified style and culture-specific format.</span></span> <span data-ttu-id="cf2bf-1416">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1416">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="cf2bf-1417">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1417"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf2bf-1418">此重载与方法的不同之处在于， <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 返回一个布尔值，该值指示分析操作是否成功，而不是返回已分析的数值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1418">This overload differs from the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</span></span> <span data-ttu-id="cf2bf-1419">这样，便无需使用异常处理来测试无效的 <xref:System.FormatException> 事件， `s` 也不能成功分析。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1419">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="cf2bf-1420">`style`参数定义允许的参数的格式，以便 `s` 分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1420">The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="cf2bf-1421">它必须是枚举中的位标志的组合 <xref:System.Globalization.NumberStyles> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1421">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="cf2bf-1422"><xref:System.Globalization.NumberStyles>不支持以下成员：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1422">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>  
  
 <span data-ttu-id="cf2bf-1423">根据 style 的值， `s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1423">Depending on the value of style, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="cf2bf-1424">ws[$]表明[数字，] 位数 [. 小数] [e [sign] 数字] [ws]</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1424">[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="cf2bf-1425">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1425">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="cf2bf-1426">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1426">The following table describes each element.</span></span>  
  
|<span data-ttu-id="cf2bf-1427">元素</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1427">Element</span></span>|<span data-ttu-id="cf2bf-1428">描述</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1428">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="cf2bf-1429">*ws*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1429">*ws*</span></span>|<span data-ttu-id="cf2bf-1430">可选空白。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1430">Optional white space.</span></span> <span data-ttu-id="cf2bf-1431">`s`如果包含标志，则空格可以出现在开头 `style` <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1431">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="cf2bf-1432">`s`如果包含标志，则它可以出现在的结尾 `style` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1432">It can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="cf2bf-1433">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1433">A culture-specific currency symbol.</span></span> <span data-ttu-id="cf2bf-1434">其在字符串中的位置由 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> <xref:System.Globalization.NumberFormatInfo> 参数方法返回的对象的或属性定义 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> `provider` 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1434">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> or <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method of the `provider` parameter.</span></span> <span data-ttu-id="cf2bf-1435">`s`如果包含标志，则货币符号可以出现在中 `style` <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1435">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="cf2bf-1436">*sign*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1436">*sign*</span></span>|<span data-ttu-id="cf2bf-1437">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1437">An optional sign.</span></span>|  
|<span data-ttu-id="cf2bf-1438">*位数*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1438">*digits*</span></span>|<span data-ttu-id="cf2bf-1439">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1439">A sequence of digits ranging from 0 to 9.</span></span>|  
|<span data-ttu-id="cf2bf-1440">*.*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1440">*.*</span></span>|<span data-ttu-id="cf2bf-1441">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1441">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="cf2bf-1442">*小数位数*</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1442">*fractional-digits*</span></span>|<span data-ttu-id="cf2bf-1443">介于0到9之间的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1443">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="cf2bf-1444">`style`参数指定参数的允许格式 `s` ，可以是使用按位 "或" 运算组合在一起的一个或多个 <xref:System.Globalization.NumberStyles> 枚举常数。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1444">The `style` parameter specifies the permitted format of the `s` parameter, and can be one or more <xref:System.Globalization.NumberStyles> enumerated constants combined using a bitwise OR operation.</span></span> <span data-ttu-id="cf2bf-1445">如果 `style` 为 null， `s` 则使用样式来解释 <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1445">If `style` is null, `s` is interpreted using the <xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType> style.</span></span>  
  
 <span data-ttu-id="cf2bf-1446">`provider`参数是 <xref:System.IFormatProvider> 一个实现，如 <xref:System.Globalization.NumberFormatInfo> 或 <xref:System.Globalization.CultureInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1446">The `provider` parameter is an <xref:System.IFormatProvider> implementation such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="cf2bf-1447">`provider`参数提供用于分析的特定于区域性的信息。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1447">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="cf2bf-1448">如果 `provider` 为 `null`，则使用当前区域性。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1448">If `provider` is `null`, the thread current culture is used.</span></span>  
  
 <span data-ttu-id="cf2bf-1449"><xref:System.Decimal>对象的精度为29位。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1449">A <xref:System.Decimal> object has 29 digits of precision.</span></span> <span data-ttu-id="cf2bf-1450">如果 `s` 表示的数字的位数超过29个，但包含小数部分并且在和范围内 <xref:System.Decimal.MaxValue> <xref:System.Decimal.MinValue> ，则将使用舍入到最接近的数字对数字进行舍入，而不是截断到29位数字。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1450">If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.</span></span>  
  
 <span data-ttu-id="cf2bf-1451">如果在分析操作过程中在参数中遇到分隔符 `s` ，并且适用的货币或小数分隔符和组分隔符相同，则分析操作将假定分隔符是小数点分隔符，而不是组分隔符。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1451">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="cf2bf-1452">有关分隔符的详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> 、、 <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> 和 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> 。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1452">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf2bf-1453">下面的示例演示如何使用 <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29> 方法来分析具有特定样式的数字的字符串表示形式，并使用特定区域性的约定进行格式设置。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1453">The following example demonstrates the use of the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29> method to parse the string representation of a number that has a particular style and is formatted using the conventions of a particular culture.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.TryParse/cs/TryParse.cs" interactive="try-dotnet-method" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.TryParse/vb/TryParse.vb" id="Snippet2":::

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf2bf-1454"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1454"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="cf2bf-1455">- 或 -</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1455">-or-</span></span> 
 <span data-ttu-id="cf2bf-1456"><paramref name="style" /> 是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 值。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1456"><paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span></span></exception>
        <altmember cref="Overload:System.Decimal.Parse" />
        <altmember cref="M:System.Decimal.ToString" />
        <related type="Article" href="/dotnet/standard/base-types/parsing-numeric"><span data-ttu-id="cf2bf-1457">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1457">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static readonly decimal Zero;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Decimal Zero" />
      <MemberSignature Language="DocId" Value="F:System.Decimal.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Zero As Decimal " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Decimal Zero;" />
      <MemberSignature Language="F#" Value=" staticval mutable Zero : decimal" Usage="System.decimal.Zero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf2bf-1458">表示数字零 (0)。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1458">Represents the number zero (0).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf2bf-1459">下面的代码示例演示如何使用 `Zero` 字段。</span><span class="sxs-lookup"><span data-stu-id="cf2bf-1459">The following code example illustrates the use of the `Zero` field.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb" id="Snippet1"::: 
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Decimal.One" />
        <altmember cref="F:System.Decimal.MinusOne" />
        <altmember cref="F:System.Decimal.MaxValue" />
        <altmember cref="F:System.Decimal.MinValue" />
      </Docs>
    </Member>
  </Members>
</Type>
