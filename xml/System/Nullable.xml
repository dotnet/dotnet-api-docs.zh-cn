<Type Name="Nullable" FullName="System.Nullable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="752c312827b7c80249078c3cd6100d62544923d0" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86601066" /></Metadata><TypeSignature Language="C#" Value="public static class Nullable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Nullable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Nullable" />
  <TypeSignature Language="VB.NET" Value="Public Class Nullable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Nullable abstract sealed" />
  <TypeSignature Language="F#" Value="type Nullable = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="25940-101">支持可分配有 <see langword="null" /> 的值类型。</span><span class="sxs-lookup"><span data-stu-id="25940-101">Supports a value type that can be assigned <see langword="null" />.</span></span> <span data-ttu-id="25940-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="25940-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25940-103">如果可以为类型赋值或赋值，则可以为 null `null` ，这意味着类型没有任何值。</span><span class="sxs-lookup"><span data-stu-id="25940-103">A type is said to be nullable if it can be assigned a value or can be assigned `null`, which means the type has no value whatsoever.</span></span> <span data-ttu-id="25940-104">默认情况下，所有引用类型（如 <xref:System.String> ）都可以为 null，但所有值类型（如 <xref:System.Int32> ）都不是。</span><span class="sxs-lookup"><span data-stu-id="25940-104">By default, all reference types, such as <xref:System.String>, are nullable, but all value types, such as <xref:System.Int32>, are not.</span></span>  
  
 <span data-ttu-id="25940-105">在 c # 和 Visual Basic 中，通过在 `?` 值类型后使用表示法将值类型标记为可为 null。</span><span class="sxs-lookup"><span data-stu-id="25940-105">In C# and Visual Basic, you mark a value type as nullable by using the `?` notation after the value type.</span></span> <span data-ttu-id="25940-106">例如， `int?` 在 c # 或 `Integer?` in Visual Basic 声明可分配的整数值类型 `null` 。</span><span class="sxs-lookup"><span data-stu-id="25940-106">For example, `int?` in C# or `Integer?` in Visual Basic declares an integer value type that can be assigned `null`.</span></span>  
  
 <span data-ttu-id="25940-107"><xref:System.Nullable>类提供对结构的互补支持 <xref:System.Nullable%601> 。</span><span class="sxs-lookup"><span data-stu-id="25940-107">The <xref:System.Nullable> class provides complementary support for the <xref:System.Nullable%601> structure.</span></span> <span data-ttu-id="25940-108"><xref:System.Nullable>类支持获取可以为 null 的类型的基础类型，以及针对其基础值类型不支持泛型比较和相等运算的可以为 null 的类型对的比较和相等运算。</span><span class="sxs-lookup"><span data-stu-id="25940-108">The <xref:System.Nullable> class supports obtaining the underlying type of a nullable type, and comparison and equality operations on pairs of nullable types whose underlying value type does not support generic comparison and equality operations.</span></span>  
  
## <a name="boxing-and-unboxing"></a><span data-ttu-id="25940-109">装箱和取消装箱</span><span class="sxs-lookup"><span data-stu-id="25940-109">Boxing and Unboxing</span></span>  
 <span data-ttu-id="25940-110">如果将可为 null 的类型装箱，公共语言运行时将自动装箱对象的基础值 <xref:System.Nullable%601> ，而不是 <xref:System.Nullable%601> 对象本身。</span><span class="sxs-lookup"><span data-stu-id="25940-110">When a nullable type is boxed, the common language runtime automatically boxes the underlying value of the <xref:System.Nullable%601> object, not the <xref:System.Nullable%601> object itself.</span></span> <span data-ttu-id="25940-111">也就是说，如果 <xref:System.Nullable%601.HasValue%2A> 属性为，则 `true` 属性的内容 <xref:System.Nullable%601.Value%2A> 为装箱。</span><span class="sxs-lookup"><span data-stu-id="25940-111">That is, if the <xref:System.Nullable%601.HasValue%2A> property is `true`, the contents of the <xref:System.Nullable%601.Value%2A> property is boxed.</span></span> <span data-ttu-id="25940-112">如果 `HasValue` 属性为 `false` ， `null` 则为装箱。</span><span class="sxs-lookup"><span data-stu-id="25940-112">If the `HasValue` property is `false`, `null` is boxed.</span></span> <span data-ttu-id="25940-113">如果可以为 null 的类型的基础值为取消装箱，则公共语言运行时将创建一个新的结构，该 <xref:System.Nullable%601> 结构已初始化为基础值。</span><span class="sxs-lookup"><span data-stu-id="25940-113">When the underlying value of a nullable type is unboxed, the common language runtime creates a new <xref:System.Nullable%601> structure initialized to the underlying value.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Nullable`1" />
    <related type="Article" href="/dotnet/csharp/language-reference/builtin-types/nullable-value-types"><span data-ttu-id="25940-114">可以为 null 的类型（C# 编程指南）</span><span class="sxs-lookup"><span data-stu-id="25940-114">Nullable Types (C# Programming Guide)</span></span></related>
    <related type="Article" href="/dotnet/visual-basic/programming-guide/language-features/data-types/nullable-value-types"><span data-ttu-id="25940-115">可以为 Null 的值类型 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="25940-115">Nullable Value Types (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Compare&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int Compare&lt;T&gt; (T? n1, T? n2) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Nullable`1&lt;!!T&gt; n1, valuetype System.Nullable`1&lt;!!T&gt; n2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable.Compare``1(System.Nullable{``0},System.Nullable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare(Of T As Structure) (n1 As Nullable(Of T), n2 As Nullable(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static int Compare(Nullable&lt;T&gt; n1, Nullable&lt;T&gt; n2);" />
      <MemberSignature Language="F#" Value="static member Compare : Nullable&lt;'T (requires 'T : struct)&gt; * Nullable&lt;'T (requires 'T : struct)&gt; -&gt; int (requires 'T : struct)" Usage="System.Nullable.Compare (n1, n2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="n1" Type="System.Nullable&lt;T&gt;" />
        <Parameter Name="n2" Type="System.Nullable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="25940-116"><paramref name="n1" /> 和 <paramref name="n2" /> 参数的基础值类型。</span><span class="sxs-lookup"><span data-stu-id="25940-116">The underlying value type of the <paramref name="n1" /> and <paramref name="n2" /> parameters.</span></span></typeparam>
        <param name="n1"><span data-ttu-id="25940-117"><see cref="T:System.Nullable`1" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="25940-117">A <see cref="T:System.Nullable`1" /> object.</span></span></param>
        <param name="n2"><span data-ttu-id="25940-118"><see cref="T:System.Nullable`1" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="25940-118">A <see cref="T:System.Nullable`1" /> object.</span></span></param>
        <summary><span data-ttu-id="25940-119">比较两个 <see cref="T:System.Nullable`1" /> 对象的相对值。</span><span class="sxs-lookup"><span data-stu-id="25940-119">Compares the relative values of two <see cref="T:System.Nullable`1" /> objects.</span></span></summary>
        <returns><span data-ttu-id="25940-120">一个整数，指示 <paramref name="n1" /> 和 <paramref name="n2" /> 参数的相对值。</span><span class="sxs-lookup"><span data-stu-id="25940-120">An integer that indicates the relative values of the <paramref name="n1" /> and <paramref name="n2" /> parameters.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="25940-121">返回值</span><span class="sxs-lookup"><span data-stu-id="25940-121">Return Value</span></span> 
 </term><description> <span data-ttu-id="25940-122">说明</span><span class="sxs-lookup"><span data-stu-id="25940-122">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="25940-123">小于零</span><span class="sxs-lookup"><span data-stu-id="25940-123">Less than zero</span></span> 
 </term><description> <span data-ttu-id="25940-124">的 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <paramref name="n1" /> <see langword="false" /> ，的属性为 <see cref="P:System.Nullable`1.HasValue" /> ，或者和的属性为 <paramref name="n2" /> <see langword="true" /> <see cref="P:System.Nullable`1.HasValue" /> <paramref name="n1" /> <paramref name="n2" /> <see langword="true" /> ，并且的属性的值小于的属性的 <see cref="P:System.Nullable`1.Value" /> <paramref name="n1" /> 值 <see cref="P:System.Nullable`1.Value" /> <paramref name="n2" /> 。</span><span class="sxs-lookup"><span data-stu-id="25940-124">The <see cref="P:System.Nullable`1.HasValue" /> property for <paramref name="n1" /> is <see langword="false" />, and the <see cref="P:System.Nullable`1.HasValue" /> property for <paramref name="n2" /> is <see langword="true" />, or the <see cref="P:System.Nullable`1.HasValue" /> properties for <paramref name="n1" /> and <paramref name="n2" /> are <see langword="true" />, and the value of the <see cref="P:System.Nullable`1.Value" /> property for <paramref name="n1" /> is less than the value of the <see cref="P:System.Nullable`1.Value" /> property for <paramref name="n2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="25940-125">零</span><span class="sxs-lookup"><span data-stu-id="25940-125">Zero</span></span> 
 </term><description> <span data-ttu-id="25940-126"><see cref="P:System.Nullable`1.HasValue" />和的属性为 <paramref name="n1" /> ，或者和的属性为 <paramref name="n2" /> <see langword="false" /> <see cref="P:System.Nullable`1.HasValue" /> <paramref name="n1" /> <paramref name="n2" /> <see langword="true" /> ，并且的属性的值 <see cref="P:System.Nullable`1.Value" /> 等于 <paramref name="n1" /> <see cref="P:System.Nullable`1.Value" /> <paramref name="n2" /> 的属性的值。</span><span class="sxs-lookup"><span data-stu-id="25940-126">The <see cref="P:System.Nullable`1.HasValue" /> properties for <paramref name="n1" /> and <paramref name="n2" /> are <see langword="false" />, or the <see cref="P:System.Nullable`1.HasValue" /> properties for <paramref name="n1" /> and <paramref name="n2" /> are <see langword="true" />, and the value of the <see cref="P:System.Nullable`1.Value" /> property for <paramref name="n1" /> is equal to the value of the <see cref="P:System.Nullable`1.Value" /> property for <paramref name="n2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="25940-127">大于零</span><span class="sxs-lookup"><span data-stu-id="25940-127">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="25940-128">的 <see cref="P:System.Nullable`1.HasValue" /> 属性为 <paramref name="n1" /> <see langword="true" /> ，的属性为 <see cref="P:System.Nullable`1.HasValue" /> ，或者和的属性为 <paramref name="n2" /> <see langword="false" /> <see cref="P:System.Nullable`1.HasValue" /> <paramref name="n1" /> <paramref name="n2" /> <see langword="true" /> ，并且的属性的值大于的属性的 <see cref="P:System.Nullable`1.Value" /> <paramref name="n1" /> 值 <see cref="P:System.Nullable`1.Value" /> <paramref name="n2" /> 。</span><span class="sxs-lookup"><span data-stu-id="25940-128">The <see cref="P:System.Nullable`1.HasValue" /> property for <paramref name="n1" /> is <see langword="true" />, and the <see cref="P:System.Nullable`1.HasValue" /> property for <paramref name="n2" /> is <see langword="false" />, or the <see cref="P:System.Nullable`1.HasValue" /> properties for <paramref name="n1" /> and <paramref name="n2" /> are <see langword="true" />, and the value of the <see cref="P:System.Nullable`1.Value" /> property for <paramref name="n1" /> is greater than the value of the <see cref="P:System.Nullable`1.Value" /> property for <paramref name="n2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Equals&lt;T&gt; (T? n1, T? n2) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Nullable`1&lt;!!T&gt; n1, valuetype System.Nullable`1&lt;!!T&gt; n2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable.Equals``1(System.Nullable{``0},System.Nullable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals(Of T As Structure) (n1 As Nullable(Of T), n2 As Nullable(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static bool Equals(Nullable&lt;T&gt; n1, Nullable&lt;T&gt; n2);" />
      <MemberSignature Language="F#" Value="static member Equals : Nullable&lt;'T (requires 'T : struct)&gt; * Nullable&lt;'T (requires 'T : struct)&gt; -&gt; bool (requires 'T : struct)" Usage="System.Nullable.Equals (n1, n2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="n1" Type="System.Nullable&lt;T&gt;" />
        <Parameter Name="n2" Type="System.Nullable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="25940-129"><paramref name="n1" /> 和 <paramref name="n2" /> 参数的基础值类型。</span><span class="sxs-lookup"><span data-stu-id="25940-129">The underlying value type of the <paramref name="n1" /> and <paramref name="n2" /> parameters.</span></span></typeparam>
        <param name="n1"><span data-ttu-id="25940-130"><see cref="T:System.Nullable`1" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="25940-130">A <see cref="T:System.Nullable`1" /> object.</span></span></param>
        <param name="n2"><span data-ttu-id="25940-131"><see cref="T:System.Nullable`1" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="25940-131">A <see cref="T:System.Nullable`1" /> object.</span></span></param>
        <summary><span data-ttu-id="25940-132">指示所指定的两个 <see cref="T:System.Nullable`1" /> 对象是否相等。</span><span class="sxs-lookup"><span data-stu-id="25940-132">Indicates whether two specified <see cref="T:System.Nullable`1" /> objects are equal.</span></span></summary>
        <returns><span data-ttu-id="25940-133">如果 <paramref name="n1" /> 参数等于 <paramref name="n2" /> 参数，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="25940-133"><see langword="true" /> if the <paramref name="n1" /> parameter is equal to the <paramref name="n2" /> parameter; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="25940-134">返回值取决于所比较的两个参数的 <see cref="P:System.Nullable`1.HasValue" /> 和 <see cref="P:System.Nullable`1.Value" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="25940-134">The return value depends on the <see cref="P:System.Nullable`1.HasValue" /> and <see cref="P:System.Nullable`1.Value" /> properties of the two parameters that are compared.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="25940-135">返回值</span><span class="sxs-lookup"><span data-stu-id="25940-135">Return Value</span></span> 
 </term><description> <span data-ttu-id="25940-136">说明</span><span class="sxs-lookup"><span data-stu-id="25940-136">Description</span></span> 
 </description></listheader><item><term><see langword="true" /></term><description> <span data-ttu-id="25940-137"><see cref="P:System.Nullable`1.HasValue" />和的属性为 <paramref name="n1" /> ，或者和的属性为 <paramref name="n2" /> <see langword="false" /> <see cref="P:System.Nullable`1.HasValue" /> <paramref name="n1" /> <paramref name="n2" /> <see langword="true" /> ，并且参数的属性 <see cref="P:System.Nullable`1.Value" /> 是相等的。</span><span class="sxs-lookup"><span data-stu-id="25940-137">The <see cref="P:System.Nullable`1.HasValue" /> properties for <paramref name="n1" /> and <paramref name="n2" /> are <see langword="false" />, or the <see cref="P:System.Nullable`1.HasValue" /> properties for <paramref name="n1" /> and <paramref name="n2" /> are <see langword="true" />, and the <see cref="P:System.Nullable`1.Value" /> properties of the parameters are equal.</span></span>  
  
 </description></item><item><term><see langword="false" /></term><description> <span data-ttu-id="25940-138"><see cref="P:System.Nullable`1.HasValue" />属性适用 <see langword="true" /> 于一个参数，对于 <see langword="false" /> 另一个参数，和的属性为，并且参数的属性不 <see cref="P:System.Nullable`1.HasValue" /> <paramref name="n1" /> <paramref name="n2" /> <see langword="true" /> <see cref="P:System.Nullable`1.Value" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="25940-138">The <see cref="P:System.Nullable`1.HasValue" /> property is <see langword="true" /> for one parameter and <see langword="false" /> for the other parameter, or the <see cref="P:System.Nullable`1.HasValue" /> properties for <paramref name="n1" /> and <paramref name="n2" /> are <see langword="true" />, and the <see cref="P:System.Nullable`1.Value" /> properties of the parameters are unequal.</span></span>  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnderlyingType">
      <MemberSignature Language="C#" Value="public static Type GetUnderlyingType (Type nullableType);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetUnderlyingType(class System.Type nullableType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Nullable.GetUnderlyingType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnderlyingType (nullableType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetUnderlyingType(Type ^ nullableType);" />
      <MemberSignature Language="F#" Value="static member GetUnderlyingType : Type -&gt; Type" Usage="System.Nullable.GetUnderlyingType nullableType" />
      <MemberSignature Language="C#" Value="public static Type? GetUnderlyingType (Type nullableType);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nullableType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="nullableType"><span data-ttu-id="25940-139">一个 <see cref="T:System.Type" /> 对象，描述关闭的泛型可以为 null 的类型。</span><span class="sxs-lookup"><span data-stu-id="25940-139">A <see cref="T:System.Type" /> object that describes a closed generic nullable type.</span></span></param>
        <summary><span data-ttu-id="25940-140">返回指定可以为 null 的类型的基础类型参数。</span><span class="sxs-lookup"><span data-stu-id="25940-140">Returns the underlying type argument of the specified nullable type.</span></span></summary>
        <returns><span data-ttu-id="25940-141">如果 <paramref name="nullableType" /> 参数为关闭的泛型可以为 null 的类型，则为 <paramref name="nullableType" /> 参数的类型变量；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="25940-141">The type argument of the <paramref name="nullableType" /> parameter, if the <paramref name="nullableType" /> parameter is a closed generic nullable type; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25940-142">泛型类型定义是一种类型声明，如 <xref:System.Nullable%601> 包含类型参数列表的，类型参数列表声明了一个或多个类型参数。</span><span class="sxs-lookup"><span data-stu-id="25940-142">A generic type definition is a type declaration, such as <xref:System.Nullable%601>, that contains a type parameter list, and the type parameter list declares one or more type parameters.</span></span> <span data-ttu-id="25940-143">封闭式泛型类型是一种类型声明，其中为类型参数指定了特定类型。</span><span class="sxs-lookup"><span data-stu-id="25940-143">A closed generic type is a type declaration where a particular type is specified for a type parameter.</span></span>  
  
 <span data-ttu-id="25940-144">例如，如果 `nullableType` 参数是 c # 中的的类型 `Nullable<Int32>` (`Nullable(Of Int32)` Visual Basic) 中，则返回值是 <xref:System.Int32> (的类型，即封闭式泛型类型的类型参数) 。</span><span class="sxs-lookup"><span data-stu-id="25940-144">For example, if the `nullableType` parameter is the type of `Nullable<Int32>` in C# (`Nullable(Of Int32)` in Visual Basic), the return value is the type of <xref:System.Int32> (that is, the type argument of the closed generic type).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="25940-145">下面的代码示例定义了一个方法，该方法的返回值的类型为 <xref:System.Nullable%601> <xref:System.Int32> 。</span><span class="sxs-lookup"><span data-stu-id="25940-145">The following code example defines a method whose return value is of type <xref:System.Nullable%601> of <xref:System.Int32>.</span></span> <span data-ttu-id="25940-146">此代码示例使用 <xref:System.Nullable.GetUnderlyingType%2A> 方法来显示返回值的类型参数。</span><span class="sxs-lookup"><span data-stu-id="25940-146">The code example uses the <xref:System.Nullable.GetUnderlyingType%2A> method to display the type argument of the return value.</span></span>  
  
 [!code-csharp[system.nullable_GetUnderlyingType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullable_GetUnderlyingType/cs/gut.cs#1)]
 [!code-vb[system.nullable_GetUnderlyingType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullable_GetUnderlyingType/vb/gut.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="25940-147"><paramref name="nullableType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="25940-147"><paramref name="nullableType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
